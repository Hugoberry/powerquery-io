{
  "Access.Database_Documentation.Name": {
    "message": "Access.Database"
  },
  "Access.Database_Documentation.Description": {
    "message": "Retourne une représentation structurelle d'une base de données Access."
  },
  "Access.Database_Documentation.LongDescription": {
    "message": "Retourne une représentation structurelle d'une base de données Access, <code>database</code>. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...], par exemple."
  },
  "Access.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "AmazonAthena.Databases_Documentation.Name": {
    "message": "Amazon Athena"
  },
  "AmazonAthena.Databases_Documentation.LongDescription": {
    "message": "This function sends basic authentication info"
  },
  "AnalysisServices.Databases_Documentation.Name": {
    "message": "AnalysisServices.Databases"
  },
  "AnalysisServices.Databases_Documentation.Description": {
    "message": "Retourne les bases de données Analysis Services sur un hôte particulier."
  },
  "AnalysisServices.Databases_Documentation.LongDescription": {
    "message": "Retourne les bases de données sur une instance d'Analysis Services, <code>server</code>. Vous pouvez indiquer un paramètre d'enregistrement facultatif, <code>options</code>, pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : Valeur logique qui indique si les types sp&#233;cifi&#233;s dans le mod&#232;le multidimensionnel ou tabulaire sont utilis&#233;s pour les types des colonnes de mesure ajout&#233;es. Quand sa valeur est false, le type &#171;&#160;number&#160;&#187; est utilis&#233; pour toutes les colonnes de mesure. La valeur par d&#233;faut de cette option est false.</li>\r\n<li><code>Culture</code> : Nom de culture sp&#233;cifiant la culture des donn&#233;es. Correspond &#224; la propri&#233;t&#233; de cha&#238;ne de connexion &#171;&#160;Locale Identifier&#160;&#187;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>SubQueries</code> : Nombre (0, 1 ou 2) qui d&#233;finit la valeur de la propri&#233;t&#233; &#171;&#160;SubQueries&#160;&#187; dans la cha&#238;ne de connexion. Il contr&#244;le le comportement des membres calcul&#233;s dans les sous-s&#233;lections ou les sous-cubes. (La valeur par d&#233;faut est&#160;2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    "
  },
  "AnalysisServices.Databases_Documentation.Category": {
    "message": "Accessing data"
  },
  "Asana.Tables_Documentation.Name": {
    "message": "Asana"
  },
  "Asana.Tables_Documentation.LongDescription": {
    "message": "Returns a table with Asana task data"
  },
  "AssembleViews.Contents_Documentation.Name": {
    "message": "Assemble Views"
  },
  "AssembleViews.Contents_Documentation.LongDescription": {
    "message": "Access views created within Assemble Insight"
  },
  "AssembleViews.Feed_Documentation.Name": {
    "message": "Assemble Views"
  },
  "AssembleViews.Feed_Documentation.LongDescription": {
    "message": "Access views created within Assemble Insight"
  },
  "AtScale.Cubes_Documentation.Name": {
    "message": "Cubes AtScale"
  },
  "AtScale.Cubes_Documentation.Caption": {
    "message": "AtScale"
  },
  "AtScale.Cubes_Documentation.Description": {
    "message": "Données DirectQuery/d'importation d'un cube AtScale."
  },
  "AtScale.Cubes_Documentation.LongDescription": {
    "message": "\r\nRetourne les données d'un cube AtScale sur le serveur <code>server</code>. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour contrôler les options suivantes :\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code> : Valeur logique indiquant si les types spécifiés dans le modèle tabulaire ou multidimensionnel sont utilisés pour les types des colonnes de mesure ajoutées. Si la valeur est false, le type « number » est utilisé pour toutes les colonnes de mesure. La valeur par défaut de cette option est false.</li>\r\n        <li><code>CommandTimeout</code> : Durée (en secondes) qui contrôle le temps d'exécution de la requête côté serveur avant qu'elle ne soit annulée. La valeur par défaut dépend du pilote. </li>\r\n        <li><code>ConnectionTimeout</code> : Durée (en secondes) qui contrôle le temps d'attente avant abandon d'une tentative de connexion au serveur. La valeur par défaut dépend du pilote. </li>\r\n\r\n</ul>\r\nLe paramètre d'enregistrement est spécifié sous la forme [option1 = value1, option2 = value2...]."
  },
  "AtScale.Cubes_Documentation.Examples_Description": {
    "message": "Liste les données d'un cube AtScale."
  },
  "AtScale.Cubes_Documentation.Examples_Code": {
    "message": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
  },
  "AutodeskConstructionCloud.Contents_Documentation.Name": {
    "message": "Autodesk Construction Cloud"
  },
  "AutodeskConstructionCloud.Feed_Documentation.Name": {
    "message": "Autodesk Construction Cloud"
  },
  "AzureDataExplorer.Contents_Documentation.Description": {
    "message": "Importe des données à partir d’Azure Data Explorer (Kusto)"
  },
  "AzureDataExplorer.Contents_Documentation.DisplayName": {
    "message": "Azure Data Explorer (Kusto)"
  },
  "AzureDataExplorer.Contents_Documentation.Caption": {
    "message": "AzureDataExplorer.Contents"
  },
  "AzureDataExplorer.Contents_Documentation.Name": {
    "message": "Azure Data Explorer (Kusto)"
  },
  "AzureDataExplorer.Contents_Documentation.LongDescription": {
    "message": "Importe des données à partir de votre instance Azure Data Explorer (Kusto)"
  },
  "AzureDataExplorer.Contents_Documentation.Examples_0_Description": {
    "message": "Retourne une table d'informations sur les événements Storm"
  },
  "AzureDataExplorer.Contents_Documentation.Examples_0_Code": {
    "message": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])"
  },
  "AzureDataExplorer.Contents_Documentation.Examples_0_Result": {
    "message": "Table avec des événements Storm provenant de la base de données « Samples » dans le cluster « help »"
  },
  "AzureDevOpsServer.AccountContents_Documentation.Description": {
    "message": "Entrez l'URL de votre service Azure DevOps Analytics."
  },
  "AzureDevOpsServer.AccountContents_Documentation.DisplayName": {
    "message": "VSTS"
  },
  "AzureDevOpsServer.AccountContents_Documentation.Caption": {
    "message": "VSTS.AccountContents"
  },
  "AzureDevOpsServer.AccountContents_Documentation.Name": {
    "message": "VSTS.AccountContents"
  },
  "AzureDevOpsServer.AccountContents_Documentation.LongDescription": {
    "message": "Retourne le contenu téléchargé à partir de l'URL du service Azure DevOps Analytics sous forme de valeur binaire. Cette fonction utilise des informations d'identification différentes pour chaque organisation."
  },
  "AzureDevOpsServer.Feed_Documentation.Description": {
    "message": "Flux Azure DevOps Services"
  },
  "AzureDevOpsServer.Feed_Documentation.DisplayName": {
    "message": "Flux Azure DevOps Services"
  },
  "AzureDevOpsServer.Feed_Documentation.Caption": {
    "message": "VSTS.Feed"
  },
  "AzureDevOpsServer.Feed_Documentation.Name": {
    "message": "VSTS.Feed"
  },
  "AzureDevOpsServer.Feed_Documentation.LongDescription": {
    "message": "Retourne une table de flux OData offerts par Azure DevOps."
  },
  "AzureEnterprise.Tables_Documentation.Caption": {
    "message": ""
  },
  "AzureEnterprise.Tables_Documentation.Description": {
    "message": "Entrer l'URL du point de terminaison de l'API REST Azure Enterprise associé à votre inscription"
  },
  "AzureEnterprise.Tables_Documentation.DisplayName": {
    "message": ""
  },
  "AzureEnterprise.Tables_Documentation.LongDescription": {
    "message": "Retourne la liste des rapports et des mois disponible à partir de l'API Azure Enterprise"
  },
  "AzureEnterprise.Tables_Documentation.Name": {
    "message": "Importer des données d'Azure Enterprise"
  },
  "AzureEnterprise.Tables_Documentation.Examples_0_Description": {
    "message": "Utilisation de la fonction AzureEnterprise.Tables et accès à une valeur particulière pour obtenir les résultats."
  },
  "AzureEnterprise.Tables_Documentation.Examples_0_Code": {
    "message": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents"
  },
  "AzureEnterprise.Tables_Documentation.Examples_0_Result": {
    "message": "Table"
  },
  "AzureSpark.Tables_Documentation.Name": {
    "message": "Azure HDInsight Spark"
  },
  "AzureSpark.Tables_Documentation.Caption": {
    "message": "Spark"
  },
  "AzureSpark.Tables_Documentation.Description": {
    "message": "Répertoriez les tables dans une instance d'Azure Spark."
  },
  "AzureSpark.Tables_Documentation.LongDescription": {
    "message": "Répertoriez les tables dans une instance d'Azure Spark."
  },
  "AzureSpark.Tables_Documentation.Examples_0_Description": {
    "message": "Répertoriez les tables dans une instance d'Azure Spark."
  },
  "AzureSpark.Tables_Documentation.Examples_0_Code": {
    "message": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
  },
  "AzureStorage.Blobs_Documentation.Name": {
    "message": "AzureStorage.Blobs"
  },
  "AzureStorage.Blobs_Documentation.Description": {
    "message": "Retourne une table de navigation contenant les conteneurs trouvés dans le compte spécifié à partir d'un coffre de stockage Azure."
  },
  "AzureStorage.Blobs_Documentation.LongDescription": {
    "message": "Retourne une table de navigation contenant une ligne pour chaque conteneur trouvé pour l'URL du compte, <code>account</code>, à partir d'un coffre de stockage Azure. Chaque ligne contient un lien vers les objets blob du conteneur. Vous pouvez spécifier <code>options</code> pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>BlockSize</code> : Nombre d&#39;octets &#224; lire avant d&#39;attendre le consommateur de donn&#233;es. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>RequestSize</code> : Nombre d&#39;octets &#224; lire dans une requ&#234;te HTTP unique sur le serveur. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>ConcurrentRequests</code> : L&#39;option ConcurrentRequests sp&#233;cifie le nombre de demandes &#224; effectuer en parall&#232;le, ce qui permet d&#39;acc&#233;l&#233;rer le t&#233;l&#233;chargement des donn&#233;es au d&#233;triment de l&#39;utilisation de la m&#233;moire. La m&#233;moire n&#233;cessaire est &#233;gale &#224; (ConcurrentRequest * RequestSize). La valeur par d&#233;faut est&#160;16.</li>\r\n</ul>\r\n"
  },
  "AzureStorage.Blobs_Documentation.Category": {
    "message": "Accessing data"
  },
  "AzureStorage.DataLake_Documentation.Name": {
    "message": "AzureStorage.DataLake"
  },
  "AzureStorage.DataLake_Documentation.Description": {
    "message": "Retourne une table de navigation contenant les documents trouvés dans le conteneur spécifié et ses sous-dossiers à partir d'Azure Data Lake Storage."
  },
  "AzureStorage.DataLake_Documentation.LongDescription": {
    "message": "Retourne une table de navigation contenant les documents trouvés dans le conteneur spécifié et ses sous-dossiers à l'URL de compte, <code>endpoint</code>, à partir d'un système de fichiers Azure Data Lake Storage. Vous pouvez spécifier <code>options</code> pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>BlockSize</code> : Nombre d&#39;octets &#224; lire avant d&#39;attendre le consommateur de donn&#233;es. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>RequestSize</code> : Nombre d&#39;octets &#224; lire dans une requ&#234;te HTTP unique sur le serveur. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>ConcurrentRequests</code> : L&#39;option ConcurrentRequests sp&#233;cifie le nombre de demandes &#224; effectuer en parall&#232;le, ce qui permet d&#39;acc&#233;l&#233;rer le t&#233;l&#233;chargement des donn&#233;es au d&#233;triment de l&#39;utilisation de la m&#233;moire. La m&#233;moire n&#233;cessaire est &#233;gale &#224; (ConcurrentRequest * RequestSize). La valeur par d&#233;faut est&#160;16.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui contr&#244;le si les fichiers sont retourn&#233;s dans une vue de r&#233;pertoire de type arborescence ou dans une liste plate. La valeur par d&#233;faut est false.</li>\r\n</ul>\r\n"
  },
  "AzureStorage.DataLake_Documentation.Category": {
    "message": "Accessing data"
  },
  "AzureStorage.Tables_Documentation.Name": {
    "message": "AzureStorage.Tables"
  },
  "AzureStorage.Tables_Documentation.Description": {
    "message": "Retourne une table de navigation avec les tables trouvées dans le compte spécifié à partir d'un coffre de stockage Windows Azure."
  },
  "AzureStorage.Tables_Documentation.LongDescription": {
    "message": "Retourne une table de navigation contenant une ligne pour chaque table trouvée à l’URL de compte <code>account</code> à partir d’un coffre de stockage Azure. Chaque ligne contient un lien vers la table Azure. Le paramètre d’enregistrement facultatif <code>options</code> peut être fourni pour spécifier des propriétés supplémentaires. L’enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>Timeout</code> : Dur&#233;e qui contr&#244;le le temps d’attente avant l’abandon de la demande envoy&#233;e au serveur. La valeur par d&#233;faut est propre &#224; la source.</li>\r\n</ul>\r\n"
  },
  "AzureStorage.Tables_Documentation.Category": {
    "message": "Accessing data"
  },
  "AzureTimeSeriesInsights.Contents_Documentation.Name": {
    "message": "Azure Time Series Insights"
  },
  "AzureTrino.Contents_Documentation.Name": {
    "message": "Azure HDInsight sur AKS Trino"
  },
  "BI360.Contents_Documentation.Name": {
    "message": "Solver"
  },
  "BI360.Contents_Documentation.FieldDescription": {
    "message": "Navigation table"
  },
  "BI360.Contents_Documentation.LongDescription": {
    "message": "Retrieves a Navigation Table populated with the enabled tables for a given token"
  },
  "BIConnector.Contents_Documentation.Description": {
    "message": "Enter connection information"
  },
  "BIConnector.Contents_Documentation.DisplayName": {
    "message": "BI Connector"
  },
  "BIConnector.Contents_Documentation.Name": {
    "message": "BI Connector"
  },
  "BIConnector.Contents_Documentation.Caption": {
    "message": "BI Connector"
  },
  "BQL.Query_Documentation.Name": {
    "message": "Bloomberg Data and Analytics  v1.0.17"
  },
  "BQL.Query_Documentation.Description": {
    "message": "Utilisé pour récupérer des données Bloomberg"
  },
  "Cdm.Contents_Documentation.Name": {
    "message": "Cdm.Contents"
  },
  "Cdm.Contents_Documentation.Description": {
    "message": "Cdm.Contents"
  },
  "Cdm.Contents_Documentation.LongDescription": {
    "message": "Cette fonction n'est pas disponible parce qu'elle nécessite .NET 4.5."
  },
  "Cdm.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Cds.Entities_Documentation.Name": {
    "message": "Common Data Service (hérité)"
  },
  "Cds.Entities_Documentation.Caption": {
    "message": "Common Data Service (hérité)"
  },
  "Cds.Entities_Documentation.LongDescription": {
    "message": "Connectez-vous à votre instance Common Data Service (Dynamics 365 et PowerApps)."
  },
  "Celonis.KnowledgeModels_Documentation.Name": {
    "message": "Celonis EMS"
  },
  "Celonis.Navigation_Documentation.Name": {
    "message": "Celonis EMS"
  },
  "Cognite.Contents_Documentation.Name": {
    "message": "Cognite Data Fusion (CDF)"
  },
  "Cognite.Contents_Documentation.LongDescription": {
    "message": "Cognite Data Fusion (CDF)"
  },
  "CosmosDB.Contents_Documentation.Name": {
    "message": "Azure Cosmos DB v2"
  },
  "Csv.Document_Documentation.Name": {
    "message": "Csv.Document"
  },
  "Csv.Document_Documentation.Description": {
    "message": "Retourne le contenu du document CSV en tant que table."
  },
  "Csv.Document_Documentation.LongDescription": {
    "message": "Renvoie le contenu du document CSV sous forme de tableau.\r\n    <ul>\r\n      <li>\r\n        <code>columns</code> peut être null, le nombre de colonnes, une liste de noms de colonnes, un type de table ou un enregistrement d'options.\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> peut être un seul caractère, une liste de caractères ou la valeur <code>\"\"</code>, qui indique que les lignes doivent être séparées par des caractères d'espacement consécutifs. Défaut : <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n         Faire référence à <code>ExtraValues.Type</code> pour les valeurs prises en charge de <code>extraValues</code>.\r\n      </li>\r\n      <li>\r\n        <code>encoding</code> spécifie le type d'encodage du texte.\r\n      </li>\r\n    </ul>\r\n\r\n    Si un enregistrement est spécifié pour <code>columns</code> (et <code>delimiter</code>, <code>extraValues</code>, et <code>encoding</code> sont nuls), les champs d'enregistrement suivants peuvent être fournis :\r\n    <ul>\r\n      <li>\r\n        <code>Délimiteur</code> : Le délimiteur de colonne. Défaut : <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Colonnes</code> : Peut être null, le nombre de colonnes, une liste de noms de colonnes ou un type de table. Si le nombre de colonnes est inférieur au nombre trouvé dans l'entrée, les colonnes supplémentaires seront ignorées. Si le nombre de colonnes est supérieur au nombre trouvé dans l'entrée, les colonnes supplémentaires seront nulles. Lorsqu'il n'est pas spécifié, le nombre de colonnes sera déterminé par ce qui se trouve dans l'entrée\r\n      </li>\r\n      <li>\r\n        <code>Encodage</code> : L'encodage du texte du fichier. Défaut : 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle</code> : Spécifie comment les devis sont traités. \r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (default) : Les guillemets dans un champ ne sont significatifs qu'immédiatement après le délimiteur.\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code> : Les guillemets dans un champ sont toujours significatifs, quel que soit l'endroit où ils apparaissent.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code> : Spécifie comment les sauts de ligne entre guillemets sont gérés.\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code> : Les sauts de ligne entre guillemets sont traités comme faisant partie des données, et non comme la fin de la ligne actuelle.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.None</code> (default) : Tous les sauts de ligne sont traités comme la fin de la ligne actuelle, même lorsqu'ils se produisent à l'intérieur d'une valeur entre guillemets.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  "
  },
  "Csv.Document_Documentation.Category": {
    "message": "Accessing data"
  },
  "Csv.Document_Documentation.Examples_0_Description": {
    "message": "Traiter le texte CSV avec des en-têtes de colonnes"
  },
  "Csv.Document_Documentation.Examples_0_Code": {
    "message": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))"
  },
  "Csv.Document_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
  },
  "Cube.Dimensions_Documentation.Name": {
    "message": "Cube.Dimensions"
  },
  "Cube.Dimensions_Documentation.Description": {
    "message": "Retourne une table contenant l'ensemble des dimensions disponibles."
  },
  "Cube.Dimensions_Documentation.LongDescription": {
    "message": "Retourne une table contenant l'ensemble des dimensions disponibles dans le <code>cube</code>. Chaque dimension est une table contenant un ensemble d'attributs de dimension et chaque attribut de dimension est représenté sous forme de colonne dans la table de dimension. Les dimensions peuvent être développées dans le cube à l'aide de Cube.AddAndExpandDimensionColumn. "
  },
  "Cube.Dimensions_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.DisplayFolders_Documentation.Name": {
    "message": "Cube.DisplayFolders"
  },
  "Cube.DisplayFolders_Documentation.Description": {
    "message": "Renvoie une arborescence de tables imbriquées représentant la hiérarchie des dossiers d'affichage des objets (par exemple, les dimensions et les mesures)."
  },
  "Cube.DisplayFolders_Documentation.LongDescription": {
    "message": "Renvoie une arborescence de tables imbriquées représentant la hiérarchie des dossiers d'affichage des objets (par exemple, les dimensions et les mesures) disponibles pour une utilisation dans le <code>cube</code>."
  },
  "Cube.DisplayFolders_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.MeasureProperties_Documentation.Name": {
    "message": "Cube.MeasureProperties"
  },
  "Cube.MeasureProperties_Documentation.Description": {
    "message": "Retourne une table contenant l'ensemble des propriétés de mesure disponibles développées dans le cube."
  },
  "Cube.MeasureProperties_Documentation.LongDescription": {
    "message": "Retourne une table contenant l'ensemble des propriétés disponibles pour les mesures développées dans le cube."
  },
  "Cube.MeasureProperties_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.Measures_Documentation.Name": {
    "message": "Cube.Measures"
  },
  "Cube.Measures_Documentation.Description": {
    "message": "Retourne une table contenant l'ensemble des mesures disponibles."
  },
  "Cube.Measures_Documentation.LongDescription": {
    "message": "Retourne une table contenant l'ensemble des mesures disponibles dans le <code>cube</code>.\r\n    Chaque mesure est représentée sous forme d'une fonction. Les mesures peuvent être appliquées au cube à l'aide de Cube.AddMeasureColumn."
  },
  "Cube.Measures_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.Parameters_Documentation.Name": {
    "message": "Cube.Parameters"
  },
  "Cube.Parameters_Documentation.Description": {
    "message": "Retourne une table contenant le jeu de paramètres qui peut être appliqué au cube."
  },
  "Cube.Parameters_Documentation.LongDescription": {
    "message": "Retourne une table contenant le jeu de paramètres qui peuvent être appliqués à <code>cube</code>. Chaque paramètre est une fonction qui peut être appelée pour obtenir <code>cube</code> avec le paramètre et ses arguments appliqués."
  },
  "Cube.Parameters_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.Properties_Documentation.Name": {
    "message": "Cube.Properties"
  },
  "Cube.Properties_Documentation.Description": {
    "message": "Retourne une table contenant l'ensemble des propriétés disponibles pour les dimensions développées dans le cube."
  },
  "Cube.Properties_Documentation.LongDescription": {
    "message": "Retourne une table contenant l'ensemble des propriétés disponibles pour les dimensions développées dans le cube."
  },
  "Cube.Properties_Documentation.Category": {
    "message": "Cube"
  },
  "DCWInsights.Feed_Documentation.Name": {
    "message": "DCW - Integrations Platform Insights"
  },
  "DCWInsights.Feed_Documentation.LongDescription": {
    "message": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
  },
  "DataLake.Contents_Documentation.Name": {
    "message": "Azure Data Lake Storage Gen1"
  },
  "DataLake.Contents_Documentation.Description": {
    "message": "Entrez l'URL de votre compte Azure Data Lake Storage Gen1."
  },
  "DataLake.Contents_Documentation.LongDescription": {
    "message": "Retourne une table contenant une ligne pour chaque dossier et chaque fichier trouvés à l'<code>URL</code> dans Azure Data Lake Storage Gen1. Chaque ligne contient les propriétés du dossier ou du fichier ainsi qu'un lien vers son contenu."
  },
  "DataLake.Files_Documentation.Name": {
    "message": "Azure Data Lake Storage Gen1"
  },
  "DataLake.Files_Documentation.Description": {
    "message": "Entrez l'URL de votre compte Azure Data Lake Storage."
  },
  "DataLake.Files_Documentation.LongDescription": {
    "message": "Retourne une table contenant une ligne pour chaque fichier trouvé à l'<code>URL</code> dans Azure Data Lake Storage Gen1. Chaque ligne contient les propriétés du fichier et un lien vers son contenu."
  },
  "DeltaSharing.Contents_Documentation.Name": {
    "message": "Delta Sharing"
  },
  "Denodo.Contents_Documentation.Name": {
    "message": "Denodo Connector"
  },
  "Denodo.Contents_Documentation.LongDescription": {
    "message": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
  },
  "DirectQueryCapabilities.From_Documentation.Name": {
    "message": "DirectQueryCapabilities.From"
  },
  "DirectQueryCapabilities.From_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "DirectQueryCapabilities.From_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "DirectQueryCapabilities.From_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "DocumentDB.Contents_Documentation.Name": {
    "message": "Azure Cosmos DB v1"
  },
  "DocumentDB.Contents_Documentation.Caption": {
    "message": "Azure Cosmos DB (API SQL)"
  },
  "DocumentDB.Contents_Documentation.Description": {
    "message": "Entrez l'URL d'un compte Azure Cosmos DB."
  },
  "DocumentDB.Contents_Documentation.LongDescription": {
    "message": "Retourne une table de bases de données Azure Cosmos DB à <code>url</code>. Si <code>database</code> est spécifié, une table de collections est retournée à la place. Si le champ <code>Query</code> est spécifié dans l'enregistrement <code>options</code>, les résultats de la requête en cours d'exécution sur la base de données et/ou la collection spécifiées sont également retournés."
  },
  "Dremio.Databases_Documentation.Name": {
    "message": "Dremio Software"
  },
  "Dremio.Databases_Documentation.LongDescription": {
    "message": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource"
  },
  "Dremio.Databases_Documentation.Examples_0_Description": {
    "message": "How to return the list of datasets on localhost. This uses the default encrypted connection."
  },
  "Dremio.Databases_Documentation.Examples_0_Code": {
    "message": "Dremio.Databases(\"localhost:31010\")"
  },
  "Dremio.Databases_Documentation.Examples_0_Result": {
    "message": "A table listing the datasets on localhost."
  },
  "DremioCloud.Databases_Documentation.Name": {
    "message": "Dremio Cloud"
  },
  "DremioCloud.Databases_Documentation.LongDescription": {
    "message": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud."
  },
  "DremioCloud.Databases_Documentation.Examples_0_Description": {
    "message": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud."
  },
  "DremioCloud.Databases_Documentation.Examples_0_Code": {
    "message": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")"
  },
  "DremioCloud.Databases_Documentation.Examples_0_Result": {
    "message": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
  },
  "DremioCloud.DatabasesByServer_Documentation.Name": {
    "message": "Dremio Cloud"
  },
  "DremioCloud.DatabasesByServer_Documentation.LongDescription": {
    "message": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource"
  },
  "DremioCloud.DatabasesByServer_Documentation.Examples_0_Description": {
    "message": "How to return the list of datasets on a server on Dremio Cloud."
  },
  "DremioCloud.DatabasesByServer_Documentation.Examples_0_Code": {
    "message": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")"
  },
  "DremioCloud.DatabasesByServer_Documentation.Examples_0_Result": {
    "message": "A table listing the datasets on a server."
  },
  "DremioCloud.DatabasesByServerV330_Documentation.Name": {
    "message": "Dremio Cloud"
  },
  "DremioCloud.DatabasesByServerV330_Documentation.LongDescription": {
    "message": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource"
  },
  "DremioCloud.DatabasesByServerV330_Documentation.Examples_0_Description": {
    "message": "How to return the list of datasets on a server on Dremio Cloud."
  },
  "DremioCloud.DatabasesByServerV330_Documentation.Examples_0_Code": {
    "message": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")"
  },
  "DremioCloud.DatabasesByServerV330_Documentation.Examples_0_Result": {
    "message": "A table listing the datasets on a server."
  },
  "Dynamics365BusinessCentralOnPremises.Contents_Documentation.Description": {
    "message": "Entrez l'URL de votre point de terminaison de service OData Dynamics 365 Business Central (local)."
  },
  "Dynamics365BusinessCentralOnPremises.Contents_Documentation.DisplayName": {
    "message": "Dynamics 365 Business Central (local)"
  },
  "Dynamics365BusinessCentralOnPremises.Contents_Documentation.Caption": {
    "message": "Dynamics365BusinessCentralOnPremises.Contents"
  },
  "Dynamics365BusinessCentralOnPremises.Contents_Documentation.Name": {
    "message": "Dynamics 365 Business Central (local)"
  },
  "Dynamics365BusinessCentralOnPremises.Contents_Documentation.LongDescription": {
    "message": "Retourne une table contenant des données Dynamics 365 Business Central (local) pertinentes. "
  },
  "DynamicsNav.Contents_Documentation.Description": {
    "message": "Entrez l'URL du point de terminaison de service OData Dynamics NAV."
  },
  "DynamicsNav.Contents_Documentation.DisplayName": {
    "message": "Dynamics NAV"
  },
  "DynamicsNav.Contents_Documentation.Caption": {
    "message": "DynamicsNavision.Contents"
  },
  "DynamicsNav.Contents_Documentation.Name": {
    "message": "Dynamics NAV"
  },
  "DynamicsNav.Contents_Documentation.LongDescription": {
    "message": "Retourne une table contenant des données Dynamics NAV pertinentes. "
  },
  "EQuIS.Contents_Documentation.Name": {
    "message": "EQuIS"
  },
  "Essbase.Cubes_Documentation.Name": {
    "message": "Essbase.Cubes"
  },
  "Essbase.Cubes_Documentation.Description": {
    "message": "Retourne les cubes d'une instance Essbase regroupés par serveur Essbase."
  },
  "Essbase.Cubes_Documentation.LongDescription": {
    "message": "Retourne une table de cubes regroupés par serveur Essbase d'une instance Essbase sur le serveur APS <code>url</code>. Un paramètre d'enregistrement facultatif, <code>options</code>, peut être spécifié pour contrôler les options suivantes :\r\n   <ul>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n</ul>\r\n"
  },
  "Essbase.Cubes_Documentation.Category": {
    "message": "Accessing data"
  },
  "Excel.Workbook_Documentation.Name": {
    "message": "Excel.Workbook"
  },
  "Excel.Workbook_Documentation.Description": {
    "message": "Retourne le contenu du classeur Excel."
  },
  "Excel.Workbook_Documentation.LongDescription": {
    "message": "Retourne le contenu du classeur Excel.\r\n    <ul>\r\n     <li> <code>useHeaders</code> peut être null, une valeur logique (true/false) qui indique si la première ligne de chaque table retournée doit être traitée comme un en-tête ou un enregistrement options. Valeur par défaut : false. </li>\r\n     <li> <code>delayTypes</code> peut être null ou une valeur logique (true/false) qui indique si les colonnes de chaque table retournée doivent rester non typées. Valeur par défaut : false. </li>\r\n    </ul>\r\n\r\n    Si un enregistrement est spécifié pour <code>useHeaders</code> (et si <code>delayTypes</code> a la valeur null), les champs d’enregistrement suivants peuvent être fournis : \r\n    <ul>\r\n     <li> <code>UseHeaders</code> : peut être null ou une valeur logique (true/false) qui indique si la première ligne de chaque table retournée doit être traitée comme un en-tête. Valeur par défaut : false. </li>\r\n     <li> <code>DelayTypes</code> : peut être null ou une valeur logique (true/false) qui indique si les colonnes de chaque table retournée doivent rester non typées. Valeur par défaut : false. </li>\r\n     <li> <code>InferSheetDimensions</code> : peut être null ou une valeur logique (true/false) qui indique si la zone d’une feuille de calcul qui contient des données doit être déduite par la lecture de la feuille de calcul, plutôt que par la lecture des métadonnées de dimensions à partir du fichier. Cela peut être utile lorsque les métadonnées de dimensions sont incorrectes. Notez que cette option est uniquement prise en charge pour les fichiers Excel Open XML, et non pour les fichiers Excel hérités. Valeur par défaut : false. </li>\r\n    </ul>\r\n  "
  },
  "Excel.Workbook_Documentation.Category": {
    "message": "Accessing data"
  },
  "Excel.Workbook_Documentation.Examples_0_Description": {
    "message": "Retourner le contenu de la feuille Sheet1 à partir d’un classeur Excel"
  },
  "Excel.Workbook_Documentation.Examples_0_Code": {
    "message": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]"
  },
  "Excel.Workbook_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
  },
  "Folder.Contents_Documentation.Name": {
    "message": "Folder.Contents"
  },
  "Folder.Contents_Documentation.Description": {
    "message": "Retourne une table qui contient les propriétés et le contenu des fichiers et dossiers trouvés dans le dossier spécifié."
  },
  "Folder.Contents_Documentation.LongDescription": {
    "message": "Renvoie un tableau contenant une ligne pour chaque dossier et fichier trouvé dans le dossier <code>path</code>. Chaque ligne contient les propriétés du dossier ou du fichier et un lien vers son contenu. Ce <code>options</code>paramètre est actuellement destiné à un usage interne uniquement."
  },
  "Folder.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Folder.Files_Documentation.Name": {
    "message": "Folder.Files"
  },
  "Folder.Files_Documentation.Description": {
    "message": "Retourne une table qui contient les propriétés et le contenu des fichiers trouvés dans le dossier et les sous-dossiers spécifiés."
  },
  "Folder.Files_Documentation.LongDescription": {
    "message": "Renvoie un tableau contenant une ligne pour chaque fichier <code>path</code>trouvé dans le dossier et tous ses sous-dossiers. Chaque ligne contient les propriétés du fichier et un lien vers son contenu. Ce <code>options</code>paramètre est actuellement destiné à un usage interne uniquement."
  },
  "Folder.Files_Documentation.Category": {
    "message": "Accessing data"
  },
  "Foundry.Contents_Documentation.Name": {
    "message": "Foundry"
  },
  "Foundry.Contents_Documentation.LongDescription": {
    "message": "Connect to Palantir Foundry datasets."
  },
  "GoogleBigQueryAad.Database_Documentation.Name": {
    "message": "Google BigQuery (Azure AD)"
  },
  "GoogleBigQueryAad.Database_Documentation.Caption": {
    "message": "Google BigQuery (Azure AD)"
  },
  "GoogleBigQueryAad.Database_Documentation.Description": {
    "message": "Importer des données d'une base de données BigQuery à l’aide d’Azure AD"
  },
  "GoogleBigQueryAad.Database_Documentation.LongDescription": {
    "message": "\r\n      Renvoie un tableau répertoriant les projets disponibles dans Google BigQuery à l'aide d'Azure AD pour <code>Billing Project ID</code> . Un paramètre d'enregistrement facultatif, <code>options</code>, peut être spécifié pour contrôler les options suivantes :\r\n      <ul>\r\n        <li><code>Délai de connexion dépassé</code>: Une durée qui contrôle le temps d'attente avant d'abandonner une tentative de connexion au serveur. La valeur par défaut est la valeur du délai d'expiration de la connexion ODBC.</li>\r\n        <li><code>CommandTimeout</code>: Une durée qui contrôle la durée pendant laquelle la requête côté serveur est autorisée à s'exécuter avant d'être annulée.</li>\r\n        <li><code>UseStorageApi</code>: Spécifie s'il faut utiliser l'API BigQuery Storage pour les grands ensembles de résultats. La valeur par défaut est true pour utiliser l'API de stockage. Définir sur false pour ne pas utiliser l'API de stockage</li>\r\n        <li><code>AudienceUri</code>: Il s'agit de l'URI d'audience que le pilote ODBC peut utiliser pour ses demandes d'échange de jetons. Ce champ doit être un URI complet (i.e. //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/azuread) où pool_id est un nom unique au monde pour identifier le pool de main-d'œuvre.</li>\r\n      </ul>\r\n    Le paramètre d'enregistrement est spécifié comme [option1 = value1, option2 = value2...].\r\n    "
  },
  "GoogleBigQueryAad.Database_Documentation.Examples_0_Description": {
    "message": "Lister les projets disponibles dans Google BigQuery à l’aide d’Azure AD"
  },
  "GoogleBigQueryAad.Database_Documentation.Examples_0_Code": {
    "message": "GoogleBigQueryAad.Database()"
  },
  "GoogleSheets.Contents_Documentation.Name": {
    "message": "Google Sheets"
  },
  "GoogleSheets.Contents_Documentation.Caption": {
    "message": "Google Sheets"
  },
  "GoogleSheets.Contents_Documentation.Description": {
    "message": "Importation de données depuis GoogleSheets"
  },
  "GoogleSheets.Contents_Documentation.LongDescription": {
    "message": "Importation de données depuis GoogleSheets"
  },
  "HdInsight.Containers_Documentation.Name": {
    "message": "HdInsight.Containers"
  },
  "HdInsight.Containers_Documentation.Description": {
    "message": "Retourne une table de navigation contenant les conteneurs trouvés dans le compte spécifié à partir d'un coffre de stockage Azure."
  },
  "HdInsight.Containers_Documentation.LongDescription": {
    "message": "Retourne une table de navigation contenant une ligne pour chaque conteneur trouvé pour l'URL du compte, <code>account</code>, à partir d'un coffre de stockage Azure. Chaque ligne contient un lien vers les objets blob du conteneur."
  },
  "HdInsight.Containers_Documentation.Category": {
    "message": "Accessing data"
  },
  "HdInsight.Contents_Documentation.Name": {
    "message": "HdInsight.Contents"
  },
  "HdInsight.Contents_Documentation.Description": {
    "message": "Retourne une table de navigation contenant les conteneurs trouvés dans le compte spécifié à partir d'un coffre de stockage Azure."
  },
  "HdInsight.Contents_Documentation.LongDescription": {
    "message": "Retourne une table de navigation contenant une ligne pour chaque conteneur trouvé pour l'URL du compte, <code>account</code>, à partir d'un coffre de stockage Azure. Chaque ligne contient un lien vers les objets blob du conteneur."
  },
  "HdInsight.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Hdfs.Contents_Documentation.Name": {
    "message": "Hdfs.Contents"
  },
  "Hdfs.Contents_Documentation.Description": {
    "message": "Retourne une table qui contient les propriétés et le contenu des fichiers et dossiers trouvés dans le dossier spécifié à partir d'un système de fichiers Hadoop."
  },
  "Hdfs.Contents_Documentation.LongDescription": {
    "message": "Retourne une table qui contient une ligne pour chaque fichier et le fichier trouvé à l'URL du dossier, <code>url</code>, à partir d'un système de fichiers Hadoop. Chaque ligne contient les propriétés du dossier ou du fichier et un lien vers son contenu."
  },
  "Hdfs.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Hdfs.Files_Documentation.Name": {
    "message": "Hdfs.Files"
  },
  "Hdfs.Files_Documentation.Description": {
    "message": "Retourne une table qui contient les propriétés et le contenu des fichiers trouvés dans le dossier et les sous-dossiers spécifiés à partir d'un système de fichiers Hadoop."
  },
  "Hdfs.Files_Documentation.LongDescription": {
    "message": "Retourne une table qui contient une ligne pour chaque fichier trouvé à l'URL du dossier, <code>url</code>, et les sous-dossiers à partir d'un système de fichiers Hadoop. Chaque ligne contient les propriétés du fichier et un lien vers son contenu."
  },
  "Hdfs.Files_Documentation.Category": {
    "message": "Accessing data"
  },
  "HexagonSmartApi.Feed_Documentation.Name": {
    "message": "Hexagon PPM Smart® API"
  },
  "HexagonSmartApi.Feed_Documentation.LongDescription": {
    "message": "Returns a table from a Hexagon PPM Smart® API OData feed."
  },
  "HexagonSmartApi.Feed_Documentation.Examples_0_Description": {
    "message": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed."
  },
  "HexagonSmartApi.Feed_Documentation.Examples_0_Code": {
    "message": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")"
  },
  "HexagonSmartApi.Feed_Documentation.Examples_0_Result": {
    "message": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
  },
  "Impala.Database_Documentation.Name": {
    "message": "Impala"
  },
  "Impala.Database_Documentation.Caption": {
    "message": "Impala"
  },
  "Impala.Database_Documentation.Description": {
    "message": "Importer des données d'un cluster Impala"
  },
  "Impala.Database_Documentation.LongDescription": {
    "message": "Importer des données d'un cluster Impala <code>server</code>. Si un port n'a pas été spécifié, le port 21050 par défaut est utilisé."
  },
  "Impala.Database_Documentation.Examples_0_Description": {
    "message": "Liste les tables d'un cluster Impala."
  },
  "Impala.Database_Documentation.Examples_0_Code": {
    "message": "Impala.Database(\"localhost:21050\")"
  },
  "InformationGrid.Contents_Documentation.Name": {
    "message": "Information Grid BI Services"
  },
  "InformationGrid.Contents_Documentation.LongDescription": {
    "message": "Retrieves information from authorised BI services available on the given server"
  },
  "InformationGrid.Contents_Documentation.Examples_0_Description": {
    "message": "Returns a Navigation Table listing the available Information Grid BI services"
  },
  "InformationGrid.Contents_Documentation.Examples_0_Code": {
    "message": "InformationGrid.Contents(\"192.168.1.123\", false)"
  },
  "InformationGrid.Contents_Documentation.Examples_0_Result": {
    "message": "(Navigation table listing available BI services)"
  },
  "InformationGrid.Contents_Documentation.Examples_1_Description": {
    "message": "Returns information from a specific named Information Grid BI service using HTTP"
  },
  "InformationGrid.Contents_Documentation.Examples_1_Code": {
    "message": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]"
  },
  "InformationGrid.Contents_Documentation.Examples_1_Result": {
    "message": "(Data retrieved for the named BI service)"
  },
  "Intune.Contents_Documentation.Name": {
    "message": "Intune Data Warehouse"
  },
  "Intune.Contents_Documentation.LongDescription": {
    "message": "Intune Data Warehouse"
  },
  "Kognitwin.Contents_Documentation.Name": {
    "message": "Kognitwin v1.1"
  },
  "Kusto.Contents_Documentation.Description": {
    "message": "Importe des données à partir d'Azure Data Explorer (Kusto)"
  },
  "Kusto.Contents_Documentation.DisplayName": {
    "message": "Azure Data Explorer (Kusto)"
  },
  "Kusto.Contents_Documentation.Caption": {
    "message": "Kusto.Contents"
  },
  "Kusto.Contents_Documentation.Name": {
    "message": "Azure Data Explorer (Kusto)"
  },
  "Kusto.Contents_Documentation.LongDescription": {
    "message": "Importe des données à partir de votre instance Azure Data Explorer (Kusto)"
  },
  "Kusto.Contents_Documentation.Examples_0_Description": {
    "message": "Retourne une table d'informations sur les événements Storm"
  },
  "Kusto.Contents_Documentation.Examples_0_Code": {
    "message": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])"
  },
  "Kusto.Contents_Documentation.Examples_0_Result": {
    "message": "Table avec des événements Storm provenant de la base de données « Samples » dans le cluster « help »"
  },
  "LinkedIn.SalesNavigator_Documentation.Name": {
    "message": "LinkedIn Sales Navigator"
  },
  "LinkedIn.SalesNavigator_Documentation.LongDescription": {
    "message": "LinkedIn Sales Navigator"
  },
  "List.ConformToPageReader_Documentation.Name": {
    "message": "List.ConformToPageReader"
  },
  "List.ConformToPageReader_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "List.ConformToPageReader_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "List.ConformToPageReader_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "MailChimp.Collection_Documentation.Description": {
    "message": "Retourne un tableau avec les données d'un point de terminaison MailChimp."
  },
  "MailChimp.Collection_Documentation.DisplayName": {
    "message": "MailChimp.Collection"
  },
  "MailChimp.Collection_Documentation.Caption": {
    "message": "MailChimp.Collection"
  },
  "MailChimp.Collection_Documentation.Name": {
    "message": "MailChimp.Collection"
  },
  "MailChimp.Collection_Documentation.LongDescription": {
    "message": "Appelle l'API MailChimp et retourne le jeu de données résultant sous forme de tableau. Parcourt automatiquement les pages de tous les résultats. Le paramètre entityName facultatif peut être utilisé pour les points de terminaison d'API où le point de terminaison racine et le paramètre entityName principal dans la réponse JSON ne correspondent pas."
  },
  "MailChimp.Collection_Documentation.Examples_0_Description": {
    "message": "Extrait un tableau de données du point de terminaison des listes de l'API MailChimp."
  },
  "MailChimp.Collection_Documentation.Examples_0_Code": {
    "message": "MailChimp.Collection(\"lists\")"
  },
  "MailChimp.Collection_Documentation.Examples_0_Result": {
    "message": "Tableau avec des données de liste."
  },
  "MailChimp.Collection_Documentation.Examples_1_Description": {
    "message": "Extrait un tableau de données du point de terminaison des dossiers de campagne de l'API MailChimp."
  },
  "MailChimp.Collection_Documentation.Examples_1_Code": {
    "message": "MailChimp.Collection(\"campaign-folders\", \"folders\")"
  },
  "MailChimp.Collection_Documentation.Examples_1_Result": {
    "message": "Tableau avec des données de dossiers de campagne."
  },
  "MailChimp.Instance_Documentation.Description": {
    "message": "Retourne des résultats de réponse bruts d'un point de terminaison de l'API MailChimp."
  },
  "MailChimp.Instance_Documentation.DisplayName": {
    "message": "MailChimp.Instance"
  },
  "MailChimp.Instance_Documentation.Caption": {
    "message": "MailChimp.Instance"
  },
  "MailChimp.Instance_Documentation.Name": {
    "message": "MailChimp.Instance"
  },
  "MailChimp.Instance_Documentation.LongDescription": {
    "message": "Appelle l'API MailChimp et retourne la réponse brute."
  },
  "MailChimp.Instance_Documentation.Examples_0_Description": {
    "message": "Retourne des données brutes du point de terminaison de l'API MailChimp de rapports/détails de clic d'une campagne donnée."
  },
  "MailChimp.Instance_Documentation.Examples_0_Code": {
    "message": "MailChimp.Instance(\"reports/{campaign_id}/click-details\")"
  },
  "MailChimp.Instance_Documentation.Examples_0_Result": {
    "message": "Données de détails de clic brutes de la campagne donnée."
  },
  "MariaDB.Contents_Documentation.Name": {
    "message": "MariaDB data source"
  },
  "MariaDB.Contents_Documentation.LongDescription": {
    "message": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>"
  },
  "MariaDB.Contents_Documentation.Examples_0_Description": {
    "message": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>."
  },
  "MariaDB.Contents_Documentation.Examples_0_Code": {
    "message": "MariaDB.Contents(\"servername\", \"databasename\")"
  },
  "MariaDB.Contents_Documentation.Examples_0_Result": {
    "message": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
  },
  "MariaDB.Contents_Documentation.Examples_1_Description": {
    "message": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>."
  },
  "MariaDB.Contents_Documentation.Examples_1_Code": {
    "message": "MariaDB.Contents(\"servername\")"
  },
  "MariaDB.Contents_Documentation.Examples_1_Result": {
    "message": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
  },
  "MariaDB.Contents_Documentation.Examples_2_Description": {
    "message": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect."
  },
  "MariaDB.Contents_Documentation.Examples_2_Code": {
    "message": "MariaDB.Contents(\"servername:portnumber\")"
  },
  "MariaDB.Contents_Documentation.Examples_2_Result": {
    "message": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
  },
  "MariaDB.Contents_Documentation.Examples_3_Description": {
    "message": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>."
  },
  "MariaDB.Contents_Documentation.Examples_3_Code": {
    "message": "MariaDB.Contents(\"servername;databasename\")"
  },
  "MariaDB.Contents_Documentation.Examples_3_Result": {
    "message": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
  },
  "MicroStrategyDataset.Contents_Documentation.Name": {
    "message": "MicroStrategy for Power BI ver. 2.4.5"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Description": {
    "message": "Fournit des fonctions de requête avancées."
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.DisplayName": {
    "message": "Contents"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Caption": {
    "message": "MicrosoftAzureConsumptionInsights.Contents"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Name": {
    "message": "MicrosoftAzureConsumptionInsights.Contents"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.LongDescription": {
    "message": "Fournit des fonctions de requête avancées."
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_0_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les données des synthèses entre le 01-05-2017 et le 15-06-2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_0_Code": {
    "message": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_0_Result": {
    "message": "La fonction retourne les données des synthèses entre le 01-05-2017 et le 15-06-2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_1_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les données des synthèses d'avril 2017."
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_1_Code": {
    "message": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_1_Result": {
    "message": "La fonction retourne les données entre le 01-04-2017 et le 30-04-2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_2_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les données des synthèses d'avril 2017 à maintenant."
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_2_Code": {
    "message": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_2_Result": {
    "message": "La fonction retourne les données entre le 01-04-2017 et le 15-06-2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_3_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les données des synthèses de décembre dernier à février dernier "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_3_Code": {
    "message": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_3_Result": {
    "message": "La fonction retourne les données entre le 01-12-2016 et le 28-02-2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_4_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les frais de place de marché des 18 derniers mois"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_4_Code": {
    "message": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_4_Result": {
    "message": "La fonction retourne les données entre le 01-12-2015 et le 15-06-2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_5_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient le détail des frais de juin 2017 et mai 2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_5_Code": {
    "message": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_5_Result": {
    "message": "La fonction retourne les données entre le 01-05-2017 et le 15-06-2017"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_6_Description": {
    "message": "En supposant qu'aujourd'hui nous sommes le 03-07-2017, obtient le détail des frais de juillet 2016"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_6_Code": {
    "message": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_6_Result": {
    "message": "La fonction retourne les données entre le 01-07-2016 et le 31-07-2016"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_7_Description": {
    "message": "En supposant qu'aujourd'hui nous sommes le 13-07-2017, obtient les synthèses des soldes des 10 derniers mois, plus des 13 jours de ce mois-ci"
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_7_Code": {
    "message": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    "
  },
  "MicrosoftAzureConsumptionInsights.Contents_Documentation.Examples_7_Result": {
    "message": "La fonction retourne les données entre le 01-09-2016 et le 13-07-2017"
  },
  "MicrosoftAzureConsumptionInsights.Tables_Documentation.Caption": {
    "message": "Microsoft Azure Consumption Insights"
  },
  "MicrosoftAzureConsumptionInsights.Tables_Documentation.Description": {
    "message": "Microsoft Azure Consumption Insights"
  },
  "MicrosoftAzureConsumptionInsights.Tables_Documentation.DisplayName": {
    "message": "Microsoft Azure Consumption Insights"
  },
  "MicrosoftAzureConsumptionInsights.Tables_Documentation.LongDescription": {
    "message": "Microsoft Azure Consumption Insights"
  },
  "MicrosoftAzureConsumptionInsights.Tables_Documentation.Name": {
    "message": "Microsoft Azure Consumption Insights"
  },
  "MicrosoftGraphSecurity.Contents_Documentation.Name": {
    "message": "Microsoft Graph Security"
  },
  "MicrosoftGraphSecurity.Contents_Documentation.Description": {
    "message": "Connector for the Microsoft Graph Security API"
  },
  "MicrosoftGraphSecurity.Contents_Documentation.LongDescription": {
    "message": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows."
  },
  "MicrosoftGraphSecurity.Contents_Documentation.Examples_0_Description": {
    "message": "Returns a table from the Microsoft Graph Security API."
  },
  "MicrosoftGraphSecurity.Contents_Documentation.Examples_0_Code": {
    "message": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
  },
  "MicrosoftGraphSecurity.Contents_Documentation.Examples_1_Description": {
    "message": "Returns a table from the Microsoft Graph Security API."
  },
  "MicrosoftGraphSecurity.Contents_Documentation.Examples_1_Code": {
    "message": "MicrosoftGraphSecurity.Contents(\"beta\")"
  },
  "Odbc.DataSource_Documentation.Name": {
    "message": "Odbc.DataSource"
  },
  "Odbc.DataSource_Documentation.Description": {
    "message": "Retourne une table de tables et d'onglets SQL à partir de la source de données ODBC. "
  },
  "Odbc.DataSource_Documentation.LongDescription": {
    "message": "Retourne une table de tables et de vues SQL à partir de la source de données ODBC spécifiée par la chaîne de connexion <code>connectionString</code>. <code>connectionString</code> peut être du texte ou un enregistrement de paires propriété-valeur. Les valeurs de propriété peuvent être du texte ou un nombre. Vous pouvez fournir un paramètre d'enregistrement facultatif <code>options</code> pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut est 15&#160;secondes.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logique (true/false) qui d&#233;termine la cr&#233;ation d&#39;options de cha&#238;ne de connexion compatible avec SQL Server pour l&#39;authentification Windows. La valeur par d&#233;faut est true.</li>\r\n</ul>\r\n"
  },
  "Odbc.DataSource_Documentation.Category": {
    "message": "Accessing data"
  },
  "Odbc.DataSource_Documentation.Examples_0_Description": {
    "message": "Renvoie les tables et vues SQL à partir de la chaîne de connexion fournie."
  },
  "Odbc.DataSource_Documentation.Examples_0_Code": {
    "message": "Odbc.DataSource(\"dsn=your_dsn\")"
  },
  "Odbc.DataSource_Documentation.Examples_0_Result": {
    "message": "table"
  },
  "OleDb.DataSource_Documentation.Name": {
    "message": "OleDb.DataSource"
  },
  "OleDb.DataSource_Documentation.Description": {
    "message": "Retourne une table des tables et vues SQL de la source de données OLE DB."
  },
  "OleDb.DataSource_Documentation.LongDescription": {
    "message": "Retourne une table des tables et vues SQL de la source de données OLE DB spécifiée par la chaîne de connexion <code>connectionString</code>. <code>connectionString</code> peut être du texte ou un enregistrement de paires propriété/valeur. Les valeurs de propriété peuvent être du texte ou un nombre. Vous pouvez indiquer un paramètre d'enregistrement facultatif, <code>options</code>, pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logique (true/false) qui d&#233;termine la cr&#233;ation d&#39;options de cha&#238;ne de connexion compatible avec SQL Server pour l&#39;authentification Windows. La valeur par d&#233;faut est true.</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], par exemple."
  },
  "OleDb.DataSource_Documentation.Category": {
    "message": "Accessing data"
  },
  "Oracle.Database_Documentation.Name": {
    "message": "Oracle.Database"
  },
  "Oracle.Database_Documentation.Description": {
    "message": "Retourne une table des tables SQL et des onglets depuis la base de données Oracle."
  },
  "Oracle.Database_Documentation.LongDescription": {
    "message": "Retourne une table des tables SQL et des vues depuis la base de données Oracle sur le serveur <code>server</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "Oracle.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "Paxata.Contents_Documentation.Name": {
    "message": "From Paxata"
  },
  "Pdf.Tables_Documentation.Name": {
    "message": "Pdf.Tables"
  },
  "Pdf.Tables_Documentation.Description": {
    "message": "Retourne les tables trouvées dans un fichier PDF."
  },
  "Pdf.Tables_Documentation.LongDescription": {
    "message": "Retourne les tables trouvées dans <code>pdf</code>. Vous pouvez indiquer un paramètre d'enregistrement facultatif, <code>options</code>, pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>Implementation</code> : Version de l’algorithme &#224; utiliser lors de l’identification des tables. Les anciennes versions sont disponibles uniquement &#224; des fins de compatibilit&#233; descendante afin d’emp&#234;cher les anciennes requ&#234;tes d’&#234;tre interrompues par les mises &#224; jour d’algorithme. La version la plus r&#233;cente doit toujours donner les meilleurs r&#233;sultats. Les valeurs valides sont &#171;&#160;1.3&#160;&#187;, &#171;&#160;1.2&#160;&#187;, &#171;&#160;1.1&#160;&#187; ou null.</li>\r\n<li><code>StartPage</code> : Sp&#233;cifie la premi&#232;re page de la plage de pages &#224; examiner. Valeur par d&#233;faut&#160;: 1.</li>\r\n<li><code>EndPage</code> : Sp&#233;cifie la derni&#232;re page dans la plage de pages &#224; examiner. Valeur par d&#233;faut&#160;: derni&#232;re page du document.</li>\r\n<li><code>MultiPageTables</code> : D&#233;termine si des tables similaires sur des pages cons&#233;cutives sont automatiquement regroup&#233;es en une seule table. Valeur par d&#233;faut&#160;: true.</li>\r\n<li><code>EnforceBorderLines</code> : D&#233;termine si des bordures sont toujours appliqu&#233;es comme limites de cellule (quand la valeur est true), ou simplement utilis&#233;es comme un indicateur parmi d&#39;autres pour d&#233;terminer les limites de cellule (quand la valeur est false). Valeur par d&#233;faut&#160;: false.</li>\r\n</ul>\r\n\r\n    "
  },
  "Pdf.Tables_Documentation.Category": {
    "message": "Accès aux données"
  },
  "Pdf.Tables_Documentation.Examples_0_Description": {
    "message": "Retourne les tables contenues dans sample.pdf."
  },
  "Pdf.Tables_Documentation.Examples_0_Code": {
    "message": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))"
  },
  "Pdf.Tables_Documentation.Examples_0_Result": {
    "message": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
  },
  "PlanviewOKR.Contents_Documentation.Description": {
    "message": "Enter the URL of your Planview OKR account."
  },
  "PlanviewOKR.Contents_Documentation.DisplayName": {
    "message": "Planview OKR"
  },
  "PlanviewOKR.Contents_Documentation.Caption": {
    "message": "Planview OKR.Contents"
  },
  "PlanviewOKR.Contents_Documentation.Name": {
    "message": "Planview OKR"
  },
  "PlanviewOKR.Contents_Documentation.LongDescription": {
    "message": "Returns a table with relevant Planview OKR data."
  },
  "PlanviewProjectplace.Contents_Documentation.Description": {
    "message": "Enter the URL of your Planview ProjectPlace account."
  },
  "PlanviewProjectplace.Contents_Documentation.DisplayName": {
    "message": "Planview ProjectPlace"
  },
  "PlanviewProjectplace.Contents_Documentation.Caption": {
    "message": "PlanviewProjectplace.Contents"
  },
  "PlanviewProjectplace.Contents_Documentation.Name": {
    "message": "Planview ProjectPlace"
  },
  "PlanviewProjectplace.Contents_Documentation.LongDescription": {
    "message": "Returns a table with relevant Planview ProjectPlace data."
  },
  "Profisee.Tables_Documentation.Name": {
    "message": "Profisee"
  },
  "Profisee.Tables_Documentation.LongDescription": {
    "message": "Navigation Table returning Profisee entities."
  },
  "Profisee.Tables_Documentation.Examples_0_Description": {
    "message": "Returns a navigational table containing all profisee entities that contains data for each entity."
  },
  "Profisee.Tables_Documentation.Examples_0_Code": {
    "message": "Profisee.Tables(\"https://12345.com/profisee\")"
  },
  "Profisee.Tables_Documentation.Examples_0_Result": {
    "message": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
  },
  "Projectplace.Feed_Documentation.Description": {
    "message": "Entrez l'URL de votre compte Planview Projectplace."
  },
  "Projectplace.Feed_Documentation.DisplayName": {
    "message": "Planview Projectplace"
  },
  "Projectplace.Feed_Documentation.Caption": {
    "message": "Projectplace.Feed"
  },
  "Projectplace.Feed_Documentation.Name": {
    "message": "Planview Projectplace"
  },
  "Projectplace.Feed_Documentation.LongDescription": {
    "message": "Retourne un tableau avec des données Planview Projectplace pertinentes."
  },
  "Python.Execute_Documentation.Name": {
    "message": "Python.Execute"
  },
  "Python.Execute_Documentation.Caption": {
    "message": "Ρỳтђóŉ şčŗíþτ"
  },
  "Python.Execute_Documentation.Description": {
    "message": "Ежєçϋтėŝ Þŷţħσň şčґϊφť ªпð ѓęŧųѓηş δдτǻ ƒŗąmэš"
  },
  "Python.Execute_Documentation.Examples_Description": {
    "message": "Ежєçϋтėŝ Þŷţħσň şčґϊφť ªпð ѓęŧųѓηş δдτǻ ƒŗąmэš"
  },
  "Python.Execute_Documentation.Examples_Code": {
    "message": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
  },
  "QuickBase.Contents_Documentation.Name": {
    "message": "Quick Base Connector"
  },
  "QuickBase.Contents_Documentation.LongDescription": {
    "message": "Quick Base Connector"
  },
  "R.Execute_Documentation.Name": {
    "message": "R.Execute"
  },
  "R.Execute_Documentation.Caption": {
    "message": "Г ŝćяïφт"
  },
  "Record.ToTable_Documentation.Name": {
    "message": "Record.ToTable"
  },
  "Record.ToTable_Documentation.Description": {
    "message": "Retourne une table où chaque ligne correspond à un nom de champ et à une valeur de l'enregistrement d'entrée."
  },
  "Record.ToTable_Documentation.LongDescription": {
    "message": "Retourne une table qui contient les colonnes <code>Name</code> et <code>Value</code> avec une ligne pour chaque champ dans <code>record</code>."
  },
  "Record.ToTable_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Record.ToTable_Documentation.Examples_0_Description": {
    "message": "Retourne la table à partir de l'enregistrement."
  },
  "Record.ToTable_Documentation.Examples_0_Code": {
    "message": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])"
  },
  "Record.ToTable_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
  },
  "SapHana.Database_Documentation.Name": {
    "message": "SapHana.Database"
  },
  "SapHana.Database_Documentation.Description": {
    "message": "Retourne les packages d'une base de données SAP HANA."
  },
  "SapHana.Database_Documentation.LongDescription": {
    "message": "Retourne une table de paquets multidimensionnels de la base de données SAP HANA <code>server</code>. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>Distribution</code> : Param&#232;tre SapHanaDistribution qui d&#233;finit la valeur de la propri&#233;t&#233; &#171;&#160;Distribution&#160;&#187; dans la cha&#238;ne de connexion. Le routage d&#39;instruction est la m&#233;thode qui permet d&#39;&#233;valuer si le noeud serveur d&#39;un syst&#232;me distribu&#233; est correct avant l&#39;ex&#233;cution de l&#39;instruction. La valeur par d&#233;faut est SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : Sp&#233;cifie l&#39;impl&#233;mentation du connecteur SAP HANA &#224; utiliser.</li>\r\n<li><code>EnableColumnBinding</code> : Lie des variables aux colonnes d’un jeu de r&#233;sultats SAP HANA lors de l’extraction de donn&#233;es. Peut potentiellement am&#233;liorer les performances au prix d’une utilisation l&#233;g&#232;rement plus &#233;lev&#233;e de la m&#233;moire. La valeur par d&#233;faut est false.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut est 15&#160;secondes.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n</ul>\r\n\r\n    "
  },
  "SapHana.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "SharePoint.Contents_Documentation.Name": {
    "message": "SharePoint.Contents"
  },
  "SharePoint.Contents_Documentation.Description": {
    "message": "Retourne une table qui contient le contenu d'un site SharePoint."
  },
  "SharePoint.Contents_Documentation.LongDescription": {
    "message": "Retourne une table qui contient une ligne pour chaque dossier et document trouvé dans le site SharePoint spécifié <code>url</code>. Chaque ligne contient les propriétés du dossier ou du fichier, et un lien vers son contenu. Vous pouvez spécifier <code>options</code> pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>ApiVersion</code> : Nombre (14&#160;ou&#160;15) ou texte &#171;&#160;Auto&#160;&#187; sp&#233;cifiant la version de l&#39;API SharePoint &#224; utiliser pour ce site. Si aucune valeur n&#39;est sp&#233;cifi&#233;e, la version&#160;14 de l&#39;API est utilis&#233;e. Si la valeur Auto est sp&#233;cifi&#233;e, la version du serveur est d&#233;tect&#233;e automatiquement (si possible)&#160;; sinon, la version&#160;14 est utilis&#233;e par d&#233;faut. Les sites SharePoint qui ne sont pas en anglais n&#233;cessitent au moins la version&#160;15.</li>\r\n</ul>\r\n\r\n    "
  },
  "SharePoint.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "SharePoint.Files_Documentation.Name": {
    "message": "SharePoint.Files"
  },
  "SharePoint.Files_Documentation.Description": {
    "message": "Retourne une table qui contient les documents d'un site SharePoint."
  },
  "SharePoint.Files_Documentation.LongDescription": {
    "message": "Retourne une table qui contient une ligne pour chaque document trouvé dans le site SharePoint spécifié, <code>url</code>, et les sous-dossiers. Chaque ligne contient les propriétés du dossier ou du fichier, et un lien vers son contenu. Vous pouvez spécifier <code>options</code> pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>ApiVersion</code> : Nombre (14&#160;ou&#160;15) ou texte &#171;&#160;Auto&#160;&#187; sp&#233;cifiant la version de l&#39;API SharePoint &#224; utiliser pour ce site. Si aucune valeur n&#39;est sp&#233;cifi&#233;e, la version&#160;14 de l&#39;API est utilis&#233;e. Si la valeur Auto est sp&#233;cifi&#233;e, la version du serveur est d&#233;tect&#233;e automatiquement (si possible)&#160;; sinon, la version&#160;14 est utilis&#233;e par d&#233;faut. Les sites SharePoint qui ne sont pas en anglais n&#233;cessitent au moins la version&#160;15.</li>\r\n</ul>\r\n\r\n    "
  },
  "SharePoint.Files_Documentation.Category": {
    "message": "Accessing data"
  },
  "SharePoint.Tables_Documentation.Name": {
    "message": "SharePoint.Tables"
  },
  "SharePoint.Tables_Documentation.Description": {
    "message": "Retourne une table qui contient le contenu d'une liste SharePoint."
  },
  "SharePoint.Tables_Documentation.LongDescription": {
    "message": "Retourne une table qui contient une ligne pour chaque élément de liste dans la liste SharePoint spécifiée <code>url</code>. Chaque ligne contient les propriétés de la liste. Vous pouvez spécifier <code>options</code> pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>ApiVersion</code> : Nombre (14&#160;ou&#160;15) ou texte &#171;&#160;Auto&#160;&#187; sp&#233;cifiant la version de l&#39;API SharePoint &#224; utiliser pour ce site. Si aucune valeur n&#39;est sp&#233;cifi&#233;e, la version&#160;14 de l&#39;API est utilis&#233;e. Si la valeur Auto est sp&#233;cifi&#233;e, la version du serveur est d&#233;tect&#233;e automatiquement (si possible)&#160;; sinon, la version&#160;14 est utilis&#233;e par d&#233;faut. Les sites SharePoint qui ne sont pas en anglais n&#233;cessitent au moins la version&#160;15.</li>\r\n<li><code>Implementation</code> : Facultatif. Sp&#233;cifie la version du connecteur Microsoft Office SharePoint Online &#224; utiliser. Les valeurs accept&#233;es sont &quot;2.0&quot; ou null. Si la valeur est &quot;2.0&quot;, l&#39;impl&#233;mentation 2.0 du connecteur Microsoft Office SharePoint Online est utilis&#233;e. Si la valeur est nulle, l&#39;impl&#233;mentation d&#39;origine du connecteur Microsoft Office SharePoint Online est utilis&#233;e.</li>\r\n<li><code>ViewMode</code> : Facultatif. Cette option n&#39;est valable que pour l&#39;impl&#233;mentation 2.0. Les valeurs accept&#233;es sont &quot;All&quot; et &quot;Default&quot;. Si aucune valeur n&#39;est sp&#233;cifi&#233;e, la valeur est d&#233;finie sur &quot;Tous&quot;. Lorsque &quot;All&quot; est sp&#233;cifi&#233;, la vue inclut toutes les colonnes cr&#233;&#233;es par l&#39;utilisateur et d&#233;finies par le syst&#232;me. Lorsque &quot;Par d&#233;faut&quot; est sp&#233;cifi&#233;, la vue correspondra &#224; ce que l&#39;utilisateur voit lorsqu&#39;il consulte la liste en ligne dans la vue que l&#39;utilisateur a d&#233;finie comme Par d&#233;faut dans ses param&#232;tres. Si l&#39;utilisateur modifie sa vue par d&#233;faut pour ajouter ou supprimer des colonnes cr&#233;&#233;es par l&#39;utilisateur ou d&#233;finies par le syst&#232;me, ou en cr&#233;ant une nouvelle vue et en la d&#233;finissant par d&#233;faut, ces modifications se propageront via le connecteur.</li>\r\n</ul>\r\n\r\n    "
  },
  "SharePoint.Tables_Documentation.Category": {
    "message": "Accessing data"
  },
  "Soda.Feed_Documentation.Name": {
    "message": "Soda.Feed"
  },
  "Soda.Feed_Documentation.Description": {
    "message": "Retourne une table à partir du contenu à l'URL spécifiée formatée selon l'API SODA 2.0."
  },
  "Soda.Feed_Documentation.LongDescription": {
    "message": "Retourne une table à partir du contenu à l'URL spécifiée <code>url</code> formatée selon l'API SODA 2.0. L'URL doit pointer sur une source conforme SODA valide qui se termine pas une extension .csv."
  },
  "Soda.Feed_Documentation.Category": {
    "message": "Accessing data"
  },
  "SparkPost.GetList_Documentation.DisplayName": {
    "message": "SparkPost.GetList"
  },
  "SparkPost.GetList_Documentation.Caption": {
    "message": "SparkPost.GetList"
  },
  "SparkPost.GetList_Documentation.Name": {
    "message": "SparkPost.GetList"
  },
  "SparkPost.GetList_Documentation.LongDescription": {
    "message": "Cette fonction peut être utilisée pour appeler un des points de terminaison « Listes » offerts par l'API SparkPost v1. Quand vous passez des appels à l'API SparkPost à l'aide de cette fonction, gardez à l'esprit que l'API SparkPost a un débit maximal d'API strict. Si le code d'état 429 est retourné par le serveur SparkPost, vous avez atteint le débit maximal et devez attendre quelques instants avant de passer d'autres appels."
  },
  "SparkPost.GetList_Documentation.Examples_0_Description": {
    "message": "Retourne une table avec une seule colonne renseignée avec les données d'un des points de terminaison « Listes » de l'API SparkPost v1 (consultez la documentation SparkPost pour plus de détails)."
  },
  "SparkPost.GetList_Documentation.Examples_0_Code": {
    "message": "Source = SparkPost.GetList(\"metrics/campaigns\")"
  },
  "SparkPost.GetList_Documentation.Examples_0_Result": {
    "message": "Json.Document"
  },
  "SparkPost.NavTable_Documentation.DisplayName": {
    "message": "SparkPost"
  },
  "SparkPost.NavTable_Documentation.Caption": {
    "message": "SparkPost"
  },
  "SparkPost.NavTable_Documentation.Name": {
    "message": "SparkPost"
  },
  "SparkPost.NavTable_Documentation.LongDescription": {
    "message": "Récupère les tables intégrées exposées par le connecteur SparkPost avec des données agrégées pendant le nombre de jours spécifié par l'utilisateur. Quand vous actualisez ces tables ou passez des appels à l'API SparkPost à l'aide de ce connecteur, gardez à l'esprit que l'API SparkPost a un débit maximal d'API strict. Si le code d'état 429 est retourné par le serveur SparkPost, vous avez atteint le débit maximal et devez attendre quelques instants avant de passer d'autres appels. Quand vous choisissez une valeur pour le paramètre Nombre de jours, notez que l'API stocke uniquement l'équivalent de 6 mois de données."
  },
  "Spigit.Contents_Documentation.Description": {
    "message": "Enter the URL of your Planview IdeaPlace account."
  },
  "Spigit.Contents_Documentation.DisplayName": {
    "message": "Planview IdeaPlace"
  },
  "Spigit.Contents_Documentation.Caption": {
    "message": "Spigit.Contents"
  },
  "Spigit.Contents_Documentation.Name": {
    "message": "Planview IdeaPlace"
  },
  "Spigit.Contents_Documentation.LongDescription": {
    "message": "Returns a table with relevant Planview IdeaPlace data."
  },
  "Sql.Databases_Documentation.Name": {
    "message": "Sql.Databases"
  },
  "Sql.Databases_Documentation.Description": {
    "message": "Retourne une table de bases de données dans un SQL Server."
  },
  "Sql.Databases_Documentation.LongDescription": {
    "message": "Retourne une table de bases de données dans le serveur SQL spécifié, <code>server</code>. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Nombre qui d&#233;finit la valeur de la clause de requ&#234;te &quot;maxdop&quot; dans la requ&#234;te SQL g&#233;n&#233;r&#233;e.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>MultiSubnetFailover</code> : Valeur logique (true/false) qui d&#233;finit la valeur de la propri&#233;t&#233; &quot;MultiSubnetFailover&quot; dans la cha&#238;ne de connexion (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Valeur logique (true/false) qui, si elle est d&#233;finie sur true, tente de replier des conversions de type qui peuvent &#233;chouer et provoquer l’&#233;chec de la requ&#234;te enti&#232;re. Ceci n’est pas recommand&#233; pour un usage g&#233;n&#233;ral.</li>\r\n<li><code>ContextInfo</code> : Valeur binaire utilis&#233;e pour d&#233;finir CONTEXT_INFO avant l&#39;ex&#233;cution de chaque commande.</li>\r\n<li><code>OmitSRID</code> : Valeur logique (true/false) qui, si elle est d&#233;finie sur true, omet le SRID lors de la production de langage Well-Known Text &#224; partir de types g&#233;om&#233;triques et g&#233;ographiques.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Valeur logique (true/false) qui, si la valeur est true, autorise le pliage des requ&#234;tes entre les bases de donn&#233;es sur le m&#234;me serveur. La valeur par d&#233;faut est false.</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] par exemple.\r\n    <br>\r\n    Ne prend pas en charge la définition d'une requête SQL à exécuter sur le serveur. <code>Sql.Database</code> doit être utilisé à la place de l'exécution d'une requête SQL.\r\n    "
  },
  "Sql.Databases_Documentation.Category": {
    "message": "Accessing data"
  },
  "Stripe.Contents_Documentation.Name": {
    "message": "Stripe.Contents"
  },
  "Stripe.Contents_Documentation.DisplayName": {
    "message": "Stripe.Contents"
  },
  "Stripe.Contents_Documentation.Caption": {
    "message": "Stripe.Contents"
  },
  "Stripe.Contents_Documentation.Description": {
    "message": "Effectue un appel à l'API Stripe, avec l'option de limitation du nombre d'appels d'API effectués."
  },
  "Stripe.Contents_Documentation.LongDescription": {
    "message": "Effectue un appel à l'API Stripe de https://api.stripe.com/v1/<code>method</code>, avec une <code>requête</code> facultative des enregistrements passés comme paramètres supplémentaires et une <code>pageLimit</code> facultative comme limite du nombre de demandes de l'API. Les données les plus récentes sont retournées en premier. Si <code>pageLimit</code> n'est pas spécifié, toutes les données sont retournées. Stripe version 2015-10-16 est utilisé."
  },
  "Stripe.Contents_Documentation.Examples_0_Description": {
    "message": "Retourne toutes les données des frais"
  },
  "Stripe.Contents_Documentation.Examples_0_Code": {
    "message": "Stripe.Contents(\"charges\")"
  },
  "Stripe.Contents_Documentation.Examples_0_Result": {
    "message": "Table avec toutes les données des frais pour le compte Stripe actif"
  },
  "Stripe.Contents_Documentation.Examples_1_Description": {
    "message": "Retourne une page de données des frais"
  },
  "Stripe.Contents_Documentation.Examples_1_Code": {
    "message": "Stripe.Contents(\"charges\", [], 1)"
  },
  "Stripe.Contents_Documentation.Examples_1_Result": {
    "message": "Table avec les données des frais les plus récents pour le compte Stripe actif"
  },
  "SumTotal.ODataFeed_Documentation.Name": {
    "message": "SumTotal BI Connector"
  },
  "SumTotal.ODataFeed_Documentation.LongDescription": {
    "message": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed"
  },
  "SumTotal.ODataFeed_Documentation.Examples_0_Description": {
    "message": "Returns a table with specified entity data"
  },
  "SumTotal.ODataFeed_Documentation.Examples_0_Code": {
    "message": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')"
  },
  "SumTotal.ODataFeed_Documentation.Examples_0_Result": {
    "message": " Source{[Name='{OData Entity chosen}']}[Data]"
  },
  "Table.Buffer_Documentation.Name": {
    "message": "Table.Buffer"
  },
  "Table.Buffer_Documentation.Description": {
    "message": "Place une table dans la mémoire tampon, en l'isolant des modifications externes pendant l'évaluation."
  },
  "Table.Buffer_Documentation.LongDescription": {
    "message": "Met une table en mémoire tampon, l'isolant des modifications externes lors de l'évaluation.\r\n    La mise en mémoire tampon est peu profonde. Il force l’évaluation de toutes les valeurs de cellules scalaires, mais laisse les valeurs non scalaires (enregistrements, listes, tables, etc.) telles quelles.\r\n    <br>\r\n    <br>\r\n    Notez que l’utilisation de cette fonction peut ou non accélérer l’exécution de vos requêtes. Dans certains cas, cela peut ralentir l’exécution de vos requêtes en raison de l’ajout \r\n    le coût de la lecture de toutes les données et de leur stockage en mémoire, ainsi que le fait que la mise en mémoire tampon empêche le repliement en aval. Si les données n’ont pas besoin d’être\r\n    mis en mémoire tampon mais que vous souhaitez simplement empêcher le pliage en aval, utilisez plutôt <code>Table.StopFolding</code>."
  },
  "Table.Buffer_Documentation.Category": {
    "message": "Table.Other"
  },
  "Table.Buffer_Documentation.Examples_0_Description": {
    "message": "Chargez toutes les lignes d'une table SQL en mémoire, afin que les opérations en aval ne puissent plus interroger le serveur SQL."
  },
  "Table.Buffer_Documentation.Examples_0_Code": {
    "message": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable"
  },
  "Table.Buffer_Documentation.Examples_0_Result": {
    "message": "table"
  },
  "Table.Combine_Documentation.Name": {
    "message": "Table.Combine"
  },
  "Table.Combine_Documentation.Description": {
    "message": "Retourne une table qui est le résultat de la fusion d'une liste de tables."
  },
  "Table.Combine_Documentation.LongDescription": {
    "message": "Retourne une table résultant de la fusion d'une liste de tables, <code>tables</code>. La table résultante a une structure de type de ligne définie par <code>columns</code> ou par l'union des types d'entrée si <code>columns</code> n'est pas spécifié."
  },
  "Table.Combine_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.Combine_Documentation.Examples_0_Description": {
    "message": "Fusionne les trois tables ensemble."
  },
  "Table.Combine_Documentation.Examples_0_Code": {
    "message": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})"
  },
  "Table.Combine_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.Combine_Documentation.Examples_1_Description": {
    "message": "Fusionnez trois tables avec différentes structures."
  },
  "Table.Combine_Documentation.Examples_1_Code": {
    "message": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})"
  },
  "Table.Combine_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
  },
  "Table.Combine_Documentation.Examples_2_Description": {
    "message": "Fusionnez deux tables et projetez sur le type donné."
  },
  "Table.Combine_Documentation.Examples_2_Code": {
    "message": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)"
  },
  "Table.Combine_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
  },
  "Table.DemoteHeaders_Documentation.Name": {
    "message": "Table.DemoteHeaders"
  },
  "Table.DemoteHeaders_Documentation.Description": {
    "message": "Rétrograde les en-têtes des colonnes à la première ligne de valeurs."
  },
  "Table.DemoteHeaders_Documentation.LongDescription": {
    "message": "Rétrograde les en-têtes des colonnes (par exemple, les noms des colonnes) à la première ligne de valeurs. Les noms de colonne par défaut sont « Column1 », « Column2 » et ainsi de suite."
  },
  "Table.DemoteHeaders_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.DemoteHeaders_Documentation.Examples_0_Description": {
    "message": "Rétrograde la première ligne des valeurs dans la table."
  },
  "Table.DemoteHeaders_Documentation.Examples_0_Code": {
    "message": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)"
  },
  "Table.DemoteHeaders_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
  },
  "Table.Distinct_Documentation.Name": {
    "message": "Table.Distinct"
  },
  "Table.Distinct_Documentation.Description": {
    "message": "Supprime les doublons de lignes de la table."
  },
  "Table.Distinct_Documentation.LongDescription": {
    "message": "Supprime les lignes dupliquées de la table.\r\n    Un paramètre facultatif, <code>equationCriteria</code>, spécifie les colonnes de la table testées pour la duplication. Si <code>equationCriteria</code> n’est pas spécifié, toutes les colonnes sont testées.<br>\r\n    <br>\r\n    Parce que Power Query décharge parfois certaines opérations sur des sources de données de back-end (appelées « pliage ») et optimise parfois les requêtes en \r\n    ignorant les opérations qui ne sont pas strictement nécessaires. En général, il n’existe aucune garantie de conservation des doublons spécifiques.\r\n    Par exemple, vous ne pouvez pas supposer que la première ligne avec un ensemble unique de valeurs de colonnes reste et que les lignes plus bas dans la table sont supprimées.\r\n    Si vous voulez que la suppression des doublons se comporte de manière prévisible, commencez par mettre la table en mémoire tampon à l’aide de <code>Table.Buffer</code>."
  },
  "Table.Distinct_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.Distinct_Documentation.Examples_0_Description": {
    "message": "Supprime les lignes en doublon dans la table."
  },
  "Table.Distinct_Documentation.Examples_0_Code": {
    "message": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)"
  },
  "Table.Distinct_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
  },
  "Table.Distinct_Documentation.Examples_1_Description": {
    "message": "Supprime les doublons de lignes de la colonne [b] dans la table <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code>."
  },
  "Table.Distinct_Documentation.Examples_1_Code": {
    "message": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)"
  },
  "Table.Distinct_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
  },
  "Table.FromColumns_Documentation.Name": {
    "message": "Table.FromColumns"
  },
  "Table.FromColumns_Documentation.Description": {
    "message": "Crée une table à partir d'une liste de colonnes et de valeurs spécifiées."
  },
  "Table.FromColumns_Documentation.LongDescription": {
    "message": "Crée une table de type <code>columns</code> depuis une liste <code>lists</code> contenant des listes imbriquées avec les noms des colonnes et les valeurs.\r\n    Si certaines colonnes ont plus de valeurs que d'autres, les valeurs manquantes sont renseignées avec la valeur par défaut, 'null', si les colonnes sont nullables."
  },
  "Table.FromColumns_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Table.FromColumns_Documentation.Examples_0_Description": {
    "message": "Retourne une table à partir d'une liste de noms de clients (customer) d'une liste. Chaque valeur de l'élément de la liste de clients devient une valeur de ligne, et chaque liste devient une colonne."
  },
  "Table.FromColumns_Documentation.Examples_0_Code": {
    "message": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})"
  },
  "Table.FromColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
  },
  "Table.FromColumns_Documentation.Examples_1_Description": {
    "message": "Crée une table à partir d'une liste spécifiée de colonnes et une liste de noms de colonnes."
  },
  "Table.FromColumns_Documentation.Examples_1_Code": {
    "message": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)"
  },
  "Table.FromColumns_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.FromColumns_Documentation.Examples_2_Description": {
    "message": "Crée une table avec un nombre de colonnes différent selon les lignes. La valeur manquante d'une ligne est null."
  },
  "Table.FromColumns_Documentation.Examples_2_Code": {
    "message": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)"
  },
  "Table.FromColumns_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
  },
  "Table.FromList_Documentation.Name": {
    "message": "Table.FromList"
  },
  "Table.FromList_Documentation.Description": {
    "message": "Convertit une liste en table en appliquant la fonction de fractionnement spécifiée à chaque élément de la liste."
  },
  "Table.FromList_Documentation.LongDescription": {
    "message": "Convertit une liste <code>list</code> en table en appliquant la fonction de fractionnement facultative <code>splitter</code> à chaque élément de la liste. Par défaut, la liste est supposée être une liste de valeurs de texte fractionnées par des virgules. Le <code>columns</code> facultatif peut être le nombre de colonnes, une liste de colonnes ou un TableType. Les paramètres facultatifs <code>default</code> et <code>extraValues</code> peuvent aussi être spécifiés."
  },
  "Table.FromList_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Table.FromList_Documentation.Examples_0_Description": {
    "message": "Crée une table à partir de la liste avec la colonne nommée « Letters », en utilisant le séparateur par défaut."
  },
  "Table.FromList_Documentation.Examples_0_Code": {
    "message": "Table.FromList({\"a\", \"b\", \"c\", \"d\"}, null, {\"Letters\"})"
  },
  "Table.FromList_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Letters = \"a\"],\r\n    [Letters = \"b\"],\r\n    [Letters = \"c\"],\r\n    [Letters = \"d\"]\r\n})\r\n"
  },
  "Table.FromList_Documentation.Examples_1_Description": {
    "message": "Crée une table à partir de la liste en utilisant le séparateur Record.FieldValues, la table résultante ayant « CustomerID » et « Name » comme noms de colonne."
  },
  "Table.FromList_Documentation.Examples_1_Code": {
    "message": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)"
  },
  "Table.FromList_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
  },
  "Table.FromRecords_Documentation.Name": {
    "message": "Table.FromRecords"
  },
  "Table.FromRecords_Documentation.Description": {
    "message": "Convertit une liste d'enregistrements en une table."
  },
  "Table.FromRecords_Documentation.LongDescription": {
    "message": "Convertit <code>records</code>, une liste d'enregistrements, en une table."
  },
  "Table.FromRecords_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Table.FromRecords_Documentation.Examples_0_Description": {
    "message": "Créez une table à partir des enregistrements. Les noms des champs d'enregistrement sont utilisés pour nommer les colonnes."
  },
  "Table.FromRecords_Documentation.Examples_0_Code": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.FromRecords_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.FromRecords_Documentation.Examples_1_Description": {
    "message": "Créez une table à partir des enregistrements avec des colonnes typées et sélectionnez les colonnes de nombres."
  },
  "Table.FromRecords_Documentation.Examples_1_Code": {
    "message": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)"
  },
  "Table.FromRecords_Documentation.Examples_1_Result": {
    "message": "{\"CustomerID\"}"
  },
  "Table.FromRows_Documentation.Name": {
    "message": "Table.FromRows"
  },
  "Table.FromRows_Documentation.Description": {
    "message": "Crée une table à partir d'une liste de valeurs de ligne et de colonnes facultatives"
  },
  "Table.FromRows_Documentation.LongDescription": {
    "message": "Crée une table à partir de la liste <code>rows</code>, où chaque élément de la liste est une liste interne qui contient les valeurs des colonnes pour une seule ligne. Une liste facultative de noms de colonnes, un type de table ou un nombre de colonnes peut être fourni pour <code>columns</code>."
  },
  "Table.FromRows_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Table.FromRows_Documentation.Examples_0_Description": {
    "message": "Retourne une table avec la colonne [CustomerID] avec les valeurs {1, 2}, la colonne [Name] avec les valeurs {\"Bob\", \"Jim\"} et la colonne [Phone] avec les valeurs {\"123-4567\", \"987-6543\"}."
  },
  "Table.FromRows_Documentation.Examples_0_Code": {
    "message": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)"
  },
  "Table.FromRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
  },
  "Table.FromRows_Documentation.Examples_1_Description": {
    "message": "Retourne une table avec la colonne [CustomerID] avec les valeurs {1, 2}, la colonne [Name] avec les valeurs {\"Bob\", \"Jim\"} et la colonne [Phone] avec les valeurs {\"123-4567\", \"987-6543\"}, où [CustomerID] a le type nombre, et où [Name] et [Phone] ont le type texte."
  },
  "Table.FromRows_Documentation.Examples_1_Code": {
    "message": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)"
  },
  "Table.FromRows_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
  },
  "Table.FromValue_Documentation.Name": {
    "message": "Table.FromValue"
  },
  "Table.FromValue_Documentation.Description": {
    "message": "Crée une table avec une colonne à partir de la valeur ou des valeurs fournies."
  },
  "Table.FromValue_Documentation.LongDescription": {
    "message": "Crée une table avec une colonne contenant la valeur fournie ou une liste de valeurs <code>value</code>. Le paramètre d'enregistrement facultatif <code>options</code> peut être spécifié pour contrôler les options suivantes :\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : nom de colonne utilisé pendant la création de la table à partir d'une liste ou d'une valeur scalaire.</li>\r\n    </ul>\r\n  "
  },
  "Table.FromValue_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Table.FromValue_Documentation.Examples_0_Description": {
    "message": "Créez une table à partir de la valeur 1."
  },
  "Table.FromValue_Documentation.Examples_0_Code": {
    "message": "Table.FromValue(1)"
  },
  "Table.FromValue_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[Value = 1]})"
  },
  "Table.FromValue_Documentation.Examples_1_Description": {
    "message": "Crée une table à partir de la liste."
  },
  "Table.FromValue_Documentation.Examples_1_Code": {
    "message": "Table.FromValue({1, \"Bob\", \"123-4567\"})"
  },
  "Table.FromValue_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
  },
  "Table.FromValue_Documentation.Examples_2_Description": {
    "message": "Créez une table à partir de la valeur 1, avec un nom de colonne personnalisé."
  },
  "Table.FromValue_Documentation.Examples_2_Code": {
    "message": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])"
  },
  "Table.FromValue_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({[MyValue = 1]})"
  },
  "Table.PartitionValues_Documentation.Name": {
    "message": "Table.PartitionValues"
  },
  "Table.PartitionValues_Documentation.Description": {
    "message": "Retourne les informations de partition d'une table."
  },
  "Table.PartitionValues_Documentation.LongDescription": {
    "message": "Retourne les informations de partition d'une table.  Une table est retournée pour chaque colonne qui est une colonne de partition dans la table d'origine, et pour chaque ligne qui correspond à une partition dans la table d'origine."
  },
  "Table.PartitionValues_Documentation.Category": {
    "message": "Table.Information"
  },
  "Table.Profile_Documentation.Name": {
    "message": "Table.Profile"
  },
  "Table.Profile_Documentation.Description": {
    "message": "Retourne un profil des colonnes d'une table."
  },
  "Table.Profile_Documentation.LongDescription": {
    "message": "<p>Retourne un profil pour les colonnes dans <code>table</code>.</p>\r\n<p>Les informations suivantes sont retournées pour chaque colonne (si applicable) :\r\n<ul>\r\n  <li>minimum</li>\r\n  <li>maximum</li>\r\n  <li>moyenne</li>\r\n  <li>écart type</li>\r\n  <li>nombre total</li>\r\n  <li>nombre d'éléments null</li>\r\n  <li>nombre d'éléments distincts</li>\r\n</ul>\r\n</p>"
  },
  "Table.Profile_Documentation.Category": {
    "message": "Table.Information"
  },
  "Table.PromoteHeaders_Documentation.Name": {
    "message": "Table.PromoteHeaders"
  },
  "Table.PromoteHeaders_Documentation.Description": {
    "message": "Promeut la première ligne des valeurs comme les nouveaux en-têtes de colonnes (par exemple, les noms de colonnes)."
  },
  "Table.PromoteHeaders_Documentation.LongDescription": {
    "message": "Promeut la première ligne de valeurs comme les nouveaux en-têtes de colonnes (par exemple, les noms de colonnes). Par défaut, seules les valeurs de texte ou de nombre sont promues en en-têtes. Options valides :\r\n    <div>\r\n      <code>PromoteAllScalars</code> : si elles sont <code>true</code>, toutes les valeurs scalaires de la première ligne sont promues en en-têtes à l'aide de la <code>Culture</code>, si elle est spécifiée (ou les paramètres régionaux actuels du document).\r\n    Pour les valeurs qui ne peuvent pas être converties en texte, un nom de colonne par défaut est utilisé.\r\n    </div>\r\n    <div>\r\n    <code>Culture</code> : nom de culture spécifiant la culture pour les données.\r\n    </div>\r\n  "
  },
  "Table.PromoteHeaders_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.PromoteHeaders_Documentation.Examples_0_Description": {
    "message": "Promeut la première ligne des valeurs dans la table."
  },
  "Table.PromoteHeaders_Documentation.Examples_0_Code": {
    "message": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)"
  },
  "Table.PromoteHeaders_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
  },
  "Table.PromoteHeaders_Documentation.Examples_1_Description": {
    "message": "Promouvez toutes les valeurs scalaires de la première ligne de la table en en-têtes."
  },
  "Table.PromoteHeaders_Documentation.Examples_1_Code": {
    "message": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)"
  },
  "Table.PromoteHeaders_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
  },
  "Table.RemoveFirstN_Documentation.Name": {
    "message": "Table.RemoveFirstN"
  },
  "Table.RemoveFirstN_Documentation.Description": {
    "message": "Retourne une table en ignorant les premières lignes, en fonction d'un nombre."
  },
  "Table.RemoveFirstN_Documentation.LongDescription": {
    "message": "Retourne une table qui ne contient pas le nombre spécifié de premières lignes, <code>countOrCondition</code>, de la table <code>table</code>.\r\n    Le nombre de lignes supprimées dépend du paramètre facultatif <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Si <code>countOrCondition</code> est omis, seule la première ligne est supprimée. </li>\r\n    <li> Si <code>countOrCondition</code> est un nombre, autant de lignes (démarrant par le haut) sont supprimées. </li>\r\n    <li> Si <code>countOrCondition</code> est une condition, les lignes qui satisfont la condition sont supprimées jusqu'au moment où une ligne ne remplit pas la condition.</li>\r\n    </ul>"
  },
  "Table.RemoveFirstN_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.RemoveFirstN_Documentation.Examples_0_Description": {
    "message": "Supprime la première ligne de la table."
  },
  "Table.RemoveFirstN_Documentation.Examples_0_Code": {
    "message": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)"
  },
  "Table.RemoveFirstN_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.RemoveFirstN_Documentation.Examples_1_Description": {
    "message": "Supprime les deux premières lignes de la table."
  },
  "Table.RemoveFirstN_Documentation.Examples_1_Code": {
    "message": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)"
  },
  "Table.RemoveFirstN_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.RemoveFirstN_Documentation.Examples_2_Description": {
    "message": "Supprime les premières lignes de la table où [CustomerID] <=2."
  },
  "Table.RemoveFirstN_Documentation.Examples_2_Code": {
    "message": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)"
  },
  "Table.RemoveFirstN_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.RemoveLastN_Documentation.Name": {
    "message": "Table.RemoveLastN"
  },
  "Table.RemoveLastN_Documentation.Description": {
    "message": "Retourne une table avec les N dernières lignes supprimées."
  },
  "Table.RemoveLastN_Documentation.LongDescription": {
    "message": "Retourne une table qui ne contient pas les <code>countOrCondition</code> dernières lignes de la table <code>table</code>.\r\n        Le nombre de lignes supprimées dépend du paramètre facultatif <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Si <code>countOrCondition</code> est omis, seule la dernière ligne est supprimée. </li>\r\n    <li> Si <code>countOrCondition</code> est un nombre, autant de lignes (démarrant par le bas) sont supprimées. </li>\r\n    <li> Si <code>countOrCondition</code> est une condition, les lignes qui satisfont la condition sont supprimées jusqu'au moment où une ligne ne remplit pas la condition.</li>\r\n    </ul>"
  },
  "Table.RemoveLastN_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.RemoveLastN_Documentation.Examples_0_Description": {
    "message": "Supprime la dernière ligne de la table."
  },
  "Table.RemoveLastN_Documentation.Examples_0_Code": {
    "message": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)"
  },
  "Table.RemoveLastN_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.RemoveLastN_Documentation.Examples_1_Description": {
    "message": "Supprime les dernières lignes de la table où [CustomerID] >2."
  },
  "Table.RemoveLastN_Documentation.Examples_1_Code": {
    "message": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)"
  },
  "Table.RemoveLastN_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Table.RemoveRowsWithErrors_Documentation.Name": {
    "message": "Table.RemoveRowsWithErrors"
  },
  "Table.RemoveRowsWithErrors_Documentation.Description": {
    "message": "Retourne une table avec les lignes supprimées de la table d'entrée qui contiennent une erreur dans au moins l'une des cellules. Si une liste de colonnes est spécifiée, alors seules les cellules dans les colonnes spécifiées sont inspectées pour rechercher des erreurs."
  },
  "Table.RemoveRowsWithErrors_Documentation.LongDescription": {
    "message": "Retourne une table avec les lignes supprimées de la table d'entrée qui contiennent une erreur dans au moins l'une des cellules. Si une liste de colonnes est spécifiée, alors seules les cellules dans les colonnes spécifiées sont inspectées pour rechercher des erreurs."
  },
  "Table.RemoveRowsWithErrors_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.RemoveRowsWithErrors_Documentation.Examples_0_Description": {
    "message": "Supprimez la valeur d'erreur de la première ligne."
  },
  "Table.RemoveRowsWithErrors_Documentation.Examples_0_Code": {
    "message": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)"
  },
  "Table.RemoveRowsWithErrors_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
  },
  "Table.ReverseRows_Documentation.Name": {
    "message": "Table.ReverseRows"
  },
  "Table.ReverseRows_Documentation.Description": {
    "message": "Retourne une table avec les lignes en ordre inverse."
  },
  "Table.ReverseRows_Documentation.LongDescription": {
    "message": "Retourne une table avec les lignes depuis l'entrée <code>table</code> dans l'ordre inverse."
  },
  "Table.ReverseRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.ReverseRows_Documentation.Examples_0_Description": {
    "message": "Inverse les lignes dans la table."
  },
  "Table.ReverseRows_Documentation.Examples_0_Code": {
    "message": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)"
  },
  "Table.ReverseRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
  },
  "Table.Schema_Documentation.Name": {
    "message": "Table.Schema"
  },
  "Table.Schema_Documentation.Description": {
    "message": "Retourne une table contenant une description des colonnes (c'est-à-dire le schéma) de la table spécifiée."
  },
  "Table.Schema_Documentation.LongDescription": {
    "message": "<p>Renvoie un tableau décrivant les colonnes de <code>table</code>.</p>\r\n<p>Chaque ligne du tableau décrit les propriétés d'une colonne de <code>table</code> : </p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>Nom de la colonne</b></td>\r\n    <td><b>Description</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Nom</code></td>\r\n    <td>Le nom de la colonne.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Position</code></td>\r\n    <td>La position de base 0 de la colonne dans <code>table</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>Le nom du type de la colonne.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Kind</code></td>\r\n    <td>Le genre du type de la colonne.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>Si la colonne peut contenir des valeurs <code>null</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>La base numérique (par exemple, base-2 ou base-10) des champs <code>NumericPrecision</code> et <code>NumericScale</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>La précision d'une colonne numérique dans la base spécifiée par <code>NumericPrecisionBase</code>. Il s'agit du nombre maximum de chiffres pouvant être représentés par une valeur de ce type (y compris les chiffres fractionnaires).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>L'échelle d'une colonne numérique dans la base spécifiée par <code>NumericPrecisionBase</code>. C'est le nombre de chiffres dans la partie fractionnaire d'une valeur de ce type. Une valeur de <code>0</code> indique une échelle fixe sans chiffres fractionnaires. Une valeur <code>null</code> indique que l'échelle n'est pas connue (soit parce qu'elle est flottante ou non définie).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>Le nombre maximum de chiffres fractionnaires pris en charge dans la partie secondes d'une valeur de date ou d'heure.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>Le nombre maximum de caractères autorisés dans une colonne <code>text</code>, ou le nombre maximum d'octets autorisés dans une colonne <code>binary</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>Indique si cette colonne peut varier en longueur (jusqu'à <code>MaxLength</code>) ou si elle est de taille fixe.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>Le nom du type de la colonne dans le système de types natif de la source (par exemple, <code>nvarchar</code> pour SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>L'expression par défaut pour une valeur de cette colonne dans le langage d'expression natif de la source (par exemple, <code>42</code> ou <code>newid()</code> pour SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Description</code></td>\r\n    <td>La description de la colonne.</td>\r\n  </tr>\r\n</table></p>"
  },
  "Table.Schema_Documentation.Category": {
    "message": "Table.Information"
  },
  "Table.SelectRowsWithErrors_Documentation.Name": {
    "message": "Table.SelectRowsWithErrors"
  },
  "Table.SelectRowsWithErrors_Documentation.Description": {
    "message": "Retourne une table avec uniquement les lignes supprimées de la table d'entrée qui contiennent une erreur dans au moins l'une des cellules. Si une liste de colonnes est spécifiée, alors seules les cellules dans les colonnes spécifiées sont inspectées pour rechercher des erreurs."
  },
  "Table.SelectRowsWithErrors_Documentation.LongDescription": {
    "message": "Retourne une table avec uniquement les lignes supprimées de la table d'entrée qui contiennent une erreur dans au moins l'une des cellules. Si une liste de colonnes est spécifiée, alors seules les cellules dans les colonnes spécifiées sont inspectées pour rechercher des erreurs."
  },
  "Table.SelectRowsWithErrors_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.SelectRowsWithErrors_Documentation.Examples_0_Description": {
    "message": "Sélectionnez les noms de clients avec des erreurs dans leurs lignes."
  },
  "Table.SelectRowsWithErrors_Documentation.Examples_0_Code": {
    "message": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]"
  },
  "Table.SelectRowsWithErrors_Documentation.Examples_0_Result": {
    "message": "{\"Bob\"}"
  },
  "Table.Skip_Documentation.Name": {
    "message": "Table.Skip"
  },
  "Table.Skip_Documentation.Description": {
    "message": "Retourne une table en ignorant les premières lignes, en fonction d'un nombre."
  },
  "Table.Skip_Documentation.LongDescription": {
    "message": "Retourne une table qui ne contient pas le nombre spécifié de premières lignes, <code>countOrCondition</code>, de la table <code>table</code>.\r\n    Le nombre de lignes ignorées dépend du paramètre facultatif <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Si <code>countOrCondition</code> est omis, seule la première ligne est ignorée. </li>\r\n    <li> Si <code>countOrCondition</code> est un nombre, autant de lignes (démarrant par le haut) sont ignorées. </li>\r\n    <li> Si <code>countOrCondition</code> est une condition, les lignes qui satisfont la condition sont ignorées jusqu'au moment où une ligne ne remplit pas la condition.</li>\r\n    </ul>"
  },
  "Table.Skip_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.Skip_Documentation.Examples_0_Description": {
    "message": "Ignore la première ligne de la table."
  },
  "Table.Skip_Documentation.Examples_0_Code": {
    "message": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)"
  },
  "Table.Skip_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.Skip_Documentation.Examples_1_Description": {
    "message": "Ignore les deux premières lignes de la table."
  },
  "Table.Skip_Documentation.Examples_1_Code": {
    "message": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)"
  },
  "Table.Skip_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.Skip_Documentation.Examples_2_Description": {
    "message": "Ignore les premières lignes de la table où [Price ] > 25."
  },
  "Table.Skip_Documentation.Examples_2_Code": {
    "message": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)"
  },
  "Table.Skip_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
  },
  "Table.StopFolding_Documentation.Name": {
    "message": "Table.StopFolding"
  },
  "Table.StopFolding_Documentation.Description": {
    "message": "Empêche toute opération en aval d’être exécutée sur la source d’origine des données."
  },
  "Table.StopFolding_Documentation.LongDescription": {
    "message": "Empêche toute opération en aval d’être exécutée sur la source d’origine des données dans <code>table</code>."
  },
  "Table.StopFolding_Documentation.Category": {
    "message": "Table.Other"
  },
  "Table.StopFolding_Documentation.Examples_0_Description": {
    "message": "Récupère les données d’une table SQL de manière à empêcher toute opération en aval de s’exécuter en tant que requête sur le serveur SQL."
  },
  "Table.StopFolding_Documentation.Examples_0_Code": {
    "message": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable"
  },
  "Table.StopFolding_Documentation.Examples_0_Result": {
    "message": "table"
  },
  "Table.Transpose_Documentation.Name": {
    "message": "Table.Transpose"
  },
  "Table.Transpose_Documentation.Description": {
    "message": "Convertit les colonnes en lignes et les lignes en colonnes."
  },
  "Table.Transpose_Documentation.LongDescription": {
    "message": "Convertit les colonnes en lignes et les lignes en colonnes."
  },
  "Table.Transpose_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.Transpose_Documentation.Examples_0_Description": {
    "message": "Transforme les lignes de la table des paires nom-valeur en colonnes."
  },
  "Table.Transpose_Documentation.Examples_0_Code": {
    "message": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)"
  },
  "Table.Transpose_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
  },
  "Tables.GetRelationships_Documentation.Name": {
    "message": "Tables.GetRelationships"
  },
  "Tables.GetRelationships_Documentation.Description": {
    "message": "Obtient les relations entre un ensemble de tables."
  },
  "Tables.GetRelationships_Documentation.LongDescription": {
    "message": "Obtient les relations entre un ensemble de tables. L'ensemble <code>tables</code> est supposé avoir une structure similaire à celle d'une table de navigation. La colonne définie par <code>dataColumn</code> contient les tables de données réelles."
  },
  "Tables.GetRelationships_Documentation.Category": {
    "message": "Table.Information"
  },
  "TeamDesk.Database_Documentation.Name": {
    "message": "TeamDesk.Database"
  },
  "TeamDesk.Database_Documentation.LongDescription": {
    "message": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from."
  },
  "TeamDesk.Database_Documentation.Examples_0_Description": {
    "message": "Connect to sample TeamDesk database"
  },
  "TeamDesk.Database_Documentation.Examples_0_Code": {
    "message": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")"
  },
  "TeamDesk.Database_Documentation.Examples_0_Result": {
    "message": "Navigation table"
  },
  "TeamDesk.Select_Documentation.Name": {
    "message": "TeamDesk.Select"
  },
  "TeamDesk.Select_Documentation.LongDescription": {
    "message": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved."
  },
  "TeamDesk.Select_Documentation.Examples_0_Description": {
    "message": "Selects text and date columns"
  },
  "TeamDesk.Select_Documentation.Examples_0_Code": {
    "message": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })"
  },
  "TeamDesk.Select_Documentation.Examples_0_Result": {
    "message": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
  },
  "TeamDesk.SelectView_Documentation.Name": {
    "message": "TeamDesk.SelectView"
  },
  "TeamDesk.SelectView_Documentation.LongDescription": {
    "message": "Retrieves the data from provided table and view. You can also apply an additional filter for results."
  },
  "TeamDesk.SelectView_Documentation.Examples_0_Description": {
    "message": "Retrieve all meetings from List All view"
  },
  "TeamDesk.SelectView_Documentation.Examples_0_Code": {
    "message": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")"
  },
  "TeamDesk.SelectView_Documentation.Examples_0_Result": {
    "message": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
  },
  "TeamDesk.SelectView_Documentation.Examples_1_Description": {
    "message": "Retrieve today's meetings from List All view"
  },
  "TeamDesk.SelectView_Documentation.Examples_1_Code": {
    "message": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")"
  },
  "TeamDesk.SelectView_Documentation.Examples_1_Result": {
    "message": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
  },
  "Teradata.Database_Documentation.Name": {
    "message": "Teradata.Database"
  },
  "Teradata.Database_Documentation.Description": {
    "message": "Retourne une table des tables SQL et des onglets depuis la base de données Teradata."
  },
  "Teradata.Database_Documentation.LongDescription": {
    "message": "Retourne une table des tables SQL et des vues depuis la base de données Teradata sur le serveur <code>server</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "Teradata.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "TibcoTdv.DataSource_Documentation.DisplayName": {
    "message": "Power BI Connector for TIBCO(R) Data Virtualization"
  },
  "TibcoTdv.DataSource_Documentation.Caption": {
    "message": "Power BI Connector for TIBCO(R) Data Virtualization"
  },
  "TibcoTdv.DataSource_Documentation.Name": {
    "message": "Power BI Connector for TIBCO(R) Data Virtualization"
  },
  "TimeSeriesInsights.Contents_Documentation.Name": {
    "message": "Azure Time Series Insights"
  },
  "Troux.Feed_Documentation.Description": {
    "message": "Enter the URL of your Planview Enterprise Architecture account."
  },
  "Troux.Feed_Documentation.DisplayName": {
    "message": "Planview Enterprise Architecture"
  },
  "Troux.Feed_Documentation.Caption": {
    "message": "Troux.Feed"
  },
  "Troux.Feed_Documentation.Name": {
    "message": "Planview Enterprise Architecture"
  },
  "Troux.Feed_Documentation.LongDescription": {
    "message": "Returns a table with relevant Planview Enterprise Architecture data."
  },
  "Twilio.Tables_Documentation.Description": {
    "message": "Entrez le nombre de mois des données Twilio historiques à récupérer."
  },
  "Twilio.Tables_Documentation.DisplayName": {
    "message": "Twilio"
  },
  "Twilio.Tables_Documentation.Caption": {
    "message": "Twilio.Tables"
  },
  "Twilio.Tables_Documentation.Name": {
    "message": "Twilio"
  },
  "Twilio.Tables_Documentation.LongDescription": {
    "message": "Retourne une table avec les données Twilio appropriées."
  },
  "Type.TableSchema_Documentation.Name": {
    "message": "Type.TableSchema"
  },
  "Type.TableSchema_Documentation.Description": {
    "message": "Retourne une table contenant une description des colonnes (c'est-à-dire le schéma) du type de table spécifié."
  },
  "Type.TableSchema_Documentation.LongDescription": {
    "message": "<p>Retourne une table décrivant les colonnes de <code>tableType</code>.</p>\r\n<p>Référez-vous à la documentation de <code>Table.Schema</code> pour une description de la table obtenue.</p>"
  },
  "Type.TableSchema_Documentation.Category": {
    "message": "Type"
  },
  "Usercube.Universes_Documentation.Name": {
    "message": "Usercube"
  },
  "Usercube.Universes_Documentation.LongDescription": {
    "message": "Provides data from a Usercube instance"
  },
  "Usercube.Universes_Documentation.Examples_0_Description": {
    "message": "Returns the universe data defined in the Usercube database."
  },
  "Usercube.Universes_Documentation.Examples_0_Code": {
    "message": "Usercube.Universes(\"https://mycompany.usercube.com\")"
  },
  "Usercube.Universes_Documentation.Examples_0_Result": {
    "message": "Navigation table containing Usercube's universes"
  },
  "VSTS.Feed_Documentation.Description": {
    "message": "Flux Azure DevOps Services"
  },
  "VSTS.Feed_Documentation.DisplayName": {
    "message": "Flux Azure DevOps Services"
  },
  "VSTS.Feed_Documentation.Caption": {
    "message": "VSTS.Feed"
  },
  "VSTS.Feed_Documentation.Name": {
    "message": "VSTS.Feed"
  },
  "VSTS.Feed_Documentation.LongDescription": {
    "message": "Retourne une table de flux OData offerts par Azure DevOps."
  },
  "Value.Traits_Documentation.Name": {
    "message": "Value.Traits"
  },
  "Value.Traits_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Value.Traits_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Value.Traits_Documentation.Category": {
    "message": "Expression"
  },
  "Value.Versions_Documentation.Name": {
    "message": "Value.Versions"
  },
  "Value.Versions_Documentation.Description": {
    "message": "Value.Versions"
  },
  "Value.Versions_Documentation.LongDescription": {
    "message": "Value.Versions"
  },
  "Value.Versions_Documentation.Category": {
    "message": "Action"
  },
  "Vena.Contents_Documentation.Name": {
    "message": "Vena 1.0.4"
  },
  "Vena.Contents_Documentation.LongDescription": {
    "message": "Vena"
  },
  "VivaInsights.Data_Documentation.Name": {
    "message": "Connectez-vous aux données de Viva Insights"
  },
  "VivaInsights.Data_Documentation.LongDescription": {
    "message": "Importez les données d'attribut et les métriques toutes les semaines à partir du service Analyse du temps de travail."
  },
  "VivaInsights.Data_Documentation.Examples_0_Description": {
    "message": "Retourne une table avec des attributs visibles et des métriques hebdomadaires pour chaque employé évalué dans la partition."
  },
  "VivaInsights.Data_Documentation.Examples_0_Code": {
    "message": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")"
  },
  "VivaInsights.Data_Documentation.Examples_0_Result": {
    "message": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
  },
  "Web.Page_Documentation.Name": {
    "message": "Web.Page"
  },
  "Web.Page_Documentation.Description": {
    "message": "Retourne le contenu du document HTML réparti dans ses structures constituantes, et une représentation du document entier et de son texte après la suppression des indicateurs."
  },
  "Web.Page_Documentation.LongDescription": {
    "message": "Retourne le contenu du document HTML réparti dans ses structures constituantes, et une représentation du document entier et de son texte après la suppression des indicateurs."
  },
  "Web.Page_Documentation.Category": {
    "message": "Accessing data"
  },
  "Webtrends.KeyMetrics_Documentation.Description": {
    "message": "Retourne une table avec les mesures Webtrends clés."
  },
  "Webtrends.KeyMetrics_Documentation.DisplayName": {
    "message": "Webtrends.KeyMetrics"
  },
  "Webtrends.KeyMetrics_Documentation.Caption": {
    "message": "Webtrends.KeyMetrics"
  },
  "Webtrends.KeyMetrics_Documentation.Name": {
    "message": "Webtrends.KeyMetrics"
  },
  "Webtrends.KeyMetrics_Documentation.LongDescription": {
    "message": "Effectue un appel au point de terminaison Webtrends KeyMetrics et retourne toutes les données sous la forme d'une table."
  },
  "Webtrends.KeyMetrics_Documentation.Examples_0_Description": {
    "message": "Extrait une table de mesures clés pour le client 98765 au cours des 30 derniers jours"
  },
  "Webtrends.KeyMetrics_Documentation.Examples_0_Code": {
    "message": "Webtrends.KeyMetrics(\"98765\")"
  },
  "Webtrends.KeyMetrics_Documentation.Examples_0_Result": {
    "message": "Table de mesures clés"
  },
  "Webtrends.Tables_Documentation.Description": {
    "message": "Entrez l'ID de profil associé à votre compte Webtrends."
  },
  "Webtrends.Tables_Documentation.DisplayName": {
    "message": "Webtrends"
  },
  "Webtrends.Tables_Documentation.Caption": {
    "message": "Webtrends.Tables"
  },
  "Webtrends.Tables_Documentation.Name": {
    "message": "Webtrends"
  },
  "Webtrends.Tables_Documentation.LongDescription": {
    "message": "Retourne une table avec les données Webtrends appropriées."
  },
  "Witivio.Contents_Documentation.Name": {
    "message": "Witivio 365 - Configuration"
  },
  "Witivio.Contents_Documentation.LongDescription": {
    "message": "Witivio 365 - Configuration"
  },
  "WorkplaceAnalytics.Data_Documentation.Name": {
    "message": "Connectez-vous aux données de Viva Insights"
  },
  "WorkplaceAnalytics.Data_Documentation.LongDescription": {
    "message": "Importez les données d'attribut et les métriques toutes les semaines à partir du service Analyse du temps de travail."
  },
  "WorkplaceAnalytics.Data_Documentation.Examples_0_Description": {
    "message": "Retourne une table avec des attributs visibles et des métriques hebdomadaires pour chaque employé évalué dans la partition."
  },
  "WorkplaceAnalytics.Data_Documentation.Examples_0_Code": {
    "message": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")"
  },
  "WorkplaceAnalytics.Data_Documentation.Examples_0_Result": {
    "message": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
  },
  "Xml.Document_Documentation.Name": {
    "message": "Xml.Document"
  },
  "Xml.Document_Documentation.Description": {
    "message": "Retourne le contenu du document XML en tant que table hiérarchique."
  },
  "Xml.Document_Documentation.LongDescription": {
    "message": "Retourne le contenu du document XML en tant que table hiérarchique."
  },
  "Xml.Document_Documentation.Category": {
    "message": "Accessing data"
  },
  "Xml.Tables_Documentation.Name": {
    "message": "Xml.Tables"
  },
  "Xml.Tables_Documentation.Description": {
    "message": "Retourne le contenu du document XML comme une collection de tables imbriquées aplaties."
  },
  "Xml.Tables_Documentation.LongDescription": {
    "message": "Retourne le contenu du document XML comme une collection de tables imbriquées aplaties."
  },
  "Xml.Tables_Documentation.Category": {
    "message": "Accessing data"
  },
  "Xml.Tables_Documentation.Examples_0_Description": {
    "message": "Récupérez le contenu d’un fichier XML local."
  },
  "Xml.Tables_Documentation.Examples_0_Code": {
    "message": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))"
  },
  "Xml.Tables_Documentation.Examples_0_Result": {
    "message": "table"
  },
  "Zendesk.Tables_Documentation.Description": {
    "message": "Entrez l'URL de votre compte Zendesk."
  },
  "Zendesk.Tables_Documentation.DisplayName": {
    "message": "Zendesk"
  },
  "Zendesk.Tables_Documentation.Caption": {
    "message": "Zendesk.Tables"
  },
  "Zendesk.Tables_Documentation.Name": {
    "message": "Zendesk"
  },
  "Zendesk.Tables_Documentation.LongDescription": {
    "message": "Retourne un tableau avec les données Zendesk appropriées."
  },
  "AdoDotNet.DataSource_Documentation.Name": {
    "message": "AdoDotNet.DataSource"
  },
  "AdoDotNet.DataSource_Documentation.Description": {
    "message": "Retourne la collection de schémas d'une source de données ADO.NET."
  },
  "AdoDotNet.DataSource_Documentation.LongDescription": {
    "message": "Retourne la collection de schémas de la source de données ADO.NET avec le nom de fournisseur <code>providerName</code> et la chaîne de connexion <code>connectionString</code>. <code>connectionString</code> peut être du texte ou un enregistrement de paires propriété-valeur. Les valeurs de propriété peuvent être du texte ou un nombre. Vous pouvez fournir un paramètre d'enregistrement facultatif <code>options</code> pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logique (true/false) qui d&#233;termine la cr&#233;ation d&#39;options de cha&#238;ne de connexion compatible avec SQL Server pour l&#39;authentification Windows. La valeur par d&#233;faut est true.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n"
  },
  "AdoDotNet.DataSource_Documentation.Category": {
    "message": "Accessing data"
  },
  "AmazonRedshift.Database_Documentation.Name": {
    "message": "Amazon Redshift"
  },
  "AmazonRedshift.Database_Documentation.Caption": {
    "message": "Amazon Redshift (Bêta)"
  },
  "AmazonRedshift.Database_Documentation.Description": {
    "message": "Importer des données depuis une base de données Amazon Redshift."
  },
  "AmazonRedshift.Database_Documentation.LongDescription": {
    "message": "Retourne une table répertoriant les tables sur le <code>serveur</code> cluster Amazon Redshift dans la base de données <code></code>. Un paramètre d’enregistrement facultatif, <code>options</code>, peut être spécifié pour contrôler les options suivantes :\r\n<ul>\r\n<li><code>nom du fournisseur</code> : valeur de texte à utiliser comme nom de fournisseur pour la connexion. Ceci est utilisé lors de l’utilisation de Microsoft Authentication.</li>\r\n<li><code>Batch Size</code> : nombre de lignes récupérées lors d’un seul appel au serveur.</li>\r\n</ul>\r\n  "
  },
  "AmazonRedshift.Database_Documentation.Examples_0_Code": {
    "message": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
  },
  "AnalysisServices.Database_Documentation.Name": {
    "message": "AnalysisServices.Database"
  },
  "AnalysisServices.Database_Documentation.Description": {
    "message": "Retourne une table de cubes multidimensionnels ou de modèles tabulaires de la base de données Analysis Services."
  },
  "AnalysisServices.Database_Documentation.LongDescription": {
    "message": "Retourne une table de cubes multidimensionnels ou de modèles tabulaires de la base de données Analysis Services <code>database</code> sur le serveur <code>server</code>. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>Query</code> : Requ&#234;te MDX native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es.</li>\r\n<li><code>TypedMeasureColumns</code> : Valeur logique qui indique si les types sp&#233;cifi&#233;s dans le mod&#232;le multidimensionnel ou tabulaire sont utilis&#233;s pour les types des colonnes de mesure ajout&#233;es. Quand sa valeur est false, le type &#171;&#160;number&#160;&#187; est utilis&#233; pour toutes les colonnes de mesure. La valeur par d&#233;faut de cette option est false.</li>\r\n<li><code>Culture</code> : Nom de culture sp&#233;cifiant la culture des donn&#233;es. Correspond &#224; la propri&#233;t&#233; de cha&#238;ne de connexion &#171;&#160;Locale Identifier&#160;&#187;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>SubQueries</code> : Nombre (0, 1 ou 2) qui d&#233;finit la valeur de la propri&#233;t&#233; &#171;&#160;SubQueries&#160;&#187; dans la cha&#238;ne de connexion. Il contr&#244;le le comportement des membres calcul&#233;s dans les sous-s&#233;lections ou les sous-cubes. (La valeur par d&#233;faut est&#160;2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    "
  },
  "AnalysisServices.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "Anaplan.Contents_Documentation.Name": {
    "message": "Anaplan Connection Configuration"
  },
  "ApacheSpark.Tables_Documentation.Name": {
    "message": "Spark"
  },
  "ApacheSpark.Tables_Documentation.Caption": {
    "message": "Spark"
  },
  "ApacheSpark.Tables_Documentation.Description": {
    "message": "Retourne une table répertoriant les tables sur le cluster Spark spécifié."
  },
  "ApacheSpark.Tables_Documentation.LongDescription": {
    "message": "Retourne une table répertoriant les tables sur le cluster Spark <code>host</code> à l'aide de <code>protocol</code>. Les protocoles valides sont :\r\nSparkProtocol.Standard, SparkProtocol.HTTP"
  },
  "ApacheSpark.Tables_Documentation.Examples_0_Description": {
    "message": "Retourne une table répertoriant les tables sur le cluster Spark spécifié."
  },
  "ApacheSpark.Tables_Documentation.Examples_0_Code": {
    "message": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
  },
  "AutomationAnywhere.Feed_Documentation.Name": {
    "message": "Automation Anywhere - Login"
  },
  "AutomationAnywhere.Feed_Documentation.LongDescription": {
    "message": "Automation Anywhere - Login"
  },
  "AzureDevOpsServer.AnalyticsViews_Documentation.Description": {
    "message": "Entrez les noms de l'organisation et du projet."
  },
  "AzureDevOpsServer.AnalyticsViews_Documentation.DisplayName": {
    "message": "VSTS.AnalyticsViews"
  },
  "AzureDevOpsServer.AnalyticsViews_Documentation.Caption": {
    "message": "VSTS.AnalyticsViews"
  },
  "AzureDevOpsServer.AnalyticsViews_Documentation.Name": {
    "message": "Azure DevOps Server (Boards uniquement)"
  },
  "AzureDevOpsServer.AnalyticsViews_Documentation.LongDescription": {
    "message": "Retourne une table de vues Analytics offertes par Azure DevOps."
  },
  "AzureHiveLLAP.Database_Documentation.Name": {
    "message": "HDInsight Interactive Query"
  },
  "AzureHiveLLAP.Database_Documentation.Description": {
    "message": "Importer des données depuis HDInsight Interactive Query"
  },
  "AzureHiveLLAP.Database_Documentation.LongDescription": {
    "message": "\r\nRetourne une liste de tables depuis HDInsight Interactive Query spécifié par la <code>base de données</code> sur le <code>serveur</code> HDInsight Interactive Query. Vous pouvez spécifier un numéro de port avec le serveur, en le séparant avec le signe deux-points. Vous pouvez spécifier un paramètre <code>options</code> facultatif pour contrôler les options suivantes :\r\n<ul>\r\n        <li><code>ConnectionTimeout</code> : durée qui contrôle le temps d'attente avant l'abandon de la tentative de connexion au serveur. La valeur par défaut dépend du pilote.</li>\r\n        <li><code>CommandTimeout</code> : durée qui contrôle le temps pendant lequel la requête côté serveur est autorisée à s'exécuter avant d'être annulée. La valeur par défaut dépend du pilote.</li>\r\n</ul>\r\nLe paramètre <code>options</code> est spécifié sous la forme [option1 = valeur1, option2 = valeur2...]."
  },
  "Cdm.MapToEntity_Documentation.Caption": {
    "message": "Cdm.MapToEntity"
  },
  "Cdm.MapToEntity_Documentation.Description": {
    "message": "Retourne une table avec des colonnes mappées aux attributs d'une entité dans Common Data Model, notamment les types de données."
  },
  "Cdm.MapToEntity_Documentation.DisplayName": {
    "message": "Cdm.MapToEntity"
  },
  "Cdm.MapToEntity_Documentation.LongDescription": {
    "message": "Retourne une table avec des colonnes mappées aux attributs d'une entité dans Common Data Model, notamment les types de données. Les colonnes de la définition d'entité sont ajoutées si elles ne sont pas mappées et toutes les colonnes non mappées sont supprimées."
  },
  "Cdm.MapToEntity_Documentation.Name": {
    "message": "Cdm.MapToEntity"
  },
  "Cherwell.SavedSearches_Documentation.Name": {
    "message": "Cherwell Data Connector v1.0"
  },
  "Cherwell.SavedSearches_Documentation.LongDescription": {
    "message": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
  },
  "CloudBluePSA.Feed_Documentation.Name": {
    "message": "Retrieve all pages of data"
  },
  "CloudBluePSA.Feed_Documentation.LongDescription": {
    "message": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
  },
  "Cube.ApplyParameter_Documentation.Name": {
    "message": "Cube.ApplyParameter"
  },
  "Cube.ApplyParameter_Documentation.Description": {
    "message": "Retourne un cube après application d'un paramètre à celui-ci."
  },
  "Cube.ApplyParameter_Documentation.LongDescription": {
    "message": "Retourne un cube après application de <code>parameter</code> avec <code>arguments</code> à <code>cube</code>."
  },
  "Cube.ApplyParameter_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.CollapseAndRemoveColumns_Documentation.Name": {
    "message": "Cube.CollapseAndRemoveColumns"
  },
  "Cube.CollapseAndRemoveColumns_Documentation.Description": {
    "message": "Modifie la granularité dimensionnelle du contexte de filtre pour le cube en réduisant les attributs mappés aux colonnes spécifiées."
  },
  "Cube.CollapseAndRemoveColumns_Documentation.LongDescription": {
    "message": "Modifie la granularité dimensionnelle du contexte de filtre pour le <code>cube</code> en réduisant les attributs mappés aux colonnes spécifiées <code>columnNames</code>. Les colonnes sont également supprimées de la vue tabulaire du cube."
  },
  "Cube.CollapseAndRemoveColumns_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.ReplaceDimensions_Documentation.Name": {
    "message": "Cube.ReplaceDimensions"
  },
  "Cube.ReplaceDimensions_Documentation.Description": {
    "message": "Remplace l’ensemble de dimensions retourné par Cube.Dimensions."
  },
  "Cube.ReplaceDimensions_Documentation.LongDescription": {
    "message": "Remplace l’ensemble de dimensions retourné par <code>Cube.Dimensions</code>.\r\n    Par exemple, cette fonction peut être utilisée pour ajouter une colonne d’ID à un attribut de dimension, afin que la source de données puisse être groupée sur l’ID plutôt que sur la valeur affichée."
  },
  "Cube.ReplaceDimensions_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.Transform_Documentation.Name": {
    "message": "Cube.Transform"
  },
  "Cube.Transform_Documentation.Description": {
    "message": "Applique une liste de fonctions de cube."
  },
  "Cube.Transform_Documentation.LongDescription": {
    "message": "Applique la liste des fonctions de cube, <code>transforms</code>, sur le <code>cube</code>."
  },
  "Cube.Transform_Documentation.Category": {
    "message": "Cube"
  },
  "DB2.Database_Documentation.Name": {
    "message": "DB2.Database"
  },
  "DB2.Database_Documentation.Description": {
    "message": "Retourne une table de tables SQL et de vues disponibles dans une base de données Db2."
  },
  "DB2.Database_Documentation.LongDescription": {
    "message": "Retourne une table de tables SQL et de vues disponibles dans une base de données Db2 sur le serveur <code>server</code> dans l'instance de base de données nommée <code>database</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>Implementation</code> : Sp&#233;cifie l&#39;impl&#233;mentation du fournisseur de base de donn&#233;es interne &#224; utiliser. Valeurs valides&#160;: &quot;IBM&quot; et &quot;Microsoft&quot;.</li>\r\n<li><code>BinaryCodePage</code> : Nombre permettant au CCSID (Coded Character Set Identifier) de d&#233;coder les donn&#233;es binaires Db2 FOR BIT en cha&#238;nes de caract&#232;res. S&#39;applique &#224; Implementation = &quot;Microsoft&quot;. D&#233;finissez la valeur sur&#160;0 pour d&#233;sactiver la conversion (par d&#233;faut). D&#233;finissez la valeur sur&#160;1 pour effectuer la conversion en fonction de l&#39;encodage de la base de donn&#233;es. D&#233;finissez d&#39;autres nombres CCSID pour effectuer la conversion en fonction de l&#39;encodage de l&#39;application.</li>\r\n<li><code>PackageCollection</code> : Sp&#233;cifie une valeur de cha&#238;ne pour la collection de paquets (valeur par d&#233;faut&#160;: &quot;NULLID&quot;) afin de permettre l&#39;utilisation des paquets partag&#233;s n&#233;cessaires au traitement des instructions SQL. S&#39;applique &#224; Implementation = &quot;Microsoft&quot;.</li>\r\n<li><code>UseDb2ConnectGateway</code> : Sp&#233;cifie si la connexion est effectu&#233;e par le biais d&#39;une passerelle DB2 Connect. S&#39;applique &#224; Implementation = &quot;Microsoft&quot;.</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "DB2.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "DataVirtuality.Database_Documentation.Name": {
    "message": "Data Virtuality LDW"
  },
  "DataVirtuality.Database_Documentation.LongDescription": {
    "message": "Data Virtuality LDW"
  },
  "DataVirtuality.Database_Documentation.Icon": {
    "message": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
  },
  "DataWorld.Dataset_Documentation.Name": {
    "message": "DataWorld.Dataset"
  },
  "DataWorld.Dataset_Documentation.LongDescription": {
    "message": "Récupère un jeu de données à partir de Data.World"
  },
  "Databricks.Catalogs_Documentation.Name": {
    "message": "Azure Databricks"
  },
  "Databricks.Contents_Documentation.Name": {
    "message": "Azure Databricks"
  },
  "DatabricksMultiCloud.Catalogs_Documentation.Name": {
    "message": "Databricks"
  },
  "Dremio.DatabasesV300_Documentation.Name": {
    "message": "Dremio Software"
  },
  "Dremio.DatabasesV300_Documentation.LongDescription": {
    "message": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource"
  },
  "Dremio.DatabasesV300_Documentation.Examples_0_Description": {
    "message": "How to return the list of datasets on localhost with an encrypted connection."
  },
  "Dremio.DatabasesV300_Documentation.Examples_0_Code": {
    "message": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")"
  },
  "Dremio.DatabasesV300_Documentation.Examples_0_Result": {
    "message": "A table listing the datasets on localhost."
  },
  "EduFrame.Contents_Documentation.Name": {
    "message": "Eduframe"
  },
  "Exasol.Database_Documentation.Name": {
    "message": "Exasol"
  },
  "Exasol.Database_Documentation.LongDescription": {
    "message": "Exasol"
  },
  "Exasol.Database_Documentation.Icon": {
    "message": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
  },
  "Github.Tables_Documentation.Description": {
    "message": "Enter the GitHub repository owner and the repository name."
  },
  "Github.Tables_Documentation.DisplayName": {
    "message": "GitHub"
  },
  "Github.Tables_Documentation.Caption": {
    "message": "GitHub.Tables"
  },
  "Github.Tables_Documentation.Name": {
    "message": "GitHub"
  },
  "Github.Tables_Documentation.LongDescription": {
    "message": "Returns a table with relevant GitHub data."
  },
  "HdInsight.Files_Documentation.Name": {
    "message": "HdInsight.Files"
  },
  "HdInsight.Files_Documentation.Description": {
    "message": "Retourne une table contenant les propriétés et le contenu des objets blob trouvés dans le conteneur indiqué à partir d'un coffre de stockage Azure."
  },
  "HdInsight.Files_Documentation.LongDescription": {
    "message": "Retourne une table contenant une ligne pour chaque fichier d'objets blob trouvé à l'URL de conteneur, <code>account</code>, à partir d'un coffre de stockage Azure. Chaque ligne contient les propriétés du fichier et un lien vers son contenu."
  },
  "HdInsight.Files_Documentation.Category": {
    "message": "Accessing data"
  },
  "Html.Table_Documentation.Name": {
    "message": "Html.Table"
  },
  "Html.Table_Documentation.Description": {
    "message": "Retourne une table contenant les résultats de l’exécution des sélecteurs CSS spécifiés par rapport au code HTML fourni."
  },
  "Html.Table_Documentation.LongDescription": {
    "message": "Retourne un tableau contenant les résultats de l'exécution des sélecteurs CSS spécifiés sur le <code>html</code> fourni. Un paramètre d'enregistrement facultatif, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    "
  },
  "Html.Table_Documentation.Category": {
    "message": "Accès aux données"
  },
  "Html.Table_Documentation.Examples_0_Description": {
    "message": "Retourne un tableau à partir d'un exemple de valeur de texte html."
  },
  "Html.Table_Documentation.Examples_0_Code": {
    "message": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>Manager</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])"
  },
  "Html.Table_Documentation.Examples_0_Result": {
    "message": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
  },
  "Html.Table_Documentation.Examples_1_Description": {
    "message": "Extrait tous les href d'un exemple de valeur texte html."
  },
  "Html.Table_Documentation.Examples_1_Code": {
    "message": "Html.Table(\"<a href=\"\"/test.html\"\">Test</a>\", {{\"Link\", \"a\", each [Attributes][href]}})"
  },
  "Html.Table_Documentation.Examples_1_Result": {
    "message": "#table({\"Link\"}, {{\"/test.html\"}})"
  },
  "Indexima.Database_Documentation.Name": {
    "message": "Indexima v1.7.5"
  },
  "Indexima.Database_Documentation.LongDescription": {
    "message": "Connection to Indexima Data Hub"
  },
  "Informix.Database_Documentation.Name": {
    "message": "Informix.Database"
  },
  "Informix.Database_Documentation.Description": {
    "message": "Retourne une table de tables et de vues SQL disponibles dans une base de données Informix."
  },
  "Informix.Database_Documentation.LongDescription": {
    "message": "Retourne une table de tables SQL et de vues disponibles dans une base de données Informix sur le serveur <code>server</code> dans l'instance de base de données nommée <code>database</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "Informix.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "MarkLogicODBC.Contents_Documentation.Name": {
    "message": "MarkLogic ODBC (v3.0.2)"
  },
  "MarkLogicODBC.Contents_Documentation.LongDescription": {
    "message": "Returns the list of tables returned from the ODBC driver"
  },
  "Marketo.Leads_Documentation.Name": {
    "message": "Marketo.Leads"
  },
  "Marketo.Leads_Documentation.DisplayName": {
    "message": "Marketo.Leads"
  },
  "Marketo.Leads_Documentation.Caption": {
    "message": "Marketo.Leads"
  },
  "Marketo.Leads_Documentation.Description": {
    "message": "Retourne une table avec les détails des prospects."
  },
  "Marketo.Leads_Documentation.LongDescription": {
    "message": "Effectue un appel au point de terminaison de l'API REST Marketo de <code>url</code>/rest/v1/activities.json. Tous les prospects de la liste <code>leadIds</code> sont retournés."
  },
  "Marketo.Leads_Documentation.Examples_0_Description": {
    "message": "Extrait les détails pour trois prospects"
  },
  "Marketo.Leads_Documentation.Examples_0_Code": {
    "message": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})"
  },
  "Marketo.Leads_Documentation.Examples_0_Result": {
    "message": "Table avec des détails sur les prospects fournis"
  },
  "Marketo.Tables_Documentation.Description": {
    "message": "Entrez l'URL du point de terminaison de l'API REST Marketo associé à votre compte."
  },
  "Marketo.Tables_Documentation.DisplayName": {
    "message": "Marketo"
  },
  "Marketo.Tables_Documentation.Caption": {
    "message": "Marketo.Tables"
  },
  "Marketo.Tables_Documentation.Name": {
    "message": "Marketo"
  },
  "Marketo.Tables_Documentation.LongDescription": {
    "message": "Retourne une table avec les données Marketo appropriées."
  },
  "MongoDBAtlasODBC.Contents_Documentation.Name": {
    "message": "MongoDB Atlas SQL"
  },
  "MySQL.Database_Documentation.Name": {
    "message": "MySQL.Database"
  },
  "MySQL.Database_Documentation.Description": {
    "message": "Retourne une table des tables SQL, des onglets et des fonctions scalaires stockés disponibles dans une base de données MySQL."
  },
  "MySQL.Database_Documentation.LongDescription": {
    "message": "Retourne une table de tables SQL, vues et fonctions scalaires stockées disponibles dans une base de données MySQL sur le serveur <code>server</code> dans l'instance de base de données nommée <code>database</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>Encoding</code> : Valeur TextEncoding qui sp&#233;cifie le jeu de caract&#232;res utilis&#233; pour encoder toutes les requ&#234;tes envoy&#233;es au serveur (la valeur par d&#233;faut est null).</li>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>TreatTinyAsBoolean</code> : Valeur logique (true/false) qui d&#233;termine si les colonnes tinyint doivent &#234;tre forc&#233;es sur le serveur en tant que valeurs logiques. La valeur par d&#233;faut est true.</li>\r\n<li><code>OldGuids</code> : Valeur logique (true/false) qui indique si les colonnes char(36) (si la valeur est false) ou les colonnes binary(16) (si la valeur est true) doivent &#234;tre trait&#233;es en tant que GUID. La valeur par d&#233;faut est false.</li>\r\n<li><code>ReturnSingleDatabase</code> : Valeur logique (true/false) qui indique si toutes les tables de toutes les bases de donn&#233;es doivent &#234;tre retourn&#233;es (si la valeur est false), ou si les tables et les vues de la base de donn&#233;es sp&#233;cifi&#233;e doivent &#234;tre retourn&#233;es (si la valeur est true). La valeur par d&#233;faut est false.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "MySQL.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "Netezza.Database_Documentation.Name": {
    "message": "IBM Netezza"
  },
  "Netezza.Database_Documentation.Caption": {
    "message": "IBM Netezza"
  },
  "Netezza.Database_Documentation.Description": {
    "message": "Importe des données depuis une base de données IBM Netezza."
  },
  "Netezza.Database_Documentation.LongDescription": {
    "message": "\r\nRetourne une table des tables, des vues et des fonctions stockées Netezza à partir de la base de données du serveur Netezza <code>base de données</code> sur le serveur <code>serveur</code>. Le port peut éventuellement être spécifié avec le serveur, séparé par le signe deux-points. Vous pouvez spécifier des <code>options</code> sous forme de paramètres d'enregistrement facultatifs pour gérer les options suivantes : \r\n<ul>\r\n        <li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui définit s'il faut générer des propriétés de navigation sur les valeurs retournées (la valeur par défaut est true)</li>\r\n        <li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui définit s'il faut afficher les tables regroupées par leur nom de schéma (la valeur par défaut est false)</li>\r\n        <li><code>ConnectionTimeout</code> : Durée qui contrôle le délai d'attente avant d'abandonner une tentative de connexion au serveur. La valeur par défaut dépend du pilote.</li>\r\n        <li><code>CommandTimeout</code> : Durée qui contrôle le temps pendant lequel la requête côté serveur est autorisée à s'exécuter avant d'être annulée. La valeur par défaut dépend du pilote.</li>\r\n<li><code>NormalizeDatabaseName</code> : Valeur logique (true/false) qui définit s'il faut normaliser le nom de base de données et le mettre en majuscules ou s'il faut l'interpréter littéralement (la valeur par défaut est true).</li>\r\n</ul>\r\nLe paramètre d'enregistrement est spécifié sous la forme [option1 = valeur1, option2 = value2...]."
  },
  "Netezza.Database_Documentation.Examples_0_Description": {
    "message": "Répertorie les tables dans un projet IBM Netezza."
  },
  "Netezza.Database_Documentation.Examples_0_Code": {
    "message": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
  },
  "Odbc.Query_Documentation.Name": {
    "message": "Odbc.Query"
  },
  "Odbc.Query_Documentation.Description": {
    "message": "Retourne le résultat de l'exécution d'une requête native sur une source de données ODBC."
  },
  "Odbc.Query_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'exécution de <code>query</code> avec la chaîne de connexion <code>connectionString</code> en utilisant ODBC. <code>connectionString</code> peut être du texte ou un enregistrement de paires propriété-valeur. Les valeurs de propriété peuvent être du texte ou un nombre. Vous pouvez fournir un paramètre d'enregistrement facultatif <code>options</code> pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut est 15&#160;secondes.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logique (true/false) qui d&#233;termine la cr&#233;ation d&#39;options de cha&#238;ne de connexion compatible avec SQL Server pour l&#39;authentification Windows. La valeur par d&#233;faut est true.</li>\r\n</ul>\r\n"
  },
  "Odbc.Query_Documentation.Category": {
    "message": "Accessing data"
  },
  "Odbc.Query_Documentation.Examples_0_Description": {
    "message": "Renvoie le résultat de l'exécution d'une requête simple sur la chaîne de connexion fournie."
  },
  "Odbc.Query_Documentation.Examples_0_Code": {
    "message": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")"
  },
  "Odbc.Query_Documentation.Examples_0_Result": {
    "message": "table"
  },
  "OleDb.Query_Documentation.Name": {
    "message": "OleDb.Query"
  },
  "OleDb.Query_Documentation.Description": {
    "message": "Retourne le résultat de l'exécution d'une requête native sur une source de données OLE DB."
  },
  "OleDb.Query_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'exécution de <code>query</code> avec la chaîne de connexion <code>connectionString</code> en utilisant OLE DB. <code>connectionString</code> peut être du texte ou un enregistrement de paires propriété-valeur. Les valeurs de propriété peuvent être du texte ou un nombre. Vous pouvez fournir un paramètre d'enregistrement facultatif <code>options</code> pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logique (true/false) qui d&#233;termine la cr&#233;ation d&#39;options de cha&#238;ne de connexion compatible avec SQL Server pour l&#39;authentification Windows. La valeur par d&#233;faut est true.</li>\r\n</ul>\r\n"
  },
  "OleDb.Query_Documentation.Category": {
    "message": "Accessing data"
  },
  "PlanviewEnterprise.Feed_Documentation.Description": {
    "message": "Enter the URL and database name associated with your Planview Portfolios account."
  },
  "PlanviewEnterprise.Feed_Documentation.DisplayName": {
    "message": "PlanviewEnterprise.Feed"
  },
  "PlanviewEnterprise.Feed_Documentation.Caption": {
    "message": "PlanviewEnterprise.Feed"
  },
  "PlanviewEnterprise.Feed_Documentation.Name": {
    "message": "Planview Portfolios"
  },
  "PlanviewEnterprise.Feed_Documentation.LongDescription": {
    "message": "Returns a table with Planview Portfolios data."
  },
  "PlanviewEnterprise.Feed_Documentation.Examples_0_Description": {
    "message": "Returns a table of Planview Portfolios information"
  },
  "PlanviewEnterprise.Feed_Documentation.Examples_0_Code": {
    "message": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")"
  },
  "PlanviewEnterprise.Feed_Documentation.Examples_0_Result": {
    "message": "A table of Planview Portfolios data about database pve"
  },
  "PostgreSQL.Database_Documentation.Name": {
    "message": "PostgreSQL.Database"
  },
  "PostgreSQL.Database_Documentation.Description": {
    "message": "Retourne une table des tables SQL et des onglets disponibles dans une base de données PostgreSQL."
  },
  "PostgreSQL.Database_Documentation.LongDescription": {
    "message": "Retourne une table de tables SQL et de vues disponibles dans une base de données PostgreSQL sur le serveur <code>server</code> dans l'instance de base de données nommée <code>database</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "PostgreSQL.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "SDMX.Contents_Documentation.Name": {
    "message": "SIS-CC SDMX Connector for SDMX-CSV web services"
  },
  "SDMX.Contents_Documentation.LongDescription": {
    "message": "Get data from an SDMX RESTful web service that supports the CSV format."
  },
  "SDMX.Contents_Documentation.Examples_0_Description": {
    "message": "Get data from an SDMX RESTful web service that supports the CSV format."
  },
  "SDMX.Contents_Documentation.Examples_0_Code": {
    "message": "SDMX.Contents(url,\"Show codes and labels\",\"en\")"
  },
  "SDMX.Contents_Documentation.Examples_0_Result": {
    "message": "Data from the SDMX web service in a table format."
  },
  "SingleStoreODBC.DataSource_Documentation.Name": {
    "message": "SingleStore database"
  },
  "SingleStoreODBC.DataSource_Documentation.LongDescription": {
    "message": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
  },
  "SingleStoreODBC.Database_Documentation.Name": {
    "message": "SingleStore database"
  },
  "SingleStoreODBC.Database_Documentation.LongDescription": {
    "message": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
  },
  "SingleStoreODBC.Query_Documentation.Name": {
    "message": "SingleStore database"
  },
  "SingleStoreODBC.Query_Documentation.LongDescription": {
    "message": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
  },
  "Snowflake.Databases_Documentation.Name": {
    "message": "Snowflake"
  },
  "Snowflake.Databases_Documentation.Caption": {
    "message": "Snowflake"
  },
  "Snowflake.Databases_Documentation.Description": {
    "message": "Importez des données à partir de l'entrepôt Snowflake Computing."
  },
  "Snowflake.Databases_Documentation.LongDescription": {
    "message": "Retourne une table listant les tables de l'<code>entrepôt</code> Snowflake Computing situé sur le <code>serveur</code>. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour contrôler les options suivantes :\r\n<ul>\r\n<li><code>Role</code> : valeur texte à utiliser comme nom de rôle pour la connexion.</li>\r\n<li><code>CreateNavigationProperties</code> : valeur logique (true/false) qui définit s'il faut générer des propriétés de navigation sur les valeurs retournées (la valeur par défaut est true).</li>\r\n<li><code>ConnectionTimeout</code> : nombre de secondes pendant lesquelles attendre des réponses réseau de Snowflake.</li>\r\n<li><code>CommandTimeout</code> : nombre de secondes pendant lesquelles attendre l'exécution de la requête.</li>\r\n</ul>\r\n    "
  },
  "Snowflake.Databases_Documentation.Examples_0_Description": {
    "message": "Répertoriez les tables d'un entrepôt Snowflake."
  },
  "Snowflake.Databases_Documentation.Examples_0_Code": {
    "message": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
  },
  "Spark.Tables_Documentation.Name": {
    "message": "Spark.Tables"
  },
  "Spark.Tables_Documentation.Caption": {
    "message": "Spark"
  },
  "Spark.Tables_Documentation.Description": {
    "message": "Retourne une table répertoriant les tables sur le cluster Spark spécifié."
  },
  "Spark.Tables_Documentation.LongDescription": {
    "message": "Retourne une table répertoriant les tables sur le cluster Spark <code>host</code> à l'aide de <code>protocol</code>. Les protocoles valides sont :\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP"
  },
  "Spark.Tables_Documentation.Examples_0_Description": {
    "message": "Répertoriez les tables dans une instance d'Azure Spark."
  },
  "Spark.Tables_Documentation.Examples_0_Code": {
    "message": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
  },
  "Sql.Database_Documentation.Name": {
    "message": "Sql.Database"
  },
  "Sql.Database_Documentation.Description": {
    "message": "Retourne une table des tables SQL, des onglets et des fonctions stockées depuis la base de données SQL Server."
  },
  "Sql.Database_Documentation.LongDescription": {
    "message": "Retourne une table des tables SQL, des vues et des fonctions stockées depuis la base de données SQL Server <code>database</code> sur le serveur <code>server</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points ou une virgule. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Nombre qui d&#233;finit la valeur de la clause de requ&#234;te &quot;maxdop&quot; dans la requ&#234;te SQL g&#233;n&#233;r&#233;e.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>MultiSubnetFailover</code> : Valeur logique (true/false) qui d&#233;finit la valeur de la propri&#233;t&#233; &quot;MultiSubnetFailover&quot; dans la cha&#238;ne de connexion (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Valeur logique (true/false) qui, si elle est d&#233;finie sur true, tente de replier des conversions de type qui peuvent &#233;chouer et provoquer l’&#233;chec de la requ&#234;te enti&#232;re. Ceci n’est pas recommand&#233; pour un usage g&#233;n&#233;ral.</li>\r\n<li><code>ContextInfo</code> : Valeur binaire utilis&#233;e pour d&#233;finir CONTEXT_INFO avant l&#39;ex&#233;cution de chaque commande.</li>\r\n<li><code>OmitSRID</code> : Valeur logique (true/false) qui, si elle est d&#233;finie sur true, omet le SRID lors de la production de langage Well-Known Text &#224; partir de types g&#233;om&#233;triques et g&#233;ographiques.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Valeur logique (true/false) qui, si la valeur est true, autorise le pliage des requ&#234;tes entre les bases de donn&#233;es sur le m&#234;me serveur. La valeur par d&#233;faut est false.</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "Sql.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "StarburstPresto.Contents_Documentation.Name": {
    "message": "Starburst Enterprise"
  },
  "Sybase.Database_Documentation.Name": {
    "message": "Sybase.Database"
  },
  "Sybase.Database_Documentation.Description": {
    "message": "Retourne une table des tables SQL et des onglets disponibles dans une base de données Sybase."
  },
  "Sybase.Database_Documentation.LongDescription": {
    "message": "Retourne une table de tables SQL et de vues disponibles dans une base de données Sybase sur le serveur <code>server</code> dans l'instance de base de données nommée <code>database</code>. Vous pouvez éventuellement spécifier le port avec le serveur, en les séparant par le signe deux-points. Vous pouvez spécifier un paramètre d'enregistrement optionnel, <code>options</code>, pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fonction utilis&#233;e pour la cr&#233;ation des noms de propri&#233;t&#233;s de navigation.</li>\r\n<li><code>Query</code> : Requ&#234;te SQL native utilis&#233;e pour r&#233;cup&#233;rer des donn&#233;es. Si la requ&#234;te produit plusieurs jeux de r&#233;sultats, seul le premier est retourn&#233;.</li>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>ConnectionTimeout</code> : D&#233;lai qui contr&#244;le le temps d’attente avant l’abandon d’une tentative pour &#233;tablir une connexion au serveur. La valeur par d&#233;faut d&#233;pend du pilote.</li>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n</ul>\r\n\r\n    Le paramètre d'enregistrement est indiqué sous la forme [option1 = value1, option2 = value2...] ou [Query = \"select ...\"] par exemple.\r\n    "
  },
  "Sybase.Database_Documentation.Category": {
    "message": "Accessing data"
  },
  "Table.AddIndexColumn_Documentation.Name": {
    "message": "Table.AddIndexColumn"
  },
  "Table.AddIndexColumn_Documentation.Description": {
    "message": "Ajoute une colonne avec des valeurs de position explicites."
  },
  "Table.AddIndexColumn_Documentation.LongDescription": {
    "message": "Ajoute une colonne nommée <code>newColumnName</code> à <code>table</code> avec des valeurs de position explicites.\r\n    Valeur facultative, <code>initialValue</code>, valeur d'index initiale. La valeur facultative, <code>increment</code>, spécifie l'incrément de chaque valeur d'index."
  },
  "Table.AddIndexColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.AddIndexColumn_Documentation.Examples_0_Description": {
    "message": "Ajoute une colonne d'index nommée « Index » à la table."
  },
  "Table.AddIndexColumn_Documentation.Examples_0_Code": {
    "message": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)"
  },
  "Table.AddIndexColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
  },
  "Table.AddIndexColumn_Documentation.Examples_1_Description": {
    "message": "Ajoute une colonne d'index nommée « Index » à la table, en commençant à la valeur 10 et en incrémentant par 5."
  },
  "Table.AddIndexColumn_Documentation.Examples_1_Code": {
    "message": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)"
  },
  "Table.AddIndexColumn_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
  },
  "Table.ConformToPageReader_Documentation.Name": {
    "message": "Table.ConformToPageReader"
  },
  "Table.ConformToPageReader_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Table.ConformToPageReader_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Table.ConformToPageReader_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.ExpandListColumn_Documentation.Name": {
    "message": "Table.ExpandListColumn"
  },
  "Table.ExpandListColumn_Documentation.Description": {
    "message": "En fonction d'une colonne dans les listes d'une table, crée une copie d'une ligne pour chaque valeur dans la liste."
  },
  "Table.ExpandListColumn_Documentation.LongDescription": {
    "message": "En fonction d'un <code>table</code>, où <code>column</code> est une liste de valeurs, fractionne la liste en une ligne pour chaque valeur. Les valeurs des autres colonnes sont dupliquées dans chaque nouvelle ligne créée."
  },
  "Table.ExpandListColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.ExpandListColumn_Documentation.Examples_0_Description": {
    "message": "Fractionne la colonne de liste [Name] dans la table."
  },
  "Table.ExpandListColumn_Documentation.Examples_0_Code": {
    "message": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)"
  },
  "Table.ExpandListColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
  },
  "Table.FillDown_Documentation.Name": {
    "message": "Table.FillDown"
  },
  "Table.FillDown_Documentation.Description": {
    "message": "Propage la valeur d'une cellule précédente aux cellules évaluées null ci-dessous dans la colonne."
  },
  "Table.FillDown_Documentation.LongDescription": {
    "message": "Retourne une table à partir de la <code>table</code> spécifiée où la valeur de la cellule précédente est propagée aux cellules évaluées null ci-dessous, dans la <code>columns</code> spécifiée."
  },
  "Table.FillDown_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.FillDown_Documentation.Examples_0_Description": {
    "message": "Retourne une table avec les valeurs null de la colonne [Place] remplie avec la valeur située plus haut qu'elles dans la table."
  },
  "Table.FillDown_Documentation.Examples_0_Code": {
    "message": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)"
  },
  "Table.FillDown_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
  },
  "Table.FillUp_Documentation.Name": {
    "message": "Table.FillUp"
  },
  "Table.FillUp_Documentation.Description": {
    "message": "Propage la valeur d'une cellule aux cellules évaluées null ci-dessus dans la colonne."
  },
  "Table.FillUp_Documentation.LongDescription": {
    "message": "Retourne une table à partir de la <code>table</code> spécifiée où la valeur de la cellule suivante est propagée aux cellules évaluées null ci-dessus, dans la <code>columns</code> spécifiée."
  },
  "Table.FillUp_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.FillUp_Documentation.Examples_0_Description": {
    "message": "Retourne une table avec les valeurs null de la colonne [Place] remplie avec la valeur située plus bas qu'elles dans la table."
  },
  "Table.FillUp_Documentation.Examples_0_Code": {
    "message": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)"
  },
  "Table.FillUp_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
  },
  "Table.FindText_Documentation.Name": {
    "message": "Table.FindText"
  },
  "Table.FindText_Documentation.Description": {
    "message": "Retourne toutes les lignes qui contiennent le texte spécifié dans la table."
  },
  "Table.FindText_Documentation.LongDescription": {
    "message": "Retourne les lignes dans la table <code>table</code> qui contiennent le texte <code>text</code>. Si le texte est introuvable, une table vide est retournée."
  },
  "Table.FindText_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.FindText_Documentation.Examples_0_Description": {
    "message": "Recherche les lignes dans la table qui contiennent « Bob »."
  },
  "Table.FindText_Documentation.Examples_0_Code": {
    "message": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)"
  },
  "Table.FindText_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Table.FirstN_Documentation.Name": {
    "message": "Table.FirstN"
  },
  "Table.FirstN_Documentation.Description": {
    "message": "Retourne les premières lignes en fonction du nombre spécifié."
  },
  "Table.FirstN_Documentation.LongDescription": {
    "message": "Retourne les premières lignes de la table <code>table</code>, en fonction de la valeur de <code>countOrCondition</code> :\r\n    <ul>\r\n    <li> Si <code>countOrCondition</code> est un nombre, autant de lignes (en commençant par le haut) sont retournées. </li>\r\n    <li>Si <code>countOrCondition</code> est une condition, les lignes qui satisfont la condition sont retournés jusqu'au moment où une ligne ne remplit pas la condition.</li>\r\n</ul>"
  },
  "Table.FirstN_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.FirstN_Documentation.Examples_0_Description": {
    "message": "Recherche les deux premières lignes de la table."
  },
  "Table.FirstN_Documentation.Examples_0_Code": {
    "message": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)"
  },
  "Table.FirstN_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
  },
  "Table.FirstN_Documentation.Examples_1_Description": {
    "message": "Recherche les premières lignes où [a] > 0 dans la table."
  },
  "Table.FirstN_Documentation.Examples_1_Code": {
    "message": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)"
  },
  "Table.FirstN_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
  },
  "Table.FromPartitions_Documentation.Name": {
    "message": "Table.FromPartitions"
  },
  "Table.FromPartitions_Documentation.Description": {
    "message": "Retourne une table qui est le résultat de la combinaison d'un ensemble de tables partitionnées."
  },
  "Table.FromPartitions_Documentation.LongDescription": {
    "message": "Retourne une table qui est le résultat de l'association d'un ensemble de tables partitionnées, <code>partitions</code>. <code>partitionColumn</code> est le nom de la colonne à ajouter. Le type de colonne par défaut est <code>any</code>, mais peut être spécifié par <code>partitionColumnType</code>."
  },
  "Table.FromPartitions_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.FromPartitions_Documentation.Examples_0_Description": {
    "message": "Trouvez le type d'élément dans la liste <code>{number}</code>."
  },
  "Table.FromPartitions_Documentation.Examples_0_Code": {
    "message": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)"
  },
  "Table.FromPartitions_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
  },
  "Table.LastN_Documentation.Name": {
    "message": "Table.LastN"
  },
  "Table.LastN_Documentation.Description": {
    "message": "Retourne le dernier nombre de lignes spécifié."
  },
  "Table.LastN_Documentation.LongDescription": {
    "message": "Retourne les dernières lignes de la table <code>table</code>, en fonction de la valeur de <code>countOrCondition</code> :\r\n    <ul>\r\n    <li> Si <code>countOrCondition</code> est un nombre, autant de lignes sont retournées en commençant par la position (fin - <code>countOrCondition</code>). </li>\r\n    <li>Si <code>countOrCondition</code> est une condition, les lignes qui satisfont la condition sont retournés par position ascendante jusqu'au moment où une ligne ne remplit pas la condition.</li>\r\n</ul>"
  },
  "Table.LastN_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.LastN_Documentation.Examples_0_Description": {
    "message": "Recherche les deux dernières lignes de la table."
  },
  "Table.LastN_Documentation.Examples_0_Code": {
    "message": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)"
  },
  "Table.LastN_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.LastN_Documentation.Examples_1_Description": {
    "message": "Recherche les deux dernières lignes où [a] > 0 dans la table."
  },
  "Table.LastN_Documentation.Examples_1_Code": {
    "message": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)"
  },
  "Table.LastN_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
  },
  "Table.OnError_Documentation.Name": {
    "message": "Table.OnError"
  },
  "Table.OnError_Documentation.Description": {
    "message": "This function is intended for internal use only."
  },
  "Table.OnError_Documentation.LongDescription": {
    "message": "This function is intended for internal use only."
  },
  "Table.OnError_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Table.PrefixColumns_Documentation.Name": {
    "message": "Table.PrefixColumns"
  },
  "Table.PrefixColumns_Documentation.Description": {
    "message": "Retourne une table dans laquelle les colonnes ont toutes le préfixe avec le texte fourni."
  },
  "Table.PrefixColumns_Documentation.LongDescription": {
    "message": "Retourne une table où tous les noms de colonne du <code>table</code> spécifié sont préfixés avec le texte spécifié <code>prefix</code>, plus un point sous la forme <code>prefix</code><code>.ColumnName</code>."
  },
  "Table.PrefixColumns_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.PrefixColumns_Documentation.Examples_0_Description": {
    "message": "Préfixe les colonnes de la table avec « MyTable »."
  },
  "Table.PrefixColumns_Documentation.Examples_0_Code": {
    "message": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)"
  },
  "Table.PrefixColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
  },
  "Table.Range_Documentation.Name": {
    "message": "Table.Range"
  },
  "Table.Range_Documentation.Description": {
    "message": "Retourne les lignes démarrant au décalage spécifié."
  },
  "Table.Range_Documentation.LongDescription": {
    "message": "Retourne les lignes à partir du <code>table</code> à partir du <code>offset</code> spécifié. Un paramètre facultatif, <code>count</code>, spécifie le nombre de lignes à retourner. Par défaut, toutes les lignes après le décalage sont retournées."
  },
  "Table.Range_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.Range_Documentation.Examples_0_Description": {
    "message": "Retourne toutes les lignes en commençant au décalage 1 dans la table."
  },
  "Table.Range_Documentation.Examples_0_Code": {
    "message": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)"
  },
  "Table.Range_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.Range_Documentation.Examples_1_Description": {
    "message": "Retourne une seule ligne en commençant au décalage 1 dans la table."
  },
  "Table.Range_Documentation.Examples_1_Code": {
    "message": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)"
  },
  "Table.Range_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
  },
  "Table.RemoveColumns_Documentation.Name": {
    "message": "Table.RemoveColumns"
  },
  "Table.RemoveColumns_Documentation.Description": {
    "message": "Supprime les colonnes spécifiées."
  },
  "Table.RemoveColumns_Documentation.LongDescription": {
    "message": "Supprime le <code>columns</code> spécifié de la <code>table</code> fournie.\r\nSi la colonne spécifiée n’existe pas, une erreur est générée, sauf si le paramètre facultatif <code>missingField</code> spécifie un autre comportement (par exemple, <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>)."
  },
  "Table.RemoveColumns_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.RemoveColumns_Documentation.Examples_0_Description": {
    "message": "Supprime la colonne [Phone] de la table."
  },
  "Table.RemoveColumns_Documentation.Examples_0_Code": {
    "message": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)"
  },
  "Table.RemoveColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
  },
  "Table.RemoveColumns_Documentation.Examples_1_Description": {
    "message": "Essayez de supprimer une colonne inexistante de la table."
  },
  "Table.RemoveColumns_Documentation.Examples_1_Code": {
    "message": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)"
  },
  "Table.RemoveColumns_Documentation.Examples_1_Result": {
    "message": "[Expression.Error] The column 'Address' of the table wasn't found."
  },
  "Table.RemoveMatchingRows_Documentation.Name": {
    "message": "Table.RemoveMatchingRows"
  },
  "Table.RemoveMatchingRows_Documentation.Description": {
    "message": "Supprime toutes les occurrences des lignes spécifiées de la table."
  },
  "Table.RemoveMatchingRows_Documentation.LongDescription": {
    "message": "Supprime toutes les occurrences du <code>rows</code> spécifié de <code>table</code>.\r\n    Un paramètre facultatif <code>equationCriteria</code> peut être spécifié pour gérer la comparaison entre les lignes de la table."
  },
  "Table.RemoveMatchingRows_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.RemoveMatchingRows_Documentation.Examples_0_Description": {
    "message": "Supprime les lignes où [a = 1] dans la table <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code>."
  },
  "Table.RemoveMatchingRows_Documentation.Examples_0_Code": {
    "message": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)"
  },
  "Table.RemoveMatchingRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[a = 3, b = 4]})"
  },
  "Table.RemoveRows_Documentation.Name": {
    "message": "Table.RemoveRows"
  },
  "Table.RemoveRows_Documentation.Description": {
    "message": "Supprime le nombre de lignes spécifié."
  },
  "Table.RemoveRows_Documentation.LongDescription": {
    "message": "Supprime <code>count</code> des lignes au début du <code>table</code>, à partir du <code>offset</code> spécifié. Un nombre par défaut de 1 est utilisé si le paramètre <code>count</code> n'est pas fourni. "
  },
  "Table.RemoveRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.RemoveRows_Documentation.Examples_0_Description": {
    "message": "Supprime la première ligne de la table."
  },
  "Table.RemoveRows_Documentation.Examples_0_Code": {
    "message": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)"
  },
  "Table.RemoveRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.RemoveRows_Documentation.Examples_1_Description": {
    "message": "Supprime de la table la ligne à la position 1."
  },
  "Table.RemoveRows_Documentation.Examples_1_Code": {
    "message": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)"
  },
  "Table.RemoveRows_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.RemoveRows_Documentation.Examples_2_Description": {
    "message": "Supprime de la table deux lignes à partir de la position 1."
  },
  "Table.RemoveRows_Documentation.Examples_2_Code": {
    "message": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)"
  },
  "Table.RemoveRows_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.RenameColumns_Documentation.Name": {
    "message": "Table.RenameColumns"
  },
  "Table.RenameColumns_Documentation.Description": {
    "message": "Applique les attributions de noms sous la forme {old, new}."
  },
  "Table.RenameColumns_Documentation.LongDescription": {
    "message": "Effectue les attributions de noms spécifiées sur les colonnes dans la table <code>table</code>. Une opération de remplacement <code>renames</code> comprend une liste de deux valeurs, l'ancien nom de colonne et le nouveau nom de colonne, fournies dans une liste.\r\n    Si la colonne n'existe pas, une exception est levée à moins que le paramètre facultatif <code>missingField</code> ne spécifie une alternative (c'est-à-dire <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>)."
  },
  "Table.RenameColumns_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.RenameColumns_Documentation.Examples_0_Description": {
    "message": "Remplace le nom de la colonne « CustomerNum » de la table par « CustomerID »."
  },
  "Table.RenameColumns_Documentation.Examples_0_Code": {
    "message": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)"
  },
  "Table.RenameColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Table.RenameColumns_Documentation.Examples_1_Description": {
    "message": "Remplace les noms de colonne de la table « CustomerNum » par « CustomerID » et « PhoneNum » par « Phone »."
  },
  "Table.RenameColumns_Documentation.Examples_1_Code": {
    "message": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)"
  },
  "Table.RenameColumns_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Table.RenameColumns_Documentation.Examples_2_Description": {
    "message": "Remplace le nom de colonne de la table « NewCol » par « NewColumn », et ignore cette requête si la colonne n'existe pas."
  },
  "Table.RenameColumns_Documentation.Examples_2_Code": {
    "message": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)"
  },
  "Table.RenameColumns_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Table.ReorderColumns_Documentation.Name": {
    "message": "Table.ReorderColumns"
  },
  "Table.ReorderColumns_Documentation.Description": {
    "message": "Retourne une table contenant des colonnes dans l'ordre spécifié."
  },
  "Table.ReorderColumns_Documentation.LongDescription": {
    "message": "Retourne une table à partir de l'entrée <code>table</code>, avec les colonnes dans l'ordre spécifié par <code>columnOrder</code>. Les colonnes qui ne sont pas spécifiées dans la liste ne seront pas réorganisées.\r\n     Si la colonne n'existe pas, une exception est levée à moins que le paramètre facultatif <code>missingField</code> ne spécifie une autre solution (c'est-à-dire <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>)."
  },
  "Table.ReorderColumns_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.ReorderColumns_Documentation.Examples_0_Description": {
    "message": "Inverse l'ordre des colonnes [Phone] et [Name] dans la table."
  },
  "Table.ReorderColumns_Documentation.Examples_0_Code": {
    "message": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)"
  },
  "Table.ReorderColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Table.ReorderColumns_Documentation.Examples_1_Description": {
    "message": "Inverse l'ordre des colonnes [Phone] et [Address] de la table, ou utilise « MissingField.Ignore ». Ne change pas la table si la colonne [Address] n'existe pas."
  },
  "Table.ReorderColumns_Documentation.Examples_1_Code": {
    "message": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)"
  },
  "Table.ReorderColumns_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Table.Repeat_Documentation.Name": {
    "message": "Table.Repeat"
  },
  "Table.Repeat_Documentation.Description": {
    "message": "Répète les lignes des tables un nombre spécifié de fois."
  },
  "Table.Repeat_Documentation.LongDescription": {
    "message": "Retourne une table avec les lignes de l'entrée <code>table</code>, répétées <code>count</code> fois."
  },
  "Table.Repeat_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.Repeat_Documentation.Examples_0_Description": {
    "message": "Répète deux fois les lignes de la table."
  },
  "Table.Repeat_Documentation.Examples_0_Code": {
    "message": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)"
  },
  "Table.Repeat_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
  },
  "Table.ReplaceErrorValues_Documentation.Name": {
    "message": "Table.ReplaceErrorValues"
  },
  "Table.ReplaceErrorValues_Documentation.Description": {
    "message": "Remplace les valeurs d'erreur dans les colonnes indiquées par la valeur spécifiée correspondante."
  },
  "Table.ReplaceErrorValues_Documentation.LongDescription": {
    "message": "Remplace les valeurs d'erreur dans les colonnes indiquées de <code>table</code> par les nouvelles valeurs de la liste <code>errorReplacement</code>. Le format de la liste est {{column1, value1}, …}. Une seule valeur de remplacement peut exister par colonne. Si vous indiquez plusieurs fois la colonne, une erreur peut se produire."
  },
  "Table.ReplaceErrorValues_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.ReplaceErrorValues_Documentation.Examples_0_Description": {
    "message": "Remplace la valeur de l'erreur par le texte « world » dans la table."
  },
  "Table.ReplaceErrorValues_Documentation.Examples_0_Code": {
    "message": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)"
  },
  "Table.ReplaceErrorValues_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
  },
  "Table.ReplaceErrorValues_Documentation.Examples_1_Description": {
    "message": "Remplace dans la table la valeur de l'erreur de la colonne A par le texte « hello » et dans la colonne B par le texte « world »."
  },
  "Table.ReplaceErrorValues_Documentation.Examples_1_Code": {
    "message": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)"
  },
  "Table.ReplaceErrorValues_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
  },
  "Table.ReplaceKeys_Documentation.Name": {
    "message": "Table.ReplaceKeys"
  },
  "Table.ReplaceKeys_Documentation.Description": {
    "message": "Remplace les clés de la table spécifiée."
  },
  "Table.ReplaceKeys_Documentation.LongDescription": {
    "message": "Remplace les clés de la table spécifiée."
  },
  "Table.ReplaceKeys_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.ReplaceKeys_Documentation.Examples_0_Description": {
    "message": "Remplacer les clés existantes d’une table."
  },
  "Table.ReplaceKeys_Documentation.Examples_0_Code": {
    "message": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable"
  },
  "Table.ReplaceKeys_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
  },
  "Table.ReplaceMatchingRows_Documentation.Name": {
    "message": "Table.ReplaceMatchingRows"
  },
  "Table.ReplaceMatchingRows_Documentation.Description": {
    "message": "Remplace toutes les lignes spécifiées par les lignes fournies."
  },
  "Table.ReplaceMatchingRows_Documentation.LongDescription": {
    "message": "Remplace toutes les lignes spécifiées dans <code>table</code> par les lignes fournies. Les lignes à remplacer et les remplacements sont spécifiés dans <code>replacements</code>, à l'aide du format {old, new}.\r\n    Un paramètre facultatif <code>equationCriteria</code> peut être spécifié pour gérer la comparaison entre les lignes de la table."
  },
  "Table.ReplaceMatchingRows_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.ReplaceMatchingRows_Documentation.Examples_0_Description": {
    "message": "Remplace dans la table les lignes [a = 1, b = 2] et [a = 2, b = 3] par [a = -1, b = -2],[a = -2, b = -3]."
  },
  "Table.ReplaceMatchingRows_Documentation.Examples_0_Code": {
    "message": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)"
  },
  "Table.ReplaceMatchingRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
  },
  "Table.SelectColumns_Documentation.Name": {
    "message": "Table.SelectColumns"
  },
  "Table.SelectColumns_Documentation.Description": {
    "message": "Retourne une table contenant uniquement les colonnes spécifiées."
  },
  "Table.SelectColumns_Documentation.LongDescription": {
    "message": "Retourne le <code>table</code> avec uniquement le <code>columns</code>.\r\n    <ul>\r\n       <li><code>table</code> spécifié : table.</li>\r\n       <li><code>columns</code> fournie : liste des colonnes de la table <code>table</code> à retourner. Les colonnes de la table retournée sont dans l’ordre répertorié dans <code>columns</code>.</li>\r\n       <li><code>missingField</code> : <i>(Facultatif) </i> Que faire si la colonne n’existe pas.  Exemple : <code>missingField.UseNull</code> ou <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    "
  },
  "Table.SelectColumns_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.SelectColumns_Documentation.Examples_0_Description": {
    "message": "Incluez uniquement la colonne [Name]."
  },
  "Table.SelectColumns_Documentation.Examples_0_Code": {
    "message": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)"
  },
  "Table.SelectColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
  },
  "Table.SelectColumns_Documentation.Examples_1_Description": {
    "message": "Incluez uniquement les colonnes [CustomerID] et [Name]."
  },
  "Table.SelectColumns_Documentation.Examples_1_Code": {
    "message": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)"
  },
  "Table.SelectColumns_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
  },
  "Table.SelectColumns_Documentation.Examples_2_Description": {
    "message": "Si la colonne incluse n'existe pas, le résultat par défaut est une erreur."
  },
  "Table.SelectColumns_Documentation.Examples_2_Code": {
    "message": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)"
  },
  "Table.SelectColumns_Documentation.Examples_2_Result": {
    "message": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
  },
  "Table.SelectColumns_Documentation.Examples_3_Description": {
    "message": "Si la colonne incluse n'existe pas, l'option <code>MissingField.UseNull</code> crée une colonne de valeurs nulles."
  },
  "Table.SelectColumns_Documentation.Examples_3_Code": {
    "message": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)"
  },
  "Table.SelectColumns_Documentation.Examples_3_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
  },
  "Table.SelectRows_Documentation.Name": {
    "message": "Table.SelectRows"
  },
  "Table.SelectRows_Documentation.Description": {
    "message": "Sélectionne des lignes qui correspondent à la fonction de condition."
  },
  "Table.SelectRows_Documentation.LongDescription": {
    "message": "Retourne une table de lignes depuis <code>table</code>, qui correspond à la sélection <code>condition</code>."
  },
  "Table.SelectRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.SelectRows_Documentation.Examples_0_Description": {
    "message": "Sélectionnez les lignes dans la table où les valeurs de la colonne [CustomerID] sont supérieures à 2."
  },
  "Table.SelectRows_Documentation.Examples_0_Code": {
    "message": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)"
  },
  "Table.SelectRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.SelectRows_Documentation.Examples_1_Description": {
    "message": "Sélectionnez les lignes de la table où les noms ne contiennent pas un « B »."
  },
  "Table.SelectRows_Documentation.Examples_1_Code": {
    "message": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)"
  },
  "Table.SelectRows_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.Sort_Documentation.Name": {
    "message": "Table.Sort"
  },
  "Table.Sort_Documentation.Description": {
    "message": "Trie la table en utilisant un ou plusieurs noms de colonne et critères de comparaison."
  },
  "Table.Sort_Documentation.LongDescription": {
    "message": "Trie <code>table</code> en utilisant une liste d'un ou plusieurs noms de colonne et un paramètre facultatif <code>comparisonCriteria</code> sous la forme { { col1, comparisonCriteria }, {col2} }."
  },
  "Table.Sort_Documentation.Category": {
    "message": "Table.Ordering"
  },
  "Table.Sort_Documentation.Examples_0_Description": {
    "message": "Trie la table sur la colonne « OrderID »."
  },
  "Table.Sort_Documentation.Examples_0_Code": {
    "message": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)"
  },
  "Table.Sort_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
  },
  "Table.Sort_Documentation.Examples_1_Description": {
    "message": "Trie la table sur la colonne « OrderID » par ordre décroissant."
  },
  "Table.Sort_Documentation.Examples_1_Code": {
    "message": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)"
  },
  "Table.Sort_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
  },
  "Table.Sort_Documentation.Examples_2_Description": {
    "message": "Trie la table sur la colonne « CustomerID », puis sur la colonne « OrderID », avec « CustomerID » par ordre croissant."
  },
  "Table.Sort_Documentation.Examples_2_Code": {
    "message": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)"
  },
  "Table.Sort_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
  },
  "Table.TransformColumnNames_Documentation.Name": {
    "message": "Table.TransformColumnNames"
  },
  "Table.TransformColumnNames_Documentation.Description": {
    "message": "Transforme les noms de colonnes en utilisant la fonction spécifiée."
  },
  "Table.TransformColumnNames_Documentation.LongDescription": {
    "message": "Transforme les noms de colonnes à l’aide de la fonction <code>nameGenerator</code> donnée. Options valides : \r\n    <div>\r\n      <code></code> MaxLength spécifie la longueur maximale des nouveaux noms de colonnes. Si la fonction donnée donne un nom de colonne plus long, le nom long est tronqué.\r\n    </div>\r\n    <div>\r\n      <code>Comparer</code> est utilisé pour contrôler la comparaison lors de la génération de nouveaux noms de colonnes. Les comparateurs peuvent être utilisés pour fournir des comparaisons ne respectant pas la casse ou de culture et prenant en charge les paramètres régionaux.\r\n    </div>\r\n    <div>\r\n      Les comparateurs intégrés suivants sont disponibles dans le langage de formule :\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code> : Utilisé pour effectuer une comparaison ordinale</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code> : utilisé pour effectuer une comparaison exacte ne respectant pas la casse</li>\r\n      <li> <code>Comparer.FromCulture</code> : utilisé pour effectuer une comparaison prenant en compte la culture</li>\r\n    </ul>\r\n    "
  },
  "Table.TransformColumnNames_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.TransformColumnNames_Documentation.Examples_0_Description": {
    "message": "Supprime le caractère <code>#(tab)</code> des noms de colonnes"
  },
  "Table.TransformColumnNames_Documentation.Examples_0_Code": {
    "message": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)"
  },
  "Table.TransformColumnNames_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[Column = 1]})"
  },
  "Table.TransformColumnNames_Documentation.Examples_1_Description": {
    "message": "Transformez les noms de colonnes pour générer des noms ne respectant pas la casse et d'une longueur de 6."
  },
  "Table.TransformColumnNames_Documentation.Examples_1_Code": {
    "message": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)"
  },
  "Table.TransformColumnNames_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
  },
  "Table.TransformColumnTypes_Documentation.Name": {
    "message": "Table.TransformColumnTypes"
  },
  "Table.TransformColumnTypes_Documentation.Description": {
    "message": "Applique les transformations de type au format { column, type } à l'aide d'une culture spécifique."
  },
  "Table.TransformColumnTypes_Documentation.LongDescription": {
    "message": "Retourne une table à partir de l'entrée <code>table</code> en appliquant l'opération de transformation aux colonnes spécifiées dans le paramètre <code>typeTransformations</code> (avec le format { column name, type name}), en utilisant la culture spécifiée dans le paramètre facultatif <code>culture</code> (par exemple, \"fr-fr\").\r\n    Si la colonne n'existe pas, une exception est levée."
  },
  "Table.TransformColumnTypes_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.TransformColumnTypes_Documentation.Examples_0_Description": {
    "message": "Transforme les valeurs de nombre dans la colonne [a] en valeurs de texte depuis la table <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>."
  },
  "Table.TransformColumnTypes_Documentation.Examples_0_Code": {
    "message": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)"
  },
  "Table.TransformColumnTypes_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
  },
  "Table.TransformColumns_Documentation.Name": {
    "message": "Table.TransformColumns"
  },
  "Table.TransformColumns_Documentation.Description": {
    "message": "Transformez les valeurs d’une ou plusieurs colonnes."
  },
  "Table.TransformColumns_Documentation.LongDescription": {
    "message": "Transforme <code>table</code> en appliquant chaque opération de colonne répertoriée dans <code>transformOperations</code> (où le format est { column name, transformation } ou { column name, transformation, new column type }).\r\n    Si un <code>defaultTransformation</code> est spécifié, il est appliqué à toutes les colonnes non répertoriées dans <code>transformOperations</code>.\r\n    Si une colonne répertoriée dans <code>transformOperations</code> n’existe pas, une exception est levée, sauf si le paramètre facultatif <code>missingField</code> spécifie une alternative (par exemple, <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>)."
  },
  "Table.TransformColumns_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.TransformColumns_Documentation.Examples_0_Description": {
    "message": "Convertissez les valeurs de texte de la colonne [A] en valeurs numériques et les valeurs numériques de la colonne [B] en valeurs de texte."
  },
  "Table.TransformColumns_Documentation.Examples_0_Code": {
    "message": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)"
  },
  "Table.TransformColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
  },
  "Table.TransformColumns_Documentation.Examples_1_Description": {
    "message": "Convertissez les valeurs numériques de la colonne manquante [X] en valeurs de texte, en ignorant les colonnes qui n’existent pas."
  },
  "Table.TransformColumns_Documentation.Examples_1_Code": {
    "message": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)"
  },
  "Table.TransformColumns_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
  },
  "Table.TransformColumns_Documentation.Examples_2_Description": {
    "message": "Convertissez les valeurs numériques de la colonne manquante [X] en valeurs de texte, par défaut null sur les colonnes qui n’existent pas."
  },
  "Table.TransformColumns_Documentation.Examples_2_Code": {
    "message": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)"
  },
  "Table.TransformColumns_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
  },
  "Table.TransformColumns_Documentation.Examples_3_Description": {
    "message": "Incrémentez les valeurs numériques dans la colonne [B] et convertissez-les en valeurs de texte, puis convertissez toutes les autres colonnes en nombres."
  },
  "Table.TransformColumns_Documentation.Examples_3_Code": {
    "message": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)"
  },
  "Table.TransformColumns_Documentation.Examples_3_Result": {
    "message": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
  },
  "Table.View_Documentation.Name": {
    "message": "Table.View"
  },
  "Table.View_Documentation.Description": {
    "message": "Crée ou étend une table avec des gestionnaires définis par l'utilisateur pour les opérations de requête et d'action."
  },
  "Table.View_Documentation.LongDescription": {
    "message": "<p>Renvoie une vue de <code>table</code> l'endroit où les fonctions spécifiées dans <code>handlers</code> sont utilisées à la place du comportement par défaut d'une opération lorsque l'opération est appliquée à la vue.</p>\r\n<p>Si <code>table</code> est fourni, toutes les fonctions de gestionnaire sont facultatives. Si <code>table</code> elle n'est pas fournie, les fonctions de gestion <code>GetType</code> et <code>GetRows</code> sont requises. Si aucune fonction de gestionnaire n'est spécifiée pour une opération, le comportement par défaut de l'opération est appliqué à <code>table</code> la place (sauf dans le cas de <code>GetExpression</code>).</p>\r\n<p>Les fonctions de gestionnaire doivent renvoyer un valeur qui est sémantiquement équivalente au résultat de l'application de l'opération sur <code>table</code> (ou la vue résultante dans le cas de <code>GetExpression</code>).</p>\r\n<p>Si une fonction de gestionnaire génère une erreur, le comportement par défaut de l'opération est appliquée à la vue.</p>\r\n<p><code>Table.View</code> peut être utilisé pour implémenter le repliement vers une source de données – la traduction de requêtes M en requêtes spécifiques à la source (par exemple, pour créer des instructions T-SQL à partir de requêtes M).</p>\r\n<p>Référez-vous à la documentation publiée sur le connecteur personnalisé Power Query pour une description plus complète de <code>Table.View</code>.</p>"
  },
  "Table.View_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Table.View_Documentation.Examples_0_Description": {
    "message": "Créez une vue de base qui ne nécessite pas d'accéder aux lignes afin de déterminer le type ou le nombre de lignes."
  },
  "Table.View_Documentation.Examples_0_Code": {
    "message": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)"
  },
  "Table.View_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
  },
  "Troux.CustomFeed_Documentation.Description": {
    "message": "Enter the URL of your Planview Enterprise Architecture account and a query."
  },
  "Troux.CustomFeed_Documentation.DisplayName": {
    "message": "Planview Enterprise Architecture"
  },
  "Troux.CustomFeed_Documentation.Caption": {
    "message": "Planview Enterprise Architecture"
  },
  "Troux.CustomFeed_Documentation.Name": {
    "message": "Planview Enterprise Architecture"
  },
  "Troux.CustomFeed_Documentation.LongDescription": {
    "message": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
  },
  "VSTS.AnalyticsViews_Documentation.Description": {
    "message": "Entrez les noms de l'organisation et du projet."
  },
  "VSTS.AnalyticsViews_Documentation.DisplayName": {
    "message": "VSTS.AnalyticsViews"
  },
  "VSTS.AnalyticsViews_Documentation.Caption": {
    "message": "VSTS.AnalyticsViews"
  },
  "VSTS.AnalyticsViews_Documentation.Name": {
    "message": "Azure DevOps (Boards uniquement)"
  },
  "VSTS.AnalyticsViews_Documentation.LongDescription": {
    "message": "Retourne une table de vues Analytics offertes par Azure DevOps."
  },
  "Vertica.Database_Documentation.Name": {
    "message": "Vertica"
  },
  "Vertica.Database_Documentation.Caption": {
    "message": "Vertica"
  },
  "Vertica.Database_Documentation.Description": {
    "message": "Importer des données de Vertica"
  },
  "Vertica.Database_Documentation.LongDescription": {
    "message": "Retourne une table des schémas disponibles sur le serveur nommé par le paramètre <code>server</code> dans la base de données nommée par le paramètre <code>database</code>.\r\nUn paramètre d'enregistrement facultatif, <code>options</code>, peut être indiqué pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n<ul>\r\n    <li><code>ConnectionTimeout</code> : durée qui contrôle le délai d'attente avant l'abandon d'une tentative de connexion au serveur. La valeur par défaut dépend du pilote.</li>\r\n    <li><code>CommandTimeout</code> : durée pendant laquelle la requête côté serveur est autorisée à s'exécuter avant son annulation. La valeur par défaut dépend du pilote.</li>\r\n</ul>"
  },
  "Vertica.Database_Documentation.Examples_0_Description": {
    "message": "Lister les tables dans Vertica"
  },
  "Webtrends.ReportContents_Documentation.Description": {
    "message": "Retourne une table avec le contenu du rapport de Webtrends."
  },
  "Webtrends.ReportContents_Documentation.DisplayName": {
    "message": "Webtrends.ReportContents"
  },
  "Webtrends.ReportContents_Documentation.Caption": {
    "message": "Webtrends.ReportContents"
  },
  "Webtrends.ReportContents_Documentation.Name": {
    "message": "Webtrends.ReportContents"
  },
  "Webtrends.ReportContents_Documentation.LongDescription": {
    "message": "Effectue un appel au point de terminaison de génération de rapports Webtrends donné et retourne toutes les données sous la forme d'une table."
  },
  "Webtrends.ReportContents_Documentation.Examples_0_Description": {
    "message": "Effectue un appel au point de terminaison du rapport des visiteurs Webtrends pour les données des 30 derniers jours"
  },
  "Webtrends.ReportContents_Documentation.Examples_0_Code": {
    "message": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")"
  },
  "Webtrends.ReportContents_Documentation.Examples_0_Result": {
    "message": "Table de données des visiteurs"
  },
  "Zucchetti.Contents_Documentation.Name": {
    "message": "Zucchetti HR Infinity"
  },
  "Zucchetti.Contents_Documentation.LongDescription": {
    "message": "Il retourne les contenus des VisualQuery (vqr), des rapports ou des fonctions publiées par le logiciel Zucchetti HR"
  },
  "Zucchetti.Contents_Documentation.Examples_0_Description": {
    "message": "Requête pour la liste des salariés"
  },
  "Zucchetti.Contents_Documentation.Examples_0_Code": {
    "message": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]"
  },
  "Zucchetti.Contents_Documentation.Examples_0_Result": {
    "message": "    Table containing employee list"
  },
  "ActiveDirectory.Domains_Documentation.Name": {
    "message": "ActiveDirectory.Domains"
  },
  "ActiveDirectory.Domains_Documentation.Description": {
    "message": "Retourne une liste de domaines Active Directory dans la même forêt que le domaine spécifié ou le domaine actuel de l'ordinateur si aucun domaine n'est spécifié."
  },
  "ActiveDirectory.Domains_Documentation.LongDescription": {
    "message": "Retourne une liste de domaines Active Directory dans la même forêt que le domaine spécifié ou le domaine actuel de l'ordinateur si aucun domaine n'est spécifié."
  },
  "ActiveDirectory.Domains_Documentation.Category": {
    "message": "Accessing data"
  },
  "AdoDotNet.Query_Documentation.Name": {
    "message": "AdoDotNet.Query"
  },
  "AdoDotNet.Query_Documentation.Description": {
    "message": "Retourne le résultat de l'exécution d'une requête native sur une source de données ADO.NET."
  },
  "AdoDotNet.Query_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'exécution de <code>query</code> avec la chaîne de connexion <code>connectionString</code> en utilisant le fournisseur ADO.NET <code>providerName</code>. <code>connectionString</code> peut être du texte ou un enregistrement de paires propriété-valeur. Les valeurs des propriétés peuvent être du texte ou un nombre. Vous pouvez fournir un paramètre d'enregistrement facultatif <code>options</code> pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>CommandTimeout</code> : D&#233;lai qui contr&#244;le le temps d’ex&#233;cution d’une requ&#234;te c&#244;t&#233; serveur avant que celle-ci ne soit annul&#233;e. La valeur par d&#233;faut correspond &#224; dix&#160;minutes.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logique (true/false) qui d&#233;termine la cr&#233;ation d&#39;options de cha&#238;ne de connexion compatible avec SQL Server pour l&#39;authentification Windows. La valeur par d&#233;faut est true.</li>\r\n</ul>\r\n"
  },
  "AdoDotNet.Query_Documentation.Category": {
    "message": "Accessing data"
  },
  "AdobeAnalytics.Cubes_Documentation.Name": {
    "message": "AdobeAnalytics.Cubes"
  },
  "AdobeAnalytics.Cubes_Documentation.Description": {
    "message": "Retourne les suites de rapport dans Adobe Analytics."
  },
  "AdobeAnalytics.Cubes_Documentation.LongDescription": {
    "message": "Retourne une table de paquets multidimensionnels d'Adobe Analytics. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour contrôler les options suivantes : \r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : Valeur logique (true/false) qui indique si les tables &#224; afficher doivent &#234;tre regroup&#233;es en fonction de leurs noms de sch&#233;mas (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>MaxRetryCount</code> : Nombre de nouvelles tentatives &#224; effectuer lors de l&#39;interrogation du r&#233;sultat de la requ&#234;te. La valeur par d&#233;faut est 120.</li>\r\n<li><code>RetryInterval</code> : Dur&#233;e entre les nouvelles tentatives. La valeur par d&#233;faut est de 1 seconde.</li>\r\n<li><code>Implementation</code> : Sp&#233;cifie la version de l’API Adobe Analytics. Les valeurs valides sont&#160;: &#171; 2.0 &#187;. La valeur par d&#233;faut utilise l’API version 1.4.</li>\r\n</ul>\r\n\r\n"
  },
  "AdobeAnalytics.Cubes_Documentation.Category": {
    "message": "Accessing data"
  },
  "AmazonOpenSearchService.Contents_Documentation.Name": {
    "message": "Amazon OpenSearch Service"
  },
  "ApacheHiveLLAP.Database_Documentation.Name": {
    "message": "LLAP Hive"
  },
  "ApacheHiveLLAP.Database_Documentation.Description": {
    "message": "Importer des données à partir d'un LLAP Hive"
  },
  "ApacheHiveLLAP.Database_Documentation.LongDescription": {
    "message": "\r\nRetourne une liste de tables à partir du LLAP Hive spécifié par la <code>base de données</code> sur le <code>serveur</code> LLAP Hive en utilisant le <code>protocole</code> sélectionné. Vous pouvez spécifier un numéro de port avec le serveur, en le séparant avec le signe deux-points. Le protocole de transport Thrift est un type énuméré avec les valeurs « Standard », « HTTP ». Vous pouvez spécifier un paramètre <code>options</code> facultatif pour contrôler les options suivantes :\r\n<ul>\r\n        <li><code>ConnectionTimeout</code> : Durée qui contrôle le temps d'attente avant l'abandon de la tentative de connexion au serveur. La valeur par défaut dépend du pilote.</li>\r\n        <li><code>CommandTimeout</code> : Durée qui contrôle le temps pendant lequel la requête côté serveur est autorisée à s'exécuter avant d'être annulée. La valeur par défaut dépend du pilote.</li>\r\n</ul>\r\nLe paramètre <code>options</code> est spécifié sous la forme [option1 = valeur1, option2 = valeur2...]."
  },
  "AzureCostManagement.Contents_Documentation.DisplayName": {
    "message": "Contents"
  },
  "AzureCostManagement.Contents_Documentation.Caption": {
    "message": "AzureCostManagement.Contents"
  },
  "AzureCostManagement.Contents_Documentation.Name": {
    "message": "AzureCostManagement.Contents"
  },
  "AzureCostManagement.Contents_Documentation.Examples_0_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les données des synthèses entre le 01-05-2017 et le 15-06-2017"
  },
  "AzureCostManagement.Contents_Documentation.Examples_0_Code": {
    "message": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          résultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          résultat"
  },
  "AzureCostManagement.Contents_Documentation.Examples_0_Result": {
    "message": "La fonction retourne les données des synthèses entre le 01-05-2017 et le 15-06-2017"
  },
  "AzureCostManagement.Contents_Documentation.Examples_1_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les données des synthèses d'avril 2017."
  },
  "AzureCostManagement.Contents_Documentation.Examples_1_Code": {
    "message": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          résultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          résultat"
  },
  "AzureCostManagement.Contents_Documentation.Examples_1_Result": {
    "message": "La fonction retourne les données entre le 01-04-2017 et le 30-04-2017"
  },
  "AzureCostManagement.Contents_Documentation.Examples_2_Description": {
    "message": "En supposant qu’aujourd'hui nous sommes le 15-06-2017, obtient les données des synthèses d'avril 2017 à maintenant."
  },
  "AzureCostManagement.Contents_Documentation.Examples_2_Code": {
    "message": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          résultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          résultat"
  },
  "AzureCostManagement.Contents_Documentation.Examples_2_Result": {
    "message": "La fonction retourne les données entre le 01-04-2017 et le 15-06-2017"
  },
  "AzureCostManagement.Tables_Documentation.Caption": {
    "message": "Azure Cost Management"
  },
  "AzureCostManagement.Tables_Documentation.Description": {
    "message": "Azure Cost Management"
  },
  "AzureCostManagement.Tables_Documentation.DisplayName": {
    "message": "Azure Cost Management"
  },
  "AzureCostManagement.Tables_Documentation.LongDescription": {
    "message": "Azure Cost Management"
  },
  "AzureCostManagement.Tables_Documentation.Name": {
    "message": "Azure Cost Management"
  },
  "AzureDevOpsServer.Views_Documentation.Description": {
    "message": "Entrez les noms de l'organisation et du projet."
  },
  "AzureDevOpsServer.Views_Documentation.DisplayName": {
    "message": "VSTS.Views"
  },
  "AzureDevOpsServer.Views_Documentation.Caption": {
    "message": "VSTS.Views"
  },
  "AzureDevOpsServer.Views_Documentation.Name": {
    "message": "Azure DevOps Services"
  },
  "AzureDevOpsServer.Views_Documentation.LongDescription": {
    "message": "Retourne une table de flux OData offerts par Azure DevOps."
  },
  "CDataConnectCloud.Contents_Documentation.Name": {
    "message": "CData Connect Cloud"
  },
  "CDataConnectCloud.Contents_Documentation.LongDescription": {
    "message": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
  },
  "CommonDataService.Database_Documentation.Name": {
    "message": "Dataverse"
  },
  "CommonDataService.Database_Documentation.Caption": {
    "message": "Dataverse"
  },
  "CommonDataService.Database_Documentation.LongDescription": {
    "message": "Connectez-vous à votre instance Dataverse (Dynamics 365 et PowerApps)."
  },
  "Cube.AddAndExpandDimensionColumn_Documentation.Name": {
    "message": "Cube.AddAndExpandDimensionColumn"
  },
  "Cube.AddAndExpandDimensionColumn_Documentation.Description": {
    "message": "Fusionne la table de dimensions spécifiée dans le contexte de filtre du cube et modifie la granularité dimensionnelle du contexte de filtre en développant le jeu d'attributs de dimension spécifié."
  },
  "Cube.AddAndExpandDimensionColumn_Documentation.LongDescription": {
    "message": "Fusionne la table de dimensions spécifiée, <code>dimensionSelector</code>, dans le contexte de filtre du cube, <code>cube</code>, et modifie la granularité dimensionnelle du contexte de filtre en développant le jeu d'attributs de dimension spécifié, <code>attributeNames</code>. Les attributs de dimension sont ajoutés à la vue tabulaire avec des colonnes nommées <code>newColumnNames</code>, ou <code>attributeNames</code> si non spécifié."
  },
  "Cube.AddAndExpandDimensionColumn_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.AddMeasureColumn_Documentation.Name": {
    "message": "Cube.AddMeasureColumn"
  },
  "Cube.AddMeasureColumn_Documentation.Description": {
    "message": "Ajoute une colonne au cube qui contient les résultats de la mesure appliquée au contexte de ligne de chaque ligne."
  },
  "Cube.AddMeasureColumn_Documentation.LongDescription": {
    "message": "Ajoute une colonne portant le nom <code>column</code> au <code>cube</code> qui contient les résultats de la mesure <code>measureSelector</code> appliquée au contexte de ligne de chaque ligne. L'application de mesure est affectée par les modifications apportées à la granularité et au découpage des dimensions. Les valeurs de mesure seront ajustées après l'exécution de certaines opérations sur le cube."
  },
  "Cube.AddMeasureColumn_Documentation.Category": {
    "message": "Cube"
  },
  "CustomerInsights.Contents_Documentation.Name": {
    "message": "Dynamics 365 Customer Insights"
  },
  "Dynamics365BusinessCentral.ApiContents_Documentation.Description": {
    "message": "Entrez votre environnement et votre entreprise Dynamics 365 Business Central."
  },
  "Dynamics365BusinessCentral.ApiContents_Documentation.DisplayName": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.ApiContents_Documentation.Caption": {
    "message": "Dynamics365BusinessCentral.Contents"
  },
  "Dynamics365BusinessCentral.ApiContents_Documentation.Name": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.ApiContents_Documentation.LongDescription": {
    "message": "Retourne une table contenant des données Dynamics 365 Business Central pertinentes. "
  },
  "Dynamics365BusinessCentral.ApiContentsWithOptions_Documentation.Description": {
    "message": "Entrez votre environnement et votre entreprise Dynamics 365 Business Central."
  },
  "Dynamics365BusinessCentral.ApiContentsWithOptions_Documentation.DisplayName": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.ApiContentsWithOptions_Documentation.Caption": {
    "message": "Dynamics365BusinessCentral.Contents"
  },
  "Dynamics365BusinessCentral.ApiContentsWithOptions_Documentation.Name": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.ApiContentsWithOptions_Documentation.LongDescription": {
    "message": "Retourne une table contenant des données Dynamics 365 Business Central pertinentes. "
  },
  "Dynamics365BusinessCentral.Contents_Documentation.Description": {
    "message": "Entrez votre environnement et votre entreprise Dynamics 365 Business Central."
  },
  "Dynamics365BusinessCentral.Contents_Documentation.DisplayName": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.Contents_Documentation.Caption": {
    "message": "Dynamics365BusinessCentral.Contents"
  },
  "Dynamics365BusinessCentral.Contents_Documentation.Name": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.Contents_Documentation.LongDescription": {
    "message": "Retourne une table contenant des données Dynamics 365 Business Central pertinentes. "
  },
  "Dynamics365BusinessCentral.EnvironmentContents_Documentation.Description": {
    "message": "Entrez votre environnement et votre entreprise Dynamics 365 Business Central."
  },
  "Dynamics365BusinessCentral.EnvironmentContents_Documentation.DisplayName": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.EnvironmentContents_Documentation.Caption": {
    "message": "Dynamics365BusinessCentral.Contents"
  },
  "Dynamics365BusinessCentral.EnvironmentContents_Documentation.Name": {
    "message": "Dynamics 365 Business Central"
  },
  "Dynamics365BusinessCentral.EnvironmentContents_Documentation.LongDescription": {
    "message": "Retourne une table contenant des données Dynamics 365 Business Central pertinentes. "
  },
  "Emigo.Contents_Documentation.Name": {
    "message": "Emigo.Contents"
  },
  "Emigo.Contents_Documentation.LongDescription": {
    "message": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period"
  },
  "Emigo.Contents_Documentation.Examples_0_Description": {
    "message": "The purpose of the function is set the feed call parametrs"
  },
  "Emigo.Contents_Documentation.Examples_0_Code": {
    "message": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\""
  },
  "Emigo.Contents_Documentation.Examples_0_Result": {
    "message": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
  },
  "Excel.CurrentWorkbook_Documentation.Name": {
    "message": "Excel.CurrentWorkbook"
  },
  "Excel.CurrentWorkbook_Documentation.Description": {
    "message": "Retourne le contenu du classeur Excel actif."
  },
  "Excel.CurrentWorkbook_Documentation.LongDescription": {
    "message": "Retourne le contenu du classeur Excel actuel. Il retourne les tables, les plages nommées et les tableaux dynamiques. Contrairement à <code>Excel.Workbook</code>, il ne retourne pas de feuilles."
  },
  "Excel.CurrentWorkbook_Documentation.Category": {
    "message": "Accessing data"
  },
  "Exchange.Contents_Documentation.Name": {
    "message": "Exchange.Contents"
  },
  "Exchange.Contents_Documentation.Description": {
    "message": "Retourne une table de contenu d'un compte Microsoft Exchange spécifié."
  },
  "Exchange.Contents_Documentation.LongDescription": {
    "message": "Retourne une table de contenu à partir du compte Microsoft Exchange <code>mailboxAddress</code>. Si <code>mailboxAddress</code> n'est pas spécifié, le compte par défaut pour les informations d'identification est utilisé."
  },
  "Exchange.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Fabric.Warehouse_Documentation.Name": {
    "message": "Entrepôt"
  },
  "Fabric.Warehouse_Documentation.Caption": {
    "message": "Entrepôt"
  },
  "Fabric.Warehouse_Documentation.Description": {
    "message": "Importe des données depuis Warehouse"
  },
  "Fabric.Warehouse_Documentation.LongDescription": {
    "message": "Importe des données depuis Warehouse"
  },
  "Funnel.Contents_Documentation.Name": {
    "message": "Navigational data"
  },
  "Funnel.Contents_Documentation.LongDescription": {
    "message": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
  },
  "GoogleAnalytics.Accounts_Documentation.Name": {
    "message": "GoogleAnalytics.Accounts"
  },
  "GoogleAnalytics.Accounts_Documentation.Description": {
    "message": "Retourne des comptes Google Analytics."
  },
  "GoogleAnalytics.Accounts_Documentation.LongDescription": {
    "message": "Retourne des comptes Google Analytics qui sont accessibles via les informations d'identification actuelles."
  },
  "GoogleAnalytics.Accounts_Documentation.Category": {
    "message": "Accessing data"
  },
  "GoogleBigQuery.Database_Documentation.Name": {
    "message": "Google BigQuery"
  },
  "GoogleBigQuery.Database_Documentation.Caption": {
    "message": "Google BigQuery"
  },
  "GoogleBigQuery.Database_Documentation.Description": {
    "message": "Importe les données d'une base de données Google BigQuery."
  },
  "GoogleBigQuery.Database_Documentation.LongDescription": {
    "message": "\r\n      Retourne une table listant les projets disponibles dans Google BigQuery. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour gérer les options suivantes :\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Durée qui détermine le temps d'attente avant d'abandonner une tentative de connexion au serveur. La valeur par défaut est la valeur Délai de connexion ODBC.</li>\r\n        <li><code>CommandTimeout</code>: Durée qui détermine le temps d'exécution autorisé de la requête côté serveur avant qu'elle ne soit annulée.</li>\r\n        <li><code>BillingProject</code> : ID du projet de facturation. La valeur par défaut est le premier projet disponible.</li>\r\n        <li><code>UseStorageApi</code> : Indique s'il faut utiliser l'API Storage BigQuery pour les jeux de résultats volumineux. La valeur par défaut est true pour utiliser l'API Storage. Définissez la valeur sur false pour ne pas utiliser l'API Storage</li>\r\n      </ul>\r\n    Le paramètre d'enregistrement est spécifié sous la forme [option1 = value1, option2 = value2...].\r\n    "
  },
  "GoogleBigQuery.Database_Documentation.Examples_0_Description": {
    "message": "Lister les projets disponibles dans Google BigQuery"
  },
  "GoogleBigQuery.Database_Documentation.Examples_0_Code": {
    "message": "GoogleBigQuery.Database()"
  },
  "IRIS.Database_Documentation.Name": {
    "message": "InterSystems IRIS"
  },
  "IRIS.Database_Documentation.LongDescription": {
    "message": "InterSystems IRIS"
  },
  "IRIS.Database_Documentation.Icon": {
    "message": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
  },
  "Kyligence.Database_Documentation.Name": {
    "message": "Kyligence"
  },
  "Kyligence.Database_Documentation.LongDescription": {
    "message": "Connect your Kyligence"
  },
  "Lakehouse.Contents_Documentation.Name": {
    "message": "Lakehouse"
  },
  "Lakehouse.Contents_Documentation.Caption": {
    "message": "Importer des données à partir d’un Lakehouse"
  },
  "Lakehouse.Contents_Documentation.Description": {
    "message": "Importer des données à partir d’un Lakehouse"
  },
  "Lakehouse.Contents_Documentation.LongDescription": {
    "message": "Connectez-vous à tous les Lakehouses auxquels vous avez accès et choisissez les entités que vous souhaitez utiliser."
  },
  "MailChimp.TablesV2_Documentation.Description": {
    "message": "Retourne un tableau avec des données MailChimp clés."
  },
  "MailChimp.TablesV2_Documentation.DisplayName": {
    "message": "MailChimp"
  },
  "MailChimp.TablesV2_Documentation.Caption": {
    "message": "MailChimp.Tables"
  },
  "MailChimp.TablesV2_Documentation.Name": {
    "message": "MailChimp"
  },
  "MailChimp.TablesV2_Documentation.LongDescription": {
    "message": "Retourne un tableau avec des données MailChimp clés."
  },
  "MailChimp.TablesV2_Documentation.Examples_0_Description": {
    "message": "Retourne un tableau avec des données MailChimp clés."
  },
  "MailChimp.TablesV2_Documentation.Examples_0_Code": {
    "message": "MailChimp.Tables()"
  },
  "MailChimp.TablesV2_Documentation.Examples_0_Result": {
    "message": "Tableau avec des données MailChimp clés."
  },
  "Marketo.Activities_Documentation.Name": {
    "message": "Marketo.Activities"
  },
  "Marketo.Activities_Documentation.DisplayName": {
    "message": "Marketo.Activities"
  },
  "Marketo.Activities_Documentation.Caption": {
    "message": "Marketo.Activities"
  },
  "Marketo.Activities_Documentation.Description": {
    "message": "Retourne une table avec les activités des prospects."
  },
  "Marketo.Activities_Documentation.LongDescription": {
    "message": "Effectue un appel au point de terminaison de l'API REST Marketo de <code>url</code>/rest/v1/activities.json. Toutes les activités de la liste <code>activityIds</code> qui se sont produites depuis <code>startTime</code> sont retournées."
  },
  "Marketo.Activities_Documentation.Examples_0_Description": {
    "message": "Extrait une table des activités « Visiter une page web » depuis le 1er novembre 2015"
  },
  "Marketo.Activities_Documentation.Examples_0_Code": {
    "message": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})"
  },
  "Marketo.Activities_Documentation.Examples_0_Result": {
    "message": "Table avec les détails de toutes les activités « Visiter une page web » depuis le 1er novembre"
  },
  "MongoDBAtlasODBC.Query_Documentation.Name": {
    "message": "MongoDB Atlas SQL"
  },
  "OpenSearchProject.Contents_Documentation.Name": {
    "message": "OpenSearch Project"
  },
  "PlanviewEnterprise.CallQueryService_Documentation.Description": {
    "message": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query."
  },
  "PlanviewEnterprise.CallQueryService_Documentation.DisplayName": {
    "message": "PlanviewEnterprise.CallQueryService"
  },
  "PlanviewEnterprise.CallQueryService_Documentation.Caption": {
    "message": "PlanviewEnterprise.CallQueryService"
  },
  "PlanviewEnterprise.CallQueryService_Documentation.Name": {
    "message": "Planview Portfolios"
  },
  "PlanviewEnterprise.CallQueryService_Documentation.LongDescription": {
    "message": "Returns a table with Planview Portfolios data."
  },
  "PlanviewEnterprise.CallQueryService_Documentation.Examples_0_Description": {
    "message": "Returns a table with Planview Portfolios data."
  },
  "PlanviewEnterprise.CallQueryService_Documentation.Examples_0_Code": {
    "message": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"select * from PVE_Table\")"
  },
  "PlanviewEnterprise.CallQueryService_Documentation.Examples_0_Result": {
    "message": "A table of Planview Portfolios data about database pve"
  },
  "PowerBI.Dataflows_Documentation.Name": {
    "message": "Flux de données Power BI (hérité)"
  },
  "PowerBI.Dataflows_Documentation.Caption": {
    "message": "Importer des données à partir d'un flux de données Power BI"
  },
  "PowerBI.Dataflows_Documentation.LongDescription": {
    "message": "Connectez-vous à tous les flux de données Power BI auxquels vous avez accès et choisissez les entités que vous aimeriez utiliser."
  },
  "PowerBI.Datamarts_Documentation.Name": {
    "message": "Datamarts"
  },
  "PowerBI.Datamarts_Documentation.Caption": {
    "message": "Datamarts"
  },
  "PowerBI.Datamarts_Documentation.Description": {
    "message": "Importe des données à partir de Datamarts"
  },
  "PowerBI.Datamarts_Documentation.LongDescription": {
    "message": "Importe des données à partir de Datamarts"
  },
  "PowerPlatform.Dataflows_Documentation.Name": {
    "message": "Flux de données"
  },
  "PowerPlatform.Dataflows_Documentation.Caption": {
    "message": "Importer des données à partir d’un flux de données"
  },
  "PowerPlatform.Dataflows_Documentation.Description": {
    "message": "Importer des données à partir d’un flux de données"
  },
  "PowerPlatform.Dataflows_Documentation.LongDescription": {
    "message": "Connectez-vous à tous les flux de données auxquels vous avez accès et choisissez les entités que vous souhaitez utiliser"
  },
  "QuickBooksOnline.Tables_Documentation.Name": {
    "message": "QuickBooks Online"
  },
  "QuickBooksOnline.Tables_Documentation.Caption": {
    "message": "QuickBooks Online"
  },
  "QuickBooksOnline.Tables_Documentation.Description": {
    "message": "Importez les données à partir de QuickBooks Online."
  },
  "QuickBooksOnline.Tables_Documentation.LongDescription": {
    "message": "\r\n      Retourne une table listant les tables disponibles dans QuickBooks Online. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>options</code>, pour gérer les options suivantes :\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Durée qui détermine le temps d'attente avant d'abandonner une tentative de connexion au serveur.</li>\r\n        <li><code>CommandTimeout</code>: Durée qui détermine le temps d'exécution autorisé de la requête côté serveur avant qu'elle ne soit annulée.</li>\r\n      </ul>\r\n    Le paramètre d'enregistrement est spécifié sous la forme [option1 = value1, option2 = value2...].\r\n    "
  },
  "Salesforce.Data_Documentation.Name": {
    "message": "Salesforce.Data"
  },
  "Salesforce.Data_Documentation.Description": {
    "message": "Retourne les objets à partir du compte Salesforce."
  },
  "Salesforce.Data_Documentation.LongDescription": {
    "message": "Retourne les objets sur le compte Salesforce fourni dans les informations d'identification. Le compte est connecté par le biais de l'environnement <code>loginUrl</code> fourni. Si aucun environnement n'est fourni, le compte se connecte à la production (https://login.salesforce.com). Vous pouvez indiquer un paramètre d'enregistrement facultatif, <code>options</code>, pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Valeur logique (true/false) qui indique si des propri&#233;t&#233;s de navigation doivent &#234;tre g&#233;n&#233;r&#233;es pour les valeurs retourn&#233;es (valeur par d&#233;faut&#160;: false).</li>\r\n<li><code>ApiVersion</code> : Version de l&#39;API Salesforce &#224; utiliser pour cette requ&#234;te. Si elle n&#39;est pas sp&#233;cifi&#233;e, la version&#160;29.0 de l&#39;API est utilis&#233;e.</li>\r\n<li><code>Timeout</code> : Dur&#233;e qui contr&#244;le le temps d’attente avant l’abandon de la demande envoy&#233;e au serveur. La valeur par d&#233;faut est propre &#224; la source.</li>\r\n</ul>\r\n\r\n    "
  },
  "Salesforce.Data_Documentation.Category": {
    "message": "Accessing data"
  },
  "Salesforce.Reports_Documentation.Name": {
    "message": "Salesforce.Reports"
  },
  "Salesforce.Reports_Documentation.Description": {
    "message": "Retourne les rapports à partir du compte Salesforce."
  },
  "Salesforce.Reports_Documentation.LongDescription": {
    "message": "Retourne les rapports sur le compte Salesforce fourni dans les informations d'identification. Le compte est connecté par le biais de l'environnement <code>loginUrl</code> fourni. Si aucun environnement n'est fourni, le compte se connecte à la production (https://login.salesforce.com). Vous pouvez indiquer un paramètre d'enregistrement facultatif, <code>options</code>, pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>ApiVersion</code> : Version de l&#39;API Salesforce &#224; utiliser pour cette requ&#234;te. Si elle n&#39;est pas sp&#233;cifi&#233;e, la version&#160;29.0 de l&#39;API est utilis&#233;e.</li>\r\n<li><code>Timeout</code> : Dur&#233;e qui contr&#244;le le temps d’attente avant l’abandon de la demande envoy&#233;e au serveur. La valeur par d&#233;faut est propre &#224; la source.</li>\r\n</ul>\r\n\r\n    "
  },
  "Salesforce.Reports_Documentation.Category": {
    "message": "Accessing data"
  },
  "SapBusinessWarehouse.Cubes_Documentation.Name": {
    "message": "SapBusinessWarehouse.Cubes"
  },
  "SapBusinessWarehouse.Cubes_Documentation.Description": {
    "message": "Retourne les InfoCubes et les requêtes d'un système SAP Business Warehouse, regroupés par InfoArea."
  },
  "SapBusinessWarehouse.Cubes_Documentation.LongDescription": {
    "message": "Retourne une table d'InfoCubes et de requêtes regroupés par InfoArea à partir d'une instance SAP Business Warehouse sur le serveur <code>server</code> avec le numéro de système <code>systemNumberOrSystemId</code> et l'ID de client <code>clientId</code>. Vous pouvez spécifier un paramètre d'enregistrement facultatif, <code>optionsOrLogonGroup</code>, pour contrôler les options suivantes :\r\n    \r\n    "
  },
  "SapBusinessWarehouse.Cubes_Documentation.Category": {
    "message": "Accessing data"
  },
  "Siteimprove.Contents_Documentation.Name": {
    "message": "Siteimprove"
  },
  "Siteimprove.Contents_Documentation.LongDescription": {
    "message": "Siteimprove API connector"
  },
  "Smartsheet.Tables_Documentation.Description": {
    "message": "Retourne une table des feuilles, rapports, dossiers et espaces de travail à partir de l'API Smartsheet"
  },
  "Smartsheet.Tables_Documentation.DisplayName": {
    "message": "Smartsheet.Tables"
  },
  "Smartsheet.Tables_Documentation.Caption": {
    "message": "Smartsheet.Tables"
  },
  "Smartsheet.Tables_Documentation.Name": {
    "message": "Smartsheet.Tables"
  },
  "Smartsheet.Tables_Documentation.LongDescription": {
    "message": "Retourne une table imbriquée des feuilles, rapports, dossiers et espaces de travail disponibles à partir de l'API Smartsheet."
  },
  "Smartsheet.Tables_Documentation.Examples_0_Description": {
    "message": "Retourne les feuilles, dossiers, rapports et espaces de travail disponibles au niveau supérieur de la hiérarchie Smartsheet"
  },
  "Smartsheet.Tables_Documentation.Examples_0_Code": {
    "message": "Smartsheet.Tables()"
  },
  "Smartsheet.Tables_Documentation.Examples_0_Result": {
    "message": "Table des dossiers, rapports et espaces de travail du niveau supérieur de la hiérarchie Smartsheet"
  },
  "SoftOneBI.Contents_Documentation.Name": {
    "message": "SoftOne BI"
  },
  "SoftOneBI.Contents_Documentation.LongDescription": {
    "message": "Retrieves all Soft1/Atlantis tables in the datalake"
  },
  "SoftOneBI.Contents_Documentation.Examples_0_Description": {
    "message": "Returns a table of tables from the datalake"
  },
  "SoftOneBI.Contents_Documentation.Examples_0_Code": {
    "message": "SoftOneBI.Contents()"
  },
  "SoftOneBI.Contents_Documentation.Examples_0_Result": {
    "message": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
  },
  "SparkPost.GetTable_Documentation.Description": {
    "message": "Retourne une table des mesures disponibles à partir de l'API SparkPost v1"
  },
  "SparkPost.GetTable_Documentation.DisplayName": {
    "message": "SparkPost.GetTable"
  },
  "SparkPost.GetTable_Documentation.Caption": {
    "message": "SparkPost.GetTable"
  },
  "SparkPost.GetTable_Documentation.Name": {
    "message": "SparkPost.GetTable"
  },
  "SparkPost.GetTable_Documentation.LongDescription": {
    "message": "Cette fonction peut être utilisée pour récupérer des données d'un point de terminaison « Métriques » particulier de l'API SparkPost v1. Quand vous actualisez ces tables ou passez des appels à l'API SparkPost à l'aide de ce connecteur, gardez à l'esprit que l'API SparkPost a un débit maximal d'API strict. Si le code d'état 429 est retourné par le serveur SparkPost, vous avez atteint le débit maximal et devez attendre quelques instants avant de passer d'autres appels. Quand vous choisissez une valeur pour le paramètre Nombre de jours, notez que l'API stocke uniquement l'équivalent de 6 mois de données."
  },
  "SparkPost.GetTable_Documentation.Examples_0_Description": {
    "message": "Récupère les métriques de remise count_sent et count_rejected pour tous les campaign_ids agrégés des trois derniers jours. "
  },
  "SparkPost.GetTable_Documentation.Examples_0_Code": {
    "message": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")"
  },
  "SparkPost.GetTable_Documentation.Examples_0_Result": {
    "message": "table"
  },
  "Stripe.Method_Documentation.Name": {
    "message": "Stripe.Method"
  },
  "Stripe.Method_Documentation.DisplayName": {
    "message": "Stripe.Method"
  },
  "Stripe.Method_Documentation.Caption": {
    "message": "Stripe.Method"
  },
  "Stripe.Method_Documentation.Description": {
    "message": "Effectue un appel à l'API Stripe."
  },
  "Stripe.Method_Documentation.LongDescription": {
    "message": "Effectue un appel à l'API Stripe de https://api.stripe.com/v1/<code>method</code>, avec des <code>additionalParameters</code> d'enregistrement passés comme paramètres supplémentaires et les <code>ColumnNames</code> de la liste des noms de colonnes attendus. Stripe version 2015-10-16 est utilisé."
  },
  "Stripe.Method_Documentation.Examples_0_Description": {
    "message": "Retourne une table avec les événements créés après le 1er novembre 2015"
  },
  "Stripe.Method_Documentation.Examples_0_Code": {
    "message": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})"
  },
  "Stripe.Method_Documentation.Examples_0_Result": {
    "message": "Table avec les événements spécifiés pour le compte Stripe actif"
  },
  "Stripe.Method_Documentation.Examples_1_Description": {
    "message": "Retourne une table avec toutes les références (SKU)"
  },
  "Stripe.Method_Documentation.Examples_1_Code": {
    "message": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})"
  },
  "Stripe.Method_Documentation.Examples_1_Result": {
    "message": "Table avec toutes les références (SKU) pour le compte Stripe actif"
  },
  "Stripe.Tables_Documentation.Name": {
    "message": "Stripe.Tables"
  },
  "Stripe.Tables_Documentation.DisplayName": {
    "message": "Stripe.Tables"
  },
  "Stripe.Tables_Documentation.Caption": {
    "message": "Stripe.Tables"
  },
  "Stripe.Tables_Documentation.Description": {
    "message": "Retourne une table répertoriant les tables et les fonctions Stripe disponibles."
  },
  "Stripe.Tables_Documentation.LongDescription": {
    "message": "Retourne une table répertoriant les tables et les fonctions Stripe disponibles."
  },
  "SurveyMonkey.Contents_Documentation.Name": {
    "message": "SurveyMonkey"
  },
  "SurveyMonkey.Contents_Documentation.LongDescription": {
    "message": "A Navigation table showing all the surveys in the account related to the input access token."
  },
  "SurveyMonkey.Contents_Documentation.Examples_0_Description": {
    "message": "Returns the navigation table."
  },
  "SurveyMonkey.Contents_Documentation.Examples_0_Code": {
    "message": "SurveyMonkey.Contents()"
  },
  "Synapse.Contents_Documentation.Name": {
    "message": "Espace de travail Azure Synapse Analytics"
  },
  "Synapse.Contents_Documentation.Caption": {
    "message": "Espace de travail Azure Synapse Analytics"
  },
  "Synapse.Contents_Documentation.LongDescription": {
    "message": "Connecteur PQ pour l’espace de travail Azure Synapse Analytics"
  },
  "Table.AddColumn_Documentation.Name": {
    "message": "Table.AddColumn"
  },
  "Table.AddColumn_Documentation.Description": {
    "message": "Ajoute une colonne portant le nom spécifié. La valeur est calculée à l'aide de la fonction de sélection spécifiée en considérant chaque ligne comme une entrée."
  },
  "Table.AddColumn_Documentation.LongDescription": {
    "message": "Ajoute une colonne nommée <code>newColumnName</code> à la table <code>table</code>. Les valeurs de la colonne sont calculées à l'aide de la fonction de sélection spécifiée <code>columnGenerator</code> en considérant chaque ligne comme une entrée."
  },
  "Table.AddColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.AddColumn_Documentation.Examples_0_Description": {
    "message": "Ajoute une colonne de nombres nommée « TotalPrice » à la table, où chaque valeur est la somme des colonnes [Price] et colonne [Shipping]."
  },
  "Table.AddColumn_Documentation.Examples_0_Code": {
    "message": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)"
  },
  "Table.AddColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
  },
  "Table.AddFuzzyClusterColumn_Documentation.Name": {
    "message": "Table.AddFuzzyClusterColumn"
  },
  "Table.AddFuzzyClusterColumn_Documentation.Description": {
    "message": "Ajoute une nouvelle colonne avec les valeurs représentatives obtenues par les valeurs de regroupement probable de la colonne spécifiée dans la table."
  },
  "Table.AddFuzzyClusterColumn_Documentation.LongDescription": {
    "message": "Ajoute une nouvelle colonne <code>newColumnName</code> à <code>table</code> avec des valeurs représentatives de <code>columnName</code>. Les valeurs représentatives sont obtenues par correspondance approximative des valeurs dans <code>columnName</code>, pour chaque ligne.\r\n    <p>Un ensemble facultatif de <code>options</code> peut être inclus pour indiquer comment comparer les colonnes clés. Les options sont les suivantes : \r\n    <ul>\r\n<li><code>Culture</code> : Permet de regrouper des enregistrements en fonction de r&#232;gles propres &#224; la culture. Il peut s’agir d’un nom de culture valide. Par exemple, l’option de culture &#171;&#160;ja-JP&#160;&#187; regroupe les enregistrements bas&#233;s sur la culture japonaise. La valeur par d&#233;faut est &quot;&quot;, qui regroupe en fonction d’une culture anglaise dite indiff&#233;rente.</li>\r\n<li><code>IgnoreCase</code> : Valeur logique (true/false) qui autorise le regroupement de cl&#233;s ne respectant pas la casse. Par exemple, si la valeur est true, &#171;&#160;Raisins&#160;&#187; est group&#233; avec &#171;&#160;raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>IgnoreSpace</code> : Valeur logique (true/false) qui permet la combinaison de parties de texte afin de trouver des groupes. Par exemple, si la valeur est true, &#171;&#160;Rai sins&#160;&#187; est group&#233; avec &#171;&#160;Raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>SimilarityColumnName</code> : Nom de la colonne qui montre la similarit&#233; entre une valeur d’entr&#233;e et la valeur repr&#233;sentative de cette entr&#233;e. La valeur par d&#233;faut est null, auquel cas aucune nouvelle colonne pour les similitudes n’est ajout&#233;e.</li>\r\n<li><code>Threshold</code> : Nombre compris entre 0,00 et 1,00, qui sp&#233;cifie le score de similarit&#233; &#224; partir duquel deux valeurs sont regroup&#233;es.\r\n    Par exemple, &#171;&#160;Raisins&#160;&#187; et &#171;&#160;Raiins&#160;&#187; (&#171;&#160;s&#160;&#187; manquant) sont regroup&#233;es uniquement si cette option est d&#233;finie sur une valeur inf&#233;rieure &#224; 0,90.\r\n    Un seuil de 1,00 autorise uniquement les correspondances exactes.\rs\n   (Notez qu’une &#171;&#160;correspondance exacte&#160;&#187; approximative ignorera peut-&#234;tre des diff&#233;rences, telles que la casse, l’ordre des mots et la ponctuation).\r\n    La valeur par d&#233;faut est 0,80.</li>\r\n<li><code>TransformationTable</code> : Table qui permet de regrouper des enregistrements en fonction de mappages de valeurs personnalis&#233;s. Elle doit contenir des colonnes &#171;&#160;from&#160;&#187; et &#171;&#160;to&#160;&#187;. Par exemple, &#171;&#160;Grappes&#160;&#187; est regroup&#233; avec &#171;&#160;Raisins&#160;&#187; si une table de transformation est fournie avec la colonne &#171;&#160;from&#160;&#187; contenant &#171;&#160;Grappes&#160;&#187; et la colonne &#171;&#160;to&#160;&#187; contenant &#171;&#160;Raisins&#160;&#187;. Notez que la transformation est appliqu&#233;e &#224; toutes les occurrences du texte dans la table de transformation. Avec la table de transformation ci-dessus, &#171;&#160;Les grappes sont sucr&#233;es&#160;&#187; est &#233;galement regroup&#233; avec &#171;&#160;Les raisins sont sucr&#233;s&#160;&#187;.</li>\r\n</ul>\r\n\r\n</p>\r\n    "
  },
  "Table.AddFuzzyClusterColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.AddFuzzyClusterColumn_Documentation.Examples_0_Description": {
    "message": "Recherchez les valeurs représentatives correspondant à l’emplacement des employés."
  },
  "Table.AddFuzzyClusterColumn_Documentation.Examples_0_Code": {
    "message": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)"
  },
  "Table.AddFuzzyClusterColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
  },
  "Table.AddJoinColumn_Documentation.Name": {
    "message": "Table.AddJoinColumn"
  },
  "Table.AddJoinColumn_Documentation.Description": {
    "message": "Effectue une jointure entre des tables selon les colonnes fournies et produit le résultat de la jointure dans une nouvelle colonne."
  },
  "Table.AddJoinColumn_Documentation.LongDescription": {
    "message": "Joint les lignes de <code>table1</code> aux lignes de <code>table2</code> en fonction de l'égalité des valeurs des colonnes clés sélectionnées par <code>key1</code> (pour <code>table1</code>) et par <code>key2</code> (pour <code>table2</code>). Les résultats sont entrés dans la colonne nommée <code>newColumnName</code>.\r\nCette fonction se comporte de la même façon que Table.Join avec un JoinKind de LeftOuter, mais les résultats de la jointure sont présentés de façon imbriquée plutôt qu'aplatie."
  },
  "Table.AddJoinColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.AddJoinColumn_Documentation.Examples_0_Description": {
    "message": "Ajoute une colonne de jointure à ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) nommée « price/stock » depuis la table ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) jointe sur [saleID]."
  },
  "Table.AddJoinColumn_Documentation.Examples_0_Code": {
    "message": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)"
  },
  "Table.AddJoinColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
  },
  "Table.AddKey_Documentation.Name": {
    "message": "Table.AddKey"
  },
  "Table.AddKey_Documentation.Description": {
    "message": "Ajoute une clé à une table."
  },
  "Table.AddKey_Documentation.LongDescription": {
    "message": "Ajoute une clé à <code>table</code>, où <code>columns</code> est la liste des noms de colonne qui définissent la clé, et <code>isPrimary</code> spécifie si la clé est primaire."
  },
  "Table.AddKey_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.AddKey_Documentation.Examples_0_Description": {
    "message": "Ajouter une clé primaire à une seule colonne à une table."
  },
  "Table.AddKey_Documentation.Examples_0_Code": {
    "message": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable"
  },
  "Table.AddKey_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
  },
  "Table.AddRankColumn_Documentation.Name": {
    "message": "Table.AddRankColumn"
  },
  "Table.AddRankColumn_Documentation.Description": {
    "message": "Ajoute une colonne avec le classement d’une ou plusieurs autres colonnes."
  },
  "Table.AddRankColumn_Documentation.LongDescription": {
    "message": "Ajoute une colonne nommée <code>newColumnName</code> au <code>table</code> avec le classement d’une ou plusieurs autres colonnes décrites par <code>comparisonCriteria</code>.\r\nL’option RankKind <code>options</code> peut être utilisée par les utilisateurs avancés pour choisir une méthode de classement plus spécifique."
  },
  "Table.AddRankColumn_Documentation.Category": {
    "message": "Table.Ordering"
  },
  "Table.AddRankColumn_Documentation.Examples_0_Description": {
    "message": "Ajoutez une colonne nommée \"RevenueRank\" au tableau qui classe la colonne \"Revenu\" du plus élevé au plus bas."
  },
  "Table.AddRankColumn_Documentation.Examples_0_Code": {
    "message": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)"
  },
  "Table.AddRankColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
  },
  "Table.AggregateTableColumn_Documentation.Name": {
    "message": "Table.AggregateTableColumn"
  },
  "Table.AggregateTableColumn_Documentation.Description": {
    "message": "Regroupe une colonne de tables en plusieurs colonnes dans la table conteneur."
  },
  "Table.AggregateTableColumn_Documentation.LongDescription": {
    "message": "Regroupe les tables dans <code>table</code>[<code>column</code>] en plusieurs colonnes contenant les valeurs agrégées des tables. <code>aggregations</code> est utilisé pour spécifier les colonnes contenant les tables à agréger, les fonctions d'agrégation à appliquer aux tables pour générer leurs valeurs, et les noms des colonnes agrégées à créer."
  },
  "Table.AggregateTableColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.AggregateTableColumn_Documentation.Examples_0_Description": {
    "message": "Regroupe les colonnes des tables dans <code>[t]</code> dans la table <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> en la somme de <code>[t.a]</code>, le minimum et le maximum de <code>[t.b]</code>, et le nombre de valeurs dans <code>[t.a]</code>."
  },
  "Table.AggregateTableColumn_Documentation.Examples_0_Code": {
    "message": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)"
  },
  "Table.AggregateTableColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
  },
  "Table.AlternateRows_Documentation.Name": {
    "message": "Table.AlternateRows"
  },
  "Table.AlternateRows_Documentation.Description": {
    "message": "Conserve le décalage initial puis accepte et ignore de façon alternée les lignes suivantes."
  },
  "Table.AlternateRows_Documentation.LongDescription": {
    "message": "Conserve le décalage initial puis accepte et ignore de façon alternée les lignes suivantes.\r\n    <ul>\r\n       <li><code>table</code> : table d'entrée.</li>\r\n       <li><code>offset</code> : nombre de lignes à conserver avant de démarrer les itérations.</li>\r\n       <li><code>skip</code> : nombre de lignes à supprimer dans chaque itération.</li>\r\n       <li><code>take</code> : nombre de lignes à conserver dans chaque itération.</li>\r\n    </ul>\r\n    "
  },
  "Table.AlternateRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.AlternateRows_Documentation.Examples_0_Description": {
    "message": "Crée une table à partir de la table qui, en commençant par la première ligne, ignore 1 valeur, puis conserve 1 valeur."
  },
  "Table.AlternateRows_Documentation.Examples_0_Code": {
    "message": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)"
  },
  "Table.AlternateRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.CombineColumns_Documentation.Name": {
    "message": "Table.CombineColumns"
  },
  "Table.CombineColumns_Documentation.Description": {
    "message": "Associe les colonnes spécifiées dans une nouvelle colonne à l'aide de la fonction d'association spécifiée."
  },
  "Table.CombineColumns_Documentation.LongDescription": {
    "message": "Associe les colonnes spécifiées dans une nouvelle colonne à l'aide de la fonction d'association spécifiée."
  },
  "Table.CombineColumns_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.CombineColumns_Documentation.Examples_0_Description": {
    "message": "Combinez le nom et le prénom dans une nouvelle colonne, en les séparant par une virgule."
  },
  "Table.CombineColumns_Documentation.Examples_0_Code": {
    "message": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)"
  },
  "Table.CombineColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
  },
  "Table.CombineColumnsToRecord_Documentation.Name": {
    "message": "Table.CombineColumnsToRecord"
  },
  "Table.CombineColumnsToRecord_Documentation.Description": {
    "message": "Combine les colonnes spécifiées dans une nouvelle colonne d’enregistrements où chaque enregistrement a des noms de champs et des valeurs correspondant aux noms et aux valeurs des colonnes qui ont été combinées."
  },
  "Table.CombineColumnsToRecord_Documentation.LongDescription": {
    "message": "Combine les colonnes spécifiées de <code>table</code> dans une nouvelle colonne d’enregistrements nommée <code>newColumnName</code>, où chaque enregistrement a des noms de champs et des valeurs correspondant aux noms et valeurs des colonnes qui ont été combinées. Si un enregistrement est spécifié pour <code>options</code>, les options suivantes peuvent être fournies : \r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code> : quand spécifié en tant que texte, indique que le nom de colonne indiqué doit être considéré comme le nom d’affichage de l’enregistrement. Il ne doit pas s’agir de l’une des colonnes de l’enregistrement lui-même. </li>\r\n     <li> <code>TypeName</code> : quand spécifié en tant que texte, fournit un nom de type logique pour l’enregistrement résultant, qui peut être utilisé durant le chargement des données pour piloter le comportement de l’environnement de chargement. </li>\r\n    </ul>\r\n    "
  },
  "Table.CombineColumnsToRecord_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.DuplicateColumn_Documentation.Name": {
    "message": "Table.DuplicateColumn"
  },
  "Table.DuplicateColumn_Documentation.Description": {
    "message": "Duplique une colonne portant le nom spécifié. Les valeurs et le type sont copiés de la colonne source."
  },
  "Table.DuplicateColumn_Documentation.LongDescription": {
    "message": "Duplique la colonne nommée <code>columnName</code> sur la table <code>table</code>. Les valeurs et le type de la colonne <code>newColumnName</code> sont copiés de la colonne <code>columnName</code>."
  },
  "Table.DuplicateColumn_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.DuplicateColumn_Documentation.Examples_0_Description": {
    "message": "Duplique la colonne « a » sur une colonne nommée « colonne copiée » dans la table <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>."
  },
  "Table.DuplicateColumn_Documentation.Examples_0_Code": {
    "message": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)"
  },
  "Table.DuplicateColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
  },
  "Table.ExpandRecordColumn_Documentation.Name": {
    "message": "Table.ExpandRecordColumn"
  },
  "Table.ExpandRecordColumn_Documentation.Description": {
    "message": "Développe une colonne d'enregistrements dans des colonnes ayant chacune des valeurs."
  },
  "Table.ExpandRecordColumn_Documentation.LongDescription": {
    "message": "En fonction des enregistrements de <code>column</code> dans l'entrée <code>table</code>, crée une table avec une colonne pour chaque champ dans l'enregistrement. Au besoin, <code>newColumnNames</code> peut être spécifié pour garantir que des noms uniques pour les colonnes sont utilisés dans la nouvelle table.\r\n    <ul>\r\n        <li><code>table</code> : table d'origine avec la colonne des enregistrements à développer. </li>\r\n        <li><code>column</code> : colonne à développer.</li>\r\n        <li><code>fieldNames</code> : liste des champs à développer dans des colonnes dans la table.</li>\r\n        <li><code>newColumnNames</code> : liste des noms de colonne à attribuer aux nouvelles colonnes. Les noms des nouvelles colonnes ne peuvent pas dupliquer une colonne dans la nouvelle table.</li>\r\n    </ul>"
  },
  "Table.ExpandRecordColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.ExpandRecordColumn_Documentation.Examples_0_Description": {
    "message": "Développe la colonne [a] dans la table <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> en 3 colonnes « aa », « bb » et « cc »."
  },
  "Table.ExpandRecordColumn_Documentation.Examples_0_Code": {
    "message": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)"
  },
  "Table.ExpandRecordColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
  },
  "Table.ExpandTableColumn_Documentation.Name": {
    "message": "Table.ExpandTableColumn"
  },
  "Table.ExpandTableColumn_Documentation.Description": {
    "message": "Développe une colonne d'enregistrements ou une colonne de tables en plusieurs colonnes dans la table conteneur."
  },
  "Table.ExpandTableColumn_Documentation.LongDescription": {
    "message": "Développe les tables dans <code>table</code>[<code>column</code>] en plusieurs lignes et colonnes. <code>columnNames</code> est utilisé pour sélectionner les colonnes à développer à partir d'une table interne. Spécifie <code>newColumnNames</code> pour éviter les conflits entre des colonnes existantes et de nouvelles colonnes."
  },
  "Table.ExpandTableColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.ExpandTableColumn_Documentation.Examples_0_Description": {
    "message": "Développe les colonnes de la table dans <code>[a]</code> dans la table <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> en 3 colonnes <code>[t.a]</code>, <code>[t.b]</code> et <code>[t.c]</code>."
  },
  "Table.ExpandTableColumn_Documentation.Examples_0_Code": {
    "message": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)"
  },
  "Table.ExpandTableColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
  },
  "Table.FuzzyGroup_Documentation.Name": {
    "message": "Table.FuzzyGroup"
  },
  "Table.FuzzyGroup_Documentation.Description": {
    "message": "Regroupe les lignes de la table en fonction de la correspondance approximative des clés."
  },
  "Table.FuzzyGroup_Documentation.LongDescription": {
    "message": "Regroupe les lignes de <code>table</code> par valeurs de correspondance approximative dans la colonne spécifiée, <code>key</code>, pour chaque ligne.\r\n    Pour chaque groupe, un enregistrement est construit contenant les colonnes clés (et leurs valeurs), ainsi que les colonnes agrégées spécifiées par <code>aggregatedColumns</code>.\r\n    Cette fonction ne peut pas garantir le retour d’un ordre de lignes fixe.\r\n    <p>Un ensemble facultatif de <code>options</code> peut être inclus pour indiquer comment comparer les colonnes clés. Les options sont les suivantes : \r\n    <ul>\r\n<li><code>Culture</code> : Permet de regrouper des enregistrements en fonction de r&#232;gles propres &#224; la culture. Il peut s’agir d’un nom de culture valide. Par exemple, l’option de culture &#171;&#160;ja-JP&#160;&#187; regroupe les enregistrements bas&#233;s sur la culture japonaise. La valeur par d&#233;faut est &quot;&quot;, qui regroupe en fonction d’une culture anglaise dite indiff&#233;rente.</li>\r\n<li><code>IgnoreCase</code> : Valeur logique (true/false) qui autorise le regroupement de cl&#233;s ne respectant pas la casse. Par exemple, si la valeur est true, &#171;&#160;Raisins&#160;&#187; est group&#233; avec &#171;&#160;raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>IgnoreSpace</code> : Valeur logique (true/false) qui permet la combinaison de parties de texte afin de trouver des groupes. Par exemple, si la valeur est true, &#171;&#160;Rai sins&#160;&#187; est group&#233; avec &#171;&#160;Raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>SimilarityColumnName</code> : Nom de la colonne qui montre la similarit&#233; entre une valeur d’entr&#233;e et la valeur repr&#233;sentative de cette entr&#233;e. La valeur par d&#233;faut est null, auquel cas aucune nouvelle colonne pour les similitudes n’est ajout&#233;e.</li>\r\n<li><code>Threshold</code> : Nombre compris entre 0,00 et 1,00, qui sp&#233;cifie le score de similarit&#233; &#224; partir duquel deux valeurs sont regroup&#233;es.\r\n    Par exemple, &#171;&#160;Raisins&#160;&#187; et &#171;&#160;Raiins&#160;&#187; (&#171;&#160;s&#160;&#187; manquant) sont regroup&#233;es uniquement si cette option est d&#233;finie sur une valeur inf&#233;rieure &#224; 0,90.\r\n    Un seuil de 1,00 autorise uniquement les correspondances exactes.\rs\n   (Notez qu’une &#171;&#160;correspondance exacte&#160;&#187; approximative ignorera peut-&#234;tre des diff&#233;rences, telles que la casse, l’ordre des mots et la ponctuation).\r\n    La valeur par d&#233;faut est 0,80.</li>\r\n<li><code>TransformationTable</code> : Table qui permet de regrouper des enregistrements en fonction de mappages de valeurs personnalis&#233;s. Elle doit contenir des colonnes &#171;&#160;from&#160;&#187; et &#171;&#160;to&#160;&#187;. Par exemple, &#171;&#160;Grappes&#160;&#187; est regroup&#233; avec &#171;&#160;Raisins&#160;&#187; si une table de transformation est fournie avec la colonne &#171;&#160;from&#160;&#187; contenant &#171;&#160;Grappes&#160;&#187; et la colonne &#171;&#160;to&#160;&#187; contenant &#171;&#160;Raisins&#160;&#187;. Notez que la transformation est appliqu&#233;e &#224; toutes les occurrences du texte dans la table de transformation. Avec la table de transformation ci-dessus, &#171;&#160;Les grappes sont sucr&#233;es&#160;&#187; est &#233;galement regroup&#233; avec &#171;&#160;Les raisins sont sucr&#233;s&#160;&#187;.</li>\r\n</ul>\r\n\r\n</p>\r\n    "
  },
  "Table.FuzzyGroup_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.FuzzyGroup_Documentation.Examples_0_Description": {
    "message": "Regroupez la table en ajoutant une colonne d'agrégation [Count] qui contient le nombre d'employés dans chaque emplacement (\"each Table.RowCount(_))\")."
  },
  "Table.FuzzyGroup_Documentation.Examples_0_Code": {
    "message": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)"
  },
  "Table.FuzzyGroup_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
  },
  "Table.FuzzyJoin_Documentation.Name": {
    "message": "Table.FuzzyJoin"
  },
  "Table.FuzzyJoin_Documentation.Description": {
    "message": "Joint les lignes de deux tables qui correspondent approximativement en fonction des clés spécifiées."
  },
  "Table.FuzzyJoin_Documentation.LongDescription": {
    "message": "<p>Joint les lignes de <code>table1</code> aux lignes de <code>table2</code> en fonction de la correspondance approximative des valeurs des colonnes clés sélectionnées par <code>key1</code> (pour <code>table1</code>) et par <code>key2</code> (pour <code>table2</code>).</p>\r\n<p>La correspondance approximative est une comparaison basée sur la similarité du texte plutôt que sur l'égalité du texte.</p>\r\n<p>Par défaut, une jointure interne est effectuée, mais vous pouvez inclure une jointure <code>joinKind</code> facultative pour spécifier le type de jointure. Parmi les options, citons :\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Un ensemble facultatif de <code>joinOptions</code> peut être inclus pour spécifier comment comparer les colonnes clés. Parmi les options, citons :\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Nombre compris entre 1 et 8, qui sp&#233;cifie le nombre de threads parall&#232;les &#224; utiliser pour la correspondance approximative. La valeur par d&#233;faut est 1.</li>\r\n<li><code>Culture</code> : Permet la mise en correspondance des enregistrements en fonction de r&#232;gles propres &#224; la culture. Il peut s’agir d’un nom de culture valide. Par exemple, l’option de culture &#171;&#160;ja-JP&#160;&#187; met en correspondance les enregistrements bas&#233;s sur la culture japonaise. La valeur par d&#233;faut est &quot;&quot;, qui met en correspondance en fonction d’une culture anglaise dite indiff&#233;rente.</li>\r\n<li><code>IgnoreCase</code> : Valeur logique (true/false) qui autorise la correspondance de cl&#233;s qui ne respectent pas la casse. Par exemple, si la valeur est true, &#171;&#160;Raisins&#160;&#187; est mis en correspondance avec &#171;&#160;raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>IgnoreSpace</code> : Valeur logique (true/false) qui permet la combinaison de parties de texte afin de trouver des correspondances. Par exemple, si la valeur est true, &#171;&#160;Rai sins&#160;&#187; correspond &#224; &#171;&#160;Raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>NumberOfMatches</code> : Nombre entier qui sp&#233;cifie le nombre maximal de lignes correspondantes qui peuvent &#234;tre retourn&#233;es pour chaque ligne d’entr&#233;e. Par exemple, la valeur 1 retourne au plus une ligne correspondante pour chaque ligne d’entr&#233;e. Si cette option n’est pas sp&#233;cifi&#233;e, toutes les lignes correspondantes sont retourn&#233;es.</li>\r\n<li><code>SimilarityColumnName</code> : Nom de la colonne qui montre la similarit&#233; entre une valeur d’entr&#233;e et la valeur repr&#233;sentative de cette entr&#233;e. La valeur par d&#233;faut est null, auquel cas aucune nouvelle colonne pour les similitudes n’est ajout&#233;e.</li>\r\n<li><code>Threshold</code> : Nombre compris entre 0,00 et 1,00, qui sp&#233;cifie le score de similarit&#233; &#224; partir duquel deux valeurs sont mises en correspondance.\rRaisins\n    Par exemple, &#171;&#160;Raisins&#160;&#187; et &#171;&#160;Raiins&#160;&#187; (&#171;&#160;s&#160;&#187; manquant) correspondent uniquement si cette option est d&#233;finie sur une valeur inf&#233;rieure &#224; 0,90.\r\n    Un seuil de 1,00 autorise uniquement les correspondances exactes.\rs\n   (Notez qu’une &#171;&#160;correspondance exacte&#160;&#187; approximative ignorera peut-&#234;tre des diff&#233;rences, telles que la casse, l’ordre des mots et la ponctuation).\r\n    La valeur par d&#233;faut est 0,80.</li>\r\n<li><code>TransformationTable</code> : Table qui permet de mettre en correspondance des enregistrements en fonction de mappages de valeurs personnalis&#233;s. Elle doit contenir des colonnes &#171;&#160;from&#160;&#187; et &#171;&#160;to&#160;&#187;. Par exemple, &#171;&#160;Grappes&#160;&#187; est mis en correspondance avec &#171;&#160;Raisins&#160;&#187; si une table de transformation est fournie avec la colonne &#171;&#160;from&#160;&#187; contenant &#171;&#160;Grappes&#160;&#187; et la colonne &#171;&#160;to&#160;&#187; contenant &#171;&#160;Raisins&#160;&#187;. Notez que la transformation est appliqu&#233;e &#224; toutes les occurrences du texte dans la table de transformation. Avec la table de transformation ci-dessus, &#171;&#160;Les grappes sont sucr&#233;es&#160;&#187; est &#233;galement mis en correspondance avec &#171;&#160;Les raisins sont sucr&#233;s&#160;&#187;.</li>\r\n</ul>\r\n\r\n</p>\r\n"
  },
  "Table.FuzzyJoin_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.FuzzyJoin_Documentation.Examples_0_Description": {
    "message": "Jointure approximative interne gauche de deux tables basées sur [FirstName]"
  },
  "Table.FuzzyJoin_Documentation.Examples_0_Code": {
    "message": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)"
  },
  "Table.FuzzyJoin_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
  },
  "Table.FuzzyNestedJoin_Documentation.Name": {
    "message": "Table.FuzzyNestedJoin"
  },
  "Table.FuzzyNestedJoin_Documentation.Description": {
    "message": "Effectue une jointure approximative entre des tables selon les colonnes fournies et produit le résultat de la jointure dans une nouvelle colonne."
  },
  "Table.FuzzyNestedJoin_Documentation.LongDescription": {
    "message": "<p>Joint les lignes de <code>table1</code> aux lignes de <code>table2</code> en fonction d'une correspondance approximative des valeurs des colonnes clés sélectionnées par <code>key1</code> (pour <code>table1</code>) et par <code>key2</code> (pour <code>table2</code>). Les résultats sont retournés dans une nouvelle colonne nommée <code>newColumnName</code>.</p>\r\n<p>La correspondance approximative est une comparaison basée sur la similarité du texte plutôt que sur l'équité du texte.</p>\r\n<p>La jointure <code>joinKind</code> facultative spécifie le genre de jointure à effectuer. Par défaut, une jointure externe gauche est effectuée si une jointure <code>joinKind</code> n'est pas spécifiée. Parmi les options, citons :\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Un ensemble facultatif de <code>joinOptions</code> peut être inclus pour spécifier comment comparer les colonnes clés. Parmi les options, citons :\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Nombre compris entre 1 et 8, qui sp&#233;cifie le nombre de threads parall&#232;les &#224; utiliser pour la correspondance approximative. La valeur par d&#233;faut est 1.</li>\r\n<li><code>Culture</code> : Permet la mise en correspondance des enregistrements en fonction de r&#232;gles propres &#224; la culture. Il peut s’agir d’un nom de culture valide. Par exemple, l’option de culture &#171;&#160;ja-JP&#160;&#187; met en correspondance les enregistrements bas&#233;s sur la culture japonaise. La valeur par d&#233;faut est &quot;&quot;, qui met en correspondance en fonction d’une culture anglaise dite indiff&#233;rente.</li>\r\n<li><code>IgnoreCase</code> : Valeur logique (true/false) qui autorise la correspondance de cl&#233;s qui ne respectent pas la casse. Par exemple, si la valeur est true, &#171;&#160;Raisins&#160;&#187; est mis en correspondance avec &#171;&#160;raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>IgnoreSpace</code> : Valeur logique (true/false) qui permet la combinaison de parties de texte afin de trouver des correspondances. Par exemple, si la valeur est true, &#171;&#160;Rai sins&#160;&#187; correspond &#224; &#171;&#160;Raisins&#160;&#187;. La valeur par d&#233;faut est true.</li>\r\n<li><code>NumberOfMatches</code> : Nombre entier qui sp&#233;cifie le nombre maximal de lignes correspondantes qui peuvent &#234;tre retourn&#233;es pour chaque ligne d’entr&#233;e. Par exemple, la valeur 1 retourne au plus une ligne correspondante pour chaque ligne d’entr&#233;e. Si cette option n’est pas sp&#233;cifi&#233;e, toutes les lignes correspondantes sont retourn&#233;es.</li>\r\n<li><code>SimilarityColumnName</code> : Nom de la colonne qui montre la similarit&#233; entre une valeur d’entr&#233;e et la valeur repr&#233;sentative de cette entr&#233;e. La valeur par d&#233;faut est null, auquel cas aucune nouvelle colonne pour les similitudes n’est ajout&#233;e.</li>\r\n<li><code>Threshold</code> : Nombre compris entre 0,00 et 1,00, qui sp&#233;cifie le score de similarit&#233; &#224; partir duquel deux valeurs sont mises en correspondance.\rRaisins\n    Par exemple, &#171;&#160;Raisins&#160;&#187; et &#171;&#160;Raiins&#160;&#187; (&#171;&#160;s&#160;&#187; manquant) correspondent uniquement si cette option est d&#233;finie sur une valeur inf&#233;rieure &#224; 0,90.\r\n    Un seuil de 1,00 autorise uniquement les correspondances exactes.\rs\n   (Notez qu’une &#171;&#160;correspondance exacte&#160;&#187; approximative ignorera peut-&#234;tre des diff&#233;rences, telles que la casse, l’ordre des mots et la ponctuation).\r\n    La valeur par d&#233;faut est 0,80.</li>\r\n<li><code>TransformationTable</code> : Table qui permet de mettre en correspondance des enregistrements en fonction de mappages de valeurs personnalis&#233;s. Elle doit contenir des colonnes &#171;&#160;from&#160;&#187; et &#171;&#160;to&#160;&#187;. Par exemple, &#171;&#160;Grappes&#160;&#187; est mis en correspondance avec &#171;&#160;Raisins&#160;&#187; si une table de transformation est fournie avec la colonne &#171;&#160;from&#160;&#187; contenant &#171;&#160;Grappes&#160;&#187; et la colonne &#171;&#160;to&#160;&#187; contenant &#171;&#160;Raisins&#160;&#187;. Notez que la transformation est appliqu&#233;e &#224; toutes les occurrences du texte dans la table de transformation. Avec la table de transformation ci-dessus, &#171;&#160;Les grappes sont sucr&#233;es&#160;&#187; est &#233;galement mis en correspondance avec &#171;&#160;Les raisins sont sucr&#233;s&#160;&#187;.</li>\r\n</ul>\r\n\r\n</p>\r\n"
  },
  "Table.FuzzyNestedJoin_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.FuzzyNestedJoin_Documentation.Examples_0_Description": {
    "message": "Jointure approximative interne gauche de deux tables basées sur [FirstName]"
  },
  "Table.FuzzyNestedJoin_Documentation.Examples_0_Code": {
    "message": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)"
  },
  "Table.FuzzyNestedJoin_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
  },
  "Table.Group_Documentation.Name": {
    "message": "Table.Group"
  },
  "Table.Group_Documentation.Description": {
    "message": "Regroupe les lignes de la table qui ont la même clé."
  },
  "Table.Group_Documentation.LongDescription": {
    "message": "Regroupe les lignes de <code>table</code> par les colonnes clés définies par <code>key</code>. Le <code>key</code> peut être un nom de colonne unique ou une liste de noms de colonnes.\r\n    Pour chaque groupe, un enregistrement est créé à partir des colonnes clés (et de leurs valeurs), ainsi que de toute colonne agrégée spécifiée par <code>aggregatedColumns</code>.\r\n    Vous pouvez également spécifier <code>groupKind</code> et <code>comparer</code>.<br>\r\n    <br>\r\n    Si les données sont déjà triées en fonction des colonnes clés, un <code>groupKind</code> de GroupKind.Local peut être fourni. Cela peut améliorer les performances du regroupement dans certains cas,\r\n    comme toutes les lignes avec un ensemble de valeurs de clés donné sont supposées être contiguës.<br>\r\n    <br>\r\n    Lors de la transmission d’un <code>comparer</code>, notez que s’il traite des clés différentes comme étant égales, une ligne peut être placée dans un groupe dont les clés diffèrent.<br>\r\n    <br>\r\n    Cette fonction ne garantit pas l’ordre des lignes qu’elle retourne.\r\n  "
  },
  "Table.Group_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.Group_Documentation.Examples_0_Description": {
    "message": "Regroupe la table, en ajoutant une colonne d'agrégation [total] qui contient la somme des prix (\"each List.Sum([price])\")."
  },
  "Table.Group_Documentation.Examples_0_Code": {
    "message": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)"
  },
  "Table.Group_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
  },
  "Table.InsertRows_Documentation.Name": {
    "message": "Table.InsertRows"
  },
  "Table.InsertRows_Documentation.Description": {
    "message": "Insère une liste de lignes dans la table à la position spécifiée."
  },
  "Table.InsertRows_Documentation.LongDescription": {
    "message": "Retourne une table avec la liste des lignes <code>rows</code> insérées dans <code>table</code> à la position spécifiée <code>offset</code>. Chaque colonne dans la ligne à insérer doit correspondre aux types des colonnes de la table."
  },
  "Table.InsertRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.InsertRows_Documentation.Examples_0_Description": {
    "message": "Insère la ligne dans la table à la position 1."
  },
  "Table.InsertRows_Documentation.Examples_0_Code": {
    "message": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)"
  },
  "Table.InsertRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
  },
  "Table.InsertRows_Documentation.Examples_1_Description": {
    "message": "Insère deux lignes dans la table à la position 1."
  },
  "Table.InsertRows_Documentation.Examples_1_Code": {
    "message": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)"
  },
  "Table.InsertRows_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
  },
  "Table.Join_Documentation.Name": {
    "message": "Table.Join"
  },
  "Table.Join_Documentation.Description": {
    "message": "Joint les lignes de deux tables qui correspondent en fonction des clés spécifiées."
  },
  "Table.Join_Documentation.LongDescription": {
    "message": "<p>Joint les lignes de <code>table1</code> aux lignes de <code>table2</code> en fonction de l'égalité des valeurs des colonnes clés sélectionnées par <code>key1</code> (pour <code>table1</code>) et par <code>key2</code> (pour <code>table2</code>).</p>\r\n<p>Par défaut, une jointure interne est effectuée, mais vous pouvez inclure un <code>joinKind</code> facultatif pour spécifier le type de jointure. Les options sont les suivantes :\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Vous pouvez inclure un ensemble facultatif de <code>keyEqualityComparers</code> pour spécifier comment comparer les colonnes clés. Ce paramètre est actuellement réservé à une utilisation interne.</p>"
  },
  "Table.Join_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.Join_Documentation.Examples_0_Description": {
    "message": "Joignez deux tables à l’aide d’une seule colonne clé."
  },
  "Table.Join_Documentation.Examples_0_Code": {
    "message": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)"
  },
  "Table.Join_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
  },
  "Table.Join_Documentation.Examples_1_Description": {
    "message": "Joignez deux tables qui ont des noms de colonnes en conflit à l’aide de plusieurs colonnes clés."
  },
  "Table.Join_Documentation.Examples_1_Code": {
    "message": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )"
  },
  "Table.Join_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
  },
  "Table.MaxN_Documentation.Name": {
    "message": "Table.MaxN"
  },
  "Table.MaxN_Documentation.Description": {
    "message": "Retourne les plus grandes lignes à l'aide des critères fournis."
  },
  "Table.MaxN_Documentation.LongDescription": {
    "message": "Retourne les plus grandes lignes dans <code>table</code> en fonction de <code>comparisonCriteria</code>.\r\n    Une fois que les lignes sont triées, le paramètre <code>countOrCondition</code> doit être spécifié pour filtrer davantage le résultat. Notez que l'algorithme de tri ne peut pas garantir un résultat de tri fixe. Le paramètre <code>countOrCondition</code> peut prendre plusieurs formes :\r\n    <ul>\r\n        <li> Si un nombre est spécifié, une liste de <code>countOrCondition</code> éléments au maximum par ordre croissant est retournée. </li>\r\n        <li> Si une condition est spécifiée, la liste des éléments qui satisfont initialement la condition est retournée. Quand un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. </li>\r\n </ul>"
  },
  "Table.MaxN_Documentation.Category": {
    "message": "Table.Ordering"
  },
  "Table.MaxN_Documentation.Examples_0_Description": {
    "message": "Recherche dans la table la ligne avec la valeur la plus grande dans la colonne [a] avec la condition [a] > 0. Les lignes sont triées avant que le filtre soit appliqué."
  },
  "Table.MaxN_Documentation.Examples_0_Code": {
    "message": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)"
  },
  "Table.MaxN_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
  },
  "Table.MaxN_Documentation.Examples_1_Description": {
    "message": "Recherche dans la table la ligne avec la plus grande valeur dans la colonne [a] avec la condition [b] > 0. Les lignes sont triées avant que le filtre soit appliqué."
  },
  "Table.MaxN_Documentation.Examples_1_Code": {
    "message": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)"
  },
  "Table.MaxN_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({})"
  },
  "Table.MinN_Documentation.Name": {
    "message": "Table.MinN"
  },
  "Table.MinN_Documentation.Description": {
    "message": "Retourne les plus petites lignes à l'aide des critères fournis."
  },
  "Table.MinN_Documentation.LongDescription": {
    "message": "Retourne les plus petites lignes dans <code>table</code> en fonction de <code>comparisonCriteria</code>. Une fois que les lignes sont triées, le paramètre <code>countOrCondition</code> doit être spécifié pour filtrer davantage le résultat. Notez que l'algorithme de tri ne peut pas garantir un résultat de tri fixe. Le paramètre <code>countOrCondition</code> peut prendre plusieurs formes :\r\n    <ul>\r\n        <li> Si un nombre est spécifié, une liste de <code>countOrCondition</code> éléments au maximum par ordre croissant est retournée. </li>\r\n        <li> Si une condition est spécifiée, la liste des éléments qui satisfont initialement la condition est retournée. Quand un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. </li>\r\n </ul>"
  },
  "Table.MinN_Documentation.Category": {
    "message": "Table.Ordering"
  },
  "Table.MinN_Documentation.Examples_0_Description": {
    "message": "Recherche dans la table la ligne avec la valeur la plus petite dans la colonne [a] avec la condition [a] < 3. Les lignes sont triées avant que le filtre soit appliqué."
  },
  "Table.MinN_Documentation.Examples_0_Code": {
    "message": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)"
  },
  "Table.MinN_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
  },
  "Table.MinN_Documentation.Examples_1_Description": {
    "message": "Recherche dans la table la ligne avec la valeur la plus petite dans la colonne [a] avec la condition [b] < 0. Les lignes sont triées avant que le filtre soit appliqué."
  },
  "Table.MinN_Documentation.Examples_1_Code": {
    "message": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)"
  },
  "Table.MinN_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({})"
  },
  "Table.NestedJoin_Documentation.Name": {
    "message": "Table.NestedJoin"
  },
  "Table.NestedJoin_Documentation.Description": {
    "message": "Effectue une jointure entre des tables selon les colonnes fournies et produit le résultat de la jointure dans une nouvelle colonne."
  },
  "Table.NestedJoin_Documentation.LongDescription": {
    "message": "<p>Joint les lignes de <code>table1</code> aux lignes de <code>table2</code> en fonction de l'égalité des valeurs des colonnes clés sélectionnées par <code>key1</code> (pour <code>table1</code>) et par <code>key2</code> (pour <code>table2</code>). Les résultats sont entrés dans la colonne nommée <code>newColumnName</code>.</p>\r\n<p>La valeur facultative <code>joinKind</code> spécifie le type de jointure à effectuer. Par défaut, une jointure extérieure gauche est effectuée si un <code>joinKind</code> n'est pas spécifié.</p>\r\n<p>Un ensemble facultatif de <code>keyEqualityComparers</code> peut être inclus pour spécifier comment comparer les colonnes clés. Cette fonctionnalité est actuellement réservée à une utilisation interne.</p>  "
  },
  "Table.NestedJoin_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.NestedJoin_Documentation.Examples_0_Description": {
    "message": "Joignez deux tables à l’aide d’une seule colonne clé."
  },
  "Table.NestedJoin_Documentation.Examples_0_Code": {
    "message": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)"
  },
  "Table.NestedJoin_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
  },
  "Table.Pivot_Documentation.Name": {
    "message": "Table.Pivot"
  },
  "Table.Pivot_Documentation.Description": {
    "message": "En fonction d'une paire de colonnes représentant des paires attribut-valeur, fait pivoter les données de la colonne d'attribut dans les en-têtes de colonne."
  },
  "Table.Pivot_Documentation.LongDescription": {
    "message": "En fonction d'une paire de colonnes représentant des paires attribut-valeur, fait pivoter les données de la colonne d'attribut dans les en-têtes de colonne."
  },
  "Table.Pivot_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.Pivot_Documentation.Examples_0_Description": {
    "message": "Prend les valeurs « a », « b » et « c » dans la colonne d'attribut de la table <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> et les fait pivoter dans leur propre colonne."
  },
  "Table.Pivot_Documentation.Examples_0_Code": {
    "message": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)"
  },
  "Table.Pivot_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
  },
  "Table.Pivot_Documentation.Examples_1_Description": {
    "message": "Prend les valeurs « a », « b » et « c » dans la colonne d'attribut de la table <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> et les fait pivoter dans leur propre colonne.  L'attribut « c » pour la clé « x » a plusieurs valeurs qui lui sont associées, utilisez par conséquent la fonction List.Max pour résoudre le conflit."
  },
  "Table.Pivot_Documentation.Examples_1_Code": {
    "message": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)"
  },
  "Table.Pivot_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
  },
  "Table.ReplaceRows_Documentation.Name": {
    "message": "Table.ReplaceRows"
  },
  "Table.ReplaceRows_Documentation.Description": {
    "message": "Remplace la plage de lignes spécifiée par les lignes fournies."
  },
  "Table.ReplaceRows_Documentation.LongDescription": {
    "message": "Remplace le nombre de lignes spécifié, <code>count</code>, dans l'entrée <code>table</code> avec le <code>rows</code> spécifié, démarrant après <code>offset</code>. Le paramètre <code>rows</code> est une liste d'enregistrements.\r\n    <ul>\r\n       <li><code>table</code> : table où le remplacement est effectué.</li>\r\n       <li><code>offset</code> : nombre de lignes à ignorer avant d'effectuer le remplacement.</li>\r\n       <li><code>count</code> : nombre de lignes à remplacer.</li>\r\n       <li><code>rows</code> : liste des enregistrements de ligne à insérer dans <code>table</code> à l'emplacement spécifié par <code>offset</code>.</li>\r\n    </ul>\r\n"
  },
  "Table.ReplaceRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.ReplaceRows_Documentation.Examples_0_Description": {
    "message": "En commençant à la position 1, remplace 3 lignes."
  },
  "Table.ReplaceRows_Documentation.Examples_0_Code": {
    "message": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)"
  },
  "Table.ReplaceRows_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
  },
  "Table.ReplaceValue_Documentation.Name": {
    "message": "Table.ReplaceValue"
  },
  "Table.ReplaceValue_Documentation.Description": {
    "message": "Remplace une valeur dans les colonnes spécifiées par une autre."
  },
  "Table.ReplaceValue_Documentation.LongDescription": {
    "message": "Remplace <code>oldValue</code> par <code>newValue</code> dans les colonnes spécifiées de <code>table</code>."
  },
  "Table.ReplaceValue_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.ReplaceValue_Documentation.Examples_0_Description": {
    "message": "Remplacez le texte « au revoir » par « monde » dans la colonne B, correspondant uniquement à la valeur entière."
  },
  "Table.ReplaceValue_Documentation.Examples_0_Code": {
    "message": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)"
  },
  "Table.ReplaceValue_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
  },
  "Table.ReplaceValue_Documentation.Examples_1_Description": {
    "message": "Remplacez le texte « votre » par « ou » dans la colonne B, correspondant à n’importe quelle partie de la valeur."
  },
  "Table.ReplaceValue_Documentation.Examples_1_Code": {
    "message": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)"
  },
  "Table.ReplaceValue_Documentation.Examples_1_Result": {
    "message": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
  },
  "Table.ReplaceValue_Documentation.Examples_2_Description": {
    "message": "Rendez anonymes les noms des employés des États-Unis."
  },
  "Table.ReplaceValue_Documentation.Examples_2_Code": {
    "message": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)"
  },
  "Table.ReplaceValue_Documentation.Examples_2_Result": {
    "message": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
  },
  "Table.ReplaceValue_Documentation.Examples_3_Description": {
    "message": "Rendez anonymes toutes les colonnes des employés des États-Unis."
  },
  "Table.ReplaceValue_Documentation.Examples_3_Code": {
    "message": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)"
  },
  "Table.ReplaceValue_Documentation.Examples_3_Result": {
    "message": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
  },
  "Table.SplitColumn_Documentation.Name": {
    "message": "Table.SplitColumn"
  },
  "Table.SplitColumn_Documentation.Description": {
    "message": "Fractionne les colonnes spécifiées dans un ensemble de colonnes supplémentaires à l'aide de la fonction de fractionnement spécifiée."
  },
  "Table.SplitColumn_Documentation.LongDescription": {
    "message": "Fractionne les colonnes spécifiées dans un ensemble de colonnes supplémentaires à l'aide de la fonction de fractionnement spécifiée."
  },
  "Table.SplitColumn_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.SplitColumn_Documentation.Examples_0_Description": {
    "message": "Fractionner la colonne [Name] à la position de « i » en deux colonnes"
  },
  "Table.SplitColumn_Documentation.Examples_0_Code": {
    "message": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)"
  },
  "Table.SplitColumn_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
  },
  "Table.Unpivot_Documentation.Name": {
    "message": "Table.Unpivot"
  },
  "Table.Unpivot_Documentation.Description": {
    "message": "Traduit un ensemble de colonnes dans une table en paires attribut-valeur."
  },
  "Table.Unpivot_Documentation.LongDescription": {
    "message": "Traduit un ensemble de colonnes dans une table en paires attribut-valeur, associées au reste des valeurs dans chaque ligne."
  },
  "Table.Unpivot_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.Unpivot_Documentation.Examples_0_Description": {
    "message": "Prend les colonnes « a », « b » et « c » dans la table <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> et annule le basculement en paires d'attribut-valeur."
  },
  "Table.Unpivot_Documentation.Examples_0_Code": {
    "message": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)"
  },
  "Table.Unpivot_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
  },
  "Table.UnpivotOtherColumns_Documentation.Name": {
    "message": "Table.UnpivotOtherColumns"
  },
  "Table.UnpivotOtherColumns_Documentation.Description": {
    "message": "Convertit toutes les colonnes autres qu'un jeu spécifié en paires attribut-valeur."
  },
  "Table.UnpivotOtherColumns_Documentation.LongDescription": {
    "message": "Convertit toutes les colonnes autres qu'un jeu spécifié en paires attribut-valeur, associées aux autres valeurs de chaque ligne."
  },
  "Table.UnpivotOtherColumns_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.UnpivotOtherColumns_Documentation.Examples_0_Description": {
    "message": "Convertit toutes les colonnes autres qu'un jeu spécifié en paires attribut-valeur, associées aux autres valeurs de chaque ligne."
  },
  "Table.UnpivotOtherColumns_Documentation.Examples_0_Code": {
    "message": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)"
  },
  "Table.UnpivotOtherColumns_Documentation.Examples_0_Result": {
    "message": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
  },
  "TeamsAnalytics.Contents_Documentation.Name": {
    "message": "Microsoft Teams Personal Analytics"
  },
  "TeamsAnalytics.Contents_Documentation.LongDescription": {
    "message": "<p>Le connecteur Teams Analytics vous permet d’obtenir des insights sur votre utilisation de Teams. Les données sont disponibles à la fois pour votre activité personnelle dans Teams et pour l’activité des équipes dont vous êtes membre.</p>\r\n<p>Les données sont disponibles pour les 90 derniers jours. </p>\r\n<p> Pour plus d’informations sur les types de données disponibles, consultez la documentation d’aide suivante : </p>\r\n<ul>\r\n<li><b>Utilisation de Teams :</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Activité des utilisateurs de Teams :</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
  },
  "Tenforce.Contents_Documentation.Name": {
    "message": "Tenforce (Smart)List"
  },
  "Tenforce.Contents_Documentation.LongDescription": {
    "message": "Selection data"
  },
  "VSTS.Views_Documentation.Description": {
    "message": "Entrez les noms de l'organisation et du projet."
  },
  "VSTS.Views_Documentation.DisplayName": {
    "message": "VSTS.Views"
  },
  "VSTS.Views_Documentation.Caption": {
    "message": "VSTS.Views"
  },
  "VSTS.Views_Documentation.Name": {
    "message": "Azure DevOps Services"
  },
  "VSTS.Views_Documentation.LongDescription": {
    "message": "Retourne une table de flux OData offerts par Azure DevOps."
  },
  "WebtrendsAnalytics.Tables_Documentation.Description": {
    "message": "Enter the Profile ID associated with your Webtrends account."
  },
  "WebtrendsAnalytics.Tables_Documentation.DisplayName": {
    "message": "Webtrends"
  },
  "WebtrendsAnalytics.Tables_Documentation.Caption": {
    "message": "Tables"
  },
  "WebtrendsAnalytics.Tables_Documentation.Name": {
    "message": "Webtrends Analytics"
  },
  "WebtrendsAnalytics.Tables_Documentation.LongDescription": {
    "message": "Returns a table with relevant Webtrends data."
  },
  "Wrike.Contents_Documentation.Name": {
    "message": "Wrike"
  },
  "Wrike.Contents_Documentation.LongDescription": {
    "message": " Shared function and first entry point to Connector. Display initial Navigation hierarchy."
  },
  "BinaryFormat.Binary_Documentation.Name": {
    "message": "BinaryFormat.Binary"
  },
  "BinaryFormat.Binary_Documentation.Description": {
    "message": "Retourne un format binaire qui lit une valeur binaire."
  },
  "BinaryFormat.Binary_Documentation.LongDescription": {
    "message": "Retourne un format binaire qui lit une valeur binaire.  Si <code>length</code> est spécifié, la valeur binaire contiendra autant d'octets.  Si <code>length</code> n'est pas spécifié, la valeur binaire contiendra les octets restants.  <code>length</code> peut être spécifié sous la forme d'un nombre, ou d'un format binaire de la longueur qui précède les données binaires."
  },
  "BinaryFormat.Binary_Documentation.Category": {
    "message": "Binary Formats.Reading binary data"
  },
  "Comparer.Equals_Documentation.Name": {
    "message": "Comparer.Equals"
  },
  "Comparer.Equals_Documentation.Description": {
    "message": "Retourne une valeur logique en fonction de l'égalité entre les deux valeurs données."
  },
  "Comparer.Equals_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>logical</code> basée sur la vérification de l’égalité sur les deux valeurs données, <code>x</code> et <code>y</code>, à l’aide du fourni<code>comparer</code>.\r\n      <div>\r\n        <code>comparer</code> est un <code>Comparer</code> utilisé pour contrôler la comparaison.\r\n Un comparateur est une fonction qui accepte deux arguments et retourne -1, 0 ou 1 selon que la première valeur est inférieure ou égale à,  ou supérieur à la seconde. \r\n       Les comparateurs peuvent être utilisés pour fournir des comparaisons qui ne respectent pas la casse ou la culture et les paramètres régionaux.\r\n      </div>\r\n      <div>\r\n        Les comparateurs intégrés suivants sont disponibles dans le langage de formule :\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code> :  Utilisé pour effectuer une comparaison ordinale exacte</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code> : utilisé pour effectuer une comparaison ordinale exacte non sensible à la casse</li>\r\n        <li> <code>Comparer.FromCulture</code> : permet d’effectuer une comparaison dépendante de la culture</li>\r\n      </ul>"
  },
  "Comparer.Equals_Documentation.Category": {
    "message": "Comparer"
  },
  "Comparer.Equals_Documentation.Examples_0_Description": {
    "message": "Comparez \"1\" et \"A\" en utilisant le paramètre régional \"en-US\" pour déterminer si les valeurs sont égales."
  },
  "Comparer.Equals_Documentation.Examples_0_Code": {
    "message": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")"
  },
  "Comparer.Equals_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "DateTime.FixedLocalNow_Documentation.Name": {
    "message": "DateTime.FixedLocalNow"
  },
  "DateTime.FixedLocalNow_Documentation.Description": {
    "message": "Retourne la date et l'heure actuelles dans le fuseau horaire local. Cette valeur est fixe et ne change pas lors des appels successifs."
  },
  "DateTime.FixedLocalNow_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>datetime</code> définie selon la date et l'heure actuelles du système. Cette valeur est fixe et ne change pas lors des appels successifs, contrairement à DateTime.LocalNow, qui peut retourner des valeurs différentes au cours de l'exécution d'une expression."
  },
  "DateTime.FixedLocalNow_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.LocalNow_Documentation.Name": {
    "message": "DateTime.LocalNow"
  },
  "DateTime.LocalNow_Documentation.Description": {
    "message": "Retourne la date et l'heure actuelles dans le fuseau horaire local."
  },
  "DateTime.LocalNow_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>datetime</code> définie selon la date et l'heure actuelles du système."
  },
  "DateTime.LocalNow_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTimeZone.FixedLocalNow_Documentation.Name": {
    "message": "DateTimeZone.FixedLocalNow"
  },
  "DateTimeZone.FixedLocalNow_Documentation.Description": {
    "message": "Retourne la date et l'heure actuelles dans le fuseau horaire local. Cette valeur est fixe et ne change pas lors des appels successifs."
  },
  "DateTimeZone.FixedLocalNow_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>datetime</code> définie selon la date et l'heure actuelles du système. La valeur retournée contient les informations de fuseau horaire qui représentent le fuseau horaire local. Cette valeur est fixe et ne change pas lors des appels successifs, contrairement à DateTimeZone.LocalNow, qui peut retourner des valeurs différentes au cours de l'exécution d'une expression."
  },
  "DateTimeZone.FixedLocalNow_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.FixedUtcNow_Documentation.Name": {
    "message": "DateTimeZone.FixedUtcNow"
  },
  "DateTimeZone.FixedUtcNow_Documentation.Description": {
    "message": "Retourne la date et l'heure actuelles en UTC (fuseau horaire GMT). Cette valeur est fixe et ne change pas lors des appels successifs."
  },
  "DateTimeZone.FixedUtcNow_Documentation.LongDescription": {
    "message": "Retourne la date et l'heure actuelles en UTC (fuseau horaire GMT). Cette valeur est fixe et ne change pas lors des appels successifs."
  },
  "DateTimeZone.FixedUtcNow_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.LocalNow_Documentation.Name": {
    "message": "DateTimeZone.LocalNow"
  },
  "DateTimeZone.LocalNow_Documentation.Description": {
    "message": "Retourne la date et l'heure actuelles dans le fuseau horaire local."
  },
  "DateTimeZone.LocalNow_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>datetimezone</code> définie selon la date et l'heure actuelles du système.\r\n    La valeur retournée contient les informations de fuseau horaire qui représentent le fuseau horaire local."
  },
  "DateTimeZone.LocalNow_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.UtcNow_Documentation.Name": {
    "message": "DateTimeZone.UtcNow"
  },
  "DateTimeZone.UtcNow_Documentation.Description": {
    "message": "Retourne la date et l'heure actuelles en UTC (fuseau horaire GMT)."
  },
  "DateTimeZone.UtcNow_Documentation.LongDescription": {
    "message": "Retourne la date et l'heure actuelles en UTC (fuseau horaire GMT)."
  },
  "DateTimeZone.UtcNow_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.UtcNow_Documentation.Examples_0_Description": {
    "message": "Obtenez la date et l'heure actuelles en UTC."
  },
  "DateTimeZone.UtcNow_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.UtcNow()"
  },
  "DateTimeZone.UtcNow_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
  },
  "Diagnostics.ActivityId_Documentation.Name": {
    "message": "Diagnostics.ActivityId"
  },
  "Diagnostics.ActivityId_Documentation.Description": {
    "message": "Retourne un identificateur opaque pour l'évaluation en cours d'exécution."
  },
  "Diagnostics.ActivityId_Documentation.LongDescription": {
    "message": "Retourne un identificateur opaque pour l'évaluation en cours d'exécution."
  },
  "Diagnostics.ActivityId_Documentation.Category": {
    "message": "Diagnostics"
  },
  "Diagnostics.Trace_Documentation.Name": {
    "message": "Diagnostics.Trace"
  },
  "Diagnostics.Trace_Documentation.Description": {
    "message": "Écrit une entrée de trace, si le traçage est activé, puis retourne la valeur."
  },
  "Diagnostics.Trace_Documentation.LongDescription": {
    "message": "Écrit une trace <code>message</code>, si le traçage est activé, puis retourne <code>value</code>. Le paramètre optionnel <code>delayed</code> spécifie si l'évaluation de <code>value</code> doit être retardée jusqu'à ce que le message soit tracé. <code>traceLevel</code> peut prendre l'une des valeurs suivantes :\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  "
  },
  "Diagnostics.Trace_Documentation.Category": {
    "message": "Diagnostics"
  },
  "Diagnostics.Trace_Documentation.Examples_0_Description": {
    "message": "Tracez le message avant d'appeler la fonction Text.From et de retourner le résultat."
  },
  "Diagnostics.Trace_Documentation.Examples_0_Code": {
    "message": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)"
  },
  "Diagnostics.Trace_Documentation.Examples_0_Result": {
    "message": "\"123\""
  },
  "IdentityProvider.Default_Documentation.Name": {
    "message": "IdentityProvider.Default"
  },
  "IdentityProvider.Default_Documentation.Description": {
    "message": "Fournisseur d'identité par défaut pour l'hôte actuel."
  },
  "IdentityProvider.Default_Documentation.LongDescription": {
    "message": "Fournisseur d'identité par défaut pour l'hôte actuel."
  },
  "IdentityProvider.Default_Documentation.Category": {
    "message": "Accessing data"
  },
  "List.Accumulate_Documentation.Name": {
    "message": "List.Accumulate"
  },
  "List.Accumulate_Documentation.Description": {
    "message": "Cumule une valeur de résumé à partir des éléments dans la liste."
  },
  "List.Accumulate_Documentation.LongDescription": {
    "message": "Cumule une valeur de résumé à partir des éléments dans la liste <code>list</code> à l'aide de <code>accumulator</code>.\r\n    Un paramètre de départ <code>seed</code> facultatif peut être défini."
  },
  "List.Accumulate_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.Accumulate_Documentation.Examples_0_Description": {
    "message": "Cumule la valeur agrégée des éléments dans la liste {1, 2, 3, 4, 5} en utilisant ((state, current) => state + current )."
  },
  "List.Accumulate_Documentation.Examples_0_Code": {
    "message": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)"
  },
  "List.Accumulate_Documentation.Examples_0_Result": {
    "message": "15"
  },
  "List.DateTimeZones_Documentation.Name": {
    "message": "List.DateTimeZones"
  },
  "List.DateTimeZones_Documentation.Description": {
    "message": "Génère une liste de valeurs datetimezone en fonction d'une valeur initiale, d'un nombre et d'une valeur de durée incrémentielle."
  },
  "List.DateTimeZones_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs <code>datetimezone</code> de taille <code>count</code>, démarrant par <code>start</code>. L'incrément spécifié, <code>step</code>, est une valeur <code>duration</code> qui est ajoutée à chaque valeur."
  },
  "List.DateTimeZones_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.DateTimeZones_Documentation.Examples_0_Description": {
    "message": "Crée une liste de 10 valeurs démarrant 5 minutes avant le 1er jour de la nouvelle année (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) par incréments de 1 minute (#duration(0, 0, 1, 0))."
  },
  "List.DateTimeZones_Documentation.Examples_0_Code": {
    "message": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))"
  },
  "List.DateTimeZones_Documentation.Examples_0_Result": {
    "message": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
  },
  "List.DateTimes_Documentation.Name": {
    "message": "List.DateTimes"
  },
  "List.DateTimes_Documentation.Description": {
    "message": "Génère une liste de valeurs datetime en fonction d'une valeur initiale, d'un nombre et d'une valeur de durée incrémentielle."
  },
  "List.DateTimes_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs <code>datetime</code> de taille <code>count</code>, démarrant par <code>start</code>. L'incrément spécifié, <code>step</code>, est une valeur <code>duration</code> qui est ajoutée à chaque valeur."
  },
  "List.DateTimes_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.DateTimes_Documentation.Examples_0_Description": {
    "message": "Crée une liste de 10 valeurs démarrant 5 minutes avant le 1er jour de la nouvelle année (#datetime(2011, 12, 31, 23, 55, 0)) par incréments de 1 minute (#duration(0, 0, 1, 0))."
  },
  "List.DateTimes_Documentation.Examples_0_Code": {
    "message": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))"
  },
  "List.DateTimes_Documentation.Examples_0_Result": {
    "message": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
  },
  "List.Dates_Documentation.Name": {
    "message": "List.Dates"
  },
  "List.Dates_Documentation.Description": {
    "message": "Génère une liste de valeurs date en fonction d'une valeur initiale, d'un nombre et d'une valeur de durée incrémentielle."
  },
  "List.Dates_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs <code>date</code> de taille <code>count</code>, démarrant par <code>start</code>. L'incrément spécifié, <code>step</code>, est une valeur <code>duration</code> qui est ajoutée à chaque valeur."
  },
  "List.Dates_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.Dates_Documentation.Examples_0_Description": {
    "message": "Crée une liste de 5 valeurs démarrant la veille du 1er jour de l'année (#date(2011, 12, 31)) par incréments de 1 jour(#duration(1, 0, 0, 0))."
  },
  "List.Dates_Documentation.Examples_0_Code": {
    "message": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))"
  },
  "List.Dates_Documentation.Examples_0_Result": {
    "message": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
  },
  "List.Durations_Documentation.Name": {
    "message": "List.Durations"
  },
  "List.Durations_Documentation.Description": {
    "message": "Génère une liste de valeurs de durée en fonction d'une valeur initiale, d'un nombre et d'une valeur de durée incrémentielle."
  },
  "List.Durations_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs <code>duration</code> <code>count</code>, commençant par <code>start</code> et incrémentée par le <code>duration</code> <code>step</code> spécifié."
  },
  "List.Durations_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.Durations_Documentation.Examples_0_Description": {
    "message": "Crée une liste de 5 valeurs démarrant par 1 heure et par incréments d'une heure."
  },
  "List.Durations_Documentation.Examples_0_Code": {
    "message": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))"
  },
  "List.Durations_Documentation.Examples_0_Result": {
    "message": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
  },
  "List.Generate_Documentation.Name": {
    "message": "List.Generate"
  },
  "List.Generate_Documentation.Description": {
    "message": "Génère une liste de valeurs."
  },
  "List.Generate_Documentation.LongDescription": {
    "message": "Génère une liste de valeurs à l’aide des fonctions fournies. La fonction <code>initial</code> génère une valeur de candidat de début, qui est ensuite testée par rapport à <code>condition</code>.\r\n    Si la valeur candidate est approuvée, elle est retournée dans la liste résultante et la valeur candidate suivante est générée en passant la valeur nouvellement approuvée à <code>next</code>.\r\n    Une fois qu’une valeur candidate ne correspond pas à <code>condition</code>, le processus de génération de liste s’arrête.\r\n    Un paramètre facultatif, <code>selector</code>, peut également être fourni pour transformer les éléments dans la liste résultante."
  },
  "List.Generate_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.Generate_Documentation.Examples_0_Description": {
    "message": "Créez une liste en démarrant à dix, en décrémentant à plusieurs reprises d’un élément et en veillant à ce que chaque élément soit supérieur à zéro."
  },
  "List.Generate_Documentation.Examples_0_Code": {
    "message": "List.Generate(() => 10, each _ > 0, each _ - 1)"
  },
  "List.Generate_Documentation.Examples_0_Result": {
    "message": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
  },
  "List.Generate_Documentation.Examples_1_Description": {
    "message": "Génère une liste d'enregistrements contenant x et y, où x est une valeur et y est une liste. x doit être inférieur à 10 et représenter le nombre d'éléments dans la liste y. Après la génération de la liste, retourne uniquement les valeurs x."
  },
  "List.Generate_Documentation.Examples_1_Code": {
    "message": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)"
  },
  "List.Generate_Documentation.Examples_1_Result": {
    "message": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
  },
  "List.InsertRange_Documentation.Name": {
    "message": "List.InsertRange"
  },
  "List.InsertRange_Documentation.Description": {
    "message": "Insère des valeurs dans une liste à l'index spécifié."
  },
  "List.InsertRange_Documentation.LongDescription": {
    "message": "Retourne une nouvelle liste générée par l'insertion de valeurs dans <code>values</code> dans <code>list</code> à <code>index</code>. La première la position dans la liste est à l'index 0.\r\n      <ul>\r\n        <li><code>list</code> : liste cible où les valeurs doivent être insérées.</li>\r\n        <li><code>index</code> : index de la liste cible (<code>list</code>) où les valeurs doivent être insérées. La première la position dans la liste est à l'index 0.</li>\r\n        <li><code>values</code> : liste des valeurs qui doivent être insérées dans <code>list</code>.</li>\r\n      </ul>"
  },
  "List.InsertRange_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.InsertRange_Documentation.Examples_0_Description": {
    "message": "Insère la liste ({3, 4}) dans la liste cible ({1, 2, 5}) à l'index 2."
  },
  "List.InsertRange_Documentation.Examples_0_Code": {
    "message": "List.InsertRange({1, 2, 5}, 2, {3, 4})"
  },
  "List.InsertRange_Documentation.Examples_0_Result": {
    "message": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
  },
  "List.InsertRange_Documentation.Examples_1_Description": {
    "message": "Insère une liste avec une liste imbriquée ({1, {1.1, 1.2}}) dans une liste cible ({2, 3, 4}) à l'index 0."
  },
  "List.InsertRange_Documentation.Examples_1_Code": {
    "message": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})"
  },
  "List.InsertRange_Documentation.Examples_1_Result": {
    "message": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
  },
  "List.ReplaceRange_Documentation.Name": {
    "message": "List.ReplaceRange"
  },
  "List.ReplaceRange_Documentation.Description": {
    "message": "Remplace le nombre de comptages de valeurs à partir de la position avec les valeurs de remplacement."
  },
  "List.ReplaceRange_Documentation.LongDescription": {
    "message": "Remplace les valeurs <code>count</code> dans <code>list</code> par la liste <code>replaceWith</code>, démarrant à la position spécifiée, <code>index</code>."
  },
  "List.ReplaceRange_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.ReplaceRange_Documentation.Examples_0_Description": {
    "message": "Remplace {7, 8, 9} dans la liste {1, 2, 7, 8, 9, 5} par {3, 4}."
  },
  "List.ReplaceRange_Documentation.Examples_0_Code": {
    "message": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})"
  },
  "List.ReplaceRange_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3, 4, 5}"
  },
  "List.ReplaceValue_Documentation.Name": {
    "message": "List.ReplaceValue"
  },
  "List.ReplaceValue_Documentation.Description": {
    "message": "Recherche une liste pour la valeur spécifiée et la remplace."
  },
  "List.ReplaceValue_Documentation.LongDescription": {
    "message": "Recherche une liste de valeurs, <code>list</code>, pour la valeur <code>oldValue</code> et remplace chaque occurrence avec la valeur de remplacement <code>newValue</code>."
  },
  "List.ReplaceValue_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.ReplaceValue_Documentation.Examples_0_Description": {
    "message": "Remplace toutes les valeurs « a » dans la liste {\"a\", \"B\", \"a\", \"a\"} par « A »."
  },
  "List.ReplaceValue_Documentation.Examples_0_Code": {
    "message": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)"
  },
  "List.ReplaceValue_Documentation.Examples_0_Result": {
    "message": "{\"A\", \"B\", \"A\", \"A\"}"
  },
  "List.Times_Documentation.Name": {
    "message": "List.Times"
  },
  "List.Times_Documentation.Description": {
    "message": "Génère une liste de valeurs time en fonction d'une valeur initiale, d'un nombre et d'une valeur de durée incrémentielle."
  },
  "List.Times_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs <code>time</code> de taille <code>count</code>, en commençant par <code>start</code>. L'incrément spécifié, <code>step</code>, est une valeur <code>duration</code> qui est ajoutée à chaque valeur."
  },
  "List.Times_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.Times_Documentation.Examples_0_Description": {
    "message": "Crée une liste de 4 valeurs en commençant à midi (#time(12, 0, 0)) par incréments de 1 heure (#duration(0, 1, 0, 0))."
  },
  "List.Times_Documentation.Examples_0_Code": {
    "message": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))"
  },
  "List.Times_Documentation.Examples_0_Result": {
    "message": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
  },
  "List.TransformMany_Documentation.Name": {
    "message": "List.TransformMany"
  },
  "List.TransformMany_Documentation.Description": {
    "message": "Retourne une liste dont les éléments sont transformés depuis la liste d'entrée avec les fonctions spécifiées."
  },
  "List.TransformMany_Documentation.LongDescription": {
    "message": "Retourne une liste dont les éléments sont projetés à partir de la liste d’entrée.<br>\r\n    <br>\r\n    La fonction <code>collectionTransform</code> transforme chaque élément en liste intermédiaire et la fonction <code>resultTransform</code> reçoit l’élément d’origine, ainsi qu’un élément de la liste intermédiaire afin de construire le résultat final.<br>\r\n    <br>\r\n    La fonction <code>collectionTransform</code> a la signature <code>(x as any) comme liste => ...</code>,  où <code>x</code> est un élément dans <code>list</code>.\r\n    La fonction <code>resultTransform</code> projette la forme du résultat et a la signature <code> (x as any, y as any) as any => ...</code>, où <code>x</code> est un élément dans <code>list</code> et <code>y</code> est un élément de la liste générée en passant <code>x</code> vers <code>collectionTransform</code>."
  },
  "List.TransformMany_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.TransformMany_Documentation.Examples_0_Description": {
    "message": "Effectuez un applatissement de la liste des personnes et de leurs animaux domestiques."
  },
  "List.TransformMany_Documentation.Examples_0_Code": {
    "message": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)"
  },
  "List.TransformMany_Documentation.Examples_0_Result": {
    "message": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
  },
  "Number.Random_Documentation.Name": {
    "message": "Number.Random"
  },
  "Number.Random_Documentation.Description": {
    "message": "Retourne un nombre aléatoire."
  },
  "Number.Random_Documentation.LongDescription": {
    "message": "Retourne un nombre aléatoire entre 0 et 1."
  },
  "Number.Random_Documentation.Category": {
    "message": "Number.Random"
  },
  "Number.Random_Documentation.Examples_0_Description": {
    "message": "Obtient un nombre aléatoire."
  },
  "Number.Random_Documentation.Examples_0_Code": {
    "message": "Number.Random()"
  },
  "Number.Random_Documentation.Examples_0_Result": {
    "message": "0.919303"
  },
  "Progress.DataSourceProgress_Documentation.Name": {
    "message": "Progress.DataSourceProgress"
  },
  "Progress.DataSourceProgress_Documentation.Description": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Progress.DataSourceProgress_Documentation.LongDescription": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Progress.DataSourceProgress_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Record.AddField_Documentation.Name": {
    "message": "Record.AddField"
  },
  "Record.AddField_Documentation.Description": {
    "message": "Ajoute un champ à un enregistrement."
  },
  "Record.AddField_Documentation.LongDescription": {
    "message": "Ajoute un champ à un enregistrement <code>record</code>, selon le nom du champ <code>fieldName</code> et la valeur <code>value</code>."
  },
  "Record.AddField_Documentation.Category": {
    "message": "Record.Transformations"
  },
  "Record.AddField_Documentation.Examples_0_Description": {
    "message": "Ajoute le champ « Address » à l'enregistrement."
  },
  "Record.AddField_Documentation.Examples_0_Code": {
    "message": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")"
  },
  "Record.AddField_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
  },
  "Replacer.ReplaceText_Documentation.Name": {
    "message": "Replacer.ReplaceText"
  },
  "Replacer.ReplaceText_Documentation.Description": {
    "message": "Remplace le texte dans l'entrée fournie."
  },
  "Replacer.ReplaceText_Documentation.LongDescription": {
    "message": "Remplace le texte <code>old</code> dans le <code>text</code> d'origine par le texte <code>new</code>. Cette fonction de remplacement peut être utilisée dans <code>List.ReplaceValue</code> et <code>Table.ReplaceValue</code>."
  },
  "Replacer.ReplaceText_Documentation.Category": {
    "message": "Replacer"
  },
  "Replacer.ReplaceText_Documentation.Examples_0_Description": {
    "message": "Remplace le texte « hE » par « He » dans la chaîne « hEllo world »."
  },
  "Replacer.ReplaceText_Documentation.Examples_0_Code": {
    "message": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")"
  },
  "Replacer.ReplaceText_Documentation.Examples_0_Result": {
    "message": "\"Hello world\""
  },
  "Replacer.ReplaceValue_Documentation.Name": {
    "message": "Replacer.ReplaceValue"
  },
  "Replacer.ReplaceValue_Documentation.Description": {
    "message": "Remplace les valeurs dans l'entrée fournie."
  },
  "Replacer.ReplaceValue_Documentation.LongDescription": {
    "message": "Remplace la valeur <code>old</code> dans le <code>value</code> d'origine par la valeur <code>new</code>. Cette fonction de remplacement peut être utilisée dans <code>List.ReplaceValue</code> et <code>Table.ReplaceValue</code>."
  },
  "Replacer.ReplaceValue_Documentation.Category": {
    "message": "Replacer"
  },
  "Replacer.ReplaceValue_Documentation.Examples_0_Description": {
    "message": "Remplace la valeur 11 par la valeur 10."
  },
  "Replacer.ReplaceValue_Documentation.Examples_0_Code": {
    "message": "Replacer.ReplaceValue(11, 11, 10)"
  },
  "Replacer.ReplaceValue_Documentation.Examples_0_Result": {
    "message": "10"
  },
  "Smartsheet.Query_Documentation.Description": {
    "message": "Retourne un résultat JSON à partir de l'API Smartsheet"
  },
  "Smartsheet.Query_Documentation.DisplayName": {
    "message": "Smartsheet.Query"
  },
  "Smartsheet.Query_Documentation.Caption": {
    "message": "Smartsheet.Query"
  },
  "Smartsheet.Query_Documentation.Name": {
    "message": "Smartsheet.Query"
  },
  "Smartsheet.Query_Documentation.LongDescription": {
    "message": "Effectue un appel à l'API REST Smartsheet 2.0 au niveau du point de terminaison spécifié et retourne les résultats sous la forme d'un enregistrement JSON."
  },
  "Smartsheet.Query_Documentation.Examples_0_Description": {
    "message": "Extrait des données à partir du point de terminaison d'API Smartsheet des feuilles avec des arguments supplémentaires spécifiés"
  },
  "Smartsheet.Query_Documentation.Examples_0_Code": {
    "message": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])"
  },
  "Smartsheet.Query_Documentation.Examples_0_Result": {
    "message": "Table contenant les informations sur les feuilles retournées par l'API Smartsheet"
  },
  "Splitter.SplitByNothing_Documentation.Name": {
    "message": "Splitter.SplitByNothing"
  },
  "Splitter.SplitByNothing_Documentation.Description": {
    "message": "Retourne une fonction qui n'effectue pas de fractionnement, son argument étant retourné sous la forme d'une liste d'éléments unique."
  },
  "Splitter.SplitByNothing_Documentation.LongDescription": {
    "message": "Retourne une fonction qui n'effectue pas de fractionnement, son argument étant retourné sous la forme d'une liste d'éléments unique."
  },
  "Splitter.SplitByNothing_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByWhitespace_Documentation.Name": {
    "message": "Splitter.SplitTextByWhitespace"
  },
  "Splitter.SplitTextByWhitespace_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes au niveau de l'espace."
  },
  "Splitter.SplitTextByWhitespace_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes au niveau de l'espace."
  },
  "Splitter.SplitTextByWhitespace_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByWhitespace_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée par les caractères d'espacement, en traitant les guillemets comme n'importe quel autre caractère."
  },
  "Splitter.SplitTextByWhitespace_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")"
  },
  "Splitter.SplitTextByWhitespace_Documentation.Examples_0_Result": {
    "message": "{\"a\", \"b\", \"c\"}"
  },
  "Table.Partition_Documentation.Name": {
    "message": "Table.Partition"
  },
  "Table.Partition_Documentation.Description": {
    "message": "Partitionne la table dans une liste de tables en fonction du nombre de groupes et de la colonne spécifiée."
  },
  "Table.Partition_Documentation.LongDescription": {
    "message": "Partitionne <code>table</code> dans une liste de <code>groups</code> nombre de tables en fonction de la valeur de <code>column</code> et d'une fonction <code>hash</code>.\r\n    La fonction <code>hash</code> est appliquée à la valeur de la ligne <code>column</code> pour obtenir une valeur de hachage pour la ligne. Le modulo de la valeur de hachage <code>groups</code> détermine dans quelle table parmi les tables retournées la ligne sera placée.\r\n    <ul>\r\n       <li><code>table</code> : table à partitionner.</li>\r\n       <li><code>column</code> : colonne à hacher pour déterminer dans quelle table retournée la ligne se trouve.</li>\r\n       <li><code>groups</code> : nombre de tables dans lequel la table d'entrée sera partitionnée.</li>\r\n       <li><code>hash</code> : fonction appliquée pour obtenir la valeur de hachage.</li>\r\n    </ul>\r\n  "
  },
  "Table.Partition_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.Partition_Documentation.Examples_0_Description": {
    "message": "Partitionne la table <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> en deux tables sur la colonne [a], en utilisant la valeur des colonnes comme fonction de hachage."
  },
  "Table.Partition_Documentation.Examples_0_Code": {
    "message": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)"
  },
  "Table.Partition_Documentation.Examples_0_Result": {
    "message": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
  },
  "Text.BetweenDelimiters_Documentation.Name": {
    "message": "Text.BetweenDelimiters"
  },
  "Text.BetweenDelimiters_Documentation.Description": {
    "message": "Text.BetweenDelimiters"
  },
  "Text.BetweenDelimiters_Documentation.LongDescription": {
    "message": "Retourne la partie de <code>text</code> entre le <code>startDelimiter</code> et le <code>endDelimiter</code> spécifiés.\r\n    Un numérique facultatif <code>startIndex</code> indique quelle occurrence du <code>startDelimiter</code> doit être considérée.\r\n    Une liste facultative <code>startIndex</code> indique quelle occurrence du <code>startDelimiter</code> doit être considérée, et si l'indexation doit être effectuée à partir du début ou de la fin de l'entrée.\r\n    Le <code>endIndex</code> est similaire, excepté que l'indexation est effectuée relativement au <code>startIndex</code>."
  },
  "Text.BetweenDelimiters_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.BetweenDelimiters_Documentation.Examples_0_Description": {
    "message": "Obtenez la partie de « 111 (222) 333 (444) » entre la (première) parenthèse ouvrante et la (première) parenthèse fermante qui la suit."
  },
  "Text.BetweenDelimiters_Documentation.Examples_0_Code": {
    "message": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")"
  },
  "Text.BetweenDelimiters_Documentation.Examples_0_Result": {
    "message": "\"222\""
  },
  "Text.BetweenDelimiters_Documentation.Examples_1_Description": {
    "message": "Obtenez la partie de « 111 (222) 333 (444) » entre la deuxième parenthèse ouvrante et la première parenthèse fermante qui la suit."
  },
  "Text.BetweenDelimiters_Documentation.Examples_1_Code": {
    "message": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)"
  },
  "Text.BetweenDelimiters_Documentation.Examples_1_Result": {
    "message": "\"444\""
  },
  "Text.BetweenDelimiters_Documentation.Examples_2_Description": {
    "message": "Obtenez la partie de « 111 (222) 333 (444) » entre la deuxième parenthèse ouvrante à partir de la fin et la deuxième parenthèse fermante qui la suit."
  },
  "Text.BetweenDelimiters_Documentation.Examples_2_Code": {
    "message": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})"
  },
  "Text.BetweenDelimiters_Documentation.Examples_2_Result": {
    "message": "\"222) 333 (444\""
  },
  "Text.Insert_Documentation.Name": {
    "message": "Text.Insert"
  },
  "Text.Insert_Documentation.Description": {
    "message": "Insère une valeur de texte dans une autre, à une position spécifiée."
  },
  "Text.Insert_Documentation.LongDescription": {
    "message": "Retourne le résultat de la valeur de texte insérée <code>newText</code> dans la valeur de texte <code>text</code>, à la position <code>offset</code>. Les positions commencent au numéro 0."
  },
  "Text.Insert_Documentation.Category": {
    "message": "Text.Modification"
  },
  "Text.Insert_Documentation.Examples_0_Description": {
    "message": "Insérez « C » entre « B » et « D » dans « ABD »."
  },
  "Text.Insert_Documentation.Examples_0_Code": {
    "message": "Text.Insert(\"ABD\", 2, \"C\")"
  },
  "Text.Insert_Documentation.Examples_0_Result": {
    "message": "\"ABCD\""
  },
  "Text.NewGuid_Documentation.Name": {
    "message": "Text.NewGuid"
  },
  "Text.NewGuid_Documentation.Description": {
    "message": "Retourne un nouvel objet d'identificateur global unique (GUID)."
  },
  "Text.NewGuid_Documentation.LongDescription": {
    "message": "Retourne un nouvel objet d'identificateur global unique (GUID)."
  },
  "Text.NewGuid_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Text.Replace_Documentation.Name": {
    "message": "Text.Replace"
  },
  "Text.Replace_Documentation.Description": {
    "message": "Remplace toutes les occurrences de la sous-chaîne spécifiée dans le texte."
  },
  "Text.Replace_Documentation.LongDescription": {
    "message": "Retourne le résultat du remplacement de toutes les occurrences de la valeur de texte <code>old</code>, dans la valeur de texte <code>text</code>, par la valeur de texte <code>new</code>. Cette fonction respecte la casse."
  },
  "Text.Replace_Documentation.Category": {
    "message": "Text.Modification"
  },
  "Text.Replace_Documentation.Examples_0_Description": {
    "message": "Remplace toutes les occurrences de « the » dans une phrase par « a »."
  },
  "Text.Replace_Documentation.Examples_0_Code": {
    "message": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")"
  },
  "Text.Replace_Documentation.Examples_0_Result": {
    "message": "\"a quick brown fox jumps over a lazy dog\""
  },
  "Text.ReplaceRange_Documentation.Name": {
    "message": "Text.ReplaceRange"
  },
  "Text.ReplaceRange_Documentation.Description": {
    "message": "Supprime une plage de caractères et insère une nouvelle valeur à la position spécifiée."
  },
  "Text.ReplaceRange_Documentation.LongDescription": {
    "message": "Retourne le résultat de la suppression d'un certain nombre de caractères, <code>count</code>, de la valeur de texte <code>text</code> en démarrant à la position <code>offset</code> puis en insérant la valeur de texte <code>newText</code> à la même position dans <code>text</code>."
  },
  "Text.ReplaceRange_Documentation.Category": {
    "message": "Text.Modification"
  },
  "Text.ReplaceRange_Documentation.Examples_0_Description": {
    "message": "Remplace un seul caractère à la position 2 dans la valeur de texte « ABGF » par la nouvelle valeur de texte « CDE »."
  },
  "Text.ReplaceRange_Documentation.Examples_0_Code": {
    "message": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")"
  },
  "Text.ReplaceRange_Documentation.Examples_0_Result": {
    "message": "\"ABCDEF\""
  },
  "Type.AddTableKey_Documentation.Name": {
    "message": "Type.AddTableKey"
  },
  "Type.AddTableKey_Documentation.Description": {
    "message": "Ajoute une clé au type de table spécifié."
  },
  "Type.AddTableKey_Documentation.LongDescription": {
    "message": "Ajoute une clé au type de table spécifié."
  },
  "Type.AddTableKey_Documentation.Category": {
    "message": "Type"
  },
  "WorkforceDimensions.Contents_Documentation.Name": {
    "message": "Workforce Dimensions Connector Configuration"
  },
  "WorkforceDimensions.Contents_Documentation.LongDescription": {
    "message": "Configuration to access OAuth server as well as default date range settigns."
  },
  "ZohoCreator.Contents_Documentation.Name": {
    "message": "Zoho Creator"
  },
  "ZohoCreator.Contents_Documentation.LongDescription": {
    "message": "This connector will fetch data only from Zoho Creator application reports"
  },
  "ZohoCreator.Contents_Documentation.Examples_0_Description": {
    "message": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'"
  },
  "ZohoCreator.Contents_Documentation.Examples_0_Code": {
    "message": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")"
  },
  "ZohoCreator.Contents_Documentation.Examples_0_Result": {
    "message": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
  },
  "AccessControlEntry.ConditionToIdentities_Documentation.Name": {
    "message": "AccessControlEntry.ConditionToIdentities"
  },
  "AccessControlEntry.ConditionToIdentities_Documentation.Description": {
    "message": "Retourne la liste des identités que la condition accepte."
  },
  "AccessControlEntry.ConditionToIdentities_Documentation.LongDescription": {
    "message": "<p>À l'aide du <code>identityProvider</code> spécifié, convertit le <code>condition</code> en liste des identités pour laquelle <code>condition</code> retourne <code>true</code> dans tous les contextes d'autorisation qui ont <code>identityProvider</code> comme fournisseur d'identité. Une erreur est générée si <code>condition</code> ne peut pas être converti en liste d'identités, par exemple, si <code>condition</code> consulte d'autres attributs que des identités d'utilisateur ou de groupe pour prendre une décision.</p>\r\n<p>Notez que la liste d'identités représente les identités telles qu'elles apparaissent dans <code>condition</code>, sans normalisation (par exemple, une expansion de groupe).</p>\r\n"
  },
  "AccessControlEntry.ConditionToIdentities_Documentation.Category": {
    "message": "Accessing data"
  },
  "Binary.Compress_Documentation.Name": {
    "message": "Binary.Compress"
  },
  "Binary.Compress_Documentation.Description": {
    "message": "Compresse une valeur binaire à l'aide du type de compression donné."
  },
  "Binary.Compress_Documentation.LongDescription": {
    "message": "Compresse une valeur binaire à l'aide du type de compression donné. Le résultat de cet appel est une copie compressée de l'entrée. Parmi les types de compression, citons :\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>"
  },
  "Binary.Compress_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.Compress_Documentation.Examples_0_Description": {
    "message": "Compressez la valeur binaire."
  },
  "Binary.Compress_Documentation.Examples_0_Code": {
    "message": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)"
  },
  "Binary.Compress_Documentation.Examples_0_Result": {
    "message": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
  },
  "Binary.Decompress_Documentation.Name": {
    "message": "Binary.Decompress"
  },
  "Binary.Decompress_Documentation.Description": {
    "message": "Décompresse une valeur binaire à l'aide du type de compression donné."
  },
  "Binary.Decompress_Documentation.LongDescription": {
    "message": "Décompresse une valeur binaire à l'aide du type de compression donné. Le résultat de cet appel est une copie décompressée de l'entrée. Les types de compression incluent :\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>"
  },
  "Binary.Decompress_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.Decompress_Documentation.Examples_0_Description": {
    "message": "Décompressez la valeur binaire."
  },
  "Binary.Decompress_Documentation.Examples_0_Code": {
    "message": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)"
  },
  "Binary.Decompress_Documentation.Examples_0_Result": {
    "message": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
  },
  "Binary.Range_Documentation.Name": {
    "message": "Binary.Range"
  },
  "Binary.Range_Documentation.Description": {
    "message": "Retourne un sous-ensemble de la valeur binaire commençant à un décalage."
  },
  "Binary.Range_Documentation.LongDescription": {
    "message": "Retourne un sous-ensemble de la valeur binaire commençant au décalage <code>binary</code>. Un paramètre facultatif <code>offset</code> définit la longueur maximale du sous-ensemble."
  },
  "Binary.Range_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.Range_Documentation.Examples_0_Description": {
    "message": "Retourne un sous-ensemble de la valeur binaire commençant au décalage 6."
  },
  "Binary.Range_Documentation.Examples_0_Code": {
    "message": "Binary.Range(#binary({0..10}), 6)"
  },
  "Binary.Range_Documentation.Examples_0_Result": {
    "message": "#binary({6, 7, 8, 9, 10})"
  },
  "Binary.Range_Documentation.Examples_1_Description": {
    "message": "Retourne un sous-ensemble de longueur 2 à partir du décalage 6 de la valeur binaire."
  },
  "Binary.Range_Documentation.Examples_1_Code": {
    "message": "Binary.Range(#binary({0..10}), 6, 2)"
  },
  "Binary.Range_Documentation.Examples_1_Result": {
    "message": "#binary({6, 7})"
  },
  "Binary.Split_Documentation.Name": {
    "message": "Binary.Split"
  },
  "Binary.Split_Documentation.Description": {
    "message": "Divise le fichier binaire spécifié en liste de fichiers binaires à l’aide de la taille de page spécifiée."
  },
  "Binary.Split_Documentation.LongDescription": {
    "message": "Divise <code>binary</code> en une liste de fichiers binaires où le premier élément de la liste de sortie est un fichier binaire contenant les premiers <code>pageSize</code> octets du\r\n    fichier binaire source, l’élément suivant de la liste de sortie est un fichier binaire contenant les <code>pageSize</code> octets suivants du fichier binaire source, et ainsi de suite."
  },
  "Binary.Split_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.View_Documentation.Name": {
    "message": "Binary.View"
  },
  "Binary.View_Documentation.Description": {
    "message": "Crée ou étend un fichier binaire avec des gestionnaires définis par l’utilisateur pour les opérations de requête et d’action."
  },
  "Binary.View_Documentation.LongDescription": {
    "message": "<p>Renvoie la vue de <code>binary</code> où les fonctions spécifiées dans <code>handlers</code> sont utilisées au lieu du comportement par défaut d’une opération lorsque l’opération est appliquée à la vue.</p>\r\n<p>Si <code>binary</code> est fourni, toutes les fonctions gestionnaires sont facultatives. Si <code>binary</code> n’est pas fourni, la fonction gestionnaire <code>GetStream</code> est requise. Si aucune fonction de gestionnaire n’est spécifiée pour une opération, le comportement par défaut de l’opération est appliqué à <code>binary</code> à la place (sauf dans le cas de <code>GetExpression</code>).</p>\r\n<p>Les fonctions gestionnaires doivent renvoyer une valeur qui est sémantiquement équivalente au résultat de l’application de l’opération sur <code>binary</code> (ou la vue résultante dans le cas de <code>GetExpression</code>).</p>\r\n<p>Si une fonction de gestionnaire génère une erreur, le comportement par défaut de l’opération est appliqué à la vue.</p>\r\n<p><code>Binary.View</code> peut être utilisé pour implémenter le repliement vers une source de données, c’est à dire la traduction de requêtes M en opérations spécifiques à la source (pour par exemple, pour télécharger une section d’un fichier).</p>\r\n<p>Referez-vous à la documentation publiée du connecteur personnalisé Power Query pour une description plus complète de <code>Binary.View</code>.</p>"
  },
  "Binary.View_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.View_Documentation.Examples_0_Description": {
    "message": "Créez une vue de base qui ne nécessite pas l’accès aux données pour déterminer la longueur."
  },
  "Binary.View_Documentation.Examples_0_Code": {
    "message": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)"
  },
  "Binary.View_Documentation.Examples_0_Result": {
    "message": "Text.ToBinary(\"hello world!\")"
  },
  "BinaryFormat.ByteOrder_Documentation.Name": {
    "message": "BinaryFormat.ByteOrder"
  },
  "BinaryFormat.ByteOrder_Documentation.Description": {
    "message": "Retourne un format binaire avec l'ordre d'octet spécifié par une fonction."
  },
  "BinaryFormat.ByteOrder_Documentation.LongDescription": {
    "message": "Retourne un format binaire avec l'ordre d'octet spécifié par <code>binaryFormat</code>.  L'ordre d'octet par défaut est <code>ByteOrder.BigEndian</code>."
  },
  "BinaryFormat.ByteOrder_Documentation.Category": {
    "message": "Binary Formats.Controlling byte order"
  },
  "BinaryFormat.Choice_Documentation.Name": {
    "message": "BinaryFormat.Choice"
  },
  "BinaryFormat.Choice_Documentation.Description": {
    "message": "Retourne un format binaire qui sélectionne le format binaire suivant en fonction d'une valeur déjà lue."
  },
  "BinaryFormat.Choice_Documentation.LongDescription": {
    "message": "Retourne un format binaire qui sélectionne le format binaire suivant en fonction d'une valeur déjà lue.  Valeur du format binaire produite par cette fonction par étapes :<ul>\r\n<li>Le format binaire spécifié par le paramètre <code>binaryFormat</code> est utilisé pour lire une valeur.</li>\r\n<li>La valeur est passée à la fonction de choix spécifiée par le paramètre <code>chooseFunction</code>.</li>\r\n<li>La fonction de choix inspecte la valeur et retourne un second format binaire.</li>\r\n<li>Le second format binaire est utilisé pour lire une seconde valeur.</li>\r\n<li>Si la fonction d'association est spécifiée, la première et la deuxième valeur sont passées à cette fonction et la valeur résultante est retournée.</li>\r\n<li>Si la fonction d'association n'est pas spécifiée, la seconde valeur est retournée.</li>\r\n<li>La seconde valeur est retournée.</li>\r\n</ul>Le paramètre facultatif <code>type</code> indique le type de format binaire qui est retourné par la fonction de choix.  <code>type any</code>, <code>type list</code> ou <code>type binary</code> peut être spécifié.  Si le paramètre <code>type</code> n'est pas spécifié, <code>type any</code> est utilisé.   Si <code>type list</code> ou <code>type binary</code> est utilisé, le système peut retourner une valeur <code>binary</code> ou <code>list</code> diffusée en continu au lieu d'une valeur mise en mémoire tampon, ce qui peut réduire la quantité de mémoire requise pour lire le format."
  },
  "BinaryFormat.Choice_Documentation.Category": {
    "message": "Binary Formats.Controlling what comes next"
  },
  "BinaryFormat.Choice_Documentation.Examples_0_Description": {
    "message": "Lecture d'une liste d'octets où le nombre d'éléments est déterminé par le premier octet."
  },
  "BinaryFormat.Choice_Documentation.Examples_0_Code": {
    "message": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.Choice_Documentation.Examples_0_Result": {
    "message": "{3, 4}"
  },
  "BinaryFormat.Choice_Documentation.Examples_1_Description": {
    "message": "Lecture d'une liste d'octets où le nombre d'éléments est déterminé par le premier octet, et qui conserve le premier octet lu."
  },
  "BinaryFormat.Choice_Documentation.Examples_1_Code": {
    "message": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.Choice_Documentation.Examples_1_Result": {
    "message": "[length = 2, list = {3, 4}]"
  },
  "BinaryFormat.Choice_Documentation.Examples_2_Description": {
    "message": "Lecture d'une liste d'octets où le nombre d'éléments est déterminé par le premier octet à l'aide d'une liste diffusée en continu."
  },
  "BinaryFormat.Choice_Documentation.Examples_2_Code": {
    "message": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.Choice_Documentation.Examples_2_Result": {
    "message": "{3, 4}"
  },
  "BinaryFormat.Group_Documentation.Name": {
    "message": "BinaryFormat.Group"
  },
  "BinaryFormat.Group_Documentation.Description": {
    "message": "Retourne un format binaire qui lit un groupe d'éléments."
  },
  "BinaryFormat.Group_Documentation.LongDescription": {
    "message": "Les paramètres sont les suivants :\r\n<ul>\r\n<li>Le paramètre <code>binaryFormat</code> spécifie le format binaire de la valeur de clé.</li>\r\n<li>Le paramètre <code>group</code> fournit des informations sur le groupe d'éléments connus.</li>\r\n<li>Le paramètre <code>extra</code> facultatif peut être utilisé pour spécifier une fonction qui retourne une valeur de format binaire pour la valeur qui suit une clé inattendue. Si le paramètre <code>extra</code> n'est pas spécifié, une erreur est générée en cas de valeurs de clés inattendues.</li>\r\n</ul>\r\nLe paramètre <code>group</code> spécifie une liste de définitions d'élément. Chaque définition d'élément est une liste, contenant 3 à 5 valeurs, comme suit :\r\n<ul>\r\n<li>Valeur de clé. Valeur de la clé qui correspond à l'élément. Elle doit être unique dans le jeu d'éléments.</li>\r\n<li>Format d'élément. Format binaire correspondant à la valeur de l'élément. Cela permet à chaque élément d'avoir un format différent. </li>\r\n<li>Occurrence de l'élément. Valeur <code>BinaryOccurrence.Type</code> indiquant le nombre de fois qu'il est prévu que l'élément apparaisse dans le groupe. Les éléments requis qui ne sont pas présents retournent une erreur. Les éléments en double obligatoires ou facultatifs sont traités comme des valeurs de clés inattendues.</li>\r\n<li>Valeur d'élément par défaut (facultatif). Si la valeur par défaut de l'élément apparaît dans la liste des définitions d'élément et n'a pas la valeur NULL, elle sera utilisée à la place de la valeur par défaut. La valeur par défaut des éléments répétitifs ou facultatifs est NULL, et la valeur par défaut des valeurs répétitives est une liste vide { }.</li>\r\n<li>Transformation de la valeur d'élément (facultatif). Si la fonction de transformation de la valeur d'élément est présente dans la liste des définitions d'élément et n'est pas NULL, elle est appelée pour transformer la valeur de l'élément avant qu'elle ne soit retournée. La fonction de transformation est appelée uniquement si l'élément apparaît dans l'entrée (elle n'est jamais appelée avec la valeur par défaut). </li>\r\n</ul>"
  },
  "BinaryFormat.Group_Documentation.Category": {
    "message": "Binary Formats.Reading a group of items"
  },
  "BinaryFormat.Group_Documentation.Examples_0_Description": {
    "message": "L'exemple suivant suppose une valeur de clé d'un seul octet, avec 4 éléments attendus dans le groupe, qui ont tous un octet de données après la clé.  Les éléments affichés dans l'entrée sont les suivants :\r\n<ul>\r\n<li>La clé 1 est requise, et apparaît avec la valeur 11.</li>\r\n<li>La clé 2 se répète, apparaît deux fois avec la valeur 22 et génère une valeur { 22, 22 }.</li>\r\n<li>La clé 3 est facultative ; elle n'apparaît pas, et génère une valeur NULL.</li>\r\n<li>La clé 4 se répète, mais n'apparaît pas, et génère une valeur { }.</li>\r\n<li>La clé 5 ne fait pas partie du groupe, mais apparaît une fois avec la valeur 55.  La fonction supplémentaire est appelée avec la valeur de clé 5, puis retourne le format correspondant à cette valeur (BinaryFormat.Byte).  La valeur 55 est lue et ignorée.</li>\r\n</ul>"
  },
  "BinaryFormat.Group_Documentation.Examples_0_Code": {
    "message": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)"
  },
  "BinaryFormat.Group_Documentation.Examples_0_Result": {
    "message": "{11, {22, 22}, null, {}}"
  },
  "BinaryFormat.Group_Documentation.Examples_1_Description": {
    "message": "L'exemple suivant illustre la transformation de la valeur d'élément et la valeur d'élément par défaut.   L'élément répétitif avec la clé 1 somme la liste des valeurs lues avec List.Sum.  L'élément facultatif avec la clé 2 a une valeur par défaut 123 au lieu de NULL."
  },
  "BinaryFormat.Group_Documentation.Examples_1_Code": {
    "message": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)"
  },
  "BinaryFormat.Group_Documentation.Examples_1_Result": {
    "message": "{203, 123}"
  },
  "BinaryFormat.Length_Documentation.Name": {
    "message": "BinaryFormat.Length"
  },
  "BinaryFormat.Length_Documentation.Description": {
    "message": "Retourne un format binaire qui limite la quantité de données pouvant être lues."
  },
  "BinaryFormat.Length_Documentation.LongDescription": {
    "message": "Retourne un format binaire qui limite la quantité de données pouvant être lues.  <code>BinaryFormat.List</code> et <code>BinaryFormat.Binary</code> peuvent être utilisés pour lire la fin des données.  <code>BinaryFormat.Length</code> peut être utilisé pour limiter le nombre d'octets lus.  Le paramètre <code>binaryFormat</code> spécifie le format binaire à limiter.  Le paramètre <code>length</code> spécifie le nombre d'octets à lire.  Le paramètre <code>length</code> peut être une valeur numérique ou une valeur de format binaire qui spécifie le format de la valeur de longueur affichée qui précède la valeur en cours de lecture."
  },
  "BinaryFormat.Length_Documentation.Category": {
    "message": "Binary Formats.Limiting input"
  },
  "BinaryFormat.Length_Documentation.Examples_0_Description": {
    "message": "Limitez le nombre d'octets lus à 2 lors de la lecture d'une liste d'octets."
  },
  "BinaryFormat.Length_Documentation.Examples_0_Code": {
    "message": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.Length_Documentation.Examples_0_Result": {
    "message": "{1, 2}"
  },
  "BinaryFormat.Length_Documentation.Examples_1_Description": {
    "message": "Limitez le nombre d'octets lus lors de la lecture d’une liste d'octets, à la valeur d'octet précédant la liste."
  },
  "BinaryFormat.Length_Documentation.Examples_1_Code": {
    "message": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.Length_Documentation.Examples_1_Result": {
    "message": "{2}"
  },
  "BinaryFormat.Transform_Documentation.Name": {
    "message": "BinaryFormat.Transform"
  },
  "BinaryFormat.Transform_Documentation.Description": {
    "message": "Retourne un format binaire qui transformera les valeurs lues par un autre format binaire."
  },
  "BinaryFormat.Transform_Documentation.LongDescription": {
    "message": "Retourne un format binaire qui transformera les valeurs lues par un autre format binaire.  Le paramètre <code>binaryFormat</code> spécifie le format binaire utilisé pour lire la valeur.  Le <code>function</code> est appelé avec la valeur lue, et retourne la valeur transformée."
  },
  "BinaryFormat.Transform_Documentation.Category": {
    "message": "Binary Formats.Transforming what was read"
  },
  "BinaryFormat.Transform_Documentation.Examples_0_Description": {
    "message": "Lit un octet et en ajoute un."
  },
  "BinaryFormat.Transform_Documentation.Examples_0_Code": {
    "message": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)"
  },
  "BinaryFormat.Transform_Documentation.Examples_0_Result": {
    "message": "2"
  },
  "Comparer.Ordinal_Documentation.Name": {
    "message": "Comparer.Ordinal"
  },
  "Comparer.Ordinal_Documentation.Description": {
    "message": "Retourne une fonction de comparaison qui utilise les règles ordinales pour comparer des valeurs."
  },
  "Comparer.Ordinal_Documentation.LongDescription": {
    "message": "Retourne une fonction de comparateur qui utilise des règles ordinales pour comparer les valeurs fournies <code>x</code> et <code>y</code>.<br>\r\n <br>\r\n    Une fonction de comparateur accepte deux arguments et retourne -1, 0 ou 1 selon que la première valeur est inférieure, égale ou supérieure à la seconde.\r\n    "
  },
  "Comparer.Ordinal_Documentation.Category": {
    "message": "Comparer"
  },
  "Comparer.Ordinal_Documentation.Examples_0_Description": {
    "message": "En utilisant les règles ordinales, comparez si \"encyclopédie\" et \"encyclopédie\" sont équivalentes. Notez qu'ils sont équivalents en utilisant <code>Comparer.FromCulture(\"en-US\")</code>. "
  },
  "Comparer.Ordinal_Documentation.Examples_0_Code": {
    "message": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")"
  },
  "Comparer.Ordinal_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "Comparer.OrdinalIgnoreCase_Documentation.Name": {
    "message": "Comparer.OrdinalIgnoreCase"
  },
  "Comparer.OrdinalIgnoreCase_Documentation.Description": {
    "message": "Retourne une fonction de comparaison ne respectant pas la casse, qui utilise les règles ordinales pour comparer des valeurs."
  },
  "Comparer.OrdinalIgnoreCase_Documentation.LongDescription": {
    "message": "Retourne une fonction de comparaison qui ne respecte pas la casse, qui utilise des règles ordinales pour comparer les valeurs fournies <code>x</code> et <code>y</code>.<br>\r\n        <br>\r\n        Une fonction de comparaison accepte deux arguments et retourne -1, 0 ou 1 en fonction de la valeur inférieure, égale ou supérieure à la seconde.\r\n    "
  },
  "Comparer.OrdinalIgnoreCase_Documentation.Category": {
    "message": "Comparer"
  },
  "Comparer.OrdinalIgnoreCase_Documentation.Examples_0_Description": {
    "message": "En utilisant des règles ordinales ne respectant pas la casse, comparez « Abc » avec « abc ». Notez que « Abc » est plus petit que « abc » avec <code>Comparer.Ordinal</code>. "
  },
  "Comparer.OrdinalIgnoreCase_Documentation.Examples_0_Code": {
    "message": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")"
  },
  "Comparer.OrdinalIgnoreCase_Documentation.Examples_0_Result": {
    "message": "0"
  },
  "Cube.AttributeMemberProperty_Documentation.Name": {
    "message": "Cube.AttributeMemberProperty"
  },
  "Cube.AttributeMemberProperty_Documentation.Description": {
    "message": "Retourne une propriété d'un attribut de dimension."
  },
  "Cube.AttributeMemberProperty_Documentation.LongDescription": {
    "message": "Retourne la propriété <code>propertyName</code> de l'attribut de dimension <code>attribute</code>."
  },
  "Cube.AttributeMemberProperty_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.MeasureProperty_Documentation.Name": {
    "message": "Cube.MeasureProperty"
  },
  "Cube.MeasureProperty_Documentation.Description": {
    "message": "Retourne une propriété d'une mesure (propriété de cellule)."
  },
  "Cube.MeasureProperty_Documentation.LongDescription": {
    "message": "Retourne la propriété <code>propertyName</code> de la mesure <code>measure</code>."
  },
  "Cube.MeasureProperty_Documentation.Category": {
    "message": "Cube"
  },
  "Databricks.Query_Documentation.Name": {
    "message": "Source de requête SQL Databricks"
  },
  "Databricks.Query_Documentation.LongDescription": {
    "message": "Définir une source de données Databricks pour exécuter des requêtes SQL"
  },
  "DatabricksMultiCloud.Query_Documentation.Name": {
    "message": "Source de requête SQL Databricks"
  },
  "DatabricksMultiCloud.Query_Documentation.LongDescription": {
    "message": "Définir une source de données Databricks pour exécuter des requêtes SQL"
  },
  "Date.AddDays_Documentation.Name": {
    "message": "Date.AddDays"
  },
  "Date.AddDays_Documentation.Description": {
    "message": "Ajoute les jours spécifiés à la date."
  },
  "Date.AddDays_Documentation.LongDescription": {
    "message": "Retourne le résultat <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> de l'ajout de <code>numberOfDays</code> jours à la valeur <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à laquelle les jours sont ajoutés.</li>\r\n      <li><code>numberOfDays</code> : nombre de jours à ajouter.</li>\r\n      </ul>"
  },
  "Date.AddDays_Documentation.Category": {
    "message": "Date"
  },
  "Date.AddDays_Documentation.Examples_0_Description": {
    "message": "Ajoute 5 jours à la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date 5/14/2011."
  },
  "Date.AddDays_Documentation.Examples_0_Code": {
    "message": "Date.AddDays(#date(2011, 5, 14), 5)"
  },
  "Date.AddDays_Documentation.Examples_0_Result": {
    "message": "#date(2011, 5, 19)"
  },
  "Date.AddMonths_Documentation.Name": {
    "message": "Date.AddMonths"
  },
  "Date.AddMonths_Documentation.Description": {
    "message": "Ajoute les mois spécifiés à la date."
  },
  "Date.AddMonths_Documentation.LongDescription": {
    "message": "Retourne le résultat <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> de l'ajout de <code>numberOfMonths</code> mois à la valeur <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à laquelle les mois sont ajoutés.</li>\r\n        <li><code>numberOfMonths</code> : nombre de mois à ajouter.</li>\r\n      </ul>"
  },
  "Date.AddMonths_Documentation.Category": {
    "message": "Date"
  },
  "Date.AddMonths_Documentation.Examples_0_Description": {
    "message": "Ajoute 5 mois à la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date 5/14/2011."
  },
  "Date.AddMonths_Documentation.Examples_0_Code": {
    "message": "Date.AddMonths(#date(2011, 5, 14), 5)"
  },
  "Date.AddMonths_Documentation.Examples_0_Result": {
    "message": "#date(2011, 10, 14)"
  },
  "Date.AddMonths_Documentation.Examples_1_Description": {
    "message": "Ajoute 18 mois à la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date et l'heure 5/14/2011 08:15:22 AM."
  },
  "Date.AddMonths_Documentation.Examples_1_Code": {
    "message": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)"
  },
  "Date.AddMonths_Documentation.Examples_1_Result": {
    "message": "#datetime(2012, 11, 14, 8, 15, 22)"
  },
  "Date.AddQuarters_Documentation.Name": {
    "message": "Date.AddQuarters"
  },
  "Date.AddQuarters_Documentation.Description": {
    "message": "Ajoute les trimestres spécifiés à la date."
  },
  "Date.AddQuarters_Documentation.LongDescription": {
    "message": "Retourne le résultat <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> de l'ajout de <code>numberOfQuarters</code> trimestres à la valeur <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à laquelle les trimestres sont ajoutés.</li>\r\n      <li><code>numberOfQuarters</code> : nombre de trimestres à ajouter.</li>\r\n      </ul>"
  },
  "Date.AddQuarters_Documentation.Category": {
    "message": "Date"
  },
  "Date.AddQuarters_Documentation.Examples_0_Description": {
    "message": "Ajoute 1 trimestre à la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date 5/14/2011."
  },
  "Date.AddQuarters_Documentation.Examples_0_Code": {
    "message": "Date.AddQuarters(#date(2011, 5, 14), 1)"
  },
  "Date.AddQuarters_Documentation.Examples_0_Result": {
    "message": "#date(2011, 8, 14)"
  },
  "Date.AddWeeks_Documentation.Name": {
    "message": "Date.AddWeeks"
  },
  "Date.AddWeeks_Documentation.Description": {
    "message": "Ajoute les semaines spécifiées à la date."
  },
  "Date.AddWeeks_Documentation.LongDescription": {
    "message": "Retourne le résultat <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> de l'ajout de <code>numberOfWeeks</code> semaines à la valeur <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à laquelle les semaines sont ajoutées.</li>\r\n      <li><code>numberOfWeeks</code> : nombre de semaines à ajouter.</li>\r\n      </ul>"
  },
  "Date.AddWeeks_Documentation.Category": {
    "message": "Date"
  },
  "Date.AddWeeks_Documentation.Examples_0_Description": {
    "message": "Ajoute 2 semaines à la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date 5/14/2011."
  },
  "Date.AddWeeks_Documentation.Examples_0_Code": {
    "message": "Date.AddWeeks(#date(2011, 5, 14), 2)"
  },
  "Date.AddWeeks_Documentation.Examples_0_Result": {
    "message": "#date(2011, 5, 28)"
  },
  "Date.AddYears_Documentation.Name": {
    "message": "Date.AddYears"
  },
  "Date.AddYears_Documentation.Description": {
    "message": "Ajoute les années spécifiées à la date."
  },
  "Date.AddYears_Documentation.LongDescription": {
    "message": "Retourne le résultat <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> de l'ajout de <code>numberOfYears</code> à une valeur <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à laquelle les années sont ajoutées.</li>\r\n        <li><code>numberOfYears</code> : nombre d'années à ajouter.</li>\r\n      </ul>"
  },
  "Date.AddYears_Documentation.Category": {
    "message": "Date"
  },
  "Date.AddYears_Documentation.Examples_0_Description": {
    "message": "Ajoute 4 années à la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date 5/14/2011."
  },
  "Date.AddYears_Documentation.Examples_0_Code": {
    "message": "Date.AddYears(#date(2011, 5, 14), 4)"
  },
  "Date.AddYears_Documentation.Examples_0_Result": {
    "message": "#date(2015, 5, 14)"
  },
  "Date.AddYears_Documentation.Examples_1_Description": {
    "message": "Ajoute 10 années à la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date et l'heure 5/14/2011 08:15:22 AM."
  },
  "Date.AddYears_Documentation.Examples_1_Code": {
    "message": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)"
  },
  "Date.AddYears_Documentation.Examples_1_Result": {
    "message": "#datetime(2021, 5, 14, 8, 15, 22)"
  },
  "Date.IsInNextNDays_Documentation.Name": {
    "message": "Date.IsInNextNDays"
  },
  "Date.IsInNextNDays_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de jours suivants, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la journée actuelle."
  },
  "Date.IsInNextNDays_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de jours suivants, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la journée actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>days</code> : Nombre de jours.</li>\r\n      </ul>"
  },
  "Date.IsInNextNDays_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextNDays_Documentation.Examples_0_Description": {
    "message": "Détermine si le jour qui suit l'heure système actuelle tombe dans les deux jours suivants."
  },
  "Date.IsInNextNDays_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)"
  },
  "Date.IsInNextNDays_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextNMonths_Documentation.Name": {
    "message": "Date.IsInNextNMonths"
  },
  "Date.IsInNextNMonths_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de mois suivants, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel."
  },
  "Date.IsInNextNMonths_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de mois suivants, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>months</code> : Nombre de mois.</li>\r\n      </ul>"
  },
  "Date.IsInNextNMonths_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextNMonths_Documentation.Examples_0_Description": {
    "message": "Détermine si le mois qui suit l'heure système actuelle tombe pendant les deux mois suivants."
  },
  "Date.IsInNextNMonths_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)"
  },
  "Date.IsInNextNMonths_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextNQuarters_Documentation.Name": {
    "message": "Date.IsInNextNQuarters"
  },
  "Date.IsInNextNQuarters_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de trimestres suivants, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel."
  },
  "Date.IsInNextNQuarters_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de trimestres suivants, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>quarters</code> : Nombre de trimestres.</li>\r\n      </ul>"
  },
  "Date.IsInNextNQuarters_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextNQuarters_Documentation.Examples_0_Description": {
    "message": "Détermine si le trimestre qui suit l'heure système actuelle tombe pendant les deux prochains trimestres."
  },
  "Date.IsInNextNQuarters_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)"
  },
  "Date.IsInNextNQuarters_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextNWeeks_Documentation.Name": {
    "message": "Date.IsInNextNWeeks"
  },
  "Date.IsInNextNWeeks_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de semaines suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle."
  },
  "Date.IsInNextNWeeks_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de semaines suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>weeks</code> : Nombre de semaines.</li>\r\n      </ul>"
  },
  "Date.IsInNextNWeeks_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextNWeeks_Documentation.Examples_0_Description": {
    "message": "Détermine si la semaine qui suit l'heure système actuelle tombe pendant les deux prochaines semaines."
  },
  "Date.IsInNextNWeeks_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)"
  },
  "Date.IsInNextNWeeks_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextNYears_Documentation.Name": {
    "message": "Date.IsInNextNYears"
  },
  "Date.IsInNextNYears_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre d'années suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle."
  },
  "Date.IsInNextNYears_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre d'années suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>years</code> : Nombre d'années.</li>\r\n      </ul>"
  },
  "Date.IsInNextNYears_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextNYears_Documentation.Examples_0_Description": {
    "message": "Détermine si l'année qui suit l'heure système actuelle tombe pendant les deux prochaines années."
  },
  "Date.IsInNextNYears_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)"
  },
  "Date.IsInNextNYears_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousNDays_Documentation.Name": {
    "message": "Date.IsInPreviousNDays"
  },
  "Date.IsInPreviousNDays_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de jours précédents, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la journée actuelle."
  },
  "Date.IsInPreviousNDays_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de jours précédents, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la journée actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>days</code> : Nombre de jours.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousNDays_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousNDays_Documentation.Examples_0_Description": {
    "message": "Détermine si le jour qui précède l'heure système actuelle tombe pendant les deux jours précédents."
  },
  "Date.IsInPreviousNDays_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)"
  },
  "Date.IsInPreviousNDays_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousNMonths_Documentation.Name": {
    "message": "Date.IsInPreviousNMonths"
  },
  "Date.IsInPreviousNMonths_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de mois précédents, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel."
  },
  "Date.IsInPreviousNMonths_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de mois précédents, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>months</code> : Nombre de mois.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousNMonths_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousNMonths_Documentation.Examples_0_Description": {
    "message": "Détermine si le mois qui précède l'heure système actuelle tombe pendant les deux mois précédents."
  },
  "Date.IsInPreviousNMonths_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)"
  },
  "Date.IsInPreviousNMonths_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousNQuarters_Documentation.Name": {
    "message": "Date.IsInPreviousNQuarters"
  },
  "Date.IsInPreviousNQuarters_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de trimestres précédents, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel."
  },
  "Date.IsInPreviousNQuarters_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de trimestres précédents, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>quarters</code> : Nombre de trimestres.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousNQuarters_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousNQuarters_Documentation.Examples_0_Description": {
    "message": "Détermine si le trimestre qui précède l'heure système actuelle tombe pendant les deux trimestres précédents."
  },
  "Date.IsInPreviousNQuarters_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)"
  },
  "Date.IsInPreviousNQuarters_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousNWeeks_Documentation.Name": {
    "message": "Date.IsInPreviousNWeeks"
  },
  "Date.IsInPreviousNWeeks_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de semaines précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle."
  },
  "Date.IsInPreviousNWeeks_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de semaines précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>weeks</code> : Nombre de semaines.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousNWeeks_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousNWeeks_Documentation.Examples_0_Description": {
    "message": "Détermine si la semaine qui précède l'heure système actuelle tombe pendant les deux semaines précédentes."
  },
  "Date.IsInPreviousNWeeks_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)"
  },
  "Date.IsInPreviousNWeeks_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousNYears_Documentation.Name": {
    "message": "Date.IsInPreviousNYears"
  },
  "Date.IsInPreviousNYears_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre d'années précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle."
  },
  "Date.IsInPreviousNYears_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre d'années précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>years</code> : Nombre d'années.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousNYears_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousNYears_Documentation.Examples_0_Description": {
    "message": "Détermine si l'année qui précède l'heure système actuelle tombe pendant les deux années précédentes."
  },
  "Date.IsInPreviousNYears_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)"
  },
  "Date.IsInPreviousNYears_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.AddZone_Documentation.Name": {
    "message": "DateTime.AddZone"
  },
  "DateTime.AddZone_Documentation.Description": {
    "message": "Ajoute les informations de fuseau horaire pour la valeur Date/Heure."
  },
  "DateTime.AddZone_Documentation.LongDescription": {
    "message": "Ajoute des informations de fuseau horaire à la valeur <code>dateTime</code>. Les informations de fuseau horaire incluent <code>timezoneHours</code> et éventuellement <code>timezoneMinutes</code>, qui spécifient le décalage souhaité par rapport à l’heure UTC."
  },
  "DateTime.AddZone_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.AddZone_Documentation.Examples_0_Description": {
    "message": "Définissez le fuseau horaire sur UTC+7:30 (7 heures et 30 minutes après UTC)."
  },
  "DateTime.AddZone_Documentation.Examples_0_Code": {
    "message": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)"
  },
  "DateTime.AddZone_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
  },
  "DateTime.IsInNextNHours_Documentation.Name": {
    "message": "DateTime.IsInNextNHours"
  },
  "DateTime.IsInNextNHours_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre d'heures suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle."
  },
  "DateTime.IsInNextNHours_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre d'heures suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>hours</code> : Nombre d'heures.</li>\r\n      </ul>"
  },
  "DateTime.IsInNextNHours_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInNextNHours_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure qui suit l'heure système actuelle tombe pendant les deux prochaines heures."
  },
  "DateTime.IsInNextNHours_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)"
  },
  "DateTime.IsInNextNHours_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInNextNMinutes_Documentation.Name": {
    "message": "DateTime.IsInNextNMinutes"
  },
  "DateTime.IsInNextNMinutes_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de minutes suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle."
  },
  "DateTime.IsInNextNMinutes_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de minutes suivantes, par rapport à la date et l'heure actuelles du système. Notez que la fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>minutes</code> : Nombre de minutes.</li>\r\n      </ul>"
  },
  "DateTime.IsInNextNMinutes_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInNextNMinutes_Documentation.Examples_0_Description": {
    "message": "Détermine si la minute qui suit l'heure système actuelle tombe pendant les deux prochaines minutes."
  },
  "DateTime.IsInNextNMinutes_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)"
  },
  "DateTime.IsInNextNMinutes_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInNextNSeconds_Documentation.Name": {
    "message": "DateTime.IsInNextNSeconds"
  },
  "DateTime.IsInNextNSeconds_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de secondes suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle."
  },
  "DateTime.IsInNextNSeconds_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de secondes suivantes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>seconds</code> : Nombre de secondes.</li>\r\n      </ul>"
  },
  "DateTime.IsInNextNSeconds_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInNextNSeconds_Documentation.Examples_0_Description": {
    "message": "Détermine si la seconde qui suit l'heure système actuelle tombe pendant les deux prochaines secondes."
  },
  "DateTime.IsInNextNSeconds_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)"
  },
  "DateTime.IsInNextNSeconds_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInPreviousNHours_Documentation.Name": {
    "message": "DateTime.IsInPreviousNHours"
  },
  "DateTime.IsInPreviousNHours_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre d'heures précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle."
  },
  "DateTime.IsInPreviousNHours_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre d'heures précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>hours</code> : Nombre d'heures.</li>\r\n      </ul>"
  },
  "DateTime.IsInPreviousNHours_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInPreviousNHours_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure précédant l'heure système actuelle tombe pendant les deux heures précédentes."
  },
  "DateTime.IsInPreviousNHours_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)"
  },
  "DateTime.IsInPreviousNHours_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInPreviousNMinutes_Documentation.Name": {
    "message": "DateTime.IsInPreviousNMinutes"
  },
  "DateTime.IsInPreviousNMinutes_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de minutes précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle."
  },
  "DateTime.IsInPreviousNMinutes_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de minutes précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>minutes</code> : Nombre de minutes.</li>\r\n      </ul>"
  },
  "DateTime.IsInPreviousNMinutes_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInPreviousNMinutes_Documentation.Examples_0_Description": {
    "message": "Détermine si la minute précédant l'heure système actuelle tombe pendant les deux minutes précédentes."
  },
  "DateTime.IsInPreviousNMinutes_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)"
  },
  "DateTime.IsInPreviousNMinutes_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInPreviousNSeconds_Documentation.Name": {
    "message": "DateTime.IsInPreviousNSeconds"
  },
  "DateTime.IsInPreviousNSeconds_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le nombre de secondes précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle."
  },
  "DateTime.IsInPreviousNSeconds_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le nombre de secondes précédentes, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      <li><code>seconds</code> : Nombre de secondes.</li>\r\n      </ul>"
  },
  "DateTime.IsInPreviousNSeconds_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInPreviousNSeconds_Documentation.Examples_0_Description": {
    "message": "Détermine si la seconde précédant l'heure système actuelle tombe pendant les deux secondes précédentes."
  },
  "DateTime.IsInPreviousNSeconds_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)"
  },
  "DateTime.IsInPreviousNSeconds_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTimeZone.SwitchZone_Documentation.Name": {
    "message": "DateTimeZone.SwitchZone"
  },
  "DateTimeZone.SwitchZone_Documentation.Description": {
    "message": "Modifie le fuseau horaire de la valeur."
  },
  "DateTimeZone.SwitchZone_Documentation.LongDescription": {
    "message": "Remplace les informations de fuseau horaire de la valeur datetimezone <code>dateTimeZone</code> par les nouvelles informations de fuseau horaire fournies par <code>timezoneHours</code> et, au besoin, par <code>timezoneMinutes</code>.\r\n    Si <code>dateTimeZone</code> n'a pas de composant de fuseau horaire, une exception est levée."
  },
  "DateTimeZone.SwitchZone_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.SwitchZone_Documentation.Examples_0_Description": {
    "message": "Modifiez les informations de fuseau horaire pour #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) à 8 heures."
  },
  "DateTimeZone.SwitchZone_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)"
  },
  "DateTimeZone.SwitchZone_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
  },
  "DateTimeZone.SwitchZone_Documentation.Examples_1_Description": {
    "message": "Modifiez les informations de fuseau horaire pour #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) à -30 minutes."
  },
  "DateTimeZone.SwitchZone_Documentation.Examples_1_Code": {
    "message": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)"
  },
  "DateTimeZone.SwitchZone_Documentation.Examples_1_Result": {
    "message": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
  },
  "Embedded.Value_Documentation.Name": {
    "message": "Embedded.Value"
  },
  "Embedded.Value_Documentation.Description": {
    "message": "Accède à une valeur par nom dans une application Web hybride incorporée."
  },
  "Embedded.Value_Documentation.LongDescription": {
    "message": "Accède à une valeur par nom dans une application Web hybride incorporée."
  },
  "Embedded.Value_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Function.From_Documentation.Name": {
    "message": "Function.From"
  },
  "Function.From_Documentation.Description": {
    "message": "Crée une fonction avec une signature de paramètre spécifique sur une fonction qui prend un seul argument de liste"
  },
  "Function.From_Documentation.LongDescription": {
    "message": "Prend une fonction unaire <code>function</code> et crée une nouvelle fonction avec le type <code>functionType</code> qui crée une liste de ses arguments et la passe à <code>function</code>."
  },
  "Function.From_Documentation.Category": {
    "message": "Function"
  },
  "Function.From_Documentation.Examples_0_Description": {
    "message": "Convertit List.Sum en fonction à deux arguments dont les arguments sont ajoutés ensemble"
  },
  "Function.From_Documentation.Examples_0_Code": {
    "message": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)"
  },
  "Function.From_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "Function.From_Documentation.Examples_1_Description": {
    "message": "Convertit une fonction prenant une liste en fonction à deux arguments"
  },
  "Function.From_Documentation.Examples_1_Code": {
    "message": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")"
  },
  "Function.From_Documentation.Examples_1_Result": {
    "message": "\"21\""
  },
  "Function.Invoke_Documentation.Name": {
    "message": "Function.Invoke"
  },
  "Function.Invoke_Documentation.Description": {
    "message": "Appelle la fonction spécifiée"
  },
  "Function.Invoke_Documentation.LongDescription": {
    "message": "Appelle la fonction spécifiée avec la liste d'arguments spécifiée et retourne le résultat."
  },
  "Function.Invoke_Documentation.Category": {
    "message": "Function"
  },
  "Function.Invoke_Documentation.Examples_0_Description": {
    "message": "Appelle Record.FieldNames avec un argument [A=1, B=2]"
  },
  "Function.Invoke_Documentation.Examples_0_Code": {
    "message": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})"
  },
  "Function.Invoke_Documentation.Examples_0_Result": {
    "message": "{\"A\", \"B\"}"
  },
  "Function.InvokeAfter_Documentation.Name": {
    "message": "Function.InvokeAfter"
  },
  "Function.InvokeAfter_Documentation.Description": {
    "message": "Appelle la fonction donnée une fois le délai spécifié écoulé."
  },
  "Function.InvokeAfter_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'appel de <code>function</code> une fois le délai <code>delay</code> écoulé."
  },
  "Function.InvokeAfter_Documentation.Category": {
    "message": "Function"
  },
  "Function.ScalarVector_Documentation.Name": {
    "message": "Function.ScalarVector"
  },
  "Function.ScalarVector_Documentation.Description": {
    "message": "Crée une fonction scalaire sur une fonction vectorielle, avec traitement par lot de plusieurs appels."
  },
  "Function.ScalarVector_Documentation.LongDescription": {
    "message": "<p>Retourne une fonction scalaire de type <code>scalarFunctionType</code> qui appelle <code>vectorFunction</code> avec une seule ligne d'arguments et retourne sa sortie unique. Quand la fonction scalaire est appliquée à plusieurs reprises pour chaque ligne d'une table d'entrées, comme dans Table.AddColumn, <code>vectorFunction</code> est appliqué à la place, une fois pour toutes les entrées.</p>\r\n<p>Une table dont les colonnes correspondent en termes de nom et de position aux paramètres de <code>scalarFunctionType</code> est passée à <code>vectorFunction</code>. Chaque ligne de cette table contient les arguments d'un appel à la fonction scalaire, les colonnes correspondant aux paramètres de <code>scalarFunctionType</code>.</p>\r\n<p><code>vectorFunction</code> doit retourner une liste de la même longueur que la table d'entrée, dont l'élément à chaque position doit correspondre au résultat de l'évaluation de la fonction scalaire sur la ligne d'entrée à la même position.</p>\r\n<p>Comme il est prévu que la table d'entrée soit fournie en streaming, <code>vectorFunction</code> est censé diffuser en streaming sa sortie à mesure que les entrées arrivent (celles-ci étant traitées un bloc à la fois). Notez que <code>vectorFunction</code> ne doit énumérer sa table d'entrée qu'une seule fois.</p>"
  },
  "Function.ScalarVector_Documentation.Category": {
    "message": "Function"
  },
  "GeographyPoint.From_Documentation.Name": {
    "message": "GeographyPoint.From"
  },
  "GeographyPoint.From_Documentation.Description": {
    "message": "Crée un enregistrement représentant un point géographique à partir des parties constituantes."
  },
  "GeographyPoint.From_Documentation.LongDescription": {
    "message": "Crée un enregistrement représentant un point géographique à partir de ses parties constituantes, telles que la longitude, la latitude et, le cas échéant, l’élévation (Z) et la mesure (M). Un ID de référence spatial (SRID) facultatif peut être fourni s’il est différent de la valeur par défaut (4326)."
  },
  "GeographyPoint.From_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "GeometryPoint.From_Documentation.Name": {
    "message": "GeometryPoint.From"
  },
  "GeometryPoint.From_Documentation.Description": {
    "message": "Crée un enregistrement représentant un point géométrique à partir des parties constituantes."
  },
  "GeometryPoint.From_Documentation.LongDescription": {
    "message": "Crée un enregistrement représentant un point géographique à partir de ses parties constituantes, telles que les coordonnées X et Y et, le cas échéant, les coordonnées (Z) et la mesure (M). Un ID de référence spatial (SRID) facultatif peut être fourni s’il est différent de la valeur par défaut (0)."
  },
  "GeometryPoint.From_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "HexagonSmartApi.Typecast_Documentation.Name": {
    "message": "Typecast"
  },
  "HexagonSmartApi.Typecast_Documentation.LongDescription": {
    "message": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
  },
  "Identity.From_Documentation.Name": {
    "message": "Identity.From"
  },
  "Identity.From_Documentation.Description": {
    "message": "Crée une identité."
  },
  "Identity.From_Documentation.LongDescription": {
    "message": "Crée une identité."
  },
  "Identity.From_Documentation.Category": {
    "message": "Accessing data"
  },
  "Identity.IsMemberOf_Documentation.Name": {
    "message": "Identity.IsMemberOf"
  },
  "Identity.IsMemberOf_Documentation.Description": {
    "message": "Détermine si une identité est membre d'une collection d'identités."
  },
  "Identity.IsMemberOf_Documentation.LongDescription": {
    "message": "Détermine si une identité est membre d'une collection d'identités."
  },
  "Identity.IsMemberOf_Documentation.Category": {
    "message": "Accessing data"
  },
  "List.Alternate_Documentation.Name": {
    "message": "List.Alternate"
  },
  "List.Alternate_Documentation.Description": {
    "message": "Retourne une liste composée tous les éléments de décalage impairs dans une liste."
  },
  "List.Alternate_Documentation.LongDescription": {
    "message": "Retourne une liste composée tous les éléments de décalage impairs dans une liste. Prend et ignore les valeurs de la liste <code>list</code> en fonction des paramètres.\r\n    <ul>\r\n    <li><code>count</code> : spécifie le nombre de valeurs qui sont ignorées chaque fois.</li>\r\n    <li><code>repeatInterval</code> : intervalle de répétition facultatif qui indique combien de valeurs sont ajoutées entre les valeurs ignorées.</li>\r\n    <li><code>offset</code> : paramètre de décalage facultatif qui commence à ignorer les valeurs au niveau du décalage initial.</li>\r\n    </ul>"
  },
  "List.Alternate_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Alternate_Documentation.Examples_0_Description": {
    "message": "Crée une liste depuis {1..10} qui ignore le premier nombre."
  },
  "List.Alternate_Documentation.Examples_0_Code": {
    "message": "List.Alternate({1..10}, 1)"
  },
  "List.Alternate_Documentation.Examples_0_Result": {
    "message": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
  },
  "List.Alternate_Documentation.Examples_1_Description": {
    "message": "Crée une liste depuis {1..10} qui ignore un nombre sur deux."
  },
  "List.Alternate_Documentation.Examples_1_Code": {
    "message": "List.Alternate({1..10}, 1, 1)"
  },
  "List.Alternate_Documentation.Examples_1_Result": {
    "message": "{2, 4, 6, 8, 10}"
  },
  "List.Alternate_Documentation.Examples_2_Description": {
    "message": "Crée une liste depuis {1..10} qui démarre à 1 et ignore un nombre sur deux."
  },
  "List.Alternate_Documentation.Examples_2_Code": {
    "message": "List.Alternate({1..10}, 1, 1, 1)"
  },
  "List.Alternate_Documentation.Examples_2_Result": {
    "message": "{1, 3, 5, 7, 9}"
  },
  "List.Alternate_Documentation.Examples_3_Description": {
    "message": "Crée une liste depuis {1..10} qui démarre à 1, ignore une valeur, conserve deux valeurs, et ainsi de suite."
  },
  "List.Alternate_Documentation.Examples_3_Code": {
    "message": "List.Alternate({1..10}, 1, 2, 1)"
  },
  "List.Alternate_Documentation.Examples_3_Result": {
    "message": "{1, 3, 4, 6, 7, 9, 10}"
  },
  "List.Contains_Documentation.Name": {
    "message": "List.Contains"
  },
  "List.Contains_Documentation.Description": {
    "message": "Indique si la liste contient la valeur."
  },
  "List.Contains_Documentation.LongDescription": {
    "message": "Indique si la liste contient <code>list</code> la valeur <code>value</code>.\r\n    Retourne true si la valeur est trouvée dans la liste ; sinon false. La valeur du critère d'équation facultatif, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.Contains_Documentation.Category": {
    "message": "List.Membership functions"
  },
  "List.Contains_Documentation.Examples_0_Description": {
    "message": "Détermine si la liste {1, 2, 3, 4, 5} contient 3."
  },
  "List.Contains_Documentation.Examples_0_Code": {
    "message": "List.Contains({1, 2, 3, 4, 5}, 3)"
  },
  "List.Contains_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.Contains_Documentation.Examples_1_Description": {
    "message": "Détermine si la liste {1, 2, 3, 4, 5} contient 6."
  },
  "List.Contains_Documentation.Examples_1_Code": {
    "message": "List.Contains({1, 2, 3, 4, 5}, 6)"
  },
  "List.Contains_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.ContainsAll_Documentation.Name": {
    "message": "List.ContainsAll"
  },
  "List.ContainsAll_Documentation.Description": {
    "message": "Indique si une liste inclut toutes les valeurs d'une autre liste."
  },
  "List.ContainsAll_Documentation.LongDescription": {
    "message": "Indique si la liste <code>list</code> inclut toutes les valeurs d'une autre liste, <code>values</code>.\r\n    Retourne true si la valeur est trouvée dans la liste ; sinon false. La valeur du critère d'équation facultatif, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.ContainsAll_Documentation.Category": {
    "message": "List.Membership functions"
  },
  "List.ContainsAll_Documentation.Examples_0_Description": {
    "message": "Détermine si la liste {1, 2, 3, 4, 5} contient 3 et 4."
  },
  "List.ContainsAll_Documentation.Examples_0_Code": {
    "message": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})"
  },
  "List.ContainsAll_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.ContainsAll_Documentation.Examples_1_Description": {
    "message": "Détermine si la liste {1, 2, 3, 4, 5} contient 5 et 6."
  },
  "List.ContainsAll_Documentation.Examples_1_Code": {
    "message": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})"
  },
  "List.ContainsAll_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.ContainsAny_Documentation.Name": {
    "message": "List.ContainsAny"
  },
  "List.ContainsAny_Documentation.Description": {
    "message": "Indique si une liste inclut l'une des valeurs d'une autre liste."
  },
  "List.ContainsAny_Documentation.LongDescription": {
    "message": "Indique si la liste <code>list</code> inclut l'une des valeurs d'une autre liste, <code>values</code>.\r\n        Retourne true si la valeur est trouvée dans la liste ; sinon false. La valeur du critère d'équation facultatif, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.ContainsAny_Documentation.Category": {
    "message": "List.Membership functions"
  },
  "List.ContainsAny_Documentation.Examples_0_Description": {
    "message": "Détermine si la liste {1, 2, 3, 4, 5} contient 3 ou 9."
  },
  "List.ContainsAny_Documentation.Examples_0_Code": {
    "message": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})"
  },
  "List.ContainsAny_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.ContainsAny_Documentation.Examples_1_Description": {
    "message": "Détermine si la liste {1, 2, 3, 4, 5} contient 6 ou 7."
  },
  "List.ContainsAny_Documentation.Examples_1_Code": {
    "message": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})"
  },
  "List.ContainsAny_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.Covariance_Documentation.Name": {
    "message": "List.Covariance"
  },
  "List.Covariance_Documentation.Description": {
    "message": "Retourne la covariance entre les deux listes de nombres."
  },
  "List.Covariance_Documentation.LongDescription": {
    "message": "Retourne la covariance entre deux listes, <code>numberList1</code> et <code>numberList2</code>. <code>numberList1</code> et <code>numberList2</code> doivent contenir le même nombre de valeurs <code>number</code>."
  },
  "List.Covariance_Documentation.Category": {
    "message": "List.Numerics"
  },
  "List.Covariance_Documentation.Examples_0_Description": {
    "message": "Calcule la covariance entre deux listes."
  },
  "List.Covariance_Documentation.Examples_0_Code": {
    "message": "List.Covariance({1, 2, 3}, {1, 2, 3})"
  },
  "List.Covariance_Documentation.Examples_0_Result": {
    "message": "0.66666666666666607"
  },
  "List.Difference_Documentation.Name": {
    "message": "List.Difference"
  },
  "List.Difference_Documentation.Description": {
    "message": "Retourne la différence entre les deux listes spécifiées."
  },
  "List.Difference_Documentation.LongDescription": {
    "message": "Retourne les éléments dans la liste <code>list1</code> qui n'apparaissent pas dans la liste <code>list2</code>. Les valeurs dupliquées sont prises en charge.\r\n    La valeur du critère d'équation facultatif, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.Difference_Documentation.Category": {
    "message": "List.Set operations"
  },
  "List.Difference_Documentation.Examples_0_Description": {
    "message": "Recherche les éléments dans la liste {1, 2, 3, 4, 5} qui n'apparaissent pas dans {4, 5, 3}."
  },
  "List.Difference_Documentation.Examples_0_Code": {
    "message": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})"
  },
  "List.Difference_Documentation.Examples_0_Result": {
    "message": "{1, 2}"
  },
  "List.Difference_Documentation.Examples_1_Description": {
    "message": "Recherche les éléments dans la liste {1, 2} qui n'apparaissent pas dans {1, 2, 3}."
  },
  "List.Difference_Documentation.Examples_1_Code": {
    "message": "List.Difference({1, 2}, {1, 2, 3})"
  },
  "List.Difference_Documentation.Examples_1_Result": {
    "message": "{}"
  },
  "List.FindText_Documentation.Name": {
    "message": "List.FindText"
  },
  "List.FindText_Documentation.Description": {
    "message": "Retourne une liste des valeurs (champs d'enregistrement compris) qui contiennent le texte spécifié."
  },
  "List.FindText_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs à partir de la liste <code>list</code> qui contenait la valeur <code>text</code>."
  },
  "List.FindText_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.FindText_Documentation.Examples_0_Description": {
    "message": "Recherche les valeurs de texte dans la liste {\"a\", \"b\", \"ab\"} qui correspondent à « a ». "
  },
  "List.FindText_Documentation.Examples_0_Code": {
    "message": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")"
  },
  "List.FindText_Documentation.Examples_0_Result": {
    "message": "{\"a\", \"ab\"}"
  },
  "List.FirstN_Documentation.Name": {
    "message": "List.FirstN"
  },
  "List.FirstN_Documentation.Description": {
    "message": "Retourne le premier jeu d'éléments de la liste en spécifiant le nombre d'éléments à retourner ou une condition éligible."
  },
  "List.FirstN_Documentation.LongDescription": {
    "message": " <ul>\r\n  <li>Si un nombre est spécifié, autant d'éléments sont retournés. </li>\r\n  <li>Si une condition est spécifiée, tous les éléments qui satisfont initialement la condition sont retournés. Lorsqu'un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. </li>\r\n </ul>"
  },
  "List.FirstN_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.FirstN_Documentation.Examples_0_Description": {
    "message": "Recherche les valeurs initiales dans la liste {3, 4, 5, -1, 7, 8, 2} qui sont supérieures à 0."
  },
  "List.FirstN_Documentation.Examples_0_Code": {
    "message": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)"
  },
  "List.FirstN_Documentation.Examples_0_Result": {
    "message": "{3, 4, 5}"
  },
  "List.MatchesAll_Documentation.Name": {
    "message": "List.MatchesAll"
  },
  "List.MatchesAll_Documentation.Description": {
    "message": "Retourne true si la fonction de condition est satisfaite par toutes les valeurs dans la liste."
  },
  "List.MatchesAll_Documentation.LongDescription": {
    "message": "Retourne <code>true</code> si la fonction de condition <code>condition</code> est satisfaite par toutes les valeurs dans la liste <code>list</code>, sinon retourne <code>false</code>."
  },
  "List.MatchesAll_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.MatchesAll_Documentation.Examples_0_Description": {
    "message": "Détermine si toutes les valeurs initiales dans la liste {11, 12, 13} sont supérieures à 10."
  },
  "List.MatchesAll_Documentation.Examples_0_Code": {
    "message": "List.MatchesAll({11, 12, 13}, each _  > 10)"
  },
  "List.MatchesAll_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.MatchesAll_Documentation.Examples_1_Description": {
    "message": "Détermine si toutes les valeurs initiales dans la liste {1, 2, 3} sont supérieures à 10."
  },
  "List.MatchesAll_Documentation.Examples_1_Code": {
    "message": "List.MatchesAll({1, 2, 3}, each _  > 10)"
  },
  "List.MatchesAll_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.MatchesAny_Documentation.Name": {
    "message": "List.MatchesAny"
  },
  "List.MatchesAny_Documentation.Description": {
    "message": "Retourne true si la fonction de condition est satisfaite par une valeur quelconque."
  },
  "List.MatchesAny_Documentation.LongDescription": {
    "message": "Retourne <code>true</code> si la fonction de condition <code>condition</code> est satisfaite par l'une des valeurs dans la liste <code>list</code>, sinon retourne <code>false</code>."
  },
  "List.MatchesAny_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.MatchesAny_Documentation.Examples_0_Description": {
    "message": "Détermine si l'une des valeurs dans la liste {9, 10, 11} est supérieure à 10."
  },
  "List.MatchesAny_Documentation.Examples_0_Code": {
    "message": "List.MatchesAny({9, 10, 11}, each _  > 10)"
  },
  "List.MatchesAny_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.MatchesAny_Documentation.Examples_1_Description": {
    "message": "Détermine si l'une des valeurs dans la liste {1, 2, 3} est supérieure à 10."
  },
  "List.MatchesAny_Documentation.Examples_1_Code": {
    "message": "List.MatchesAny({1, 2, 3}, each _  > 10)"
  },
  "List.MatchesAny_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.MaxN_Documentation.Name": {
    "message": "List.MaxN"
  },
  "List.MaxN_Documentation.Description": {
    "message": "Retourne les valeurs maximales dans la liste. Le nombre de valeurs à retourner, ou une condition de filtrage, doit être spécifié."
  },
  "List.MaxN_Documentation.LongDescription": {
    "message": "Retourne les valeurs maximales dans la liste, <code>list</code>.\r\n    Une fois que les lignes sont triées, des paramètres facultatifs peuvent être spécifiés pour filtrer davantage le résultat. Le paramètre facultatif, <code>countOrCondition</code>, spécifie le nombre de valeurs à retourner ou une condition de filtrage. Le paramètre facultatif, <code>comparisonCriteria</code>, spécifie comment comparer les valeurs dans la liste.\r\n <ul>\r\n        <li> <code>list</code>: liste des valeurs.</li>\r\n        <li> <code>countOrCondition</code> : si un nombre est spécifié, une liste de <code>countOrCondition</code> éléments au maximum par ordre ascendant est retournée. Si une condition est spécifiée, la liste des éléments qui satisfont initialement la condition est retournée. Quand un élément ne remplit pas la condition, aucun autre élément n'est pris en compte.</li>\r\n<li><code>comparisonCriteria</code> : <i>[Facultatif]</i> une valeur <code>comparisonCriteria</code> facultative peut être spécifiée pour déterminer comment comparer les éléments dans la liste. Si ce paramètre a la valeur null, le comparateur par défaut est utilisé.\r\n </ul>"
  },
  "List.MaxN_Documentation.Category": {
    "message": "List.Ordering"
  },
  "List.MinN_Documentation.Name": {
    "message": "List.MinN"
  },
  "List.MinN_Documentation.Description": {
    "message": "Retourne les valeurs minimales dans la liste. Le nombre de valeurs à retourner, ou une condition de filtrage, peut être spécifié."
  },
  "List.MinN_Documentation.LongDescription": {
    "message": "Retourne les valeurs minimales dans la liste, <code>list</code>.\r\n    Le paramètre <code>countOrCondition</code> spécifie le nombre de valeurs à retourner ou une condition de filtrage. Le paramètre facultatif, <code>comparisonCriteria</code>, spécifie comment comparer les valeurs dans la liste.\r\n <ul>\r\n        <li> <code>list</code>\r: liste des valeurs.</li>\n        <li> <code>countOrCondition</code>: si un nombre est spécifié, une liste de <code>countOrCondition</code> éléments au maximum par ordre ascendant est retournée. Si une condition est spécifiée, la liste des éléments qui satisfont initialement la condition est retournée. Quand un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. Si ce paramètre a la valeur null, la valeur unique la plus petite dans la liste est retournée.</li>\r\n<li><code>comparisonCriteria</code> : <i>[Facultatif]</i> une valeur <code>comparisonCriteria</code> facultative peut être spécifiée pour déterminer comment comparer les éléments dans la liste. Si ce paramètre a la valeur null, le comparateur par défaut est utilisé.\r\n </ul>"
  },
  "List.MinN_Documentation.Category": {
    "message": "List.Ordering"
  },
  "List.MinN_Documentation.Examples_0_Description": {
    "message": "Recherche les 5 valeurs les plus petites dans la liste <code>{3, 4, 5, -1, 7, 8, 2}</code>."
  },
  "List.MinN_Documentation.Examples_0_Code": {
    "message": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)"
  },
  "List.MinN_Documentation.Examples_0_Result": {
    "message": "{-1, 2, 3, 4, 5}"
  },
  "List.Numbers_Documentation.Name": {
    "message": "List.Numbers"
  },
  "List.Numbers_Documentation.Description": {
    "message": "Retourne une liste de nombres en fonction d'une valeur initiale, d'un nombre et d'une valeur incrémentielle facultative."
  },
  "List.Numbers_Documentation.LongDescription": {
    "message": "Retourne une liste de nombres en fonction d'une valeur initiale, d'un nombre et d'une valeur incrémentielle facultative. La valeur d'incrément par défaut est 1.\r\n<ul>\r\n   <li><code>start</code> : valeur initiale dans la liste.</li>\r\n   <li><code>count</code> : nombre de valeurs à créer.</li>\r\n   <li><code>increment</code> : <i>[Facultatif]</i> valeur par laquelle incrémenter. Si les valeurs omises sont incrémentées par 1.</li>\r\n</ul>"
  },
  "List.Numbers_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.Numbers_Documentation.Examples_0_Description": {
    "message": "Génère une liste de 10 caractères consécutifs en partant de 1."
  },
  "List.Numbers_Documentation.Examples_0_Code": {
    "message": "List.Numbers(1, 10)"
  },
  "List.Numbers_Documentation.Examples_0_Result": {
    "message": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
  },
  "List.Numbers_Documentation.Examples_1_Description": {
    "message": "Génère une liste de 10 chiffres à partir de 1, avec un incrément de 2 pour chaque numéro suivant."
  },
  "List.Numbers_Documentation.Examples_1_Code": {
    "message": "List.Numbers(1, 10, 2)"
  },
  "List.Numbers_Documentation.Examples_1_Result": {
    "message": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
  },
  "List.Percentile_Documentation.Name": {
    "message": "List.Percentile"
  },
  "List.Percentile_Documentation.Description": {
    "message": "Retourne un ou plusieurs centiles d’échantillonnage correspondant aux probabilités spécifiées."
  },
  "List.Percentile_Documentation.LongDescription": {
    "message": "Retourne un ou plusieurs centiles d’échantillon de la liste <code>list</code>. Si la valeur <code>percentiles</code> est un nombre compris entre 0,0 et 1,0, elle est traitée en tant que centile et le résultat est\r\n    une valeur unique correspondant à cette probabilité. Si la valeur <code>percentiles</code> est une liste de nombres avec des valeurs comprises entre 0,0 et 1,0, le résultat est une liste de centiles\r\n    correspondant à la probabilité d’entrée. L’option PercentileMode dans <code>options</code> peut être utilisée par les utilisateurs avancés pour choisir une méthode d’interpolation plus spécifique, mais n’est pas recommandée pour la plupart des utilisations.\r\n    Les symboles prédéfinis <code>PercentileMode.ExcelInc</code> et <code>PercentileMode.ExcelExc</code> correspondent aux méthodes d’interpolation utilisées par les fonctions Excel\r\n    <code>CENTILE.INC</code> et <code>CENTILE.EXC</code>. Le comportement par défaut correspond à <code></code> PercentileMode.ExcelInc. Les symboles\r\n    <code>PercentileMode.SqlCont</code> et <code>PercentileMode.SqlDisc</code> correspondent au comportement de SQL Server pour <code>PERCENTILE_CONT</code> et\r\n    <code>PERCENTILE_DISC</code>, respectivement.\r\n  "
  },
  "List.Percentile_Documentation.Category": {
    "message": "List.Ordering"
  },
  "List.Percentile_Documentation.Examples_0_Description": {
    "message": "Recherchez le premier quartile de la liste <code>{5, 3, 1, 7, 9}</code>."
  },
  "List.Percentile_Documentation.Examples_0_Code": {
    "message": "List.Percentile({5, 3, 1, 7, 9}, 0.25)"
  },
  "List.Percentile_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "List.Percentile_Documentation.Examples_1_Description": {
    "message": "Recherche les quartiles de la liste <code> {5, 3, 1, 7, 9} </code> à l’aide d’une méthode d’interpolation correspondant à la fonction <code>PERCENTILE.EXC</code> d’Excel."
  },
  "List.Percentile_Documentation.Examples_1_Code": {
    "message": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])"
  },
  "List.Percentile_Documentation.Examples_1_Result": {
    "message": "{2, 5, 8}"
  },
  "List.PositionOf_Documentation.Name": {
    "message": "List.PositionOf"
  },
  "List.PositionOf_Documentation.Description": {
    "message": "Retourne les décalages d'une valeur dans une liste."
  },
  "List.PositionOf_Documentation.LongDescription": {
    "message": "Retourne le décalage auquel la valeur <code>value</code> apparaît dans la liste <code>list</code>. Retourne -1 si la valeur n'apparaît pas.\r\n    Un paramètre d'occurrence facultatif, <code>occurrence</code>, peut être spécifié.\r\n<ul>\r\n   <li><code>occurrence</code> : nombre maximal d'occurrences à signaler.</li>\r\n</ul>"
  },
  "List.PositionOf_Documentation.Category": {
    "message": "List.Membership functions"
  },
  "List.PositionOf_Documentation.Examples_0_Description": {
    "message": "Recherche la position dans la liste {1, 2, 3} à laquelle la valeur 3 apparaît."
  },
  "List.PositionOf_Documentation.Examples_0_Code": {
    "message": "List.PositionOf({1, 2, 3}, 3)"
  },
  "List.PositionOf_Documentation.Examples_0_Result": {
    "message": "2"
  },
  "List.PositionOfAny_Documentation.Name": {
    "message": "List.PositionOfAny"
  },
  "List.PositionOfAny_Documentation.Description": {
    "message": "Retourne le premier décalage d'une valeur dans une liste."
  },
  "List.PositionOfAny_Documentation.LongDescription": {
    "message": "Retourne le décalage dans la liste <code>list</code> de la première occurrence d'une valeur dans une liste <code>values</code>. Retourne -1 si aucune occurrence n'est trouvée.\r\n    Un paramètre d'occurrence facultatif, <code>occurrence</code>, peut être spécifié.\r\n<ul>\r\n   <li><code>occurrence</code> : nombre maximal d'occurrences pouvant être retournées.</li>\r\n</ul>"
  },
  "List.PositionOfAny_Documentation.Category": {
    "message": "List.Membership functions"
  },
  "List.PositionOfAny_Documentation.Examples_0_Description": {
    "message": "Recherche la première position dans la liste {1, 2, 3} à laquelle la valeur 2 ou 3 apparaît."
  },
  "List.PositionOfAny_Documentation.Examples_0_Code": {
    "message": "List.PositionOfAny({1, 2, 3}, {2, 3})"
  },
  "List.PositionOfAny_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "List.Range_Documentation.Name": {
    "message": "List.Range"
  },
  "List.Range_Documentation.Description": {
    "message": "Retourne un sous-ensemble de liste démarrant à un décalage."
  },
  "List.Range_Documentation.LongDescription": {
    "message": "Retourne un sous-ensemble de liste démarrant au décalage <code>list</code>. Un paramètre facultatif, <code>offset</code>, définit le nombre maximum d'éléments dans le sous-ensemble."
  },
  "List.Range_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Range_Documentation.Examples_0_Description": {
    "message": "Recherche le sous-ensemble démarrant au décalage 6 dans la liste des numéros 1 à 10."
  },
  "List.Range_Documentation.Examples_0_Code": {
    "message": "List.Range({1..10}, 6)"
  },
  "List.Range_Documentation.Examples_0_Result": {
    "message": "{7, 8, 9, 10}"
  },
  "List.Range_Documentation.Examples_1_Description": {
    "message": "Recherche le sous-ensemble de longueur 2 depuis le décalage 6, à partir de la liste des numéros 1 à 10."
  },
  "List.Range_Documentation.Examples_1_Code": {
    "message": "List.Range({1..10}, 6, 2)"
  },
  "List.Range_Documentation.Examples_1_Result": {
    "message": "{7, 8}"
  },
  "List.RemoveItems_Documentation.Name": {
    "message": "List.RemoveItems"
  },
  "List.RemoveItems_Documentation.Description": {
    "message": "Supprime des éléments de list1 qui sont présents dans la liste."
  },
  "List.RemoveItems_Documentation.LongDescription": {
    "message": "Supprime toutes les occurrences des valeurs spécifiées dans <code>list2</code> depuis <code>list1</code>. Si les valeurs dans <code>list2</code> n'existent pas dans <code>list1</code>, la liste d'origine est retournée."
  },
  "List.RemoveItems_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.RemoveItems_Documentation.Examples_0_Description": {
    "message": "Supprime des éléments de la liste {2, 4, 6} dans la liste {1, 2, 3, 4, 2, 5, 5}."
  },
  "List.RemoveItems_Documentation.Examples_0_Code": {
    "message": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})"
  },
  "List.RemoveItems_Documentation.Examples_0_Result": {
    "message": "{1, 3, 5, 5}"
  },
  "List.RemoveMatchingItems_Documentation.Name": {
    "message": "List.RemoveMatchingItems"
  },
  "List.RemoveMatchingItems_Documentation.Description": {
    "message": "Supprime toutes les occurrences des valeurs d'entrée."
  },
  "List.RemoveMatchingItems_Documentation.LongDescription": {
    "message": "Supprime toutes les occurrences des valeurs spécifiées dans <code>list2</code> depuis la liste <code>list1</code>. Si les valeurs dans <code>list2</code> n'existent pas dans <code>list1</code>, la liste d'origine est retournée.\r\n    La valeur du critère d'équation facultatif, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.RemoveMatchingItems_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.RemoveMatchingItems_Documentation.Examples_0_Description": {
    "message": "Crée une liste à partir {1, 2, 3, 4, 5, 5} sans {1, 5}."
  },
  "List.RemoveMatchingItems_Documentation.Examples_0_Code": {
    "message": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})"
  },
  "List.RemoveMatchingItems_Documentation.Examples_0_Result": {
    "message": "{2, 3, 4}"
  },
  "List.RemoveRange_Documentation.Name": {
    "message": "List.RemoveRange"
  },
  "List.RemoveRange_Documentation.Description": {
    "message": "Supprime le nombre de comptage des valeurs démarrant à la position spécifiée."
  },
  "List.RemoveRange_Documentation.LongDescription": {
    "message": "Supprime les valeurs <code>count</code> dans <code>list</code> démarrant à la position spécifiée, <code>index</code>."
  },
  "List.RemoveRange_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.RemoveRange_Documentation.Examples_0_Description": {
    "message": "Supprime 3 valeurs dans la liste {1, 2, 3, 4, -6, -2, -1, 5} en commençant à l'index 4."
  },
  "List.RemoveRange_Documentation.Examples_0_Code": {
    "message": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)"
  },
  "List.RemoveRange_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3, 4, 5}"
  },
  "List.Repeat_Documentation.Name": {
    "message": "List.Repeat"
  },
  "List.Repeat_Documentation.Description": {
    "message": "Retourne une liste qui contient un certain nombre de répétitions de la liste d'origine."
  },
  "List.Repeat_Documentation.LongDescription": {
    "message": "Retourne une liste qui contient <code>count</code> répétitions de la liste d'origine, <code>list</code>."
  },
  "List.Repeat_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.Repeat_Documentation.Examples_0_Description": {
    "message": "Crée une liste qui contient {1, 2} répété 3 fois."
  },
  "List.Repeat_Documentation.Examples_0_Code": {
    "message": "List.Repeat({1, 2}, 3)"
  },
  "List.Repeat_Documentation.Examples_0_Result": {
    "message": "{1, 2, 1, 2, 1, 2}"
  },
  "List.ReplaceMatchingItems_Documentation.Name": {
    "message": "List.ReplaceMatchingItems"
  },
  "List.ReplaceMatchingItems_Documentation.Description": {
    "message": "Applique chaque remplacement de { old, new }."
  },
  "List.ReplaceMatchingItems_Documentation.LongDescription": {
    "message": "Effectue les remplacements spécifiés dans la liste <code>list</code>. Une opération de remplacement <code>replacements</code> comprend une liste de deux valeurs, l'ancienne et la nouvelle valeur, fournies dans une liste.\r\n    La valeur du critère d'équation facultatif, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité."
  },
  "List.ReplaceMatchingItems_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.ReplaceMatchingItems_Documentation.Examples_0_Description": {
    "message": "Crée une liste {1, 2, 3, 4, 5} pour remplacer la valeur 5 par -5, et la valeur 1 par -1."
  },
  "List.ReplaceMatchingItems_Documentation.Examples_0_Code": {
    "message": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})"
  },
  "List.ReplaceMatchingItems_Documentation.Examples_0_Result": {
    "message": "{-1, 2, 3, 4, -5}"
  },
  "List.Select_Documentation.Name": {
    "message": "List.Select"
  },
  "List.Select_Documentation.Description": {
    "message": "Retourne une liste de valeurs qui correspondent à la condition."
  },
  "List.Select_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs à partir de la liste <code>list</code>, qui correspondent à la condition de sélection <code>selection</code>."
  },
  "List.Select_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Select_Documentation.Examples_0_Description": {
    "message": "Recherche les valeurs dans la liste {1, -3, 4, 9, -2} qui sont supérieures à 0."
  },
  "List.Select_Documentation.Examples_0_Code": {
    "message": "List.Select({1, -3, 4, 9, -2}, each _ > 0)"
  },
  "List.Select_Documentation.Examples_0_Result": {
    "message": "{1, 4, 9}"
  },
  "List.Split_Documentation.Name": {
    "message": "List.Split"
  },
  "List.Split_Documentation.Description": {
    "message": "Divise la liste spécifiée en liste de listes à l'aide de la taille de page spécifiée."
  },
  "List.Split_Documentation.LongDescription": {
    "message": "Se divise <code>list</code> en une liste de listes où le premier élément de la liste de sortie est une liste contenant les premiers <code>pageSize</code> éléments de\r\n    la liste source, l'élément suivant de la liste de sortie est une liste contenant les éléments <code>pageSize</code> suivants de la liste source, et ainsi de suite."
  },
  "List.Split_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.Transform_Documentation.Name": {
    "message": "List.Transform"
  },
  "List.Transform_Documentation.Description": {
    "message": "Retourne une liste de valeurs calculées à partir de cette liste."
  },
  "List.Transform_Documentation.LongDescription": {
    "message": "Retourne une nouvelle liste de valeurs en appliquant la fonction de transformation <code>transform</code> à la liste, <code>list</code>."
  },
  "List.Transform_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.Transform_Documentation.Examples_0_Description": {
    "message": "Ajoute 1 à chaque valeur dans la liste {1, 2}."
  },
  "List.Transform_Documentation.Examples_0_Code": {
    "message": "List.Transform({1, 2}, each _ + 1)"
  },
  "List.Transform_Documentation.Examples_0_Result": {
    "message": "{2, 3}"
  },
  "Number.Atan2_Documentation.Name": {
    "message": "Number.Atan2"
  },
  "Number.Atan2_Documentation.Description": {
    "message": "Renvoie l'arc tangente de la division des deux nombres."
  },
  "Number.Atan2_Documentation.LongDescription": {
    "message": "Renvoie l'arc tangente de la division des deux nombres, <code>y</code> et <code>x</code>. La division sera construite comme <code>y</code>/<code>x</code>."
  },
  "Number.Atan2_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.BitwiseAnd_Documentation.Name": {
    "message": "Number.BitwiseAnd"
  },
  "Number.BitwiseAnd_Documentation.Description": {
    "message": "Retourne le résultat d'une opération au niveau du bit « And » entre les deux entrées."
  },
  "Number.BitwiseAnd_Documentation.LongDescription": {
    "message": "Retourne le résultat d'une opération au niveau du bit « And » entre <code>number1</code> et <code>number2</code>."
  },
  "Number.BitwiseAnd_Documentation.Category": {
    "message": "Number.Bytes"
  },
  "Number.BitwiseOr_Documentation.Name": {
    "message": "Number.BitwiseOr"
  },
  "Number.BitwiseOr_Documentation.Description": {
    "message": "Retourne le résultat d'une opération au niveau du bit « Or » entre les deux entrées."
  },
  "Number.BitwiseOr_Documentation.LongDescription": {
    "message": "Retourne le résultat d'une opération au niveau du bit « Or » entre <code>number1</code> et <code>number2</code>."
  },
  "Number.BitwiseOr_Documentation.Category": {
    "message": "Number.Bytes"
  },
  "Number.BitwiseShiftLeft_Documentation.Name": {
    "message": "Number.BitwiseShiftLeft"
  },
  "Number.BitwiseShiftLeft_Documentation.Description": {
    "message": "Déplace l'ensemble de bits à gauche."
  },
  "Number.BitwiseShiftLeft_Documentation.LongDescription": {
    "message": "Retourne le résultat d'un déplacement au niveau du bit vers la gauche sur <code>number1</code>, en fonction du nombre de bits spécifié <code>number2</code>."
  },
  "Number.BitwiseShiftLeft_Documentation.Category": {
    "message": "Number.Bytes"
  },
  "Number.BitwiseShiftRight_Documentation.Name": {
    "message": "Number.BitwiseShiftRight"
  },
  "Number.BitwiseShiftRight_Documentation.Description": {
    "message": "Déplace l'ensemble de bits à droite."
  },
  "Number.BitwiseShiftRight_Documentation.LongDescription": {
    "message": "Retourne le résultat d'un déplacement au niveau du bit vers la droite sur <code>number1</code>, en fonction du nombre de bits spécifié <code>number2</code>."
  },
  "Number.BitwiseShiftRight_Documentation.Category": {
    "message": "Number.Bytes"
  },
  "Number.BitwiseXor_Documentation.Name": {
    "message": "Number.BitwiseXor"
  },
  "Number.BitwiseXor_Documentation.Description": {
    "message": "Retourne le résultat d'une opération au niveau du bit « XOR » (Exclusive-OR) entre les deux entrées."
  },
  "Number.BitwiseXor_Documentation.LongDescription": {
    "message": "Retourne le résultat d'une opération au niveau du bit « XOR » (Exclusive-OR) entre <code>number1</code> et <code>number2</code>."
  },
  "Number.BitwiseXor_Documentation.Category": {
    "message": "Number.Bytes"
  },
  "Number.Combinations_Documentation.Name": {
    "message": "Number.Combinations"
  },
  "Number.Combinations_Documentation.Description": {
    "message": "Retourne le nombre de combinaisons uniques."
  },
  "Number.Combinations_Documentation.LongDescription": {
    "message": "Retourne le nombre de combinaisons uniques à partir d'une liste d'éléments, <code>setSize</code> avec la taille de combinaison spécifiée, <code>combinationSize</code>.\r\n<ul>\r\n    <li><code>setSize</code> : nombre d'éléments dans la liste.</li>\r\n    <li><code>combinationSize</code> : nombre d'éléments dans chaque combinaison.</li>\r\n</ul>\r\n"
  },
  "Number.Combinations_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Combinations_Documentation.Examples_0_Description": {
    "message": "Recherche le nombre de combinaisons d'un total de 5 éléments lorsque chaque combinaison est un groupe de 3."
  },
  "Number.Combinations_Documentation.Examples_0_Code": {
    "message": "Number.Combinations(5, 3)"
  },
  "Number.Combinations_Documentation.Examples_0_Result": {
    "message": "10"
  },
  "Number.IntegerDivide_Documentation.Name": {
    "message": "Number.IntegerDivide"
  },
  "Number.IntegerDivide_Documentation.Description": {
    "message": "Divise deux nombres et retourne la partie d'entier du résultat."
  },
  "Number.IntegerDivide_Documentation.LongDescription": {
    "message": "Retourne la partie entière du résultat de la division d'un nombre <code>number1</code> par un autre nombre <code>number2</code>.\r\n    Si <code>number1</code> ou <code>number2</code> ont la valeur null, <code>Number.IntegerDivide</code> retourne null.\r\n      <ul>\r\n        <li><code>number1</code> : dividende.</li>\r\n        <li><code>number2</code> : diviseur.</li>\r\n      </ul>"
  },
  "Number.IntegerDivide_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.IntegerDivide_Documentation.Examples_0_Description": {
    "message": "Divise 6 par 4."
  },
  "Number.IntegerDivide_Documentation.Examples_0_Code": {
    "message": "Number.IntegerDivide(6, 4)"
  },
  "Number.IntegerDivide_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Number.IntegerDivide_Documentation.Examples_1_Description": {
    "message": "Divise 8,3 par 3."
  },
  "Number.IntegerDivide_Documentation.Examples_1_Code": {
    "message": "Number.IntegerDivide(8.3, 3)"
  },
  "Number.IntegerDivide_Documentation.Examples_1_Result": {
    "message": "2"
  },
  "Number.Mod_Documentation.Name": {
    "message": "Number.Mod"
  },
  "Number.Mod_Documentation.Description": {
    "message": "L'entier divise deux nombres et retourne le reste."
  },
  "Number.Mod_Documentation.LongDescription": {
    "message": "Retourne le reste résultant de la division entière de <code>number</code> par <code>divisor</code>.\r\n    Si <code>number</code> ou <code>divisor</code> ont la valeur null, <code>Number.Mod</code> retourne null.\r\n      <ul>\r\n        <li><code>number</code> : dividende.</li>\r\n        <li><code>divisor</code> : diviseur.</li>\r\n      </ul>"
  },
  "Number.Mod_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Mod_Documentation.Examples_0_Description": {
    "message": "Recherche le reste lorsque vous divisez 5 par 3."
  },
  "Number.Mod_Documentation.Examples_0_Code": {
    "message": "Number.Mod(5, 3)"
  },
  "Number.Mod_Documentation.Examples_0_Result": {
    "message": "2"
  },
  "Number.Permutations_Documentation.Name": {
    "message": "Number.Permutations"
  },
  "Number.Permutations_Documentation.Description": {
    "message": "Retourne le nombre de permutations."
  },
  "Number.Permutations_Documentation.LongDescription": {
    "message": "Retourne le nombre de permutations qui peuvent être générées à partir d'un certain nombre d'éléments, <code>setSize</code>, avec une taille de permutation spécifiée, <code>permutationSize</code>."
  },
  "Number.Permutations_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Permutations_Documentation.Examples_0_Description": {
    "message": "Recherche le nombre de permutations à partir d'un total de 5 éléments en groupes de 3."
  },
  "Number.Permutations_Documentation.Examples_0_Code": {
    "message": "Number.Permutations(5, 3)"
  },
  "Number.Permutations_Documentation.Examples_0_Result": {
    "message": "60"
  },
  "Number.Power_Documentation.Name": {
    "message": "Number.Power"
  },
  "Number.Power_Documentation.Description": {
    "message": "Élève un nombre à la puissance spécifiée."
  },
  "Number.Power_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'élévation de <code>number</code> à la puissance <code>power</code>.\r\n    Si <code>number</code> ou <code>power</code> ont la valeur null, <code>Number.Power</code> retourne null.\r\n      <ul>\r\n        <li><code>number</code> : base.</li>\r\n        <li><code>power</code> : exposant.</li>\r\n      </ul>"
  },
  "Number.Power_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Power_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur 5 élevée à la puissance 3 (5 au cube)."
  },
  "Number.Power_Documentation.Examples_0_Code": {
    "message": "Number.Power(5, 3)"
  },
  "Number.Power_Documentation.Examples_0_Result": {
    "message": "125"
  },
  "Number.RandomBetween_Documentation.Name": {
    "message": "Number.RandomBetween"
  },
  "Number.RandomBetween_Documentation.Description": {
    "message": "Retourne un nombre aléatoire entre deux nombres."
  },
  "Number.RandomBetween_Documentation.LongDescription": {
    "message": "Retourne un nombre aléatoire entre <code>bottom</code> et <code>top</code>."
  },
  "Number.RandomBetween_Documentation.Category": {
    "message": "Number.Random"
  },
  "Number.RandomBetween_Documentation.Examples_0_Description": {
    "message": "Obtient un nombre aléatoire entre 1 et 5."
  },
  "Number.RandomBetween_Documentation.Examples_0_Code": {
    "message": "Number.RandomBetween(1, 5)"
  },
  "Number.RandomBetween_Documentation.Examples_0_Result": {
    "message": "2.546797"
  },
  "Record.Field_Documentation.Name": {
    "message": "Record.Field"
  },
  "Record.Field_Documentation.Description": {
    "message": "Retourne la valeur du champ spécifié dans un enregistrement."
  },
  "Record.Field_Documentation.LongDescription": {
    "message": "Retourne la valeur du <code>field</code> spécifié dans <code>record</code>. Si le champ est introuvable, une exception est levée."
  },
  "Record.Field_Documentation.Category": {
    "message": "Record.Selection"
  },
  "Record.Field_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur du champ « CustomerID » dans l'enregistrement."
  },
  "Record.Field_Documentation.Examples_0_Code": {
    "message": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")"
  },
  "Record.Field_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Record.FieldOrDefault_Documentation.Name": {
    "message": "Record.FieldOrDefault"
  },
  "Record.FieldOrDefault_Documentation.Description": {
    "message": "Retourne la valeur du champ spécifié dans un enregistrement ou la valeur par défaut si le champ est introuvable."
  },
  "Record.FieldOrDefault_Documentation.LongDescription": {
    "message": "Retourne la valeur du champ spécifié <code>field</code> dans l'enregistrement <code>record</code>. Si le champ est introuvable, la valeur <code>defaultValue</code> facultative est retournée."
  },
  "Record.FieldOrDefault_Documentation.Category": {
    "message": "Record.Selection"
  },
  "Record.FieldOrDefault_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur du champ « Phone » dans l'enregistrement ou retourne null s'il n'existe pas."
  },
  "Record.FieldOrDefault_Documentation.Examples_0_Code": {
    "message": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")"
  },
  "Record.FieldOrDefault_Documentation.Examples_0_Result": {
    "message": "null"
  },
  "Record.FieldOrDefault_Documentation.Examples_1_Description": {
    "message": "Recherche la valeur du champ « Phone » dans l'enregistrement ou retourne la valeur par défaut s'il n'existe pas."
  },
  "Record.FieldOrDefault_Documentation.Examples_1_Code": {
    "message": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")"
  },
  "Record.FieldOrDefault_Documentation.Examples_1_Result": {
    "message": "\"123-4567\""
  },
  "Record.FromList_Documentation.Name": {
    "message": "Record.FromList"
  },
  "Record.FromList_Documentation.Description": {
    "message": "Retourne un enregistrement en fonction d'une liste de valeurs de champ et d'un ensemble de champs."
  },
  "Record.FromList_Documentation.LongDescription": {
    "message": "Retourne un enregistrement en fonction d'un <code>list</code> de valeurs de champ et d'un ensemble de champs.  <code>fields</code> peut être spécifié par une liste de valeurs de texte, ou un type d'enregistrement.  Une erreur est générée si les champs ne sont pas uniques."
  },
  "Record.FromList_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Record.FromList_Documentation.Examples_0_Description": {
    "message": "Créez un enregistrement à partir d'une liste de valeurs de champ et d'une liste de noms de champ."
  },
  "Record.FromList_Documentation.Examples_0_Code": {
    "message": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})"
  },
  "Record.FromList_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
  },
  "Record.FromList_Documentation.Examples_1_Description": {
    "message": "Créez un enregistrement à partir d'une liste de valeurs de champ et d'un type d'enregistrement."
  },
  "Record.FromList_Documentation.Examples_1_Code": {
    "message": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])"
  },
  "Record.FromList_Documentation.Examples_1_Result": {
    "message": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
  },
  "Record.HasFields_Documentation.Name": {
    "message": "Record.HasFields"
  },
  "Record.HasFields_Documentation.Description": {
    "message": "Indique si l'enregistrement a les champs spécifiés."
  },
  "Record.HasFields_Documentation.LongDescription": {
    "message": "Indique si l'enregistrement <code>record</code> a les champs spécifiés dans <code>fields</code>, en retournant une valeur logique (true ou false).\r\n    Plusieurs valeurs de champ peuvent être spécifiées dans une liste."
  },
  "Record.HasFields_Documentation.Category": {
    "message": "Record.Information"
  },
  "Record.HasFields_Documentation.Examples_0_Description": {
    "message": "Vérifie si l'enregistrement a le champ « CustomerID »."
  },
  "Record.HasFields_Documentation.Examples_0_Code": {
    "message": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")"
  },
  "Record.HasFields_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Record.HasFields_Documentation.Examples_1_Description": {
    "message": "Vérifie si l'enregistrement a les champs « CustomerID » et « Address »."
  },
  "Record.HasFields_Documentation.Examples_1_Code": {
    "message": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})"
  },
  "Record.HasFields_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Record.RemoveFields_Documentation.Name": {
    "message": "Record.RemoveFields"
  },
  "Record.RemoveFields_Documentation.Description": {
    "message": "Supprime les champs spécifiés de l'enregistrement d'entrée."
  },
  "Record.RemoveFields_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui supprime tous les champs spécifiés dans la liste <code>fields</code> à partir de l'entrée <code>record</code>. Si le champ spécifié n'existe pas, une exception est levée."
  },
  "Record.RemoveFields_Documentation.Category": {
    "message": "Record.Transformations"
  },
  "Record.RemoveFields_Documentation.Examples_0_Description": {
    "message": "Supprime le champ « Price » de l'enregistrement."
  },
  "Record.RemoveFields_Documentation.Examples_0_Code": {
    "message": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")"
  },
  "Record.RemoveFields_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 1, Item = \"Fishing rod\"]"
  },
  "Record.RemoveFields_Documentation.Examples_1_Description": {
    "message": "Supprime les champs « Price » et « Item » de l'enregistrement."
  },
  "Record.RemoveFields_Documentation.Examples_1_Code": {
    "message": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})"
  },
  "Record.RemoveFields_Documentation.Examples_1_Result": {
    "message": "[CustomerID = 1]"
  },
  "Record.RenameFields_Documentation.Name": {
    "message": "Record.RenameFields"
  },
  "Record.RenameFields_Documentation.Description": {
    "message": "Attribue de nouveaux noms à partir d'une liste dans le formulaire { old, new }."
  },
  "Record.RenameFields_Documentation.LongDescription": {
    "message": "Retourne un enregistrement après avoir renommé les champs dans l'entrée <code>record</code> avec les nouveaux noms des champs spécifiés dans la liste <code>renames</code>. En cas de renommages multiples, une liste imbriquée peut être utilisé ({ {old1, new1}, {old2, new2} }."
  },
  "Record.RenameFields_Documentation.Category": {
    "message": "Record.Transformations"
  },
  "Record.RenameFields_Documentation.Examples_0_Description": {
    "message": "Renomme le champ de l'enregistrement « UnitPrice » en « Price »."
  },
  "Record.RenameFields_Documentation.Examples_0_Code": {
    "message": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)"
  },
  "Record.RenameFields_Documentation.Examples_0_Result": {
    "message": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
  },
  "Record.RenameFields_Documentation.Examples_1_Description": {
    "message": "Renomme les champs de l'enregistrement « UnitPrice » en « Price » et « OrderNum » en « OrderID »."
  },
  "Record.RenameFields_Documentation.Examples_1_Code": {
    "message": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)"
  },
  "Record.RenameFields_Documentation.Examples_1_Result": {
    "message": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
  },
  "Record.ReorderFields_Documentation.Name": {
    "message": "Record.ReorderFields"
  },
  "Record.ReorderFields_Documentation.Description": {
    "message": "Réorganise les champs spécifiés dans le nouvel ordre."
  },
  "Record.ReorderFields_Documentation.LongDescription": {
    "message": "Retourne un enregistrement après avoir réorganisé les champs dans <code>record</code> dans l'ordre des champs spécifié dans la liste <code>fieldOrder</code>. Les valeurs des champs sont conservées et les champs non répertoriés dans <code>fieldOrder</code> sont laissés à leur position d'origine."
  },
  "Record.ReorderFields_Documentation.Category": {
    "message": "Record.Transformations"
  },
  "Record.ReorderFields_Documentation.Examples_0_Description": {
    "message": "Réorganise certains des champs dans l'enregistrement."
  },
  "Record.ReorderFields_Documentation.Examples_0_Code": {
    "message": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)"
  },
  "Record.ReorderFields_Documentation.Examples_0_Result": {
    "message": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
  },
  "Record.SelectFields_Documentation.Name": {
    "message": "Record.SelectFields"
  },
  "Record.SelectFields_Documentation.Description": {
    "message": "Retourne un enregistrement qui contient uniquement les champs spécifiés."
  },
  "Record.SelectFields_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui comprend uniquement les champs spécifiés dans la liste <code>fields</code> à partir de l'entrée <code>record</code>."
  },
  "Record.SelectFields_Documentation.Category": {
    "message": "Record.Selection"
  },
  "Record.SelectFields_Documentation.Examples_0_Description": {
    "message": "Sélectionne les champs « Item » et « Price » dans l'enregistrement."
  },
  "Record.SelectFields_Documentation.Examples_0_Code": {
    "message": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)"
  },
  "Record.SelectFields_Documentation.Examples_0_Result": {
    "message": "[Item = \"Fishing rod\", Price = 100]"
  },
  "Record.TransformFields_Documentation.Name": {
    "message": "Record.TransformFields"
  },
  "Record.TransformFields_Documentation.Description": {
    "message": "Retourne un enregistrement après avoir appliqué les transformations spécifiées."
  },
  "Record.TransformFields_Documentation.LongDescription": {
    "message": "Retourne un enregistrement après avoir appliqué les transformations spécifiées dans la liste <code>transformOperations</code> sur <code>record</code>.\r\n    Un ou plusieurs champs peuvent être transformés à un moment donné.\r\n      <div>Si un seul champ est modifié, <code>transformOperations</code> sera une liste contenant deux éléments. Le premier élément dans <code>transformOperations</code> spécifie un nom de champ, et le second élément dans <code>transformOperations</code> spécifie la fonction à utiliser pour la transformation. Par exemple, <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>Si plusieurs champs sont transformés, <code>transformOperations</code> sera une liste de listes, où chaque liste interne est une paire de nom de champ et d'opération de transformation. Par exemple, <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>"
  },
  "Record.TransformFields_Documentation.Category": {
    "message": "Record.Transformations"
  },
  "Record.TransformFields_Documentation.Examples_0_Description": {
    "message": "Convertissez le champ « Price » en nombre."
  },
  "Record.TransformFields_Documentation.Examples_0_Code": {
    "message": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)"
  },
  "Record.TransformFields_Documentation.Examples_0_Result": {
    "message": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
  },
  "Record.TransformFields_Documentation.Examples_1_Description": {
    "message": "Convertissez les champs « OrderID » et « Price » en nombres."
  },
  "Record.TransformFields_Documentation.Examples_1_Code": {
    "message": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)"
  },
  "Record.TransformFields_Documentation.Examples_1_Result": {
    "message": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
  },
  "Splitter.SplitTextByCharacterTransition_Documentation.Name": {
    "message": "Splitter.SplitTextByCharacterTransition"
  },
  "Splitter.SplitTextByCharacterTransition_Documentation.Description": {
    "message": "Retourne une fonction qui divise le texte en liste de textes selon une transition d'un type de caractère à un autre. Les paramètres {0} et {1} peuvent être une liste de caractères ou une fonction qui prend un caractère et qui retourne true/false."
  },
  "Splitter.SplitTextByCharacterTransition_Documentation.LongDescription": {
    "message": "Retourne une fonction qui divise le texte en liste de textes selon une transition d'un type de caractère à un autre. Les paramètres <code>before</code> et <code>after</code> peuvent être une liste de caractères ou une fonction qui prend un caractère et qui retourne true/false."
  },
  "Splitter.SplitTextByCharacterTransition_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByCharacterTransition_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée chaque fois qu'une lettre majuscule ou minuscule est suivie d'un chiffre."
  },
  "Splitter.SplitTextByCharacterTransition_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")"
  },
  "Splitter.SplitTextByCharacterTransition_Documentation.Examples_0_Result": {
    "message": "{\"Abc\", \"123\"}"
  },
  "SqlExpression.ToExpression_Documentation.Name": {
    "message": "SqlExpression.ToExpression"
  },
  "SqlExpression.ToExpression_Documentation.Description": {
    "message": "Convertit la requête SQL fournie en code M. Cette fonction est destinée à un usage interne uniquement."
  },
  "SqlExpression.ToExpression_Documentation.LongDescription": {
    "message": "Convertit la <code>sql</code> requête fournie en code M, avec les identifiants disponibles définis par <code>environment</code>. Cette fonction est destinée à un usage interne uniquement."
  },
  "SqlExpression.ToExpression_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Table.Column_Documentation.Name": {
    "message": "Table.Column"
  },
  "Table.Column_Documentation.Description": {
    "message": "Retourne une colonne de données spécifiée depuis la table sous forme de liste."
  },
  "Table.Column_Documentation.LongDescription": {
    "message": "Retourne la colonne de données spécifiée par <code>column</code> depuis la table <code>table</code> sous forme de liste."
  },
  "Table.Column_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.Column_Documentation.Examples_0_Description": {
    "message": "Recherche les valeurs de la colonne [Name] de la table."
  },
  "Table.Column_Documentation.Examples_0_Code": {
    "message": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)"
  },
  "Table.Column_Documentation.Examples_0_Result": {
    "message": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
  },
  "Table.ColumnsOfType_Documentation.Name": {
    "message": "Table.ColumnsOfType"
  },
  "Table.ColumnsOfType_Documentation.Description": {
    "message": "Retourne une liste avec les noms des colonnes qui correspondent aux types spécifiés."
  },
  "Table.ColumnsOfType_Documentation.LongDescription": {
    "message": "Retourne une liste avec les noms des colonnes de la table <code>table</code> qui correspondent aux types spécifiés dans <code>listOfTypes</code>."
  },
  "Table.ColumnsOfType_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.ColumnsOfType_Documentation.Examples_0_Description": {
    "message": "Retourne les noms des colonnes de type Number.Type de la table."
  },
  "Table.ColumnsOfType_Documentation.Examples_0_Code": {
    "message": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)"
  },
  "Table.ColumnsOfType_Documentation.Examples_0_Result": {
    "message": "{\"a\"}"
  },
  "Table.Contains_Documentation.Name": {
    "message": "Table.Contains"
  },
  "Table.Contains_Documentation.Description": {
    "message": "Indique si l'enregistrement spécifié s'affiche sous la forme d'une ligne dans la table."
  },
  "Table.Contains_Documentation.LongDescription": {
    "message": "Indique si l'enregistrement spécifié <code>row</code> s'affiche sous la forme d'une ligne dans <code>table</code>.\r\n    Un paramètre facultatif <code>equationCriteria</code> peut être spécifié pour contrôler la comparaison entre les lignes de la table."
  },
  "Table.Contains_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.Contains_Documentation.Examples_0_Description": {
    "message": "Détermine si la table contient la ligne."
  },
  "Table.Contains_Documentation.Examples_0_Code": {
    "message": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)"
  },
  "Table.Contains_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Table.Contains_Documentation.Examples_1_Description": {
    "message": "Détermine si la table contient la ligne."
  },
  "Table.Contains_Documentation.Examples_1_Code": {
    "message": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)"
  },
  "Table.Contains_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Table.Contains_Documentation.Examples_2_Description": {
    "message": "Détermine si la table contient la ligne en comparant seulement la colonne [Name]."
  },
  "Table.Contains_Documentation.Examples_2_Code": {
    "message": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)"
  },
  "Table.Contains_Documentation.Examples_2_Result": {
    "message": "true"
  },
  "Table.ContainsAll_Documentation.Name": {
    "message": "Table.ContainsAll"
  },
  "Table.ContainsAll_Documentation.Description": {
    "message": "Indique si tous les enregistrements spécifiés s'affichent sous la forme de lignes dans la table."
  },
  "Table.ContainsAll_Documentation.LongDescription": {
    "message": "Indique si tous les enregistrements spécifiés dans la liste d'enregistrements <code>rows</code> s'affichent sous la forme de lignes dans <code>table</code>.\r\n    Un paramètre facultatif <code>equationCriteria</code> peut être spécifié pour contrôler la comparaison entre les lignes de la table."
  },
  "Table.ContainsAll_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.ContainsAll_Documentation.Examples_0_Description": {
    "message": "Détermine si la table contient toutes les lignes en comparant seulement la colonne [CustomerID]."
  },
  "Table.ContainsAll_Documentation.Examples_0_Code": {
    "message": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)"
  },
  "Table.ContainsAll_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Table.ContainsAll_Documentation.Examples_1_Description": {
    "message": "Détermine si la table contient toutes les lignes."
  },
  "Table.ContainsAll_Documentation.Examples_1_Code": {
    "message": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)"
  },
  "Table.ContainsAll_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Table.ContainsAny_Documentation.Name": {
    "message": "Table.ContainsAny"
  },
  "Table.ContainsAny_Documentation.Description": {
    "message": "Indique si l'un des enregistrements spécifiés s'affiche sous la forme de lignes dans la table."
  },
  "Table.ContainsAny_Documentation.LongDescription": {
    "message": "Indique si l'un des enregistrements spécifiés dans la liste d'enregistrements <code>rows</code> s'affiche sous la forme de lignes dans <code>table</code>.\r\n    Un paramètre facultatif <code>equationCriteria</code> peut être spécifié pour contrôler la comparaison entre les lignes de la table."
  },
  "Table.ContainsAny_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.ContainsAny_Documentation.Examples_0_Description": {
    "message": "Détermine si la table <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> contient les lignes <code>[a = 1, b = 2]</code> ou <code>[a = 3, b = 5]</code>."
  },
  "Table.ContainsAny_Documentation.Examples_0_Code": {
    "message": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)"
  },
  "Table.ContainsAny_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Table.ContainsAny_Documentation.Examples_1_Description": {
    "message": "Détermine si la table <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> contient les lignes <code>[a = 1, b = 3]</code> ou <code>[a = 3, b = 5]</code>."
  },
  "Table.ContainsAny_Documentation.Examples_1_Code": {
    "message": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)"
  },
  "Table.ContainsAny_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Table.ContainsAny_Documentation.Examples_2_Description": {
    "message": "Détermine si la table <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> contient les lignes <code>[a = 1, b = 3]</code> ou <code>[a = 3, b = 5]</code> en comparant seulement la colonne [a]."
  },
  "Table.ContainsAny_Documentation.Examples_2_Code": {
    "message": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)"
  },
  "Table.ContainsAny_Documentation.Examples_2_Result": {
    "message": "true"
  },
  "Table.FilterWithDataTable_Documentation.Name": {
    "message": "Table.FilterWithDataTable"
  },
  "Table.FilterWithDataTable_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Table.FilterWithDataTable_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Table.FilterWithDataTable_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.HasColumns_Documentation.Name": {
    "message": "Table.HasColumns"
  },
  "Table.HasColumns_Documentation.Description": {
    "message": "Indique si la table contient les colonnes spécifiées."
  },
  "Table.HasColumns_Documentation.LongDescription": {
    "message": "Indique si <code>table</code> contient les colonnes spécifiées, <code>columns</code>. Renvoie <code>true</code> si la table contient les colonnes, sinon <code>false</code>."
  },
  "Table.HasColumns_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.HasColumns_Documentation.Examples_0_Description": {
    "message": "Détermine si la table a la colonne [Name]."
  },
  "Table.HasColumns_Documentation.Examples_0_Code": {
    "message": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)"
  },
  "Table.HasColumns_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Table.HasColumns_Documentation.Examples_1_Description": {
    "message": "Détermine si la table a les colonnes [Name] et [PhoneNumber]."
  },
  "Table.HasColumns_Documentation.Examples_1_Code": {
    "message": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)"
  },
  "Table.HasColumns_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Table.MatchesAllRows_Documentation.Name": {
    "message": "Table.MatchesAllRows"
  },
  "Table.MatchesAllRows_Documentation.Description": {
    "message": "Indique si toutes les lignes de la table répondent à la condition spécifiée."
  },
  "Table.MatchesAllRows_Documentation.LongDescription": {
    "message": "Indique si toutes les lignes dans <code>table</code> correspondent au <code>condition</code> qui est spécifié. Retourne <code>true</code> si toutes les lignes correspondent, sinon <code>false</code>."
  },
  "Table.MatchesAllRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.MatchesAllRows_Documentation.Examples_0_Description": {
    "message": "Détermine si toutes les valeurs des lignes dans la colonne [a] sont paires dans la table."
  },
  "Table.MatchesAllRows_Documentation.Examples_0_Code": {
    "message": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)"
  },
  "Table.MatchesAllRows_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Table.MatchesAllRows_Documentation.Examples_1_Description": {
    "message": "Détermine si toutes les valeurs des lignes sont [a = 1, b = 2], dans la table <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>."
  },
  "Table.MatchesAllRows_Documentation.Examples_1_Code": {
    "message": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)"
  },
  "Table.MatchesAllRows_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Table.MatchesAnyRows_Documentation.Name": {
    "message": "Table.MatchesAnyRows"
  },
  "Table.MatchesAnyRows_Documentation.Description": {
    "message": "Indique si l'une des lignes de la table répond à la condition spécifiée."
  },
  "Table.MatchesAnyRows_Documentation.LongDescription": {
    "message": "Indique si l'une des lignes dans <code>table</code> correspond au <code>condition</code> qui est spécifié. Retourne <code>true</code> si l'une des lignes correspond, sinon <code>false</code>."
  },
  "Table.MatchesAnyRows_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.MatchesAnyRows_Documentation.Examples_0_Description": {
    "message": "Détermine si l'une des valeurs des lignes dans la colonne [a] est paire dans la table <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>."
  },
  "Table.MatchesAnyRows_Documentation.Examples_0_Code": {
    "message": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)"
  },
  "Table.MatchesAnyRows_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "Table.MatchesAnyRows_Documentation.Examples_1_Description": {
    "message": "Détermine si l'une des valeurs des lignes est [a = 1, b = 2], dans la table <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>."
  },
  "Table.MatchesAnyRows_Documentation.Examples_1_Code": {
    "message": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)"
  },
  "Table.MatchesAnyRows_Documentation.Examples_1_Result": {
    "message": "true"
  },
  "Table.Max_Documentation.Name": {
    "message": "Table.Max"
  },
  "Table.Max_Documentation.Description": {
    "message": "Retourne la plus grande ligne ou la valeur par défaut à l'aide des critères fournis."
  },
  "Table.Max_Documentation.LongDescription": {
    "message": "Retourne la plus grande ligne dans <code>table</code> en fonction de <code>comparisonCriteria</code>. Si la table est vide, la valeur <code>default</code> facultative est retournée. "
  },
  "Table.Max_Documentation.Category": {
    "message": "Table.Ordering"
  },
  "Table.Max_Documentation.Examples_0_Description": {
    "message": "Recherche la ligne avec la plus grande valeur dans la colonne [a] dans la table <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>."
  },
  "Table.Max_Documentation.Examples_0_Code": {
    "message": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)"
  },
  "Table.Max_Documentation.Examples_0_Result": {
    "message": "[a = 6, b = 8]"
  },
  "Table.Max_Documentation.Examples_1_Description": {
    "message": "Recherche la ligne avec la plus grande valeur dans la colonne [a] dans la table <code>({})</code>. Retourne -1 si l'objet est vide."
  },
  "Table.Max_Documentation.Examples_1_Code": {
    "message": "Table.Max(#table({\"a\"}, {}), \"a\", -1)"
  },
  "Table.Max_Documentation.Examples_1_Result": {
    "message": "-1"
  },
  "Table.Min_Documentation.Name": {
    "message": "Table.Min"
  },
  "Table.Min_Documentation.Description": {
    "message": "Retourne la plus petite ligne ou une valeur par défaut à l'aide des critères fournis."
  },
  "Table.Min_Documentation.LongDescription": {
    "message": "Retourne la plus petite ligne dans <code>table</code> en fonction de <code>comparisonCriteria</code>. Si la table est vide, la valeur <code>default</code> facultative est retournée."
  },
  "Table.Min_Documentation.Category": {
    "message": "Table.Ordering"
  },
  "Table.Min_Documentation.Examples_0_Description": {
    "message": "Recherche dans la table la ligne avec la plus petite valeur dans la colonne [a]."
  },
  "Table.Min_Documentation.Examples_0_Code": {
    "message": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)"
  },
  "Table.Min_Documentation.Examples_0_Result": {
    "message": "[a = 2, b = 4]"
  },
  "Table.Min_Documentation.Examples_1_Description": {
    "message": "Recherche dans la table la ligne avec la plus petite valeur dans la colonne [a]. Retourne -1 si la table est vide."
  },
  "Table.Min_Documentation.Examples_1_Code": {
    "message": "Table.Min(#table({\"a\"}, {}), \"a\", -1)"
  },
  "Table.Min_Documentation.Examples_1_Result": {
    "message": "-1"
  },
  "Table.PositionOf_Documentation.Name": {
    "message": "Table.PositionOf"
  },
  "Table.PositionOf_Documentation.Description": {
    "message": "Retourne la position ou les positions de la ligne dans la table."
  },
  "Table.PositionOf_Documentation.LongDescription": {
    "message": "Retourne la position de ligne de la première occurrence de <code>row</code> dans le <code>table</code> spécifié. Retourne -1 si aucune occurrence n'est trouvée.\r\n    <ul>\r\n       <li><code>table</code> : table d'entrée.</li>\r\n       <li><code>row</code> : ligne dans la table dont il faut trouver la position.</li>\r\n       <li><code>occurrence</code> : <i>[Facultatif]</i> spécifie quelles occurrences de la ligne sont à retourner.</li>\r\n       <li><code>equationCriteria</code> : <i>[Facultatif]</i> contrôle la comparaison entre les lignes de la table.</li>\r\n    </ul>\r\n    "
  },
  "Table.PositionOf_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.PositionOf_Documentation.Examples_0_Description": {
    "message": "Recherche la position de la première occurrence de [a = 2, b = 4] dans la table <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>."
  },
  "Table.PositionOf_Documentation.Examples_0_Code": {
    "message": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)"
  },
  "Table.PositionOf_Documentation.Examples_0_Result": {
    "message": "0"
  },
  "Table.PositionOf_Documentation.Examples_1_Description": {
    "message": "Recherche la position de la deuxième occurrence de [a = 2, b = 4] dans la table <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>."
  },
  "Table.PositionOf_Documentation.Examples_1_Code": {
    "message": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)"
  },
  "Table.PositionOf_Documentation.Examples_1_Result": {
    "message": "2"
  },
  "Table.PositionOf_Documentation.Examples_2_Description": {
    "message": "Recherche la position de toutes les occurrences de [a = 2, b = 4] dans la table <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>."
  },
  "Table.PositionOf_Documentation.Examples_2_Code": {
    "message": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)"
  },
  "Table.PositionOf_Documentation.Examples_2_Result": {
    "message": "{0, 2}"
  },
  "Table.PositionOfAny_Documentation.Name": {
    "message": "Table.PositionOfAny"
  },
  "Table.PositionOfAny_Documentation.Description": {
    "message": "Retourne la position ou les positions d'une ligne spécifiée dans la table."
  },
  "Table.PositionOfAny_Documentation.LongDescription": {
    "message": "Retourne les positions des lignes à partir du <code>table</code> de la première occurrence de la liste de <code>rows</code>. Retourne -1 si aucune occurrence n'est trouvée.\r\n    <ul>\r\n    <li><code>table</code> : table d'entrée.</li>\r\n       <li><code>rows</code> : liste des lignes dans la table dont il faut trouver les positions.</li>\r\n       <li><code>occurrence</code> : <i>[Facultatif]</i> spécifie quelles occurrences de la ligne sont à retourner.</li>\r\n       <li><code>equationCriteria</code> : <i>[Facultatif]</i> contrôle la comparaison entre les lignes de la table.</li>\r\n    </ul>\r\n    "
  },
  "Table.PositionOfAny_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.PositionOfAny_Documentation.Examples_0_Description": {
    "message": "Recherche la position de la première occurrence de [a = 2, b = 4] ou [a = 6, b = 8] dans la table <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>."
  },
  "Table.PositionOfAny_Documentation.Examples_0_Code": {
    "message": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)"
  },
  "Table.PositionOfAny_Documentation.Examples_0_Result": {
    "message": "0"
  },
  "Table.PositionOfAny_Documentation.Examples_1_Description": {
    "message": "Recherche la position de toutes les occurrences de [a = 2, b = 4] ou [a = 6, b = 8] dans la table <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>."
  },
  "Table.PositionOfAny_Documentation.Examples_1_Code": {
    "message": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)"
  },
  "Table.PositionOfAny_Documentation.Examples_1_Result": {
    "message": "{0, 1, 2}"
  },
  "Table.ReplaceRelationshipIdentity_Documentation.Name": {
    "message": "Table.ReplaceRelationshipIdentity"
  },
  "Table.ReplaceRelationshipIdentity_Documentation.Description": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Table.ReplaceRelationshipIdentity_Documentation.LongDescription": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Table.ReplaceRelationshipIdentity_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.Split_Documentation.Name": {
    "message": "Table.Split"
  },
  "Table.Split_Documentation.Description": {
    "message": "Divise la table spécifiée en liste de tables à l'aide de la taille de page spécifiée."
  },
  "Table.Split_Documentation.LongDescription": {
    "message": "Se divise <code>table</code> en une liste de tables où le premier élément de la liste est une table contenant les premières <code>pageSize</code> lignes de\r\n    la table source, l'élément suivant de la liste est une table contenant les lignes <code>pageSize</code> suivantes de la table source, et ainsi de suite."
  },
  "Table.Split_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.Split_Documentation.Examples_0_Description": {
    "message": "Divisez une table de cinq enregistrements en tables de deux enregistrements chacune."
  },
  "Table.Split_Documentation.Examples_0_Code": {
    "message": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)"
  },
  "Table.Split_Documentation.Examples_0_Result": {
    "message": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
  },
  "Table.SplitAt_Documentation.Name": {
    "message": "Table.SplitAt"
  },
  "Table.SplitAt_Documentation.Description": {
    "message": "Renvoie une liste contenant le nombre spécifié de lignes depuis le début et les lignes restantes."
  },
  "Table.SplitAt_Documentation.LongDescription": {
    "message": "Renvoie une liste contenant deux tables : une table avec le nombre spécifié de lignes depuis le début de <code>table</code> (comme spécifié par <code>count</code>) et une table contenant les lignes restantes dans <code>table</code>.\r\n\r\nSi les tables de la liste ainsi créée sont énumérées une fois exactement et dans l’ordre, la fonction énumère <code>table</code> une fois seulement."
  },
  "Table.SplitAt_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.SplitAt_Documentation.Examples_0_Description": {
    "message": "Renvoie les deux premières lignes de la table et les lignes restantes de la table."
  },
  "Table.SplitAt_Documentation.Examples_0_Code": {
    "message": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)"
  },
  "Table.SplitAt_Documentation.Examples_0_Result": {
    "message": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
  },
  "Table.TransformRows_Documentation.Name": {
    "message": "Table.TransformRows"
  },
  "Table.TransformRows_Documentation.Description": {
    "message": "Transforme les lignes de la table à l'aide de la fonction de transformation spécifiée."
  },
  "Table.TransformRows_Documentation.LongDescription": {
    "message": "Crée une liste <code></code> en appliquant l’opération de <code>transform</code> à chaque ligne de <code>table</code>."
  },
  "Table.TransformRows_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.TransformRows_Documentation.Examples_0_Description": {
    "message": "Transformer les lignes d’un tableau en une liste de nombres."
  },
  "Table.TransformRows_Documentation.Examples_0_Code": {
    "message": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)"
  },
  "Table.TransformRows_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3, 4, 5}"
  },
  "Table.TransformRows_Documentation.Examples_1_Description": {
    "message": "Transformez les lignes d’un tableau numérique en enregistrements textuels."
  },
  "Table.TransformRows_Documentation.Examples_1_Code": {
    "message": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)"
  },
  "Table.TransformRows_Documentation.Examples_1_Result": {
    "message": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
  },
  "Text.AfterDelimiter_Documentation.Name": {
    "message": "Text.AfterDelimiter"
  },
  "Text.AfterDelimiter_Documentation.Description": {
    "message": "Text.AfterDelimiter"
  },
  "Text.AfterDelimiter_Documentation.LongDescription": {
    "message": "Retourne la partie de <code>text</code> après le <code>delimiter</code> spécifié.\r\n    Un numérique facultatif <code>index</code> indique quelle occurrence du <code>delimiter</code> doit être considérée.\r\n    Une liste facultative <code>index</code> indique quelle occurrence du <code>delimiter</code> doit être considérée, et si l'indexation doit être effectuée à partir du début ou de la fin de l'entrée."
  },
  "Text.AfterDelimiter_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.AfterDelimiter_Documentation.Examples_0_Description": {
    "message": "Obtenez la partie de « 111-222-333 » après le (premier) trait d'union."
  },
  "Text.AfterDelimiter_Documentation.Examples_0_Code": {
    "message": "Text.AfterDelimiter(\"111-222-333\", \"-\")"
  },
  "Text.AfterDelimiter_Documentation.Examples_0_Result": {
    "message": "\"222-333\""
  },
  "Text.AfterDelimiter_Documentation.Examples_1_Description": {
    "message": "Obtenez la partie de « 111-222-333 » après le deuxième trait d'union."
  },
  "Text.AfterDelimiter_Documentation.Examples_1_Code": {
    "message": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)"
  },
  "Text.AfterDelimiter_Documentation.Examples_1_Result": {
    "message": "\"333\""
  },
  "Text.AfterDelimiter_Documentation.Examples_2_Description": {
    "message": "Obtenez la partie de « 111-222-333 » après le deuxième trait d'union à partir de la fin."
  },
  "Text.AfterDelimiter_Documentation.Examples_2_Code": {
    "message": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})"
  },
  "Text.AfterDelimiter_Documentation.Examples_2_Result": {
    "message": "\"222-333\""
  },
  "Text.At_Documentation.Name": {
    "message": "Text.At"
  },
  "Text.At_Documentation.Description": {
    "message": "Retourne le caractère à la position spécifiée."
  },
  "Text.At_Documentation.LongDescription": {
    "message": "Retourne le caractère dans la valeur de texte, <code>text</code> à la position <code>index</code>. Le premier caractère dans le texte est à la position 0."
  },
  "Text.At_Documentation.Category": {
    "message": "Text.Extraction"
  },
  "Text.At_Documentation.Examples_0_Description": {
    "message": "Recherche le caractère à la position 4 dans la chaîne « Hello, World »."
  },
  "Text.At_Documentation.Examples_0_Code": {
    "message": "Text.At(\"Hello, World\", 4)"
  },
  "Text.At_Documentation.Examples_0_Result": {
    "message": "\"o\""
  },
  "Text.BeforeDelimiter_Documentation.Name": {
    "message": "Text.BeforeDelimiter"
  },
  "Text.BeforeDelimiter_Documentation.Description": {
    "message": "Text.BeforeDelimiter"
  },
  "Text.BeforeDelimiter_Documentation.LongDescription": {
    "message": "Retourne la partie de <code>text</code> avant le <code>delimiter</code> spécifié.\r\n    Un numérique facultatif <code>index</code> indique quelle occurrence du <code>delimiter</code> doit être considérée.\r\n    Une liste facultative <code>index</code> indique quelle occurrence du <code>delimiter</code> doit être considérée, et si l'indexation doit être effectuée à partir du début ou de la fin de l'entrée."
  },
  "Text.BeforeDelimiter_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.BeforeDelimiter_Documentation.Examples_0_Description": {
    "message": "Obtenez la partie de « 111-222-333 » avant le (premier) trait d'union."
  },
  "Text.BeforeDelimiter_Documentation.Examples_0_Code": {
    "message": "Text.BeforeDelimiter(\"111-222-333\", \"-\")"
  },
  "Text.BeforeDelimiter_Documentation.Examples_0_Result": {
    "message": "\"111\""
  },
  "Text.BeforeDelimiter_Documentation.Examples_1_Description": {
    "message": "Obtenez la partie de « 111-222-333 » avant le deuxième trait d'union."
  },
  "Text.BeforeDelimiter_Documentation.Examples_1_Code": {
    "message": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)"
  },
  "Text.BeforeDelimiter_Documentation.Examples_1_Result": {
    "message": "\"111-222\""
  },
  "Text.BeforeDelimiter_Documentation.Examples_2_Description": {
    "message": "Obtenez la partie de « 111-222-333 » avant le deuxième trait d'union à partir de la fin."
  },
  "Text.BeforeDelimiter_Documentation.Examples_2_Code": {
    "message": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})"
  },
  "Text.BeforeDelimiter_Documentation.Examples_2_Result": {
    "message": "\"111\""
  },
  "Text.Contains_Documentation.Name": {
    "message": "Text.Contains"
  },
  "Text.Contains_Documentation.Description": {
    "message": "Indique si le texte contient une sous-chaîne."
  },
  "Text.Contains_Documentation.LongDescription": {
    "message": "Détecte si <code>text</code> contient la valeur <code>substring</code>. Retourne true si la valeur est trouvée. Cette fonction ne prend pas en charge les caractères génériques ou les expressions régulières. \r\n      <br>\r\n      <br>\r\n      L’argument facultatif <code>comparer</code> peut être utilisé pour spécifier des comparaisons qui ne respectent pas la casse ou la culture et les paramètres régionaux.\r\n      Les comparateurs intégrés suivants sont disponibles dans le langage de formule :\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code> : Utilisé pour effectuer une comparaison ordinale respectant la casse</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code> : Utilisé pour effectuer une comparaison ordinale ne respectant pas la casse</li>\r\n        <li> <code>Comparer.FromCulture</code> : Utilisé pour effectuer une comparaison prenant en compte la culture</li>\r\n      </ul>"
  },
  "Text.Contains_Documentation.Category": {
    "message": "Text.Membership"
  },
  "Text.Contains_Documentation.Examples_0_Description": {
    "message": "Déterminez si le texte « Hello World » contient « Hello »."
  },
  "Text.Contains_Documentation.Examples_0_Code": {
    "message": "Text.Contains(\"Hello World\", \"Hello\")"
  },
  "Text.Contains_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Text.Contains_Documentation.Examples_1_Description": {
    "message": "Déterminez si le texte « Hello World » contient « hello »."
  },
  "Text.Contains_Documentation.Examples_1_Code": {
    "message": "Text.Contains(\"Hello World\", \"hello\")"
  },
  "Text.Contains_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Text.Contains_Documentation.Examples_2_Description": {
    "message": "Recherchez si le texte \"Hello World\" contient \"hello\", à l'aide d'un comparateur insensible à la casse."
  },
  "Text.Contains_Documentation.Examples_2_Code": {
    "message": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)"
  },
  "Text.Contains_Documentation.Examples_2_Result": {
    "message": "true"
  },
  "Text.End_Documentation.Name": {
    "message": "Text.End"
  },
  "Text.End_Documentation.Description": {
    "message": "Retourne les derniers caractères du texte."
  },
  "Text.End_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>text</code> qui correspond aux derniers <code>count</code> caractères de la valeur <code>text</code> <code>text</code>."
  },
  "Text.End_Documentation.Category": {
    "message": "Text.Extraction"
  },
  "Text.End_Documentation.Examples_0_Description": {
    "message": "Obtient les 5 derniers caractères du texte, « Hello, World »."
  },
  "Text.End_Documentation.Examples_0_Code": {
    "message": "Text.End(\"Hello, World\", 5)"
  },
  "Text.End_Documentation.Examples_0_Result": {
    "message": "\"World\""
  },
  "Text.EndsWith_Documentation.Name": {
    "message": "Text.EndsWith"
  },
  "Text.EndsWith_Documentation.Description": {
    "message": "Indique si le texte se termine par la valeur spécifiée."
  },
  "Text.EndsWith_Documentation.LongDescription": {
    "message": "Indique si le texte spécifié, <code>text</code>, se termine par la valeur spécifiée, <code>substring</code>. L’indication respecte la casse. \r\n\r\n      <div>\r\n        <code>comparer</code> est un <code>comparateur</code> utilisé pour contrôler la comparaison. Les comparateurs peuvent être utilisés pour fournir des comparaisons ne respectant pas la casse ou de culture et prenant en charge les paramètres régionaux.\r\n      </div>\r\n      <div>\r\n        Les comparateurs intégrés suivants sont disponibles dans le langage de formule :\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code> : Utilisé pour effectuer une opération exacte ou de comparaison ordinale</li>\r\n        <li><code> Comparer.OrdinalIgnoreCase </code>: utilisé pour effectuer une comparaison exacte ne respectant pas la casse</li>\r\n        <li> <code>Comparer.FromCulture</code> : utilisé pour effectuer une comparaison prenant en compte la culture</li>\r\n      </ul>"
  },
  "Text.EndsWith_Documentation.Category": {
    "message": "Text.Membership"
  },
  "Text.EndsWith_Documentation.Examples_0_Description": {
    "message": "Vérifiez si « Hello, World » se termine par « world »."
  },
  "Text.EndsWith_Documentation.Examples_0_Code": {
    "message": "Text.EndsWith(\"Hello, World\", \"world\")"
  },
  "Text.EndsWith_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "Text.EndsWith_Documentation.Examples_1_Description": {
    "message": "Vérifiez si « Hello, World » se termine par « World »."
  },
  "Text.EndsWith_Documentation.Examples_1_Code": {
    "message": "Text.EndsWith(\"Hello, World\", \"World\")"
  },
  "Text.EndsWith_Documentation.Examples_1_Result": {
    "message": "true"
  },
  "Text.Format_Documentation.Name": {
    "message": "Text.Format"
  },
  "Text.Format_Documentation.Description": {
    "message": "Retourne le texte mis en forme à partir d'une chaîne de format et d'arguments."
  },
  "Text.Format_Documentation.LongDescription": {
    "message": "Retourne le texte mis en forme qui est créé par l'application <code>arguments</code> d'une liste ou d'un enregistrement vers une chaîne de format <code>formatString</code>. Un <code>culture</code> facultatif peut éventuellement être fourni (par exemple, \"fr-fr\")."
  },
  "Text.Format_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Text.Format_Documentation.Examples_0_Description": {
    "message": "Formater une liste de numéros."
  },
  "Text.Format_Documentation.Examples_0_Code": {
    "message": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})"
  },
  "Text.Format_Documentation.Examples_0_Result": {
    "message": "\"17, 7, and 22.\""
  },
  "Text.Format_Documentation.Examples_1_Description": {
    "message": "Formater différents types de données à partir d'un enregistrement, en fonction de la culture anglaise des États-Unis."
  },
  "Text.Format_Documentation.Examples_1_Code": {
    "message": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)"
  },
  "Text.Format_Documentation.Examples_1_Result": {
    "message": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
  },
  "Text.Middle_Documentation.Name": {
    "message": "Text.Middle"
  },
  "Text.Middle_Documentation.Description": {
    "message": "Retourne la sous-chaîne jusqu'à une longueur spécifique."
  },
  "Text.Middle_Documentation.LongDescription": {
    "message": "Retourne <code>count</code> caractères, ou jusqu'à la fin de <code>text</code>, au décalage <code>start</code>."
  },
  "Text.Middle_Documentation.Category": {
    "message": "Text.Extraction"
  },
  "Text.Middle_Documentation.Examples_0_Description": {
    "message": "Rechercher la sous-chaîne du texte « Hello World » en commençant à l'index 6 et en fractionnant 5 caractères."
  },
  "Text.Middle_Documentation.Examples_0_Code": {
    "message": "Text.Middle(\"Hello World\", 6, 5)"
  },
  "Text.Middle_Documentation.Examples_0_Result": {
    "message": "\"World\""
  },
  "Text.Middle_Documentation.Examples_1_Description": {
    "message": "Rechercher la sous-chaîne du texte « Hello World » en commençant à l'index 6 jusqu'à la fin."
  },
  "Text.Middle_Documentation.Examples_1_Code": {
    "message": "Text.Middle(\"Hello World\", 6, 20)"
  },
  "Text.Middle_Documentation.Examples_1_Result": {
    "message": "\"World\""
  },
  "Text.PadEnd_Documentation.Name": {
    "message": "Text.PadEnd"
  },
  "Text.PadEnd_Documentation.Description": {
    "message": "Retourne le texte d'une longueur spécifiée en remplissant la fin d'un texte donné."
  },
  "Text.PadEnd_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>text</code> remplie jusqu'à la longueur <code>count</code> en insérant des espaces à la fin de la valeur de texte <code>text</code>.\r\n    Un caractère facultatif <code>character</code> peut être utilisé pour spécifier le caractère utilisé pour le remplissage. Le caractère de remplissage par défaut est un espace."
  },
  "Text.PadEnd_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.PadEnd_Documentation.Examples_0_Description": {
    "message": "Remplissez la fin d'une valeur de texte, pour qu'elle soit longue de 10 caractères."
  },
  "Text.PadEnd_Documentation.Examples_0_Code": {
    "message": "Text.PadEnd(\"Name\", 10)"
  },
  "Text.PadEnd_Documentation.Examples_0_Result": {
    "message": "\"Name      \""
  },
  "Text.PadEnd_Documentation.Examples_1_Description": {
    "message": "Remplissez la fin d'une valeur de texte avec « | », pour qu'elle soit longue de 10 caractères."
  },
  "Text.PadEnd_Documentation.Examples_1_Code": {
    "message": "Text.PadEnd(\"Name\", 10, \"|\")"
  },
  "Text.PadEnd_Documentation.Examples_1_Result": {
    "message": "\"Name||||||\""
  },
  "Text.PadStart_Documentation.Name": {
    "message": "Text.PadStart"
  },
  "Text.PadStart_Documentation.Description": {
    "message": "Retourne le texte d'une longueur spécifiée en remplissant le début d'un texte donné."
  },
  "Text.PadStart_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>text</code> remplie jusqu'à la longueur <code>count</code> en insérant des espaces au début de la valeur de texte <code>text</code>.\r\n    Un caractère facultatif <code>character</code> peut être utilisé pour spécifier le caractère utilisé pour le remplissage. Le caractère de remplissage par défaut est un espace."
  },
  "Text.PadStart_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.PadStart_Documentation.Examples_0_Description": {
    "message": "Remplissez le début d'une valeur de texte, pour qu'elle soit longue de 10 caractères."
  },
  "Text.PadStart_Documentation.Examples_0_Code": {
    "message": "Text.PadStart(\"Name\", 10)"
  },
  "Text.PadStart_Documentation.Examples_0_Result": {
    "message": "\"      Name\""
  },
  "Text.PadStart_Documentation.Examples_1_Description": {
    "message": "Remplissez le début d'une valeur de texte avec « | », pour qu'elle soit longue de 10 caractères."
  },
  "Text.PadStart_Documentation.Examples_1_Code": {
    "message": "Text.PadStart(\"Name\", 10, \"|\")"
  },
  "Text.PadStart_Documentation.Examples_1_Result": {
    "message": "\"||||||Name\""
  },
  "Text.PositionOf_Documentation.Name": {
    "message": "Text.PositionOf"
  },
  "Text.PositionOf_Documentation.Description": {
    "message": "Retourne la première position de la valeur (- 1 si introuvable)."
  },
  "Text.PositionOf_Documentation.LongDescription": {
    "message": "Retourne la position de l’occurrence spécifiée de la valeur de texte <code>substring</code> trouvée dans <code>text</code>.\r\n    Un paramètre facultatif <code>occurrence</code> peut être utilisé pour spécifier la position d’occurrence à retourner (première occurrence par défaut).\r\n    Retourne -1 si <code>substring</code> est introuvable. \r\n\r\n      <div>\r\n        <code>comparer</code> est un <code>comparateur</code> utilisé pour contrôler la comparaison. Les comparateurs peuvent être utilisés pour fournir des comparaisons ne respectant pas la casse ou de culture et prenant en charge les paramètres régionaux.\r\n      </div>\r\n      <div>\r\n        Les comparateurs intégrés suivants sont disponibles dans le langage de formule :\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code> : Utilisé pour effectuer une opération exacte ou de comparaison ordinale</li>\r\n        <li><code> Comparer.OrdinalIgnoreCase </code> : utilisé pour effectuer une comparaison exacte ne respectant pas la casse</li>\r\n        <li> <code>Comparer.FromCulture</code> : utilisé pour effectuer une comparaison prenant en compte la culture</li>\r\n      </ul>"
  },
  "Text.PositionOf_Documentation.Category": {
    "message": "Text.Membership"
  },
  "Text.PositionOf_Documentation.Examples_0_Description": {
    "message": "Obtient la position de la première occurrence de « World » dans le texte « Hello, World! Hello, World! »."
  },
  "Text.PositionOf_Documentation.Examples_0_Code": {
    "message": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")"
  },
  "Text.PositionOf_Documentation.Examples_0_Result": {
    "message": "7"
  },
  "Text.PositionOf_Documentation.Examples_1_Description": {
    "message": "Obtient la position de la dernière occurrence de « World » dans « Hello, World! Hello, World! »."
  },
  "Text.PositionOf_Documentation.Examples_1_Code": {
    "message": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)"
  },
  "Text.PositionOf_Documentation.Examples_1_Result": {
    "message": "21"
  },
  "Text.PositionOfAny_Documentation.Name": {
    "message": "Text.PositionOfAny"
  },
  "Text.PositionOfAny_Documentation.Description": {
    "message": "Retourne la première position dans la valeur de texte de n'importe quel caractère répertorié (- 1 si introuvable)."
  },
  "Text.PositionOfAny_Documentation.LongDescription": {
    "message": "Retourne la première position de n'importe quel caractère dans la liste <code>characters</code> trouvée <code>text</code>.\n    Un paramètre facultatif <code>occurrence</code> peut être utilisé pour spécifier la position d'occurrence à retourner."
  },
  "Text.PositionOfAny_Documentation.Category": {
    "message": "Text.Membership"
  },
  "Text.PositionOfAny_Documentation.Examples_0_Description": {
    "message": "Recherchez la première position de « W » ou « H » dans le texte « Hello, World! »."
  },
  "Text.PositionOfAny_Documentation.Examples_0_Code": {
    "message": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})"
  },
  "Text.PositionOfAny_Documentation.Examples_0_Result": {
    "message": "0"
  },
  "Text.PositionOfAny_Documentation.Examples_1_Description": {
    "message": "Recherchez toutes les positions de « W » ou « H » dans le texte « Hello, World! »."
  },
  "Text.PositionOfAny_Documentation.Examples_1_Code": {
    "message": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)"
  },
  "Text.PositionOfAny_Documentation.Examples_1_Result": {
    "message": "{0, 7}"
  },
  "Text.Range_Documentation.Name": {
    "message": "Text.Range"
  },
  "Text.Range_Documentation.Description": {
    "message": "Retourne une sous-chaîne trouvée au niveau du décalage."
  },
  "Text.Range_Documentation.LongDescription": {
    "message": "Retourne une sous-chaîne à partir du texte <code>text</code> trouvée au niveau du décalage <code>offset</code>.\r\n    Un paramètre facultatif, <code>count</code>, peut être inclus pour spécifier le nombre de caractères à retourner. Génère une erreur s'il n'y a pas suffisamment de caractères."
  },
  "Text.Range_Documentation.Category": {
    "message": "Text.Extraction"
  },
  "Text.Range_Documentation.Examples_0_Description": {
    "message": "Recherche la sous-chaîne du texte « Hello World » en commençant à l'index 6."
  },
  "Text.Range_Documentation.Examples_0_Code": {
    "message": "Text.Range(\"Hello World\", 6)"
  },
  "Text.Range_Documentation.Examples_0_Result": {
    "message": "\"World\""
  },
  "Text.Range_Documentation.Examples_1_Description": {
    "message": "Recherche la sous-chaîne du texte « Hello World Hello » en commençant à l'index 6 et en fractionnant 5 caractères."
  },
  "Text.Range_Documentation.Examples_1_Code": {
    "message": "Text.Range(\"Hello World Hello\", 6, 5)"
  },
  "Text.Range_Documentation.Examples_1_Result": {
    "message": "\"World\""
  },
  "Text.Remove_Documentation.Name": {
    "message": "Text.Remove"
  },
  "Text.Remove_Documentation.Description": {
    "message": "Supprime toutes les occurrences du caractère ou de la liste de caractères à partir de la valeur de texte d'entrée."
  },
  "Text.Remove_Documentation.LongDescription": {
    "message": "Retourne une copie d'une valeur de texte <code>text</code> en supprimant tous les caractères à partir de <code>removeChars</code>.  "
  },
  "Text.Remove_Documentation.Category": {
    "message": "Text.Modification"
  },
  "Text.Remove_Documentation.Examples_0_Description": {
    "message": "Supprime les caractères e, et f ; de la valeur de texte."
  },
  "Text.Remove_Documentation.Examples_0_Code": {
    "message": "Text.Remove(\"a,b;c\", {\",\",\";\"})"
  },
  "Text.Remove_Documentation.Examples_0_Result": {
    "message": "\"abc\""
  },
  "Text.RemoveRange_Documentation.Name": {
    "message": "Text.RemoveRange"
  },
  "Text.RemoveRange_Documentation.Description": {
    "message": "Supprime un nombre de caractères en commençant au décalage donné"
  },
  "Text.RemoveRange_Documentation.LongDescription": {
    "message": "Retourne une copie d'une valeur de texte <code>text</code> en supprimant tous les caractères à partir de la position <code>offset</code>.\r\n    Un paramètre facultatif <code>count</code> peut être utilisé pour spécifier le nombre de caractères à supprimer. La valeur par défaut de <code>count</code> est 1. Les valeurs de position commencent à 0."
  },
  "Text.RemoveRange_Documentation.Category": {
    "message": "Text.Modification"
  },
  "Text.RemoveRange_Documentation.Examples_0_Description": {
    "message": "Supprime 1 caractère de la valeur de texte « ABEFC », à la position 2."
  },
  "Text.RemoveRange_Documentation.Examples_0_Code": {
    "message": "Text.RemoveRange(\"ABEFC\", 2)"
  },
  "Text.RemoveRange_Documentation.Examples_0_Result": {
    "message": "\"ABFC\""
  },
  "Text.RemoveRange_Documentation.Examples_1_Description": {
    "message": "Supprime 2 caractères de la valeur de texte « ABEFC », en démarrant à la position 2."
  },
  "Text.RemoveRange_Documentation.Examples_1_Code": {
    "message": "Text.RemoveRange(\"ABEFC\", 2, 2)"
  },
  "Text.RemoveRange_Documentation.Examples_1_Result": {
    "message": "\"ABC\""
  },
  "Text.Repeat_Documentation.Name": {
    "message": "Text.Repeat"
  },
  "Text.Repeat_Documentation.Description": {
    "message": "Retourne une valeur de texte composée du texte d'entrée répété un nombre spécifié de fois."
  },
  "Text.Repeat_Documentation.LongDescription": {
    "message": "Retourne une valeur de texte composée du texte d'entrée <code>text</code> répété <code>count</code> fois."
  },
  "Text.Repeat_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Repeat_Documentation.Examples_0_Description": {
    "message": "Répète le texte « a » cinq fois."
  },
  "Text.Repeat_Documentation.Examples_0_Code": {
    "message": "Text.Repeat(\"a\", 5)"
  },
  "Text.Repeat_Documentation.Examples_0_Result": {
    "message": "\"aaaaa\""
  },
  "Text.Repeat_Documentation.Examples_1_Description": {
    "message": "Répète le texte « helloworld » trois fois."
  },
  "Text.Repeat_Documentation.Examples_1_Code": {
    "message": "Text.Repeat(\"helloworld.\", 3)"
  },
  "Text.Repeat_Documentation.Examples_1_Result": {
    "message": "\"helloworld.helloworld.helloworld.\""
  },
  "Text.Select_Documentation.Name": {
    "message": "Text.Select"
  },
  "Text.Select_Documentation.Description": {
    "message": "Sélectionne toutes les occurrences du caractère ou de la liste de caractères à partir de la valeur de texte d'entrée."
  },
  "Text.Select_Documentation.LongDescription": {
    "message": "Retourne une copie d'une valeur de texte <code>text</code> avec tous les caractères hors de <code>selectChars</code> supprimés.  "
  },
  "Text.Select_Documentation.Category": {
    "message": "Text.Modification"
  },
  "Text.Select_Documentation.Examples_0_Description": {
    "message": "Sélectionnez tous les caractères dans la plage de « a » à « z » à partir de la valeur de texte."
  },
  "Text.Select_Documentation.Examples_0_Code": {
    "message": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})"
  },
  "Text.Select_Documentation.Examples_0_Result": {
    "message": "\"abc\""
  },
  "Text.Split_Documentation.Name": {
    "message": "Text.Split"
  },
  "Text.Split_Documentation.Description": {
    "message": "Fractionne le texte dans une liste de valeurs de texte en fonction d'un délimiteur spécifié."
  },
  "Text.Split_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs de texte résultant du fractionnement d'une valeur de texte <code>text</code> selon le séparateur spécifié, <code>separator</code>."
  },
  "Text.Split_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Split_Documentation.Examples_0_Description": {
    "message": "Crée une liste à partir de la valeur de texte délimitée par « | » « Name|Address|PhoneNumber »."
  },
  "Text.Split_Documentation.Examples_0_Code": {
    "message": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")"
  },
  "Text.Split_Documentation.Examples_0_Result": {
    "message": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
  },
  "Text.SplitAny_Documentation.Name": {
    "message": "Text.SplitAny"
  },
  "Text.SplitAny_Documentation.Description": {
    "message": "Retourne une liste de valeurs de texte, fractionnées selon un certain nombre de caractères à l'aide du séparateur."
  },
  "Text.SplitAny_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs de texte résultant du fractionnement d'une valeur de texte <code>text</code> selon un certain nombre de caractères dans le séparateur spécifié, <code>separators</code>."
  },
  "Text.SplitAny_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.SplitAny_Documentation.Examples_0_Description": {
    "message": "Crée une liste de valeurs de texte « Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com »."
  },
  "Text.SplitAny_Documentation.Examples_0_Code": {
    "message": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")"
  },
  "Text.SplitAny_Documentation.Examples_0_Result": {
    "message": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
  },
  "Text.Start_Documentation.Name": {
    "message": "Text.Start"
  },
  "Text.Start_Documentation.Description": {
    "message": "Retourne le début du texte."
  },
  "Text.Start_Documentation.LongDescription": {
    "message": "Retourne le premier caractère <code>count</code> de <code>text</code> comme valeur de texte."
  },
  "Text.Start_Documentation.Category": {
    "message": "Text.Extraction"
  },
  "Text.Start_Documentation.Examples_0_Description": {
    "message": "Obtient les 5 premiers caractères du texte, « Hello, World »."
  },
  "Text.Start_Documentation.Examples_0_Code": {
    "message": "Text.Start(\"Hello, World\", 5)"
  },
  "Text.Start_Documentation.Examples_0_Result": {
    "message": "\"Hello\""
  },
  "Text.StartsWith_Documentation.Name": {
    "message": "Text.StartsWith"
  },
  "Text.StartsWith_Documentation.Description": {
    "message": "Indique si le texte démarre par la valeur spécifiée."
  },
  "Text.StartsWith_Documentation.LongDescription": {
    "message": "Retourne true si la valeur de texte <code>text</code> commence par la valeur de texte <code>substring</code>.\r\n      <ul>\r\n        <li><code>text</code>: <i></i> Valeur <code>texte</code> à rechercher</li>\r\n        <li><code>substring</code>: <i></i> Valeur de <code>de texte</code> à rechercher dans <code>substring</code></li>\r\n        <li><code>comparer</code>: <i>[Optional]</i> Une <code>de comparaison de</code> utilisée pour contrôler la comparaison. Par exemple, <code>comparer.OrdinalIgnoreCase</code> peut être utilisé pour effectuer des recherches qui ne respectent pas la casse</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> est un <code>comparateur</code> qui est utilisé pour contrôler la comparaison. Les comparateurs peuvent être utilisés pour fournir des comparaisons ne respectant pas la casse ou en respectant la culture et les paramètres régionaux. \r\n      </div>\r\n      <div>\r\n        Les comparateurs intégrés suivants sont disponibles dans le langage de formule :\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code> : Utilisé pour effectuer une opération exacte ou comparaison</li>\r\n        <li><code>comparer.OrdinalIgnoreCase</code> : utilisé pour effectuer une comparaison exacte ne respectant pas la casse</li>\r\n        <li> <code>Comparer.FromCulture</code> : utilisé pour effectuer une comparaison prenant en compte la culture</li>\r\n      </ul>"
  },
  "Text.StartsWith_Documentation.Category": {
    "message": "Text.Membership"
  },
  "Text.StartsWith_Documentation.Examples_0_Description": {
    "message": "Vérifie si le texte « Hello, World » commence par le texte « hello »."
  },
  "Text.StartsWith_Documentation.Examples_0_Code": {
    "message": "Text.StartsWith(\"Hello, World\", \"hello\")"
  },
  "Text.StartsWith_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "Text.StartsWith_Documentation.Examples_1_Description": {
    "message": "Vérifie si le texte « Hello, World » commence par le texte « Hello »."
  },
  "Text.StartsWith_Documentation.Examples_1_Code": {
    "message": "Text.StartsWith(\"Hello, World\", \"Hello\")"
  },
  "Text.StartsWith_Documentation.Examples_1_Result": {
    "message": "true"
  },
  "Type.ForFunction_Documentation.Name": {
    "message": "Type.ForFunction"
  },
  "Type.ForFunction_Documentation.Description": {
    "message": "Retourne un type qui représente les fonctions avec les contraintes de paramètre et de type de retour spécifiques."
  },
  "Type.ForFunction_Documentation.LongDescription": {
    "message": "Crée un <code>function type</code> à partir de <code>signature</code>, un enregistrement de <code>ReturnType</code> et <code>Parameters</code>, et <code>min</code>, le nombre minimum d'arguments requis pour appeler la fonction."
  },
  "Type.ForFunction_Documentation.Category": {
    "message": "Type"
  },
  "Type.ForFunction_Documentation.Examples_0_Description": {
    "message": "Crée le type d'une fonction qui accepte un paramètre de nombre nommé X et retourne un nombre."
  },
  "Type.ForFunction_Documentation.Examples_0_Code": {
    "message": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)"
  },
  "Type.ForFunction_Documentation.Examples_0_Result": {
    "message": "type function (X as number) as number"
  },
  "Type.ForRecord_Documentation.Name": {
    "message": "Type.ForRecord"
  },
  "Type.ForRecord_Documentation.Description": {
    "message": "Retourne un type qui représente les enregistrements avec des contraintes de type spécifique sur les champs."
  },
  "Type.ForRecord_Documentation.LongDescription": {
    "message": "Retourne un type qui représente les enregistrements avec des contraintes de type spécifique sur les champs."
  },
  "Type.ForRecord_Documentation.Category": {
    "message": "Type"
  },
  "Type.ForRecord_Documentation.Examples_0_Description": {
    "message": "Générez dynamiquement un type de table."
  },
  "Type.ForRecord_Documentation.Examples_0_Code": {
    "message": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})"
  },
  "Type.ForRecord_Documentation.Examples_0_Result": {
    "message": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
  },
  "Type.Is_Documentation.Name": {
    "message": "Type.Is"
  },
  "Type.Is_Documentation.Description": {
    "message": "Détermine si une valeur du premier type est toujours compatible avec le second type."
  },
  "Type.Is_Documentation.LongDescription": {
    "message": "Détermine si une valeur de <code>type1</code> est toujours compatible avec <code>type2</code>."
  },
  "Type.Is_Documentation.Category": {
    "message": "Type"
  },
  "Type.Is_Documentation.Examples_0_Description": {
    "message": "Détermine si une valeur de type nombre peut toujours être traitée comme un des types."
  },
  "Type.Is_Documentation.Examples_0_Code": {
    "message": "Type.Is(type number, type any)"
  },
  "Type.Is_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Type.Is_Documentation.Examples_1_Description": {
    "message": "Détermine si une valeur de type quelconque peut toujours être traitée comme un nombre de types."
  },
  "Type.Is_Documentation.Examples_1_Code": {
    "message": "Type.Is(type any, type number)"
  },
  "Type.Is_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Type.ReplaceFacets_Documentation.Name": {
    "message": "Type.ReplaceFacets"
  },
  "Type.ReplaceFacets_Documentation.Description": {
    "message": "Remplace les facettes d'un type."
  },
  "Type.ReplaceFacets_Documentation.LongDescription": {
    "message": "Remplace les facettes de <code>type</code> par les facettes contenues dans l'enregistrement <code>facets</code>."
  },
  "Type.ReplaceFacets_Documentation.Category": {
    "message": "Type"
  },
  "Type.ReplaceTableKeys_Documentation.Name": {
    "message": "Type.ReplaceTableKeys"
  },
  "Type.ReplaceTableKeys_Documentation.Description": {
    "message": "Retourne un nouveau type de table avec toutes les clés remplacées par la liste spécifiée de clés."
  },
  "Type.ReplaceTableKeys_Documentation.LongDescription": {
    "message": "Retourne un nouveau type de table avec toutes les clés remplacées par la liste spécifiée de clés."
  },
  "Type.ReplaceTableKeys_Documentation.Category": {
    "message": "Type"
  },
  "Type.TableColumn_Documentation.Name": {
    "message": "Type.TableColumn"
  },
  "Type.TableColumn_Documentation.Description": {
    "message": "Retourne le type d'une colonne dans une table."
  },
  "Type.TableColumn_Documentation.LongDescription": {
    "message": "Retourne le type de la colonne <code>column</code> dans le type de table <code>tableType</code>."
  },
  "Type.TableColumn_Documentation.Category": {
    "message": "Type"
  },
  "Uri.Combine_Documentation.Name": {
    "message": "Uri.Combine"
  },
  "Uri.Combine_Documentation.Description": {
    "message": "Retourne un URI absolu qui est la combinaison de l'URI de base d'entrée et de l'URI relatif."
  },
  "Uri.Combine_Documentation.LongDescription": {
    "message": "Retourne un URI absolu qui est la combinaison de l'<code>baseUri</code> d'entrée et de <code>relativeUri</code>."
  },
  "Uri.Combine_Documentation.Category": {
    "message": "Uri"
  },
  "Value.Add_Documentation.Name": {
    "message": "Value.Add"
  },
  "Value.Add_Documentation.Description": {
    "message": "Retourne la somme des deux valeurs."
  },
  "Value.Add_Documentation.LongDescription": {
    "message": "Retourne la somme de <code>value1</code> et <code>value2</code>. Un paramètre facultatif, <code>precision</code>, peut être spécifié ; par défaut <code>Precision.Double</code> est utilisé."
  },
  "Value.Add_Documentation.Category": {
    "message": "Values.Arithmetic operations"
  },
  "Value.As_Documentation.Name": {
    "message": "Value.As"
  },
  "Value.As_Documentation.Description": {
    "message": "Retourne la valeur si elle est compatible avec le type spécifié."
  },
  "Value.As_Documentation.LongDescription": {
    "message": "Renvoie la valeur si elle est compatible avec le type spécifié. C'est l'équivalent de l'opérateur \"as\" dans M, à l'exception du fait qu'il peut accepter des références de type d'identifiant comme Number.Type."
  },
  "Value.As_Documentation.Category": {
    "message": "Values.Types"
  },
  "Value.As_Documentation.Examples_0_Description": {
    "message": "Effectuez un cast d’un nombre en nombre."
  },
  "Value.As_Documentation.Examples_0_Code": {
    "message": "Value.As(123, Number.Type)"
  },
  "Value.As_Documentation.Examples_0_Result": {
    "message": "123"
  },
  "Value.As_Documentation.Examples_1_Description": {
    "message": "Tentative d’effectuer un cast d’une valeur de texte en nombre."
  },
  "Value.As_Documentation.Examples_1_Code": {
    "message": "Value.As(\"abc\", type number)"
  },
  "Value.As_Documentation.Examples_1_Result": {
    "message": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
  },
  "Value.Compare_Documentation.Name": {
    "message": "Value.Compare"
  },
  "Value.Compare_Documentation.Description": {
    "message": "Retourne -1, 0 ou 1 selon que la première valeur est inférieure, égale ou supérieure à la seconde."
  },
  "Value.Compare_Documentation.LongDescription": {
    "message": "Retourne -1, 0 ou 1 selon que la première valeur est inférieure, égale ou supérieure à la seconde."
  },
  "Value.Compare_Documentation.Category": {
    "message": "Values"
  },
  "Value.Divide_Documentation.Name": {
    "message": "Value.Divide"
  },
  "Value.Divide_Documentation.Description": {
    "message": "Retourne le résultat de la division de la première valeur par la seconde."
  },
  "Value.Divide_Documentation.LongDescription": {
    "message": "Retourne le résultat de la division de <code>value1</code> par <code>value2</code>. Un paramètre facultatif, <code>precision</code>, peut être spécifié ; par défaut <code>Precision.Double</code> est utilisé."
  },
  "Value.Divide_Documentation.Category": {
    "message": "Values.Arithmetic operations"
  },
  "Value.Equals_Documentation.Name": {
    "message": "Value.Equals"
  },
  "Value.Equals_Documentation.Description": {
    "message": "Détermine si deux valeurs sont égales."
  },
  "Value.Equals_Documentation.LongDescription": {
    "message": "Retourne true si la valeur <code>value1</code> est égale à la valeur <code>value2</code>, sinon retourne false."
  },
  "Value.Equals_Documentation.Category": {
    "message": "Values"
  },
  "Value.Is_Documentation.Name": {
    "message": "Value.Is"
  },
  "Value.Is_Documentation.Description": {
    "message": "Détermine si une valeur est compatible avec le type spécifié."
  },
  "Value.Is_Documentation.LongDescription": {
    "message": "Détermine si une valeur est compatible avec le type spécifié. Ceci est équivalent à « est »l’opérateur en M, à l’exception du fait qu’il peut accepter des références de type d’identificateur comme Number. type."
  },
  "Value.Is_Documentation.Category": {
    "message": "Values.Types"
  },
  "Value.Is_Documentation.Examples_0_Description": {
    "message": "Comparez deux manières de déterminer si un nombre est compatible avec le nombre de types."
  },
  "Value.Is_Documentation.Examples_0_Code": {
    "message": "Value.Is(123, Number.Type) = (123 is number)"
  },
  "Value.Is_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Value.Multiply_Documentation.Name": {
    "message": "Value.Multiply"
  },
  "Value.Multiply_Documentation.Description": {
    "message": "Retourne le produit des deux valeurs."
  },
  "Value.Multiply_Documentation.LongDescription": {
    "message": "Retourne le produit de la multiplication <code>value1</code> de par <code>value2</code>. Un paramètre facultatif, <code>precision</code>, peut être spécifié ; par défaut <code>Precision.Double</code> est utilisé."
  },
  "Value.Multiply_Documentation.Category": {
    "message": "Values.Arithmetic operations"
  },
  "Value.NativeQuery_Documentation.Name": {
    "message": "Value.NativeQuery"
  },
  "Value.NativeQuery_Documentation.Description": {
    "message": "Évalue une requête par rapport à une cible."
  },
  "Value.NativeQuery_Documentation.LongDescription": {
    "message": "<p>Évalue <code>query</code> <code>target</code> en utilisant les paramètres spécifiés dans <code>parameters</code> et les options spécifiées dans <code>options</code>.</p>\r\n<p>La sortie de la requête est définie par <code>target</code>.</p>\r\n<p><code>target</code> fournit le contexte pour l'opération décrite par <code>query</code>.</p>\r\n<p><code>query</code> décrit la requête à exécuter sur <code>target</code>. <code>query</code> est exprimé d'une manière spécifique à <code>target</code> (par exemple, une instruction T-SQL).</p>\r\n<p>La valeur <code>parameters</code> facultative peut contenir soit une liste, soit un enregistrement, selon le cas, pour fournir les valeurs de paramètre attendues par <code>query</code>.</p>\r\n<p>L'<code>options</code>enregistrement facultatif peut contenir des options qui affectent le comportement d'évaluation de <code>query</code> contre <code>target</code>. Ces options sont spécifiques à <code>target</code>.</p>"
  },
  "Value.NativeQuery_Documentation.Category": {
    "message": "Values"
  },
  "Value.NullableEquals_Documentation.Name": {
    "message": "Value.NullableEquals"
  },
  "Value.NullableEquals_Documentation.Description": {
    "message": "Détermine si deux valeurs sont égales."
  },
  "Value.NullableEquals_Documentation.LongDescription": {
    "message": "Retourne NULL si l'un des arguments « <code>value1</code> », « <code>value2</code> » est NULL ; sinon, équivalent à Value.Equals."
  },
  "Value.NullableEquals_Documentation.Category": {
    "message": "Values"
  },
  "Value.ReplaceMetadata_Documentation.Name": {
    "message": "Value.ReplaceMetadata"
  },
  "Value.ReplaceMetadata_Documentation.Description": {
    "message": "Remplace les informations des métadonnées de l'entrée."
  },
  "Value.ReplaceMetadata_Documentation.LongDescription": {
    "message": "Remplace les informations des métadonnées de l'entrée."
  },
  "Value.ReplaceMetadata_Documentation.Category": {
    "message": "Metadata"
  },
  "Value.ReplaceType_Documentation.Name": {
    "message": "Value.ReplaceType"
  },
  "Value.ReplaceType_Documentation.Description": {
    "message": "Remplace le type de la valeur."
  },
  "Value.ReplaceType_Documentation.LongDescription": {
    "message": "Remplace le type du <code>value</code> par le <code>type</code> fourni."
  },
  "Value.ReplaceType_Documentation.Category": {
    "message": "Values.Types"
  },
  "Value.ReplaceType_Documentation.Examples_0_Description": {
    "message": "Remplacez le type par défaut d’un enregistrement par un type plus spécifique."
  },
  "Value.ReplaceType_Documentation.Examples_0_Code": {
    "message": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]"
  },
  "Value.ReplaceType_Documentation.Examples_0_Result": {
    "message": "type number"
  },
  "Value.Subtract_Documentation.Name": {
    "message": "Value.Subtract"
  },
  "Value.Subtract_Documentation.Description": {
    "message": "Retourne la différence entre les deux valeurs."
  },
  "Value.Subtract_Documentation.LongDescription": {
    "message": "Retourne la différence entre <code>value1</code> et <code>value2</code>. Un paramètre facultatif, <code>precision</code>, peut être spécifié ; par défaut <code>Precision.Double</code> est utilisé."
  },
  "Value.Subtract_Documentation.Category": {
    "message": "Values.Arithmetic operations"
  },
  "WebAction.Request_Documentation.Name": {
    "message": "WebAction.Request"
  },
  "WebAction.Request_Documentation.Description": {
    "message": "Crée une action qui, une fois exécutée, retourne les résultats d'une requête HTTP sous forme de valeur binaire."
  },
  "WebAction.Request_Documentation.LongDescription": {
    "message": "Crée une action qui, lorsqu'elle est exécutée, renvoie les résultats de l'exécution d'une <code>method</code>requête contre <code>url</code>l'utilisation de HTTP sous forme de valeur binaire.\r\n    Un paramètre d'enregistrement facultatif, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. L'enregistrement peut contenir les champs suivants : \r\n    <ul>\r\n<li><code>Query</code> : Ajoutez par programmation des param&#232;tres de requ&#234;te &#224; l’URL sans vous soucier de l’&#233;chappement.</li>\r\n<li><code>ApiKeyName</code> : Si le site cible a une notion d’une cl&#233; API, ce param&#232;tre peut &#234;tre utilis&#233; pour sp&#233;cifier le nom (et non la valeur) du param&#232;tre de cl&#233; qui doit &#234;tre utilis&#233; dans l’URL. La valeur de cl&#233; r&#233;elle est fournie dans les informations d’identification.</li>\r\n<li><code>Headers</code> : Si vous sp&#233;cifiez cette valeur en tant qu’enregistrement, des en-t&#234;tes suppl&#233;mentaires sont fournies &#224; une requ&#234;te HTTP.</li>\r\n<li><code>Timeout</code> : Si vous sp&#233;cifiez cette valeur en tant que dur&#233;e, cela modifie le d&#233;lai d’expiration d’une requ&#234;te HTTP. La valeur par d&#233;faut est 100&#160;secondes.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Si vous sp&#233;cifiez cette valeur en tant que liste, les cl&#233;s d’en-t&#234;te HTTP sont exclues du calcul de la mise en cache des donn&#233;es.</li>\r\n<li><code>IsRetry</code> : Si vous sp&#233;cifiez la valeur logique true, toute r&#233;ponse existante est ignor&#233;e dans le cache lors de la r&#233;cup&#233;ration des donn&#233;es.</li>\r\n<li><code>ManualStatusHandling</code> : Si vous sp&#233;cifiez cette valeur en tant que liste, vous risquez d’emp&#234;cher toute gestion int&#233;gr&#233;e des requ&#234;tes HTTP dont la r&#233;ponse contient l’un de ces codes d’&#233;tat.</li>\r\n<li><code>RelativePath</code> : Si cette valeur est sp&#233;cifi&#233;e, le texte est ajout&#233; &#224; l’URL de base avant d’effectuer la demande.</li>\r\n<li><code>Content</code> : Si vous sp&#233;cifiez cette valeur, son contenu devient le corps de la requ&#234;te HTTP.</li>\r\n</ul>\r\n\r\n    <br>\r\n    Notez que cette fonction est désactivée dans la plupart des contextes. Envisagez d'utiliser Web.Contents à la place.\r\n    "
  },
  "WebAction.Request_Documentation.Category": {
    "message": "Action"
  },
  "WebAction.Request_Documentation.Examples_0_Description": {
    "message": "Effectuez une demande GET sur Bing."
  },
  "WebAction.Request_Documentation.Examples_0_Code": {
    "message": "WebAction.Request(WebMethod.Get, \"https://bing.com\")"
  },
  "WebAction.Request_Documentation.Examples_0_Result": {
    "message": "Action"
  },
  "AzureEnterprise.Contents_Documentation.Description": {
    "message": "Entrer l'URL du point de terminaison de l'API REST Azure Enterprise associé à votre inscription"
  },
  "AzureEnterprise.Contents_Documentation.DisplayName": {
    "message": "AzureEnterprise.Contents"
  },
  "AzureEnterprise.Contents_Documentation.Caption": {
    "message": "AzureEnterprise.Contents"
  },
  "AzureEnterprise.Contents_Documentation.Name": {
    "message": "AzureEnterprise.Contents"
  },
  "AzureEnterprise.Contents_Documentation.LongDescription": {
    "message": "Retourne les résultats binaires de l'appel à l'URL fournie pour l'API Azure Enterprise."
  },
  "AzureEnterprise.Contents_Documentation.Examples_0_Description": {
    "message": "Utilisation de la fonction AzureEnterprise.Contents pour retourner les résultats d'un rapport spécifique."
  },
  "AzureEnterprise.Contents_Documentation.Examples_0_Code": {
    "message": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted"
  },
  "AzureEnterprise.Contents_Documentation.Examples_0_Result": {
    "message": "Table"
  },
  "AzureStorage.BlobContents_Documentation.Name": {
    "message": "AzureStorage.BlobContents"
  },
  "AzureStorage.BlobContents_Documentation.Description": {
    "message": "Retourne le contenu de l'objet blob spécifié à partir d'un coffre de stockage Azure."
  },
  "AzureStorage.BlobContents_Documentation.LongDescription": {
    "message": "Retourne le contenu de l'objet blob à l'URL, <code>url</code>, à partir d'un coffre de stockage Azure. Vous pouvez spécifier <code>options</code> pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>BlockSize</code> : Nombre d&#39;octets &#224; lire avant d&#39;attendre le consommateur de donn&#233;es. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>RequestSize</code> : Nombre d&#39;octets &#224; lire dans une requ&#234;te HTTP unique sur le serveur. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>ConcurrentRequests</code> : L&#39;option ConcurrentRequests sp&#233;cifie le nombre de demandes &#224; effectuer en parall&#232;le, ce qui permet d&#39;acc&#233;l&#233;rer le t&#233;l&#233;chargement des donn&#233;es au d&#233;triment de l&#39;utilisation de la m&#233;moire. La m&#233;moire n&#233;cessaire est &#233;gale &#224; (ConcurrentRequest * RequestSize). La valeur par d&#233;faut est&#160;16.</li>\r\n</ul>\r\n"
  },
  "AzureStorage.BlobContents_Documentation.Category": {
    "message": "Accessing data"
  },
  "AzureStorage.DataLakeContents_Documentation.Name": {
    "message": "AzureStorage.DataLakeContents"
  },
  "AzureStorage.DataLakeContents_Documentation.Description": {
    "message": "Retourne le contenu du fichier spécifié à partir d'un système de fichiers Azure Data Lake Storage."
  },
  "AzureStorage.DataLakeContents_Documentation.LongDescription": {
    "message": "Retourne le contenu du fichier à l'URL, <code>url</code>, à partir d'un système de fichiers Azure Data Lake Storage. Vous pouvez spécifier <code>options</code> pour contrôler les options suivantes :\r\n    <ul>\r\n<li><code>BlockSize</code> : Nombre d&#39;octets &#224; lire avant d&#39;attendre le consommateur de donn&#233;es. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>RequestSize</code> : Nombre d&#39;octets &#224; lire dans une requ&#234;te HTTP unique sur le serveur. La valeur par d&#233;faut est 4&#160;Mo.</li>\r\n<li><code>ConcurrentRequests</code> : L&#39;option ConcurrentRequests sp&#233;cifie le nombre de demandes &#224; effectuer en parall&#232;le, ce qui permet d&#39;acc&#233;l&#233;rer le t&#233;l&#233;chargement des donn&#233;es au d&#233;triment de l&#39;utilisation de la m&#233;moire. La m&#233;moire n&#233;cessaire est &#233;gale &#224; (ConcurrentRequest * RequestSize). La valeur par d&#233;faut est&#160;16.</li>\r\n</ul>\r\n"
  },
  "AzureStorage.DataLakeContents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Binary.ApproximateLength_Documentation.Name": {
    "message": "Binary.ApproximateLength"
  },
  "Binary.ApproximateLength_Documentation.Description": {
    "message": "Retourne la longueur approximative du binaire."
  },
  "Binary.ApproximateLength_Documentation.LongDescription": {
    "message": "Renvoie la longueur approximative de <code>binary</code>, ou une erreur si la source de données ne prend pas en charge une longueur approximative."
  },
  "Binary.ApproximateLength_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.ApproximateLength_Documentation.Examples_0_Description": {
    "message": "Obtient la longueur approximative de la valeur binaire."
  },
  "Binary.ApproximateLength_Documentation.Examples_0_Code": {
    "message": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))"
  },
  "Binary.ApproximateLength_Documentation.Examples_0_Result": {
    "message": "9"
  },
  "Binary.Buffer_Documentation.Name": {
    "message": "Binary.Buffer"
  },
  "Binary.Buffer_Documentation.Description": {
    "message": "Place la valeur binaire dans la mémoire tampon."
  },
  "Binary.Buffer_Documentation.LongDescription": {
    "message": "Place la valeur binaire dans la mémoire tampon. Le résultat de cet appel est une valeur binaire stable, avec une longueur et un ordre d'octets déterministes."
  },
  "Binary.Buffer_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.Buffer_Documentation.Examples_0_Description": {
    "message": "Créez une version stable de la valeur binaire."
  },
  "Binary.Buffer_Documentation.Examples_0_Code": {
    "message": "Binary.Buffer(Binary.FromList({0..10}))"
  },
  "Binary.Buffer_Documentation.Examples_0_Result": {
    "message": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
  },
  "Binary.Combine_Documentation.Name": {
    "message": "Binary.Combine"
  },
  "Binary.Combine_Documentation.Description": {
    "message": "Associe une liste de binaires dans un seul binaire."
  },
  "Binary.Combine_Documentation.LongDescription": {
    "message": "Associe une liste de binaires dans un seul binaire."
  },
  "Binary.Combine_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.From_Documentation.Name": {
    "message": "Binary.From"
  },
  "Binary.From_Documentation.Description": {
    "message": "Crée un binaire à partir de la valeur spécifiée"
  },
  "Binary.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>binary</code> du <code>value</code> spécifié. Si le <code>value</code> spécifié est <code>null</code>, <code>Binary.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>binary</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>binary</code> : \r\n      <ul>\r\n        <li><code>text</code> : valeur <code>binary</code> à partir de la représentation de texte. Référez-vous à <code>Binary.FromText</code> pour plus de détails.</li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "Binary.From_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.From_Documentation.Examples_0_Description": {
    "message": "Obtient la valeur <code>binary</code> de <code>\"1011\"</code>."
  },
  "Binary.From_Documentation.Examples_0_Code": {
    "message": "Binary.From(\"1011\")"
  },
  "Binary.From_Documentation.Examples_0_Result": {
    "message": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
  },
  "Binary.FromList_Documentation.Name": {
    "message": "Binary.FromList"
  },
  "Binary.FromList_Documentation.Description": {
    "message": "Convertit une liste de nombres en une valeur binaire."
  },
  "Binary.FromList_Documentation.LongDescription": {
    "message": "Convertit une liste de nombres en une valeur binaire."
  },
  "Binary.FromList_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.FromText_Documentation.Name": {
    "message": "Binary.FromText"
  },
  "Binary.FromText_Documentation.Description": {
    "message": "Décode les données d'un texte en binaire."
  },
  "Binary.FromText_Documentation.LongDescription": {
    "message": "Retourne le résultat de la conversion de la valeur de texte <code>text</code> dans une valeur binaire (liste de <code>number</code>). <code>encoding</code> peut être spécifié pour indiquer le codage utilisé dans la valeur de texte.\r\n      Les valeurs <code>BinaryEncoding</code> suivantes peuvent être utilisées pour <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code> : codage en base 64</li>\r\n        <li><code>BinaryEncoding.Hex</code> : codage hexadécimal</li>\r\n      </ul>"
  },
  "Binary.FromText_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.FromText_Documentation.Examples_0_Description": {
    "message": "Décode « 1011 » en binaire."
  },
  "Binary.FromText_Documentation.Examples_0_Code": {
    "message": "Binary.FromText(\"1011\")"
  },
  "Binary.FromText_Documentation.Examples_0_Result": {
    "message": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
  },
  "Binary.FromText_Documentation.Examples_1_Description": {
    "message": "Décode « 1011 » en binaire avec un codage hexadécimal."
  },
  "Binary.FromText_Documentation.Examples_1_Code": {
    "message": "Binary.FromText(\"1011\", BinaryEncoding.Hex)"
  },
  "Binary.FromText_Documentation.Examples_1_Result": {
    "message": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
  },
  "Binary.InferContentType_Documentation.Name": {
    "message": "Binary.InferContentType"
  },
  "Binary.InferContentType_Documentation.Description": {
    "message": "Lit le flux binaire et essaie de déterminer le type de contenu et les informations de format du flux."
  },
  "Binary.InferContentType_Documentation.LongDescription": {
    "message": "Retourne un enregistrement avec le champ Content.Type qui contient le type MIME déduit. \r\n    Si le type de contenu déduit est text/* et qu'une page de codes pour encodage est détectée, le champ Content.Encoding contenant l'encodage du flux est également retourné.\r\n    Si le type de contenu déduit est text/csv et que le format est délimité, le champ Csv.PotentialDelimiter contenant une table destinée à l'analyse des délimiteurs potentiels est également retourné.\r\n    Si le type de contenu déduit est text/csv et que le format a une largeur fixe, le champ Csv.PotentialPositions contenant une liste destinée à l'analyse des positions de colonnes à largeur fixe potentielles est également retourné."
  },
  "Binary.InferContentType_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.Length_Documentation.Name": {
    "message": "Binary.Length"
  },
  "Binary.Length_Documentation.Description": {
    "message": "Retourne le nombre de caractères."
  },
  "Binary.Length_Documentation.LongDescription": {
    "message": "Retourne le nombre de caractères."
  },
  "Binary.Length_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.ToList_Documentation.Name": {
    "message": "Binary.ToList"
  },
  "Binary.ToList_Documentation.Description": {
    "message": "Convertit une valeur binaire en une liste de numéros."
  },
  "Binary.ToList_Documentation.LongDescription": {
    "message": "Convertit une valeur binaire en une liste de numéros."
  },
  "Binary.ToList_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.ToText_Documentation.Name": {
    "message": "Binary.ToText"
  },
  "Binary.ToText_Documentation.Description": {
    "message": "Code les données binaires en texte."
  },
  "Binary.ToText_Documentation.LongDescription": {
    "message": "Retourne le résultat de la conversion d'une liste binaire de numéros <code>binary</code> dans une valeur de texte. Au besoin, <code>encoding</code> peut être spécifié pour indiquer le codage à utiliser dans la valeur de texte produite\r\n      Les valeurs <code>BinaryEncoding</code> suivantes peuvent être utilisées pour <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code> : codage en base 64</li>\r\n        <li><code>BinaryEncoding.Hex</code> : codage hexadécimal</li>\r\n      </ul>"
  },
  "Binary.ToText_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.ViewError_Documentation.Name": {
    "message": "Binary.ViewError"
  },
  "Binary.ViewError_Documentation.Description": {
    "message": "Crée un enregistrement d’erreurs modifié qui ne déclenche pas d’action de secours lorsqu’il est lancé par un gestionnaire défini sur une vue (via Binary.View)."
  },
  "Binary.ViewError_Documentation.LongDescription": {
    "message": "Crée un enregistrement d’erreurs modifié à partir de <code>errorRecord</code> qui ne déclenche pas d’action de secours lorsqu’il est lancé par un gestionnaire défini sur une vue (via Binary.View)."
  },
  "Binary.ViewError_Documentation.Category": {
    "message": "Binary"
  },
  "Binary.ViewFunction_Documentation.Name": {
    "message": "Binary.ViewFunction"
  },
  "Binary.ViewFunction_Documentation.Description": {
    "message": "Crée une fonction qui peut être interceptée par un gestionnaire défini sur une vue (via Binary.View)."
  },
  "Binary.ViewFunction_Documentation.LongDescription": {
    "message": "<p>Crée une fonction d’affichage basée sur <code>function</code> qui peut être gérée dans une vue créée par <code>Binary.View</code>.</p>\r\n<p>Le gestionnaire <code>OnInvoke</code> de <code>Binary.View</code> peut être utilisé pour définir un gestionnaire pour la fonction de vue.</p>\r\n<p>Comme avec les gestionnaires pour les opérations intégrées, si aucun gestionnaire <code>OnInvoke</code> n’est spécifié, s’il ne gère pas la fonction de vue, ou si une erreur est déclenchée par le gestionnaire, <code>function</code> est appliqué au-dessus de la vue.</p>\r\n<p>Referez-vous à la documentation publiée du connecteur personnalisé Power Query pour un description plus complète de <code>Binary.View</code> et des fonctions de vue personnalisées.</p>"
  },
  "Binary.ViewFunction_Documentation.Category": {
    "message": "Binary"
  },
  "BinaryFormat.7BitEncodedSignedInteger_Documentation.Name": {
    "message": "BinaryFormat.7BitEncodedSignedInteger"
  },
  "BinaryFormat.7BitEncodedSignedInteger_Documentation.Description": {
    "message": "Format binaire qui lit un entier signé 64 bits qui a été encodé à l'aide d'un encodage à longueur variable 7 bits."
  },
  "BinaryFormat.7BitEncodedSignedInteger_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier signé 64 bits qui a été encodé à l'aide d'un encodage à longueur variable 7 bits."
  },
  "BinaryFormat.7BitEncodedSignedInteger_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.7BitEncodedUnsignedInteger_Documentation.Name": {
    "message": "BinaryFormat.7BitEncodedUnsignedInteger"
  },
  "BinaryFormat.7BitEncodedUnsignedInteger_Documentation.Description": {
    "message": "Format binaire qui lit un entier non signé 64 bits qui a été encodé à l'aide d'un encodage à longueur variable 7 bits."
  },
  "BinaryFormat.7BitEncodedUnsignedInteger_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier non signé 64 bits qui a été encodé à l'aide d'un encodage à longueur variable 7 bits."
  },
  "BinaryFormat.7BitEncodedUnsignedInteger_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.Byte_Documentation.Name": {
    "message": "BinaryFormat.Byte"
  },
  "BinaryFormat.Byte_Documentation.Description": {
    "message": "Format binaire qui lit un entier non signé 8 bits."
  },
  "BinaryFormat.Byte_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier non signé 8 bits."
  },
  "BinaryFormat.Byte_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.Decimal_Documentation.Name": {
    "message": "BinaryFormat.Decimal"
  },
  "BinaryFormat.Decimal_Documentation.Description": {
    "message": "Format binaire qui lit une valeur décimale .NET de 16 octets."
  },
  "BinaryFormat.Decimal_Documentation.LongDescription": {
    "message": "Format binaire qui lit une valeur décimale .NET de 16 octets."
  },
  "BinaryFormat.Decimal_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.Double_Documentation.Name": {
    "message": "BinaryFormat.Double"
  },
  "BinaryFormat.Double_Documentation.Description": {
    "message": "Format binaire qui lit une valeur à virgule flottante double précision IEEE de 8 octets."
  },
  "BinaryFormat.Double_Documentation.LongDescription": {
    "message": "Format binaire qui lit une valeur à virgule flottante double précision IEEE de 8 octets."
  },
  "BinaryFormat.Double_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.List_Documentation.Name": {
    "message": "BinaryFormat.List"
  },
  "BinaryFormat.List_Documentation.Description": {
    "message": "Retourne un format binaire qui lit une séquence d'éléments et retourne une liste."
  },
  "BinaryFormat.List_Documentation.LongDescription": {
    "message": "Retourne un format binaire qui lit une séquence d'éléments et retourne une <code>list</code>.  Le paramètre <code>binaryFormat</code> spécifie le format binaire de chaque élément.  Il existe trois façons de déterminer le nombre d'éléments lus : <ul><li>si le <code>countOrCondition</code> n'est pas spécifié, le format binaire lit jusqu'à ce qu'il n'y ait plus d'éléments.</li><li>Si le <code>countOrCondition</code> est un nombre, alors le format binaire lit autant d'éléments.</li><li>Si le <code>countOrCondition</code> est une fonction, alors cette fonction sera appelée pour chaque élément lu.  La fonction retourne la valeur true pour continuer, et false pour cesser de lire les éléments.  L'élément final est inclus dans la liste. </li><li>Si <code>countOrCondition</code> est un format binaire, alors le nombre d'éléments doit précéder la liste, et le format spécifié est utilisé pour lire le nombre.</li></ul>"
  },
  "BinaryFormat.List_Documentation.Category": {
    "message": "Binary Formats.Reading lists"
  },
  "BinaryFormat.List_Documentation.Examples_0_Description": {
    "message": "Lit les octets jusqu'à la fin des données."
  },
  "BinaryFormat.List_Documentation.Examples_0_Code": {
    "message": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.List_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3}"
  },
  "BinaryFormat.List_Documentation.Examples_1_Description": {
    "message": "Lit deux octets."
  },
  "BinaryFormat.List_Documentation.Examples_1_Code": {
    "message": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.List_Documentation.Examples_1_Result": {
    "message": "{1, 2}"
  },
  "BinaryFormat.List_Documentation.Examples_2_Description": {
    "message": "Lit les octets jusqu'à ce que la valeur d'octet soit supérieure ou égale à deux."
  },
  "BinaryFormat.List_Documentation.Examples_2_Code": {
    "message": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)"
  },
  "BinaryFormat.List_Documentation.Examples_2_Result": {
    "message": "{1, 2}"
  },
  "BinaryFormat.Null_Documentation.Name": {
    "message": "BinaryFormat.Null"
  },
  "BinaryFormat.Null_Documentation.Description": {
    "message": "Format binaire qui lit zéro octets et retourne une valeur null."
  },
  "BinaryFormat.Null_Documentation.LongDescription": {
    "message": "Format binaire qui lit zéro octets et retourne une valeur null."
  },
  "BinaryFormat.Null_Documentation.Category": {
    "message": "Binary Formats.Controlling what comes next"
  },
  "BinaryFormat.Record_Documentation.Name": {
    "message": "BinaryFormat.Record"
  },
  "BinaryFormat.Record_Documentation.Description": {
    "message": "Retourne un format binaire qui lit un enregistrement."
  },
  "BinaryFormat.Record_Documentation.LongDescription": {
    "message": "Retourne un format binaire qui lit un enregistrement.  Le paramètre <code>record</code> spécifie le format binaire de l'enregistrement.  Chaque champ dans l'enregistrement peut avoir un format binaire différent.  Si un champ contient une valeur qui n'est pas une valeur de format binaire, alors aucune donnée n'est lue pour ce champ, et la valeur du champ est répercutée dans le résultat."
  },
  "BinaryFormat.Record_Documentation.Category": {
    "message": "Binary Formats.Reading records"
  },
  "BinaryFormat.Record_Documentation.Examples_0_Description": {
    "message": "Lit un enregistrement contenant un entier 16 bits et un entier 32 bits."
  },
  "BinaryFormat.Record_Documentation.Examples_0_Code": {
    "message": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)"
  },
  "BinaryFormat.Record_Documentation.Examples_0_Result": {
    "message": "[A = 1, B = 2]"
  },
  "BinaryFormat.SignedInteger16_Documentation.Name": {
    "message": "BinaryFormat.SignedInteger16"
  },
  "BinaryFormat.SignedInteger16_Documentation.Description": {
    "message": "Format binaire qui lit un entier signé 16 bits."
  },
  "BinaryFormat.SignedInteger16_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier signé 16 bits."
  },
  "BinaryFormat.SignedInteger16_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.SignedInteger32_Documentation.Name": {
    "message": "BinaryFormat.SignedInteger32"
  },
  "BinaryFormat.SignedInteger32_Documentation.Description": {
    "message": "Format binaire qui lit un entier signé 32 bits."
  },
  "BinaryFormat.SignedInteger32_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier signé 32 bits."
  },
  "BinaryFormat.SignedInteger32_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.SignedInteger64_Documentation.Name": {
    "message": "BinaryFormat.SignedInteger64"
  },
  "BinaryFormat.SignedInteger64_Documentation.Description": {
    "message": "Format binaire qui lit un entier signé 64 bits."
  },
  "BinaryFormat.SignedInteger64_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier signé 64 bits."
  },
  "BinaryFormat.SignedInteger64_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.Single_Documentation.Name": {
    "message": "BinaryFormat.Single"
  },
  "BinaryFormat.Single_Documentation.Description": {
    "message": "Format binaire qui lit une valeur à virgule flottante simple précision IEEE de 4 octets."
  },
  "BinaryFormat.Single_Documentation.LongDescription": {
    "message": "Format binaire qui lit une valeur à virgule flottante simple précision IEEE de 4 octets."
  },
  "BinaryFormat.Single_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.Text_Documentation.Name": {
    "message": "BinaryFormat.Text"
  },
  "BinaryFormat.Text_Documentation.Description": {
    "message": "Retourne un format binaire qui lit une valeur de texte."
  },
  "BinaryFormat.Text_Documentation.LongDescription": {
    "message": "Retourne un format binaire qui lit une valeur de texte.  <code>length</code> spécifie le nombre d'octets à décoder, ou le format binaire de longueur qui précède le texte.  La valeur facultative <code>encoding</code> spécifie le codage du texte.  Si le <code>encoding</code> n'est pas spécifié, alors le codage est déterminé par les marques d'ordre d'octet Unicode.  Si aucune marque d'ordre d'octet n'est présente, alors <code>TextEncoding.Utf8</code> est utilisé."
  },
  "BinaryFormat.Text_Documentation.Category": {
    "message": "Binary Formats.Reading text"
  },
  "BinaryFormat.Text_Documentation.Examples_0_Description": {
    "message": "Décode deux octets comme texte ASCII."
  },
  "BinaryFormat.Text_Documentation.Examples_0_Code": {
    "message": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)"
  },
  "BinaryFormat.Text_Documentation.Examples_0_Result": {
    "message": "\"AB\""
  },
  "BinaryFormat.Text_Documentation.Examples_1_Description": {
    "message": "Décodez le texte ASCII lorsque la longueur du texte en octets apparaît avant le texte comme un octet."
  },
  "BinaryFormat.Text_Documentation.Examples_1_Code": {
    "message": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)"
  },
  "BinaryFormat.Text_Documentation.Examples_1_Result": {
    "message": "\"AB\""
  },
  "BinaryFormat.UnsignedInteger16_Documentation.Name": {
    "message": "BinaryFormat.UnsignedInteger16"
  },
  "BinaryFormat.UnsignedInteger16_Documentation.Description": {
    "message": "Format binaire qui lit un entier non signé 16 bits."
  },
  "BinaryFormat.UnsignedInteger16_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier non signé 16 bits."
  },
  "BinaryFormat.UnsignedInteger16_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.UnsignedInteger32_Documentation.Name": {
    "message": "BinaryFormat.UnsignedInteger32"
  },
  "BinaryFormat.UnsignedInteger32_Documentation.Description": {
    "message": "Format binaire qui lit un entier non signé 32 bits."
  },
  "BinaryFormat.UnsignedInteger32_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier non signé 32 bits."
  },
  "BinaryFormat.UnsignedInteger32_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "BinaryFormat.UnsignedInteger64_Documentation.Name": {
    "message": "BinaryFormat.UnsignedInteger64"
  },
  "BinaryFormat.UnsignedInteger64_Documentation.Description": {
    "message": "Format binaire qui lit un entier non signé 64 bits."
  },
  "BinaryFormat.UnsignedInteger64_Documentation.LongDescription": {
    "message": "Format binaire qui lit un entier non signé 64 bits."
  },
  "BinaryFormat.UnsignedInteger64_Documentation.Category": {
    "message": "Binary Formats.Reading numbers"
  },
  "Byte.From_Documentation.Name": {
    "message": "Byte.From"
  },
  "Byte.From_Documentation.Description": {
    "message": "Crée un entier 8 bits à partir de la valeur donnée."
  },
  "Byte.From_Documentation.LongDescription": {
    "message": "Retourne une valeur entière 8 bits <code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Byte.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage d'entiers 8 bits sans partie fractionnaire, <code>value</code> est retourné. S'il comprend une partie fractionnaire, le nombre est arrondi selon le mode d'arrondi spécifié. Le mode d'arrondi par défaut est <code>RoundingMode.ToEven</code>. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Référez-vous à <code>Number.Round</code> pour les modes d'arrondi disponibles. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Byte.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Byte.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur entière 8 bits <code>number</code> de <code>\"4\"</code>."
  },
  "Byte.From_Documentation.Examples_0_Code": {
    "message": "Byte.From(\"4\")"
  },
  "Byte.From_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Byte.From_Documentation.Examples_1_Description": {
    "message": "Obtenez la valeur entière 8 bits <code>number</code> de <code>\"4.5\"</code> en utilisant <code>RoundingMode.AwayFromZero</code>."
  },
  "Byte.From_Documentation.Examples_1_Code": {
    "message": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)"
  },
  "Byte.From_Documentation.Examples_1_Result": {
    "message": "5"
  },
  "Character.FromNumber_Documentation.Name": {
    "message": "Character.FromNumber"
  },
  "Character.FromNumber_Documentation.Description": {
    "message": "Convertit le nombre en sa valeur de caractère."
  },
  "Character.FromNumber_Documentation.LongDescription": {
    "message": "Retourne l'équivalent en caractère du nombre."
  },
  "Character.FromNumber_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Character.FromNumber_Documentation.Examples_0_Description": {
    "message": "Avec le nombre 9, recherchez la valeur de caractère."
  },
  "Character.FromNumber_Documentation.Examples_0_Code": {
    "message": "Character.FromNumber(9)"
  },
  "Character.FromNumber_Documentation.Examples_0_Result": {
    "message": "\"#(tab)\""
  },
  "Character.ToNumber_Documentation.Name": {
    "message": "Character.ToNumber"
  },
  "Character.ToNumber_Documentation.Description": {
    "message": "Convertit un caractère en sa valeur de nombre."
  },
  "Character.ToNumber_Documentation.LongDescription": {
    "message": "Retourne l'équivalent en nombre du caractère, <code>character</code>."
  },
  "Character.ToNumber_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Character.ToNumber_Documentation.Examples_0_Description": {
    "message": "Avec le caractère « #(tab) » 9, recherchez la valeur de nombre."
  },
  "Character.ToNumber_Documentation.Examples_0_Code": {
    "message": "Character.ToNumber(\"#(tab)\")"
  },
  "Character.ToNumber_Documentation.Examples_0_Result": {
    "message": "9"
  },
  "Combiner.CombineTextByDelimiter_Documentation.Name": {
    "message": "Combiner.CombineTextByDelimiter"
  },
  "Combiner.CombineTextByDelimiter_Documentation.Description": {
    "message": "Renvoie une fonction qui combine une liste de valeurs textuelles en une seule valeur textuelle en utilisant le délimiteur spécifié."
  },
  "Combiner.CombineTextByDelimiter_Documentation.LongDescription": {
    "message": "Renvoie une fonction qui combine une liste de valeurs textuelles en une seule valeur textuelle en utilisant le délimiteur spécifié."
  },
  "Combiner.CombineTextByDelimiter_Documentation.Category": {
    "message": "Combiner"
  },
  "Combiner.CombineTextByDelimiter_Documentation.Examples_0_Description": {
    "message": "Combinez une liste de valeurs de texte à l’aide d’un délimiteur de point-virgule."
  },
  "Combiner.CombineTextByDelimiter_Documentation.Examples_0_Code": {
    "message": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})"
  },
  "Combiner.CombineTextByDelimiter_Documentation.Examples_0_Result": {
    "message": "\"a;b;c\""
  },
  "Combiner.CombineTextByDelimiter_Documentation.Examples_1_Description": {
    "message": "Permet de combiner le texte de deux colonnes à l’aide d’un délimiteur de virgule et d’une citation de style CSV."
  },
  "Combiner.CombineTextByDelimiter_Documentation.Examples_1_Code": {
    "message": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged"
  },
  "Combiner.CombineTextByDelimiter_Documentation.Examples_1_Result": {
    "message": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
  },
  "Combiner.CombineTextByEachDelimiter_Documentation.Name": {
    "message": "Combiner.CombineTextByEachDelimiter"
  },
  "Combiner.CombineTextByEachDelimiter_Documentation.Description": {
    "message": "Retourne une fonction qui associe une liste de textes dans un seul fichier texte à l'aide de chaque délimiteur spécifié en séquence."
  },
  "Combiner.CombineTextByEachDelimiter_Documentation.LongDescription": {
    "message": "Retourne une fonction qui associe une liste de textes dans un seul fichier texte à l'aide de chaque délimiteur spécifié en séquence."
  },
  "Combiner.CombineTextByEachDelimiter_Documentation.Category": {
    "message": "Combiner"
  },
  "Combiner.CombineTextByLengths_Documentation.Name": {
    "message": "Combiner.CombineTextByLengths"
  },
  "Combiner.CombineTextByLengths_Documentation.Description": {
    "message": "Retourne une fonction qui associe une liste de textes dans un seul fichier texte à l'aide des longueurs spécifiées."
  },
  "Combiner.CombineTextByLengths_Documentation.LongDescription": {
    "message": "Retourne une fonction qui associe une liste de textes dans un seul fichier texte à l'aide des longueurs spécifiées."
  },
  "Combiner.CombineTextByLengths_Documentation.Category": {
    "message": "Combiner"
  },
  "Combiner.CombineTextByPositions_Documentation.Name": {
    "message": "Combiner.CombineTextByPositions"
  },
  "Combiner.CombineTextByPositions_Documentation.Description": {
    "message": "Retourne une fonction qui associe une liste de textes dans un seul fichier texte à l'aide des positions spécifiées."
  },
  "Combiner.CombineTextByPositions_Documentation.LongDescription": {
    "message": "Retourne une fonction qui associe une liste de textes dans un seul fichier texte à l'aide des positions spécifiées."
  },
  "Combiner.CombineTextByPositions_Documentation.Category": {
    "message": "Combiner"
  },
  "Combiner.CombineTextByRanges_Documentation.Name": {
    "message": "Combiner.CombineTextByRanges"
  },
  "Combiner.CombineTextByRanges_Documentation.Description": {
    "message": "Retourne une fonction qui associe une liste de textes dans un seul fichier texte à l'aide des positions et longueurs spécifiées."
  },
  "Combiner.CombineTextByRanges_Documentation.LongDescription": {
    "message": "Retourne une fonction qui combine une liste de texte en un seul texte à l’aide des positions et longueurs spécifiées. Une longueur null indique que la valeur de texte entière doit être incluse."
  },
  "Combiner.CombineTextByRanges_Documentation.Category": {
    "message": "Combiner"
  },
  "Comparer.FromCulture_Documentation.Name": {
    "message": "Comparer.FromCulture"
  },
  "Comparer.FromCulture_Documentation.Description": {
    "message": "Retourne une fonction de comparaison en fonction de la culture et du respect de la casse spécifiés."
  },
  "Comparer.FromCulture_Documentation.LongDescription": {
    "message": "Retourne une fonction de comparaison qui utilise le <code>culture</code> et le respect de la casse spécifiés par <code>ignoreCase</code> pour effectuer des comparaisons.<br>\r\n      <br>\r\n      Une fonction de comparaison accepte deux arguments et retourne -1, 0 ou 1 selon que la première valeur est inférieure, égale ou supérieure à la seconde.<br>\r\n      <br>\r\n      La valeur par défaut de <code>ignoreCase</code> est false. Le <code>culture</code> doit être l’un des paramètres régionaux pris en charge par le .NET Framework (par exemple, « fr-FR »).\r\n    "
  },
  "Comparer.FromCulture_Documentation.Category": {
    "message": "Comparer"
  },
  "Comparer.FromCulture_Documentation.Examples_0_Description": {
    "message": "Comparez \"a\" et \"A\" en utilisant le paramètre régional \"en-US\" pour déterminer si les valeurs sont égales."
  },
  "Comparer.FromCulture_Documentation.Examples_0_Code": {
    "message": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")"
  },
  "Comparer.FromCulture_Documentation.Examples_0_Result": {
    "message": "-1"
  },
  "Comparer.FromCulture_Documentation.Examples_1_Description": {
    "message": "Comparez \"a\" et \"A\" en utilisant le paramètre régional \"en-US\" en ignorant la casse pour déterminer si les valeurs sont égales."
  },
  "Comparer.FromCulture_Documentation.Examples_1_Code": {
    "message": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")"
  },
  "Comparer.FromCulture_Documentation.Examples_1_Result": {
    "message": "0"
  },
  "Cube.AttributeMemberId_Documentation.Name": {
    "message": "Cube.AttributeMemberId"
  },
  "Cube.AttributeMemberId_Documentation.Description": {
    "message": "Retourne l'identificateur de membre unique à partir de la valeur de la propriété du membre."
  },
  "Cube.AttributeMemberId_Documentation.LongDescription": {
    "message": "Retourne l'identificateur de membre unique à partir d'une valeur de propriété de membre. <code>attribute</code>. Retourne null pour toute autre valeur."
  },
  "Cube.AttributeMemberId_Documentation.Category": {
    "message": "Cube"
  },
  "Cube.PropertyKey_Documentation.Name": {
    "message": "Cube.PropertyKey"
  },
  "Cube.PropertyKey_Documentation.Description": {
    "message": "Retourne la clé d'une propriété."
  },
  "Cube.PropertyKey_Documentation.LongDescription": {
    "message": "Retourne la clé de la propriété <code>property</code>."
  },
  "Cube.PropertyKey_Documentation.Category": {
    "message": "Cube"
  },
  "Currency.From_Documentation.Name": {
    "message": "Currency.From"
  },
  "Currency.From_Documentation.Description": {
    "message": "Retourne une valeur de devise à partir de la valeur spécifiée."
  },
  "Currency.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>currency</code> à partir de l'élément <code>value</code> spécifié. Si l'élément <code>value</code> spécifié est <code>null</code>, <code>Currency.From</code> retourne <code>null</code>. Si l'élément <code>value</code> spécifié est <code>number</code> dans la plage valide des devises, la partie fractionnaire de <code>value</code> est arrondie à 4 chiffres décimaux et est retournée. Si <code>value</code> donné est d'un autre type, il sera premièrement converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. La plage valide pour une devise va de <code>-922,337,203,685,477.5808</code> à <code>922,337,203,685,477.5807</code>. Référez-vous à <code>Number.Round</code> pour les modes d'arrondi disponibles. Le mode par défaut est <code>RoundingMode.ToEven</code>. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Currency.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Currency.From_Documentation.Examples_0_Description": {
    "message": "Obtenir la valeur <code>currency</code> de <code>\"1.23455\"</code>."
  },
  "Currency.From_Documentation.Examples_0_Code": {
    "message": "Currency.From(\"1.23455\")"
  },
  "Currency.From_Documentation.Examples_0_Result": {
    "message": "1.2346"
  },
  "Currency.From_Documentation.Examples_1_Description": {
    "message": "Obtenez la valeur <code>currency</code> de <code>\"1.23455\"</code> en utilisant <code>RoundingMode.Down</code>."
  },
  "Currency.From_Documentation.Examples_1_Code": {
    "message": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)"
  },
  "Currency.From_Documentation.Examples_1_Result": {
    "message": "1.2345"
  },
  "Date.Day_Documentation.Name": {
    "message": "Date.Day"
  },
  "Date.Day_Documentation.Description": {
    "message": "Retourne le composant de jour."
  },
  "Date.Day_Documentation.LongDescription": {
    "message": "Retourne le composant de jour d'une valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.\r\n      <ul>\r\n        <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à partir de laquelle le composant de jour est extrait.</li>\r\n      </ul>"
  },
  "Date.Day_Documentation.Category": {
    "message": "Date"
  },
  "Date.Day_Documentation.Examples_0_Description": {
    "message": "Obtient le composant de jour d'une valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> représentant la date et l'heure 5/14/2011 05:00:00 PM."
  },
  "Date.Day_Documentation.Examples_0_Code": {
    "message": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))"
  },
  "Date.Day_Documentation.Examples_0_Result": {
    "message": "14"
  },
  "Date.DayOfWeek_Documentation.Name": {
    "message": "Date.DayOfWeek"
  },
  "Date.DayOfWeek_Documentation.Description": {
    "message": "Retourne un nombre (entre 0 et 6) indiquant le jour de la semaine de la valeur fournie."
  },
  "Date.DayOfWeek_Documentation.LongDescription": {
    "message": "Retourne un nombre (entre 0 et 6) indiquant le jour de la semaine du <code>dateTime</code> fourni.\r\n  <ul>\r\n        <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.</li>\r\n        <li><code>firstDayOfWeek</code> : Valeur <code>Day</code> indiquant le jour défini comme premier jour de la semaine. Les valeurs autorisées sont Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday ou Day.Saturday. Si elle n'est pas spécifiée, une valeur par défaut dépendante de la culture est utilisée.</li>\r\n      </ul>"
  },
  "Date.DayOfWeek_Documentation.Category": {
    "message": "Date"
  },
  "Date.DayOfWeek_Documentation.Examples_0_Description": {
    "message": "Obtenez le jour de la semaine représenté par lundi 21 février 2011, dimanche étant le premier jour de la semaine."
  },
  "Date.DayOfWeek_Documentation.Examples_0_Code": {
    "message": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)"
  },
  "Date.DayOfWeek_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Date.DayOfWeek_Documentation.Examples_1_Description": {
    "message": "Obtenez le jour de la semaine représenté par lundi 21 février 2011, lundi étant le premier jour de la semaine."
  },
  "Date.DayOfWeek_Documentation.Examples_1_Code": {
    "message": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)"
  },
  "Date.DayOfWeek_Documentation.Examples_1_Result": {
    "message": "0"
  },
  "Date.DayOfWeekName_Documentation.Name": {
    "message": "Date.DayOfWeekName"
  },
  "Date.DayOfWeekName_Documentation.Description": {
    "message": "Retourne le nom du jour de la semaine."
  },
  "Date.DayOfWeekName_Documentation.LongDescription": {
    "message": "Retourne le jour du nom de la semaine pour le <code>date</code> fourni. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Date.DayOfWeekName_Documentation.Category": {
    "message": "Date"
  },
  "Date.DayOfWeekName_Documentation.Examples_0_Description": {
    "message": "Obtenir le nom du jour de la semaine."
  },
  "Date.DayOfWeekName_Documentation.Examples_0_Code": {
    "message": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")"
  },
  "Date.DayOfWeekName_Documentation.Examples_0_Result": {
    "message": "\"Saturday\""
  },
  "Date.DayOfYear_Documentation.Name": {
    "message": "Date.DayOfYear"
  },
  "Date.DayOfYear_Documentation.Description": {
    "message": "Retourne un nombre compris entre 1 et 366 représentant le jour de l'année."
  },
  "Date.DayOfYear_Documentation.LongDescription": {
    "message": "Retourne un nombre représentant le jour de l'année dans la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> fournie, <code>dateTime</code>."
  },
  "Date.DayOfYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.DayOfYear_Documentation.Examples_0_Description": {
    "message": "Jour de l’année du 1er mars 2011."
  },
  "Date.DayOfYear_Documentation.Examples_0_Code": {
    "message": "Date.DayOfYear(#date(2011, 03, 01))"
  },
  "Date.DayOfYear_Documentation.Examples_0_Result": {
    "message": "60"
  },
  "Date.DaysInMonth_Documentation.Name": {
    "message": "Date.DaysInMonth"
  },
  "Date.DaysInMonth_Documentation.Description": {
    "message": "Retourne un nombre compris entre 28 et 31 représentant le nombre de jours dans le mois."
  },
  "Date.DaysInMonth_Documentation.LongDescription": {
    "message": "Retourne le nombre de jours représentant le mois dans la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>, <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> pour laquelle le nombre de jours dans le mois est retourné.</li>\r\n      </ul>"
  },
  "Date.DaysInMonth_Documentation.Category": {
    "message": "Date"
  },
  "Date.DaysInMonth_Documentation.Examples_0_Description": {
    "message": "Nombre de jours dans le mois de décembre que représente <code>#date(2011, 12, 01)></code>."
  },
  "Date.DaysInMonth_Documentation.Examples_0_Code": {
    "message": "Date.DaysInMonth(#date(2011, 12, 01))"
  },
  "Date.DaysInMonth_Documentation.Examples_0_Result": {
    "message": "31"
  },
  "Date.EndOfDay_Documentation.Name": {
    "message": "Date.EndOfDay"
  },
  "Date.EndOfDay_Documentation.Description": {
    "message": "Renvoie la fin de la journée."
  },
  "Date.EndOfDay_Documentation.LongDescription": {
    "message": "Renvoie la fin de la journée représentée par <code>dateTime</code>. Les informations de fuseau horaire sont conservées.\r\n      <ul>\r\n        <li><code>dateTime</code> : une valeur <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code> à partir de laquelle la fin de la journée est calculée.</li>\r\n      </ul>"
  },
  "Date.EndOfDay_Documentation.Category": {
    "message": "Date"
  },
  "Date.EndOfDay_Documentation.Examples_0_Description": {
    "message": "Obtient la fin du jour pour 5/14/2011 05:00:00 PM."
  },
  "Date.EndOfDay_Documentation.Examples_0_Code": {
    "message": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))"
  },
  "Date.EndOfDay_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
  },
  "Date.EndOfDay_Documentation.Examples_1_Description": {
    "message": "Obtient la fin du jour pour 5/17/2011 05:00:00 PM -7:00."
  },
  "Date.EndOfDay_Documentation.Examples_1_Code": {
    "message": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))"
  },
  "Date.EndOfDay_Documentation.Examples_1_Result": {
    "message": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
  },
  "Date.EndOfMonth_Documentation.Name": {
    "message": "Date.EndOfMonth"
  },
  "Date.EndOfMonth_Documentation.Description": {
    "message": "Renvoie la fin du mois."
  },
  "Date.EndOfMonth_Documentation.LongDescription": {
    "message": "Renvoie la fin du mois qui contient <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code> : une valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à partir de laquelle la fin du mois est calculée</li>\r\n      </ul>"
  },
  "Date.EndOfMonth_Documentation.Category": {
    "message": "Date"
  },
  "Date.EndOfMonth_Documentation.Examples_0_Description": {
    "message": "Obtient la fin du mois pour 5/14/2011."
  },
  "Date.EndOfMonth_Documentation.Examples_0_Code": {
    "message": "Date.EndOfMonth(#date(2011, 5, 14))"
  },
  "Date.EndOfMonth_Documentation.Examples_0_Result": {
    "message": "#date(2011, 5, 31)"
  },
  "Date.EndOfMonth_Documentation.Examples_1_Description": {
    "message": "Obtient la fin du mois pour 5/17/2011 05:00:00 PM -7:00."
  },
  "Date.EndOfMonth_Documentation.Examples_1_Code": {
    "message": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))"
  },
  "Date.EndOfMonth_Documentation.Examples_1_Result": {
    "message": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
  },
  "Date.EndOfQuarter_Documentation.Name": {
    "message": "Date.EndOfQuarter"
  },
  "Date.EndOfQuarter_Documentation.Description": {
    "message": "Renvoie la fin du trimestre."
  },
  "Date.EndOfQuarter_Documentation.LongDescription": {
    "message": "Renvoie la fin du trimestre qui contient <code>dateTime</code>. Les informations de fuseau horaire sont conservées.\r\n      <ul>\r\n      <li><code>dateTime</code> : une valeur <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code> à partir de laquelle la fin du trimestre est calculée.</li>\r\n      </ul>"
  },
  "Date.EndOfQuarter_Documentation.Category": {
    "message": "Date"
  },
  "Date.EndOfQuarter_Documentation.Examples_0_Description": {
    "message": "Recherchez la fin du trimestre du 10 octobre 2011, 08:00."
  },
  "Date.EndOfQuarter_Documentation.Examples_0_Code": {
    "message": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))"
  },
  "Date.EndOfQuarter_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
  },
  "Date.EndOfWeek_Documentation.Name": {
    "message": "Date.EndOfWeek"
  },
  "Date.EndOfWeek_Documentation.Description": {
    "message": "Renvoie la fin de la semaine."
  },
  "Date.EndOfWeek_Documentation.LongDescription": {
    "message": "Renvoie la fin de la semaine qui contient <code>dateTime</code>.\r\n    Cette fonction prend une valeur <code>Day</code> facultative, <code>firstDayOfWeek</code>, à définir comme premier jour de la semaine pour ce calcul relatif. La valeur par défaut est <code>Day.Sunday</code>.\r\n      <ul>\r\n        <li><code>dateTime</code> : une valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à partir de laquelle le dernier jour de la semaine est calculé</li>\r\n        <li><code>firstDayOfWeek</code> : <i>[Facultatif]</i> une valeur <code>Day.Type</code> représentant le premier jour de la semaine. Les valeurs possibles sont <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> et <code>Day.Saturday.</code>. La valeur par défaut est <code>Day.Sunday</code>.</li>\r\n      </ul>"
  },
  "Date.EndOfWeek_Documentation.Category": {
    "message": "Date"
  },
  "Date.EndOfWeek_Documentation.Examples_0_Description": {
    "message": "Obtient la fin de la semaine pour 5/14/2011."
  },
  "Date.EndOfWeek_Documentation.Examples_0_Code": {
    "message": "Date.EndOfWeek(#date(2011, 5, 14))"
  },
  "Date.EndOfWeek_Documentation.Examples_0_Result": {
    "message": "#date(2011, 5, 14)"
  },
  "Date.EndOfWeek_Documentation.Examples_1_Description": {
    "message": "Obtient la fin de semaine pour 5/17/2011 05:00:00 PM -7:00, avec dimanche comme premier jour de la semaine."
  },
  "Date.EndOfWeek_Documentation.Examples_1_Code": {
    "message": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)"
  },
  "Date.EndOfWeek_Documentation.Examples_1_Result": {
    "message": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
  },
  "Date.EndOfYear_Documentation.Name": {
    "message": "Date.EndOfYear"
  },
  "Date.EndOfYear_Documentation.Description": {
    "message": "Renvoie la fin de l’année."
  },
  "Date.EndOfYear_Documentation.LongDescription": {
    "message": "Renvoie la fin de l'année qui contient <code>dateTime</code>, y compris les fractions de seconde. Les informations de fuseau horaire sont conservées.\r\n      <ul>\r\n        <li><code>dateTime</code> : une valeur <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code> à partir de laquelle la fin de l'année est calculée.</li>\r\n      </ul>"
  },
  "Date.EndOfYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.EndOfYear_Documentation.Examples_0_Description": {
    "message": "Obtient la fin de l'année pour 5/14/2011 05:00:00 PM."
  },
  "Date.EndOfYear_Documentation.Examples_0_Code": {
    "message": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))"
  },
  "Date.EndOfYear_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
  },
  "Date.EndOfYear_Documentation.Examples_1_Description": {
    "message": "Obtient la fin de l'heure pour 5/17/2011 05:00:00 PM -7:00."
  },
  "Date.EndOfYear_Documentation.Examples_1_Code": {
    "message": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))"
  },
  "Date.EndOfYear_Documentation.Examples_1_Result": {
    "message": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
  },
  "Date.From_Documentation.Name": {
    "message": "Date.From"
  },
  "Date.From_Documentation.Description": {
    "message": "Crée une date à partir de la valeur spécifiée."
  },
  "Date.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>date</code> du <code>value</code> spécifié. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\").\r\nSi le <code>value</code> spécifié est <code>null</code>, <code>Date.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>date</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>date</code> : \r\n      <ul>\r\n        <li><code>text</code> : valeur <code>date</code> à partir de la représentation de texte. Référez-vous à <code>Date.FromText</code> pour plus de détails.</li>\r\n        <li><code>datetime</code> : composant de date de <code>value</code>.</li>\r\n        <li><code>datetimezone</code> : composant de date du datetime local équivalent à <code>value</code>.</li>\r\n        <li><code>number</code> : composant de date de l'équivalent datetime de la date OLE Automation exprimée par <code>value</code>.</li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "Date.From_Documentation.Category": {
    "message": "Date"
  },
  "Date.From_Documentation.Examples_0_Description": {
    "message": "Convertit <code>43910</code> en une valeur <code>date</code>."
  },
  "Date.From_Documentation.Examples_0_Code": {
    "message": "Date.From(43910)"
  },
  "Date.From_Documentation.Examples_0_Result": {
    "message": "#date(2020, 3, 20)"
  },
  "Date.From_Documentation.Examples_1_Description": {
    "message": "Convertit <code>#datetime(1899, 12, 30, 06, 45, 12)</code> en une valeur <code>date</code>."
  },
  "Date.From_Documentation.Examples_1_Code": {
    "message": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))"
  },
  "Date.From_Documentation.Examples_1_Result": {
    "message": "#date(1899, 12, 30)"
  },
  "Date.FromText_Documentation.Name": {
    "message": "Date.FromText"
  },
  "Date.FromText_Documentation.Description": {
    "message": "Crée une date à partir de formats de date locaux, universels et personnalisés."
  },
  "Date.FromText_Documentation.LongDescription": {
    "message": "Crée une valeur <code>date</code> à partir d'une représentation textuelle, <code>text</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Si vous omettez ce champ ou fournissez <code>null</code>, la date sera analysée au mieux.</li>\r\n   <li><code>Culture</code> : lorsque <code>Format</code> est non nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"MMM\"</code> est <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, tandis que dans <code>\"ru-RU\"</code> <code>\"MMM\"</code> est <code>\"янв\", \"фев\", \"мар\", ...</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les workflows hérités, <code>options</code> peut également être une valeur de texte. Cela a le même comportement que si <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>."
  },
  "Date.FromText_Documentation.Category": {
    "message": "Date"
  },
  "Date.FromText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>2010-12-31</code> en une valeur <code>date</code>."
  },
  "Date.FromText_Documentation.Examples_0_Code": {
    "message": "Date.FromText(\"2010-12-31\")"
  },
  "Date.FromText_Documentation.Examples_0_Result": {
    "message": "#date(2010, 12, 31)"
  },
  "Date.FromText_Documentation.Examples_1_Description": {
    "message": "Convertir à l’aide d’un format personnalisé et de la culture allemande"
  },
  "Date.FromText_Documentation.Examples_1_Code": {
    "message": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])"
  },
  "Date.FromText_Documentation.Examples_1_Result": {
    "message": "#date(2010, 12, 30)"
  },
  "Date.FromText_Documentation.Examples_2_Description": {
    "message": "Recherche la date dans le calendrier grégorien qui correspond au début de 1400 dans le calendrier Hijri."
  },
  "Date.FromText_Documentation.Examples_2_Code": {
    "message": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])"
  },
  "Date.FromText_Documentation.Examples_2_Result": {
    "message": "#date(1979, 11, 20)"
  },
  "Date.IsInCurrentDay_Documentation.Name": {
    "message": "Date.IsInCurrentDay"
  },
  "Date.IsInCurrentDay_Documentation.Description": {
    "message": "Indique si cette date correspond au jour actuel, déterminé par la date et l'heure actuelles du système."
  },
  "Date.IsInCurrentDay_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> fournie correspond au jour actuel, déterminé par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInCurrentDay_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInCurrentDay_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond au jour actuel."
  },
  "Date.IsInCurrentDay_Documentation.Examples_0_Code": {
    "message": "Date.IsInCurrentDay(DateTime.FixedLocalNow())"
  },
  "Date.IsInCurrentDay_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInCurrentMonth_Documentation.Name": {
    "message": "Date.IsInCurrentMonth"
  },
  "Date.IsInCurrentMonth_Documentation.Description": {
    "message": "Indique si cette date correspond au mois actuel, déterminé par la date et l'heure actuelles du système."
  },
  "Date.IsInCurrentMonth_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> fournie correspond au mois actuel, déterminé par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInCurrentMonth_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInCurrentMonth_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond au mois actuel."
  },
  "Date.IsInCurrentMonth_Documentation.Examples_0_Code": {
    "message": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())"
  },
  "Date.IsInCurrentMonth_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInCurrentQuarter_Documentation.Name": {
    "message": "Date.IsInCurrentQuarter"
  },
  "Date.IsInCurrentQuarter_Documentation.Description": {
    "message": "Indique si cette date correspond au trimestre actuel, déterminé par la date et l'heure actuelles du système."
  },
  "Date.IsInCurrentQuarter_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> fournie correspond au trimestre actuel, déterminé par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInCurrentQuarter_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInCurrentQuarter_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond au trimestre actuel."
  },
  "Date.IsInCurrentQuarter_Documentation.Examples_0_Code": {
    "message": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())"
  },
  "Date.IsInCurrentQuarter_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInCurrentWeek_Documentation.Name": {
    "message": "Date.IsInCurrentWeek"
  },
  "Date.IsInCurrentWeek_Documentation.Description": {
    "message": "Indique si cette date correspond à la semaine actuelle, déterminée par la date et l'heure actuelles du système."
  },
  "Date.IsInCurrentWeek_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> fournie correspond à la semaine actuelle, déterminée par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInCurrentWeek_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInCurrentWeek_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond à la semaine actuelle."
  },
  "Date.IsInCurrentWeek_Documentation.Examples_0_Code": {
    "message": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())"
  },
  "Date.IsInCurrentWeek_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInCurrentYear_Documentation.Name": {
    "message": "Date.IsInCurrentYear"
  },
  "Date.IsInCurrentYear_Documentation.Description": {
    "message": "Indique si cette date correspond à l'année actuelle, déterminée par la date et l'heure actuelles du système."
  },
  "Date.IsInCurrentYear_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> fournie correspond à l'année actuelle, déterminée par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInCurrentYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInCurrentYear_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond à l'année actuelle."
  },
  "Date.IsInCurrentYear_Documentation.Examples_0_Code": {
    "message": "Date.IsInCurrentYear(DateTime.FixedLocalNow())"
  },
  "Date.IsInCurrentYear_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextDay_Documentation.Name": {
    "message": "Date.IsInNextDay"
  },
  "Date.IsInNextDay_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la prochaine journée, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la journée actuelle."
  },
  "Date.IsInNextDay_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la journée suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la journée actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInNextDay_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextDay_Documentation.Examples_0_Description": {
    "message": "Détermine si le jour suivant l'heure système actuelle correspond au jour suivant."
  },
  "Date.IsInNextDay_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))"
  },
  "Date.IsInNextDay_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextMonth_Documentation.Name": {
    "message": "Date.IsInNextMonth"
  },
  "Date.IsInNextMonth_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le mois suivant, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel."
  },
  "Date.IsInNextMonth_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le mois suivant, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInNextMonth_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextMonth_Documentation.Examples_0_Description": {
    "message": "Détermine si le mois suivant l'heure système actuelle correspond au mois suivant."
  },
  "Date.IsInNextMonth_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))"
  },
  "Date.IsInNextMonth_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextQuarter_Documentation.Name": {
    "message": "Date.IsInNextQuarter"
  },
  "Date.IsInNextQuarter_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le trimestre suivant, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel."
  },
  "Date.IsInNextQuarter_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le trimestre suivant, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInNextQuarter_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextQuarter_Documentation.Examples_0_Description": {
    "message": "Détermine si le trimestre suivant l'heure système actuelle correspond au trimestre suivant."
  },
  "Date.IsInNextQuarter_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))"
  },
  "Date.IsInNextQuarter_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextWeek_Documentation.Name": {
    "message": "Date.IsInNextWeek"
  },
  "Date.IsInNextWeek_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la semaine suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle."
  },
  "Date.IsInNextWeek_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la semaine suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInNextWeek_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextWeek_Documentation.Examples_0_Description": {
    "message": "Détermine si la semaine suivante l'heure système actuelle correspond à la semaine suivante."
  },
  "Date.IsInNextWeek_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))"
  },
  "Date.IsInNextWeek_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInNextYear_Documentation.Name": {
    "message": "Date.IsInNextYear"
  },
  "Date.IsInNextYear_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans l'année suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle."
  },
  "Date.IsInNextYear_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans l'année suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInNextYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInNextYear_Documentation.Examples_0_Description": {
    "message": "Détermine si l'année suivant l'heure système actuelle correspond à l'année suivante."
  },
  "Date.IsInNextYear_Documentation.Examples_0_Code": {
    "message": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))"
  },
  "Date.IsInNextYear_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousDay_Documentation.Name": {
    "message": "Date.IsInPreviousDay"
  },
  "Date.IsInPreviousDay_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la journée précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le journée actuelle."
  },
  "Date.IsInPreviousDay_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la journée précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la journée actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousDay_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousDay_Documentation.Examples_0_Description": {
    "message": "Détermine si le jour précédent l'heure système actuelle correspond au jour précédent."
  },
  "Date.IsInPreviousDay_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))"
  },
  "Date.IsInPreviousDay_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousMonth_Documentation.Name": {
    "message": "Date.IsInPreviousMonth"
  },
  "Date.IsInPreviousMonth_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le mois précédent, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel."
  },
  "Date.IsInPreviousMonth_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le mois précédent, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le mois actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousMonth_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousMonth_Documentation.Examples_0_Description": {
    "message": "Détermine si le mois précédent l'heure système actuelle correspond au mois précédent."
  },
  "Date.IsInPreviousMonth_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))"
  },
  "Date.IsInPreviousMonth_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousQuarter_Documentation.Name": {
    "message": "Date.IsInPreviousQuarter"
  },
  "Date.IsInPreviousQuarter_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans le trimestre précédent, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel."
  },
  "Date.IsInPreviousQuarter_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans le trimestre précédent, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans le trimestre actuel.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousQuarter_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousQuarter_Documentation.Examples_0_Description": {
    "message": "Détermine si le trimestre précédent l'heure système actuelle correspond au trimestre précédent."
  },
  "Date.IsInPreviousQuarter_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))"
  },
  "Date.IsInPreviousQuarter_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousWeek_Documentation.Name": {
    "message": "Date.IsInPreviousWeek"
  },
  "Date.IsInPreviousWeek_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la semaine précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle."
  },
  "Date.IsInPreviousWeek_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la semaine précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la semaine actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousWeek_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousWeek_Documentation.Examples_0_Description": {
    "message": "Détermine si la semaine précédent l'heure système actuelle correspond à la semaine précédente."
  },
  "Date.IsInPreviousWeek_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))"
  },
  "Date.IsInPreviousWeek_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInPreviousYear_Documentation.Name": {
    "message": "Date.IsInPreviousYear"
  },
  "Date.IsInPreviousYear_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans l'année précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle."
  },
  "Date.IsInPreviousYear_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans l'année précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'année actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInPreviousYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInPreviousYear_Documentation.Examples_0_Description": {
    "message": "Détermine si l'année précédent l'heure système actuelle correspond à l'année précédente."
  },
  "Date.IsInPreviousYear_Documentation.Examples_0_Code": {
    "message": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))"
  },
  "Date.IsInPreviousYear_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsInYearToDate_Documentation.Name": {
    "message": "Date.IsInYearToDate"
  },
  "Date.IsInYearToDate_Documentation.Description": {
    "message": "Indique si cette date correspond à l'année actuelle et si elle correspond au jour actuel ou à un jour précédent, déterminé par la date et l'heure actuelles du système."
  },
  "Date.IsInYearToDate_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime fournie <code>dateTime</code> correspond à l'année actuelle et si elle correspond au jour actuel ou à un jour précédent, déterminé par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsInYearToDate_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsInYearToDate_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond à l'année actuelle."
  },
  "Date.IsInYearToDate_Documentation.Examples_0_Code": {
    "message": "Date.IsInYearToDate(DateTime.FixedLocalNow())"
  },
  "Date.IsInYearToDate_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.IsLeapYear_Documentation.Name": {
    "message": "Date.IsLeapYear"
  },
  "Date.IsLeapYear_Documentation.Description": {
    "message": "Indique si cette date se situe dans une année bissextile."
  },
  "Date.IsLeapYear_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime spécifiée <code>dateTime</code> se situe dans une année bissextile.\r\n <ul>\r\n        <li><code>dateTime</code> : valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "Date.IsLeapYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.IsLeapYear_Documentation.Examples_0_Description": {
    "message": "Détermine si l'année 2012, telle que représentée par <code>#date(2012, 01, 01)</code>, est une année bissextile."
  },
  "Date.IsLeapYear_Documentation.Examples_0_Code": {
    "message": "Date.IsLeapYear(#date(2012, 01, 01))"
  },
  "Date.IsLeapYear_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Date.Month_Documentation.Name": {
    "message": "Date.Month"
  },
  "Date.Month_Documentation.Description": {
    "message": "Retourne le composant de mois."
  },
  "Date.Month_Documentation.LongDescription": {
    "message": "Retourne le composant de mois de la valeur <code>datetime</code> fournie, <code>dateTime</code>."
  },
  "Date.Month_Documentation.Category": {
    "message": "Date"
  },
  "Date.Month_Documentation.Examples_0_Description": {
    "message": "Recherche le mois dans #datetime(2011, 12, 31, 9, 15, 36)."
  },
  "Date.Month_Documentation.Examples_0_Code": {
    "message": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))"
  },
  "Date.Month_Documentation.Examples_0_Result": {
    "message": "12"
  },
  "Date.MonthName_Documentation.Name": {
    "message": "Date.MonthName"
  },
  "Date.MonthName_Documentation.Description": {
    "message": "Retourne le nom du mois."
  },
  "Date.MonthName_Documentation.LongDescription": {
    "message": "Retourne le nom du composant month pour la <code>date</code> fournie. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Date.MonthName_Documentation.Category": {
    "message": "Date"
  },
  "Date.MonthName_Documentation.Examples_0_Description": {
    "message": "Obtenir le nom du mois."
  },
  "Date.MonthName_Documentation.Examples_0_Code": {
    "message": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")"
  },
  "Date.MonthName_Documentation.Examples_0_Result": {
    "message": "\"December\""
  },
  "Date.QuarterOfYear_Documentation.Name": {
    "message": "Date.QuarterOfYear"
  },
  "Date.QuarterOfYear_Documentation.Description": {
    "message": "Retourne un nombre indiquant dans quel trimestre de l'année la date se situe."
  },
  "Date.QuarterOfYear_Documentation.LongDescription": {
    "message": "Retourne un nombre de 1 à 4 indiquant dans quel trimestre de l'année la date <code>dateTime</code> se situe. <code>dateTime</code> peut être une valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>."
  },
  "Date.QuarterOfYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.QuarterOfYear_Documentation.Examples_0_Description": {
    "message": "Recherche dans quel trimestre la date #date(2011, 12, 31) se situe."
  },
  "Date.QuarterOfYear_Documentation.Examples_0_Code": {
    "message": "Date.QuarterOfYear(#date(2011, 12, 31))"
  },
  "Date.QuarterOfYear_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Date.StartOfDay_Documentation.Name": {
    "message": "Date.StartOfDay"
  },
  "Date.StartOfDay_Documentation.Description": {
    "message": "Renvoie le début de la journée."
  },
  "Date.StartOfDay_Documentation.LongDescription": {
    "message": "Renvoie le début de la journée représenté par <code>dateTime</code>.\r\n    <code>dateTime</code> doit être une valeur <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code>."
  },
  "Date.StartOfDay_Documentation.Category": {
    "message": "Date"
  },
  "Date.StartOfDay_Documentation.Examples_0_Description": {
    "message": "Recherchez le début de la journée du 10 octobre 2011, 08:00."
  },
  "Date.StartOfDay_Documentation.Examples_0_Code": {
    "message": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))"
  },
  "Date.StartOfDay_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 10, 10, 0, 0, 0)"
  },
  "Date.StartOfMonth_Documentation.Name": {
    "message": "Date.StartOfMonth"
  },
  "Date.StartOfMonth_Documentation.Description": {
    "message": "Renvoie le début du mois."
  },
  "Date.StartOfMonth_Documentation.LongDescription": {
    "message": "Renvoie le début du mois qui contient <code>dateTime</code>.\r\n    <code>dateTime</code> doit être une valeur <code>date</code> ou <code>datetime</code>."
  },
  "Date.StartOfMonth_Documentation.Category": {
    "message": "Date"
  },
  "Date.StartOfMonth_Documentation.Examples_0_Description": {
    "message": "Recherchez le début du mois du 10 octobre 2011, 08:10:32."
  },
  "Date.StartOfMonth_Documentation.Examples_0_Code": {
    "message": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))"
  },
  "Date.StartOfMonth_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 10, 1, 0, 0, 0)"
  },
  "Date.StartOfQuarter_Documentation.Name": {
    "message": "Date.StartOfQuarter"
  },
  "Date.StartOfQuarter_Documentation.Description": {
    "message": "Renvoie le début du trimestre."
  },
  "Date.StartOfQuarter_Documentation.LongDescription": {
    "message": "Renvoie le début du trimestre qui contient <code>dateTime</code>.\r\n      <code>dateTime</code> doit être une valeur <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code>."
  },
  "Date.StartOfQuarter_Documentation.Category": {
    "message": "Date"
  },
  "Date.StartOfQuarter_Documentation.Examples_0_Description": {
    "message": "Recherchez le début du trimestre du 10 octobre 2011 à 8h00."
  },
  "Date.StartOfQuarter_Documentation.Examples_0_Code": {
    "message": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))"
  },
  "Date.StartOfQuarter_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 10, 1, 0, 0, 0)"
  },
  "Date.StartOfWeek_Documentation.Name": {
    "message": "Date.StartOfWeek"
  },
  "Date.StartOfWeek_Documentation.Description": {
    "message": "Retourne le début de la semaine."
  },
  "Date.StartOfWeek_Documentation.LongDescription": {
    "message": "Renvoie le début du trimestre qui contient <code>dateTime</code>.\r\n    <code>dateTime</code> doit être une valeur <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code>."
  },
  "Date.StartOfWeek_Documentation.Category": {
    "message": "Date"
  },
  "Date.StartOfWeek_Documentation.Examples_0_Description": {
    "message": "Recherche le début de la semaine pour le mardi 11 octobre 2011."
  },
  "Date.StartOfWeek_Documentation.Examples_0_Code": {
    "message": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))"
  },
  "Date.StartOfWeek_Documentation.Examples_0_Result": {
    "message": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
  },
  "Date.StartOfWeek_Documentation.Examples_1_Description": {
    "message": "Recherche le début de la semaine pour le mardi 11 octobre 2011, à l’aide du lundi comme début de la semaine."
  },
  "Date.StartOfWeek_Documentation.Examples_1_Code": {
    "message": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)"
  },
  "Date.StartOfWeek_Documentation.Examples_1_Result": {
    "message": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
  },
  "Date.StartOfYear_Documentation.Name": {
    "message": "Date.StartOfYear"
  },
  "Date.StartOfYear_Documentation.Description": {
    "message": "Renvoie le début de l’année."
  },
  "Date.StartOfYear_Documentation.LongDescription": {
    "message": "Renvoie le début de l’année qui contient <code>dateTime</code>.\r\n    <code>dateTime</code> doit être une valeur <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code>."
  },
  "Date.StartOfYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.StartOfYear_Documentation.Examples_0_Description": {
    "message": "Recherchez le début de l’année du 10 octobre 2011, 08:10:32."
  },
  "Date.StartOfYear_Documentation.Examples_0_Code": {
    "message": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))"
  },
  "Date.StartOfYear_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 1, 1, 0, 0, 0)"
  },
  "Date.ToRecord_Documentation.Name": {
    "message": "Date.ToRecord"
  },
  "Date.ToRecord_Documentation.Description": {
    "message": "Retourne un enregistrement contenant des parties de la valeur de date."
  },
  "Date.ToRecord_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui contient les parties de la valeur de date spécifiée, <code>date</code>.\r\n <ul>\r\n        <li><code>date</code> : valeur <code>date</code> à partir de laquelle l'enregistrement des parties doit être calculé.</li>\r\n      </ul>"
  },
  "Date.ToRecord_Documentation.Category": {
    "message": "Date"
  },
  "Date.ToRecord_Documentation.Examples_0_Description": {
    "message": "Convertit la valeur <code>#date(2011, 12, 31)</code> dans un enregistrement contenant des parties de la valeur de date."
  },
  "Date.ToRecord_Documentation.Examples_0_Code": {
    "message": "Date.ToRecord(#date(2011, 12, 31))"
  },
  "Date.ToRecord_Documentation.Examples_0_Result": {
    "message": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
  },
  "Date.ToText_Documentation.Name": {
    "message": "Date.ToText"
  },
  "Date.ToText_Documentation.Description": {
    "message": "Retourne une représentation textuelle de la valeur de date."
  },
  "Date.ToText_Documentation.LongDescription": {
    "message": "Renvoie une représentation textuelle de <code>date</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. <code>culture</code> n'est utilisé que pour les workflows hérités. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : Une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Omettre ce champ ou fournir <code>null</code> entraînera le formatage de la date en utilisant la valeur par défaut définie par <code>Culture</code>.</li>\r\n   <li><code>Culture</code> : Quand <code>Format</code> n'est pas nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"MMM\"</code> est <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, tandis que dans <code>\"ru-RU\"</code> <code>\"MMM\"</code> est <code>\"янв\", \"фев\", \"мар\", ...</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les flux de travail hérités, <code>options</code> et <code>culture</code> peut également être des valeurs de texte. Cela a le même comportement que si <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>."
  },
  "Date.ToText_Documentation.Category": {
    "message": "Date"
  },
  "Date.ToText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>#date(2010, 12, 31) </code> en une valeur <code>texte</code>. <i>la sortie des résultats peut varier en fonction de la culture actuelle.</i>"
  },
  "Date.ToText_Documentation.Examples_0_Code": {
    "message": "Date.ToText(#date(2010, 12, 31))"
  },
  "Date.ToText_Documentation.Examples_0_Result": {
    "message": "\"12/31/2010\""
  },
  "Date.ToText_Documentation.Examples_1_Description": {
    "message": "Convertir à l’aide d’un format personnalisé et de la culture allemande"
  },
  "Date.ToText_Documentation.Examples_1_Code": {
    "message": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])"
  },
  "Date.ToText_Documentation.Examples_1_Result": {
    "message": "\"31 Dez 2010\""
  },
  "Date.ToText_Documentation.Examples_2_Description": {
    "message": "Recherche la date dans le calendrier grégorien qui correspond au début de 2000 dans le calendrier Hijri."
  },
  "Date.ToText_Documentation.Examples_2_Code": {
    "message": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])"
  },
  "Date.ToText_Documentation.Examples_2_Result": {
    "message": "\"1420\""
  },
  "Date.WeekOfMonth_Documentation.Name": {
    "message": "Date.WeekOfMonth"
  },
  "Date.WeekOfMonth_Documentation.Description": {
    "message": "Retourne un nombre compris entre 1 et 6 qui indique dans quelle semaine du mois cette date se situe."
  },
  "Date.WeekOfMonth_Documentation.LongDescription": {
    "message": "Retourne un nombre compris entre 1 et 6 qui indique dans quelle semaine du mois de la date <code>dateTime</code> se situe.\r\n <ul>\r\n        <li><code>dateTime</code>: valeur <code>datetime</code> pour laquelle la semaine du mois est déterminée.</li>\r\n      </ul>"
  },
  "Date.WeekOfMonth_Documentation.Category": {
    "message": "Date"
  },
  "Date.WeekOfMonth_Documentation.Examples_0_Description": {
    "message": "Déterminez la semaine du 15 mars 2011."
  },
  "Date.WeekOfMonth_Documentation.Examples_0_Code": {
    "message": "Date.WeekOfMonth(#date(2011, 03, 15))"
  },
  "Date.WeekOfMonth_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "Date.WeekOfYear_Documentation.Name": {
    "message": "Date.WeekOfYear"
  },
  "Date.WeekOfYear_Documentation.Description": {
    "message": "Retourne un nombre compris entre 1 et 54 qui indique dans quelle semaine de l'année cette date se situe."
  },
  "Date.WeekOfYear_Documentation.LongDescription": {
    "message": "Retourne un nombre compris entre 1 et 54 qui indique la semaine de l'année dans laquelle tombe la date <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code> : Une valeur <code>datetime</code> pour laquelle la semaine de l'année est déterminée.</li>\r\n        <li><code>firstDayOfWeek</code> : Une valeur<code>Day.Type</code> facultative indiquant le jour qui marque le début d'une nouvelle semaine (par exemple, <code>Day.Sunday</code>). Si elle n'est pas spécifiée, une valeur par défaut dépendante de la culture est utilisée.</li>\r\n      </ul>"
  },
  "Date.WeekOfYear_Documentation.Category": {
    "message": "Date"
  },
  "Date.WeekOfYear_Documentation.Examples_0_Description": {
    "message": "Déterminez quelle semaine de l’année contient le 27 mars 2011."
  },
  "Date.WeekOfYear_Documentation.Examples_0_Code": {
    "message": "Date.WeekOfYear(#date(2011, 03, 27))"
  },
  "Date.WeekOfYear_Documentation.Examples_0_Result": {
    "message": "14"
  },
  "Date.WeekOfYear_Documentation.Examples_1_Description": {
    "message": "Déterminez quelle semaine de l’année contient le 27 mars 2011, en utilisant lundi comme début de semaine."
  },
  "Date.WeekOfYear_Documentation.Examples_1_Code": {
    "message": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)"
  },
  "Date.WeekOfYear_Documentation.Examples_1_Result": {
    "message": "13"
  },
  "Date.Year_Documentation.Name": {
    "message": "Date.Year"
  },
  "Date.Year_Documentation.Description": {
    "message": "Retourne le composant d'année."
  },
  "Date.Year_Documentation.LongDescription": {
    "message": "Retourne le composant d'année de la valeur <code>datetime</code> fournie, <code>dateTime</code>."
  },
  "Date.Year_Documentation.Category": {
    "message": "Date"
  },
  "Date.Year_Documentation.Examples_0_Description": {
    "message": "Recherche l'année dans #datetime(2011, 12, 31, 9, 15, 36)."
  },
  "Date.Year_Documentation.Examples_0_Code": {
    "message": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))"
  },
  "Date.Year_Documentation.Examples_0_Result": {
    "message": "2011"
  },
  "DateTime.Date_Documentation.Name": {
    "message": "DateTime.Date"
  },
  "DateTime.Date_Documentation.Description": {
    "message": "Retourne le composant de date de la valeur date, datetime ou datetimezone spécifiée."
  },
  "DateTime.Date_Documentation.LongDescription": {
    "message": "Retourne le composant de date de <code>dateTime</code>, la valeur <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> spécifiée."
  },
  "DateTime.Date_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.Date_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur de date de #datetime(2010, 12, 31, 11, 56, 02)."
  },
  "DateTime.Date_Documentation.Examples_0_Code": {
    "message": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))"
  },
  "DateTime.Date_Documentation.Examples_0_Result": {
    "message": "#date(2010, 12, 31)"
  },
  "DateTime.From_Documentation.Name": {
    "message": "DateTime.From"
  },
  "DateTime.From_Documentation.Description": {
    "message": "Crée un datetime à partir de la valeur spécifiée."
  },
  "DateTime.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>datetime</code> du <code>value</code> spécifié. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\").\r\nSi le <code>value</code> spécifié est <code>null</code>, <code>DateTime.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>datetime</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>datetime</code> : \r\n      <ul>\r\n        <li><code>text</code> : valeur <code>datetime</code> depuis la représentation de texte. Référez-vous à <code>DateTime.FromText</code> pour plus de détails.</li>\r\n        <li><code>date</code> : <code>datetime</code> avec <code>value</code> comme composant de date et <code>12:00:00 AM</code> comme composant d'heure.</li>\r\n        <li><code>datetimezone</code> : équivalent <code>datetime</code> local de <code>value</code>.</li>\r\n        <li><code>time</code> : <code>datetime</code> avec l'équivalent de date de la date OLE Automation de <code>0</code> comme composant de date et <code>value</code> comme composant d'heure.</li>\r\n        <li><code>number</code> : équivalent <code>datetime</code> de la date OLE Automation exprimée par <code>value</code>. </li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "DateTime.From_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.From_Documentation.Examples_0_Description": {
    "message": "Convertit <code>#time(06, 45, 12)</code> en une valeur <code>datetime</code>."
  },
  "DateTime.From_Documentation.Examples_0_Code": {
    "message": "DateTime.From(#time(06, 45, 12))"
  },
  "DateTime.From_Documentation.Examples_0_Result": {
    "message": "#datetime(1899, 12, 30, 06, 45, 12)"
  },
  "DateTime.From_Documentation.Examples_1_Description": {
    "message": "Convertit <code>#date(1975, 4, 4)</code> en une valeur <code>datetime</code>."
  },
  "DateTime.From_Documentation.Examples_1_Code": {
    "message": "DateTime.From(#date(1975, 4, 4))"
  },
  "DateTime.From_Documentation.Examples_1_Result": {
    "message": "#datetime(1975, 4, 4, 0, 0, 0)"
  },
  "DateTime.FromFileTime_Documentation.Name": {
    "message": "DateTime.FromFileTime"
  },
  "DateTime.FromFileTime_Documentation.Description": {
    "message": "Crée un datetime à partir d'un nombre long 64 bits."
  },
  "DateTime.FromFileTime_Documentation.LongDescription": {
    "message": "Crée une valeur <code>datetime</code> à partir de la valeur <code>fileTime</code> et la convertit en fuseau horaire local. Le filetime est une valeur d'heure de fichier Windows qui représente le nombre d'intervalles de 100 nanosecondes écoulés depuis 00:00 le 1er janvier 1601. (calendrier julien) Temps universel coordonné (UTC).\r\n"
  },
  "DateTime.FromFileTime_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.FromFileTime_Documentation.Examples_0_Description": {
    "message": "Convertit <code>129876402529842245</code> dans une valeur datetime."
  },
  "DateTime.FromFileTime_Documentation.Examples_0_Code": {
    "message": "DateTime.FromFileTime(129876402529842245)"
  },
  "DateTime.FromFileTime_Documentation.Examples_0_Result": {
    "message": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
  },
  "DateTime.FromText_Documentation.Name": {
    "message": "DateTime.FromText"
  },
  "DateTime.FromText_Documentation.Description": {
    "message": "Crée un datetimezone à partir des formats datetime locaux et universels."
  },
  "DateTime.FromText_Documentation.LongDescription": {
    "message": "Crée une valeur <code>datetime</code> à partir d'une représentation textuelle, <code>text</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Si vous omettez ce champ ou fournissez <code>null</code>, la date sera analysée au mieux.</li>\r\n   <li><code>Culture</code> : lorsque <code>Format</code> est non nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"MMM\"</code> est <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, tandis que dans <code>\"ru-RU\"</code> <code>\"MMM\"</code> est <code>\"янв\", \"фев\", \"мар\", ...</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les workflows hérités, <code>options</code> peut également être une valeur de texte. Cela a le même comportement que si <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>."
  },
  "DateTime.FromText_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.FromText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>\"2010-12-31T01:30:00\"</code> en une valeur datetime."
  },
  "DateTime.FromText_Documentation.Examples_0_Code": {
    "message": "DateTime.FromText(\"2010-12-31T01:30:25\")"
  },
  "DateTime.FromText_Documentation.Examples_0_Result": {
    "message": "#datetime(2010, 12, 31, 1, 30, 25)"
  },
  "DateTime.FromText_Documentation.Examples_1_Description": {
    "message": "Convertit <code>\"2010-12-31T01:30:00.121212\"</code> en une valeur datetime."
  },
  "DateTime.FromText_Documentation.Examples_1_Code": {
    "message": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])"
  },
  "DateTime.FromText_Documentation.Examples_1_Result": {
    "message": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
  },
  "DateTime.FromText_Documentation.Examples_2_Description": {
    "message": "Convertit <code>\"2010-12-31T01:30:00\"</code> en une valeur datetime."
  },
  "DateTime.FromText_Documentation.Examples_2_Code": {
    "message": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])"
  },
  "DateTime.FromText_Documentation.Examples_2_Result": {
    "message": "#datetime(2000, 2, 8, 3, 45, 12)"
  },
  "DateTime.FromText_Documentation.Examples_3_Description": {
    "message": "Convertit <code>\"20101231T013000\"</code> en une valeur de type datetime."
  },
  "DateTime.FromText_Documentation.Examples_3_Code": {
    "message": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])"
  },
  "DateTime.FromText_Documentation.Examples_3_Result": {
    "message": "#datetime(2010, 12, 31, 1, 30, 0)"
  },
  "DateTime.IsInCurrentHour_Documentation.Name": {
    "message": "DateTime.IsInCurrentHour"
  },
  "DateTime.IsInCurrentHour_Documentation.Description": {
    "message": "Indique si cette date/heure tombe pendant l'heure actuelle, déterminée par la date et l'heure actuelles du système."
  },
  "DateTime.IsInCurrentHour_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime spécifiée <code>dateTime</code> tombe pendant l'heure actuelle, déterminée par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : une valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInCurrentHour_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInCurrentHour_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond à l'heure actuelle."
  },
  "DateTime.IsInCurrentHour_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())"
  },
  "DateTime.IsInCurrentHour_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInCurrentMinute_Documentation.Name": {
    "message": "DateTime.IsInCurrentMinute"
  },
  "DateTime.IsInCurrentMinute_Documentation.Description": {
    "message": "Indique si cette date/heure tombe pendant la minute actuelle, déterminée par la date et l'heure actuelles du système."
  },
  "DateTime.IsInCurrentMinute_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime spécifiée <code>dateTime</code> tombe pendant la minute actuelle, déterminée par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : une valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInCurrentMinute_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInCurrentMinute_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond à la minute actuelle."
  },
  "DateTime.IsInCurrentMinute_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())"
  },
  "DateTime.IsInCurrentMinute_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInCurrentSecond_Documentation.Name": {
    "message": "DateTime.IsInCurrentSecond"
  },
  "DateTime.IsInCurrentSecond_Documentation.Description": {
    "message": "Indique si cette date/heure tombe pendant la seconde actuelle, déterminée par la date et l'heure actuelles du système."
  },
  "DateTime.IsInCurrentSecond_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime spécifiée <code>dateTime</code> tombe pendant la seconde actuelle, déterminée par la date et l'heure actuelles du système.\r\n      <ul>\r\n      <li><code>dateTime</code> : une valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInCurrentSecond_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInCurrentSecond_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure système actuelle correspond à la seconde actuelle."
  },
  "DateTime.IsInCurrentSecond_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())"
  },
  "DateTime.IsInCurrentSecond_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInNextHour_Documentation.Name": {
    "message": "DateTime.IsInNextHour"
  },
  "DateTime.IsInNextHour_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans l'heure suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle."
  },
  "DateTime.IsInNextHour_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans l'heure suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInNextHour_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInNextHour_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure suivant l'heure système actuelle tombe pendant la prochaine heure."
  },
  "DateTime.IsInNextHour_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))"
  },
  "DateTime.IsInNextHour_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInNextMinute_Documentation.Name": {
    "message": "DateTime.IsInNextMinute"
  },
  "DateTime.IsInNextMinute_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la minute suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle."
  },
  "DateTime.IsInNextMinute_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la minute suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code>: Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInNextMinute_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInNextMinute_Documentation.Examples_0_Description": {
    "message": "Détermine si la minute suivant l'heure système actuelle tombe pendant la prochaine minute."
  },
  "DateTime.IsInNextMinute_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))"
  },
  "DateTime.IsInNextMinute_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInNextSecond_Documentation.Name": {
    "message": "DateTime.IsInNextSecond"
  },
  "DateTime.IsInNextSecond_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la seconde suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle."
  },
  "DateTime.IsInNextSecond_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la seconde suivante, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInNextSecond_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInNextSecond_Documentation.Examples_0_Description": {
    "message": "Détermine si la seconde suivant l'heure système actuelle tombe pendant la prochaine seconde."
  },
  "DateTime.IsInNextSecond_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))"
  },
  "DateTime.IsInNextSecond_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInPreviousHour_Documentation.Name": {
    "message": "DateTime.IsInPreviousHour"
  },
  "DateTime.IsInPreviousHour_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans l'heure précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle."
  },
  "DateTime.IsInPreviousHour_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans l'heure précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans l'heure actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInPreviousHour_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInPreviousHour_Documentation.Examples_0_Description": {
    "message": "Détermine si l'heure précédant l'heure système actuelle tombe pendant l'heure précédente."
  },
  "DateTime.IsInPreviousHour_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))"
  },
  "DateTime.IsInPreviousHour_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInPreviousMinute_Documentation.Name": {
    "message": "DateTime.IsInPreviousMinute"
  },
  "DateTime.IsInPreviousMinute_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la minute précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle."
  },
  "DateTime.IsInPreviousMinute_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la minute précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la minute actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInPreviousMinute_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInPreviousMinute_Documentation.Examples_0_Description": {
    "message": "Détermine si la minute précédant l'heure système actuelle tombe pendant la minute précédente."
  },
  "DateTime.IsInPreviousMinute_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))"
  },
  "DateTime.IsInPreviousMinute_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.IsInPreviousSecond_Documentation.Name": {
    "message": "DateTime.IsInPreviousSecond"
  },
  "DateTime.IsInPreviousSecond_Documentation.Description": {
    "message": "Indique si cette valeur datetime se produit dans la seconde précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle."
  },
  "DateTime.IsInPreviousSecond_Documentation.LongDescription": {
    "message": "Indique si la valeur datetime <code>dateTime</code> donnée se produit dans la seconde précédente, par rapport à la date et l'heure actuelles du système. Notez que cette fonction retourne la valeur false si la valeur transmise se produit dans la seconde actuelle.\r\n      <ul>\r\n      <li><code>dateTime</code> : Valeur <code>datetime</code> ou <code>datetimezone</code> à évaluer.</li>\r\n      </ul>"
  },
  "DateTime.IsInPreviousSecond_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.IsInPreviousSecond_Documentation.Examples_0_Description": {
    "message": "Détermine si la seconde précédant l'heure système actuelle tombe pendant la seconde précédente."
  },
  "DateTime.IsInPreviousSecond_Documentation.Examples_0_Code": {
    "message": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))"
  },
  "DateTime.IsInPreviousSecond_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "DateTime.Time_Documentation.Name": {
    "message": "DateTime.Time"
  },
  "DateTime.Time_Documentation.Description": {
    "message": "Retourne l'heure qui fait partie de la valeur datetime spécifiée."
  },
  "DateTime.Time_Documentation.LongDescription": {
    "message": "Retourne l'heure qui fait partie de la valeur datetime spécifiée, <code>dateTime</code>."
  },
  "DateTime.Time_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.Time_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur d'heure de #datetime(2010, 12, 31, 11, 56, 02)."
  },
  "DateTime.Time_Documentation.Examples_0_Code": {
    "message": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))"
  },
  "DateTime.Time_Documentation.Examples_0_Result": {
    "message": "#time(11, 56, 2)"
  },
  "DateTime.ToRecord_Documentation.Name": {
    "message": "DateTime.ToRecord"
  },
  "DateTime.ToRecord_Documentation.Description": {
    "message": "Retourne un enregistrement qui contient les parties de la valeur datetime."
  },
  "DateTime.ToRecord_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui contient les parties de la valeur datetime spécifiée, <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code> : valeur <code>datetime</code> à partir de laquelle l'enregistrement des parties doit être calculé.</li>\r\n      </ul>"
  },
  "DateTime.ToRecord_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.ToRecord_Documentation.Examples_0_Description": {
    "message": "Convertit la valeur <code>#datetime(2011, 12, 31, 11, 56, 2)</code> dans un enregistrement contenant les valeurs Date et Time."
  },
  "DateTime.ToRecord_Documentation.Examples_0_Code": {
    "message": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))"
  },
  "DateTime.ToRecord_Documentation.Examples_0_Result": {
    "message": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
  },
  "DateTime.ToText_Documentation.Name": {
    "message": "DateTime.ToText"
  },
  "DateTime.ToText_Documentation.Description": {
    "message": "Retourne une représentation de texte de la valeur datetime."
  },
  "DateTime.ToText_Documentation.LongDescription": {
    "message": "Renvoie une représentation textuelle de <code>dateTime</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. <code>culture</code> n'est utilisé que pour les workflows hérités. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : Une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Omettre ce champ ou fournir <code>null</code> entraînera le formatage de la date en utilisant la valeur par défaut définie par <code>Culture</code>.</li>\r\n   <li><code>Culture</code> : Quand <code>Format</code> n'est pas nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"MMM\"</code> est <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, tandis que dans <code>\"ru-RU\"</code> <code>\"MMM\"</code> est <code>\"янв\", \"фев\", \"мар\", ...</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les flux de travail hérités, <code>options</code> et <code>culture</code> peut également être des valeurs de texte. Cela a le même comportement que si <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>."
  },
  "DateTime.ToText_Documentation.Category": {
    "message": "DateTime"
  },
  "DateTime.ToText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>#datetime(2010, 12, 31, 01, 30, 25) </code> en une valeur <code>texte</code>. <i>la sortie des résultats peut varier en fonction de la culture actuelle.</i>"
  },
  "DateTime.ToText_Documentation.Examples_0_Code": {
    "message": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))"
  },
  "DateTime.ToText_Documentation.Examples_0_Result": {
    "message": "\"12/31/2010 1:30:25 AM\""
  },
  "DateTime.ToText_Documentation.Examples_1_Description": {
    "message": "Convertir à l’aide d’un format personnalisé et de la culture allemande"
  },
  "DateTime.ToText_Documentation.Examples_1_Code": {
    "message": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])"
  },
  "DateTime.ToText_Documentation.Examples_1_Result": {
    "message": "\"30 Dez 2010 02:04:50.369730\""
  },
  "DateTime.ToText_Documentation.Examples_2_Description": {
    "message": "Convertir à l’aide du modèle ISO 8601"
  },
  "DateTime.ToText_Documentation.Examples_2_Code": {
    "message": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])"
  },
  "DateTime.ToText_Documentation.Examples_2_Result": {
    "message": "\"2000-02-08T03:45:12Z\""
  },
  "DateTimeZone.From_Documentation.Name": {
    "message": "DateTimeZone.From"
  },
  "DateTimeZone.From_Documentation.Description": {
    "message": "Crée un datetimezone à partir de la valeur spécifiée."
  },
  "DateTimeZone.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>datetimezone</code> du <code>value</code> spécifié. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\").\r\nSi le <code>value</code> spécifié est <code>null</code>, <code>DateTimeZone.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>datetimezone</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>datetimezone</code> :\r\n      <ul>\r\n        <li><code>text</code> : valeur <code>datetimezone</code> depuis la représentation de texte. Référez-vous à <code>DateTimeZone.FromText</code> pour plus de détails.</li>\r\n        <li><code>date</code> : <code>datetimezone</code> avec <code>value</code> comme composant de date, <code>12:00:00 AM</code> comme composant d'heure et le décalage correspondant au fuseau horaire local.</li>\r\n        <li><code>datetime</code> : <code>datetimezone</code> avec <code>value</code> comme datetime et le décalage correspondant au fuseau horaire local.</li>\r\n        <li><code>time</code> : <code>datetimezone</code> avec la date équivalente à la date OLE Automation de <code>0</code> comme composant de date, <code>value</code>comme composant d'heure et le décalage correspondant au fuseau horaire local.</li>\r\n        <li><code>number</code> : <code>datetimezone</code> avec le datetime équivalent à la date OLE Automation exprimée par <code>value</code> et le décalage correspondant au fuseau horaire local.</li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "DateTimeZone.From_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.From_Documentation.Examples_0_Description": {
    "message": "Convertit <code>\"2020-10-30T01:30:00-08:00\"</code> en une valeur <code>datetimezone</code>."
  },
  "DateTimeZone.From_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")"
  },
  "DateTimeZone.From_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
  },
  "DateTimeZone.FromFileTime_Documentation.Name": {
    "message": "DateTimeZone.FromFileTime"
  },
  "DateTimeZone.FromFileTime_Documentation.Description": {
    "message": "Crée un datetimezone à partir d'un nombre long 64 bits."
  },
  "DateTimeZone.FromFileTime_Documentation.LongDescription": {
    "message": "Crée une valeur <code>datetimezone</code> à partir de la valeur <code>fileTime</code> et la convertit en fuseau horaire local. Le filetime est une valeur de date/heure de fichier Windows qui représente le nombre d'intervalles de 100 nanosecondes écoulés depuis la date UTC du 1er janvier 1601 à 00:00.\r\n    "
  },
  "DateTimeZone.FromFileTime_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.FromFileTime_Documentation.Examples_0_Description": {
    "message": "Convertit <code>129876402529842245</code> dans une valeur datetimezone."
  },
  "DateTimeZone.FromFileTime_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.FromFileTime(129876402529842245)"
  },
  "DateTimeZone.FromFileTime_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
  },
  "DateTimeZone.FromText_Documentation.Name": {
    "message": "DateTimeZone.FromText"
  },
  "DateTimeZone.FromText_Documentation.Description": {
    "message": "Crée un datetimezone à partir des formats datetimezone locaux, universels et personnalisés."
  },
  "DateTimeZone.FromText_Documentation.LongDescription": {
    "message": "Crée une valeur <code>datetimezone</code> à partir d'une représentation textuelle, <code>text</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : Une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Si vous omettez ce champ ou fournissez <code>null</code>, la date sera analysée au mieux.</li>\r\n   <li><code>Culture</code> : Lorsque <code>Format</code> est non nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"MMM\"</code> est <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, tandis que dans <code>\"ru-RU\"</code> <code>\"MMM\"</code> est <code>\"янв\", \"фев\", \"мар\", ...</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les workflows hérités, <code>options</code> peut également être une valeur de texte. Cela a le même comportement que si <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>."
  },
  "DateTimeZone.FromText_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.FromText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>\"2010-12-31T01:30:00-08:00\"</code> dans une valeur <code>datetimezone</code>."
  },
  "DateTimeZone.FromText_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")"
  },
  "DateTimeZone.FromText_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
  },
  "DateTimeZone.FromText_Documentation.Examples_1_Description": {
    "message": "Convertir à l’aide d’un format personnalisé et de la culture allemande"
  },
  "DateTimeZone.FromText_Documentation.Examples_1_Code": {
    "message": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])"
  },
  "DateTimeZone.FromText_Documentation.Examples_1_Result": {
    "message": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
  },
  "DateTimeZone.FromText_Documentation.Examples_2_Description": {
    "message": "Convertir à l’aide d’ISO 8601"
  },
  "DateTimeZone.FromText_Documentation.Examples_2_Code": {
    "message": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])"
  },
  "DateTimeZone.FromText_Documentation.Examples_2_Result": {
    "message": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
  },
  "DateTimeZone.RemoveZone_Documentation.Name": {
    "message": "DateTimeZone.RemoveZone"
  },
  "DateTimeZone.RemoveZone_Documentation.Description": {
    "message": "Supprime les informations de fuseau horaire de la valeur datetimezone spécifiée."
  },
  "DateTimeZone.RemoveZone_Documentation.LongDescription": {
    "message": "Retourne une valeur #datetime de <code>dateTimeZone</code> avec les informations de fuseau horaire supprimées."
  },
  "DateTimeZone.RemoveZone_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.RemoveZone_Documentation.Examples_0_Description": {
    "message": "Supprime les informations de fuseau horaire de la valeur #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0)."
  },
  "DateTimeZone.RemoveZone_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))"
  },
  "DateTimeZone.RemoveZone_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 12, 31, 9, 15, 36)"
  },
  "DateTimeZone.ToLocal_Documentation.Name": {
    "message": "DateTimeZone.ToLocal"
  },
  "DateTimeZone.ToLocal_Documentation.Description": {
    "message": "Convertit le composant de fuseau horaire dans le fuseau horaire local."
  },
  "DateTimeZone.ToLocal_Documentation.LongDescription": {
    "message": "Modifie les informations de fuseau de la valeur datetimezone <code>dateTimeZone</code> en informations de fuseau horaire local.\r\n    Si <code>dateTimeZone</code> n'a pas de composant de fuseau horaire, les informations de fuseau horaire sont ajoutées."
  },
  "DateTimeZone.ToLocal_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.ToLocal_Documentation.Examples_0_Description": {
    "message": "Modifiez les informations de fuseau horaire pour #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) dans le fuseau horaire local (en supposant PST)."
  },
  "DateTimeZone.ToLocal_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))"
  },
  "DateTimeZone.ToLocal_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
  },
  "DateTimeZone.ToRecord_Documentation.Name": {
    "message": "DateTimeZone.ToRecord"
  },
  "DateTimeZone.ToRecord_Documentation.Description": {
    "message": "Retourne un enregistrement qui contient les parties de la valeur datetimezone."
  },
  "DateTimeZone.ToRecord_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui contient les parties de la valeur datetimezone spécifiée, <code>dateTimeZone</code>.\r\n <ul>\r\n        <li><code>dateTimeZone</code> : valeur <code>datetimezone</code> à partir de laquelle l'enregistrement des parties doit être calculé.</li>\r\n      </ul>"
  },
  "DateTimeZone.ToRecord_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.ToRecord_Documentation.Examples_0_Description": {
    "message": "Convertit la valeur <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> dans un enregistrement contenant les valeurs Date, Time et Zone."
  },
  "DateTimeZone.ToRecord_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))"
  },
  "DateTimeZone.ToRecord_Documentation.Examples_0_Result": {
    "message": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
  },
  "DateTimeZone.ToText_Documentation.Name": {
    "message": "DateTimeZone.ToText"
  },
  "DateTimeZone.ToText_Documentation.Description": {
    "message": "Retourne une représentation de texte de la valeur datetimezone."
  },
  "DateTimeZone.ToText_Documentation.LongDescription": {
    "message": "Renvoie une représentation textuelle de <code>dateTimeZone</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. <code>culture</code> n'est utilisé que pour les workflows hérités. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : Une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Omettre ce champ ou fournir <code>null</code> entraînera le formatage de la date en utilisant la valeur par défaut définie par <code>Culture</code>.</li>\r\n   <li><code>Culture</code> : Quand <code>Format</code> n'est pas nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"MMM\"</code> est <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, tandis que dans <code>\"ru-RU\"</code> <code>\"MMM\"</code> est <code>\"янв\", \"фев\", \"мар\", ...</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les flux de travail hérités, <code>options</code> et <code>culture</code> peut également être des valeurs de texte. Cela a le même comportement que si <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>."
  },
  "DateTimeZone.ToText_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.ToText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0) </code> en une valeur <code>de texte</code>. <i>la sortie des résultats peut varier en fonction de la culture actuelle.</i>"
  },
  "DateTimeZone.ToText_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))"
  },
  "DateTimeZone.ToText_Documentation.Examples_0_Result": {
    "message": "\"12/31/2010 1:30:25 AM +02:00\""
  },
  "DateTimeZone.ToText_Documentation.Examples_1_Description": {
    "message": "Convertir à l’aide d’un format personnalisé et de la culture allemande"
  },
  "DateTimeZone.ToText_Documentation.Examples_1_Code": {
    "message": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])"
  },
  "DateTimeZone.ToText_Documentation.Examples_1_Result": {
    "message": "\"30 Dez 2010 02:04:50.369730 -08:00\""
  },
  "DateTimeZone.ToText_Documentation.Examples_2_Description": {
    "message": "Convertir à l’aide du modèle ISO 8601"
  },
  "DateTimeZone.ToText_Documentation.Examples_2_Code": {
    "message": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])"
  },
  "DateTimeZone.ToText_Documentation.Examples_2_Result": {
    "message": "\"2000-02-08T03:45:12.0000000+02:00\""
  },
  "DateTimeZone.ToUtc_Documentation.Name": {
    "message": "DateTimeZone.ToUtc"
  },
  "DateTimeZone.ToUtc_Documentation.Description": {
    "message": "Convertit le composant de fuseau en fuseau horaire UTC."
  },
  "DateTimeZone.ToUtc_Documentation.LongDescription": {
    "message": "Modifie les informations de fuseau de la valeur datetime <code>dateTimeZone</code> en informations de fuseau horaire UTC ou de temps universel.\r\n    Si <code>dateTimeZone</code> n'a pas de composant de fuseau horaire, les informations de fuseau UTC sont ajoutées."
  },
  "DateTimeZone.ToUtc_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.ToUtc_Documentation.Examples_0_Description": {
    "message": "Modifiez les informations de fuseau horaire pour #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) en fuseau horaire UTC."
  },
  "DateTimeZone.ToUtc_Documentation.Examples_0_Code": {
    "message": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))"
  },
  "DateTimeZone.ToUtc_Documentation.Examples_0_Result": {
    "message": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
  },
  "DateTimeZone.ZoneHours_Documentation.Name": {
    "message": "DateTimeZone.ZoneHours"
  },
  "DateTimeZone.ZoneHours_Documentation.Description": {
    "message": "Modifie le fuseau horaire de la valeur."
  },
  "DateTimeZone.ZoneHours_Documentation.LongDescription": {
    "message": "Modifie le fuseau horaire de la valeur."
  },
  "DateTimeZone.ZoneHours_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "DateTimeZone.ZoneMinutes_Documentation.Name": {
    "message": "DateTimeZone.ZoneMinutes"
  },
  "DateTimeZone.ZoneMinutes_Documentation.Description": {
    "message": "Modifie le fuseau horaire de la valeur."
  },
  "DateTimeZone.ZoneMinutes_Documentation.LongDescription": {
    "message": "Modifie le fuseau horaire de la valeur."
  },
  "DateTimeZone.ZoneMinutes_Documentation.Category": {
    "message": "DateTimeZone"
  },
  "Decimal.From_Documentation.Name": {
    "message": "Decimal.From"
  },
  "Decimal.From_Documentation.Description": {
    "message": "Crée une valeur décimale à partir de la valeur donnée."
  },
  "Decimal.From_Documentation.LongDescription": {
    "message": "Retourne une valeur décimale<code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Décimal.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage de valeurs décimales, <code>value</code> est retourné. dans le cas contraire, une erreur est retournée. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Decimal.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Decimal.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur décimale <code>number</code> de <code>\"4.5\"</code>."
  },
  "Decimal.From_Documentation.Examples_0_Code": {
    "message": "Decimal.From(\"4.5\")"
  },
  "Decimal.From_Documentation.Examples_0_Result": {
    "message": "4.5"
  },
  "DeltaLake.Table_Documentation.Name": {
    "message": "DeltaLake.Table"
  },
  "DeltaLake.Table_Documentation.Description": {
    "message": "Renvoie le contenu de la table Delta Lake."
  },
  "DeltaLake.Table_Documentation.LongDescription": {
    "message": "Renvoie le contenu de la table Delta Lake."
  },
  "DeltaLake.Table_Documentation.Category": {
    "message": "Accès aux données"
  },
  "Double.From_Documentation.Name": {
    "message": "Double.From"
  },
  "Double.From_Documentation.Description": {
    "message": "Crée une valeur double à partir de la valeur donnée."
  },
  "Double.From_Documentation.LongDescription": {
    "message": "Retourne une valeur double <code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Double.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage de valeurs doubles, <code>value</code> est retourné. dans le cas contraire, une erreur est retournée. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Double.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Double.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur double <code>number</code> de <code>\"4\"</code>."
  },
  "Double.From_Documentation.Examples_0_Code": {
    "message": "Double.From(\"4.5\")"
  },
  "Double.From_Documentation.Examples_0_Result": {
    "message": "4.5"
  },
  "Duration.Days_Documentation.Name": {
    "message": "Duration.Days"
  },
  "Duration.Days_Documentation.Description": {
    "message": "Retourne la partie jours d’une durée."
  },
  "Duration.Days_Documentation.LongDescription": {
    "message": "Retourne la partie jours de <code>duration</code>."
  },
  "Duration.Days_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.Days_Documentation.Examples_0_Description": {
    "message": "Extrayez le nombre de jours entre deux dates."
  },
  "Duration.Days_Documentation.Examples_0_Code": {
    "message": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))"
  },
  "Duration.Days_Documentation.Examples_0_Result": {
    "message": "7"
  },
  "Duration.From_Documentation.Name": {
    "message": "Duration.From"
  },
  "Duration.From_Documentation.Description": {
    "message": "Crée une durée à partir de la valeur spécifiée."
  },
  "Duration.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>duration</code> du <code>value</code> spécifié. Si le <code>value</code> spécifié est <code>null</code>, <code>Duration.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>duration</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>duration</code> : \r\n      <ul>\r\n        <li><code>text</code> : valeur <code>duration</code> obtenue à partir d'un format textuel de temps écoulé (d.h:m:s). Référez-vous à <code>Duration.FromText</code> pour plus de détails.</li>\r\n        <li><code>number</code> : <code>duration</code> équivalente au nombre de jours entiers ou de fractions de jours exprimés par <code>value</code>.</li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "Duration.From_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.From_Documentation.Examples_0_Description": {
    "message": "Convertit <code>2.525</code> dans une valeur <code>duration</code>."
  },
  "Duration.From_Documentation.Examples_0_Code": {
    "message": "Duration.From(2.525)"
  },
  "Duration.From_Documentation.Examples_0_Result": {
    "message": "#duration(2, 12, 36, 0)"
  },
  "Duration.FromText_Documentation.Name": {
    "message": "Duration.FromText"
  },
  "Duration.FromText_Documentation.Description": {
    "message": "Retourne une valeur de durée à partir d'un format textuel de temps écoulé (d.h:m:s)."
  },
  "Duration.FromText_Documentation.LongDescription": {
    "message": "Retourne une valeur de durée à partir du texte spécifié, <code>text</code>. Les formats suivants peuvent être analysés par cette fonction :\r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)jjj(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (Toutes les plages sont inclusives)<br>\r\n        jjj : Nombre de jours.<br>\r\n        hh : Nombre d'heures, entre 0 et 23.<br>\r\n        mm : Nombre de minutes, entre 0 et 59.<br>\r\n        ss : Nombre de secondes, entre 0 et 59.<br>\r\n        ff : Fractions de seconde, entre 0 et 9999999."
  },
  "Duration.FromText_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.FromText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>\"2.05:55:20\"</code> dans une valeur <code>duration</code>."
  },
  "Duration.FromText_Documentation.Examples_0_Code": {
    "message": "Duration.FromText(\"2.05:55:20\")"
  },
  "Duration.FromText_Documentation.Examples_0_Result": {
    "message": "#duration(2, 5, 55, 20)"
  },
  "Duration.Hours_Documentation.Name": {
    "message": "Duration.Hours"
  },
  "Duration.Hours_Documentation.Description": {
    "message": "Retourne la partie heures d’une durée."
  },
  "Duration.Hours_Documentation.LongDescription": {
    "message": "Retourne la partie heures de <code>duration</code>."
  },
  "Duration.Hours_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.Hours_Documentation.Examples_0_Description": {
    "message": "Extrayez les heures d’une valeur de durée."
  },
  "Duration.Hours_Documentation.Examples_0_Code": {
    "message": "Duration.Hours(#duration(5, 4, 3, 2))"
  },
  "Duration.Hours_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Duration.Minutes_Documentation.Name": {
    "message": "Duration.Minutes"
  },
  "Duration.Minutes_Documentation.Description": {
    "message": "Retourne la partie minutes d’une durée."
  },
  "Duration.Minutes_Documentation.LongDescription": {
    "message": "Retourne la partie minutes de <code>duration</code>."
  },
  "Duration.Minutes_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.Minutes_Documentation.Examples_0_Description": {
    "message": "Extrayez les minutes d’une valeur de durée."
  },
  "Duration.Minutes_Documentation.Examples_0_Code": {
    "message": "Duration.Minutes(#duration(5, 4, 3, 2))"
  },
  "Duration.Minutes_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "Duration.Seconds_Documentation.Name": {
    "message": "Duration.Seconds"
  },
  "Duration.Seconds_Documentation.Description": {
    "message": "Retourne la partie secondes d’une durée."
  },
  "Duration.Seconds_Documentation.LongDescription": {
    "message": "Retourne la partie secondes de <code>duration</code>."
  },
  "Duration.Seconds_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.Seconds_Documentation.Examples_0_Description": {
    "message": "Extrayez les secondes d’une valeur de durée."
  },
  "Duration.Seconds_Documentation.Examples_0_Code": {
    "message": "Duration.Seconds(#duration(5, 4, 3, 2))"
  },
  "Duration.Seconds_Documentation.Examples_0_Result": {
    "message": "2"
  },
  "Duration.ToRecord_Documentation.Name": {
    "message": "Duration.ToRecord"
  },
  "Duration.ToRecord_Documentation.Description": {
    "message": "Retourne un enregistrement contenant les parties de la durée."
  },
  "Duration.ToRecord_Documentation.LongDescription": {
    "message": "Retourne un enregistrement contenant les parties de la valeur de durée, <code>duration</code>.\r\n  <ul>\r\n        <li><code>duration</code> : <code>duration</code> à partir de laquelle l'enregistrement est créé.</li>\r\n      </ul>"
  },
  "Duration.ToRecord_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.ToRecord_Documentation.Examples_0_Description": {
    "message": "Convertit <code>#duration(2, 5, 55, 20)</code> dans un enregistrement des parties comprenant les jours, les heures, les minutes et les secondes, le cas échéant."
  },
  "Duration.ToRecord_Documentation.Examples_0_Code": {
    "message": "Duration.ToRecord(#duration(2, 5, 55, 20))"
  },
  "Duration.ToRecord_Documentation.Examples_0_Result": {
    "message": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
  },
  "Duration.ToText_Documentation.Name": {
    "message": "Duration.ToText"
  },
  "Duration.ToText_Documentation.Description": {
    "message": "Retourne le texte du format « d.h:m:s »."
  },
  "Duration.ToText_Documentation.LongDescription": {
    "message": "Retourne une représentation textuelle sous la forme « jour.heure:min:s » de la valeur de durée donnée, <code>duration</code>.\r\n <ul>\r\n        <li><code>duration</code> : durée (<code>duration</code>) utilisée pour calculer la représentation textuelle.</li>\r\n  <li><code>format</code> : <i>[Facultatif]</i> Déprécié, génère une erreur s'il n'est pas null</li>\r\n      </ul>"
  },
  "Duration.ToText_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.ToText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>#duration(2, 5, 55, 20)</code> dans une valeur de texte."
  },
  "Duration.ToText_Documentation.Examples_0_Code": {
    "message": "Duration.ToText(#duration(2, 5, 55, 20))"
  },
  "Duration.ToText_Documentation.Examples_0_Result": {
    "message": "\"2.05:55:20\""
  },
  "Duration.TotalDays_Documentation.Name": {
    "message": "Duration.TotalDays"
  },
  "Duration.TotalDays_Documentation.Description": {
    "message": "Retourne les jours totaux que couvre cette durée."
  },
  "Duration.TotalDays_Documentation.LongDescription": {
    "message": "Retourne le nombre total de jours s’étendant sur <code>duration</code>."
  },
  "Duration.TotalDays_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.TotalDays_Documentation.Examples_0_Description": {
    "message": "Recherche les jours totaux couverts par une valeur de durée."
  },
  "Duration.TotalDays_Documentation.Examples_0_Code": {
    "message": "Duration.TotalDays(#duration(5, 4, 3, 2))"
  },
  "Duration.TotalDays_Documentation.Examples_0_Result": {
    "message": "5.1687731481481478"
  },
  "Duration.TotalHours_Documentation.Name": {
    "message": "Duration.TotalHours"
  },
  "Duration.TotalHours_Documentation.Description": {
    "message": "Retourne les heures totales que couvre cette durée."
  },
  "Duration.TotalHours_Documentation.LongDescription": {
    "message": "Retourne le nombre total d’heures s’étendant sur <code>duration</code>."
  },
  "Duration.TotalHours_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.TotalHours_Documentation.Examples_0_Description": {
    "message": "Recherche les heures totales couvertes par une valeur de durée."
  },
  "Duration.TotalHours_Documentation.Examples_0_Code": {
    "message": "Duration.TotalHours(#duration(5, 4, 3, 2))"
  },
  "Duration.TotalHours_Documentation.Examples_0_Result": {
    "message": "124.05055555555555"
  },
  "Duration.TotalMinutes_Documentation.Name": {
    "message": "Duration.TotalMinutes"
  },
  "Duration.TotalMinutes_Documentation.Description": {
    "message": "Retourne les minutes totales que couvre cette durée."
  },
  "Duration.TotalMinutes_Documentation.LongDescription": {
    "message": "Retourne le nombre total de minutes s’étendant sur <code>duration</code>."
  },
  "Duration.TotalMinutes_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.TotalMinutes_Documentation.Examples_0_Description": {
    "message": "Recherche les minutes totales couvertes par une valeur de durée."
  },
  "Duration.TotalMinutes_Documentation.Examples_0_Code": {
    "message": "Duration.TotalMinutes(#duration(5, 4, 3, 2))"
  },
  "Duration.TotalMinutes_Documentation.Examples_0_Result": {
    "message": "7443.0333333333338"
  },
  "Duration.TotalSeconds_Documentation.Name": {
    "message": "Duration.TotalSeconds"
  },
  "Duration.TotalSeconds_Documentation.Description": {
    "message": "Retourne les secondes totales que couvre cette durée."
  },
  "Duration.TotalSeconds_Documentation.LongDescription": {
    "message": "Retourne le nombre total de secondes s’étendant sur <code>duration</code>."
  },
  "Duration.TotalSeconds_Documentation.Category": {
    "message": "Duration"
  },
  "Duration.TotalSeconds_Documentation.Examples_0_Description": {
    "message": "Recherche les secondes totales couvertes par une valeur de durée."
  },
  "Duration.TotalSeconds_Documentation.Examples_0_Code": {
    "message": "Duration.TotalSeconds(#duration(5, 4, 3, 2))"
  },
  "Duration.TotalSeconds_Documentation.Examples_0_Result": {
    "message": "446582"
  },
  "Error.Record_Documentation.Name": {
    "message": "Error.Record"
  },
  "Error.Record_Documentation.Description": {
    "message": "Retourne un enregistrement d'erreur à partir des valeurs de texte fournies, contenant la raison, un message et les détails."
  },
  "Error.Record_Documentation.LongDescription": {
    "message": "Retourne un enregistrement d'erreur à partir des valeurs de texte fournies, contenant la raison, un message et les détails."
  },
  "Error.Record_Documentation.Category": {
    "message": "Error"
  },
  "Excel.ShapeTable_Documentation.Name": {
    "message": "Excel.ShapeTable"
  },
  "Excel.ShapeTable_Documentation.Description": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Excel.ShapeTable_Documentation.LongDescription": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Excel.ShapeTable_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Expression.Constant_Documentation.Name": {
    "message": "Expression.Constant"
  },
  "Expression.Constant_Documentation.Description": {
    "message": "Retourne la représentation en code source M d'une valeur de constante."
  },
  "Expression.Constant_Documentation.LongDescription": {
    "message": "Retourne la représentation en code source M d'une valeur de constante."
  },
  "Expression.Constant_Documentation.Category": {
    "message": "Expression"
  },
  "Expression.Constant_Documentation.Examples_0_Description": {
    "message": "Obtenir la représentation en code source M d'une valeur numérique."
  },
  "Expression.Constant_Documentation.Examples_0_Code": {
    "message": "Expression.Constant(123)"
  },
  "Expression.Constant_Documentation.Examples_0_Result": {
    "message": "\"123\""
  },
  "Expression.Constant_Documentation.Examples_1_Description": {
    "message": "Obtenir la représentation en code source M d'une valeur de date."
  },
  "Expression.Constant_Documentation.Examples_1_Code": {
    "message": "Expression.Constant(#date(2035, 01, 02))"
  },
  "Expression.Constant_Documentation.Examples_1_Result": {
    "message": "\"#date(2035, 1, 2)\""
  },
  "Expression.Constant_Documentation.Examples_2_Description": {
    "message": "Obtenir la représentation en code source M d'une valeur de texte."
  },
  "Expression.Constant_Documentation.Examples_2_Code": {
    "message": "Expression.Constant(\"abc\")"
  },
  "Expression.Constant_Documentation.Examples_2_Result": {
    "message": "\"\"\"abc\"\"\""
  },
  "Expression.Evaluate_Documentation.Name": {
    "message": "Expression.Evaluate"
  },
  "Expression.Evaluate_Documentation.Description": {
    "message": "Retourne le résultat de l'évaluation d'une expression M."
  },
  "Expression.Evaluate_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'évaluation d'une expression M <code>document</code>, avec les identificateurs disponibles qui peuvent être référencés par <code>environment</code>."
  },
  "Expression.Evaluate_Documentation.Category": {
    "message": "Expression"
  },
  "Expression.Evaluate_Documentation.Examples_0_Description": {
    "message": "Évaluer une somme simple."
  },
  "Expression.Evaluate_Documentation.Examples_0_Code": {
    "message": "Expression.Evaluate(\"1 + 1\")"
  },
  "Expression.Evaluate_Documentation.Examples_0_Result": {
    "message": "2"
  },
  "Expression.Evaluate_Documentation.Examples_1_Description": {
    "message": "Évaluer une somme plus complexe."
  },
  "Expression.Evaluate_Documentation.Examples_1_Code": {
    "message": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])"
  },
  "Expression.Evaluate_Documentation.Examples_1_Result": {
    "message": "6"
  },
  "Expression.Evaluate_Documentation.Examples_2_Description": {
    "message": "Évaluer la concaténation d'une valeur de texte avec un identificateur."
  },
  "Expression.Evaluate_Documentation.Examples_2_Code": {
    "message": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])"
  },
  "Expression.Evaluate_Documentation.Examples_2_Result": {
    "message": "\"\"\"abcdef\"\"\""
  },
  "Expression.Identifier_Documentation.Name": {
    "message": "Expression.Identifier"
  },
  "Expression.Identifier_Documentation.Description": {
    "message": "Retourne la représentation en code source M d'un identificateur."
  },
  "Expression.Identifier_Documentation.LongDescription": {
    "message": "Retourne la représentation en code source M d'un identificateur <code>name</code>."
  },
  "Expression.Identifier_Documentation.Category": {
    "message": "Expression"
  },
  "Expression.Identifier_Documentation.Examples_0_Description": {
    "message": "Obtenir la représentation en code source M d'un identificateur."
  },
  "Expression.Identifier_Documentation.Examples_0_Code": {
    "message": "Expression.Identifier(\"MyIdentifier\")"
  },
  "Expression.Identifier_Documentation.Examples_0_Result": {
    "message": "\"MyIdentifier\""
  },
  "Expression.Identifier_Documentation.Examples_1_Description": {
    "message": "Obtenir la représentation en code source M d'un identificateur contenant un espace."
  },
  "Expression.Identifier_Documentation.Examples_1_Code": {
    "message": "Expression.Identifier(\"My Identifier\")"
  },
  "Expression.Identifier_Documentation.Examples_1_Result": {
    "message": "\"#\"\"My Identifier\"\"\""
  },
  "File.Contents_Documentation.Name": {
    "message": "File.Contents"
  },
  "File.Contents_Documentation.Description": {
    "message": "Retourne le contenu du fichier spécifié sous forme binaire."
  },
  "File.Contents_Documentation.LongDescription": {
    "message": "Retourne le contenu du fichier, <code>path</code>, sous forme de binaire. Le paramètre <code>options</code> est actuellement réservé à un usage interne."
  },
  "File.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Function.IsDataSource_Documentation.Name": {
    "message": "Function.IsDataSource"
  },
  "Function.IsDataSource_Documentation.Description": {
    "message": "Retourne un résultat indiquant si une fonction est considérée ou non comme une source de données."
  },
  "Function.IsDataSource_Documentation.LongDescription": {
    "message": "Retourne un résultat indiquant si <code>function</code> est considéré comme une source de données."
  },
  "Function.IsDataSource_Documentation.Category": {
    "message": "Type"
  },
  "Geography.FromWellKnownText_Documentation.Name": {
    "message": "Geography.FromWellKnownText"
  },
  "Geography.FromWellKnownText_Documentation.Description": {
    "message": "Convertit le texte représentant une valeur géographique au format Well-Known Text (WKT) en enregistrement structuré."
  },
  "Geography.FromWellKnownText_Documentation.LongDescription": {
    "message": "Convertit le texte représentant une valeur géographique au format Well-Known Text (WKT) en enregistrement structuré. WKT est un format standard défini par l’Open Geospatial Consortium (OGC). Il correspond au format de sérialisation habituel utilisé par les bases de données, notamment SQL Server."
  },
  "Geography.FromWellKnownText_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Geography.ToWellKnownText_Documentation.Name": {
    "message": "Geography.ToWellKnownText"
  },
  "Geography.ToWellKnownText_Documentation.Description": {
    "message": "Convertit une valeur de point géographique structuré en sa représentation Well-Known Text (WKT)."
  },
  "Geography.ToWellKnownText_Documentation.LongDescription": {
    "message": "Convertit une valeur de point géographique structuré en sa représentation Well-Known Text (WKT), telle que définie par l’OGC (Open Geospatial Consortium), qui est également le format de sérialisation utilisé par de nombreuses bases de données, notamment SQL Server."
  },
  "Geography.ToWellKnownText_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Geometry.FromWellKnownText_Documentation.Name": {
    "message": "Geometry.FromWellKnownText"
  },
  "Geometry.FromWellKnownText_Documentation.Description": {
    "message": "Convertit le texte représentant une valeur géométrique au format Well-Known Text (WKT) en enregistrement structuré."
  },
  "Geometry.FromWellKnownText_Documentation.LongDescription": {
    "message": "Convertit le texte représentant une valeur géométrique au format Well-Known Text (WKT) en enregistrement structuré. WKT est un format standard défini par l’Open Geospatial Consortium (OGC) et correspond au format de sérialisation habituel utilisé par les bases de données, notamment SQL Server."
  },
  "Geometry.FromWellKnownText_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Geometry.ToWellKnownText_Documentation.Name": {
    "message": "Geometry.ToWellKnownText"
  },
  "Geometry.ToWellKnownText_Documentation.Description": {
    "message": "Convertit une valeur de point géométrique structurée en sa représentation Well-Known Text (WKT)."
  },
  "Geometry.ToWellKnownText_Documentation.LongDescription": {
    "message": "Convertit une valeur de point géométrique structurée en sa représentation Well-Known Text (WKT), telle que définie par l’OGC (Open Geospatial Consortium), qui est également le format de sérialisation utilisé par de nombreuses bases de données, notamment SQL Server."
  },
  "Geometry.ToWellKnownText_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Graph.Nodes_Documentation.Name": {
    "message": "Graph.Nodes"
  },
  "Graph.Nodes_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Graph.Nodes_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Graph.Nodes_Documentation.Category": {
    "message": "Expression"
  },
  "Guid.From_Documentation.Name": {
    "message": "Guid.From"
  },
  "Guid.From_Documentation.Description": {
    "message": "Retourne une valeur GUID de la valeur donnée."
  },
  "Guid.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>Guid.Type</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Guid.From</code> retourne <code>null</code>. Une vérification est effectuée pour déterminer si le <code>value</code> donné est dans un format acceptable. Les formats acceptables sont fournis dans les exemples."
  },
  "Guid.From_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Guid.From_Documentation.Examples_0_Description": {
    "message": "Le GUID peut être fourni sous forme de 32 chiffres hexadécimaux contigus."
  },
  "Guid.From_Documentation.Examples_0_Code": {
    "message": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")"
  },
  "Guid.From_Documentation.Examples_0_Result": {
    "message": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
  },
  "Guid.From_Documentation.Examples_1_Description": {
    "message": "Le GUID peut être fourni sous forme de 32 chiffres hexadécimaux séparés par des traits d'union en blocs de 8-4-4-4-12."
  },
  "Guid.From_Documentation.Examples_1_Code": {
    "message": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")"
  },
  "Guid.From_Documentation.Examples_1_Result": {
    "message": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
  },
  "Guid.From_Documentation.Examples_2_Description": {
    "message": "Le GUID peut être fourni sous forme de 32 chiffres hexadécimaux séparés par des traits d'union et placés entre accolades."
  },
  "Guid.From_Documentation.Examples_2_Code": {
    "message": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")"
  },
  "Guid.From_Documentation.Examples_2_Result": {
    "message": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
  },
  "Guid.From_Documentation.Examples_3_Description": {
    "message": "Le GUID peut être fourni sous forme de 32 chiffres hexadécimaux séparés par des traits d'union et placés entre parenthèses."
  },
  "Guid.From_Documentation.Examples_3_Code": {
    "message": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")"
  },
  "Guid.From_Documentation.Examples_3_Result": {
    "message": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
  },
  "Int16.From_Documentation.Name": {
    "message": "Int16.From"
  },
  "Int16.From_Documentation.Description": {
    "message": "Crée un entier 16 bits à partir de la valeur donnée."
  },
  "Int16.From_Documentation.LongDescription": {
    "message": "Retourne une valeur entière 16 bits <code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Int16.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage d'entiers 16 bits sans partie fractionnaire, <code>value</code> est retourné. S'il comprend une partie fractionnaire, le nombre est arrondi selon le mode d'arrondi spécifié. Le mode d'arrondi par défaut est <code>RoundingMode.ToEven</code>. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Référez-vous à <code>Number.Round</code> pour les modes d'arrondi disponibles. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Int16.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Int16.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur entière 16 bits <code>number</code> de <code>\"4\"</code>."
  },
  "Int16.From_Documentation.Examples_0_Code": {
    "message": "Int64.From(\"4\")"
  },
  "Int16.From_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Int16.From_Documentation.Examples_1_Description": {
    "message": "Obtenez la valeur entière 16 bits <code>number</code> de <code>\"4.5\"</code> en utilisant <code>RoundingMode.AwayFromZero</code>."
  },
  "Int16.From_Documentation.Examples_1_Code": {
    "message": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)"
  },
  "Int16.From_Documentation.Examples_1_Result": {
    "message": "5"
  },
  "Int32.From_Documentation.Name": {
    "message": "Int32.From"
  },
  "Int32.From_Documentation.Description": {
    "message": "Crée un entier 32 bits à partir de la valeur donnée."
  },
  "Int32.From_Documentation.LongDescription": {
    "message": "Retourne une valeur entière 32 bits <code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Int32.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage d'entiers 32 bits sans partie fractionnaire, <code>value</code> est retourné. S'il comprend une partie fractionnaire, le nombre est arrondi selon le mode d'arrondi spécifié. Le mode d'arrondi par défaut est <code>RoundingMode.ToEven</code>. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Référez-vous à <code>Number.Round</code> pour les modes d'arrondi disponibles. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Int32.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Int32.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur entière 32 bits <code>number</code> de <code>\"4\"</code>."
  },
  "Int32.From_Documentation.Examples_0_Code": {
    "message": "Int32.From(\"4\")"
  },
  "Int32.From_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Int32.From_Documentation.Examples_1_Description": {
    "message": "Obtenez la valeur entière 32 bits <code>number</code> de <code>\"4.5\"</code> en utilisant <code>RoundingMode.AwayFromZero</code>."
  },
  "Int32.From_Documentation.Examples_1_Code": {
    "message": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)"
  },
  "Int32.From_Documentation.Examples_1_Result": {
    "message": "5"
  },
  "Int64.From_Documentation.Name": {
    "message": "Int64.From"
  },
  "Int64.From_Documentation.Description": {
    "message": "Crée un entier 64 bits à partir de la valeur donnée."
  },
  "Int64.From_Documentation.LongDescription": {
    "message": "Retourne une valeur entière 64 bits <code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Int64.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage d'entiers 64 bits sans partie fractionnaire, <code>value</code> est retourné. S'il comprend une partie fractionnaire, le nombre est arrondi selon le mode d'arrondi spécifié. Le mode d'arrondi par défaut est <code>RoundingMode.ToEven</code>. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Référez-vous à <code>Number.Round</code> pour les modes d'arrondi disponibles. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Int64.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Int64.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur entière 64 bits <code>number</code> de <code>\"4\"</code>."
  },
  "Int64.From_Documentation.Examples_0_Code": {
    "message": "Int64.From(\"4\")"
  },
  "Int64.From_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Int64.From_Documentation.Examples_1_Description": {
    "message": "Obtenez la valeur entière de 64 bits <code>number</code> de <code>\"4.5\"</code> en utilisant <code>RoundingMode.AwayFromZero</code>."
  },
  "Int64.From_Documentation.Examples_1_Code": {
    "message": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)"
  },
  "Int64.From_Documentation.Examples_1_Result": {
    "message": "5"
  },
  "Int8.From_Documentation.Name": {
    "message": "Int8.From"
  },
  "Int8.From_Documentation.Description": {
    "message": "Crée un entier signé 8 bits à partir de la valeur donnée."
  },
  "Int8.From_Documentation.LongDescription": {
    "message": "Retourne une valeur entière 8 bits <code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Int8.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage d'entiers 8 bits sans partie fractionnaire, <code>value</code> est retourné. S'il comprend une partie fractionnaire, le nombre est arrondi selon le mode d'arrondi spécifié. Le mode d'arrondi par défaut est <code>RoundingMode.ToEven</code>. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Référez-vous à <code>Number.Round</code> pour les modes d'arrondi disponibles. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Int8.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Int8.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur entière signée 8 bits <code>number</code> de <code>\"4\"</code>."
  },
  "Int8.From_Documentation.Examples_0_Code": {
    "message": "Int8.From(\"4\")"
  },
  "Int8.From_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Int8.From_Documentation.Examples_1_Description": {
    "message": "Obtenez la valeur entière signée 8 bits <code>number</code> de <code>\"4.5\"</code> en utilisant <code>RoundingMode.AwayFromZero</code>."
  },
  "Int8.From_Documentation.Examples_1_Code": {
    "message": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)"
  },
  "Int8.From_Documentation.Examples_1_Result": {
    "message": "5"
  },
  "ItemExpression.From_Documentation.Name": {
    "message": "ItemExpression.From"
  },
  "ItemExpression.From_Documentation.Description": {
    "message": "Retourne l’arborescence de syntaxe abstraite (AST) pour le corps d’une fonction."
  },
  "ItemExpression.From_Documentation.LongDescription": {
    "message": "<p>Retourne l’arborescence de syntaxe abstraite (AST) pour le corps de <code>function</code>, normalisé en une <i>expression de ligne</i> :\r\n<ul>\r\n  <li> La fonction doit être lambda à 1 argument</li>\r\n  <li>Toutes les références au paramètre de fonction sont remplacées par <code>ItemExpression.Item</code>.</li>\r\n  <li>L’AST sera simplifié pour contenir uniquement les nœuds des types :\r\n   <ul>\r\n    <li><code>Constant</code></li>\r\n    <li><code>Invocation</code></li>\r\n    <li><code>Unary</code></li>\r\n    <li><code>Binary</code></li>\r\n    <li><code>If</code></li>\r\n    <li><code>FieldAccess</code></li>\r\n  </ul>\r\n </li>\r\n</ul>\r\n</p>\r\n</p>Une erreur est générée si un AST d’expression de ligne ne peut pas être retourné pour le corps de <code>function</code>.</p>"
  },
  "ItemExpression.From_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "ItemExpression.From_Documentation.Examples_0_Description": {
    "message": "Retourne l'AST pour le corps de la fonction <code>each _ <> null</code>"
  },
  "ItemExpression.From_Documentation.Examples_0_Code": {
    "message": "ItemExpression.From(each _ <> null)"
  },
  "ItemExpression.From_Documentation.Examples_0_Result": {
    "message": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
  },
  "Json.Document_Documentation.Name": {
    "message": "Json.Document"
  },
  "Json.Document_Documentation.Description": {
    "message": "Retourne le contenu du document JSON."
  },
  "Json.Document_Documentation.LongDescription": {
    "message": "Retourne le contenu du document JSON."
  },
  "Json.Document_Documentation.Category": {
    "message": "Accessing data"
  },
  "Json.FromValue_Documentation.Name": {
    "message": "Json.FromValue"
  },
  "Json.FromValue_Documentation.Description": {
    "message": "Produit une représentation JSON d'une valeur donnée."
  },
  "Json.FromValue_Documentation.LongDescription": {
    "message": "<p>Produit une représentation JSON d'une valeur donnée <code>value</code> avec un codage de texte spécifié par <code>encoding</code>. Si <code>encoding</code> est omis, UTF8 est utilisé. Les valeurs sont représentées comme suit :</p>\r\n <ul>\r\n        <li>Les valeurs null, texte et logiques sont représentées par les types JSON correspondants</li>\r\n        <li>Les nombres sont représentés en tant que tels dans JSON, sauf que <code>#infinity</code>, <code>-#infinity</code> et <code>#nan</code> sont convertis en valeur null</li>\r\n        <li>Les listes sont représentées sous forme de tableaux JSON</li>\r\n        <li>Les enregistrements sont représentés sous forme d'objets JSON</li>\r\n        <li>Les tables sont représentées sous forme de tableaux d'objets</li>\r\n        <li>Les dates, heures, dates/heures, dates/fuseaux horaires et les durées sont représentés sous forme de texte ISO-8601</li>\r\n        <li>Les valeurs binaires sont représentées sous forme de texte codé en base 64</li>\r\n        <li>Les types et les fonctions génèrent une erreur</li>\r\n </ul>\r\n"
  },
  "Json.FromValue_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Json.FromValue_Documentation.Examples_0_Description": {
    "message": "Convertissez une valeur complexe en valeur JSON."
  },
  "Json.FromValue_Documentation.Examples_0_Code": {
    "message": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))"
  },
  "Json.FromValue_Documentation.Examples_0_Result": {
    "message": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
  },
  "Lines.FromBinary_Documentation.Name": {
    "message": "Lines.FromBinary"
  },
  "Lines.FromBinary_Documentation.Description": {
    "message": "Convertit une valeur binaire en une liste de valeurs de texte fractionnées au niveau des sauts de lignes. Si un style de guillemets est spécifié, les sauts de ligne peuvent apparaître entre guillemets. Si includeLineSeparators a la valeur true, les caractères de saut de ligne sont inclus dans le texte."
  },
  "Lines.FromBinary_Documentation.LongDescription": {
    "message": "Convertit une valeur binaire en une liste de valeurs de texte fractionnées au niveau des sauts de lignes. Si un style de guillemets est spécifié, les sauts de ligne peuvent apparaître entre guillemets. Si includeLineSeparators a la valeur true, les caractères de saut de ligne sont inclus dans le texte."
  },
  "Lines.FromBinary_Documentation.Category": {
    "message": "Lines"
  },
  "Lines.FromText_Documentation.Name": {
    "message": "Lines.FromText"
  },
  "Lines.FromText_Documentation.Description": {
    "message": "Convertit une valeur de texte en une liste de valeurs de texte fractionnées au niveau des sauts de lignes. Si includeLineSeparators a la valeur true, les caractères de saut de ligne sont inclus dans le texte."
  },
  "Lines.FromText_Documentation.LongDescription": {
    "message": "Convertit une valeur de texte en une liste de valeurs de texte fractionnées au niveau des sauts de lignes. Si includeLineSeparators a la valeur true, les caractères de saut de ligne sont inclus dans le texte.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (par défaut) Aucune règle d'utilisation de guillemets n'est nécessaire.</li>\r\n            <li><code>QuoteStyle.Csv:</code> L'utilisation de guillemets suit les mêmes règles que pour le format CSV. Un guillemet double est utilisé pour séparer ces régions, et une paire de guillemets doubles est utilisée pour indiquer la présence d'un guillemet double dans une de ces régions. </li>\r\n          </ul>\r\n        </div>\r\n    "
  },
  "Lines.FromText_Documentation.Category": {
    "message": "Lines"
  },
  "Lines.ToBinary_Documentation.Name": {
    "message": "Lines.ToBinary"
  },
  "Lines.ToBinary_Documentation.Description": {
    "message": "Convertit une liste de texte dans une valeur binaire à l'aide de l'encodage spécifié et d'un lineSeparator. Le lineSeparator spécifié est ajouté à chaque ligne.  S'il n'est pas spécifié, alors des caractères de retour chariot et de saut de ligne sont utilisés."
  },
  "Lines.ToBinary_Documentation.LongDescription": {
    "message": "Convertit une liste de texte dans une valeur binaire à l'aide de l'encodage spécifié et d'un lineSeparator. Le lineSeparator spécifié est ajouté à chaque ligne.  S'il n'est pas spécifié, alors des caractères de retour chariot et de saut de ligne sont utilisés."
  },
  "Lines.ToBinary_Documentation.Category": {
    "message": "Lines"
  },
  "Lines.ToText_Documentation.Name": {
    "message": "Lines.ToText"
  },
  "Lines.ToText_Documentation.Description": {
    "message": "Convertit une liste de texte dans un texte unique.  Le lineSeparator spécifié est ajouté à chaque ligne.  S'il n'est pas spécifié, alors des caractères de retour chariot et de saut de ligne sont utilisés."
  },
  "Lines.ToText_Documentation.LongDescription": {
    "message": "Convertit une liste de texte dans un texte unique.  Le lineSeparator spécifié est ajouté à chaque ligne.  S'il n'est pas spécifié, alors des caractères de retour chariot et de saut de ligne sont utilisés."
  },
  "Lines.ToText_Documentation.Category": {
    "message": "Lines"
  },
  "List.AllTrue_Documentation.Name": {
    "message": "List.AllTrue"
  },
  "List.AllTrue_Documentation.Description": {
    "message": "Retourne true si toutes les expressions ont la valeur true."
  },
  "List.AllTrue_Documentation.LongDescription": {
    "message": "Retourne true si toutes les expressions dans la liste <code>list</code> ont la valeur true."
  },
  "List.AllTrue_Documentation.Category": {
    "message": "List.Membership functions"
  },
  "List.AllTrue_Documentation.Examples_0_Description": {
    "message": "Détermine si toutes les expressions dans la liste {true, true, 2 > 0} ont la valeur true."
  },
  "List.AllTrue_Documentation.Examples_0_Code": {
    "message": "List.AllTrue({true, true, 2 > 0})"
  },
  "List.AllTrue_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.AllTrue_Documentation.Examples_1_Description": {
    "message": "Détermine si toutes les expressions dans la liste {true, true, 2 < 0} ont la valeur true."
  },
  "List.AllTrue_Documentation.Examples_1_Code": {
    "message": "List.AllTrue({true, false, 2 < 0})"
  },
  "List.AllTrue_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.AnyTrue_Documentation.Name": {
    "message": "List.AnyTrue"
  },
  "List.AnyTrue_Documentation.Description": {
    "message": "Retourne true si l'une des expressions a la valeur true."
  },
  "List.AnyTrue_Documentation.LongDescription": {
    "message": "Retourne true si l'une des expressions dans la liste <code>list</code> a la valeur true."
  },
  "List.AnyTrue_Documentation.Category": {
    "message": "List.Membership functions"
  },
  "List.AnyTrue_Documentation.Examples_0_Description": {
    "message": "Détermine si l'une des expressions dans la liste {true, false, 2 > 0} a la valeur true."
  },
  "List.AnyTrue_Documentation.Examples_0_Code": {
    "message": "List.AnyTrue({true, false, 2>0})"
  },
  "List.AnyTrue_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.AnyTrue_Documentation.Examples_1_Description": {
    "message": "Détermine si l'une des expressions dans la liste {2 = 0, false, 2 < 0} a la valeur true."
  },
  "List.AnyTrue_Documentation.Examples_1_Code": {
    "message": "List.AnyTrue({2 = 0, false, 2 < 0})"
  },
  "List.AnyTrue_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.Average_Documentation.Name": {
    "message": "List.Average"
  },
  "List.Average_Documentation.Description": {
    "message": "Retourne la moyenne des valeurs. Fonctionne avec les valeurs de nombre, de date, datetime, datetimezone et de durée."
  },
  "List.Average_Documentation.LongDescription": {
    "message": "Retourne la valeur moyenne des éléments dans la liste, <code>list</code>. Le résultat est fourni dans le même datatype que les valeurs dans la liste. Fonctionne uniquement avec les valeurs de nombre, de date, d'heure, datetime, datetimezone et de durée.\r\n    Si la liste est vide la valeur NULL est retournée."
  },
  "List.Average_Documentation.Category": {
    "message": "List.Averages"
  },
  "List.Average_Documentation.Examples_0_Description": {
    "message": "Recherche la moyenne de la liste de numéros, <code>{3, 4, 6}</code>."
  },
  "List.Average_Documentation.Examples_0_Code": {
    "message": "List.Average({3, 4, 6})"
  },
  "List.Average_Documentation.Examples_0_Result": {
    "message": "4.333333333333333"
  },
  "List.Average_Documentation.Examples_1_Description": {
    "message": "Recherche la moyenne des valeurs de date : 1er janvier 2011, 2 janvier 2011 et 3 janvier 2011."
  },
  "List.Average_Documentation.Examples_1_Code": {
    "message": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})"
  },
  "List.Average_Documentation.Examples_1_Result": {
    "message": "#date(2011, 1, 2)"
  },
  "List.Buffer_Documentation.Name": {
    "message": "List.Buffer"
  },
  "List.Buffer_Documentation.Description": {
    "message": "Place une liste en mémoire tampon."
  },
  "List.Buffer_Documentation.LongDescription": {
    "message": "Place la liste <code>list</code> dans la mémoire. Le résultat de cet appel est une liste stable."
  },
  "List.Buffer_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Buffer_Documentation.Examples_0_Description": {
    "message": "Créer une copie stable de la liste {1..10}."
  },
  "List.Buffer_Documentation.Examples_0_Code": {
    "message": "List.Buffer({1..10})"
  },
  "List.Buffer_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
  },
  "List.Combine_Documentation.Name": {
    "message": "List.Combine"
  },
  "List.Combine_Documentation.Description": {
    "message": "Retourne une seule liste en associant plusieurs listes."
  },
  "List.Combine_Documentation.LongDescription": {
    "message": "Prend une liste de listes, <code>lists</code>, et les fusionne dans une seule nouvelle liste."
  },
  "List.Combine_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.Combine_Documentation.Examples_0_Description": {
    "message": "Combine les deux listes simples {1, 2} et {3, 4}."
  },
  "List.Combine_Documentation.Examples_0_Code": {
    "message": "List.Combine({{1, 2}, {3, 4}})"
  },
  "List.Combine_Documentation.Examples_0_Result": {
    "message": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
  },
  "List.Combine_Documentation.Examples_1_Description": {
    "message": "Combine les deux listes, {1, 2} et {3, {4, 5}}, dont l'une contient une liste imbriquée."
  },
  "List.Combine_Documentation.Examples_1_Code": {
    "message": "List.Combine({{1, 2}, {3, {4, 5}}})"
  },
  "List.Combine_Documentation.Examples_1_Result": {
    "message": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
  },
  "List.Count_Documentation.Name": {
    "message": "List.Count"
  },
  "List.Count_Documentation.Description": {
    "message": "Retourne le nombre d'éléments dans la liste."
  },
  "List.Count_Documentation.LongDescription": {
    "message": "Retourne le nombre d'éléments dans la liste <code>list</code>."
  },
  "List.Count_Documentation.Category": {
    "message": "List.Information"
  },
  "List.Count_Documentation.Examples_0_Description": {
    "message": "Recherche le nombre de valeurs dans la liste {1, 2, 3}."
  },
  "List.Count_Documentation.Examples_0_Code": {
    "message": "List.Count({1, 2, 3})"
  },
  "List.Count_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "List.Distinct_Documentation.Name": {
    "message": "List.Distinct"
  },
  "List.Distinct_Documentation.Description": {
    "message": "Retourne une liste de valeurs avec des doublons supprimés."
  },
  "List.Distinct_Documentation.LongDescription": {
    "message": "Retourne une liste contenant toutes les valeurs dans la liste <code>list</code> avec les doublons supprimés. Si la liste est vide, le résultat est une liste vide."
  },
  "List.Distinct_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Distinct_Documentation.Examples_0_Description": {
    "message": "Supprimer les doublons dans la liste {1, 1, 2, 3, 3, 3}."
  },
  "List.Distinct_Documentation.Examples_0_Code": {
    "message": "List.Distinct({1, 1, 2, 3, 3, 3})"
  },
  "List.Distinct_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3}"
  },
  "List.First_Documentation.Name": {
    "message": "List.First"
  },
  "List.First_Documentation.Description": {
    "message": "Retourne la première valeur dans la liste ou la valeur par défaut spécifiée si l'objet est vide."
  },
  "List.First_Documentation.LongDescription": {
    "message": "Retourne le premier élément dans la liste <code>list</code>, ou la valeur par défaut facultative <code>defaultValue</code>, si la liste est vide.\r\n    Si la liste est vide et une valeur par défaut n'est pas spécifiée, la fonction retourne <code>null</code>."
  },
  "List.First_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.First_Documentation.Examples_0_Description": {
    "message": "Recherche la première valeur dans la liste {1, 2, 3}."
  },
  "List.First_Documentation.Examples_0_Code": {
    "message": "List.First({1, 2, 3})"
  },
  "List.First_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "List.First_Documentation.Examples_1_Description": {
    "message": "Recherche la première valeur dans la liste {}. Si la liste est vide, retourne -1."
  },
  "List.First_Documentation.Examples_1_Code": {
    "message": "List.First({}, -1)"
  },
  "List.First_Documentation.Examples_1_Result": {
    "message": "-1"
  },
  "List.Intersect_Documentation.Name": {
    "message": "List.Intersect"
  },
  "List.Intersect_Documentation.Description": {
    "message": "Retourne l'intersection des valeurs de la liste trouvées dans l'entrée."
  },
  "List.Intersect_Documentation.LongDescription": {
    "message": "Retourne l'intersection des valeurs de la liste trouvées dans la liste d'entrée <code>lists</code>. Un paramètre facultatif, <code>equationCriteria</code>, peut être spécifié."
  },
  "List.Intersect_Documentation.Category": {
    "message": "List.Set operations"
  },
  "List.Intersect_Documentation.Examples_0_Description": {
    "message": "Recherche l'intersection des listes {1..5}, {2..6}, {3..7}."
  },
  "List.Intersect_Documentation.Examples_0_Code": {
    "message": "List.Intersect({{1..5}, {2..6}, {3..7}})"
  },
  "List.Intersect_Documentation.Examples_0_Result": {
    "message": "{3, 4, 5}"
  },
  "List.IsDistinct_Documentation.Name": {
    "message": "List.IsDistinct"
  },
  "List.IsDistinct_Documentation.Description": {
    "message": "Indique s'il y a des doublons dans la liste."
  },
  "List.IsDistinct_Documentation.LongDescription": {
    "message": "Retourne une valeur logique s'il existe des doublons dans la liste <code>list</code> ; <code>true</code> si la liste est distincte, <code>false</code> s'il y a des valeurs dupliquées. "
  },
  "List.IsDistinct_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.IsDistinct_Documentation.Examples_0_Description": {
    "message": "Détermine si la liste {1, 2, 3} est distincte (c'est-à-dire, sans doublons)."
  },
  "List.IsDistinct_Documentation.Examples_0_Code": {
    "message": "List.IsDistinct({1, 2, 3})"
  },
  "List.IsDistinct_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.IsDistinct_Documentation.Examples_1_Description": {
    "message": "Détermine si la liste {1, 2, 3, 3}est distincte (c'est-à-dire, sans doublons)."
  },
  "List.IsDistinct_Documentation.Examples_1_Code": {
    "message": "List.IsDistinct({1, 2, 3, 3})"
  },
  "List.IsDistinct_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.IsEmpty_Documentation.Name": {
    "message": "List.IsEmpty"
  },
  "List.IsEmpty_Documentation.Description": {
    "message": "Retourne la valeur true si la liste est vide."
  },
  "List.IsEmpty_Documentation.LongDescription": {
    "message": "Retourne <code>true</code> si la liste <code>list</code> ne contient pas de valeurs (longueur 0). Si la liste contient des valeurs (longueur > 0), retourne <code>false</code>."
  },
  "List.IsEmpty_Documentation.Category": {
    "message": "List.Information"
  },
  "List.IsEmpty_Documentation.Examples_0_Description": {
    "message": "Détermine si la liste {} est vide."
  },
  "List.IsEmpty_Documentation.Examples_0_Code": {
    "message": "List.IsEmpty({})"
  },
  "List.IsEmpty_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "List.IsEmpty_Documentation.Examples_1_Description": {
    "message": "Détermine si la liste {1, 2} est vide."
  },
  "List.IsEmpty_Documentation.Examples_1_Code": {
    "message": "List.IsEmpty({1, 2})"
  },
  "List.IsEmpty_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "List.Last_Documentation.Name": {
    "message": "List.Last"
  },
  "List.Last_Documentation.Description": {
    "message": "Retourne la dernière valeur dans la liste ou la valeur par défaut spécifiée si l'objet est vide."
  },
  "List.Last_Documentation.LongDescription": {
    "message": "Retourne le dernier élément dans la liste <code>list</code>, ou la valeur par défaut facultative <code>defaultValue</code>, si la liste est vide.\r\n    Si la liste est vide et une valeur par défaut n'est pas spécifiée, la fonction retourne <code>null</code>."
  },
  "List.Last_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Last_Documentation.Examples_0_Description": {
    "message": "Recherche la dernière valeur dans la liste {1, 2, 3}."
  },
  "List.Last_Documentation.Examples_0_Code": {
    "message": "List.Last({1, 2, 3})"
  },
  "List.Last_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "List.Last_Documentation.Examples_1_Description": {
    "message": "Recherche la dernière valeur dans la liste {} ou -1 si elle est vide."
  },
  "List.Last_Documentation.Examples_1_Code": {
    "message": "List.Last({}, -1)"
  },
  "List.Last_Documentation.Examples_1_Result": {
    "message": "-1"
  },
  "List.LastN_Documentation.Name": {
    "message": "List.LastN"
  },
  "List.LastN_Documentation.Description": {
    "message": "Retourne la dernière valeur dans la liste.  Peut éventuellement spécifier le nombre de valeurs à retourner ou une condition éligible."
  },
  "List.LastN_Documentation.LongDescription": {
    "message": "Retourne le dernier élément de la liste <code>list</code>. Si la liste est vide, une exception est levée.\r\n Cette option utilise un paramètre facultatif, <code>countOrCondition</code>, pour prendre en charge le regroupement de plusieurs éléments ou d'éléments de filtrage. <code>countOrCondition</code> peut être spécifié de trois manières :\r\n <ul>\r\n  <li>Si un nombre est spécifié, autant d'éléments sont retournés. </li>\r\n  <li>Si une condition est spécifiée, tous les éléments qui satisfont initialement la condition sont retournés, démarrant à la fin de la liste. Lorsqu'un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. </li>\r\n  <li>Si le paramètre a la valeur null, le dernier élément dans la liste est retourné.</li>\r\n </ul>"
  },
  "List.LastN_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.LastN_Documentation.Examples_0_Description": {
    "message": "Recherche la dernière valeur dans la liste {3, 4, 5, -1, 7, 8, 2}."
  },
  "List.LastN_Documentation.Examples_0_Code": {
    "message": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)"
  },
  "List.LastN_Documentation.Examples_0_Result": {
    "message": "{2}"
  },
  "List.LastN_Documentation.Examples_1_Description": {
    "message": "Recherche les dernières valeurs dans la liste {3, 4, 5, -1, 7, 8, 2} qui sont supérieures à 0."
  },
  "List.LastN_Documentation.Examples_1_Code": {
    "message": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)"
  },
  "List.LastN_Documentation.Examples_1_Result": {
    "message": "{7, 8, 2}"
  },
  "List.Max_Documentation.Name": {
    "message": "List.Max"
  },
  "List.Max_Documentation.Description": {
    "message": "Retourne la valeur maximale ou la valeur par défaut pour une liste vide."
  },
  "List.Max_Documentation.LongDescription": {
    "message": "Retourne l'élément maximal dans la liste <code>list</code>, ou la valeur par défaut facultative <code>default</code>, si la liste est vide.\r\n    La valeur comparisonCriteria facultative, <code>comparisonCriteria</code>, peut être spécifiée pour déterminer comment comparer les éléments dans la liste. Si ce paramètre a la valeur null, le comparateur par défaut est utilisé."
  },
  "List.Max_Documentation.Category": {
    "message": "List.Ordering"
  },
  "List.Max_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur maximale dans la liste {1, 4, 7, 3, -2, 5}."
  },
  "List.Max_Documentation.Examples_0_Code": {
    "message": "List.Max({1, 4, 7, 3, -2, 5}, 1)"
  },
  "List.Max_Documentation.Examples_0_Result": {
    "message": "7"
  },
  "List.Max_Documentation.Examples_1_Description": {
    "message": "Recherche la valeur maximale dans la liste {} ou retourne -1 si elle est vide. "
  },
  "List.Max_Documentation.Examples_1_Code": {
    "message": "List.Max({}, -1)"
  },
  "List.Max_Documentation.Examples_1_Result": {
    "message": "-1"
  },
  "List.Median_Documentation.Name": {
    "message": "List.Median"
  },
  "List.Median_Documentation.Description": {
    "message": "Retourne la valeur médiane dans la liste."
  },
  "List.Median_Documentation.LongDescription": {
    "message": "Retourne l'élément médian de la liste <code>list</code>. Cette fonction retourne <code>null</code> si la liste ne contient aucune valeur non-<code>null</code>.\r\n    S'il existe un nombre pair d'éléments, la fonction choisit le plus petit des deux éléments médians, à moins que la liste ne\r\n    soit entièrement composée de dates/heures, de durées, de nombres ou d'heures. Dans ce cas, elle retourne la moyenne des deux éléments."
  },
  "List.Median_Documentation.Category": {
    "message": "List.Ordering"
  },
  "List.Median_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur médiane de la liste <code>{5, 3, 1, 7, 9}</code>."
  },
  "List.Median_Documentation.Examples_0_Code": {
    "message": "List.Median({5, 3, 1, 7, 9})"
  },
  "List.Median_Documentation.Examples_0_Result": {
    "message": "5"
  },
  "List.Min_Documentation.Name": {
    "message": "List.Min"
  },
  "List.Min_Documentation.Description": {
    "message": "Retourne la valeur minimale ou la valeur par défaut pour une liste vide."
  },
  "List.Min_Documentation.LongDescription": {
    "message": "Retourne l'élément minimal dans la liste <code>list</code>, ou la valeur par défaut facultative <code>default</code>, si la liste est vide.\r\n    La valeur comparisonCriteria facultative, <code>comparisonCriteria</code>, peut être spécifiée pour déterminer comment comparer les éléments dans la liste. Si ce paramètre a la valeur null, le comparateur par défaut est utilisé."
  },
  "List.Min_Documentation.Category": {
    "message": "List.Ordering"
  },
  "List.Min_Documentation.Examples_0_Description": {
    "message": "Recherche la valeur minimale dans la liste {1, 4, 7, 3, -2, 5}."
  },
  "List.Min_Documentation.Examples_0_Code": {
    "message": "List.Min({1, 4, 7, 3, -2, 5})"
  },
  "List.Min_Documentation.Examples_0_Result": {
    "message": "-2"
  },
  "List.Min_Documentation.Examples_1_Description": {
    "message": "Recherche la valeur minimale dans la liste {} ou retourne -1 si elle est vide. "
  },
  "List.Min_Documentation.Examples_1_Code": {
    "message": "List.Min({}, -1)"
  },
  "List.Min_Documentation.Examples_1_Result": {
    "message": "-1"
  },
  "List.Mode_Documentation.Name": {
    "message": "List.Mode"
  },
  "List.Mode_Documentation.Description": {
    "message": "Retourne la valeur la plus fréquente dans la liste."
  },
  "List.Mode_Documentation.LongDescription": {
    "message": "Retourne l'élément qui apparaît le plus fréquemment dans la liste, <code>list</code>. Si la liste est vide, une exception est levée. Si plusieurs éléments avec la même fréquence maximale apparaissent, le dernier est sélectionné.\r\n    La valeur <code>comparisonCriteria</code> facultative, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.Mode_Documentation.Category": {
    "message": "List.Averages"
  },
  "List.Mode_Documentation.Examples_0_Description": {
    "message": "Recherche l'élément qui apparaît le plus fréquemment dans la liste <code>{\"A\", 1, 2, 3, 3, 4, 5}</code>."
  },
  "List.Mode_Documentation.Examples_0_Code": {
    "message": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})"
  },
  "List.Mode_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "List.Mode_Documentation.Examples_1_Description": {
    "message": "Recherche l'élément qui apparaît le plus fréquemment dans la liste <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>."
  },
  "List.Mode_Documentation.Examples_1_Code": {
    "message": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})"
  },
  "List.Mode_Documentation.Examples_1_Result": {
    "message": "5"
  },
  "List.Modes_Documentation.Name": {
    "message": "List.Modes"
  },
  "List.Modes_Documentation.Description": {
    "message": "Retourne la liste des valeurs les plus fréquentes dans la liste."
  },
  "List.Modes_Documentation.LongDescription": {
    "message": "Retourne l'élément qui apparaît le plus fréquemment dans la liste, <code>list</code>. Si la liste est vide, une exception est levée. Si plusieurs éléments avec la même fréquence maximale apparaissent, le dernier est sélectionné.\r\n    La valeur <code>comparisonCriteria</code> facultative, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.Modes_Documentation.Category": {
    "message": "List.Averages"
  },
  "List.Modes_Documentation.Examples_0_Description": {
    "message": "Recherche les éléments qui apparaît le plus fréquemment dans la liste <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>."
  },
  "List.Modes_Documentation.Examples_0_Code": {
    "message": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})"
  },
  "List.Modes_Documentation.Examples_0_Result": {
    "message": "{3, 5}"
  },
  "List.NonNullCount_Documentation.Name": {
    "message": "List.NonNullCount"
  },
  "List.NonNullCount_Documentation.Description": {
    "message": "Retourne le nombre d'éléments non null dans la liste."
  },
  "List.NonNullCount_Documentation.LongDescription": {
    "message": "Retourne le nombre d'éléments non null dans la liste <code>list</code>."
  },
  "List.NonNullCount_Documentation.Category": {
    "message": "List.Information"
  },
  "List.Positions_Documentation.Name": {
    "message": "List.Positions"
  },
  "List.Positions_Documentation.Description": {
    "message": "Retourne une liste de décalages pour l'entrée."
  },
  "List.Positions_Documentation.LongDescription": {
    "message": "Retourne une liste de décalages pour la liste d'entrée <code>list</code>.\r\n    Quand vous utilisez List.Transform pour changer une liste, la liste des positions peut être utilisée pour fournir à la transformation l'accès à la position."
  },
  "List.Positions_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Positions_Documentation.Examples_0_Description": {
    "message": "Recherche les décalages des valeurs dans la liste {1, 2, 3, 4, null, 5}."
  },
  "List.Positions_Documentation.Examples_0_Code": {
    "message": "List.Positions({1, 2, 3, 4, null, 5})"
  },
  "List.Positions_Documentation.Examples_0_Result": {
    "message": "{0, 1, 2, 3, 4, 5}"
  },
  "List.Product_Documentation.Name": {
    "message": "List.Product"
  },
  "List.Product_Documentation.Description": {
    "message": "Retourne le produit des nombres dans la liste."
  },
  "List.Product_Documentation.LongDescription": {
    "message": "Retourne le produit des nombres non null dans la liste, <code>numbersList</code>. Retourne null s'il n'y a pas de valeur non null dans la liste."
  },
  "List.Product_Documentation.Category": {
    "message": "List.Numerics"
  },
  "List.Product_Documentation.Examples_0_Description": {
    "message": "Recherche le produit des nombres dans la liste <code>{1, 2, 3, 3, 4, 5, 5}</code>."
  },
  "List.Product_Documentation.Examples_0_Code": {
    "message": "List.Product({1, 2, 3, 3, 4, 5, 5})"
  },
  "List.Product_Documentation.Examples_0_Result": {
    "message": "1800"
  },
  "List.Random_Documentation.Name": {
    "message": "List.Random"
  },
  "List.Random_Documentation.Description": {
    "message": "Retourne une liste de nombres aléatoires."
  },
  "List.Random_Documentation.LongDescription": {
    "message": "Retourne une liste de nombres aléatoires entre 0 et 1, en fonction du nombre de valeurs à générer et d'une valeur de départ facultative.\r\n<ul>\r\n   <li><code>count</code> : nombre de valeurs aléatoires à générer.</li>\r\n   <li><code>seed</code> : <i>[Facultatif]</i> valeur numérique utilisée pour amorcer le générateur de nombres aléatoires. Si cette valeur est omise, une liste unique de nombres aléatoires est générée chaque fois que vous appelez la fonction. Si vous spécifiez la valeur de départ avec un nombre, chaque appel à la fonction génère la même liste de nombres aléatoires.</li>\r\n</ul>"
  },
  "List.Random_Documentation.Category": {
    "message": "List.Generators"
  },
  "List.Random_Documentation.Examples_0_Description": {
    "message": "Crée une liste de 3 nombres aléatoires."
  },
  "List.Random_Documentation.Examples_0_Code": {
    "message": "List.Random(3)"
  },
  "List.Random_Documentation.Examples_0_Result": {
    "message": "{0.992332, 0.132334, 0.023592}"
  },
  "List.Random_Documentation.Examples_1_Description": {
    "message": "Crée une liste de 3 nombres aléatoires, en spécifiant la valeur de départ."
  },
  "List.Random_Documentation.Examples_1_Code": {
    "message": "List.Random(3, 2)"
  },
  "List.Random_Documentation.Examples_1_Result": {
    "message": "{0.883002, 0.245344, 0.723212}"
  },
  "List.RemoveFirstN_Documentation.Name": {
    "message": "List.RemoveFirstN"
  },
  "List.RemoveFirstN_Documentation.Description": {
    "message": "Retourne une liste qui ignore le nombre spécifié d'éléments au début de la liste."
  },
  "List.RemoveFirstN_Documentation.LongDescription": {
    "message": "Retourne une liste qui supprime le premier élément de la liste <code>list</code>. Si <code>list</code> est une liste vide, une liste vide est retournée.\r\nCette option utilise un paramètre facultatif, <code>countOrCondition</code>, pour prendre en charge la suppression de plusieurs valeurs telles que répertorié ci-dessous.\r\n <ul>\r\n <li>Si un nombre est spécifié, autant d'éléments sont supprimés. </li>\r\n <li>Si une condition est spécifiée, la liste retournée commence par le premier élément dans <code>list</code> qui remplit le critère. Quand un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. </li>\r\n <li>Si ce paramètre a la valeur null, le comportement par défaut est observé. </li>\r\n </ul>"
  },
  "List.RemoveFirstN_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.RemoveFirstN_Documentation.Examples_0_Description": {
    "message": "Crée une liste à partir de {1, 2, 3, 4, 5} sans les 3 premiers nombres."
  },
  "List.RemoveFirstN_Documentation.Examples_0_Code": {
    "message": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)"
  },
  "List.RemoveFirstN_Documentation.Examples_0_Result": {
    "message": "{4, 5}"
  },
  "List.RemoveFirstN_Documentation.Examples_1_Description": {
    "message": "Crée une liste à partir de {5, 4, 2, 6, 1} qui démarre par un nombre inférieur à 3."
  },
  "List.RemoveFirstN_Documentation.Examples_1_Code": {
    "message": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)"
  },
  "List.RemoveFirstN_Documentation.Examples_1_Result": {
    "message": "{2, 6, 1}"
  },
  "List.RemoveLastN_Documentation.Name": {
    "message": "List.RemoveLastN"
  },
  "List.RemoveLastN_Documentation.Description": {
    "message": "Retourne une liste qui supprime le nombre spécifié d'éléments à la fin de la liste."
  },
  "List.RemoveLastN_Documentation.LongDescription": {
    "message": "Retourne une liste qui supprime les <code>countOrCondition</code> derniers éléments à la fin de la liste <code>list</code>. Si <code>list</code> contient moins de <code>countOrCondition</code> éléments, une liste vide est retournée.\r\n <ul>\r\n <li>Si un nombre est spécifié, autant d'éléments sont supprimés. </li>\r\n <li>Si une condition est spécifiée, la liste retournée se termine par le premier élément à partir du bas dans <code>list</code> qui remplit le critère. Lorsqu'un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. </li>\r\n <li>Si ce paramètre a la valeur Null, un seul élément est supprimé. </li>\r\n </ul>"
  },
  "List.RemoveLastN_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.RemoveLastN_Documentation.Examples_0_Description": {
    "message": "Crée une liste à partir de {1, 2, 3, 4, 5} sans les 3 derniers nombres."
  },
  "List.RemoveLastN_Documentation.Examples_0_Code": {
    "message": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)"
  },
  "List.RemoveLastN_Documentation.Examples_0_Result": {
    "message": "{1, 2}"
  },
  "List.RemoveLastN_Documentation.Examples_1_Description": {
    "message": "Crée une liste à partir de {5, 4, 2, 6, 4} qui se termine par un nombre inférieur à 3."
  },
  "List.RemoveLastN_Documentation.Examples_1_Code": {
    "message": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)"
  },
  "List.RemoveLastN_Documentation.Examples_1_Result": {
    "message": "{5, 4, 2}"
  },
  "List.RemoveNulls_Documentation.Name": {
    "message": "List.RemoveNulls"
  },
  "List.RemoveNulls_Documentation.Description": {
    "message": "Supprime toutes les valeurs « null » de la liste spécifiée."
  },
  "List.RemoveNulls_Documentation.LongDescription": {
    "message": "Supprime toutes les occurrences des valeurs « null » dans <code>list</code>. S'il n'y a pas de valeurs « null » dans la liste, la liste d'origine est retournée."
  },
  "List.RemoveNulls_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.RemoveNulls_Documentation.Examples_0_Description": {
    "message": "Supprime les valeurs « null » de la liste {1, 2, 3, null, 4, 5, null, 6}."
  },
  "List.RemoveNulls_Documentation.Examples_0_Code": {
    "message": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})"
  },
  "List.RemoveNulls_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3, 4, 5, 6}"
  },
  "List.Reverse_Documentation.Name": {
    "message": "List.Reverse"
  },
  "List.Reverse_Documentation.Description": {
    "message": "Inverse l'ordre des valeurs dans la liste."
  },
  "List.Reverse_Documentation.LongDescription": {
    "message": "Retourne une liste avec les valeurs dans liste <code>list</code> dans l'ordre inverse."
  },
  "List.Reverse_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.Reverse_Documentation.Examples_0_Description": {
    "message": "Crée une liste à partir de {1..10} dans l'ordre inverse."
  },
  "List.Reverse_Documentation.Examples_0_Code": {
    "message": "List.Reverse({1..10})"
  },
  "List.Reverse_Documentation.Examples_0_Result": {
    "message": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
  },
  "List.Single_Documentation.Name": {
    "message": "List.Single"
  },
  "List.Single_Documentation.Description": {
    "message": "Retourne un seul élément de liste pour une liste de longueur 1, sinon lève une exception."
  },
  "List.Single_Documentation.LongDescription": {
    "message": "S'il y a un seul élément dans la liste <code>list</code>, retourne cet élément.\r\n    S'il existe plusieurs éléments dans la liste ou si la liste est vide, la fonction lève une exception."
  },
  "List.Single_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Single_Documentation.Examples_0_Description": {
    "message": "Recherche la seule valeur dans la liste {1}."
  },
  "List.Single_Documentation.Examples_0_Code": {
    "message": "List.Single({1})"
  },
  "List.Single_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "List.Single_Documentation.Examples_1_Description": {
    "message": "Recherche la seule valeur dans la liste {1, 2, 3}."
  },
  "List.Single_Documentation.Examples_1_Code": {
    "message": "List.Single({1, 2, 3})"
  },
  "List.Single_Documentation.Examples_1_Result": {
    "message": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
  },
  "List.SingleOrDefault_Documentation.Name": {
    "message": "List.SingleOrDefault"
  },
  "List.SingleOrDefault_Documentation.Description": {
    "message": "Retourne un seul élément de liste pour une liste de longueur 1, et la valeur par défaut pour une liste vide."
  },
  "List.SingleOrDefault_Documentation.LongDescription": {
    "message": "S'il y a un seul élément dans la liste <code>list</code>, retourne cet élément.\r\n    Si la liste est vide, la fonction retourne null sauf si le paramètre facultatif <code>default</code> est spécifié. S'il existe plusieurs éléments dans la liste, la fonction retourne une erreur."
  },
  "List.SingleOrDefault_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.SingleOrDefault_Documentation.Examples_0_Description": {
    "message": "Recherche la seule valeur dans la liste {1}."
  },
  "List.SingleOrDefault_Documentation.Examples_0_Code": {
    "message": "List.SingleOrDefault({1})"
  },
  "List.SingleOrDefault_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "List.SingleOrDefault_Documentation.Examples_1_Description": {
    "message": "Recherche la seule valeur dans la liste {}."
  },
  "List.SingleOrDefault_Documentation.Examples_1_Code": {
    "message": "List.SingleOrDefault({})"
  },
  "List.SingleOrDefault_Documentation.Examples_1_Result": {
    "message": "null"
  },
  "List.SingleOrDefault_Documentation.Examples_2_Description": {
    "message": "Recherche la seule valeur dans la liste {}. Si vide, retourne -1."
  },
  "List.SingleOrDefault_Documentation.Examples_2_Code": {
    "message": "List.SingleOrDefault({}, -1)"
  },
  "List.SingleOrDefault_Documentation.Examples_2_Result": {
    "message": "-1"
  },
  "List.Skip_Documentation.Name": {
    "message": "List.Skip"
  },
  "List.Skip_Documentation.Description": {
    "message": "Retourne une liste qui ignore le nombre spécifié d'éléments au début de la liste."
  },
  "List.Skip_Documentation.LongDescription": {
    "message": "Retourne une liste qui ignore le premier élément de la liste <code>list</code>. Si <code>list</code> est une liste vide, une liste vide est retournée.\r\nCette option utilise un paramètre facultatif, <code>countOrCondition</code>, pour prendre en charge le saut de plusieurs valeurs telles que répertorié ci-dessous.\r\n <ul>\r\n <li>Si un nombre est spécifié, autant d'éléments sont ignorés. </li>\r\n <li>Si une condition est spécifiée, la liste retournée commence par le premier élément dans <code>list</code> qui remplit le critère. Quand un élément ne remplit pas la condition, aucun autre élément n'est pris en compte. </li>\r\n <li>Si ce paramètre a la valeur null, le comportement par défaut est observé. </li>\r\n </ul>"
  },
  "List.Skip_Documentation.Category": {
    "message": "List.Selection"
  },
  "List.Skip_Documentation.Examples_0_Description": {
    "message": "Crée une liste à partir de {1, 2, 3, 4, 5} sans les 3 premiers nombres."
  },
  "List.Skip_Documentation.Examples_0_Code": {
    "message": "List.Skip({1, 2, 3, 4, 5}, 3)"
  },
  "List.Skip_Documentation.Examples_0_Result": {
    "message": "{4, 5}"
  },
  "List.Skip_Documentation.Examples_1_Description": {
    "message": "Crée une liste à partir de {5, 4, 2, 6, 1} qui démarre par un nombre inférieur à 3."
  },
  "List.Skip_Documentation.Examples_1_Code": {
    "message": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)"
  },
  "List.Skip_Documentation.Examples_1_Result": {
    "message": "{2, 6, 1}"
  },
  "List.Sort_Documentation.Name": {
    "message": "List.Sort"
  },
  "List.Sort_Documentation.Description": {
    "message": "Trie une liste de données selon les critères spécifiés."
  },
  "List.Sort_Documentation.LongDescription": {
    "message": "Trie une liste de données, <code>list</code>, selon les critères facultatifs spécifiés.\r\n    Un paramètre facultatif, <code>comparisonCriteria</code>, peut être spécifié comme critère de comparaison. Les valeurs suivantes peuvent être utilisées : \r\n    <ul>\r\n    <li> Pour contrôler l'ordre, le critère de comparaison peut être une valeur d'énumération d'ordre. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> Pour calculer une clé utilisée pour le tri, une fonction d'1 argument peut être utilisée. </li>\r\n    <li> Pour sélectionner une clé et contrôler l'ordre, le critère de comparaison peut être une liste contenant la clé et l'ordre (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> Pour contrôler complètement la comparaison, une fonction de 2 arguments peut être utilisée. Cette fonction recevra deux éléments de la liste (deux éléments quelconques, dans n'importe quel ordre). La fonction doit renvoyer l'une des valeurs suivantes : \r\n        <ul>\r\n            <li> <code>-1</code> : Le premier élément est inférieur au deuxième élément.</li>\r\n            <li> <code>0</code> : Les éléments sont égaux.</li>\r\n            <li> <code>1</code> : Le premier élément est supérieur au deuxième élément.</li>\r\n        </ul>\r\n        Value.Compare est une méthode qui peut être utilisé pour déléguer cette logique. </li>\r\n    </ul>"
  },
  "List.Sort_Documentation.Category": {
    "message": "List.Ordering"
  },
  "List.Sort_Documentation.Examples_0_Description": {
    "message": "Trie la liste {2, 3, 1}."
  },
  "List.Sort_Documentation.Examples_0_Code": {
    "message": "List.Sort({2, 3, 1})"
  },
  "List.Sort_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3}"
  },
  "List.Sort_Documentation.Examples_1_Description": {
    "message": "Trie la liste {2, 3, 1} dans l'ordre décroissant."
  },
  "List.Sort_Documentation.Examples_1_Code": {
    "message": "List.Sort({2, 3, 1}, Order.Descending)"
  },
  "List.Sort_Documentation.Examples_1_Result": {
    "message": "{3, 2, 1}"
  },
  "List.Sort_Documentation.Examples_2_Description": {
    "message": "Trie la liste {2, 3, 1} dans l'ordre décroissant en utilisant la méthode Value.Compare."
  },
  "List.Sort_Documentation.Examples_2_Code": {
    "message": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))"
  },
  "List.Sort_Documentation.Examples_2_Result": {
    "message": "{3, 2, 1}"
  },
  "List.StandardDeviation_Documentation.Name": {
    "message": "List.StandardDeviation"
  },
  "List.StandardDeviation_Documentation.Description": {
    "message": "Retourne un exemple en fonction de l'estimation de l'écart type."
  },
  "List.StandardDeviation_Documentation.LongDescription": {
    "message": "Retourne une estimation de l'écart type des valeurs de la liste, <code>numbersList</code>, sur la base d'un échantillon.\r\n    Si <code>numbersList</code> est une liste de nombres, un nombre est retourné.\r\n    Une exception est levée en cas de liste vide ou d'une liste d'éléments qui n'est pas de type <code>number</code>."
  },
  "List.StandardDeviation_Documentation.Category": {
    "message": "List.Averages"
  },
  "List.StandardDeviation_Documentation.Examples_0_Description": {
    "message": "Recherche l'écart type des numéros 1 à 5."
  },
  "List.StandardDeviation_Documentation.Examples_0_Code": {
    "message": "List.StandardDeviation({1..5})"
  },
  "List.StandardDeviation_Documentation.Examples_0_Result": {
    "message": "1.5811388300841898"
  },
  "List.Sum_Documentation.Name": {
    "message": "List.Sum"
  },
  "List.Sum_Documentation.Description": {
    "message": "Retourne la somme des éléments dans la liste."
  },
  "List.Sum_Documentation.LongDescription": {
    "message": "Retourne la somme des valeurs non null dans la liste, <code>list</code>.  Retourne null s'il n'y a pas de valeur non null dans la liste."
  },
  "List.Sum_Documentation.Category": {
    "message": "List.Addition"
  },
  "List.Sum_Documentation.Examples_0_Description": {
    "message": "Recherche la somme des nombres dans la liste <code>{1, 2, 3}</code>."
  },
  "List.Sum_Documentation.Examples_0_Code": {
    "message": "List.Sum({1, 2, 3})"
  },
  "List.Sum_Documentation.Examples_0_Result": {
    "message": "6"
  },
  "List.Union_Documentation.Name": {
    "message": "List.Union"
  },
  "List.Union_Documentation.Description": {
    "message": "Retourne l'union des valeurs de liste trouvées dans l'entrée."
  },
  "List.Union_Documentation.LongDescription": {
    "message": "Prend une liste de listes <code>lists</code>, unit les éléments en listes individuelles et les retourne dans la liste de sortie. Par conséquent, la liste retournée contient tous les éléments de toutes les listes d'entrée.\r\n    Cette opération utilise la sémantique multiensemble, ainsi les doublons sont mis en correspondance dans le cadre de l'union.\r\n    La valeur du critère d'équation facultatif, <code>equationCriteria</code>, peut être spécifiée pour contrôler le test d'égalité. "
  },
  "List.Union_Documentation.Category": {
    "message": "List.Set operations"
  },
  "List.Union_Documentation.Examples_0_Description": {
    "message": "Crée une union de la liste {1..5}, {2..6}, {3..7}."
  },
  "List.Union_Documentation.Examples_0_Code": {
    "message": "List.Union({{1..5}, {2..6}, {3..7}})"
  },
  "List.Union_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3, 4, 5, 6, 7}"
  },
  "List.Zip_Documentation.Name": {
    "message": "List.Zip"
  },
  "List.Zip_Documentation.Description": {
    "message": "Retourne une liste de listes en combinant des éléments à la même position dans plusieurs listes."
  },
  "List.Zip_Documentation.LongDescription": {
    "message": "Prend une liste de listes, <code>lists</code>, et retourne une liste de listes en combinant des éléments à la même position."
  },
  "List.Zip_Documentation.Category": {
    "message": "List.Transformation functions"
  },
  "List.Zip_Documentation.Examples_0_Description": {
    "message": "Compresse les deux listes simples {1, 2} et {3, 4}."
  },
  "List.Zip_Documentation.Examples_0_Code": {
    "message": "List.Zip({{1, 2}, {3, 4}})"
  },
  "List.Zip_Documentation.Examples_0_Result": {
    "message": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
  },
  "List.Zip_Documentation.Examples_1_Description": {
    "message": "Compresse les deux listes simples de différentes longueurs {1, 2} et {3}."
  },
  "List.Zip_Documentation.Examples_1_Code": {
    "message": "List.Zip({{1, 2}, {3}})"
  },
  "List.Zip_Documentation.Examples_1_Result": {
    "message": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
  },
  "Logical.From_Documentation.Name": {
    "message": "Logical.From"
  },
  "Logical.From_Documentation.Description": {
    "message": "Crée une logique à partir de la valeur spécifiée."
  },
  "Logical.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>logical</code> du <code>value</code> spécifié. Si le <code>value</code> spécifié est <code>null</code>, <code>Logical.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>logical</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>logical</code> : \r\n      <ul>\r\n        <li><code>text</code> : valeur <code>logical</code> à partir de la valeur de texte, soit <code>\"true\"</code>, soit <code>\"false\"</code>. Référez-vous à <code>Logical.FromText</code> pour plus de détails.</li>\r\n        <li><code>number</code> : <code>false</code> si <code>value</code> est égal à <code>0</code>, sinon <code>true</code>.</li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "Logical.From_Documentation.Category": {
    "message": "Logical"
  },
  "Logical.From_Documentation.Examples_0_Description": {
    "message": "Convertit <code>2</code> en une valeur <code>logical</code>."
  },
  "Logical.From_Documentation.Examples_0_Code": {
    "message": "Logical.From(2)"
  },
  "Logical.From_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Logical.FromText_Documentation.Name": {
    "message": "Logical.FromText"
  },
  "Logical.FromText_Documentation.Description": {
    "message": "Crée une valeur logique à partir des valeurs de texte « true » et « false »."
  },
  "Logical.FromText_Documentation.LongDescription": {
    "message": "Crée une valeur logique à partir de la valeur de texte <code>text</code>, soit « true », soit « false ». Si <code>text</code> contient une chaîne différente, une exception est levée. La valeur de texte <code>text</code> respecte la casse."
  },
  "Logical.FromText_Documentation.Category": {
    "message": "Logical"
  },
  "Logical.FromText_Documentation.Examples_0_Description": {
    "message": "Crée une valeur logique à partir de la chaîne de texte « true »."
  },
  "Logical.FromText_Documentation.Examples_0_Code": {
    "message": "Logical.FromText(\"true\")"
  },
  "Logical.FromText_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Logical.FromText_Documentation.Examples_1_Description": {
    "message": "Crée une valeur logique à partir de la chaîne de texte « a »."
  },
  "Logical.FromText_Documentation.Examples_1_Code": {
    "message": "Logical.FromText(\"a\")"
  },
  "Logical.FromText_Documentation.Examples_1_Result": {
    "message": "[Expression.Error] Could not convert to a logical."
  },
  "Logical.ToText_Documentation.Name": {
    "message": "Logical.ToText"
  },
  "Logical.ToText_Documentation.Description": {
    "message": "Retourne le texte « true » ou « false » en fonction d'une valeur logique."
  },
  "Logical.ToText_Documentation.LongDescription": {
    "message": "Crée une valeur de texte à partir de la valeur logique <code>logicalValue</code>, soit <code>true</code>, soit <code>false</code>. Si <code>logicalValue</code> n'est pas une valeur logique, une exception est levée."
  },
  "Logical.ToText_Documentation.Category": {
    "message": "Logical"
  },
  "Logical.ToText_Documentation.Examples_0_Description": {
    "message": "Crée une valeur de texte à partir du <code>true</code> logique."
  },
  "Logical.ToText_Documentation.Examples_0_Code": {
    "message": "Logical.ToText(true)"
  },
  "Logical.ToText_Documentation.Examples_0_Result": {
    "message": "\"true\""
  },
  "Number.Abs_Documentation.Name": {
    "message": "Number.Abs"
  },
  "Number.Abs_Documentation.Description": {
    "message": "Retourne la valeur absolue du nombre."
  },
  "Number.Abs_Documentation.LongDescription": {
    "message": "Retourne la valeur absolue de <code>number</code>. Si <code>number</code> a la valeur null, <code>Number.Abs</code> retourne null.\r\n    <ul>\r\n        <li><code>number</code> : <code>number</code> dont la valeur absolue doit être calculée.</li>\r\n      </ul>"
  },
  "Number.Abs_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Abs_Documentation.Examples_0_Description": {
    "message": "Valeur absolue de -3."
  },
  "Number.Abs_Documentation.Examples_0_Code": {
    "message": "Number.Abs(-3)"
  },
  "Number.Abs_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "Number.Acos_Documentation.Name": {
    "message": "Number.Acos"
  },
  "Number.Acos_Documentation.Description": {
    "message": "Retourne l'arc cosinus du nombre."
  },
  "Number.Acos_Documentation.LongDescription": {
    "message": "Retourne l'arc cosinus de <code>number</code>."
  },
  "Number.Acos_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.Asin_Documentation.Name": {
    "message": "Number.Asin"
  },
  "Number.Asin_Documentation.Description": {
    "message": "Retourne l'arc sinus du nombre."
  },
  "Number.Asin_Documentation.LongDescription": {
    "message": "Retourne l'arc sinus de <code>number</code>."
  },
  "Number.Asin_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.Atan_Documentation.Name": {
    "message": "Number.Atan"
  },
  "Number.Atan_Documentation.Description": {
    "message": "Retourne l'arc tangente du nombre."
  },
  "Number.Atan_Documentation.LongDescription": {
    "message": "Retourne l'arc tangente de <code>number</code>."
  },
  "Number.Atan_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.BitwiseNot_Documentation.Name": {
    "message": "Number.BitwiseNot"
  },
  "Number.BitwiseNot_Documentation.Description": {
    "message": "Retourne un octet où chaque bit est l'inverse de l'entrée."
  },
  "Number.BitwiseNot_Documentation.LongDescription": {
    "message": "Retourne le résultat d'une opération au niveau du bit « Not » sur <code>number</code>."
  },
  "Number.BitwiseNot_Documentation.Category": {
    "message": "Number.Bytes"
  },
  "Number.Cos_Documentation.Name": {
    "message": "Number.Cos"
  },
  "Number.Cos_Documentation.Description": {
    "message": "Retourne le cosinus du nombre."
  },
  "Number.Cos_Documentation.LongDescription": {
    "message": "Retourne le cosinus de <code>number</code>."
  },
  "Number.Cos_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.Cos_Documentation.Examples_0_Description": {
    "message": "Recherche le cosinus de l'angle 0."
  },
  "Number.Cos_Documentation.Examples_0_Code": {
    "message": "Number.Cos(0)"
  },
  "Number.Cos_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Number.Cosh_Documentation.Name": {
    "message": "Number.Cosh"
  },
  "Number.Cosh_Documentation.Description": {
    "message": "Retourne le cosinus hyperbolique du nombre."
  },
  "Number.Cosh_Documentation.LongDescription": {
    "message": "Retourne le cosinus hyperbolique de <code>number</code>."
  },
  "Number.Cosh_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.Exp_Documentation.Name": {
    "message": "Number.Exp"
  },
  "Number.Exp_Documentation.Description": {
    "message": "Élève e à la puissance spécifiée."
  },
  "Number.Exp_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'élévation de e à la puissance <code>number</code> (fonction exponentielle).\r\n      <ul>\r\n        <li><code>number</code> : <code>number</code> dont la fonction exponentielle doit être calculée. Si <code>number</code> a la valeur null, <code>Number.Exp</code> retourne null. </li>\r\n      </ul>"
  },
  "Number.Exp_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Exp_Documentation.Examples_0_Description": {
    "message": "Élève e à la puissance 3."
  },
  "Number.Exp_Documentation.Examples_0_Code": {
    "message": "Number.Exp(3)"
  },
  "Number.Exp_Documentation.Examples_0_Result": {
    "message": "20.085536923187668"
  },
  "Number.Factorial_Documentation.Name": {
    "message": "Number.Factorial"
  },
  "Number.Factorial_Documentation.Description": {
    "message": "Retourne la factorielle du nombre."
  },
  "Number.Factorial_Documentation.LongDescription": {
    "message": "Retourne la factorielle du nombre <code>number</code>."
  },
  "Number.Factorial_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Factorial_Documentation.Examples_0_Description": {
    "message": "Recherche la factorielle de 10."
  },
  "Number.Factorial_Documentation.Examples_0_Code": {
    "message": "Number.Factorial(10)"
  },
  "Number.Factorial_Documentation.Examples_0_Result": {
    "message": "3628800"
  },
  "Number.From_Documentation.Name": {
    "message": "Number.From"
  },
  "Number.From_Documentation.Description": {
    "message": "Crée un nombre à partir de la valeur spécifiée."
  },
  "Number.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>number</code> du <code>value</code> spécifié. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\").\r\nSi le <code>value</code> spécifié est <code>null</code>, <code>Number.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>number</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>number</code> :\r\n      <ul>\r\n        <li><code>text</code> : valeur <code>number</code> depuis la représentation de texte. Les formats de texte courants sont (\"15\", \"3,423.10\", \"5.0E-10\"). Référez-vous à <code>Number.FromText</code> pour plus de détails.</li>\r\n        <li><code>logical</code> : 1 pour <code>true</code>, 0 pour <code>false</code>.</li>\r\n        <li><code>datetime</code> : nombre à virgule flottante double précision qui contient une date OLE Automation équivalente.</li>\r\n        <li><code>datetimezone</code> : nombre à virgule flottante double précision qui contient une date OLE Automation équivalente à la date et à l'heure locale de <code>value</code>.</li>\r\n        <li><code>date</code> : nombre à virgule flottante double précision qui contient une date OLE Automation équivalente.</li>\r\n        <li><code>time</code> : exprimé en fractions de jours.</li>\r\n        <li><code>duration</code> : exprimé en fractions de jours et en jours complets.</li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "Number.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Number.From_Documentation.Examples_0_Description": {
    "message": "Obtient la valeur <code>number</code> de <code>\"4\"</code>."
  },
  "Number.From_Documentation.Examples_0_Code": {
    "message": "Number.From(\"4\")"
  },
  "Number.From_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Number.From_Documentation.Examples_1_Description": {
    "message": "Obtient la valeur <code>number</code> de <code>#datetime(2020, 3, 20, 6, 0, 0)</code>."
  },
  "Number.From_Documentation.Examples_1_Code": {
    "message": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))"
  },
  "Number.From_Documentation.Examples_1_Result": {
    "message": "43910.25"
  },
  "Number.From_Documentation.Examples_2_Description": {
    "message": "Obtenez la valeur <code>number</code> de <code>\"12.3%\"</code>."
  },
  "Number.From_Documentation.Examples_2_Code": {
    "message": "Number.From(\"12.3%\")"
  },
  "Number.From_Documentation.Examples_2_Result": {
    "message": "0.123"
  },
  "Number.FromText_Documentation.Name": {
    "message": "Number.FromText"
  },
  "Number.FromText_Documentation.Description": {
    "message": "Crée des numéros à partir des formats de texte communs (« 15 », « 3,423.10 », « 5.0E-10 »)."
  },
  "Number.FromText_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>number</code> à partir de la valeur de texte <code>text</code> spécifiée.\r\n <ul>\r\n  <li><code>text</code> : représentation texte d’une valeur de nombre. La représentation doit être dans un format numérique courant, tel que « 15 », « 3,423.10 » ou « 5.0E-10 ».</li>\r\n  <li><code>culture</code> : une culture facultative qui contrôle la façon dont <code>text</code> est interprété (par exemple, \"fr-fr\").</li>\r\n </ul>"
  },
  "Number.FromText_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Number.FromText_Documentation.Examples_0_Description": {
    "message": "Obtient la valeur de nombre de <code>\"4\"</code>."
  },
  "Number.FromText_Documentation.Examples_0_Code": {
    "message": "Number.FromText(\"4\")"
  },
  "Number.FromText_Documentation.Examples_0_Result": {
    "message": "4"
  },
  "Number.FromText_Documentation.Examples_1_Description": {
    "message": "Obtient la valeur de nombre de <code>\"5.0e-10\"</code>."
  },
  "Number.FromText_Documentation.Examples_1_Code": {
    "message": "Number.FromText(\"5.0e-10\")"
  },
  "Number.FromText_Documentation.Examples_1_Result": {
    "message": "5E-10"
  },
  "Number.IsEven_Documentation.Name": {
    "message": "Number.IsEven"
  },
  "Number.IsEven_Documentation.Description": {
    "message": "Indique si la valeur est paire."
  },
  "Number.IsEven_Documentation.LongDescription": {
    "message": "Indique si la valeur <code>number</code> est paire en retournant <code>true</code> si elle est paire, sinon <code>false</code>."
  },
  "Number.IsEven_Documentation.Category": {
    "message": "Number.Information"
  },
  "Number.IsEven_Documentation.Examples_0_Description": {
    "message": "Vérifie si 625 est un nombre pair."
  },
  "Number.IsEven_Documentation.Examples_0_Code": {
    "message": "Number.IsEven(625)"
  },
  "Number.IsEven_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "Number.IsEven_Documentation.Examples_1_Description": {
    "message": "Vérifie si 82 est un nombre pair."
  },
  "Number.IsEven_Documentation.Examples_1_Code": {
    "message": "Number.IsEven(82)"
  },
  "Number.IsEven_Documentation.Examples_1_Result": {
    "message": "true"
  },
  "Number.IsNaN_Documentation.Name": {
    "message": "Number.IsNaN"
  },
  "Number.IsNaN_Documentation.Description": {
    "message": "Indique si la valeur est NaN (n'est pas un nombre)."
  },
  "Number.IsNaN_Documentation.LongDescription": {
    "message": "Indique si la valeur est NaN (n'est pas un nombre). Retourne <code>true</code> si <code>number</code> est équivalent à <code>Number.IsNaN</code>, sinon <code>false</code>."
  },
  "Number.IsNaN_Documentation.Category": {
    "message": "Number.Information"
  },
  "Number.IsNaN_Documentation.Examples_0_Description": {
    "message": "Vérifie si 0 divisé par 0 est NaN."
  },
  "Number.IsNaN_Documentation.Examples_0_Code": {
    "message": "Number.IsNaN(0/0)"
  },
  "Number.IsNaN_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Number.IsNaN_Documentation.Examples_1_Description": {
    "message": "Vérifie si 1 divisé par 0 est NaN."
  },
  "Number.IsNaN_Documentation.Examples_1_Code": {
    "message": "Number.IsNaN(1/0)"
  },
  "Number.IsNaN_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Number.IsOdd_Documentation.Name": {
    "message": "Number.IsOdd"
  },
  "Number.IsOdd_Documentation.Description": {
    "message": "Indique si la valeur est impaire."
  },
  "Number.IsOdd_Documentation.LongDescription": {
    "message": "Indique si la valeur est impaire. Retourne <code>true</code> si <code>number</code> est un nombre impair, sinon <code>false</code>."
  },
  "Number.IsOdd_Documentation.Category": {
    "message": "Number.Information"
  },
  "Number.IsOdd_Documentation.Examples_0_Description": {
    "message": "Vérifie si 625 est un nombre impair."
  },
  "Number.IsOdd_Documentation.Examples_0_Code": {
    "message": "Number.IsOdd(625)"
  },
  "Number.IsOdd_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Number.IsOdd_Documentation.Examples_1_Description": {
    "message": "Vérifie si 82 est un nombre impair."
  },
  "Number.IsOdd_Documentation.Examples_1_Code": {
    "message": "Number.IsOdd(82)"
  },
  "Number.IsOdd_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Number.Ln_Documentation.Name": {
    "message": "Number.Ln"
  },
  "Number.Ln_Documentation.Description": {
    "message": "Retourne le logarithme népérien du nombre."
  },
  "Number.Ln_Documentation.LongDescription": {
    "message": "Retourne le logarithme népérien d'un nombre, <code>number</code>. Si <code>number</code> a la valeur null, <code>Number.Ln</code> retourne null."
  },
  "Number.Ln_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Ln_Documentation.Examples_0_Description": {
    "message": "Obtient le logarithme népérien de 15."
  },
  "Number.Ln_Documentation.Examples_0_Code": {
    "message": "Number.Ln(15)"
  },
  "Number.Ln_Documentation.Examples_0_Result": {
    "message": "2.70805020110221"
  },
  "Number.Log_Documentation.Name": {
    "message": "Number.Log"
  },
  "Number.Log_Documentation.Description": {
    "message": "Retourne le logarithme du nombre selon la base que vous spécifiez (par défaut, e)."
  },
  "Number.Log_Documentation.LongDescription": {
    "message": "Retourne le logarithme d'un nombre, <code>number</code>, selon la base <code>base</code> spécifiée. Si <code>base</code> n'est pas spécifié, la valeur par défaut est Number.E.\r\n    Si <code>number</code> a la valeur Null, <code>Number.Log</code> retourne Null."
  },
  "Number.Log_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Log_Documentation.Examples_0_Description": {
    "message": "Obtient le logarithme de base 10 de 2."
  },
  "Number.Log_Documentation.Examples_0_Code": {
    "message": "Number.Log(2, 10)"
  },
  "Number.Log_Documentation.Examples_0_Result": {
    "message": "0.3010299956639812"
  },
  "Number.Log_Documentation.Examples_1_Description": {
    "message": "Obtient le logarithme de base e de 2."
  },
  "Number.Log_Documentation.Examples_1_Code": {
    "message": "Number.Log(2)"
  },
  "Number.Log_Documentation.Examples_1_Result": {
    "message": "0.69314718055994529"
  },
  "Number.Log10_Documentation.Name": {
    "message": "Number.Log10"
  },
  "Number.Log10_Documentation.Description": {
    "message": "Retourne le logarithme de base 10 du nombre."
  },
  "Number.Log10_Documentation.LongDescription": {
    "message": "Retourne le logarithme de base 10 d'un nombre, <code>number</code>. Si <code>number</code> a la valeur Null, <code>Number.Log10</code> retourne Null."
  },
  "Number.Log10_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Log10_Documentation.Examples_0_Description": {
    "message": "Obtient le logarithme de base 10 de 2."
  },
  "Number.Log10_Documentation.Examples_0_Code": {
    "message": "Number.Log10(2)"
  },
  "Number.Log10_Documentation.Examples_0_Result": {
    "message": "0.3010299956639812"
  },
  "Number.Round_Documentation.Name": {
    "message": "Number.Round"
  },
  "Number.Round_Documentation.Description": {
    "message": "Retourne le nombre arrondi. Le nombre de chiffres et le mode d'arrondi peut être spécifié."
  },
  "Number.Round_Documentation.LongDescription": {
    "message": "Retourne le résultat de l’arrondi <code>number</code> au nombre le plus proche. Si <code>number</code> a la valeur null, <code>Number.Round</code> retourne null. <br>\r\n      <br>\r\n Par défaut, <code>number</code> est arrondi à l’entier le plus proche, et les liens sont rompus en arrondissant au nombre pair le plus proche (à l’aide de <code>RoundingMode.ToEven</code>, également appelé \"arrondi bancaire\"). <br>\r\n      <br>\r\n      Toutefois, ces valeurs par défaut peuvent être remplacées par les paramètres facultatifs suivants. \r\n      <ul>\r\n        <li><code>digits</code>Causes<code>number</code>: entraîne l’arrondissement au nombre spécifié de chiffres décimaux. </li>\r\n        <li><code>roundingMode</code>: remplace le comportement de liaison par défaut lorsque <code>number</code> est au niveau du milieu entre deux valeurs arrondies potentielles\r\n      (référez-vous à<code>RoundingMode.Type</code> pour connaître les valeurs possibles). </li>\r\n      </ul>"
  },
  "Number.Round_Documentation.Category": {
    "message": "Number.Rounding"
  },
  "Number.Round_Documentation.Examples_0_Description": {
    "message": "Arrondit 1,234 à l'entier le plus proche."
  },
  "Number.Round_Documentation.Examples_0_Code": {
    "message": "Number.Round(1.234)"
  },
  "Number.Round_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Number.Round_Documentation.Examples_1_Description": {
    "message": "Arrondit 1,56 à l'entier le plus proche."
  },
  "Number.Round_Documentation.Examples_1_Code": {
    "message": "Number.Round(1.56)"
  },
  "Number.Round_Documentation.Examples_1_Result": {
    "message": "2"
  },
  "Number.Round_Documentation.Examples_2_Description": {
    "message": "Arrondit 1,2345 à deux décimales."
  },
  "Number.Round_Documentation.Examples_2_Code": {
    "message": "Number.Round(1.2345, 2)"
  },
  "Number.Round_Documentation.Examples_2_Result": {
    "message": "1.23"
  },
  "Number.Round_Documentation.Examples_3_Description": {
    "message": "Arrondit 1,2345 à trois décimales (arrondi vers le chiffre supérieur)."
  },
  "Number.Round_Documentation.Examples_3_Code": {
    "message": "Number.Round(1.2345, 3, RoundingMode.Up)"
  },
  "Number.Round_Documentation.Examples_3_Result": {
    "message": "1.235"
  },
  "Number.Round_Documentation.Examples_4_Description": {
    "message": "Arrondit 1,2345 à trois décimales (arrondi vers le chiffre inférieur)."
  },
  "Number.Round_Documentation.Examples_4_Code": {
    "message": "Number.Round(1.2345, 3, RoundingMode.Down)"
  },
  "Number.Round_Documentation.Examples_4_Result": {
    "message": "1.234"
  },
  "Number.RoundAwayFromZero_Documentation.Name": {
    "message": "Number.RoundAwayFromZero"
  },
  "Number.RoundAwayFromZero_Documentation.Description": {
    "message": "Retourne le résultat de l'arrondi supérieur pour les nombres positifs et de l'arrondi inférieur pour les nombres négatifs. Le nombre de chiffres peut être spécifié."
  },
  "Number.RoundAwayFromZero_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'arrondi de <code>number</code> en fonction du signe du nombre. Cette fonction arrondit les nombres positifs au chiffre supérieur et les nombres négatifs au chiffre inférieur.\r\n     Si <code>digits</code> est spécifié, <code>number</code> est arrondi à <code>digits</code> chiffres décimaux.\r\n  "
  },
  "Number.RoundAwayFromZero_Documentation.Category": {
    "message": "Number.Rounding"
  },
  "Number.RoundAwayFromZero_Documentation.Examples_0_Description": {
    "message": "Arrondit le nombre -1,2 à l'opposé de zéro."
  },
  "Number.RoundAwayFromZero_Documentation.Examples_0_Code": {
    "message": "Number.RoundAwayFromZero(-1.2)"
  },
  "Number.RoundAwayFromZero_Documentation.Examples_0_Result": {
    "message": "-2"
  },
  "Number.RoundAwayFromZero_Documentation.Examples_1_Description": {
    "message": "Arrondit le nombre 1,2 à l'opposé de zéro."
  },
  "Number.RoundAwayFromZero_Documentation.Examples_1_Code": {
    "message": "Number.RoundAwayFromZero(1.2)"
  },
  "Number.RoundAwayFromZero_Documentation.Examples_1_Result": {
    "message": "2"
  },
  "Number.RoundAwayFromZero_Documentation.Examples_2_Description": {
    "message": "Arrondit le nombre -1,234 à deux décimales en s'éloignant de zéro."
  },
  "Number.RoundAwayFromZero_Documentation.Examples_2_Code": {
    "message": "Number.RoundAwayFromZero(-1.234, 2)"
  },
  "Number.RoundAwayFromZero_Documentation.Examples_2_Result": {
    "message": "-1.24"
  },
  "Number.RoundDown_Documentation.Name": {
    "message": "Number.RoundDown"
  },
  "Number.RoundDown_Documentation.Description": {
    "message": "Retourne le nombre supérieur précédent. Le nombre de chiffres peut être spécifié."
  },
  "Number.RoundDown_Documentation.LongDescription": {
    "message": "Renvoie le résultat de l'arrondi<code>number</code> au nombre entier précédent le plus élevé. Si <code>number</code> est null, cette fonction renvoie null. \r\n\r\n    Si <code>digits</code> est fourni, <code>number</code> est arrondi au nombre de chiffres décimaux spécifié.\r\n    "
  },
  "Number.RoundDown_Documentation.Category": {
    "message": "Number.Rounding"
  },
  "Number.RoundDown_Documentation.Examples_0_Description": {
    "message": "Arrondit au chiffre inférieur 1,234 à un entier."
  },
  "Number.RoundDown_Documentation.Examples_0_Code": {
    "message": "Number.RoundDown(1.234)"
  },
  "Number.RoundDown_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Number.RoundDown_Documentation.Examples_1_Description": {
    "message": "Arrondit au chiffre inférieur 1,999 à un entier."
  },
  "Number.RoundDown_Documentation.Examples_1_Code": {
    "message": "Number.RoundDown(1.999)"
  },
  "Number.RoundDown_Documentation.Examples_1_Result": {
    "message": "1"
  },
  "Number.RoundDown_Documentation.Examples_2_Description": {
    "message": "Arrondit 1,999 au nombre inférieur à deux décimales."
  },
  "Number.RoundDown_Documentation.Examples_2_Code": {
    "message": "Number.RoundDown(1.999, 2)"
  },
  "Number.RoundDown_Documentation.Examples_2_Result": {
    "message": "1.99"
  },
  "Number.RoundTowardZero_Documentation.Name": {
    "message": "Number.RoundTowardZero"
  },
  "Number.RoundTowardZero_Documentation.Description": {
    "message": "Retourne le résultat de l'arrondi au chiffre inférieur pour les nombres positifs et de l'arrondi au chiffre supérieur pour les nombres négatifs. Le nombre de chiffres peut être spécifié."
  },
  "Number.RoundTowardZero_Documentation.LongDescription": {
    "message": "Retourne le résultat de l'arrondi de <code>number</code> en fonction du signe du nombre. Cette fonction arrondit les nombres positifs au chiffre inférieur et les nombres négatifs au chiffre supérieur.\r\n     Si <code>digits</code> est spécifié, <code>number</code> est arrondi à <code>digits</code> chiffres décimaux.\r\n  "
  },
  "Number.RoundTowardZero_Documentation.Category": {
    "message": "Number.Rounding"
  },
  "Number.RoundTowardZero_Documentation.Examples_0_Description": {
    "message": "Arrondit le nombre -1,2 vers zéro."
  },
  "Number.RoundTowardZero_Documentation.Examples_0_Code": {
    "message": "Number.RoundTowardZero(-1.2)"
  },
  "Number.RoundTowardZero_Documentation.Examples_0_Result": {
    "message": "-1"
  },
  "Number.RoundTowardZero_Documentation.Examples_1_Description": {
    "message": "Arrondit le nombre 1,2 vers zéro."
  },
  "Number.RoundTowardZero_Documentation.Examples_1_Code": {
    "message": "Number.RoundTowardZero(1.2)"
  },
  "Number.RoundTowardZero_Documentation.Examples_1_Result": {
    "message": "1"
  },
  "Number.RoundTowardZero_Documentation.Examples_2_Description": {
    "message": "Arrondit le nombre -1,234 à deux décimales vers zéro."
  },
  "Number.RoundTowardZero_Documentation.Examples_2_Code": {
    "message": "Number.RoundTowardZero(-1.234, 2)"
  },
  "Number.RoundTowardZero_Documentation.Examples_2_Result": {
    "message": "-1.23"
  },
  "Number.RoundUp_Documentation.Name": {
    "message": "Number.RoundUp"
  },
  "Number.RoundUp_Documentation.Description": {
    "message": "Retourne le nombre supérieur suivant. Le nombre de chiffres peut être spécifié."
  },
  "Number.RoundUp_Documentation.LongDescription": {
    "message": "Renvoie le résultat de l'arrondi <code>number</code> à l'entier supérieur suivant. Si <code>number</code> est null, cette fonction renvoie null.\r\n    Si <code>digits</code> est fourni, <code>number</code> est arrondi au nombre de chiffres décimaux spécifié.\r\n  "
  },
  "Number.RoundUp_Documentation.Category": {
    "message": "Number.Rounding"
  },
  "Number.RoundUp_Documentation.Examples_0_Description": {
    "message": "Arrondit au chiffre supérieur 1,234 à un entier."
  },
  "Number.RoundUp_Documentation.Examples_0_Code": {
    "message": "Number.RoundUp(1.234)"
  },
  "Number.RoundUp_Documentation.Examples_0_Result": {
    "message": "2"
  },
  "Number.RoundUp_Documentation.Examples_1_Description": {
    "message": "Arrondit au chiffre supérieur 1,999 à un entier."
  },
  "Number.RoundUp_Documentation.Examples_1_Code": {
    "message": "Number.RoundUp(1.999)"
  },
  "Number.RoundUp_Documentation.Examples_1_Result": {
    "message": "2"
  },
  "Number.RoundUp_Documentation.Examples_2_Description": {
    "message": "Arrondit 1,234 au nombre supérieur à deux décimales."
  },
  "Number.RoundUp_Documentation.Examples_2_Code": {
    "message": "Number.RoundUp(1.234, 2)"
  },
  "Number.RoundUp_Documentation.Examples_2_Result": {
    "message": "1.24"
  },
  "Number.Sign_Documentation.Name": {
    "message": "Number.Sign"
  },
  "Number.Sign_Documentation.Description": {
    "message": "Retourne 1 si le nombre est positif, -1 s'il est négatif, et 0 s'il est zéro."
  },
  "Number.Sign_Documentation.LongDescription": {
    "message": "Retourne 1 si <code>number</code> est un nombre est positif, -1 s'il est négatif, et 0 s'il est zéro.\r\n    Si <code>number</code> a la valeur null, <code>Number.Sign</code> retourne null."
  },
  "Number.Sign_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Sign_Documentation.Examples_0_Description": {
    "message": "Détermine le signe de 182."
  },
  "Number.Sign_Documentation.Examples_0_Code": {
    "message": "Number.Sign(182)"
  },
  "Number.Sign_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Number.Sign_Documentation.Examples_1_Description": {
    "message": "Détermine le signe de -182."
  },
  "Number.Sign_Documentation.Examples_1_Code": {
    "message": "Number.Sign(-182)"
  },
  "Number.Sign_Documentation.Examples_1_Result": {
    "message": "-1"
  },
  "Number.Sign_Documentation.Examples_2_Description": {
    "message": "Détermine le signe de 0."
  },
  "Number.Sign_Documentation.Examples_2_Code": {
    "message": "Number.Sign(0)"
  },
  "Number.Sign_Documentation.Examples_2_Result": {
    "message": "0"
  },
  "Number.Sin_Documentation.Name": {
    "message": "Number.Sin"
  },
  "Number.Sin_Documentation.Description": {
    "message": "Retourne le sinus du nombre."
  },
  "Number.Sin_Documentation.LongDescription": {
    "message": "Retourne le sinus de <code>number</code>."
  },
  "Number.Sin_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.Sin_Documentation.Examples_0_Description": {
    "message": "Recherche le sinus de l'angle 0."
  },
  "Number.Sin_Documentation.Examples_0_Code": {
    "message": "Number.Sin(0)"
  },
  "Number.Sin_Documentation.Examples_0_Result": {
    "message": "0"
  },
  "Number.Sinh_Documentation.Name": {
    "message": "Number.Sinh"
  },
  "Number.Sinh_Documentation.Description": {
    "message": "Retourne le sinus hyperbolique du nombre."
  },
  "Number.Sinh_Documentation.LongDescription": {
    "message": "Retourne le sinus hyperbolique de <code>number</code>."
  },
  "Number.Sinh_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.Sqrt_Documentation.Name": {
    "message": "Number.Sqrt"
  },
  "Number.Sqrt_Documentation.Description": {
    "message": "Retourne la racine carrée du nombre."
  },
  "Number.Sqrt_Documentation.LongDescription": {
    "message": "Retourne la racine carrée de <code>number</code>.\r\n    Si <code>number</code> a la valeur null, <code>Number.Sqrt</code> retourne null. Si c'est une valeur négative, <code>Number.NaN</code> est retourné (Not a number)."
  },
  "Number.Sqrt_Documentation.Category": {
    "message": "Number.Operations"
  },
  "Number.Sqrt_Documentation.Examples_0_Description": {
    "message": "Recherche la racine carrée de 625."
  },
  "Number.Sqrt_Documentation.Examples_0_Code": {
    "message": "Number.Sqrt(625)"
  },
  "Number.Sqrt_Documentation.Examples_0_Result": {
    "message": "25"
  },
  "Number.Sqrt_Documentation.Examples_1_Description": {
    "message": "Recherche la racine carrée de 85."
  },
  "Number.Sqrt_Documentation.Examples_1_Code": {
    "message": "Number.Sqrt(85)"
  },
  "Number.Sqrt_Documentation.Examples_1_Result": {
    "message": "9.2195444572928871"
  },
  "Number.Tan_Documentation.Name": {
    "message": "Number.Tan"
  },
  "Number.Tan_Documentation.Description": {
    "message": "Retourne la tangente du nombre."
  },
  "Number.Tan_Documentation.LongDescription": {
    "message": "Retourne la tangente de <code>number</code>."
  },
  "Number.Tan_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.Tan_Documentation.Examples_0_Description": {
    "message": "Recherche la tangente de l'angle 1."
  },
  "Number.Tan_Documentation.Examples_0_Code": {
    "message": "Number.Tan(1)"
  },
  "Number.Tan_Documentation.Examples_0_Result": {
    "message": "1.5574077246549023"
  },
  "Number.Tanh_Documentation.Name": {
    "message": "Number.Tanh"
  },
  "Number.Tanh_Documentation.Description": {
    "message": "Retourne la tangente hyperbolique du nombre."
  },
  "Number.Tanh_Documentation.LongDescription": {
    "message": "Retourne la tangente hyperbolique de <code>number</code>."
  },
  "Number.Tanh_Documentation.Category": {
    "message": "Number.Trigonometry"
  },
  "Number.ToText_Documentation.Name": {
    "message": "Number.ToText"
  },
  "Number.ToText_Documentation.Description": {
    "message": "Convertit le nombre donné en texte."
  },
  "Number.ToText_Documentation.LongDescription": {
    "message": "Convertit la valeur numérique <code>number</code> en une valeur de texte selon le format spécifié par <code>format</code>.<br>\r\n    <br>\r\n    Le format est une valeur de texte indiquant comment le nombre doit être converti. Pour plus d’informations sur les valeurs de format prises en charge, accédez à https://go.microsoft.com/fwlink/?linkid=2241210 et https://go.microsoft.com/fwlink/?linkid=2240884.<br>\r\n    <br>\r\n    Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, « fr-FR ») pour contrôler le comportement dépendant de la culture de <code>format</code>."
  },
  "Number.ToText_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Number.ToText_Documentation.Examples_0_Description": {
    "message": "Convertir un nombre en texte sans spécifier de format."
  },
  "Number.ToText_Documentation.Examples_0_Code": {
    "message": "Number.ToText(4)"
  },
  "Number.ToText_Documentation.Examples_0_Result": {
    "message": "\"4\""
  },
  "Number.ToText_Documentation.Examples_1_Description": {
    "message": "Convertissez un nombre au format exponentiel."
  },
  "Number.ToText_Documentation.Examples_1_Code": {
    "message": "Number.ToText(4, \"e\")"
  },
  "Number.ToText_Documentation.Examples_1_Result": {
    "message": "\"4.000000e+000\""
  },
  "Number.ToText_Documentation.Examples_2_Description": {
    "message": "Convertir un nombre au format de pourcentage avec une seule décimale."
  },
  "Number.ToText_Documentation.Examples_2_Code": {
    "message": "Number.ToText(-0.1234, \"P1\")"
  },
  "Number.ToText_Documentation.Examples_2_Result": {
    "message": "\"-12.3 %\""
  },
  "OData.Feed_Documentation.Name": {
    "message": "OData.Feed"
  },
  "OData.Feed_Documentation.Description": {
    "message": "Retourne une table des flux OData offerts par un service OData."
  },
  "OData.Feed_Documentation.LongDescription": {
    "message": "Renvoie un tableau des flux OData offerts par un service OData à partir d'un uri <code>serviceUri</code>, des en-têtes<code>headers</code>. Une valeur booléenne spécifiant s'il faut utiliser des connexions simultanées ou un paramètre d'enregistrement facultatif, <code>options</code>peut être spécifié pour contrôler les options suivantes :\r\n    <ul>\r\n    <li><code>Requête </code>: Ajout programmé de paramètres de requête à l'URL sans avoir à se soucier de l'échappement. </li>\r\n    <li> <code>En-têtes</code> : La spécification de cette valeur en tant qu'enregistrement fournira des en-têtes supplémentaires à une requête HTTP.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: En spécifiant cette valeur sous la forme d'une liste, les clés d'en-tête HTTP suivantes seront exclues du calcul de la mise en cache des données.</li>\r\n    <li> <code>ApiKeyName</code> : Si le site cible a la notion de clé API, ce paramètre peut être utilisé pour spécifier le nom (et non la valeur) du paramètre clé qui doit être utilisé dans l'URL. La valeur réelle de la clé est fournie dans l'identifiant.</li>\r\n    <li> <code>Délai d'attente</code> : La spécification de cette valeur en tant que durée modifiera le délai d'attente pour une requête HTTP. La valeur par défaut est de 600 secondes.</li>\r\n    <li> <code>EnableBatch</code> : Une logique (true/false) qui détermine s'il faut autoriser la génération d'une demande OData $batch si la MaxUriLength est dépassée (par défaut, false).</li>\r\n    <li> <code>MaxUriLength</code> : Un nombre qui indique la longueur maximale d'une uri autorisée envoyée à un service OData. Si elle est dépassée et que EnableBatch est vrai, la demande sera faite à un point de terminaison OData $batch, sinon elle échouera (par défaut 2048).</li>\r\n    <li> <code>Concurrent</code> : Logique (vrai/faux) : si la valeur est vraie, les demandes au service seront faites simultanément. S'il a la valeur false, les demandes seront faites séquentiellement. Si elle n'est pas spécifiée, la valeur sera déterminée par l'annotation AsynchronousRequestsSupported du service. Si le service ne spécifie pas si AsynchronousRequestsSupported est supporté, les demandes seront faites séquentiellement.</li>\r\n    <li> <code>ODataVersion</code> : Un nombre (3 ou 4) qui spécifie la version du protocole OData à utiliser pour ce service OData. S'il n'est pas spécifié, toutes les versions supportées seront demandées. La version du service sera déterminée par l'en-tête OData-Version renvoyé par le service.</li>\r\n    <li> <code>FunctionOverloads</code> : Une logique (true/false) : si la valeur est true, les surcharges d'importation de fonctions seront listées dans le navigateur comme des entrées séparées, si la valeur est false, les surcharges d'importation de fonctions seront listées comme une seule fonction d'union dans le navigateur. Valeur par défaut pour V3 : false. Valeur par défaut pour V4 : true.</li>\r\n    <li> <code>MoreColumns</code> : Une logique (true/false), lorsqu'elle est définie sur true, ajoute une colonne « More Columns » à chaque flux d'entités contenant des types ouverts et des types polymorphes. Elle contiendra les champs non déclarés dans le type de base. Lorsqu'elle vaut false, ce champ n'est pas présent. Valeur par défaut : false.</li>\r\n    <li> <code>IncludeAnnotations</code> : Une liste, séparée par des virgules, de noms de termes ou de modèles qualifiés d'espace de noms à inclure avec \"*\" comme caractère générique. Par défaut, aucune des annotations n'est incluse.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code> : Une liste, séparée par des virgules, de noms de termes ou de modèles qualifiés d'espace de noms à inclure dans les demandes de documents de métadonnées, avec \"*\" comme caractère générique. Par défaut, inclut les mêmes annotations que IncludeAnnotations.</li>\r\n    <li> <code>OmitValues</code> : Permet au service OData d'éviter d'écrire certaines valeurs dans les réponses. Si le service le reconnaît, nous déduirons ces valeurs à partir des champs omis. Les options comprennent :\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code> : Permet au service OData d'omettre les valeurs nulles.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Mise en œuvre</code> : Spécifie l'implémentation du connecteur OData à utiliser. Les valeurs valides sont « 2.0 » ou null.</li>\r\n    </ul>"
  },
  "OData.Feed_Documentation.Category": {
    "message": "Accessing data"
  },
  "OData.Feed_Documentation.Examples_0_Description": {
    "message": "Connectez-vous au service OData TripPin."
  },
  "OData.Feed_Documentation.Examples_0_Code": {
    "message": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")"
  },
  "OData.Feed_Documentation.Examples_0_Result": {
    "message": "table"
  },
  "Odbc.InferOptions_Documentation.Name": {
    "message": "Odbc.InferOptions"
  },
  "Odbc.InferOptions_Documentation.Description": {
    "message": "Retourne le résultat de la tentative de déduction des fonctionnalités SQL pour un pilote ODBC."
  },
  "Odbc.InferOptions_Documentation.LongDescription": {
    "message": "Retourne le résultat de la tentative de déduction des fonctionnalités SQL avec la chaîne de connexion <code>connectionString</code> à l'aide d'ODBC. <code>connectionString</code> peut être du texte ou un enregistrement de paires propriété/valeur. Les valeurs de propriété peuvent être du texte ou un nombre."
  },
  "Odbc.InferOptions_Documentation.Category": {
    "message": "Accessing data"
  },
  "Odbc.InferOptions_Documentation.Examples_0_Description": {
    "message": "Renvoie les capacités SQL déduites pour une chaîne de connexion."
  },
  "Odbc.InferOptions_Documentation.Examples_0_Code": {
    "message": "Odbc.InferOptions(\"dsn=your_dsn\")"
  },
  "Odbc.InferOptions_Documentation.Examples_0_Result": {
    "message": "record"
  },
  "Parquet.Document_Documentation.Name": {
    "message": "Parquet.Document"
  },
  "Parquet.Document_Documentation.Description": {
    "message": "Retourne le contenu du document Parquet en tant que table."
  },
  "Parquet.Document_Documentation.LongDescription": {
    "message": "Renvoie le contenu du document Parquet sous forme de tableau. Les options incluent :\n    <ul>\n    <li> <code>TypeMapping</code> : une valeur de texte qui contrôle le mappage de type par défaut lors de la lecture et de l'écriture de fichiers. La valeur par défaut est null et tente de conserver autant de fidélité que possible au type d'origine. Une valeur de \"Sql\" produira des résultats plus compatibles avec SQL Server.</li>\n    </ul>"
  },
  "Parquet.Document_Documentation.Category": {
    "message": "Accès aux données"
  },
  "Parquet.Metadata_Documentation.Name": {
    "message": "Parquet.Metadata"
  },
  "Parquet.Metadata_Documentation.Description": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Parquet.Metadata_Documentation.LongDescription": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Parquet.Metadata_Documentation.Category": {
    "message": "Accès aux données"
  },
  "Percentage.From_Documentation.Name": {
    "message": "Percentage.From"
  },
  "Percentage.From_Documentation.Description": {
    "message": "Retourne une valeur de pourcentage de la valeur donnée."
  },
  "Percentage.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>percentage</code> de la valeur <code>value</code> donnée. Si la valeur <code>value</code> donnée est <code>null</code>, <code>Percentage.From</code> retourne <code>null</code>.  Si la valeur <code>value</code> donnée est <code>text</code> avec un symbole de pourcentage à la fin, le nombre décimal converti est retourné. Sinon, la valeur sera convertie en <code>number</code> en utilisant <code>Number.From</code>. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Percentage.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Percentage.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur <code>percentage</code> de <code>\"12.3%\"</code>."
  },
  "Percentage.From_Documentation.Examples_0_Code": {
    "message": "Percentage.From(\"12.3%\")"
  },
  "Percentage.From_Documentation.Examples_0_Result": {
    "message": "0.123"
  },
  "RData.FromBinary_Documentation.Name": {
    "message": "RData.FromBinary"
  },
  "RData.FromBinary_Documentation.Description": {
    "message": "Retourne un enregistrement des trames de données provenant du fichier RData."
  },
  "RData.FromBinary_Documentation.LongDescription": {
    "message": "Retourne un enregistrement des trames de données provenant du fichier RData."
  },
  "RData.FromBinary_Documentation.Category": {
    "message": "Accessing data"
  },
  "Record.Combine_Documentation.Name": {
    "message": "Record.Combine"
  },
  "Record.Combine_Documentation.Description": {
    "message": "Combine les enregistrements dans la liste spécifiée."
  },
  "Record.Combine_Documentation.LongDescription": {
    "message": "Combine les enregistrements dans le <code>records</code> spécifié. Si <code>records</code> contient des valeurs autres qu'un enregistrement, une erreur est retournée."
  },
  "Record.Combine_Documentation.Category": {
    "message": "Record.Transformations"
  },
  "Record.Combine_Documentation.Examples_0_Description": {
    "message": "Crée un enregistrement combiné à partir des enregistrements."
  },
  "Record.Combine_Documentation.Examples_0_Code": {
    "message": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})"
  },
  "Record.Combine_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
  },
  "Record.FieldCount_Documentation.Name": {
    "message": "Record.FieldCount"
  },
  "Record.FieldCount_Documentation.Description": {
    "message": "Retourne le nombre de champs dans l'enregistrement."
  },
  "Record.FieldCount_Documentation.LongDescription": {
    "message": "Retourne le nombre de champs dans l'enregistrement <code>record</code>."
  },
  "Record.FieldCount_Documentation.Category": {
    "message": "Record.Information"
  },
  "Record.FieldCount_Documentation.Examples_0_Description": {
    "message": "Recherche le nombre de champs dans l'enregistrement."
  },
  "Record.FieldCount_Documentation.Examples_0_Code": {
    "message": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])"
  },
  "Record.FieldCount_Documentation.Examples_0_Result": {
    "message": "2"
  },
  "Record.FieldNames_Documentation.Name": {
    "message": "Record.FieldNames"
  },
  "Record.FieldNames_Documentation.Description": {
    "message": "Retourne les noms des champs."
  },
  "Record.FieldNames_Documentation.LongDescription": {
    "message": "Retourne les noms des champs dans l'enregistrement <code>record</code> sous la forme d'un texte."
  },
  "Record.FieldNames_Documentation.Category": {
    "message": "Record.Selection"
  },
  "Record.FieldNames_Documentation.Examples_0_Description": {
    "message": "Recherche les noms des champs dans l'enregistrement."
  },
  "Record.FieldNames_Documentation.Examples_0_Code": {
    "message": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])"
  },
  "Record.FieldNames_Documentation.Examples_0_Result": {
    "message": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
  },
  "Record.FieldValues_Documentation.Name": {
    "message": "Record.FieldValues"
  },
  "Record.FieldValues_Documentation.Description": {
    "message": "Retourne une liste de valeurs de champ."
  },
  "Record.FieldValues_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs de champ dans un enregistrement <code>record</code>."
  },
  "Record.FieldValues_Documentation.Category": {
    "message": "Record.Selection"
  },
  "Record.FieldValues_Documentation.Examples_0_Description": {
    "message": "Recherche les valeurs des champs dans l'enregistrement."
  },
  "Record.FieldValues_Documentation.Examples_0_Code": {
    "message": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])"
  },
  "Record.FieldValues_Documentation.Examples_0_Result": {
    "message": "{1, \"Bob\", \"123-4567\"}"
  },
  "Record.FromTable_Documentation.Name": {
    "message": "Record.FromTable"
  },
  "Record.FromTable_Documentation.Description": {
    "message": "Crée un enregistrement à partir d'une table au format {[Name = name, Value = value]}."
  },
  "Record.FromTable_Documentation.LongDescription": {
    "message": "Retourne un enregistrement à partir d'une table d'enregistrements <code>table</code> contenant les noms des champs et les noms des valeurs <code>{[Name = name, Value = value]}</code>. Si les noms des champs ne sont pas uniques, une exception est levée."
  },
  "Record.FromTable_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Record.FromTable_Documentation.Examples_0_Description": {
    "message": "Crée un enregistrement à partir de la table, de la forme Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]})."
  },
  "Record.FromTable_Documentation.Examples_0_Code": {
    "message": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)"
  },
  "Record.FromTable_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
  },
  "Record.ToList_Documentation.Name": {
    "message": "Record.ToList"
  },
  "Record.ToList_Documentation.Description": {
    "message": "Retourne une liste de valeurs contenant les valeurs de champ de l'enregistrement d'entrée."
  },
  "Record.ToList_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs contenant les valeurs de champ de l'entrée <code>record</code>."
  },
  "Record.ToList_Documentation.Category": {
    "message": "Record.Serialization"
  },
  "Record.ToList_Documentation.Examples_0_Description": {
    "message": "Extrayez les valeurs de champ d'un enregistrement."
  },
  "Record.ToList_Documentation.Examples_0_Code": {
    "message": "Record.ToList([A = 1, B = 2, C = 3])"
  },
  "Record.ToList_Documentation.Examples_0_Result": {
    "message": "{1, 2, 3}"
  },
  "Resource.Access_Documentation.Name": {
    "message": "Resource.Access"
  },
  "Resource.Access_Documentation.Description": {
    "message": "Resource.Access"
  },
  "Resource.Access_Documentation.LongDescription": {
    "message": "Resource.Access"
  },
  "Resource.Access_Documentation.Category": {
    "message": ""
  },
  "RowExpression.Column_Documentation.Name": {
    "message": "RowExpression.Column"
  },
  "RowExpression.Column_Documentation.Description": {
    "message": "Retourne une arborescence de syntaxe abstraite (AST) qui représente l’accès à la colonne dans une expression de ligne."
  },
  "RowExpression.Column_Documentation.LongDescription": {
    "message": "Retourne une arborescence de syntaxe abstraite (AST) qui représente l’accès à la colonne <code>columnName</code> de la ligne dans une expression de ligne."
  },
  "RowExpression.Column_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "RowExpression.Column_Documentation.Examples_0_Description": {
    "message": "Crée un AST représentant l'accès de la colonne « CustomerName »."
  },
  "RowExpression.Column_Documentation.Examples_0_Code": {
    "message": "RowExpression.Column(\"CustomerName\")"
  },
  "RowExpression.Column_Documentation.Examples_0_Result": {
    "message": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
  },
  "RowExpression.From_Documentation.Name": {
    "message": "RowExpression.From"
  },
  "RowExpression.From_Documentation.Description": {
    "message": "Retourne l’arborescence de syntaxe abstraite (AST) pour le corps d’une fonction."
  },
  "RowExpression.From_Documentation.LongDescription": {
    "message": "<p>Retourne l’arborescence de syntaxe abstraite (AST) pour le corps de <code>function</code>, normalisé en une <i>expression de ligne</i> :\r\n<ul>\r\n   <li> La fonction doit être lambda à 1 argument</li>\r\n   <li>Toutes les références au paramètre de fonction sont remplacées par <code>RowExpression.Row</code>.</li>\r\n  <li>Toutes les références aux colonnes sont remplacées par <code>RowExpression.Column(<i>columnName</i>)</code>.</li>\r\n   <li>L’AST sera simplifié pour contenir uniquement les nœuds des types :\r\n    <ul>\r\n     <li><code>Constant</code></li>\r\n     <li><code>Invocation</code></li>\r\n     <li><code>Unary</code></li>\r\n     <li><code>Binary</code></li>\r\n     <li><code>If</code></li>\r\n     <li><code>FieldAccess</code></li>\r\n  </ul>\r\n </li>\r\n</ul>\r\n</p>\r\n</p>Une erreur est générée si un AST d’expression de ligne ne peut pas être retourné pour le corps de <code>function</code>.</p>"
  },
  "RowExpression.From_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "RowExpression.From_Documentation.Examples_0_Description": {
    "message": "Retourne l'AST pour le corps de la fonction <code>each [CustomerID] = \"ALFKI\"</code>"
  },
  "RowExpression.From_Documentation.Examples_0_Code": {
    "message": "RowExpression.From(each [CustomerName] = \"ALFKI\")"
  },
  "RowExpression.From_Documentation.Examples_0_Result": {
    "message": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
  },
  "Single.From_Documentation.Name": {
    "message": "Single.From"
  },
  "Single.From_Documentation.Description": {
    "message": "Crée une valeur unique à partir de la valeur donnée."
  },
  "Single.From_Documentation.LongDescription": {
    "message": "Retourne une valeur simple<code>number</code> du <code>value</code> donné. Si le <code>value</code> donné est <code>null</code>, <code>Single.From</code> retourne <code>null</code>. Si le <code>value</code> donné est <code>number</code> dans la plage de valeurs simples, <code>value</code> est retourné. dans le cas contraire, une erreur est retournée. Si <code>value</code> donné est d'un autre type, il sera converti en valeur <code>number</code> en utilisant<code>Number.FromText</code>. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Single.From_Documentation.Category": {
    "message": "Number.Conversion and formatting"
  },
  "Single.From_Documentation.Examples_0_Description": {
    "message": "Obtenez la valeur unique <code>number</code> de <code>\"1.5\"</code>."
  },
  "Single.From_Documentation.Examples_0_Code": {
    "message": "Single.From(\"1.5\")"
  },
  "Single.From_Documentation.Examples_0_Result": {
    "message": "1.5"
  },
  "Smartsheet.Content_Documentation.Description": {
    "message": "Retourne une table de données à partir d'un point de terminaison d'index Smartsheet."
  },
  "Smartsheet.Content_Documentation.DisplayName": {
    "message": "Smartsheet.Content"
  },
  "Smartsheet.Content_Documentation.Caption": {
    "message": "Smartsheet.Content"
  },
  "Smartsheet.Content_Documentation.Name": {
    "message": "Smartsheet.Content"
  },
  "Smartsheet.Content_Documentation.LongDescription": {
    "message": "Effectue un appel à l'API REST Smartsheet 2.0 au niveau du point de terminaison spécifié et transforme l'élément de données retourné en table."
  },
  "Smartsheet.Content_Documentation.Examples_0_Description": {
    "message": "Extrait une table d'informations sur les utilisateurs à partir de l'API Smartsheet"
  },
  "Smartsheet.Content_Documentation.Examples_0_Code": {
    "message": "Smartsheet.Content(\"users\")"
  },
  "Smartsheet.Content_Documentation.Examples_0_Result": {
    "message": "Table contenant les informations sur les utilisateurs retournées par l'API Smartsheet"
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Name": {
    "message": "Splitter.SplitTextByAnyDelimiter"
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes au niveau de l'un des délimiteurs spécifiés."
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes au niveau de l'un des délimiteurs spécifiés."
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée par une virgule ou un point-virgule, en ignorant les guillemets et les délimiteurs de citation et en commençant par le début de l'entrée."
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")"
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Examples_0_Result": {
    "message": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Examples_1_Description": {
    "message": "Divise l'entrée par une virgule ou un point-virgule, en ignorant les guillemets et les délimiteurs de citation et en commençant par la fin de l'entrée."
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Examples_1_Code": {
    "message": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")"
  },
  "Splitter.SplitTextByAnyDelimiter_Documentation.Examples_1_Result": {
    "message": "{\"a,b\", \"c\", \"d\"}"
  },
  "Splitter.SplitTextByDelimiter_Documentation.Name": {
    "message": "Splitter.SplitTextByDelimiter"
  },
  "Splitter.SplitTextByDelimiter_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes selon le délimiteur spécifié."
  },
  "Splitter.SplitTextByDelimiter_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes selon le délimiteur spécifié."
  },
  "Splitter.SplitTextByDelimiter_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByDelimiter_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée par virgule, en ignorant les virgules citées."
  },
  "Splitter.SplitTextByDelimiter_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")"
  },
  "Splitter.SplitTextByDelimiter_Documentation.Examples_0_Result": {
    "message": "{\"a\", \"b,c\", \"d\"}"
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Name": {
    "message": "Splitter.SplitTextByEachDelimiter"
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes au niveau de chaque délimiteur spécifié en séquence."
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes au niveau de chaque délimiteur spécifié en séquence."
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée par une virgule, puis un point-virgule, en commençant par le début de l'entrée."
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")"
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Examples_0_Result": {
    "message": "{\"a\", \"b\", \"c,d\"}"
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Examples_1_Description": {
    "message": "Divise l'entrée par une virgule, puis un point-virgule, en traitant les guillemets comme tout autre caractère et en commençant par la fin de l'entrée."
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Examples_1_Code": {
    "message": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")"
  },
  "Splitter.SplitTextByEachDelimiter_Documentation.Examples_1_Result": {
    "message": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
  },
  "Splitter.SplitTextByLengths_Documentation.Name": {
    "message": "Splitter.SplitTextByLengths"
  },
  "Splitter.SplitTextByLengths_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes en fonction de chaque longueur spécifiée."
  },
  "Splitter.SplitTextByLengths_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes en fonction de chaque longueur spécifiée."
  },
  "Splitter.SplitTextByLengths_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByLengths_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée en deux caractères suivis des trois suivants, en commençant par le début de l'entrée."
  },
  "Splitter.SplitTextByLengths_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")"
  },
  "Splitter.SplitTextByLengths_Documentation.Examples_0_Result": {
    "message": "{\"AB\", \"123\"}"
  },
  "Splitter.SplitTextByLengths_Documentation.Examples_1_Description": {
    "message": "Divise l'entrée en trois premiers caractères suivis des deux suivants, en commençant par la fin de l'entrée."
  },
  "Splitter.SplitTextByLengths_Documentation.Examples_1_Code": {
    "message": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")"
  },
  "Splitter.SplitTextByLengths_Documentation.Examples_1_Result": {
    "message": "{\"WA\", \"98052\"}"
  },
  "Splitter.SplitTextByPositions_Documentation.Name": {
    "message": "Splitter.SplitTextByPositions"
  },
  "Splitter.SplitTextByPositions_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes à chaque position spécifiée."
  },
  "Splitter.SplitTextByPositions_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes à chaque position spécifiée."
  },
  "Splitter.SplitTextByPositions_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByPositions_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée aux positions spécifiées, en commençant par le début de l'entrée."
  },
  "Splitter.SplitTextByPositions_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")"
  },
  "Splitter.SplitTextByPositions_Documentation.Examples_0_Result": {
    "message": "{\"ABC\", \"|\", \"12345\"}"
  },
  "Splitter.SplitTextByPositions_Documentation.Examples_1_Description": {
    "message": "Divise l'entrée aux positions spécifiées, en commençant par la fin de l'entrée."
  },
  "Splitter.SplitTextByPositions_Documentation.Examples_1_Code": {
    "message": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")"
  },
  "Splitter.SplitTextByPositions_Documentation.Examples_1_Result": {
    "message": "{\"Redmond\", \"98052\"}"
  },
  "Splitter.SplitTextByRanges_Documentation.Name": {
    "message": "Splitter.SplitTextByRanges"
  },
  "Splitter.SplitTextByRanges_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes selon les décalages et les longueurs spécifiés."
  },
  "Splitter.SplitTextByRanges_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes en fonction des décalages et des longueurs spécifiés. Une longueur null indique que toutes les entrées restantes doivent être incluses."
  },
  "Splitter.SplitTextByRanges_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_0_Description": {
    "message": "Divise l'entrée par les paires position et longueur spécifiées, en commençant par le début de l'entrée. Notez que les plages dans cet exemple se chevauchent."
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")"
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_0_Result": {
    "message": "{\"code\", \"delimiter\"}"
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_1_Description": {
    "message": "Divise l'entrée par les paires de position et de longueur spécifiées, en commençant par la fin de l'entrée."
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_1_Code": {
    "message": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")"
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_1_Result": {
    "message": "{\"WA\", \"98052\"}"
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_2_Description": {
    "message": "Fractionner l’entrée en un code postal de longueur fixe suivi d’un nom de ville de longueur variable"
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_2_Code": {
    "message": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")"
  },
  "Splitter.SplitTextByRanges_Documentation.Examples_2_Result": {
    "message": "{\"98052\", \"Redmond\"}"
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Name": {
    "message": "Splitter.SplitTextByRepeatedLengths"
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Description": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes après la longueur spécifiée, de façon répétée."
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.LongDescription": {
    "message": "Retourne une fonction qui fractionne le texte en une liste de textes après la longueur spécifiée, de façon répétée."
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Category": {
    "message": "Splitter"
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Examples_0_Description": {
    "message": "Diviser de façon répétée l'entrée en morceaux de trois caractères, en commençant par le début de l'entrée"
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Examples_0_Code": {
    "message": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")"
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Examples_0_Result": {
    "message": "{\"123\", \"456\", \"78\"}"
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Examples_1_Description": {
    "message": "Diviser de façon répétée l'entrée en morceaux de trois caractères, en commençant par la fin de l'entrée."
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Examples_1_Code": {
    "message": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")"
  },
  "Splitter.SplitTextByRepeatedLengths_Documentation.Examples_1_Result": {
    "message": "{\"87\", \"654\", \"321\"}"
  },
  "SqlExpression.SchemaFrom_Documentation.Name": {
    "message": "SqlExpression.SchemaFrom"
  },
  "SqlExpression.SchemaFrom_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "SqlExpression.SchemaFrom_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "SqlExpression.SchemaFrom_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Table.ApproximateRowCount_Documentation.Name": {
    "message": "Table.ApproximateRowCount"
  },
  "Table.ApproximateRowCount_Documentation.Description": {
    "message": "Retourne le nombre approximatif de lignes dans le tableau."
  },
  "Table.ApproximateRowCount_Documentation.LongDescription": {
    "message": "Retourne le nombre approximatif de lignes dans le <code>table</code>, ou une erreur si la source de données ne prend pas en charge l’approximation."
  },
  "Table.ApproximateRowCount_Documentation.Category": {
    "message": "Table.Information"
  },
  "Table.ApproximateRowCount_Documentation.Examples_0_Description": {
    "message": "Estimez le nombre de combinaisons distinctes de ville et d'état dans une grande table, ce qui peut être utilisé comme une estimation de cardinalité pour les colonnes. Les estimations de cardinalité sont suffisamment importantes pour que diverses sources de données (telles que SQL Server) prennent en charge cette approximation particulière, souvent à l'aide d'un algorithme appelé HyperLogLog."
  },
  "Table.ApproximateRowCount_Documentation.Examples_0_Code": {
    "message": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))"
  },
  "Table.ApproximateRowCount_Documentation.Examples_0_Result": {
    "message": "number"
  },
  "Table.ColumnCount_Documentation.Name": {
    "message": "Table.ColumnCount"
  },
  "Table.ColumnCount_Documentation.Description": {
    "message": "Retourne le nombre de colonnes dans la table."
  },
  "Table.ColumnCount_Documentation.LongDescription": {
    "message": "Retourne le nombre de colonnes dans la table <code>table</code>."
  },
  "Table.ColumnCount_Documentation.Category": {
    "message": "Table.Information"
  },
  "Table.ColumnCount_Documentation.Examples_0_Description": {
    "message": "Recherche le nombre de colonnes de la table."
  },
  "Table.ColumnCount_Documentation.Examples_0_Code": {
    "message": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)"
  },
  "Table.ColumnCount_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "Table.ColumnNames_Documentation.Name": {
    "message": "Table.ColumnNames"
  },
  "Table.ColumnNames_Documentation.Description": {
    "message": "Retourne les noms de colonnes comme une liste."
  },
  "Table.ColumnNames_Documentation.LongDescription": {
    "message": "Retourne les noms des colonnes dans la table <code>table</code> comme une liste de texte."
  },
  "Table.ColumnNames_Documentation.Category": {
    "message": "Table.Column operations"
  },
  "Table.ColumnNames_Documentation.Examples_0_Description": {
    "message": "Recherche les noms des colonnes de la table."
  },
  "Table.ColumnNames_Documentation.Examples_0_Code": {
    "message": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)"
  },
  "Table.ColumnNames_Documentation.Examples_0_Result": {
    "message": "{\"CustomerID\", \"Name\", \"Phone\"}"
  },
  "Table.First_Documentation.Name": {
    "message": "Table.First"
  },
  "Table.First_Documentation.Description": {
    "message": "Retourne la première ligne ou une valeur par défaut spécifiée."
  },
  "Table.First_Documentation.LongDescription": {
    "message": "Retourne la première ligne de <code>table</code> ou une valeur par défaut facultative <code>default</code>, si la table est vide."
  },
  "Table.First_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.First_Documentation.Examples_0_Description": {
    "message": "Recherche la première ligne de la table."
  },
  "Table.First_Documentation.Examples_0_Code": {
    "message": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)"
  },
  "Table.First_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
  },
  "Table.First_Documentation.Examples_1_Description": {
    "message": "Recherche la première ligne de la table <code>({})</code> ou retourne [a = 0, b = 0] si elle est vide."
  },
  "Table.First_Documentation.Examples_1_Code": {
    "message": "Table.First(Table.FromRecords({}), [a = 0, b = 0])"
  },
  "Table.First_Documentation.Examples_1_Result": {
    "message": "[a = 0, b = 0]"
  },
  "Table.FirstValue_Documentation.Name": {
    "message": "Table.FirstValue"
  },
  "Table.FirstValue_Documentation.Description": {
    "message": "Retourne la première colonne de la première ligne de la table, ou la valeur par défaut spécifiée."
  },
  "Table.FirstValue_Documentation.LongDescription": {
    "message": "Retourne la première colonne de la première ligne de la table <code>table</code>, ou la valeur par défaut spécifiée."
  },
  "Table.FirstValue_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.IsDistinct_Documentation.Name": {
    "message": "Table.IsDistinct"
  },
  "Table.IsDistinct_Documentation.Description": {
    "message": "Indique si la table contient seulement des lignes distinctes (pas de doublons)."
  },
  "Table.IsDistinct_Documentation.LongDescription": {
    "message": "Indique si <code>table</code> contient seulement des lignes distinctes (pas de doublons). Retourne <code>true</code> si les lignes sont distinctes, sinon <code>false</code>.\r\n    Un paramètre facultatif <code>comparisonCriteria</code> spécifie quelles colonnes de la table sont testées pour la duplication. Si <code>comparisonCriteria</code> n'est pas spécifié, toutes les colonnes sont testées."
  },
  "Table.IsDistinct_Documentation.Category": {
    "message": "Table.Membership"
  },
  "Table.IsDistinct_Documentation.Examples_0_Description": {
    "message": "Détermine si la table ne contient que des valeurs distinctes."
  },
  "Table.IsDistinct_Documentation.Examples_0_Code": {
    "message": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)"
  },
  "Table.IsDistinct_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Table.IsDistinct_Documentation.Examples_1_Description": {
    "message": "Détermine si la table ne contient que des valeurs distinctes dans la colonne."
  },
  "Table.IsDistinct_Documentation.Examples_1_Code": {
    "message": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)"
  },
  "Table.IsDistinct_Documentation.Examples_1_Result": {
    "message": "false"
  },
  "Table.IsEmpty_Documentation.Name": {
    "message": "Table.IsEmpty"
  },
  "Table.IsEmpty_Documentation.Description": {
    "message": "Indique si la table contient des lignes."
  },
  "Table.IsEmpty_Documentation.LongDescription": {
    "message": "Indique si <code>table</code> contient des lignes. Retourne <code>true</code> s'il n'y a pas de lignes (c'est-à-dire si la table est vide), sinon <code>false</code>."
  },
  "Table.IsEmpty_Documentation.Category": {
    "message": "Table.Information"
  },
  "Table.IsEmpty_Documentation.Examples_0_Description": {
    "message": "Détermine si la table est vide."
  },
  "Table.IsEmpty_Documentation.Examples_0_Code": {
    "message": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)"
  },
  "Table.IsEmpty_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "Table.IsEmpty_Documentation.Examples_1_Description": {
    "message": "Détermine si la table <code>({})</code> est vide."
  },
  "Table.IsEmpty_Documentation.Examples_1_Code": {
    "message": "Table.IsEmpty(Table.FromRecords({}))"
  },
  "Table.IsEmpty_Documentation.Examples_1_Result": {
    "message": "true"
  },
  "Table.Keys_Documentation.Name": {
    "message": "Table.Keys"
  },
  "Table.Keys_Documentation.Description": {
    "message": "Renvoie les clés de la table spécifiée."
  },
  "Table.Keys_Documentation.LongDescription": {
    "message": "Renvoie les clés de la table spécifiée."
  },
  "Table.Keys_Documentation.Category": {
    "message": "Table.Transformation"
  },
  "Table.Keys_Documentation.Examples_0_Description": {
    "message": "Obtenir la liste des clés d’une table."
  },
  "Table.Keys_Documentation.Examples_0_Code": {
    "message": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys"
  },
  "Table.Keys_Documentation.Examples_0_Result": {
    "message": "{[Columns = {\"Id\"}, Primary = true]}"
  },
  "Table.Last_Documentation.Name": {
    "message": "Table.Last"
  },
  "Table.Last_Documentation.Description": {
    "message": "Retourne la dernière ligne ou une valeur par défaut spécifiée."
  },
  "Table.Last_Documentation.LongDescription": {
    "message": "Retourne la dernière ligne de <code>table</code> ou une valeur par défaut facultative <code>default</code>, si la table est vide."
  },
  "Table.Last_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.Last_Documentation.Examples_0_Description": {
    "message": "Recherche la dernière ligne de la table."
  },
  "Table.Last_Documentation.Examples_0_Code": {
    "message": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)"
  },
  "Table.Last_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
  },
  "Table.Last_Documentation.Examples_1_Description": {
    "message": "Recherche la dernière ligne de la table <code>({})</code> ou retourne [a = 0, b = 0] si elle est vide."
  },
  "Table.Last_Documentation.Examples_1_Code": {
    "message": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])"
  },
  "Table.Last_Documentation.Examples_1_Result": {
    "message": "[a = 0, b = 0]"
  },
  "Table.RowCount_Documentation.Name": {
    "message": "Table.RowCount"
  },
  "Table.RowCount_Documentation.Description": {
    "message": "Retourne le nombre de lignes dans la table."
  },
  "Table.RowCount_Documentation.LongDescription": {
    "message": "Retourne le nombre de lignes dans <code>table</code>."
  },
  "Table.RowCount_Documentation.Category": {
    "message": "Table.Information"
  },
  "Table.RowCount_Documentation.Examples_0_Description": {
    "message": "Recherche le nombre de lignes de la table."
  },
  "Table.RowCount_Documentation.Examples_0_Code": {
    "message": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)"
  },
  "Table.RowCount_Documentation.Examples_0_Result": {
    "message": "3"
  },
  "Table.SingleRow_Documentation.Name": {
    "message": "Table.SingleRow"
  },
  "Table.SingleRow_Documentation.Description": {
    "message": "Retourne une seule ligne dans la table."
  },
  "Table.SingleRow_Documentation.LongDescription": {
    "message": "Retourne une seule ligne dans le <code>table</code> avec une ligne unique. Si <code>table</code> a plus d'une ligne, une exception est levée."
  },
  "Table.SingleRow_Documentation.Category": {
    "message": "Table.Row operations"
  },
  "Table.SingleRow_Documentation.Examples_0_Description": {
    "message": "Retourne la ligne de la table."
  },
  "Table.SingleRow_Documentation.Examples_0_Code": {
    "message": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))"
  },
  "Table.SingleRow_Documentation.Examples_0_Result": {
    "message": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
  },
  "Table.ToColumns_Documentation.Name": {
    "message": "Table.ToColumns"
  },
  "Table.ToColumns_Documentation.Description": {
    "message": "Crée une liste de listes imbriquées de valeurs de colonnes depuis une table."
  },
  "Table.ToColumns_Documentation.LongDescription": {
    "message": "Crée une liste de listes imbriquées depuis la table, <code>table</code>.  Chaque élément de liste est une liste interne qui contient les valeurs des colonnes."
  },
  "Table.ToColumns_Documentation.Category": {
    "message": "Table.Conversions"
  },
  "Table.ToColumns_Documentation.Examples_0_Description": {
    "message": "Créer une liste des valeurs de colonne à partir de la table."
  },
  "Table.ToColumns_Documentation.Examples_0_Code": {
    "message": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)"
  },
  "Table.ToColumns_Documentation.Examples_0_Result": {
    "message": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
  },
  "Table.ToList_Documentation.Name": {
    "message": "Table.ToList"
  },
  "Table.ToList_Documentation.Description": {
    "message": "Convertit une table en une liste en appliquant la fonction de combinaison spécifiée à chaque ligne de valeurs dans la liste."
  },
  "Table.ToList_Documentation.LongDescription": {
    "message": "Convertit une table en une liste en appliquant la fonction de combinaison spécifiée à chaque ligne de valeurs dans la liste."
  },
  "Table.ToList_Documentation.Category": {
    "message": "Table.Conversions"
  },
  "Table.ToList_Documentation.Examples_0_Description": {
    "message": "Combinez le texte de chaque ligne avec une virgule."
  },
  "Table.ToList_Documentation.Examples_0_Code": {
    "message": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)"
  },
  "Table.ToList_Documentation.Examples_0_Result": {
    "message": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
  },
  "Table.ToRecords_Documentation.Name": {
    "message": "Table.ToRecords"
  },
  "Table.ToRecords_Documentation.Description": {
    "message": "Convertit une table en une liste d'enregistrements."
  },
  "Table.ToRecords_Documentation.LongDescription": {
    "message": "Convertit une table, <code>table</code>, en une liste d'enregistrements."
  },
  "Table.ToRecords_Documentation.Category": {
    "message": "Table.Conversions"
  },
  "Table.ToRecords_Documentation.Examples_0_Description": {
    "message": "Convertit la table en une liste d'enregistrements."
  },
  "Table.ToRecords_Documentation.Examples_0_Code": {
    "message": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)"
  },
  "Table.ToRecords_Documentation.Examples_0_Result": {
    "message": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
  },
  "Table.ToRows_Documentation.Name": {
    "message": "Table.ToRows"
  },
  "Table.ToRows_Documentation.Description": {
    "message": "Crée une liste de listes imbriquées de valeurs de lignes depuis une table."
  },
  "Table.ToRows_Documentation.LongDescription": {
    "message": "Crée une liste de listes imbriquées depuis la table, <code>table</code>.  Chaque élément de liste est une liste interne qui contient les valeurs des lignes."
  },
  "Table.ToRows_Documentation.Category": {
    "message": "Table.Conversions"
  },
  "Table.ToRows_Documentation.Examples_0_Description": {
    "message": "Créer une liste des valeurs de ligne à partir de la table."
  },
  "Table.ToRows_Documentation.Examples_0_Code": {
    "message": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)"
  },
  "Table.ToRows_Documentation.Examples_0_Result": {
    "message": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
  },
  "Table.ViewError_Documentation.Name": {
    "message": "Table.ViewError"
  },
  "Table.ViewError_Documentation.Description": {
    "message": "Crée un enregistrement d’erreur modifié qui ne déclenche pas de secours lorsqu’il est levé par un gestionnaire défini sur une vue (via Table.View)."
  },
  "Table.ViewError_Documentation.LongDescription": {
    "message": "Crée un enregistrement d’erreur modifié de <code>errorRecord</code> qui ne déclenche pas de secours lorsqu’il est levé par un gestionnaire défini sur une vue (via Table.View)."
  },
  "Table.ViewError_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Table.ViewFunction_Documentation.Name": {
    "message": "Table.ViewFunction"
  },
  "Table.ViewFunction_Documentation.Description": {
    "message": "Crée une fonction pouvant être interceptée par un gestionnaire défini sur une vue (via Table.View)."
  },
  "Table.ViewFunction_Documentation.LongDescription": {
    "message": "<p>Crée une fonction de vue basée sur <code>function</code> qui peut être gérée dans une vue créée par <code>Table.View</code>.</p>\r\n<p>Le gestionnaire <code>OnInvoke</code> de <code>Table.View</code> peut être utilisé pour définir un gestionnaire pour la fonction de vue.</p>\r\n<p>Comme avec les gestionnaires pour les opérations intégrées, si aucun gestionnaire <code>OnInvoke</code> n'est spécifié, ou s'il ne gère pas la fonction de vue, ou si une erreur est déclenchée par le gestionnaire, <code>function</code> est appliqué au-dessus de la vue.</p>\r\n<p>Référez-vous à la documentation publiée du connecteur personnalisé Power Query pour une description plus complète de <code>Table.View</code> et des fonctions de vue personnalisées.</p>"
  },
  "Table.ViewFunction_Documentation.Category": {
    "message": "Table.Table construction"
  },
  "Text.Clean_Documentation.Name": {
    "message": "Text.Clean"
  },
  "Text.Clean_Documentation.Description": {
    "message": "Retourne la valeur de texte après avoir supprimé tous les caractères de contrôle."
  },
  "Text.Clean_Documentation.LongDescription": {
    "message": "Retourne une valeur de texte après avoir supprimé tous les caractères de contrôle de <code>text</code>."
  },
  "Text.Clean_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Clean_Documentation.Examples_0_Description": {
    "message": "Supprimez les sauts de ligne et d’autres caractères de contrôle d’une valeur de texte."
  },
  "Text.Clean_Documentation.Examples_0_Code": {
    "message": "Text.Clean(\"ABC#(lf)D\")"
  },
  "Text.Clean_Documentation.Examples_0_Result": {
    "message": "\"ABCD\""
  },
  "Text.Combine_Documentation.Name": {
    "message": "Text.Combine"
  },
  "Text.Combine_Documentation.Description": {
    "message": "Concatène une liste de valeurs de texte dans une seule valeur de texte."
  },
  "Text.Combine_Documentation.LongDescription": {
    "message": "Retourne le résultat de la combinaison de la liste de valeurs de texte, <code>texts</code>, en une seule valeur de texte. Toutes les valeurs de <code>nul</code> présentes dans <code>texts</code> sont ignorées.\r\n    Vous pouvez spécifier un <code>separator</code> facultatif utilisé dans le texte combiné final."
  },
  "Text.Combine_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Combine_Documentation.Examples_0_Description": {
    "message": "Combinez les valeurs de texte « Seattle » et « WA »."
  },
  "Text.Combine_Documentation.Examples_0_Code": {
    "message": "Text.Combine({\"Seattle\", \"WA\"})"
  },
  "Text.Combine_Documentation.Examples_0_Result": {
    "message": "\"SeattleWA\""
  },
  "Text.Combine_Documentation.Examples_1_Description": {
    "message": "Combinez les valeurs de texte « Seattle » et « WA » séparées par une virgule et un espace."
  },
  "Text.Combine_Documentation.Examples_1_Code": {
    "message": "Text.Combine({\"Seattle\", \"WA\"}, \", \")"
  },
  "Text.Combine_Documentation.Examples_1_Result": {
    "message": "\"Seattle, WA\""
  },
  "Text.Combine_Documentation.Examples_2_Description": {
    "message": "Combinez les valeurs « Seattle », <code>nul</code> et « WA », séparées par une virgule et un espace. (Notez que le <code>nul</code> est ignoré.)"
  },
  "Text.Combine_Documentation.Examples_2_Code": {
    "message": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")"
  },
  "Text.Combine_Documentation.Examples_2_Result": {
    "message": "\"Seattle, WA\""
  },
  "Text.From_Documentation.Name": {
    "message": "Text.From"
  },
  "Text.From_Documentation.Description": {
    "message": "Crée une valeur de texte à partir de la valeur spécifiée."
  },
  "Text.From_Documentation.LongDescription": {
    "message": "Retourne la représentation de texte de <code>value</code>. La valeur <code>value</code> peut être une valeur <code>number</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>datetimezone</code>, <code>logical</code>, <code>duration</code> ou <code>binary</code>.\r\n    Si la valeur spécifiée est null, <code>Text.From</code> retourne null. Un <code>culture</code> facultatif peut aussi être fourni (par exemple, \"fr-fr\")."
  },
  "Text.From_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Text.From_Documentation.Examples_0_Description": {
    "message": "Créez une valeur de texte à partir du nombre 3."
  },
  "Text.From_Documentation.Examples_0_Code": {
    "message": "Text.From(3)"
  },
  "Text.From_Documentation.Examples_0_Result": {
    "message": "\"3\""
  },
  "Text.FromBinary_Documentation.Name": {
    "message": "Text.FromBinary"
  },
  "Text.FromBinary_Documentation.Description": {
    "message": "Décode les données d'une forme binaire en texte."
  },
  "Text.FromBinary_Documentation.LongDescription": {
    "message": "Décode les données, <code>binary</code>, d'une forme binaire en une valeur de texte, à l'aide du type <code>encoding</code>."
  },
  "Text.FromBinary_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Text.InferNumberType_Documentation.Name": {
    "message": "Text.InferNumberType"
  },
  "Text.InferNumberType_Documentation.Description": {
    "message": "Déduit le type de nombre granulaire (Int64.Type, Double.Type, etc.) d'un nombre codé en texte."
  },
  "Text.InferNumberType_Documentation.LongDescription": {
    "message": "Déduit le type de nombre granulaire (Int64.Type, Double.Type, etc.) de <code>text</code>. Une erreur est générée s'<code>text</code>il ne s'agit pas d'un nombre. Une option <code>culture</code> peut également être fournie (par exemple, \"en-US\")."
  },
  "Text.InferNumberType_Documentation.Category": {
    "message": "Text"
  },
  "Text.Length_Documentation.Name": {
    "message": "Text.Length"
  },
  "Text.Length_Documentation.Description": {
    "message": "Retourne le nombre de caractères."
  },
  "Text.Length_Documentation.LongDescription": {
    "message": "Retourne le nombre de caractères dans le texte <code>text</code>."
  },
  "Text.Length_Documentation.Category": {
    "message": "Text.Information"
  },
  "Text.Length_Documentation.Examples_0_Description": {
    "message": "Indiquez combien de caractères sont dans le texte « Hello World »."
  },
  "Text.Length_Documentation.Examples_0_Code": {
    "message": "Text.Length(\"Hello World\")"
  },
  "Text.Length_Documentation.Examples_0_Result": {
    "message": "11"
  },
  "Text.Lower_Documentation.Name": {
    "message": "Text.Lower"
  },
  "Text.Lower_Documentation.Description": {
    "message": "Convertit tous les caractères en minuscules."
  },
  "Text.Lower_Documentation.LongDescription": {
    "message": "Retourne le résultat de la conversion de tous les caractères en <code>text</code> en minuscules. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Text.Lower_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Lower_Documentation.Examples_0_Description": {
    "message": "Obtient la version en minuscule de « AbCd »."
  },
  "Text.Lower_Documentation.Examples_0_Code": {
    "message": "Text.Lower(\"AbCd\")"
  },
  "Text.Lower_Documentation.Examples_0_Result": {
    "message": "\"abcd\""
  },
  "Text.Proper_Documentation.Name": {
    "message": "Text.Proper"
  },
  "Text.Proper_Documentation.Description": {
    "message": "Met en majuscules la première lettre de chacun des mots."
  },
  "Text.Proper_Documentation.LongDescription": {
    "message": "Retourne le résultat de la mise en majuscules de la première lettre uniquement de chaque mot dans la valeur de texte <code>text</code>. Toutes les autres lettres sont retournées en minuscules. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Text.Proper_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Proper_Documentation.Examples_0_Description": {
    "message": "Utilise <code>Text.Proper</code> dans une phrase simple."
  },
  "Text.Proper_Documentation.Examples_0_Code": {
    "message": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")"
  },
  "Text.Proper_Documentation.Examples_0_Result": {
    "message": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
  },
  "Text.Reverse_Documentation.Name": {
    "message": "Text.Reverse"
  },
  "Text.Reverse_Documentation.Description": {
    "message": "Text.Reverse"
  },
  "Text.Reverse_Documentation.LongDescription": {
    "message": "Inverse le <code>text</code> fourni."
  },
  "Text.Reverse_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Reverse_Documentation.Examples_0_Description": {
    "message": "Inversez le texte \"123\"."
  },
  "Text.Reverse_Documentation.Examples_0_Code": {
    "message": "Text.Reverse(\"123\")"
  },
  "Text.Reverse_Documentation.Examples_0_Result": {
    "message": "\"321\""
  },
  "Text.ToBinary_Documentation.Name": {
    "message": "Text.ToBinary"
  },
  "Text.ToBinary_Documentation.Description": {
    "message": "Code le texte sous forme binaire."
  },
  "Text.ToBinary_Documentation.LongDescription": {
    "message": "Code la valeur de texte spécifiée, <code>text</code>, en une valeur binaire à l'aide du <code>encoding</code> spécifié."
  },
  "Text.ToBinary_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Text.ToList_Documentation.Name": {
    "message": "Text.ToList"
  },
  "Text.ToList_Documentation.Description": {
    "message": "Retourne une liste de valeurs de caractère depuis la valeur de texte spécifiée."
  },
  "Text.ToList_Documentation.LongDescription": {
    "message": "Retourne une liste de valeurs de caractère depuis la valeur de texte spécifiée <code>text</code>."
  },
  "Text.ToList_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Text.ToList_Documentation.Examples_0_Description": {
    "message": "Crée une liste de valeurs de caractère à partir du texte « Hello World »."
  },
  "Text.ToList_Documentation.Examples_0_Code": {
    "message": "Text.ToList(\"Hello World\")"
  },
  "Text.ToList_Documentation.Examples_0_Result": {
    "message": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
  },
  "Text.Trim_Documentation.Name": {
    "message": "Text.Trim"
  },
  "Text.Trim_Documentation.Description": {
    "message": "Supprime tous les espaces de début et de fin."
  },
  "Text.Trim_Documentation.LongDescription": {
    "message": "Retourne le résultat de la suppression de tous les espaces de début et de fin d'une valeur de texte <code>text</code>."
  },
  "Text.Trim_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Trim_Documentation.Examples_0_Description": {
    "message": "Supprime les espaces de début et de fin de «      a b c d     »."
  },
  "Text.Trim_Documentation.Examples_0_Code": {
    "message": "Text.Trim(\"     a b c d    \")"
  },
  "Text.Trim_Documentation.Examples_0_Result": {
    "message": "\"a b c d\""
  },
  "Text.TrimEnd_Documentation.Name": {
    "message": "Text.TrimEnd"
  },
  "Text.TrimEnd_Documentation.Description": {
    "message": "Supprime tous les espaces de fin."
  },
  "Text.TrimEnd_Documentation.LongDescription": {
    "message": "Retourne le résultat de la suppression de tous les espaces de fin d'une valeur de texte <code>text</code>."
  },
  "Text.TrimEnd_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.TrimEnd_Documentation.Examples_0_Description": {
    "message": "Supprime les espaces de fin de «      a b c d     »."
  },
  "Text.TrimEnd_Documentation.Examples_0_Code": {
    "message": "Text.TrimEnd(\"     a b c d    \")"
  },
  "Text.TrimEnd_Documentation.Examples_0_Result": {
    "message": "\"     a b c d\""
  },
  "Text.TrimStart_Documentation.Name": {
    "message": "Text.TrimStart"
  },
  "Text.TrimStart_Documentation.Description": {
    "message": "Supprime tous les espaces de début."
  },
  "Text.TrimStart_Documentation.LongDescription": {
    "message": "Retourne le résultat de la suppression de tous les espaces de début d'une valeur de texte <code>text</code>."
  },
  "Text.TrimStart_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.TrimStart_Documentation.Examples_0_Description": {
    "message": "Supprime les espaces de début de «      a b c d     »."
  },
  "Text.TrimStart_Documentation.Examples_0_Code": {
    "message": "Text.TrimStart(\"   a b c d    \")"
  },
  "Text.TrimStart_Documentation.Examples_0_Result": {
    "message": "\"a b c d    \""
  },
  "Text.Upper_Documentation.Name": {
    "message": "Text.Upper"
  },
  "Text.Upper_Documentation.Description": {
    "message": "Convertit tous les caractères en majuscules."
  },
  "Text.Upper_Documentation.LongDescription": {
    "message": "Retourne le résultat de la conversion de tous les caractères de <code>text</code> en majuscules. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Text.Upper_Documentation.Category": {
    "message": "Text.Transformations"
  },
  "Text.Upper_Documentation.Examples_0_Description": {
    "message": "Obtient la version en majuscules de « aBcD »."
  },
  "Text.Upper_Documentation.Examples_0_Code": {
    "message": "Text.Upper(\"aBcD\")"
  },
  "Text.Upper_Documentation.Examples_0_Result": {
    "message": "\"ABCD\""
  },
  "Time.EndOfHour_Documentation.Name": {
    "message": "Time.EndOfHour"
  },
  "Time.EndOfHour_Documentation.Description": {
    "message": "Renvoie la fin de l’heure."
  },
  "Time.EndOfHour_Documentation.LongDescription": {
    "message": "Renvoie la fin de l'heure représentée par <code>dateTime</code>, y compris les fractions de seconde. Les informations de fuseau horaire sont conservées.\r\n      <ul>\r\n        <li><code>dateTime</code> : une valeur <code>time</code>, <code>datetime</code>, ou <code>datetimezone</code> à partir de laquelle la fin de l’heure est calculée.</li>\r\n      </ul>"
  },
  "Time.EndOfHour_Documentation.Category": {
    "message": "Date"
  },
  "Time.EndOfHour_Documentation.Examples_0_Description": {
    "message": "Obtient la fin de l'heure pour 5/14/2011 05:00:00 PM."
  },
  "Time.EndOfHour_Documentation.Examples_0_Code": {
    "message": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))"
  },
  "Time.EndOfHour_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
  },
  "Time.EndOfHour_Documentation.Examples_1_Description": {
    "message": "Obtient la fin de l'heure pour 5/17/2011 05:00:00 PM -7:00."
  },
  "Time.EndOfHour_Documentation.Examples_1_Code": {
    "message": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))"
  },
  "Time.EndOfHour_Documentation.Examples_1_Result": {
    "message": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
  },
  "Time.From_Documentation.Name": {
    "message": "Time.From"
  },
  "Time.From_Documentation.Description": {
    "message": "Crée une heure à partir de la valeur spécifiée."
  },
  "Time.From_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>time</code> du <code>value</code> spécifié. Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\").\r\nSi le <code>value</code> spécifié est <code>null</code>, <code>Time.From</code> retourne <code>null</code>. Si le <code>value</code> spécifié est <code>time</code>, <code>value</code> est retourné. Les valeurs des types suivants peuvent être converties en valeur <code>time</code> : \r\n      <ul>\r\n        <li><code>text</code> : valeur <code>time</code> à partir de la représentation de texte. Référez-vous à <code>Time.FromText</code> pour plus de détails.</li>\r\n        <li><code>datetime</code> : composant d'heure de <code>value</code>.</li>\r\n        <li><code>datetimezone</code> : composant d'heure du datetime local équivalent à <code>value</code>.</li>\r\n        <li><code>number</code> : <code>time</code> équivalente au nombre de jours entiers ou de fractions de jours exprimés par <code>value</code>. Si <code>value</code> est négatif, ou supérieur ou égale à 1, une erreur est retournée.</li>\r\n      </ul>\r\nSi <code>value</code> est d'un autre type, une erreur est retournée."
  },
  "Time.From_Documentation.Category": {
    "message": "Time"
  },
  "Time.From_Documentation.Examples_0_Description": {
    "message": "Convertit <code>0.7575</code> en une valeur <code>time</code>."
  },
  "Time.From_Documentation.Examples_0_Code": {
    "message": "Time.From(0.7575)"
  },
  "Time.From_Documentation.Examples_0_Result": {
    "message": "#time(18, 10, 48)"
  },
  "Time.From_Documentation.Examples_1_Description": {
    "message": "Convertit <code>#datetime(1899, 12, 30, 06, 45, 12)</code> en une valeur <code>time</code>."
  },
  "Time.From_Documentation.Examples_1_Code": {
    "message": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))"
  },
  "Time.From_Documentation.Examples_1_Result": {
    "message": "#time(06, 45, 12)"
  },
  "Time.FromText_Documentation.Name": {
    "message": "Time.FromText"
  },
  "Time.FromText_Documentation.Description": {
    "message": "Crée une heure à partir de formats d'heure locaux, universels et personnalisés."
  },
  "Time.FromText_Documentation.LongDescription": {
    "message": "Crée une valeur <code>time</code> à partir d'une représentation textuelle, <code>text</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Omettre ce champ ou fournir <code>null</code> entraînera l'analyse de l'heure en faisant de son mieux.</li>\r\n   <li><code>Culture</code> : lorsque <code>Format</code> est non nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"tt\"</code> est <code>\"AM\" ou \"PM\"</code>, alors que dans <code>\"ar- EG\"</code> <code>\"tt\"</code> est <code>\"õ\" ou \"م\"</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les workflows hérités, <code>options</code> peut également être une valeur de texte. Cela a le même comportement que si <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>."
  },
  "Time.FromText_Documentation.Category": {
    "message": "Time"
  },
  "Time.FromText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>\"10:12:31am\"</code> dans une valeur d'heure."
  },
  "Time.FromText_Documentation.Examples_0_Code": {
    "message": "Time.FromText(\"10:12:31am\")"
  },
  "Time.FromText_Documentation.Examples_0_Result": {
    "message": "#time(10, 12, 31)"
  },
  "Time.FromText_Documentation.Examples_1_Description": {
    "message": "Convertit <code>\"1012\"</code> en valeur de type time."
  },
  "Time.FromText_Documentation.Examples_1_Code": {
    "message": "Time.FromText(\"1012\")"
  },
  "Time.FromText_Documentation.Examples_1_Result": {
    "message": "#time(10, 12, 00)"
  },
  "Time.FromText_Documentation.Examples_2_Description": {
    "message": "Convertit <code>\"10\"</code> en valeur de type time."
  },
  "Time.FromText_Documentation.Examples_2_Code": {
    "message": "Time.FromText(\"10\")"
  },
  "Time.FromText_Documentation.Examples_2_Result": {
    "message": "#time(10, 00, 00)"
  },
  "Time.Hour_Documentation.Name": {
    "message": "Time.Hour"
  },
  "Time.Hour_Documentation.Description": {
    "message": "Retourne le composant d'heure."
  },
  "Time.Hour_Documentation.LongDescription": {
    "message": "Retourne le composant d'heure de la valeur <code>time</code>, <code>datetime</code> ou <code>datetimezone</code> fournie, <code>dateTime</code>."
  },
  "Time.Hour_Documentation.Category": {
    "message": "Time"
  },
  "Time.Hour_Documentation.Examples_0_Description": {
    "message": "Recherche l'heure dans #datetime(2011, 12, 31, 9, 15, 36)."
  },
  "Time.Hour_Documentation.Examples_0_Code": {
    "message": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))"
  },
  "Time.Hour_Documentation.Examples_0_Result": {
    "message": "9"
  },
  "Time.Minute_Documentation.Name": {
    "message": "Time.Minute"
  },
  "Time.Minute_Documentation.Description": {
    "message": "Retourne le composant des minutes."
  },
  "Time.Minute_Documentation.LongDescription": {
    "message": "Retourne le composant des minutes de la valeur <code>time</code>, <code>datetime</code> ou <code>datetimezone</code> fournie, <code>dateTime</code>."
  },
  "Time.Minute_Documentation.Category": {
    "message": "Time"
  },
  "Time.Minute_Documentation.Examples_0_Description": {
    "message": "Recherche la minute dans #datetime(2011, 12, 31, 9, 15, 36)."
  },
  "Time.Minute_Documentation.Examples_0_Code": {
    "message": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))"
  },
  "Time.Minute_Documentation.Examples_0_Result": {
    "message": "15"
  },
  "Time.Second_Documentation.Name": {
    "message": "Time.Second"
  },
  "Time.Second_Documentation.Description": {
    "message": "Retourne le composant des secondes."
  },
  "Time.Second_Documentation.LongDescription": {
    "message": "Retourne le composant des secondes de la valeur <code>time</code>, <code>datetime</code> ou <code>datetimezone</code> fournie, <code>dateTime</code>."
  },
  "Time.Second_Documentation.Category": {
    "message": "Time"
  },
  "Time.Second_Documentation.Examples_0_Description": {
    "message": "Rechercher la deuxième valeur d'une valeur datetime."
  },
  "Time.Second_Documentation.Examples_0_Code": {
    "message": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))"
  },
  "Time.Second_Documentation.Examples_0_Result": {
    "message": "36.5"
  },
  "Time.StartOfHour_Documentation.Name": {
    "message": "Time.StartOfHour"
  },
  "Time.StartOfHour_Documentation.Description": {
    "message": "Renvoie le début de l’heure."
  },
  "Time.StartOfHour_Documentation.LongDescription": {
    "message": "Renvoie le début de l’heure représenté par <code>dateTime</code>.\r\n    <code>dateTime</code> doit être une valeur <code>time</code>, <code>datetime</code>, ou <code>datetimezone</code>."
  },
  "Time.StartOfHour_Documentation.Category": {
    "message": "Date"
  },
  "Time.StartOfHour_Documentation.Examples_0_Description": {
    "message": "Recherchez le début de l’heure du 10 octobre 2011, 08:10:32."
  },
  "Time.StartOfHour_Documentation.Examples_0_Code": {
    "message": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))"
  },
  "Time.StartOfHour_Documentation.Examples_0_Result": {
    "message": "#datetime(2011, 10, 10, 8, 0, 0)"
  },
  "Time.ToRecord_Documentation.Name": {
    "message": "Time.ToRecord"
  },
  "Time.ToRecord_Documentation.Description": {
    "message": "Retourne un enregistrement qui contient les parties de la valeur d'heure."
  },
  "Time.ToRecord_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui contient les parties de la valeur d'heure spécifiée, <code>time</code>.\r\n <ul>\r\n        <li><code>time</code> : valeur <code>time</code> à partir de laquelle l'enregistrement des parties doit être calculé.</li>\r\n      </ul>"
  },
  "Time.ToRecord_Documentation.Category": {
    "message": "Time"
  },
  "Time.ToRecord_Documentation.Examples_0_Description": {
    "message": "Convertit la valeur <code>#time(11, 56, 2)</code> dans un enregistrement contenant les valeurs d'heure."
  },
  "Time.ToRecord_Documentation.Examples_0_Code": {
    "message": "Time.ToRecord(#time(11, 56, 2))"
  },
  "Time.ToRecord_Documentation.Examples_0_Result": {
    "message": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
  },
  "Time.ToText_Documentation.Name": {
    "message": "Time.ToText"
  },
  "Time.ToText_Documentation.Description": {
    "message": "Retourne une représentation textuelle de la valeur d’heure."
  },
  "Time.ToText_Documentation.LongDescription": {
    "message": "Renvoie une représentation textuelle de <code>time</code>. Un paramètre facultatif <code>record</code>, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. <code>culture</code> n'est utilisé que pour les workflows hérités. Le <code>record</code> peut contenir les champs suivants : \r\n<ul>\r\n   <li><code>Format</code> : une valeur <code>text</code> indiquant le format à utiliser. Pour plus de détails, accédez à https://go.microsoft.com/fwlink/?linkid=2180104 et https://go.microsoft.com/fwlink/?linkid=2180105. Omettre ce champ ou fournir <code>null</code> entraînera le formatage de la date en utilisant la valeur par défaut définie par <code>Culture</code>.</li>\r\n   <li><code>Culture</code> : Quand <code>Format</code> n'est pas nul, <code>Culture</code> contrôle certains spécificateurs de format. Par exemple, dans <code>\"en-US\"</code> <code>\"tt\"</code> est <code>\"AM\" ou \"PM\"</code>, alors que dans <code>\"ar- EG\"</code> <code>\"tt\"</code> est <code>\"õ\" ou \"م\"</code>. Lorsque <code>Format</code> est <code>null</code>, <code>Culture</code> contrôle le format par défaut à utiliser. Lorsque <code>Culture</code> est <code>null</code> ou omis, <code>Culture.Current</code> est utilisé.</li>\r\n</ul>\r\nPour prendre en charge les flux de travail hérités, <code>options</code> et <code>culture</code> peut également être des valeurs de texte. Cela a le même comportement que si <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>."
  },
  "Time.ToText_Documentation.Category": {
    "message": "Time"
  },
  "Time.ToText_Documentation.Examples_0_Description": {
    "message": "Convertit <code>#time(01, 30, 25) </code> en une valeur <code>texte</code>. <i>la sortie des résultats peut varier en fonction de la culture actuelle.</i>"
  },
  "Time.ToText_Documentation.Examples_0_Code": {
    "message": "Time.ToText(#time(11, 56, 2))"
  },
  "Time.ToText_Documentation.Examples_0_Result": {
    "message": "\"11:56 AM\""
  },
  "Time.ToText_Documentation.Examples_1_Description": {
    "message": "Convertir à l’aide d’un format personnalisé et de la culture allemande"
  },
  "Time.ToText_Documentation.Examples_1_Code": {
    "message": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])"
  },
  "Time.ToText_Documentation.Examples_1_Result": {
    "message": "\"11:56\""
  },
  "Time.ToText_Documentation.Examples_2_Description": {
    "message": "Convertir en utilisant le format d’heure standard"
  },
  "Time.ToText_Documentation.Examples_2_Code": {
    "message": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])"
  },
  "Time.ToText_Documentation.Examples_2_Result": {
    "message": "\"11:56:02\""
  },
  "Type.ClosedRecord_Documentation.Name": {
    "message": "Type.ClosedRecord"
  },
  "Type.ClosedRecord_Documentation.Description": {
    "message": "Retourne une version fermée du type d'enregistrement donné (ou le même type, s'il est déjà fermé)."
  },
  "Type.ClosedRecord_Documentation.LongDescription": {
    "message": "Retourne une version fermée du <code>record</code> <code>type</code> donné (ou le même type, s'il est déjà fermé)."
  },
  "Type.ClosedRecord_Documentation.Category": {
    "message": "Type"
  },
  "Type.ClosedRecord_Documentation.Examples_0_Description": {
    "message": "Créez une version fermée de <code>type [ A = number,…]</code>."
  },
  "Type.ClosedRecord_Documentation.Examples_0_Code": {
    "message": "Type.ClosedRecord(type [A = number, ...])"
  },
  "Type.ClosedRecord_Documentation.Examples_0_Result": {
    "message": "type [A = number]"
  },
  "Type.Facets_Documentation.Name": {
    "message": "Type.Facets"
  },
  "Type.Facets_Documentation.Description": {
    "message": "Retourne les facettes d'un type."
  },
  "Type.Facets_Documentation.LongDescription": {
    "message": "Retourne un enregistrement contenant les facettes de <code>type</code>."
  },
  "Type.Facets_Documentation.Category": {
    "message": "Type"
  },
  "Type.FunctionParameters_Documentation.Name": {
    "message": "Type.FunctionParameters"
  },
  "Type.FunctionParameters_Documentation.Description": {
    "message": "Retourne un enregistrement avec des valeurs de champ définies sur le nom des paramètres d'un type de fonction, et leurs valeurs définies sur les types correspondants."
  },
  "Type.FunctionParameters_Documentation.LongDescription": {
    "message": "Retourne un enregistrement avec des valeurs de champ définies sur le nom des paramètres de <code>type</code>, et leurs valeurs définies sur les types correspondants."
  },
  "Type.FunctionParameters_Documentation.Category": {
    "message": "Type"
  },
  "Type.FunctionParameters_Documentation.Examples_0_Description": {
    "message": "Trouvez les types des paramètres de la fonction <code>(x as number, y as text)</code>."
  },
  "Type.FunctionParameters_Documentation.Examples_0_Code": {
    "message": "Type.FunctionParameters(type function (x as number, y as text) as any)"
  },
  "Type.FunctionParameters_Documentation.Examples_0_Result": {
    "message": "[x = type number, y = type text]"
  },
  "Type.FunctionRequiredParameters_Documentation.Name": {
    "message": "Type.FunctionRequiredParameters"
  },
  "Type.FunctionRequiredParameters_Documentation.Description": {
    "message": "Retourne un nombre indiquant le nombre minimum de paramètres requis pour appeler le type de fonction."
  },
  "Type.FunctionRequiredParameters_Documentation.LongDescription": {
    "message": "Retourne un nombre indiquant le nombre minimum de paramètres requis pour appeler le <code>type</code> d'entrée de la fonction."
  },
  "Type.FunctionRequiredParameters_Documentation.Category": {
    "message": "Type"
  },
  "Type.FunctionRequiredParameters_Documentation.Examples_0_Description": {
    "message": "Trouvez le nombre de paramètres requis de la fonction <code>(x as number, optional y as text)</code>."
  },
  "Type.FunctionRequiredParameters_Documentation.Examples_0_Code": {
    "message": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)"
  },
  "Type.FunctionRequiredParameters_Documentation.Examples_0_Result": {
    "message": "1"
  },
  "Type.FunctionReturn_Documentation.Name": {
    "message": "Type.FunctionReturn"
  },
  "Type.FunctionReturn_Documentation.Description": {
    "message": "Retourne un type retourné par un type de fonction."
  },
  "Type.FunctionReturn_Documentation.LongDescription": {
    "message": "Retourne un type retourné par une fonction <code>type</code>."
  },
  "Type.FunctionReturn_Documentation.Category": {
    "message": "Type"
  },
  "Type.FunctionReturn_Documentation.Examples_0_Description": {
    "message": "Trouvez le type de retour de <code>() as any)</code>."
  },
  "Type.FunctionReturn_Documentation.Examples_0_Code": {
    "message": "Type.FunctionReturn(type function () as any)"
  },
  "Type.FunctionReturn_Documentation.Examples_0_Result": {
    "message": "type any"
  },
  "Type.IsNullable_Documentation.Name": {
    "message": "Type.IsNullable"
  },
  "Type.IsNullable_Documentation.Description": {
    "message": "Retourne true si un type est de type nullable ; dans le cas contraire, false."
  },
  "Type.IsNullable_Documentation.LongDescription": {
    "message": "Retourne <code>true</code> si un type est un type <code>nullable</code> ; dans le cas contraire, <code>false</code>."
  },
  "Type.IsNullable_Documentation.Category": {
    "message": "Type"
  },
  "Type.IsNullable_Documentation.Examples_0_Description": {
    "message": "Déterminez si <code>number</code> est nullable."
  },
  "Type.IsNullable_Documentation.Examples_0_Code": {
    "message": "Type.IsNullable(type number)"
  },
  "Type.IsNullable_Documentation.Examples_0_Result": {
    "message": "false"
  },
  "Type.IsNullable_Documentation.Examples_1_Description": {
    "message": "Déterminez si <code>type nullable number</code> est nullable."
  },
  "Type.IsNullable_Documentation.Examples_1_Code": {
    "message": "Type.IsNullable(type nullable number)"
  },
  "Type.IsNullable_Documentation.Examples_1_Result": {
    "message": "true"
  },
  "Type.IsOpenRecord_Documentation.Name": {
    "message": "Type.IsOpenRecord"
  },
  "Type.IsOpenRecord_Documentation.Description": {
    "message": "Retourne une valeur qui indique si un type d'enregistrement est ouvert."
  },
  "Type.IsOpenRecord_Documentation.LongDescription": {
    "message": "Retourne une valeur <code>logical</code> qui indique si un enregistrement <code>type</code> est ouvert."
  },
  "Type.IsOpenRecord_Documentation.Category": {
    "message": "Type"
  },
  "Type.IsOpenRecord_Documentation.Examples_0_Description": {
    "message": "Détermine si l'enregistrement <code>type [ A = number, ...]</code> est ouvert."
  },
  "Type.IsOpenRecord_Documentation.Examples_0_Code": {
    "message": "Type.IsOpenRecord(type [A = number, ...])"
  },
  "Type.IsOpenRecord_Documentation.Examples_0_Result": {
    "message": "true"
  },
  "Type.ListItem_Documentation.Name": {
    "message": "Type.ListItem"
  },
  "Type.ListItem_Documentation.Description": {
    "message": "Retourne un type d'élément d'un type de liste."
  },
  "Type.ListItem_Documentation.LongDescription": {
    "message": "Retourne un type d'élément d'une liste <code>type</code>."
  },
  "Type.ListItem_Documentation.Category": {
    "message": "Type"
  },
  "Type.ListItem_Documentation.Examples_0_Description": {
    "message": "Trouvez le type d'élément dans la liste <code>{number}</code>."
  },
  "Type.ListItem_Documentation.Examples_0_Code": {
    "message": "Type.ListItem(type {number})"
  },
  "Type.ListItem_Documentation.Examples_0_Result": {
    "message": "type number"
  },
  "Type.NonNullable_Documentation.Name": {
    "message": "Type.NonNullable"
  },
  "Type.NonNullable_Documentation.Description": {
    "message": "Retourne le type non nullable d'un type."
  },
  "Type.NonNullable_Documentation.LongDescription": {
    "message": "Retourne le type non <code>nullable</code> de <code>type</code>."
  },
  "Type.NonNullable_Documentation.Category": {
    "message": "Type"
  },
  "Type.NonNullable_Documentation.Examples_0_Description": {
    "message": "Retournez le type non nullable de <code>type nullable number</code>."
  },
  "Type.NonNullable_Documentation.Examples_0_Code": {
    "message": "Type.NonNullable(type nullable number)"
  },
  "Type.NonNullable_Documentation.Examples_0_Result": {
    "message": "type number"
  },
  "Type.OpenRecord_Documentation.Name": {
    "message": "Type.OpenRecord"
  },
  "Type.OpenRecord_Documentation.Description": {
    "message": "Retourne une version ouverte du type d'enregistrement donné (ou le même type, s'il est déjà ouvert)."
  },
  "Type.OpenRecord_Documentation.LongDescription": {
    "message": "Retourne une version ouverte du <code>record</code> <code>type</code> donné (ou le même type, s'il est déjà ouvert)."
  },
  "Type.OpenRecord_Documentation.Category": {
    "message": "Type"
  },
  "Type.OpenRecord_Documentation.Examples_0_Description": {
    "message": "Créez une version ouverte de <code>type [ A = number]</code>."
  },
  "Type.OpenRecord_Documentation.Examples_0_Code": {
    "message": "Type.OpenRecord(type [A = number])"
  },
  "Type.OpenRecord_Documentation.Examples_0_Result": {
    "message": "type [A = number, ...]"
  },
  "Type.RecordFields_Documentation.Name": {
    "message": "Type.RecordFields"
  },
  "Type.RecordFields_Documentation.Description": {
    "message": "Retourne un enregistrement décrivant les champs d'un type d'enregistrement avec chaque champ du type d'enregistrement retourné ayant un nom et une valeur correspondants."
  },
  "Type.RecordFields_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui décrit les champs d'un enregistrement <code>type</code>. Chaque champ du type d'enregistrement retourné a un nom et une valeur correspondants, sous la forme d'un enregistrement <code>[ Type = type, Optional = logical ]</code>."
  },
  "Type.RecordFields_Documentation.Category": {
    "message": "Type"
  },
  "Type.RecordFields_Documentation.Examples_0_Description": {
    "message": "Trouvez le nom et la valeur de l'enregistrement <code>[ A = number, optional B = any]</code>."
  },
  "Type.RecordFields_Documentation.Examples_0_Code": {
    "message": "Type.RecordFields(type [A = number, optional B = any])"
  },
  "Type.RecordFields_Documentation.Examples_0_Result": {
    "message": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
  },
  "Type.TableKeys_Documentation.Name": {
    "message": "Type.TableKeys"
  },
  "Type.TableKeys_Documentation.Description": {
    "message": "Retourne la liste éventuellement vide de clés pour le type de table spécifié."
  },
  "Type.TableKeys_Documentation.LongDescription": {
    "message": "Retourne la liste éventuellement vide de clés pour le type de table spécifié."
  },
  "Type.TableKeys_Documentation.Category": {
    "message": "Type"
  },
  "Type.TableRow_Documentation.Name": {
    "message": "Type.TableRow"
  },
  "Type.TableRow_Documentation.Description": {
    "message": "Renvoie le type de ligne du type de table."
  },
  "Type.TableRow_Documentation.LongDescription": {
    "message": "Retourne le type de ligne du type de table spécifié. Le résultat sera toujours un type d’enregistrement."
  },
  "Type.TableRow_Documentation.Category": {
    "message": "Type"
  },
  "Type.TableRow_Documentation.Examples_0_Description": {
    "message": "Retourne les informations de type de ligne pour une table simple."
  },
  "Type.TableRow_Documentation.Examples_0_Code": {
    "message": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)"
  },
  "Type.TableRow_Documentation.Examples_0_Result": {
    "message": "[Column1 = [Type = type any, Optional = false]]"
  },
  "Type.Union_Documentation.Name": {
    "message": "Type.Union"
  },
  "Type.Union_Documentation.Description": {
    "message": "Retourne l'union d'une liste de types."
  },
  "Type.Union_Documentation.LongDescription": {
    "message": "Retourne l'union d'une liste de types <code>types</code>."
  },
  "Type.Union_Documentation.Category": {
    "message": "Type"
  },
  "Uri.BuildQueryString_Documentation.Name": {
    "message": "Uri.BuildQueryString"
  },
  "Uri.BuildQueryString_Documentation.Description": {
    "message": "Assemblez un enregistrement dans une chaîne de requête URI."
  },
  "Uri.BuildQueryString_Documentation.LongDescription": {
    "message": "Assemblez l'enregistrement <code>query</code> dans une chaîne de requête URI, en utilisant des caractères d'échappement si besoin."
  },
  "Uri.BuildQueryString_Documentation.Category": {
    "message": "Uri"
  },
  "Uri.BuildQueryString_Documentation.Examples_0_Description": {
    "message": "Encodez une chaîne de requête qui contient des caractères spéciaux."
  },
  "Uri.BuildQueryString_Documentation.Examples_0_Code": {
    "message": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])"
  },
  "Uri.BuildQueryString_Documentation.Examples_0_Result": {
    "message": "\"a=1&b=%2B%24\""
  },
  "Uri.EscapeDataString_Documentation.Name": {
    "message": "Uri.EscapeDataString"
  },
  "Uri.EscapeDataString_Documentation.Description": {
    "message": "Encode les caractères spéciaux conformément à la spécification RFC 3986."
  },
  "Uri.EscapeDataString_Documentation.LongDescription": {
    "message": "Encode les caractères spéciaux dans l'entrée <code>data</code> conformément aux règles de la spécification RFC 3986."
  },
  "Uri.EscapeDataString_Documentation.Category": {
    "message": "Uri"
  },
  "Uri.EscapeDataString_Documentation.Examples_0_Description": {
    "message": "Encode les caractères spéciaux dans \"+money$\"."
  },
  "Uri.EscapeDataString_Documentation.Examples_0_Code": {
    "message": "Uri.EscapeDataString(\"+money$\")"
  },
  "Uri.EscapeDataString_Documentation.Examples_0_Result": {
    "message": "\"%2Bmoney%24\""
  },
  "Uri.Parts_Documentation.Name": {
    "message": "Uri.Parts"
  },
  "Uri.Parts_Documentation.Description": {
    "message": "Retourne les parties de l'URI absolu d'entrée en tant qu'enregistrement."
  },
  "Uri.Parts_Documentation.LongDescription": {
    "message": "Retourne les parties de l'<code>absoluteUri</code> d'entrée comme un enregistrement contenant des valeurs telles que le schéma, l'hôte, le port, le chemin d'accès, la requête, le fragment, le nom d'utilisateur et le mot de passe."
  },
  "Uri.Parts_Documentation.Category": {
    "message": "Uri"
  },
  "Uri.Parts_Documentation.Examples_0_Description": {
    "message": "Recherche les parties de l'URI absolu « www.adventure-works.com »."
  },
  "Uri.Parts_Documentation.Examples_0_Code": {
    "message": "Uri.Parts(\"www.adventure-works.com\")"
  },
  "Uri.Parts_Documentation.Examples_0_Result": {
    "message": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
  },
  "Uri.Parts_Documentation.Examples_1_Description": {
    "message": "Décodez une chaîne encodée en pourcentage."
  },
  "Uri.Parts_Documentation.Examples_1_Code": {
    "message": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")"
  },
  "Uri.Parts_Documentation.Examples_1_Result": {
    "message": "\"+money$\""
  },
  "VSTS.AccountContents_Documentation.Description": {
    "message": "Entrez l'URL de votre service Azure DevOps Analytics."
  },
  "VSTS.AccountContents_Documentation.DisplayName": {
    "message": "VSTS"
  },
  "VSTS.AccountContents_Documentation.Caption": {
    "message": "VSTS.AccountContents"
  },
  "VSTS.AccountContents_Documentation.Name": {
    "message": "VSTS.AccountContents"
  },
  "VSTS.AccountContents_Documentation.LongDescription": {
    "message": "Retourne le contenu téléchargé à partir de l'URL du service Azure DevOps Analytics sous forme de valeur binaire. Cette fonction utilise des informations d'identification différentes pour chaque organisation."
  },
  "VSTS.Contents_Documentation.Description": {
    "message": "Entrez l'URL de votre service Azure DevOps Analytics."
  },
  "VSTS.Contents_Documentation.DisplayName": {
    "message": "VSTS"
  },
  "VSTS.Contents_Documentation.Caption": {
    "message": "VSTS.Contents"
  },
  "VSTS.Contents_Documentation.Name": {
    "message": "VSTS.Contents"
  },
  "VSTS.Contents_Documentation.LongDescription": {
    "message": "Retourne le contenu téléchargé à partir de l'URL du service Azure DevOps Analytics sous forme de valeur binaire. Cette fonction utilise des informations d'identification générales pour toutes les organisations accessibles."
  },
  "Value.Alternates_Documentation.Name": {
    "message": "Value.Alternates"
  },
  "Value.Alternates_Documentation.Description": {
    "message": "Exprime les autres plans de requête."
  },
  "Value.Alternates_Documentation.LongDescription": {
    "message": "Exprime les autres plans de requête dans une expression de plan de requête obtenue via Value.Expression(Value.Optimize(...)). Non destiné à d’autres utilisations."
  },
  "Value.Alternates_Documentation.Category": {
    "message": "Expression"
  },
  "Value.Expression_Documentation.Name": {
    "message": "Value.Expression"
  },
  "Value.Expression_Documentation.Description": {
    "message": "Retourne une arborescence de syntaxe abstraite (AST) qui représente l’expression de la valeur."
  },
  "Value.Expression_Documentation.LongDescription": {
    "message": "Retourne une arborescence de syntaxe abstraite (AST) qui représente l’expression de la valeur"
  },
  "Value.Expression_Documentation.Category": {
    "message": "Expression"
  },
  "Value.Firewall_Documentation.Name": {
    "message": "Value.Firewall"
  },
  "Value.Firewall_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Value.Firewall_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Value.Firewall_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Value.FromText_Documentation.Name": {
    "message": "Value.FromText"
  },
  "Value.FromText_Documentation.Description": {
    "message": "Crée une valeur fortement typée à partir d'une représentation de texte."
  },
  "Value.FromText_Documentation.LongDescription": {
    "message": "Décode une valeur à partir d'une représentation de texte, <code>text</code>, et l'interprète comme une valeur de type approprié.\r\n    <code>Value.FromText</code> prend une valeur de texte et retourne un numéro, une valeur logique, une valeur null, une valeur datetime, une valeur de durée ou une valeur de texte. La valeur de texte vide est interprétée comme une valeur NULL.\r\n    Vous pouvez également fournir un <code>culture</code> facultatif (par exemple, \"fr-fr\")."
  },
  "Value.FromText_Documentation.Category": {
    "message": "Text.Conversions from and to text"
  },
  "Value.Lineage_Documentation.Name": {
    "message": "Value.Lineage"
  },
  "Value.Lineage_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Value.Lineage_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Value.Lineage_Documentation.Category": {
    "message": "Expression"
  },
  "Value.Metadata_Documentation.Name": {
    "message": "Value.Metadata"
  },
  "Value.Metadata_Documentation.Description": {
    "message": "Retourne un enregistrement qui contient les métadonnées de l'entrée."
  },
  "Value.Metadata_Documentation.LongDescription": {
    "message": "Retourne un enregistrement qui contient les métadonnées de l'entrée."
  },
  "Value.Metadata_Documentation.Category": {
    "message": "Metadata"
  },
  "Value.Optimize_Documentation.Name": {
    "message": "Value.Optimize"
  },
  "Value.Optimize_Documentation.Description": {
    "message": "Signale Value.Expression pour renvoyer l’expression optimisée d’une valeur."
  },
  "Value.Optimize_Documentation.LongDescription": {
    "message": "En cas d’utilisation dans Value.Expression, si <code>value</code> représente une requête qui peut être optimisée, cette fonction indique que l’expression optimisée doit être retournée. Sinon, <code>value</code> est transmis sans effet."
  },
  "Value.Optimize_Documentation.Category": {
    "message": "Expression"
  },
  "Value.RemoveMetadata_Documentation.Name": {
    "message": "Value.RemoveMetadata"
  },
  "Value.RemoveMetadata_Documentation.Description": {
    "message": "Supprime l'entrée de métadonnées."
  },
  "Value.RemoveMetadata_Documentation.LongDescription": {
    "message": "Supprime l'entrée de métadonnées."
  },
  "Value.RemoveMetadata_Documentation.Category": {
    "message": "Metadata"
  },
  "Value.ResourceExpression_Documentation.Name": {
    "message": "Value.ResourceExpression"
  },
  "Value.ResourceExpression_Documentation.Description": {
    "message": "Value.ResourceExpression"
  },
  "Value.ResourceExpression_Documentation.LongDescription": {
    "message": "Value.ResourceExpression"
  },
  "Value.ResourceExpression_Documentation.Category": {
    "message": ""
  },
  "Value.Type_Documentation.Name": {
    "message": "Value.Type"
  },
  "Value.Type_Documentation.Description": {
    "message": "Retourne le type d'une valeur donnée."
  },
  "Value.Type_Documentation.LongDescription": {
    "message": "Retourne le type d'une valeur donnée."
  },
  "Value.Type_Documentation.Category": {
    "message": "Values"
  },
  "Value.VersionIdentity_Documentation.Name": {
    "message": "Value.VersionIdentity"
  },
  "Value.VersionIdentity_Documentation.Description": {
    "message": "Value.VersionIdentity"
  },
  "Value.VersionIdentity_Documentation.LongDescription": {
    "message": "Value.VersionIdentity"
  },
  "Value.VersionIdentity_Documentation.Category": {
    "message": "Action"
  },
  "Value.ViewError_Documentation.Name": {
    "message": "Value.ViewError"
  },
  "Value.ViewError_Documentation.Description": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Value.ViewError_Documentation.LongDescription": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Value.ViewError_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Value.ViewFunction_Documentation.Name": {
    "message": "Value.ViewFunction"
  },
  "Value.ViewFunction_Documentation.Description": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Value.ViewFunction_Documentation.LongDescription": {
    "message": "Cette fonction est destinée à un usage interne uniquement."
  },
  "Value.ViewFunction_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Variable.Value_Documentation.Name": {
    "message": "Variable.Value"
  },
  "Variable.Value_Documentation.Description": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Variable.Value_Documentation.LongDescription": {
    "message": "Cette fonction est réservée à un usage interne uniquement."
  },
  "Variable.Value_Documentation.Category": {
    "message": "Values.Implementation"
  },
  "Web.BrowserContents_Documentation.Name": {
    "message": "Web.BrowserContents"
  },
  "Web.BrowserContents_Documentation.Description": {
    "message": "Retourne le code HTML de l’URL spécifiée, tel qu’il est affiché par un navigateur web."
  },
  "Web.BrowserContents_Documentation.LongDescription": {
    "message": "Renvoie le code HTML de l’enregistrement spécifié <code>url</code>, tel qu’il est affiché par un navigateur Web. Un paramètre d’enregistrement facultatif, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. L’enregistrement peut contenir les champs suivants :\r\n     <ul>\r\n        <li><code>ApiKeyName</code> : Si le site cible a une notion de clé API, ce paramètre peut être utilisé pour spécifier le nom (et non la valeur) du paramètre clé qui doit être utilisé dans l’URL. La valeur réelle de la clé est fournie dans l’identifiant.</li>\r\n        <li><code>WaitFor</code> : Spécifie une condition à attendre avant de télécharger le HTML, en plus d’attendre le chargement de la page (ce qui est toujours fait). Peut être un enregistrement contenant des champs Timeout et/ou Selector. Si seul un délai d’attente est spécifié, la fonction attendra le temps spécifié avant de télécharger le HTML. Si un sélecteur et un délai sont spécifiés, et que le délai s’écoule avant que le sélecteur n’existe sur la page, une erreur sera déclenchée. Si un sélecteur est spécifié sans délai d’attente, un délai d’attente par défaut de 30 secondes est appliqué.</li>\r\n      </ul>\r\n    "
  },
  "Web.BrowserContents_Documentation.Category": {
    "message": "Accès aux données"
  },
  "Web.BrowserContents_Documentation.Examples_0_Description": {
    "message": "Retourne le code HTML de https://microsoft.com."
  },
  "Web.BrowserContents_Documentation.Examples_0_Code": {
    "message": "Web.BrowserContents(\"https://microsoft.com\")"
  },
  "Web.BrowserContents_Documentation.Examples_0_Result": {
    "message": "\"<!DOCTYPE html><html xmlns=...\""
  },
  "Web.BrowserContents_Documentation.Examples_1_Description": {
    "message": "Retourne le code HTML de https://microsoft.com après avoir attendu l'existence d'un sélecteur CSS."
  },
  "Web.BrowserContents_Documentation.Examples_1_Code": {
    "message": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])"
  },
  "Web.BrowserContents_Documentation.Examples_1_Result": {
    "message": "\"<!DOCTYPE html><html xmlns=...\""
  },
  "Web.BrowserContents_Documentation.Examples_2_Description": {
    "message": "Retourne le code HTML de https://microsoft.com au bout de dix secondes."
  },
  "Web.BrowserContents_Documentation.Examples_2_Code": {
    "message": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])"
  },
  "Web.BrowserContents_Documentation.Examples_2_Result": {
    "message": "\"<!DOCTYPE html><html xmlns=...\""
  },
  "Web.BrowserContents_Documentation.Examples_3_Description": {
    "message": "Retourne le code HTML de https://microsoft.com après avoir attendu 10 secondes l'existence d'un sélecteur CSS."
  },
  "Web.BrowserContents_Documentation.Examples_3_Code": {
    "message": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])"
  },
  "Web.BrowserContents_Documentation.Examples_3_Result": {
    "message": "\"<!DOCTYPE html><html xmlns=...\""
  },
  "Web.Contents_Documentation.Name": {
    "message": "Web.Contents"
  },
  "Web.Contents_Documentation.Description": {
    "message": "Retourne le contenu téléchargé à partir de l'URL en tant que valeur binaire."
  },
  "Web.Contents_Documentation.LongDescription": {
    "message": "Retourne le contenu téléchargé à partir de <code>url</code> sous forme binaire. Un paramètre d’enregistrement facultatif, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. L’enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>Query</code> : Ajoutez par programmation des param&#232;tres de requ&#234;te &#224; l’URL sans vous soucier de l’&#233;chappement.</li>\r\n<li><code>ApiKeyName</code> : Si le site cible a une notion d’une cl&#233; API, ce param&#232;tre peut &#234;tre utilis&#233; pour sp&#233;cifier le nom (et non la valeur) du param&#232;tre de cl&#233; qui doit &#234;tre utilis&#233; dans l’URL. La valeur de cl&#233; r&#233;elle est fournie dans les informations d’identification.</li>\r\n<li><code>Headers</code> : Si vous sp&#233;cifiez cette valeur en tant qu’enregistrement, des en-t&#234;tes suppl&#233;mentaires sont fournies &#224; une requ&#234;te HTTP.</li>\r\n<li><code>Timeout</code> : Si vous sp&#233;cifiez cette valeur en tant que dur&#233;e, cela modifie le d&#233;lai d’expiration d’une requ&#234;te HTTP. La valeur par d&#233;faut est 100&#160;secondes.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Si vous sp&#233;cifiez cette valeur en tant que liste, les cl&#233;s d’en-t&#234;te HTTP sont exclues du calcul de la mise en cache des donn&#233;es.</li>\r\n<li><code>IsRetry</code> : Si vous sp&#233;cifiez la valeur logique true, toute r&#233;ponse existante est ignor&#233;e dans le cache lors de la r&#233;cup&#233;ration des donn&#233;es.</li>\r\n<li><code>ManualStatusHandling</code> : Si vous sp&#233;cifiez cette valeur en tant que liste, vous risquez d’emp&#234;cher toute gestion int&#233;gr&#233;e des requ&#234;tes HTTP dont la r&#233;ponse contient l’un de ces codes d’&#233;tat.</li>\r\n<li><code>RelativePath</code> : Si cette valeur est sp&#233;cifi&#233;e, le texte est ajout&#233; &#224; l’URL de base avant d’effectuer la demande.</li>\r\n<li><code>Content</code> : Si vous sp&#233;cifiez cette valeur, la requ&#234;te web devient POST au lieu de GET, en utilisant la valeur de l’option en tant que contenu de la requ&#234;te POST.</li>\r\n</ul>\r\n\r\n    La requête HTTP est effectuée sous la forme d’une requête GET (quand aucun contenu n’est spécifié) ou d’une requête POST (lorsqu’il existe un contenu). Les demandes POST ne peuvent être effectuées que de manière anonyme.\r\n    <br>\r\n    Les en-têtes de la réponse HTTP sont disponibles sous forme de métadonnées sur le résultat binaire. En dehors d’un contexte de connecteur de données personnalisé, seul un sous-ensemble d’en-têtes de réponse est disponible (pour des raisons de sécurité).\r\n    "
  },
  "Web.Contents_Documentation.Category": {
    "message": "Accessing data"
  },
  "Web.Contents_Documentation.Examples_0_Description": {
    "message": "Récupérez le contenu de <code>\"https://bing.com/search?q=Power+Query\"</code> en utilisant les options RelativePath et Query. Ces options peuvent être utilisées pour interroger dynamiquement une URL de base statique."
  },
  "Web.Contents_Documentation.Examples_0_Code": {
    "message": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )"
  },
  "Web.Contents_Documentation.Examples_0_Result": {
    "message": "binary"
  },
  "Web.Contents_Documentation.Examples_1_Description": {
    "message": "Effectuez une publication par rapport à une URL, en passant une charge utile JSON binaire et en analysant la réponse en tant que JSON."
  },
  "Web.Contents_Documentation.Examples_1_Code": {
    "message": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse"
  },
  "Web.Contents_Documentation.Examples_1_Result": {
    "message": "table"
  },
  "Web.Contents_Documentation.Examples_2_Description": {
    "message": "Connectez-vous à une URL sécurisée qui accepte une clé d’authentification dans le cadre de sa chaîne de requête. Au lieu de coder en dur la clé secrète dans M (ce qui risque de compromettre la sécurité), \r\n    la clé peut être fournie de manière sécurisée en spécifiant son nom (et non sa valeur) dans M, en choisissant l’authentification d’API web et en entrant la valeur de clé dans le cadre des informations d’identification de l’API web.\r\n    Lorsqu’il est utilisé de cette façon, l’exemple suivant génère une demande à <code>\"https://contoso.com/api/customers/get?api_key=******\"</code>."
  },
  "Web.Contents_Documentation.Examples_2_Code": {
    "message": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])"
  },
  "Web.Contents_Documentation.Examples_2_Result": {
    "message": "binary"
  },
  "Web.Headers_Documentation.Name": {
    "message": "Web.Headers"
  },
  "Web.Headers_Documentation.Description": {
    "message": "Retourne les en-têtes HTTP téléchargés à partir de l’URL sous forme de valeur d’enregistrement."
  },
  "Web.Headers_Documentation.LongDescription": {
    "message": "Retourne les en-têtes téléchargés à partir de <code>url</code> sous forme d’enregistrement. Un paramètre d’enregistrement facultatif, <code>options</code>, peut être fourni pour spécifier des propriétés supplémentaires. L’enregistrement peut contenir les champs suivants :\r\n    <ul>\r\n<li><code>Query</code> : Ajoutez par programmation des param&#232;tres de requ&#234;te &#224; l’URL sans vous soucier de l’&#233;chappement.</li>\r\n<li><code>ApiKeyName</code> : Si le site cible a une notion d’une cl&#233; API, ce param&#232;tre peut &#234;tre utilis&#233; pour sp&#233;cifier le nom (et non la valeur) du param&#232;tre de cl&#233; qui doit &#234;tre utilis&#233; dans l’URL. La valeur de cl&#233; r&#233;elle est fournie dans les informations d’identification.</li>\r\n<li><code>Headers</code> : Si vous sp&#233;cifiez cette valeur en tant qu’enregistrement, des en-t&#234;tes suppl&#233;mentaires sont fournies &#224; une requ&#234;te HTTP.</li>\r\n<li><code>Timeout</code> : Si vous sp&#233;cifiez cette valeur en tant que dur&#233;e, cela modifie le d&#233;lai d’expiration d’une requ&#234;te HTTP. La valeur par d&#233;faut est 100&#160;secondes.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Si vous sp&#233;cifiez cette valeur en tant que liste, les cl&#233;s d’en-t&#234;te HTTP sont exclues du calcul de la mise en cache des donn&#233;es.</li>\r\n<li><code>IsRetry</code> : Si vous sp&#233;cifiez la valeur logique true, toute r&#233;ponse existante est ignor&#233;e dans le cache lors de la r&#233;cup&#233;ration des donn&#233;es.</li>\r\n<li><code>ManualStatusHandling</code> : Si vous sp&#233;cifiez cette valeur en tant que liste, vous risquez d’emp&#234;cher toute gestion int&#233;gr&#233;e des requ&#234;tes HTTP dont la r&#233;ponse contient l’un de ces codes d’&#233;tat.</li>\r\n<li><code>RelativePath</code> : Si cette valeur est sp&#233;cifi&#233;e, le texte est ajout&#233; &#224; l’URL de base avant d’effectuer la demande.</li>\r\n</ul>\r\n\r\n    La requête HTTP est effectuée avec la méthode HEAD. En dehors d’un contexte de connecteur de données personnalisé, seul un sous-ensemble d’en-têtes de réponse est disponible (pour des raisons de sécurité).\r\n    "
  },
  "Web.Headers_Documentation.Category": {
    "message": "Accessing data"
  },
  "Web.Headers_Documentation.Examples_0_Description": {
    "message": "Récupérez les en-têtes HTTP pour <code>\"https://bing.com/search?q=Power+Query\"</code> à l’aide des options RelativePath et Query."
  },
  "Web.Headers_Documentation.Examples_0_Code": {
    "message": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )"
  },
  "Web.Headers_Documentation.Examples_0_Result": {
    "message": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
  }
}
