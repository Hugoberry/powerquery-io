{
  "Text_FromBinary": "将数据从二进制解码为文本。",
  "Option_HierarchicalNavigation_Caption": "在完整层次结构中导航",
  "Value_Traits": "此函数仅供内部使用。",
  "Cube_Properties": "返回一个表，该表包含在多维数据集中扩展的维度的可用属性集。",
  "Uri_EscapeDataString_Example1": "对“+money$”中的特殊字符进行编码。",
  "Value_RemoveMetadata": "提取元数据的输入。",
  "Double_From_Description": "从给定的 {0} 返回双精度 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Double.From</code> 将返回 <code> null</code>。如果给定的 {0} 为双精度范围内的 <code>number</code>，则返回 {0}，否则返回错误。如果 {0} 属于任何其他类型，则将首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。还可以提供可选的 {1} (例如，“en-US”)。",
  "JoinKind_Type": "指定联接操作的类型。",
  "Table_FuzzyJoin_Description": "<p>根据由 {1} (针对 {0})和 {3} (针对 {2})选择的键列值的模糊匹配，将 {0} 的行与 {2} 的行联接在一起。</p>\r\n<p>模糊匹配是基于文本相似度(而不是文本等同性)的一种比较方法。</p>\r\n<p>默认执行的是内联，但也可视需要添加 {4} 来指定联接类型。选项包括:\r\n    {4:type}\r\n</p>\r\n<p>可包含一组可选的 {5} 来指定如何比较键列。选项包括:\r\n    {5:type}\r\n</p>\r\n    ",
  "Record_HasFields": "指示记录是否具有指定的字段。",
  "Duration_TotalMinutes_Description": "返回 {0} 跨越的总分钟数。",
  "Text_InferNumberType": "推断文本中已编码数字的粒度数字类型(Int64.Type、Double.Type 等)。",
  "Binary_View_Example1": "创建无需访问数据即可确定长度的基本视图。",
  "Option_BinaryCodePage_Caption": "启用大容量插入",
  "BinaryFormat_Transform": "返回一个二进制格式，该二进制格式将转换由另一个二进制格式读取的值。",
  "Type_ForRecord_Example1": "动态生成表类型。",
  "DateTime_IsInCurrentHour_Description": "指示给定的日期时间值 {0} 是否按系统当前日期和时间所确定的那样处于当前小时内。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Text_Repeat_Example2": "重复文本 \"helloworld\" 三次。",
  "Text_Repeat_Example1": "重复文本 \"a\" 五次。",
  "Table_MatchesAllRows_Description": "指示是否 {0} 中的所有行都满足给定的 {1}。如果所有行都匹配，则返回 <code>true</code>；否则返回 <code>false</code>。",
  "Table_ExpandRecordColumn_Description": "给定输入 {0} 中的 {1} 条记录后，创建一个表，其中针对记录中的每个字段都有一列。也可以指定 {3}，以确保新表中的各列具有唯一名称。\r\n    <ul>\r\n        <li>{0}: 原始表以及要扩展的记录列。</li>\r\n        <li>{1}: 要扩展的列。</li>\r\n        <li>{2}: 要扩展到表中各列的字段列表。</li>\r\n        <li>{3}: 给予新列的列名的列表。新列名不能与新表中的任何列重复。</li>\r\n    </ul>",
  "Cube_MeasureProperties": "返回包含在多维数据集中扩展的可用度量值属性集的表。",
  "Date_IsInPreviousNYears_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一年数中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 年数。</li>\r\n      </ul>",
  "Table_ColumnCount_Description": "返回表 {0} 中的列数。",
  "Date_StartOfWeek_Description": "返回包含 {0} 的周开始值。\r\n    {0} 必须是 <code>date</code>、<code>datetime</code>或<code>datetimezone</code>值。",
  "SqlExpression_ToExpression": "将提供的 SQL 查询转换为 M 代码。此函数仅供内部使用。",
  "Table_FromColumns": "从列和指定值的列表创建一个表。",
  "Binary_Compress_Description": "使用给定的压缩类型压缩二进制值。此调用的结果是输入的压缩后副本。压缩类型包括:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
  "Option_Culture_AS_Caption": "区域性名称",
  "Option_ExcludedFromCacheKey_Web_Caption": "要从缓存键中排除的标头",
  "Xml_Tables_Example1": "检索本地 xml 文件的内容。",
  "GoogleAnalytics_Accounts": "返回 Google Analytics 帐户。",
  "Option_IgnoreCase_FuzzyMatch_Caption": "启用不区分大小写的键匹配。",
  "Language_Record_Lookup": "可以按字段名称查找记录中的值。",
  "Date_IsInCurrentWeek_Example1": "确定当前系统时间是否处于当前星期。",
  "Odbc_DataSource_Example1": "从提供的连接字符串返回 SQL 表和视图。",
  "Table_PartitionValues": "返回有关如何对表进行分区的信息。",
  "Date_AddDays_Example1": "将 5 天添加到表示日期 5/14/2011 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "LimitClauseKind_Limit": "此 SQL 方言支持 LIMIT 说明符，以限制返回的行数。",
  "Table_OnError": "This function is intended for internal use only.",
  "TraceLevel_Critical_Description": "返回严重跟踪级别值 1。",
  "Cube_PropertyKey": "返回属性的键。",
  "Option_HierarchicalNavigation_True_Description": "一个逻辑值(true/false)，用于设置是否查看按架构名称分组的表(默认值为 true)。",
  "Text_SplitAny_Example1": "从文本值 \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\" 创建列表。",
  "Text_Length_Description": "返回文本 {0} 中的字符数。",
  "Option_SimilarityColumnName_Description": "列的名称，该名称显示输入值与该输入的代表值之间的相似之处。默认值为 null，在这种情况下，将不会添加用于相似性的新列。",
  "BinaryFormat_Text_Description": "返回读取文本值的二进制格式。 {0} 指定要解码的字节数，或者指定文本之前长度的二进制格式。可选的 {1} 值指定文本的编码。如果未指定 {1}，则根据 Unicode 字节顺序标记确定该编码。如果不存在字节顺序标记，则使用 <code>TextEncoding.Utf8</code>。",
  "JoinAlgorithm_Type": "指定联接操作中要使用的联接算法。",
  "DateTime_IsInCurrentMinute": "指示此日期时间是否按系统当前日期和时间所确定的那样处于当前分钟内。",
  "List_FirstN": "通过指定要返回的项数或限定条件来返回列表中的第一组项。",
  "Table_SelectRows_Example2": "选择表中的行，其中名称不包含 \"B\"。",
  "Table_SelectRows_Example1": "选择表中的行，其中 [CustomerID] 列中的值大于 2。",
  "Option_ManualStatusHandling_Web_Description": "如果将此值指定为列表，将阻止对其响应具有这些状态代码之一的 HTTP 请求进行任何内置处理。",
  "List_Range_Example1": "查找包含数字 1-10 的列表中从偏移量 6 开始的子集。",
  "List_Range_Example2": "查找包含数字 1-10 的列表中从偏移量 6 开始、长度为 2 的子集。",
  "Date_IsInPreviousMonth_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一月中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Table_RemoveLastN": "返回一个表，其中删除了最后 N 行。",
  "Table_IsEmpty": "指示表是否包含任何行。",
  "WebMethod_Delete": "指定 HTTP 的 DELETE 方法。",
  "Language_TimeWithZoneLiteral": "带时区的 time 值采用可选偏移量。",
  "Text_Remove_Example1": "从文本值中删除字符 , 和 ;。",
  "OleDb_DataSource": "返回 SQL 表的表并从 OLE DB 数据源进行查看。",
  "Text_BetweenDelimiters_Example2": "获取 \"111 (222) 333 (444)\" 第二个左括号及其随后第一个右括号之间的部分。",
  "Text_BetweenDelimiters_Example3": "获取 \"111 (222) 333 (444)\" 倒数第二个左括号及其随后第二个右括号之间的部分。",
  "Text_BetweenDelimiters_Example1": "获取 \"111 (222) 333 (444)\" (第一个)左括号及其随后(第一个)右括号之间的部分。",
  "Date_AddDays": "将指定天数添加到该日期。",
  "DateTime_ToText_Description": "返回 {0} 的文本表示形式。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。{2} 仅用于旧版工作流(见下文)。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的 <code>text</code> 值。请访问 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致使用 <code>Culture</code> 定义的默认值设置日期格式。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"MMM\"</code> 是 <code>\"Jan\"、\"Feb\"、\"Mar\" 等</code>，而在 <code>\"ru-RU\"</code> 中，<code>\"MMM\"</code> 是 <code>\"янв\"、\"фев\"、\"мар\" 等</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 和 {2} 也可以是文本值。这与 {1}<code> = [Format = {1}, Culture = {2}]</code> 时的行为相同。",
  "Environment_Libraries_Description": "返回当前环境中可用的库的一个表。",
  "CsvStyle_Type": "说明 Csv 文档中引号的重要性。",
  "Text_PositionOfAny_Description": "返回在 {0} 中找到的列表 {1}中任何字符的第一个位置。\n   可选参数 {2} 可用于指定要返回的出现位置。",
  "AzureStorage_DataLakeContents_Description": "从 Azure Data Lake Storage 文件系统返回 URL {0} 处的文件内容。可以指定 {1} 来控制以下选项:\r\n    {1:type}",
  "PercentileMode_SqlDisc": "在对 <code>List.Percentile</code> 内插值时，请使用与 SQL Server 的 <code>PERCENTILE_DISC</code> 兼容的方法。",
  "PercentileMode_SqlCont": "在对 <code>List.Percentile</code> 内插值时，请使用与 SQL Server 的 <code>PERCENTILE_CONT</code> 兼容的方法。",
  "Binary_ViewError": "创建修改的错误记录，当在视图上(通过 Binary.View)定义的处理程序引发该记录时，它不会触发回退。",
  "Text_SplitAny": "返回基于分隔符中的任何字符拆分的文本值列表。",
  "Value_Traits_Description": "此函数仅供内部使用。",
  "Environment_Configuration_Description": "返回当前环境中设置的所有配置属性的值。",
  "Character_FromNumber": "将数值转换为其字符值。",
  "CsvStyle_QuoteAfterDelimiter": "字段中的引用只有在紧跟分隔符时才有意义。",
  "Option_TransformationTable_FuzzyMatch_Caption": "基于自定义值映射匹配记录。",
  "Geometry_ToWellKnownText": "将结构化几何点值转换为其 Well-Known Text (WKT)表示形式。",
  "Option_MultiSubnetFailover_Caption": "启用 SQL Server 故障转移支持",
  "Table_AddRankColumn_Example1": "向表中添加名为 \"RevenueRank\" 的列，以便对 \"Revenue\" 列进行从高到低的排名。",
  "Value_Lineage": "此函数仅供内部使用。",
  "Date_IsInCurrentQuarter_Description": "指示在当前季度中给定的日期时间值 {0} 是否出现，它由系统上的当前日期和时间确定。\r\n      <ul>\r\n      <li>{0}: 要进行求值的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Table_ToRows_Example1": "从表中创建行值的列表。",
  "Table_Sort_Example1": "在列 \"OrderID\" 上对表排序。",
  "Table_Sort_Example3": "依次在列 \"CustomerID\"、列 \"OrderID\" 上对表排序，其中列 \"CustomerID\" 上以升序顺序排序。",
  "Table_Sort_Example2": "在列 \"OrderID\" 上以降序顺序对表排序。",
  "List_Normalize": "通过以下方法将任意计数的列表转换为指定计数的列表: 如果列表太小，则使用默认值填充列表；如果列表太大，则将多余的值合并为一个列表。",
  "List_Product_Description": "返回列表 {0} 中的非 null 数的乘积。如果列表中没有非 null 值，则返回 null。",
  "Logical_Constants_True": "返回值 true。",
  "Logical_FromText_Description": "从文本值 {0}(\"true\" 或 \"false\")创建逻辑值。如果 {0} 包含其他字符串，将引发异常。文本值 {0} 不区分大小写。",
  "Expression_Identifier_Description": "返回标识符 {0} 的 M 源代码表示形式。",
  "Option_EnableColumnBinding_HANA_Description": "提取数据时，将变量绑定到 SAP HANA 结果集的列。可能会以略高的内存利用率为代价提高性能。默认值为 false。",
  "Table_MaxN_Description": "在给定 {1} 的情况下，返回 {0} 中的最大值行。\r\n    在对行排序后，必须指定 {2} 参数以进一步筛选结果。注意，排序算法无法保证固定的排序结果。{2} 参数可以采用多种格式:\r\n    <ul>\r\n        <li> 如果指定一个数，则返回以升序排序的、最多包含 {2} 项的列表。</li>\r\n        <li> 如果指定条件，则返回最初满足该条件的项列表。如果某个项不满足该条件，则不再考虑其他项。</li>\r\n </ul>",
  "Record_RemoveFields_Description": "返回一个记录，该记录从输入 {0} 中删除列表 {1} 中指定的所有字段。如果指定的字段不存在，将引发异常。",
  "Table_UnpivotOtherColumns": "将指定集以外的所有列转换为属性-值对。",
  "Salesforce_Reports_Description": "返回凭据中提供的 Salesforce 帐户上的报表。该帐户将通过提供的环境 {0} 进行连接。如果没有提供任何环境，则该帐户将连接到生产环境(https://login.salesforce.com)。可提供可选记录参数 {1} 来指定附加属性。该记录可以包含以下字段:\r\n    {1:type}\r\n    ",
  "Table_StopFolding": "防止任何下游操作针对原始数据源运行。",
  "Web_Headers": "返回从 URL 下载的 HTTP 标头作为记录值。",
  "Record_ReorderFields": "将指定的字段重新排序为新顺序。",
  "Number_IntegerDivide_Description": "返回一个数 {0} 除以另一个数 {1} 所得结果的整数部分。\r\n    如果 {0} 或 {1} 为 null，则 <code>Number.IntegerDivide</code> 返回 null。\r\n      <ul>\r\n        <li>{0}: 被除数。</li>\r\n        <li>{1}: 除数。</li>\r\n      </ul>",
  "Date_WeekOfMonth": "返回 1 到 6 之间的数字，指示此日期位于当月的哪一周。",
  "BinaryFormat_Length_Example1": "在读取字节列表时，将读取字节数限制为 2。",
  "BinaryFormat_Length_Example2": "在读取字节列表时将读取字节数限制为该列表前面的字节值。",
  "DateTime_IsInNextHour": "指示此日期时间是否会在系统当前日期和时间确定的下一小时中出现。请注意，当传递一个在当前小时内出现的值时，此函数将返回 false。",
  "Number_BitwiseOr": "返回对两个输入执行按位 \"Or\" 所得的结果。",
  "Date_WeekOfYear_Description": "返回一个从 1 到 54 之间的数字，指示日期 {0} 属于该年的哪一周。\r\n <ul>\r\n        <li>{0}: <code>日期时间</code>值，确定该年的哪一周。</li>\r\n        <li>{1}: 可选的 <code>Day.Type</code> 值，指示将哪一天视为新的一周的开始(例如，<code>Day.Sunday</code>)。如果未指定，将使用区域性相关默认值。</li>\r\n      </ul>",
  "Date_IsInPreviousNWeeks_Example1": "确定当前系统时间之前的周是否在之前的两周中。",
  "Number_IsEven_Example1": "检查 625 是否为偶数。",
  "Number_IsEven_Example2": "检查 82 是否为偶数。",
  "CsvStyle_QuoteAlways": "不论在何处出现，字段中的引用始终有意义。",
  "RoundingMode_AwayFromZero": "当可能四舍五入的数值之间存在等同值时，向后一个整数舍入。",
  "Date_WeekOfMonth_Example1": "确定 3 月 15 日属于 2011 年的哪一周。",
  "Binary_End": "返回二进制值的结尾。",
  "SharePoint_Tables": "返回一个包含 SharePoint 列表内容的表。",
  "Odbc_InferOptions_Description": "返回尝试使用连接字符串 {0} 推断 ODBC 的 SQL 功能的结果。{0} 可以是文本或属性值对的记录。属性值可以是文本，也可以是数字。",
  "Type_FunctionRequiredParameters": "返回一个数字，表明调用函数的类型所需参数的最小数量。",
  "Record_RemoveFields": "从输入记录中删除指定的字段。",
  "JoinKind_RightOuter": "<code>Table.Join</code> 中可选 <code>JoinKind</code> 参数的可能值。\r\n    右边的外部联接确保第二个表的所有行显示在结果中。",
  "Binary_ApproximateLength": "返回二进制文件的近似长度。",
  "List_TransformMany_Example1": "平展人员及其宠物的列表。",
  "List_ReplaceMatchingItems_Example1": "从 {1, 2, 3, 4, 5} 创建一个列表，它将值 5 替换为 -5，将值 1 替换为 -1。",
  "AdoDotNet_Query_Description": "返回通过使用 ADO.NET 提供程序 {0} 的连接字符串 {1} 运行 {2} 的结果。{1} 可以是文本或属性值对记录。属性值可以是文本或数字。可提供一个可选的记录参数 {3} 来指定其他属性。记录可以包含以下字段:\r\n    {3:type}",
  "JoinKind_Inner": "<code>Table.Join</code> 中可选 <code>JoinKind</code> 参数的可能值。\r\n    由内部联接生成的表包含着根据指定键列确定为匹配的指定表中的每个行对所对应的行。",
  "Number_Random": "返回随机数。",
  "Record_TransformFields_Description": "将列表 {1} 中指定的转换应用到 {0} 后返回一个记录。\r\n    一次可以转换一个或多个字段。\r\n      <div>在转换单个字段时，要求 {1} 是包含两项的列表。{1} 中的第一项指定字段名称，{1} 中的第二项指定要用于转换的函数。例如 <code>{{\"Quantity\", Number.FromText}}</code></div>\r\n      <div>在转换多个字段时，要求 {1} 是列表的列表，其中每个里面的列表是一对字段名称和转换操作。例如 <code>{{{{\"Quantity\",Number.FromText}},{{\"UnitPrice\", Number.FromText}}}}</code></div>",
  "Action_View": "使用用户定义的处理程序创建或扩展操作，从而执行查询和操作。",
  "Action_Type": "表示所有操作的类型。",
  "Byte_Type": "表示所有字节的类型。",
  "Byte_From": "根据给定值创建 8 位整数。",
  "List_Max_Description": "返回列表 {0} 中的最大项；如果列表为空，则返回可选的默认值 {1}。\r\n    可以指定可选的 comparisonCriteria 值 {2} 来确定如何在列表中比较项。如果此参数为 null，将使用默认比较器。",
  "Text_PositionOfAny_Example2": "查找 \"W\" 或 \"H\" 在文本 \"Hello, World!\" 中的位置。",
  "Text_PositionOfAny_Example1": "查找 \"W\" 或 \"H\" 在文本 \"Hello, World!\" 中的第一个位置。",
  "Number_From_Example1": "获取 <code>\"4\"</code> 的 <code>number</code> 值。",
  "Number_From_Example2": "获取 <code>#datetime(2020, 3, 20, 6, 0, 0)</code> 的 <code>number</code> 值。",
  "Number_From_Example3": "获取 <code>\"12.3%\"</code> 的<code>数</code>值。",
  "TextEncoding_Utf8": "用于选择 UTF8 二进制格式。",
  "TextEncoding_Type": "指定文本编码类型。",
  "BinaryFormat_7BitEncodedSignedInteger": "读取使用 7 位可变长度编码进行编码的 64 位带符号整数的二进制格式。",
  "Option_LanguageCode_Description": "用于连接的 SAP 语言代码。",
  "Value_Metadata": "返回包含输入的元数据的记录。",
  "OleDb_Query": "返回在 OLE DB 数据源上运行本机查询的结果。",
  "Text_Format": "从格式字符串和参数返回格式化文本。",
  "Table_Combine_Example2": "合并结构不同的三个表。",
  "Table_Combine_Example3": "合并两个表并投影到给定类型。",
  "Table_Combine_Example1": "将以下三个表合并在一起。",
  "DateTime_ToRecord_Example1": "将 <code>#datetime(2011, 12, 31, 11, 56, 2)</code> 值转换为包含日期和时间值的记录。",
  "List_Numbers_Description": "给定初始值、计数和可选的增量值来返回数的列表。默认增量值为 1。\r\n<ul>\r\n   <li>{0}: 列表中的初始值。</li>\r\n   <li>{1}: 要创建的值数。</li>\r\n   <li>{2}: <i>[可选]</i> 要按其递增的值。如果省略，则按 1 递增值。</li>\r\n</ul>",
  "SqlExpression_SchemaFrom": "此函数仅供内部使用。",
  "List_ReplaceValue_Description": "在值列表 {0} 中搜索值 {1}，每次找到后使用替换值 {2} 替换它。",
  "Option_Implementation_Caption": "启用大容量插入",
  "Date_AddWeeks_Description": "通过将 {1} 个星期添加到 <code>datetime</code> 值 {0}，返回 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 结果。\r\n      <ul>\r\n      <li>{0}: 星期数要添加到的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 要添加的星期数。</li>\r\n      </ul>",
  "TableAction_Tee_Description": "<p>创建可同时执行 {1} 中指定操作的操作，同时允许所有操作从 {0} 中读取.</p>\r\n<p>{1} 1 个参数函数的列表，其中每个函数针对 {0} 调用，且必须返回要执行的操作。生成的操作列表同时执行。</p>\r\n<p>每个操作都可以通过引用向构造它的函数提供的参数来读取 {0}。{0} 将最多枚举一次。</p>\r\n<p>执行时，该操作将返回一个列表，其中包含以 {1} 中指定顺序排列的操作结果。</p>\r\n<p>如果 {1} 中的操作在执行期间引发错误，则 {1} 中仍在执行的其他操作可能会终止。通过使用<code>操作可以避免此行为。在错误引发操作中尝试</code>。</p>\r\n<p>注意: 此函数的当前实现不支持使用非基元列类型的 {0}。不会保留 {0} 上的元数据。</p>",
  "Language_True": "返回值 true。",
  "Language_Text": "使用双引号写入文本值。",
  "Json_FromValue_Description": "<p>使用由 {1} 指定的文本编码生成给定值 {0} 的 JSON 表示形式。如果省略 {1}，则使用 UTF8。值的表示形式如下:</p>\r\n <ul>\r\n        <li>Null、文本和逻辑值表示为相应的 JSON 类型</li>\r\n        <li>数字表示为 JSON 形式的数字，除非 <code>#infinity</code>、<code>-#infinity</code> 和 <code>#nan</code> 均转换为 null</li>\r\n        <li>列表表示为 JSON 阵列</li>\r\n        <li>记录表示为 JSON 对象</li>\r\n        <li>表表示为对象的阵列</li>\r\n        <li>日期、时间、日期时间、日期时间时区和持续时间表示为 ISO-8601 文本</li>\r\n        <li>二进制值表示为 Base64 编码文本</li>\r\n        <li>类型和函数将生成错误</li>\r\n </ul>\r\n    ",
  "Option_Implementation_SharePoint_Caption": "实现",
  "Date_IsInCurrentDay": "指示在当天中此日期是否出现，它由系统上的当前日期和时间确定。",
  "Table_Product": "在表的给定列中返回数字的乘积。",
  "Table_Profile": "返回表中列的配置文件。",
  "BinaryOccurrence_Type": "指定项应在组中出现的次数。",
  "Nullable_Type": "表示所有可为 null 的类型的类型。",
  "Date_DaysInMonth_Example1": "由 <code>#date(2011, 12, 01)></code> 表示的十二月的天数。",
  "Table_FirstN_Description": "返回表 {0} 的前几行，具体取决于 {1} 的值:\r\n    <ul>\r\n    <li> 如果 {1} 为数字，则将返回多行(从顶部开始)。</li>\r\n    <li> 如果 {1} 是条件，将返回满足此条件的行，直到行不满足条件为止。</li>\r\n</ul>",
  "Date_AddWeeks": "将指定星期数添加到该日期。",
  "Table_FromRecords": "将记录列表转换为表。",
  "Date_AddYears": "将指定年份数添加到该日期。",
  "List_MinN_Description": "返回列表 {0} 中的最小值。\r\n    参数 {1} 指定要返回的值的数量或筛选条件。可选参数 {2} 指定如何比较列表中的值。\r\n <ul>\r\n        <li> {0}: 值的列表。</li>\r\n        <li> {1}: 如果指定一个数字，则返回以升序排序的最多包含 {1} 个项的列表。如果指定条件，则返回从第一项开始满足该条件的项的列表。一旦某个项不满足该条件，则不再考虑其他项。如果此参数为 null，则返回列表中的一个最小值。</li>\r\n<li>{2}: <i>[可选]</i> 可以指定可选的 {2} 值来确定如何比较列表中的项。如果此参数为 null，则使用默认比较器。\r\n </ul>",
  "Number_RoundDown_Description": "返回将 {0} 向下舍入到上一个最大整数的结果。如果 {0} 为 null，则此函数返回 null。\r\n\r\n    如果提供了 {1}，则将 {0} 舍入为指定的小数位数。\r\n  ",
  "Int64_From_Example2": "使用 <code>RoundingMode.AwayFromZero</code> 获取 <code>\"4.5\"</code> 的 64 位整数 <code>number</code> 值。",
  "Int64_From_Example1": "获取 64 位整数的<code>number</code> 值 <code>\"4\"</code>。",
  "Table_FillUp_Description": "从指定的 {0} 中返回一个表，其中下一个单元的值传播到指定的 {1} 上面值为 Null 的单元。",
  "Text_From": "从给定的值创建文本值。",
  "Text_Trim": "删除所有前导空格和尾随空格。",
  "Text_Type": "表示所有文本值的类型。",
  "Function_Invoke_Example1": "使用一个参数 [A=1,B=2] 调用 Record.FieldNames",
  "AdoDotNet_DataSource_Description": "使用提供程序名称 {0} 和连接字符串 {1} 返回 ADO.NET 数据源的架构集合。{1} 可以是文本或属性值对的记录。属性值可以是文本或数字。可提供一个可选的记录参数 {2} 以指定其他属性。记录可以包含以下字段:\r\n    {2:type}",
  "Type_TableColumn": "返回表中某列的类型。",
  "Option_Query_MDX_Description": "用于检索数据的本机 MDX 查询。",
  "Record_RenameFields_Description": "将输入 {0} 中的字段重命名为列表 {1} 中指定的新字段名称后，返回一个记录。对于多个重命名，可以使用嵌套的列表({{ {{old1, new1}}, {{old2, new2}} }})。",
  "Table_ExpandListColumn_Description": "给定 {0} 后(其中 {1} 是值列表)，针对每个值将列表拆分为一行。将在每个创建的新行中复制其他列的值。",
  "Table_Pivot_Example2": "选取表 <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> 的属性列中的值 \"a\"、\"b\" 和 \"c\"，并将它们透视为其自己的列。 键 \"x\" 的属性 \"c\" 具有多个与其关联的值，因此使用函数 List.Max 来解决冲突。",
  "Table_Pivot_Example1": "选取表 <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> 的属性列中的值 \"a\"、\"b\" 和 \"c\"，并将它们透视为其自己的列。",
  "Language_Ranges": "通过在值之间使用两个点编写范围。",
  "Cube_Transform": "应用多维数据集函数列表。",
  "Date_DayOfWeek_Example1": "获取 2011 年 2 月 21 日(星期一)代表的是星期几(将星期日视为一周的第一天)。",
  "Date_DayOfWeek_Example2": "获取 2011 年 2 月 21 日(星期一)代表的是星期几(将星期一视为一周的第一天)。",
  "Record_Combine": "组合给定列表中的记录。",
  "Json_FromValue_Example1": "将复杂值转换为 JSON。",
  "SapBusinessWarehouseExecutionMode_BasXmlGzip": "用于在 SAP Business Warehouse 中执行 MDX 的“Gzip 压缩 bXML 修整模式”选项。建议对低延迟或大容量查询使用此选项。",
  "List_NonNullCount": "返回列表中的非 null 项数。",
  "Language_DateTime_Compares": "可以比较 date、time、datetime 和 duration 值。",
  "Text_PadStart": "通过填充给定文本的开头，返回指定长度的文本。",
  "Lines_FromBinary": "将二进制值转换成在换行符处拆分的文本值列表。如果指定的是引用样式，则引号内可能会出现换行符。如果 includeLineSeparators 为 true，则文本中可能会出现换行符。",
  "Text_Contains_Description": "检测 {0} 是否包含值 {1}。如果找到该值，则返回 true。此函数不支持通配符或正则表达式。\r\n      <br>\r\n      <br>\r\n      可选参数 {2} 可用于指定不区分大小写的比较或区分区域性和区域设置的比较。\r\n      以下内置比较器以公式语言提供:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: 用于执行区分大小写的序号比较</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: 用于执行不区分大小写的序号比较</li>\r\n        <li><code>Comparer.FromCulture</code>: 用于执行区分区域性的比较</li>\r\n      </ul>",
  "Table_DemoteHeaders_Example1": "降级表中的第一行值。",
  "Diagnostics_ActivityId": "为当前正在运行的计算返回不透明的标识符。",
  "Record_SelectFields_Description": "从输入 {0} 返回一个记录，该记录仅包含在列表 {1} 中指定的字段。",
  "GroupKind_Type_Description": "可以使用相同的键值生成多个本地组，但只可以为给定的键值生成一个全局组。",
  "TraceLevel_Information": "指定信息跟踪级别。",
  "Text_RemoveRange": "以给定的偏移量开始删除某个数量的字符",
  "Table_Skip_Description": "返回一个表，该表不包含表 {0} 的指定数量的前几行 {1}。\r\n    跳过的行数依赖于可选参数 {1}。\r\n    <ul>\r\n    <li> 如果忽略 {1}，则只跳过第一行。</li>\r\n    <li> 如果 {1} 为数字，则将跳过该数字那么多的行(从顶部开始)。</li>\r\n    <li> 如果 {1} 是条件，将跳过满足此条件的行，直到行不满足条件为止。</li>\r\n    </ul>",
  "Table_InsertRows": "将行列表插入到表中的指定位置。",
  "Text_Contains_Example3": "使用不区分大小写的比较器查找文本 \"Hello World\" 是否包含 \"hello\"。",
  "Text_Contains_Example2": "查找文本 \"Hello World\" 是否包含 \"hello\"。",
  "Text_Contains_Example1": "查找文本 \"Hello World\" 是否包含 \"Hello\"。",
  "Xml_Document": "返回 XML 文档的内容作为层次结构表。",
  "Day_Thursday": "表示星期四。",
  "Table_RemoveMatchingRows_Description": "从 {0} 中删除出现的所有指定 {1}。\r\n    可以指定一个可选参数 {2}，以控制表各行之间的比较。",
  "Option_BinaryCodePage_Description": "CCSID (编码字符集标识符)的编号，用于将 Db2 FOR BIT 二进制数据解码为字符串。适用于 Implementation = \"Microsoft\"。设置为 0 可禁用转换(默认值)。设置为 1 可根据数据库编码进行转换。设置其他 CCSID 编号可转换为应用程序编码。",
  "Text_TrimEnd_Example1": "从 \"     a b c d    \" 删除尾随空格。",
  "Number_ToText_Description": "根据 {1}指定的格式，将数值 {0}转换为文本值。<br>\r\n    <br>\r\n    格式是一个文本值，指示应如何转换数字。有关支持的格式值的详细信息，请转到 https://go.microsoft.com/fwlink/?linkid=2241210 和 https://go.microsoft.com/fwlink/?linkid=2240884。<br>\r\n    <br>\r\n    也可以提供可选 {2} (例如，\"en-US\")来控制 {1} 的区域性相关行为。",
  "Cube_CollapseAndRemoveColumns_Description": "通过折叠映射至指定列 {1} 的属性，更改 {0} 的筛选上下文的维度粒度。还将从多维数据集的表格视图中删除列。",
  "List_MaxN_Description": "返回列表 {0} 中的最大值。\r\n    在对行排序后，可以指定可选参数以进一步筛选结果。可选参数 {1} 指定要返回的值的数量或筛选条件。可选参数 {2} 指定如何比较列表中的值。\r\n <ul>\r\n        <li> {0}: 值的列表。</li>\r\n        <li> {1}: 如果指定一个数字，则返回以升序排序的最多包含 {1} 个项的列表。如果指定条件，则返回从第一项开始满足该条件的项的列表。一旦某个项不满足该条件，则不再考虑其他项。</li>\r\n<li>{2}: <i>[可选]</i> 可以指定可选的 {2} 值来确定如何比较列表中的项。如果此参数为 null，则使用默认比较器。\r\n </ul>",
  "Lines_ToBinary": "使用指定的编码和 lineSeparator 将文本列表转换为二进制值。指定的 lineSeparator 追加到每行之后。 如果未指定，则使用回车和换行符。",
  "DateTime_IsInPreviousNHours_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一小时数中出现。请注意，当传递一个在当前小时内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 小时数。</li>\r\n      </ul>",
  "DateTimeZone_From_Example1": "将 <code>\"2020-10-30T01:30:00-08:00\"</code> 转换为 <code>datetimezone</code> 值。",
  "Time_Minute_Description": "返回所提供的 <code>time</code>、<code>datetime</code> 或 <code>datetimezone</code> 值 {0} 的分钟部分。",
  "Date_WeekOfMonth_Description": "返回 1 到 6 之间的数字，指示日期 {0} 位于当月的哪一周。\r\n <ul>\r\n <li>{0}: 已确定当月周数的<code>日期/时间</code>值。</li>\r\n      </ul>",
  "Table_Group_Example1": "对表进行分组，同时添加一个聚合列 [total]，其中包含价格总和(\"each List.Sum([price])\")。",
  "Number_IsOdd_Description": "指示值是否为奇数。如果 {0} 为奇数，则返回 <code>true</code>；否则返回 <code>false</code>。",
  "Text_PositionOf": "返回值的第一个位置(如果找不到，则返回 -1)。",
  "Table_View_Description": "<p>返回 {0} 的视图，其中，如果将操作应用到视图，则使用 {1} 中指定的函数替代操作的默认行为。</p>\r\n<p>如果提供 {0}，则所有处理程序函数均为可选项。如果不提供 {0}，则 <code>GetType</code> 和 <code>GetRows</code> 处理程序函数为必填。如果没有为操作指定处理程序函数，则将操作的默认行为应用到 {0} (<code>GetExpression</code> 除外)。</p>\r\n<p>处理程序函数返回的值必须在语义上等同于针对 {0} 应用操作的结果(如果是 <code>GetExpression</code>，则为结果视图)。</p>\r\n<p>如果处理程序函数引发一个错误，则将操作的默认行为应用到视图。</p>\r\n<p><code>Table.View</code> 可用于实现数据源的折叠 - 将 M 查询转换为特定于源的查询(例如，从 M 查询创建 T-SQL 语句)。</p>\r\n<p>有关 <code>Table.View</code> 的更多完整说明，请查看已发布的 Power Query 自定义连接器文档。</p>",
  "DateTimeZone_FixedUtcNow": "返回采用 UTC (GMT 时区)的当前日期和时间。该值是固定的，因此将不会随着连续调用而更改。",
  "Teradata_Database_Description": "从服务器 {0} 上的 Teradata 数据库返回 SQL 表和视图的表。可以视需要指定服务器的端口，并用冒号分隔。可以指定可选的记录参数 {1} 来控制以下选项:\r\n    {1:type}\r\n    例如，可以将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "Table_ReorderColumns": "返回一个表，其中的列遵循指定的顺序。",
  "DateTime_FromText": "从本地和通用日期时间格式创建 datetimezone。",
  "Binary_Range_Description": "返回从偏移量 {0} 开始的二进制值的子集。可选参数 {1} 用于设置该子集的最大长度。",
  "Number_ToText": "将给定数字转换为文本。",
  "Number_RoundAwayFromZero_Example2": "向远离零的方向舍入数 1.2。",
  "Number_RoundAwayFromZero_Example3": "将数字 -1.234 向远离零的方向舍入为包含两位小数。",
  "Number_RoundAwayFromZero_Example1": "向远离零的方向舍入数 -1.2。",
  "TableAction_InsertRows": "创建一个操作以向表中插入行。",
  "BinaryFormat_Null_Description": "读取零字节并且返回 null 的二进制格式。",
  "Day_Thursday_Description": "返回 4，该数值表示星期四。",
  "JoinAlgorithm_PairwiseHash": "缓冲左右两个表的行，直到其中一个表完全缓冲，然后执行 LeftHash 或 RightHash，具体取决于哪个表已完全缓冲。建议仅对小表使用此算法。",
  "Table_AddRankColumn": "追加一列，并使用一个或多个其他列进行排名。",
  "Option_EnableBulkInsert_Description": "一个逻辑值(true/false)，用于设置是否在插入多个记录时使用大容量插入 API(默认值为 false)。",
  "Date_AddYears_Description": "返回将 {1} 添加到 <code>datetime</code> 值 {0} 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 结果。\r\n      <ul>\r\n        <li>{0}: 要将年份数添加到其中的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n        <li>{1}: 要添加的年份数。</li>\r\n      </ul>",
  "Text_Format_Description": "返回通过将来自列表或记录的 {1} 应用于格式字符串 {0} 创建的格式化文本。还可提供可选的 {2} (例如 \"en-US\")。",
  "DateTimeZone_From": "从给定的值创建 datetimezone。",
  "DateTimeZone_Type": "表示相对于某个时区的所有日期和时间值的类型。",
  "Date_ToText_Description": "返回 {0} 的文本表示形式。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。{2} 仅用于旧版工作流(见下文)。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的 <code>text</code> 值。请访问 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致使用 <code>Culture</code> 定义的默认值设置日期格式。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"MMM\"</code> 是 <code>\"Jan\"、\"Feb\"、\"Mar\" 等</code>，而在 <code>\"ru-RU\"</code> 中，<code>\"MMM\"</code> 是 <code>\"янв\"、\"фев\"、\"мар\" 等</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 和 {2} 也可以是文本值。这与 {1}<code> = [Format = {1}, Culture = {2}]</code> 时的行为相同。",
  "DateTimeZone_FixedLocalNow": "返回采用本地时区的当前日期和时间。该值是固定的，因此将不会随着连续调用而更改。",
  "Option_Distribution_Description": "连接字符串中设置“分发”属性值的 SapHanaDistribution。语句路由是在语句执行前计算分布式系统的正确服务器节点的方法。默认值为 SapHanaDistribution.All。",
  "DateTime_Time_Description": "返回给定日期时间值 {0} 的时间部分。",
  "List_StandardDeviation_Example1": "计算 1 到 5 的数的标准偏差。",
  "JoinAlgorithm_SortMerge": "基于两个表由其联接键排序的假设执行流式处理合并。虽然这样效率很高，但如果表未按预期排序，则会返回错误结果。",
  "GeographyPoint_From_Description": "创建一条表示其构成部分的地理点的记录，例如经度、维度以及(若有)海拔(Z)和度量值(M)。如果不同于默认值(4326)，可指定可选的空间参照标识符(SRID)。",
  "Language_List_OptionalLookup": "如果位置可能大于列表长度，请使用 ? 以在超出范围时返回 null。",
  "AzureStorage_Tables": "返回一个导航表，它包含从 Azure 存储库的指定帐户中找到的表。",
  "Option_ViewMode_SharePoint_Caption": "视图模式",
  "Replacer_ReplaceText": "在提供的输入内替换文本。",
  "Odbc_DataSource_Description": "从连接字符串 {0} 指定的 ODBC 数据源中返回 SQL 表和视图的表。{0} 可以为文本或属性值对记录。属性值可以为文本或数字。可提供一个可选的记录参数 {1} 以指定其他属性。记录可以包含以下字段:\r\n    {1:type}",
  "DateTimeZone_ToText_Description": "返回 {0} 的文本表示形式。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。{2} 仅用于旧版工作流(见下文)。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的 <code>text</code> 值。请访问 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致使用 <code>Culture</code> 定义的默认值设置日期格式。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"MMM\"</code> 是 <code>\"Jan\"、\"Feb\"、\"Mar\" 等</code>，而在 <code>\"ru-RU\"</code> 中，<code>\"MMM\"</code> 是 <code>\"янв\"、\"фев\"、\"мар\" 等</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 和 {2} 也可以是文本值。这与 {1}<code> = [Format = {1}, Culture = {2}]</code> 时的行为相同。",
  "_Pound_binary": "从数字或文本创建一个二进制值。",
  "ItemExpression_Item": "表示项表达式中项的抽象语法树(AST)。",
  "ItemExpression_From": "返回函数主体的抽象语法树(AST)。",
  "Function_InvokeAfter": "经过指定的持续时间后，调用给定的函数。",
  "Date_IsInPreviousNYears_Example1": "确定当前系统时间之前的年份是否在之前的两年中。",
  "SapHanaRangeOperator_Between": "SAP HANA 输入参数的“之间”范围运算符。",
  "Value_Equals_Description": "如果值 {0} 等于值 {1}，则返回 true，否则返回 false。",
  "Date_IsInCurrentYear_Description": "指示在当前年份中给定的日期时间值 {0} 是否出现，它由系统上的当前日期和时间确定。\r\n      <ul>\r\n      <li>{0}: 要进行求值的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "DateTime_FromFileTime_Example1": "将 <code>129876402529842245</code> 转换为日期时间值。",
  "Option_OmitSRID_Description": "一个逻辑值(true/false)；如果为 true，则在从几何图形和地理类型生成已知文本时省略 SRID。",
  "Table_TransformColumnTypes": "使用特定的区域性应用格式 { column, type } 的类型转换。",
  "Type_OpenRecord_Description": "返回给定 <code>record</code> {0} (或同一类型，如果其已打开)的打开版本。",
  "ODataOmitValues_Type": "指定 OData 服务可以忽略的值种类。",
  "Type_AddTableKey": "向给定表类型添加键。",
  "Type_FunctionParameters": "返回带有字段值的记录以设置函数类型的参数名称，其值设置为对应类型。",
  "Table_ExpandListColumn": "给定表中的列表列之后，为其列表中的每个值创建行的副本。",
  "List_LastN_Example2": "查找列表 {3, 4, 5, -1, 7, 8, 2} 中大于 0 的最后一个值。",
  "List_LastN_Example1": "查找列表 {3, 4, 5, -1, 7, 8, 2} 中的最后一个值。",
  "Table_TransformColumnNames": "使用给定的函数转换列名。",
  "Json_FromValue": "生成给定值的 JSON 表示形式。",
  "DateTime_IsInPreviousNSeconds": "指示此日期时间是否会在系统当前日期和时间确定的上一秒数中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。",
  "DateTimeZone_FixedLocalNow_Description": "返回设置为系统上的当前日期和时间的 <code>datetime</code> 值。返回的值包含表示本地时区的时区信息。该值是固定的，因此将不会随着连续调用而更改，这与 DateTimeZone.LocalNow 不同，后者可能会在表达式的执行过程中返回不同值。",
  "List_SingleOrDefault_Description": "如果列表 {0} 中只有一项，则返回该项。\r\n    如果列表为空，函数将返回 null，除非指定了可选的 {1}。如果列表中有多项，函数将返回错误。",
  "Table_PrefixColumns_Example1": "为表中的列加前缀 \"MyTable\"。",
  "Table_FromRows_Description": "从列表 {0} 创建一个表，其中该列表的每个元素都是一个包含用于单一行的列值的内部列表。可以为 {1} 提供可选的列名列表、表类型或若干列。",
  "Table_AddFuzzyClusterColumn": "添加一个具有代表值的新列，这些值由表中指定列的模糊分组值获得的。",
  "Table_Join_Example1": "使用单个键列联接两个表。",
  "Table_Join_Example2": "使用多个键列联接具有冲突列名的两个表。",
  "Number_Log_Example2": "获取 2 的以 e 为底的对数。",
  "Number_Log_Example1": "获取 2 的以 10 为底的对数。",
  "Option_IsRetry_Web_Description": "将此逻辑值指定为 true 将在提取数据时忽略缓存中的所有现有响应。",
  "DateTimeZone_RemoveZone_Example1": "从值 #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0) 中删除时区信息。",
  "Binary_From_Example1": "获取 <code>\"1011\"</code> 的 <code>binary</code> 值。",
  "Date_IsInNextNQuarters_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一季度数中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 季度数。</li>\r\n      </ul>",
  "Table_SelectRows_Description": "从 {0} 返回与选择 {1} 匹配的行的表。",
  "Option_HierarchicalNavigation_Description": "一个逻辑值(true/false)，用于设置是否查看按架构名称分组的表(默认值为 false)。",
  "RoundingMode_Type": "指定当要舍入到的可能值之间存在等同值时的舍入方向。",
  "RoundingMode_Down": "当可能四舍五入的数值之间存在等同值时，向下取整。",
  "Table_Column_Example1": "返回表中 [Name] 列的值。",
  "Value_ReplaceType_Description": "将 {0} 的类型替换为提供的 {1}。",
  "Type_Is": "确定第一个类型的值是否始终与第二个类型兼容。",
  "Binary_Decompress_Example1": "解压缩二进制值。",
  "Text_TrimStart_Description": "返回从文本值 {0} 删除所有前导空格的结果。",
  "TimeZone_Current": "返回应用程序的当前时区名称。",
  "Language_Tables": "表是相似记录的列表。",
  "Table_ReverseRows_Example1": "使表中的行按相反顺序排列。",
  "BinaryFormat_Group_Example2": "下面的示例说明项值转换和默认项值。  具有键 1 的重复项使用 List.Sum 对读取的值列表进行求和。 具有键 2 的可选项具有默认值 123，而非 Null。",
  "BinaryFormat_Group_Example1": "下面假定一个键值，它是单字节的，在组中应该有 4 个项，并且所有这些项都在该键后有一个数据字节。 这些项按如下所示出现在输入中:\r\n<ul>\r\n<li>键 1 是必需的，并且与值 11 一起出现。</li>\r\n<li>键 2 重复，与值 22 一起出现两次，并且导致值{ 22, 22 }。</li>\r\n<li>键 3 是可选的，它不出现，并且导致 Null 值。</li>\r\n<li>键 4 重复，但不出现，并且导致值 { }。</li>\r\n<li>键 5 不是该组的一部分，但与值 55 一起出现一次。 使用键值 5 调用该附加函数，并且返回与该值相对应的格式(BinaryFormat.Byte)。 值 55 被读取和放弃。</li>\r\n</ul>",
  "Date_EndOfYear_Example1": "获取 5/14/2011 05:00:00 PM 的年份结束值。",
  "Date_EndOfYear_Example2": "获取 5/17/2011 05:00:00 PM -7:00 的小时结束值。",
  "TraceLevel_Verbose": "指定详细跟踪级别。",
  "Value_Divide": "返回将第一个值除以第二个值的结果。",
  "Function_Type": "表示所有函数的类型。",
  "AdobeAnalytics_Cubes": "在 Adobe Analytics 中返回报表套件。",
  "Function_From": "除了创建采用单个列表实参的函数之外，还创建一个采用特定形参签名的函数",
  "Table_AddColumn_Example1": "将名为“TotalPrice”的数字列添加到表中，每个值是 [Price] 和 [Shipping] 列的总和。",
  "Value_Firewall_Description": "此函数仅供内部使用。",
  "Logical_ToText": "给定逻辑值返回文本 \"true\" 或 \"false\"。",
  "Value_Equals": "返回两个值是否相等。",
  "Record_ToList_Example1": "从记录提取字段值。",
  "Date_StartOfMonth_Example1": "查找 2011 年 10 月 10 日上午 8:10:32 的月开始值。",
  "List_Accumulate_Description": "使用 {2} 从列表 {0} 中的项累积汇总值。\r\n    可以设置可选的种子参数 {1}。",
  "Table_AddJoinColumn_Description": "根据由 {1} (针对 {0})和 {3} (针对 {2})选择的键列的值是否相等，联接 {0} 的行与 {2} 的行。将结果输入到名为 {4} 的列。\r\n此函数的行为类似于具有 JoinKind 的 LeftOuter 的 Table.Join，除了联接结果以嵌套而非平展方式存在之外。",
  "Text_ReplaceRange": "删除一系列字符并在指定的位置插入新值。",
  "Character_Type": "表示所有字符的类型。",
  "File_Contents_Description": "以二进制形式返回文件的内容 {0}。{1} 参数当前仅供内部使用。",
  "Option_Encoding_MySQL_Description": "指定用于对发送到服务器的所有查询进行编码的字符集的 TextEncoding 值(默认值为 null)。",
  "Expression_Constant_Example1": "获取数字值的 M 源代码表示形式。",
  "Expression_Constant_Example3": "获取文本值的 M 源代码表示形式。",
  "Expression_Constant_Example2": "获取日期值的 M 源代码表示形式。",
  "List_Product": "返回列表中的数的乘积。",
  "Cube_Parameters": "返回的表所包含的参数集可应用到多维数据集。",
  "Duration_Hours_Example1": "从持续时间值中提取小时数。",
  "Cube_AttributeMemberId": "从成员属性值返回唯一的成员标识符。 ",
  "List_FindText_Example1": "在列表 {\"a\", \"b\", \"ab\"} 中查找匹配 \"a\" 的文本值。",
  "Table_RemoveRows": "删除指定数量的行。",
  "List_ReplaceRange_Example1": "使用 {3, 4} 替换列表 {1, 2, 7, 8, 9, 5} 中的 {7, 8, 9}。",
  "JoinSide_Right": "指定联接的右表。",
  "Character_FromNumber_Example1": "假定提供数值 9，则查找字符值。",
  "DateTime_IsInNextHour_Example1": "确定当前系统时间后的小时是否处于接下来的一小时内。",
  "Time_From_Description": "从给定的 {0} 返回 <code>time</code> 值。还可提供可选的 {1} (例如 “en-US”)。\r\n如果给定的 {0} 是 <code>null</code>，则 <code>Time.From</code> 将返回 <code>null</code>。如果给定的 {0} 是 <code>time</code>，则返回 {0}。以下类型的值可以转换为 <code>time</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 文本表示形式的 <code>time</code> 值。有关详细信息，请参阅 <code>Time.FromText</code>。</li>\r\n        <li><code>datetime</code>: {0} 的时间组件。</li>\r\n        <li><code>datetimezone</code>: 本地日期时间中等效于 {0} 的时间组件。</li>\r\n        <li><code>number</code>: 与由 {0} 表示的不完整天数等效的 <code>time</code>。如果 {0} 是负数或大于等于 1，则返回错误。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "Table_ReorderColumns_Example2": "切换表中列 [Phone] 和 [Address] 的顺序或使用 \"MissingField.Ignore\"。这不会更改表，因为列 [Address] 不存在。",
  "Table_ReorderColumns_Example1": "切换表中列 [Phone] 和 [Name] 的顺序。",
  "Progress_DataSourceProgress_Description": "此函数仅供内部使用。",
  "Number_IsEven": "指示值是否为偶数。",
  "Date_StartOfMonth_Description": "返回包含 {0} 的月开始值。\r\n    {0} 必须为<code>date</code>或<code>datetime</code>值。",
  "AzureStorage_DataLake_Description": "从 Azure Data Lake Storage 文件系统返回包含帐户 URL {0} 处指定容器及其子文件夹中的文档的导航表。可以指定 {1} 来控制以下选项:\r\n    {1:type}",
  "Text_StartsWith_Example1": "检查文本 \"Hello, World\" 是否以文本 \"hello\" 开头。",
  "Text_StartsWith_Example2": "检查文本 \"Hello, World\" 是否以文本 \"Hello\" 开头。",
  "Option_Content_WebAction_Caption": "HTTP 请求的正文",
  "Date_EndOfYear": "返回年结束值。",
  "Date_EndOfWeek": "返回周结束值。",
  "Number_Random_Example1": "获取随机数。",
  "_Pound_table": "从列和行创建一个表值。",
  "Type_ListItem_Example1": "从列表 <code>{number}</code> 中找到项类型。",
  "_Pound_datetimezone": "从年、月、日、小时、分钟、秒、偏移小时和偏移分钟创建一个 datetimezone 值。",
  "BinaryFormat_Length_Description": "返回一个二进制格式，以限制可读取的数据量。<code>BinaryFormat.List</code> 和 <code>BinaryFormat.Binary</code> 都可用于读取到数据末尾。<code>BinaryFormat.Length</code> 可用于限制读取的字节数。{0} 参数指定要限制的二进制格式。{1} 参数指定要读取的字节数。{1} 参数可以是数值，也可以是指定出现在要读取的值之前长度值格式的二进制格式值。",
  "Option_ReturnSingleDatabase_Caption": "启用大容量插入",
  "SapHanaRangeOperator_Equals": "SAP HANA 输入参数的“等于”范围运算符。",
  "Option_HierarchicalNavigation_Directory_Description": "逻辑(true/false)，用于控制是以类似树的目录视图还是以简单列表的形式返回文件。默认值为 false。",
  "Table_First_Description": "返回 {0} 的第一行，或如果表为空，则返回可选默认值 {1}。",
  "Table_ToColumns_Example1": "从表中创建列值的列表。",
  "GoogleAnalytics_Accounts_Description": "返回可通过当前凭据进行访问的 Google Analytics 帐户。",
  "MySQL_Database": "返回 MySQL 数据库中可用的 SQL 表、视图和存储标量函数的表。",
  "Number_Permutations": "返回排列数。",
  "Number_RoundUp_Example1": "将 1.234 向上舍入到整数。",
  "Number_RoundUp_Example3": "将 1.234 向上舍入为包含两位小数。",
  "Number_RoundUp_Example2": "将 1.999 向上舍入到整数。",
  "Value_NativeQuery": "对目标计算查询。",
  "Number_BitwiseAnd_Description": "返回对 {0} 和 {1} 执行按位 \"And\" 运算所得的结果。",
  "Table_Transpose_Description": "使列成为行，并使行成为列。",
  "Table_ContainsAny_Example2": "确定表 <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> 是否包含行 <code>[a = 1, b = 3]</code> 或 <code>[a = 3, b = 5]</code>。",
  "Table_ContainsAny_Example3": "确定表 <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> 是否包含只比较列 [a] 的行 <code>[a = 1, b = 3]</code> 或 <code>[a = 3, b = 5]</code>。",
  "Table_ContainsAny_Example1": "确定表 <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> 是否包含行 <code>[a = 1, b = 2]</code> 或 <code>[a = 3, b = 5]</code>。",
  "Sql_Database": "从 SQL Server 数据库中返回 SQL 表、视图和存储函数的表。",
  "Byte_From_Example1": "获取 <code>\"4\"</code> 的 8 位整数 <code>number</code> 值。",
  "Byte_From_Example2": "使用 <code>RoundingMode.AwayFromZero</code> 获取 <code>\"4.5\"</code> 的 8 位整数 <code>number</code> 值。",
  "List_MatchesAll_Description": "如果列表 {0} 中的所有值均满足条件函数 {1}，则返回 <code>true</code>；否则返回 <code>false</code>。",
  "List_Zip": "通过在多个列表的相同位置合并项来返回列表的列表。",
  "List_Sum": "返回列表中的项之和。",
  "List_Max": "返回最大值，对于空列表则返回默认值。",
  "List_Min": "返回最小值，对于空列表则返回默认值。",
  "Date_IsLeapYear_Description": "指示给定的日期时间值 {0} 是否处于闰年。\r\n <ul>\r\n        <li>{0}: 要进行求值的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Http_Post": "将要处理的数据提交给指定的 Web 资源。",
  "Date_DaysInMonth": "返回指示一个月中的天数的数值，该值介于 28 和 31 之间。",
  "Type_Is_Description": "确定 {0} 的值是否始终与 {1} 兼容。",
  "Binary_ApproximateLength_Description": "返回 {0} 的近似长度，或者如果数据源不支持近似长度，则返回错误。",
  "Text_BetweenDelimiters_Description": "返回 {0} 中位于指定的 {1} 和 {2} 之间的部分。\r\n    可选数字 {3} 指示要考虑哪一次出现的 {1}。\r\n    可选列表 {3} 指示要考虑哪一次出现的 {1}，以及应从输入的开头还是结尾编制索引。\r\n    {4} 类似，不同之处在于，相对于 {3} 编制索引。",
  "Sybase_Database_Description": "返回服务器 {0} 上 Sybase 数据库(在名为 {1} 的数据库实例中)中可用的 SQL 表和视图的表。可以视需要指定服务器的端口，并用冒号分隔。可以指定可选的记录参数 {2} 来控制以下选项:\r\n    {2:type}\r\n    例如，将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "List_Reverse_Example1": "通过将 {1..10} 反向排序创建一个列表。",
  "Option_Implementation_HANA_Description": "指定要使用的 SAP HANA 连接器实现。",
  "HdInsight_Contents_Description": "返回包含从 Azure 存储库的帐户 URL {0} 中找到的每个容器行的导航表。每行包含一个到容器 Blob 的链接。",
  "Splitter_SplitTextByEachDelimiter": "返回一个函数，它依次在每个指定的分隔符处将文本拆分为文本列表。",
  "Table_Unpivot": "将表中的一组列转换为属性-值对。",
  "TextEncoding_Windows": "用于选择 Windows 二进制格式。",
  "Value_FromText_Description": "从文本表示形式 {0} 对值解码，并将其解释为具有适当类型的值。\r\n    <code>Value.FromText</code> 采用一个文本值并返回数值、逻辑值、Null 值、日期时间值、期间值或文本值。空文本值会被解释为 Null 值。\r\n    还可提供可选的 {1} (例如 \"en-US\")。",
  "DateTimeZone_ToRecord_Example1": "将 <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> 值转换为包含日期、时间和时区值的记录。",
  "BinaryEncoding_Hex": "在要求十六进制编码时要用作编码类型的常量。",
  "Option_EnableStructures_SAPBW_Description": "指示是否识别特性结构的逻辑值。此选项的默认值为 false。仅受实现 \"2.0\" 支持。",
  "Date_IsInPreviousYear_Example1": "确定当前系统时间之前的那个年度是否处于前一年。",
  "Text_Split_Description": "返回根据指定的分隔符 {1} 拆分文本值 {0} 而得到的文本值列表。",
  "DateTimeZone_RemoveZone": "从给定 datetimezone 值中删除时区信息。",
  "Binary_Decompress": "使用给定压缩类型解压缩二进制值。",
  "Splitter_SplitTextByRepeatedLengths_Example1": "从输入开头开始重复地将输入拆分为三个字符的区块。",
  "Splitter_SplitTextByRepeatedLengths_Example2": "从输入结尾开始，重复将输入拆分为三个字符的区块。",
  "SapHanaRangeOperator_NotEquals": "SAP HANA 输入参数的“不等于”范围运算符。",
  "RoundingMode_TowardZero": "当可能四舍五入的数值之间存在等同值时，向前一个整数舍入。",
  "List_InsertRange_Description": "返回通过在 {1} 处将 {2} 中的值插入 {0} 来生成的新列表。列表中的第一个位置为索引 0 处。\r\n      <ul>\r\n        <li>{0}: 要插入值的目标列表。</li>\r\n        <li>{1}: 目标列表({0})的索引，要在此处插入值。列表中的第一个位置为索引 0 处。</li>\r\n        <li>{2}: 要插入 {0} 的值列表。</li>\r\n      </ul>",
  "Action_ViewError_Description": "从 {0} 创建修改的错误记录，当在视图上(通过 Action.View)定义的处理程序引发该记录时，它不会触发回退。",
  "ByteOrder_BigEndian": "<code>BinaryFormat.ByteOrder</code> 中 <code>byteOrder</code> 参数的可能值。最重要字节按大端字节顺序最先出现。",
  "Table_ApproximateRowCount": "返回表中的近似行数。",
  "List_ConformToPageReader_Description": "此函数仅供内部使用。",
  "Date_IsInCurrentYear_Example1": "确定当前系统时间是否处于当前年份。",
  "Binary_ToList": "将一个二进制值转换为一组数值。",
  "List_Max_Example2": "查找列表 {} 中的最大值，如果列表为空，则返回 -1。",
  "List_Max_Example1": "在列表 {1, 4, 7, 3, -2, 5} 中查找最大值。",
  "Binary_ToText": "将二进制数据解码为文本格式。",
  "Record_FieldOrDefault_Example1": "在记录中查找字段 \"Phone\" 的值，如果它不存在，则返回 null。",
  "Record_FieldOrDefault_Example2": "在记录中查找字段 \"Phone\" 的值，如果它不存在，则返回默认值。",
  "Table_PositionOfAny": "返回任何指定的行在表中的一个或多个位置。",
  "Teradata_Database": "从 Teradata 数据库中返回 SQL 表和视图的表。",
  "List_MaxN_Example2": "在列表 <code>{3, 4, 5, -1, 7, 8, 2}</code> 中查找前 5 个值。",
  "Table_RowCount_Example1": "查找表中的行数。",
  "Number_Round_Example4": "将 1.2345 舍入为包含三位小数(向上舍入)。",
  "Number_Round_Example5": "将 1.2345 舍入为包含三位小数(向下舍入)。",
  "Number_Round_Example1": "将 1.234 舍入到最近的整数。",
  "Number_Round_Example2": "将 1.56 舍入到最近的整数。",
  "Number_Round_Example3": "将 1.2345 舍入为包含两位小数。",
  "Table_ReplaceRows_Example1": "从位置 1 开始，替换 3 行。",
  "Text_ToList_Example1": "从文本 \"Hello World\" 创建字符值列表。",
  "Geography_ToWellKnownText": "将结构化地理点值转换为其 Well-Known Text (WKT)表示形式。",
  "Option_CreateNavigationProperties_Description": "一个逻辑值(true/false)，用于在返回的值上设置是否生成导航属性(默认值为 true)。",
  "Combiner_CombineTextByLengths": "返回一个函数，它使用指定的长度将文本列表合并成单个文本。",
  "Table_AddFuzzyClusterColumn_Description": "使用 {1} 的代表值将新列 {2} 添加到 {0} 中。代表值是通过模糊匹配针对每一行匹配 {1} 中的值获得的。\r\n    <p>可包含一组可选的 {3} 来指定如何比较键列。选项包括:\r\n    {3:type}\r\n</p>\r\n    ",
  "Record_FieldValues_Example1": "在记录中查找字段值。",
  "Table_ReplaceValue_Description": "在 {0} 的指定列中将 {1} 替换为 {2}。",
  "DateTime_IsInPreviousHour": "指示此日期时间是否会在系统当前日期和时间确定的上一小时中出现。请注意，当传递一个在当前小时内出现的值时，此函数将返回 false。",
  "DateTimeZone_ToLocal": "将时区部分转换为本地时区。",
  "List_ReplaceValue": "在列表中搜索指定的值并替换它。",
  "List_ConformToPageReader": "此函数仅供内部使用。",
  "List_Last_Description": "返回列表 {0} 中的最后一项；如果列表为空，则返回可选的默认值 {1}。\r\n    如果列表为空且未指定默认值，函数将返回 <code>null</code>。",
  "List_RemoveMatchingItems": "删除所有出现的输入值。",
  "Type_ForList": "返回一个类型，此类型表示具有特定项类型约束的列表。",
  "List_ReplaceRange": "从特定位置开始使用替换值替换指定数目的值。",
  "Option_Culture_FuzzyMatch_Description": "允许根据区域性特定的规则匹配记录。它可以是任何有效的区域性名称。例如，\"ja-JP\" 的区域性选项基于日语区域性来匹配记录。默认值为 \"\"，它基于固定英语区域性进行匹配。",
  "List_Single_Example1": "在列表 {1} 中查找单个值。",
  "List_Single_Example2": "在列表 {1, 2, 3} 中查找单个值。",
  "Language_DateTime_Duration_Add": "可以将 duration 值与 date、time 和 datetime 值相加。",
  "Comparer_Equals_Description": "使用提供的 {0} 基于对两个给定值 {1} 和 {2} 的相等性检查返回 <code>logical</code> 值。\r\n      <div>\r\n        {0} 是用于控制比较的 <code>Comparer</code>。\r\n        比较器是接受两个参数并根据第一个值是小于、等于还是大于第二个值返回 -1、0 或 1 的函数。 \r\n        比较器可用于提供不区分大小写或区分区域性和区域设置的比较。\r\n      </div>\r\n      <div>\r\n        以下内置比较器以公式语言提供:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: 用于执行精确的序号比较</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: 用于执行精确的不区分大小写序号比较</li>\r\n        <li> <code>Comparer.FromCulture</code>: 用于执行区分区域性的比较</li>\r\n      </ul>",
  "HdInsight_Containers_Description": "返回包含从 Azure 存储库的帐户 URL {0} 中找到的每个容器行的导航表。每行包含一个到容器 Blob 的链接。",
  "Table_FuzzyNestedJoin_Description": "<p>根据由 {1} (针对 {0})和 {3} (针对 {2})选择的键列值的模糊匹配，联接 {0} 的行与 {2} 的行。结果在名为 {4} 的新列中返回。</p>\r\n<p>模糊匹配是基于文本相似度(而不是文本等同性)的一种比较方法。</p>\r\n<p>可选的 {5} 指定要执行的联接种类。默认情况下，如果未指定 {5}，执行的是左外部联接。选项包括:\r\n    {5:type}\r\n</p>\r\n<p>可视需要添加一组 {6} 来指定如何比较键列。选项包括:\r\n    {6:type}\r\n</p>\r\n",
  "TextEncoding_Ascii": "用于选择 ASCII 二进制格式。",
  "DateTime_IsInPreviousSecond_Example1": "确定当前系统时间前的秒是否处于前一秒内。",
  "Type_Type": "表示所有类型的类型。",
  "Table_SingleRow": "返回表中的单一行。",
  "Action_Try_Example1": "<p>创建一个操作，该操作会尝试执行引发错误的第二个操作。<code>Try</code> 操作的结果是错误记录:</p>\r\n<p><code>[HasError = true, Error = [Reason = \"Expression.Error\", Message = \"Error!\", Detail = null]</code></p>",
  "Action_Try_Example2": "<p>创建一个操作，该操作会尝试执行返回结果的第二个操作。<code>Try</code> 操作的结果是成功记录:</p>\r\n<p><code>[HasError = false, Value = \"Success!\"]</code></p>\r\n    ",
  "TextEncoding_Utf16": "用于选择 UTF16 little endian 二进制格式。",
  "Option_NumberOfMatches_FuzzyMatch_Caption": "指定可为每个输入行返回的匹配行的最大数目。",
  "Table_UnpivotOtherColumns_Example1": "将指定集以外的所有列转换为属性值对，并与每行中的剩余值合并。",
  "JoinAlgorithm_LeftIndex": "按批次使用左表中的键对右表执行基于谓词的查询。如果右表较大、支持 Table.SelectRows 折叠，且包含少量预期与左行匹配的行，则建议使用此算法。",
  "Text_Length": "返回字符数。",
  "Table_SingleRow_Description": "返回一行 {0} 中的单一行。如果 {0} 具有多行，则引发异常。",
  "Environment_FeatureSwitch_Description": "返回当前环境中设置的一个配置属性的值。",
  "Soda_Feed": "从位于指定 URL (根据 SODA 2.0 API 进行格式化)的内容中返回一个表。",
  "Table_Partition": "根据指定的组和列的数目，将表分区为一系列表。",
  "Table_Range_Description": "以指定的 {1} 开始返回 {0} 中的行。可选参数 {2} 指定要返回的行数。默认情况下，将返回偏移量之后的所有行。",
  "Single_From": "从给定的值创建 Single。",
  "Single_Type": "表示单精度浮点数的类型。",
  "Splitter_SplitTextByEachDelimiter_Example1": "从输入开头开始，依次按逗号和分号拆分输入。",
  "Splitter_SplitTextByEachDelimiter_Example2": "依次按逗号和分号拆分输入，将引号视为任何其他字符，并从输入结尾开始。",
  "Table_ViewFunction": "创建一个可以由在视图上(通过 Table.View)定义的处理程序截获的函数。",
  "Text_ReplaceRange_Example1": "使用新文本值 \"CDE\" 替换文本值 \"ABGF\" 中位置 2 的单个字符。",
  "Option_TransformationTable_FuzzyGroup_Description": "允许根据自定义值映射对记录进行分组的表。它应包含“从”和“到”列。例如，如果提供了一个转换表，表中有包含 \"Grapes\" 的“从”列和包含 \"Raisins\" 的“到”列，则 \"Grapes\" 与 \"Raisins\" 分组到一起。请注意，转换将应用于转换表中所有出现该文本的位置。通过上述转换表，\"Grapes are sweet\" 也将与 \"Raisins are sweet\" 分组到一起。",
  "MySQL_Database_Description": "返回服务器 {0} 上 MySQL 数据库(在名为 {1} 的数据库实例中)中可用的 SQL 表、视图和存储标量函数的表。可以视需要指定服务器的端口，并用冒号分隔。可以指定可选的记录参数 {2} 来控制以下选项:\r\n    {2:type}\r\n    例如，可以将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "List_Modes_Description": "返回列表 {0} 中出现最多的项。如果列表为空，将引发异常。如果出现最多的项有多个，则选择其中的最后一项。\r\n    可以指定可选的 <code>comparisonCriteria</code> 值 {1} 来控制相等测试。 ",
  "Table_ViewError": "创建修改后的错误记录，该记录在视图上定义的处理程序引发时(通过 Table.View)将不会触发回退。",
  "List_AnyTrue_Example2": "确定列表 {2 = 0, false, 2 < 0} 中的任意表达式是否为 true。",
  "List_AnyTrue_Example1": "确定列表 {true, false, 2 > 0} 中的任意表达式是否为 true。",
  "Text_Middle": "返回最长为某个特定长度的子字符串。",
  "Option_IgnoreCase_FuzzyMatch_Description": "一个逻辑(true/false)值，它允许不区分大小写的键匹配。例如，如果为 true，则 \"Grapes\" 与 \"grapes\" 匹配。默认值为 true。",
  "Table_ReplaceMatchingRows": "使用提供的行替换所有指定的行。",
  "Value_ReplaceMetadata": "替换输入的元数据信息。",
  "Date_StartOfYear_Description": "返回包含 {0} 的年开始值。\r\n    {0} 必须是 <code>date</code>、<code>datetime</code>或<code>datetimezone</code>值。",
  "Combiner_CombineTextByRanges": "返回一个函数，它使用指定的位置和长度将文本列表合并成单个文本。",
  "Type_ForFunction_Description": "从 {0}、<code>ReturnType</code> 和 <code>Parameters</code>、{1} 以及调用函数所需参数的最小数目中创建 <code>function type</code>。",
  "Order_Ascending": "按升序对值进行排序。",
  "Int16_From": "从给定的值创建 16 位整数。",
  "Cube_Dimensions": "返回包含可用维度集的表。",
  "Int16_Type": "用于表示带符号的 16 位整数的类型。",
  "SqlDatabase_View_Description": "返回基于类似 SQL 的元数据的导航表，其中通过使用提供的函数评估特定 SQL 方言来生成表内容。",
  "Table_MatchesAllRows": "指示是否表中的所有行都满足给定的条件。",
  "Number_Mod_Example1": "计算 5 除以 3 所得的余数。",
  "Logical_From_Example1": "将 <code>2</code> 转换为 <code>logical</code> 值。",
  "Splitter_SplitTextByRanges_Example1": "从输入开头开始按指定的位置和长度对拆分输入。请注意，此示例中的范围重叠。",
  "Splitter_SplitTextByRanges_Example2": "从输入的结尾开始按指定的位置和长度对拆分输入。",
  "Splitter_SplitTextByRanges_Example3": "将输入拆分为定长的邮政编码，后跟可变长度的城市名称。",
  "Date_StartOfDay": "返回天开始值。",
  "ExtraValues_Type": "指定对包含的列数多于预期的行中的额外值应采取的操作。",
  "ExtraValues_List": "如果拆分器功能返回的列比表所需的列多，应将它们收集到列表中。",
  "List_Numbers": "给定初始值、计数和可选的增量值来返回数的列表。",
  "Record_FromTable_Example1": "从 Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]})格式的表创建记录。",
  "List_NonNullCount_Description": "返回列表 {0} 中的非 null 项数。",
  "Date_StartOfMonth": "返回月开始值。",
  "Number_Round": "返回舍入的数。可以指定位数和舍入模式。",
  "Expression_Identifier": "返回标识符的 M 源代码表示形式。",
  "Option_EnableBulkInsert_Caption": "启用大容量插入",
  "Table_SingleRow_Example1": "返回表中的单行。",
  "Number_Power": "计算某个数的指定次幂。",
  "Date_FromText_Example2": "使用自定义格式和德语区域性进行转换。",
  "Date_FromText_Example3": "在公历中查找与回历中 1400 开头相对应的日期。",
  "Date_FromText_Example1": "将 <code>\"2010-12-31\"</code> 转换为 <code>date</code> 值。",
  "Table_FuzzyGroup_Description": "通过模糊匹配针对每一行匹配指定的列 {1} 中的值，对 {0} 的行进行分组。\r\n    对于每个组，记录包含键列(及其值)，还包含 {2} 指定的所有聚合列。\r\n    此函数无法保证返回固定顺序的行。\r\n    <p>可包含一组可能的 {3} 来指定如何比较键列。选项包括:\r\n    {3:type}\r\n</p>\r\n    ",
  "Environment_Libraries": "返回当前环境中可用的库的一个表。",
  "List_InsertRange": "在给定的索引处将值插入列表。",
  "HdInsight_Contents": "返回一个导航表，它包含从 Azure 存储库的指定帐户中找到的容器。",
  "Number_IsNaN": "指示值是否为 NaN (不是数字)。",
  "Number_IsOdd": "指示值是否为奇数。",
  "SapBusinessWarehouseExecutionMode_BasXml": "用于在 SAP Business Warehouse 中执行 MDX 的“bXML 修整模式”选项。",
  "List_RemoveMatchingItems_Example1": "从 {1, 2, 3, 4, 5, 5} 创建一个不包含 {1, 5} 的列表。",
  "Table_ContainsAll": "指示所有指定的记录是否显示为表中的各行。",
  "Table_ContainsAny": "指示任何指定的记录是否显示为表中的各行。",
  "List_IsDistinct_Example2": "查看列表 {1, 2, 3, 3} 是否具有独特性(即 没有重复值)。",
  "List_IsDistinct_Example1": "查看列表 {1, 2, 3} 是否具有独特性(即 没有重复值)。",
  "Int64_From_Description": "从给定的 {0} 中返回 64 位整数 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Int64.From</code> 返回 <code>null</code>。如果给定的 {0} 是不带小数部分的 64 位整数范围内的 <code>number</code>，则返回 {0}。如果带有小数部分，则按指定舍入模式舍入该数字。默认舍入模式为 <code>RoundingMode.ToEven</code>。如果 {0} 属于任何类型，则首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。要了解可用的舍入模式，请参阅 <code>Number.Round</code>。还可能提供可选的 {1} (例如，“en-US”)。",
  "Number_Log10": "返回数值的以 10 为底的对数。",
  "Comparer_FromCulture_Example2": "使用忽略大小写的 \"en-US\" 区域设置比较 \"a\" 和 \"A\" 以确定这些值是否相等。",
  "Comparer_FromCulture_Example1": "使用 \"en-US\" 区域设置比较 \"a\" 和 \"A\" 以确定这些值是否相等。",
  "Binary_Range": "返回从偏移量开始的二进制值的子集。",
  "Binary_Split": "使用指定的页面大小将指定的二进制文件拆分为二进制文件列表。",
  "Option_TypedMeasureColumns_Description": "一个逻辑值，指示在多维模型或表格模型中指定的类型是否用作所添加的度量值列的类型。设置为 false 时，类型 \"number\" 将用于所有度量值列。此选项的默认值为 false。",
  "Number_Atan2": "返回两个数相除的反正切。",
  "DateTimeZone_ToRecord": "返回包含 datetimezone 值的各个部分的记录。",
  "Table_PositionOfAny_Example1": "查找 [a = 2, b = 4] 或 [a = 6, b = 8] 在表 <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> 中第一次出现的位置。",
  "Table_PositionOfAny_Example2": "查找 [a = 2, b = 4] 或 [a = 6, b = 8] 在表 <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code> 中所有出现的位置。",
  "DateTime_IsInCurrentSecond": "指示此日期时间是否按系统当前日期和时间所确定的那样处于当前秒内。",
  "List_RemoveItems_Description": "从 {0} 中删除 {1} 中所有出现的给定值。如果 {1} 中的值在 {0} 中不存在，则返回原始列表。",
  "Text_Proper_Example1": "对简单句子使用 <code>Text.Proper</code>。",
  "DateTime_FromText_Example4": "将 <code>\"20101231T013000\"</code> 转换为 datetime 值。",
  "DateTime_FromText_Example3": "将 <code>\"2010-12-31T01:30:00\"</code> 转换为 datetime 值。",
  "DateTime_FromText_Example2": "将 <code>\"2010-12-31T01:30:00.121212\"</code> 转换为 datetime 值。",
  "DateTime_FromText_Example1": "将 <code>\"2010-12-31T01:30:00\"</code> 转换为 datetime 值。",
  "Character_ToNumber": "将某个字符转换为其数值。",
  "Binary_ViewFunction_Description": "<p>基于可在由<code>Binary.View</code>创建的视图中处理的 {0} 创建视图函数。</p>\r\n<p><code>Binary.View</code> 的 <code>OnInvoke</code>处理程序可用于定义视图函数的处理程序。</p>\r\n<p>与内置操作的处理程序一样，如果未指定<code>OnInvoke</code>处理程序，或者如果处理程序未处理视图函数，或者如果处理程序引发错误，则 {0} 会应用于视图顶部。</p>\r\n<p>请参阅已发布的 Power Query 自定义连接器文档，从而了解有关 <code>Binary.View</code>和自定义视图函数的更完整的说明。</p>",
  "Table_ColumnsOfType_Example1": "返回表中类型 Number.Type 的列名。",
  "List_Reverse_Description": "返回将列表 {0} 中的值反向排序得到的列表。",
  "DateTimeZone_FromText_Example1": "将 <code>\"2010-12-31T01:30:00-08:00\"</code> 转换为 <code>datetimezone</code> 值。",
  "DateTimeZone_FromText_Example3": "使用 ISO 8601 进行转换。",
  "DateTimeZone_FromText_Example2": "使用自定义格式和德语区域性进行转换。",
  "Date_IsInNextNYears_Example1": "确定当前系统时间之后的年份是否在接下来的两年中。",
  "Table_Min": "使用给定条件返回最小值行或默认值。",
  "Table_Max": "使用给定条件返回最大值行或默认值。",
  "Function_InvokeAfter_Description": "经过持续时间 {1} 后，返回调用 {0} 的结果。",
  "SapHanaDistribution_Type": "SAP HANA 分发选项的有效选项。",
  "Type_OpenRecord": "返回给定记录类型(或同一类型，如果其已打开)的打开版本。",
  "Decimal_Type": "表示固定点小数的类型。",
  "Table_StopFolding_Example1": "以防止任何下游操作在 SQL 服务器上作为查询运行的方式从 SQL 表中获取数据。",
  "Table_FilterWithDataTable_Description": "此函数仅供内部使用。",
  "Decimal_From": "从给定的值创建 Decimal。",
  "List_First_Example1": "查找列表 {1, 2, 3} 中的第一个值。",
  "List_First_Example2": "查找列表 {} 中的第一个值。如果列表为空，则返回 -1。",
  "BinaryFormat_Binary_Description": "返回读取二进制值的二进制格式。如果指定了 {0}，则该二进制值将包含这些字节。如果未指定 {0}，则该二进制值将包含剩余字节。可将 {0} 指定为数值，也可以指定为置二进制数据之前长度的二进制格式。",
  "Date_EndOfMonth": "返回月结束值。",
  "Language_Date_Time_Combine": "可以使用 & 将 date 和 time 组合为 datetime。",
  "Combiner_CombineTextByRanges_Description": "返回一个函数，该函数使用指定的位置和长度将文本列表合并为单个文本。null 长度指示整个文本值都应被包含。",
  "Tables_GetRelationships": "获取一组表之间的关系。",
  "Date_StartOfQuarter_Description": "返回包含 {0} 的季度开始值。\r\n    {0} 必须是 <code>date</code>、<code>datetime</code>或<code>datetimezone</code>值。",
  "Splitter_SplitTextByWhitespace_Example1": "按空格字符拆分输入，将引号视为任何其他字符。",
  "Date_IsInNextNQuarters": "指示此日期是否会在系统当前日期和时间确定的下一季度数中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。",
  "Text_Insert": "将一个文本值插入到另一个文本值的给定位置。",
  "Date_IsInPreviousNDays_Example1": "确定当前系统时间之前的日期是否在之前的两天中。",
  "Table_FuzzyNestedJoin": "在两个表之间对提供的列执行模糊联接，并在新列中生成联接结果。",
  "Time_Minute": "返回分钟部分。",
  "Language_Record_MultiLookup": "通过使用一系列字段引用、每个引用用方括号括起来可以从记录选择字段。",
  "Table_Max_Example2": "查找表 <code>({})</code> 的列 [a] 中具有最大值的行。如果为空，则返回 -1。",
  "Table_Max_Example1": "查找表 <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> 的列 [a] 中具有最大值的行。",
  "Date_DayOfWeekName": "返回星期几。",
  "Table_FromRecords_Description": "将记录列表 {0} 转换为表。",
  "Option_Headers_Web_Caption": "其他 HTTP 请求标头",
  "List_Combine": "通过合并多个列表来返回一个列表。",
  "Value_Alternates": "表示备用查询计划。",
  "DeltaLake_Table_Description": "此功能不可用，因为它需要使用 .NET 4.5。",
  "Binary_FromText_Example1": "将 \"1011\" 解码为二进制值。",
  "Binary_FromText_Example2": "将 \"1011\" 解码为具有十六进制编码的二进制值。",
  "Option_OmitSRID_Caption": "生成已知文本时忽略 SRID",
  "Text_At": "在指定的位置返回该字符。",
  "Number_PI": "表示 pi 的常量。",
  "Number_Ln": "返回数的自然对数。",
  "Action_Return_Example1": "创建执行时不执行任何操作并返回值 <code>\"hello world!\"</code> 作为其结果的操作。",
  "Text_End_Example1": "获取文本 \"Hello, World\" 的后 5 个字符。",
  "Text_StartsWith": "指示文本是否以指定的值开头。",
  "Table_PrefixColumns_Description": "返回一个表，其中来自所提供的 {0} 中的所有列名均以给定的文本 {1} 为前缀，另加一个采用格式 {1}<code>.ColumnName</code> 的句点。",
  "Language_TimeLiteral": "采用 24 小时制将 time 值编写为 #time(小时, 分钟, 秒)。",
  "Table_AddJoinColumn": "对提供的列执行两个表之间的联接，并在新列中生成联接结果。",
  "Option_ApiKeyName_Web_Description": "如果目标站点具有 API 密钥的概念，则此参数可用于指定必须在 URL 中使用的密钥参数的名称(而不是值)。凭据中提供了实际的密钥值。",
  "Table_Product_Description": "在 {0} 的给定 {1} 中返回数字的乘积。如果列不包含数值，则引发异常。\r\n    如果提供单一列，则返回值为单个值。如果指定了多列，则返回记录值以及对应于每列的字段。",
  "Record_Combine_Example1": "从记录创建组合记录。",
  "Table_RemoveRows_Example1": "从表中删除第一行。",
  "Table_RemoveRows_Example2": "删除位于表的位置 1 的行。",
  "Table_RemoveRows_Example3": "删除表中从位置 1 开始的两行。",
  "List_MatchesAny_Example1": "查看列表 {9, 10, 11} 中的任意值是否大于 10。",
  "List_MatchesAny_Example2": "查看列表 {1, 2, 3} 中的任意值是否大于 10。",
  "PostgreSQL_Database": "返回 PostgreSQL 数据库中可用的 SQL 表和视图的表。",
  "Record_HasFields_Example2": "检查记录是否包含字段 \"CustomerID\" 和 \"Address\"。",
  "Record_HasFields_Example1": "检查记录是否包含字段 \"CustomerID\"。",
  "Option_BatchSize_SAPBW_Caption": "一次检索的最大行数",
  "Time_ToRecord_Description": "返回包含给定时间值 {0} 的各个部分的记录。\r\n <ul>\r\n        <li>{0}: 要从中计算其各个部分的记录的 <code>time</code> 值。</li>\r\n      </ul>",
  "Text_Repeat": "返回由输入文本重复指定次数而组成的文本值。",
  "Text_Remove": "从输入字符文本值中删除所出现的所有给定字符或字符列表。",
  "Type_TableRow": "返回表类型的行类型。",
  "Type_IsOpenRecord_Example1": "决定记录 <code>type [ A = number, ...]</code> 是否打开。",
  "Option_Threshold_FuzzyMatch_Description": "一个介于 0.00 和 1.00 之间的数字，指定匹配两个值的相似性分数。\r\n    例如，仅当此选项设置为小于 0.90 时，“Grapes”和“Graes”(缺少“p”)才匹配。\r\n    阈值 1.00 仅允许完全匹配。\r\n    (请注意，模糊的“精确匹配”可能会忽略大小写、字词顺序和标点符号等差异。)\r\n    默认值为 0.80。",
  "Splitter_SplitTextByCharacterTransition_Example1": "每当大写或小写字母后跟数字时，拆分输入。",
  "Single_From_Example1": "获取 <code>\"1.5\"</code> 的单精度 <code>number</code> 值。",
  "Table_RemoveRows_Description": "从 {0} 的开头，以指定的 {1} 开始删除 {2} 行。如果没有提供 {2} 参数，则使用默认计数 1。",
  "Text_Replace": "替换文本中所有出现的给定子字符串。",
  "DateTimeZone_ToText_Example1": "将 <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> 转换为 <code>text</code> 值。<i>结果输出可能因当前区域性而异。</i>",
  "DateTimeZone_ToText_Example2": "使用自定义格式和德语区域性进行转换。",
  "DateTimeZone_ToText_Example3": "使用 ISO 8601 模式进行转换。",
  "Text_Remove_Description": "返回文本值 {0} 已删除了 {1} 的所有字符的副本。 ",
  "Date_Day": "返回星期几部分。",
  "_Pound_binary_Description": "从数字列表或以 64 为底的编码文本值创建一个二进制值。",
  "Essbase_Cubes_Description": "从 APS 服务器 {0} 处的 Essbase 实例中返回按 Essbase 服务器分组的多维数据集表。可以指定可选的记录参数 {1}，从而控制以下选项:\r\n    {1:type}",
  "Table_RowCount": "返回表中的行数。",
  "Table_NestedJoin_Example1": "使用单个键列联接两个表。",
  "Text_Select": "从输入字符文本值中选择出现的所有给定字符或字符列表。",
  "Table_TransformColumns": "转换一个或多个列的值。",
  "Table_SplitColumn_Example1": "将“i”处的 [Name] 列拆分为两列",
  "Table_ContainsAll_Description": "指示记录列表 {1} 中所有指定的记录是否显示为 {0} 中的各行。\r\n    可以指定一个可选参数 {2}，以控制表各行之间的比较。",
  "Table_TypeFromColumns": "从列及其值的列表推断表类型。",
  "List_Random_Description": "给定要生成的值数和一个可选种子值，以此返回随机数(介于 0 到 1 之间)的列表。\r\n<ul>\r\n   <li>{0}: 要生成的随机值数。</li>\r\n   <li>{1}:  <i>[可选]</i> 用于作为随机数生成器种子的数值。如果省略，则在每次调用函数时生成随机数的唯一列表。如果指定带数字的种子值，则每次调用函数时，生成随机数的相同列表。</li>\r\n</ul>",
  "Option_Content_WebAction_Description": "指定此值将导致其内容成为 HTTP 请求的正文。",
  "List_Intersect": "返回在输入中找到的列表值的交集。",
  "Type_Facets_Description": "返回一条包含 {0} 的 Facet 的记录。",
  "List_Durations_Example1": "创建 5 个值的列表，从 1 小时开始，以 1 小时为增量。",
  "SharePoint_Contents_Description": "返回包含在指定 SharePoint 站点 {0} 上找到的每个文件夹和文档的行的表。每行都包含该文件夹或文件的属性以及指向其内容的链接。可以指定 {1} 以控制以下选项:\r\n    {1:type}\r\n    ",
  "Table_MatchesAnyRows": "指示是否表中的任何行都满足给定的条件。",
  "Value_As": "如果值与指定类型兼容，则返回该值。",
  "Value_Is": "确定值是否与指定类型兼容。",
  "Value_Alternates_Description": "表示通过 Value.Expression(Value.Optimize(...)) 获取的查询计划表达式中的备用查询计划。不适用于其他用途。",
  "Number_FromText": "从通用文本格式(\"15\", \"3,423.10\", \"5.0E-10\")创建数。",
  "Soda_Feed_Description": "从位于指定 URL {0} (根据 SODA 2.0 API 进行格式化)的内容中返回一个表。URL 必须指向有效的符合 SODA 的源(以 .csv 扩展名结尾)。",
  "Informix_Database_Description": "返回服务器 {0} 上 Informix 数据库(在名为 {1} 的数据库实例中)中可用的 SQL 表和视图的表。可以视需要指定服务器的端口，并用冒号分隔。可以指定可选的记录参数 {2} 来控制以下选项:\r\n    {2:type}\r\n    例如，可以将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "Table_ExpandRecordColumn": "将记录列扩展为具有每个值的列。",
  "Text_ToList": "从给定的文本值返回字符值列表。",
  "Type_TableKeys": "返回给定表类型的可能为空的键列表。",
  "Parquet_Metadata_Description": "此功能不可用，因为它需要使用 .NET 4.5。",
  "BufferMode_Type": "描述要执行的缓冲类型。",
  "Date_IsInPreviousWeek_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一周中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "String": "",
  "Date_IsInPreviousQuarter_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一季度中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "List_MatchesAny_Description": "如果列表 {0} 中的任意值满足条件函数 {1}，则返回 <code>true</code>；否则返回 <code>false</code>。",
  "Table_MatchesAnyRows_Description": "指示是否 {0} 中的任何行都满足给定的 {1}。如果任何行都匹配，则返回 <code>true</code>；否则返回 <code>false</code>。",
  "Language_Table_Project": "表列可以作为值列表提取。",
  "Table_RenameColumns": "对格式 {old, new} 应用重命名。",
  "Language_Character": "字符为长度为 1 的文本值。",
  "Type_FunctionReturn": "返回由函数类型返回的类型。",
  "Text_BeforeDelimiter_Example2": "获取 \"111-222-333\" 第二个连字符前的部分。",
  "Text_BeforeDelimiter_Example3": "获取 \"111-222-333\" 倒数第二个连字符前的部分。",
  "Text_BeforeDelimiter_Example1": "获取 \"111-222-333\" (第一个)连字符前的部分。",
  "SapHanaRangeOperator_GreaterThanOrEquals": "SAP HANA 输入参数的“大于或等于”范围运算符。",
  "Type_ClosedRecord_Example1": "创建 <code>type [ A = number,…]</code> 的已关闭版本。",
  "Binary_Compress": "使用给定的压缩类型压缩二进制值。",
  "Date_Month": "返回月份部分。",
  "Day_Saturday_Description": "返回 6，该数值表示星期六。",
  "Value_Is_Example1": "比较两种确定数字是否与类型号兼容的方法。",
  "Number_Atan_Description": "返回 {0} 的反正切。",
  "Duration_From_Example1": "将 <code>2.525</code> 转换为 <code>duration</code> 值。",
  "Text_Upper_Example1": "获取 \"aBcD\" 的大写版本。",
  "DateTime_IsInNextNHours_Example1": "确定当前系统时间后的小时是否处于接下来的两个小时内。",
  "Option_ContextInfo_Caption": "设置 SQL Server 上下文信息",
  "Table_ReorderColumns_Description": "从输入 {0} 返回一个表，其中的列遵循由 {1} 指定的顺序。列表中未指定的列将不重新排序。\r\n     如果此列不存在，将引发异常，除非可选参数 {2} 指定备用值(例如，<code>MissingField.UseNull</code> 或 <code>MissingField.Ignore</code>)。",
  "AdoDotNet_DataSource": "返回 ADO.NET 数据源的架构集合。",
  "Day_Type": "指定星期几。",
  "Record_FromList_Example1": "从一个字段值列表和字段名称列表生成一个记录。",
  "Record_FromList_Example2": "从一个字段值列表和记录类型生成一个记录。",
  "DateTime_IsInNextNSeconds_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一秒数中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 秒数。</li>\r\n      </ul>",
  "Logical_FromText": "从文本值 \"true\" 和 \"false\" 创建逻辑值。",
  "Date_ToRecord": "返回包含日期值的各个部分的记录。",
  "Table_Unpivot_Description": "将表中的一组列转换为属性-值对，并与每行中的剩余值相结合。",
  "Table_RemoveLastN_Description": "返回一个表，该表不包含表 {0} 的最后 {1} 行。\r\n        删除的行数依赖于可选参数 {1}。\r\n    <ul>\r\n    <li> 如果忽略 {1}，则只删除最后一行。</li>\r\n    <li> 如果 {1} 为数字，则将删除该数字那么多的行(从底部开始)。</li>\r\n    <li> 如果 {1} 是条件，将删除满足此条件的行，直到行不满足条件为止。</li>\r\n    </ul>",
  "Table_Last_Description": "返回 {0} 的最后一行，或如果表为空，则返回可选默认值 {1}。",
  "AnalysisServices_Databases": "将 Analysis Services 数据库返回到特定的主机上。",
  "Record_ToTable_Description": "返回一个表，它包含 <code>Name</code> 和 <code>Value</code> 列以及对应于 {0} 中每个字段的行。",
  "Number_Cosh_Description": "返回 {0} 的双曲余弦。",
  "Comparer_Ordinal": "返回一个使用 Ordinal 规则的比较器函数以比较值。",
  "Order_Descending": "按降序对值进行排序。",
  "Date_AddMonths_Example2": "将 18 个月添加到表示日期和时间 5/14/2011 08:15:22 AM 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "Date_AddMonths_Example1": "将 5 个月添加到表示日期 5/14/2011 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "Int32_From_Example1": "获取 <code>\"4\"</code> 的 32 位整数 <code>number</code> 值。",
  "Int32_From_Example2": "使用 <code>RoundingMode.AwayFromZero</code> 获取 <code>\"4.5\"</code> 的 32 位整数 <code>number</code> 值。",
  "Text_SplitAny_Description": "返回根据指定的分隔符 {1} 中的任意字符拆分文本值 {0} 而得到的文本值列表。",
  "Decimal_From_Description": "从给定的 {0} 中返回十进制 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Decimal.From</code> 返回 <code> null</code>。如果给定的 {0} 是在十进制范围内的 <code>number</code>，则返回 {0}，否则返回错误。如果 {0} 属于任何其他类型，则将首先使用 <code>Number.FromText</code> 将其转换为<code>number</code>。还可以提供可选的 {1} (例如，“en-US”)。",
  "Text_Proper": "使每个字词的第一个字母为大写。",
  "Table_Pivot_Description": "给定一对表示属性-值对的列，将属性列中的数据旋转为列标题。",
  "Type_TableSchema_Description": "<p>返回说明 {0} 的列的表。</p>\r\n<p>请参阅有关 <code>Table.Schema</code> 的文档，以了解生成的表的说明。</p>",
  "DateTime_IsInCurrentHour": "指示此日期时间是否按系统当前日期和时间所确定的那样处于当前小时内。",
  "Action_ViewFunction": "创建可由在视图上(通过 Binary.View)定义的处理程序截获的函数。",
  "Option_RetryInterval_Description": "重试尝试之间的持续时间。默认值为 1 秒。",
  "Number_Log10_Example1": "获取 2 的以 10 为底的对数。",
  "Option_ApiVersion_SharePoint_Caption": "API 版本",
  "Cube_AttributeMemberProperty_Description": "返回维度属性 {0} 的属性 {1}。",
  "Occurrence_Repeating": "要求该项在输入中不出现或出现多次。",
  "DateTimeZone_SwitchZone_Example2": "将 #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) 的时区信息更改为 -30 分钟。",
  "DateTimeZone_SwitchZone_Example1": "将 #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) 的时区信息更改为 8 小时。",
  "Type_NonNullable_Description": "从 {0} 返回非 <code>nullable</code> 类型。",
  "Option_ExcludedFromCacheKey_Web_Description": "如果将此值指定为列表，则将排除这些 HTTP 标头键，使其不作为用于缓存数据的计算的一部分。",
  "Duration_ToText_Example1": "将 <code>#duration(2, 5, 55, 20)</code> 转换为文本值。",
  "Table_RemoveFirstN_Description": "返回一个表，该表不包含表 {0} 的指定数量的前几行 {1}。\r\n    删除的行数依赖于可选参数 {1}。\r\n    <ul>\r\n    <li> 如果忽略 {1}，则只删除第一行。</li>\r\n    <li> 如果 {1} 为数字，则将删除该数字那么多的行(从顶部开始)。</li>\r\n    <li> 如果 {1} 是条件，将删除满足此条件的行，直到行不满足条件为止。</li>\r\n    </ul>",
  "JoinKind_RightAnti": "<code>Table.Join</code> 中可选 <code>JoinKind</code> 参数的可能值。\r\n    右边的反联接返回在第一个表中没有匹配项的第二个表中的所有行。",
  "Text_PadEnd": "通过填充给定文本的尾部，返回指定长度的文本。",
  "Number_Sign_Example1": "确定 182 的符号。",
  "Number_Sign_Example3": "确定 0 的符号。",
  "Number_Sign_Example2": "确定 -182 的符号。",
  "List_StandardDeviation_Description": "返回基于样本估计的列表 {0} 中的值的标准偏差。\r\n    如果 {0} 是数字列表，则返回数字。\r\n    如果为空列表或类型不属于 <code>number</code> 的项的列表，将引发异常。",
  "Text_PadEnd_Description": "通过在文本值 {0} 的结尾插入空格，返回填充到长度 {1} 的 <code>text</code> 值。\r\n    可选字符 {2} 可用于指定用于填充的字符。默认的填充字符是空格。",
  "SharePoint_Files": "返回一个包含 SharePoint 站点文档的表。",
  "ODataOmitValues_Nulls": "允许 OData 服务忽略 null 值。",
  "Date_ToRecord_Example1": "将 <code>#date(2011, 12, 31)</code> 值转换为包含日期值的各个部分的记录。",
  "Text_ToList_Description": "从给定的文本值 {0} 返回字符值列表。",
  "List_RemoveMatchingItems_Description": "从列表 {0} 中删除 {1} 中所有出现的给定值。如果 {1} 中的值在 {0} 中不存在，则返回原始列表。\r\n    可以指定一个可选相等条件值 {2} 来控制相等测试。",
  "Folder_Files_Description": "返回一个表，其中包含在文件夹 {0} 及其所有子文件夹中找到的每个文件的一行。每行都包含文件的属性和指向其内容的链接。{1} 参数当前仅供内部使用。",
  "Duration_FromText": "从文本形式的占用时间格式(d.h:m:s)返回持续时间值。",
  "List_MatchesAll": "如果列表中的所有值均满足条件函数，则返回 true。",
  "List_MatchesAny": "如果任意值满足条件函数，则返回 true。",
  "List_Dates_Example1": "创建 5 个值的列表，从新年除夕(#date(2011, 12, 31))开始，以 1 天为增量(#duration(1, 0, 0, 0))。",
  "Table_FuzzyJoin_Example1": "基于 [FirstName] 的两个表的左侧内部模糊联接",
  "Type_RecordFields_Example1": "找到记录 <code>[ A = number, optional B = any]</code> 的名称和值。",
  "Number_ToText_Example1": "在不指定格式的情况下将数字转换为文本。",
  "Number_ToText_Example2": "将数字转换为指数格式。",
  "Number_ToText_Example3": "将数字转换为仅包含一位小数的百分比格式。",
  "Table_ViewFunction_Description": "<p>创建一个基于可以在由 <code>Table.View</code> 创建的视图中处理的 {0} 的视图函数。</p>\r\n<p><code>Table.View</code> 的 <code>OnInvoke</code> 处理程序可用于定义视图函数的处理程序。</p>\r\n<p>与内置操作的处理程序一样，如果未指定 <code>OnInvoke</code> 处理程序，或如果处理程序未处理视图函数，或如果处理程序引发错误，则将 {0} 应用于视图顶部。</p>\r\n<p>有关 <code>Table.View</code> 和自定义视图函数的更完整的说明，请参阅已发布的 Power Query 自定义连接器文档。</p>",
  "DateTime_LocalNow": "返回采用本地时区的当前日期和时间。",
  "Diagnostics_Trace_Description": "写入跟踪 {1} (如果已启用跟踪的话)并返回 {2}。可选参数 {3} 指定了是否延迟计算 {2} 直到跟踪到消息。{0} 可取以下任一值:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>、\r\n    <code>TraceLevel.Warning</code>、\r\n    <code>TraceLevel.Information</code>、\r\n    <code>TraceLevel.Verbose</code>。\r\n  ",
  "Extension_InvokeWithPermissions_Description": "在所提供权限处理程序 {0} 的上下文中调用函数 {1}。处理程序必须返回逻辑值以指示已授予权限(如果为 true)或已拒绝授予权限，或返回 <code>null</code> 以指示应提示用户。",
  "Cube_DisplayFolders_Description": "返回可在 {0} 中使用的表示对象(如维度和度量值)显示文件夹层次结构的表嵌套树。",
  "Text_PadStart_Example1": "填充文本值的开头，使其长度为 10 个字符。",
  "Text_PadStart_Example2": "用 \"|\" 填充文本值的开头，使其长度为 10 个字符。",
  "Uri_BuildQueryString": "将记录汇编入 URI 查询字符串。",
  "Splitter_SplitTextByAnyDelimiter": "返回一个函数，它在任意指定的分隔符处将文本拆分为文本列表。",
  "Table_RemoveColumns": "删除指定的列。",
  "Splitter_SplitByNothing": "返回不拆分且将其自变量作为单元素列表返回的函数。",
  "DateTime_IsInPreviousSecond": "指示此日期时间是否会在系统当前日期和时间确定的上一秒中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。",
  "Comparer_OrdinalIgnoreCase": "返回使用 Ordinal 规则来比较值的不区分大小写的比较器函数。",
  "LimitClauseKind_Top": "此 SQL 方言支持 TOP 说明符，以限制返回的行数。",
  "Int32_From_Description": "从给定的 {0} 中返回 32 位整数 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Int32.From</code> 返回 <code>null</code>。如果给定的 {0} 是不带小数部分的 32 位整数范围内的 <code>number</code>，则返回 {0}。如果带有小数部分，则按指定舍入模式舍入该数字。默认舍入模式为 <code>RoundingMode.ToEven</code>。如果 {0} 属于任何类型，则首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。要了解可用的舍入模式，请参阅 <code>Number.Round</code>。还可能提供可选的 {1} (例如，“en-US”)。",
  "JoinAlgorithm_RightIndex": "按批次使用右表中的键对左表执行基于谓词的查询。如果左表较大、支持 Table.SelectRows 折叠，且包含少量预期与右行匹配的行，则建议使用此算法。",
  "SapBusinessWarehouse_Cubes_Description": "从 SAP Business Warehouse 实例(位于服务器 {0} 上，系统号为 {1}，客户端 ID 为 {2})返回一个表，其中包含按 InfoArea 分组的 InfoCube 和查询。可以指定可选的记录参数 {3} 来控制以下选项:\r\n    {3:type}\r\n    ",
  "Option_SubQueries_Caption": "SubQueries 值",
  "List_ContainsAny_Example2": "查看列表 {1, 2, 3, 4, 5} 是否包含 6 或 7。",
  "List_ContainsAny_Example1": "查看列表 {1, 2, 3, 4, 5} 是否包含 3 或 9。",
  "Number_RoundDown_Example2": "将 1.999 向下舍入到整数。",
  "Number_RoundDown_Example3": "将 1.999 向下舍入为包含两位小数。",
  "Number_RoundDown_Example1": "将 1.234 向下舍入到整数。",
  "Environment_FeatureSwitch": "返回当前环境中设置的一个配置属性的值。",
  "Table_CombineColumnsToRecord_Description": "将 {0} 的指定列合并到名为 {1} 的新记录值列中，其中每条记录都具有对应于所合并列的列名和值的字段名称和值。如果为 {3} 指定了记录，可能会提供以下选项:\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: 指定为文本时，指示应将给定列名视为记录的显示名称。这不一定要是记录本身包含的列。</li>\r\n     <li> <code>TypeName</code>: 指定为文本时，为生成的记录提供逻辑类型名称。在数据加载过程中，加载环境可以使用该逻辑类型名称来驱动行为。</li>\r\n    </ul>\r\n    ",
  "Action_Return_Description": "创建执行时不执行任何操作并返回 {0} 作为其结果的操作。",
  "Odbc_InferOptions": "返回尝试推断 ODBC 驱动程序的 SQL 功能的结果。",
  "Table_TransformRows_Example2": "将数值表的行转换为文本记录。",
  "Table_TransformRows_Example1": "将表的行转换为数字列表。",
  "Language_NotEquals": "如果两个值不相等，<> 返回 true。",
  "Culture_Current": "返回应用程序的当前区域性的名称。",
  "Table_AddKey_Example1": "向表添加单列主键。",
  "_Pound_datetimezone_Description": "从年、月、日、小时、分钟、(小数)秒、(小数)偏差小时数和偏差分钟数。创建 datetimezone 值。如果以下内容不为 true 将引发错误:\r\n    <ul>\r\n      <li> 1 ≤ 年 ≤ 9999 </li>\r\n      <li> 1 ≤ 月 ≤ 12 </li>\r\n      <li> 1 ≤ 日 ≤ 31 </li>\r\n      <li> 0 ≤ 小时 ≤ 23 </li>\r\n      <li> 0 ≤ 分钟 ≤ 59 </li>\r\n      <li> 0 ≤ 秒 < 60 </li>\r\n      <li> -14 ≤ 偏差小时数 + 偏差分钟数 / 60 ≤ 14 </li>\r\n    </ul>",
  "Html_Table_Description": "此功能不可用，因为它需要使用 .NET 4.5。",
  "List_Mode_Description": "返回列表 {0} 中出现最多的项。如果列表为空，将引发异常。如果出现最多的项有多个，则选择其中的最后一项。\r\n    可以指定可选的 <code>comparisonCriteria</code> 值 {1} 来控制相等测试。 ",
  "Replacer_ReplaceText_Example1": "在字符串 \"hEllo world\" 中使用 \"He\" 替换文本 \"hE\"。",
  "Option_PackageCollection_Description": "为包集合指定字符串值(默认值为 \"NULLID\")以启用处理 SQL 语句所需的共享包。适用于 Implementation = \"Microsoft\"。",
  "Cube_DisplayFolders": "返回表示对象(如维度和度量值)显示文件夹层次结构的表嵌套树。",
  "ItemExpression_From_Example1": "返回函数 <code>each _ <> null</code> 主体的 AST",
  "RowExpression_Row": "表示行表达式中行的抽象语法树(AST)节点。",
  "Tables_GetRelationships_Description": "获取一组表之间的关系。假定集 {0} 的结构与导航表的结构相似。{1} 定义的列包含实际数据表。",
  "Value_Optimize": "表示 Value.Expression，它用于为值返回已优化的表达式。",
  "Date_IsInNextDay": "指示此日期是否会在系统当前日期和时间确定的下一天中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。",
  "Option_MultiSubnetFailover_Description": "一个逻辑值(true/false)，用于设置连接字符串中 \"MultiSubnetFailover\" 属性的值(默认值为 false)。",
  "List_Positions_Example1": "查找列表 {1, 2, 3, 4, null, 5} 中值的偏移量。",
  "Binary_FromText_Description": "返回将文本值 {0} 转换为二进制值(<code>number</code> 的列表)的结果。可以指定 {1} 以便指示在文本值中使用的编码。\r\n      以下 <code>BinaryEncoding</code> 值可用于 {1}。\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64 编码</li>\r\n        <li><code>BinaryEncoding.Hex</code>: 十六进制编码</li>\r\n      </ul>",
  "Number_Tan_Description": "返回 {0} 的正切。",
  "Time_Hour_Example1": "查找 #datetime(2011, 12, 31, 9, 15, 36) 中的小时。",
  "Language_Duration_Subtract": "duration 值可以相减。",
  "List_IsEmpty": "如果列表为空，则返回 true。",
  "Table_FillUp": "将一个单元的值传播到该列中上面的值为 Null 的单元中。",
  "Table_FirstN": "返回指定的前几个计数行。",
  "BinaryFormat_7BitEncodedUnsignedInteger": "读取使用 7 位可变长度编码进行编码的 64 位无符号整数的二进制格式。",
  "Binary_Buffer": "缓冲内存中的二进制值。",
  "Table_ReplaceRelationshipIdentity": "此函数仅供内部使用。",
  "Value_Multiply": "返回两个值的乘积。",
  "Table_ViewError_Description": "根据 {0} 创建修改后的错误记录，该记录在视图上定义的处理程序引发时(通过 Table.View)将不会触发回退。",
  "Record_Combine_Description": "组合给定 {0} 中的记录。如果 {0} 包含非记录值，将返回错误。",
  "DateTimeZone_ZoneMinutes": "更改此值的时区。",
  "Type_ListItem_Description": "从列表 {0} 中返回项类型。",
  "Date_DaysInMonth_Description": "返回 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值 {0} 中一个月的天数。\r\n <ul>\r\n        <li>{0}: 为其返回月份中的天数的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Language_List_Combine": "可以使用 \"&\" 号组合列表。",
  "DateTime_IsInPreviousNMinutes": "指示此日期时间是否会在系统当前日期和时间确定的上一分钟数中出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。",
  "Duration_ToRecord_Example1": "将 <code>#duration(2, 5, 55, 20)</code> 转换为包括天、小时、分钟和秒这些部分的记录(如果适用)。",
  "Date_DayOfYear_Description": "返回一个数值，该值在提供的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值 {0} 中表示一年中的日期。",
  "Option_ConcurrentRequests_Stream_Caption": "要并行执行的数据请求数。",
  "DateTime_From_Example2": "将 <code>#date(1975, 4, 4)</code> 转换为 <code>datetime</code> 值。",
  "DateTime_From_Example1": "将 <code>#time(06, 45, 12)</code> 转换为 <code>datetime</code> 值。",
  "Type_FunctionRequiredParameters_Description": "返回一个数字，表明调用函数的输入 {0} 所需参数的最小数量。",
  "Table_HasColumns": "指示表是否包含指定的列。",
  "RankKind_Dense": "比较结果为相等的项目将获得相同的排名编号，下一个项目会采用与之连续的编号，编号间无空隙。",
  "AnalysisServices_Database": "从 Analysis Services 数据库中返回多维数据集或表格模型的表。",
  "Compression_Deflate": "压缩数据为 \"Deflate\" 格式。",
  "Option_EnableCrossDatabaseFolding_Caption": "跨数据库折叠",
  "DateTime_IsInNextNSeconds_Example1": "确定当前系统时间后的秒是否处于接下来的两秒内。",
  "Date_EndOfWeek_Description": "返回包含 {0} 的周结束值。\r\n此函数取可选的 <code>Day</code> {1}，从而设置为此相对计算的一周的第一天。默认值为<code>Day.Sunday</code>。\r\n      <ul>\r\n        <li>{0}: 从中计算一周最后一天的<code>date</code>、<code>datetime</code>或<code>datetimezone</code>值</li>\r\n        <li>{1}: <i>[可选]</i>表示一周第一天的<code>Day.Type</code>值。可能的值为 <code>Day.Sunday</code>、<code>Day.Monday</code>、<code>Day.Tuesday</code>、<code>Day.Wednesday</code>、<code>Day.Thursday</code>、<code>Day.Friday</code>和<code>Day.Saturday.</code>。默认值为<code>Day.Sunday</code>。</li>\r\n      </ul>",
  "Duration_Minutes_Description": "返回 {0} 的分钟数部分。",
  "Option_Threshold_FuzzyMatch_Caption": "匹配两个值所依据的相似度分数。",
  "Table_FirstValue_Description": "返回表 {0} 的第一行的第一列或指定的默认值。",
  "Binary_End_Example1": "返回二进制值的结尾。",
  "_Pound_table_Description": "根据 {0} 和 {1} 创建表值。\r\n    {0} 值可以是列名列表、表类型、列数或 null。\r\n    {1} 值是列表列表，其中每个元素都包含单行的列值。",
  "Duration_Minutes_Example1": "从持续时间值中提取分钟数。",
  "Type_ForFunction_Example1": "为需要使用 X 数字参数并返回数字的函数创建类型。",
  "List_RemoveRange_Example1": "在列表 {1, 2, 3, 4, -6, -2, -1, 5} 中删除从索引 4 开始的 3 个值。",
  "DateTimeZone_ToUtc_Example1": "将 #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) 的时区信息更改为 UTC 时区。",
  "Record_FromList": "根据给定的一个字段值列表和一组字段，返回一个记录。",
  "List_Numbers_Example2": "生成从 1 开始的 10 个数的列表，每个后续数按 2 递增。",
  "List_Numbers_Example1": "生成从 1 开始的 10 个连续数的列表。",
  "Table_RemoveMatchingRows": "从表中删除出现的所有指定行。",
  "Table_PositionOfAny_Description": "返回 {1} 的列表在 {0} 中第一次出现的行位置。如果找不到该值，则返回 -1。\r\n    <ul>\r\n    <li>{0}: 输入表。</li>\r\n       <li>{1}: 表中要查找其位置的行列表。</li>\r\n       <li>{2}: <i>[可选]</i> 指定要返回的行的出现次数。</li>\r\n       <li>{3}: <i>[可选]</i> 控制表行之间的比较。</li>\r\n    </ul>\r\n    ",
  "Language_DateTimeLiteral": "将 datetime 值编写为 #datetime(年, 月, 日, 小时, 分钟, 秒)。",
  "Table_RenameColumns_Description": "对表 {0} 中的列执行给定的重命名。一个替换操作 {1} 由两个值的列表以及某个列表中提供的旧列名和新列名组成。\r\n    如果此列不存在，将引发异常，除非可选参数 {2} 指定备用值(例如， <code>MissingField.UseNull</code> 或 <code>MissingField.Ignore</code>)。",
  "Date_EndOfDay_Example2": "获取 5/17/2011 05:00:00 PM -7:00 的一天结束值。",
  "Date_EndOfDay_Example1": "获取 5/14/2011 05:00:00 PM 的一天结束值。",
  "DateTime_IsInCurrentHour_Example1": "确定当前系统时间是否处于当前小时内。",
  "Date_IsInNextYear_Example1": "确定当前系统时间之后的那一年度是否处于下一年度。",
  "Option_Implementation_Description": "指定要使用的内部数据库提供程序实现。有效值为: \"IBM\" 和 \"Microsoft\"。",
  "Cube_Measures": "返回包含可用度量值集的表。",
  "Option_PackageCollection_Caption": "启用大容量插入",
  "Currency_From_Description": "从给定的 {0} 返回 <code>currency</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Currency.From</code> 将返回 <code>null</code>。如果给定的 {0} 是货币范围内的 <code>number</code>，则将 {0} 的小数部分舍入为 4 位小数位数后返回。如果 {0} 属于任何其他类型，则首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。货币的有效范围为 <code>-922,337,203,685,477.5808</code> 到 <code>922,337,203,685,477.5807</code>。要了解可用的舍入模式，请参阅 <code>Number.Round</code>。默认为 <code>RoundingMode.ToEven</code>。还可能提供可选的 {1} (例如 “en-US”)。",
  "Currency_Type": "表示货币值的类型。",
  "Table_Split_Description": "将 {0} 拆分为一系列表，其中列表的第一个元素是包含源表中前 {1} 个元素的表，\r\n    列表的下一个元素是包含源表中接下来 {1} 个元素的表，以此类推。",
  "Currency_From": "从给定值中返回一个货币值。",
  "DateTimeZone_LocalNow_Description": "返回设置为系统上的当前日期和时间的 <code>datetimezone</code> 值。\r\n    返回的值包含表示本地时区的时区信息。",
  "Language_EachColumn": "在 each 中，表列可以用 [Column] 指代。",
  "Cube_ReplaceDimensions_Description": "替换 <code>Cube.Dimensions</code> 返回的维度集。\r\n    例如，此函数可用于向维度属性添加 ID 列，以便数据源可以按 ID 而不是显示的值进行分组。",
  "Text_RemoveRange_Description": "返回文本值 {0} 已删除了位置 {1} 的所有字符的副本。\r\n    可选参数 {2} 可用于指定要删除的字符数。{2} 的默认值为 1。位置值从 0 开始。",
  "Logical_Constants_False": "返回值 false。",
  "Splitter_SplitTextByPositions_Example2": "从输入结尾开始，在指定位置拆分输入。",
  "Splitter_SplitTextByPositions_Example1": "从输入开头开始，在指定位置拆分输入。",
  "Table_FromColumns_Description": "从包含嵌套列表以及列名和值的列表 {0} 创建类型为 {1} 的表。\r\n    如果某些列比其他列具有更多值，则当这些列可为 Null 时，缺少的值将使用默认值 \"Null\" 填充。",
  "RowExpression_Column_Example1": "创建表示对列 \"CustomerName\" 的访问权限的 AST。",
  "DateTimeZone_ToUtc_Description": "将日期时间值 {0} 的时区信息更改为 UTC 或通用协调时间时区信息。\r\n    如果 {0} 不具有时区部分，则添加 UTC 时区信息。",
  "Text_FromBinary_Description": "使用 {1} 类型将数据 {0} 从二进制值解码为文本值。",
  "Table_ExpandRecordColumn_Example1": "将表 <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> 中的列 [a] 扩展为 3 列 \"aa\"、\"bb\" 和 \"cc\"。",
  "DateTimeZone_ZoneHours": "更改此值的时区。",
  "Option_OldGuids_Caption": "启用大容量插入",
  "Option_BlockSize_Description": "等待数据使用者前要读取的字节数。默认值为 4MB。",
  "Uri_Parts_Description": "返回输入 {0} 的组成部分作为记录，包含诸如方案、主机、端口、路径、查询、片段、用户名和密码等此类值。",
  "Table_Column": "将表中指定的数据列返回为列表。",
  "Table_MatchesAnyRows_Example1": "确定列 [a] 中的任何行值是否在表 <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> 中。",
  "Table_MatchesAnyRows_Example2": "确定表 <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> 中任何行值是否均为 [a = 1, b = 2]。",
  "List_Density_Example1": "在以下列表 {1, 2, \"A\", #date(2005, 1, 10), \"A\", 2, 2} 中查看每个值的频率。",
  "DateTime_IsInNextSecond_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一秒中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Option_ApiVersion_Salesforce_Caption": "API 版本",
  "List_Mode_Example1": "查找列表 <code>{\"A\", 1, 2, 3, 3, 4, 5}</code> 中出现最多的项。",
  "List_Mode_Example2": "查找列表 <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> 中出现最多的项。",
  "Table_Join_Description": "<p>根据由 {0} (针对 {2})和 {1} (针对 {0})选择的键列值的等同性联接 {3} 的行与 {2} 的行。</p>\r\n<p>默认执行内联接，但可包含可选的 {4} 来指定联接类型。选项包括:\r\n    {4:type}\r\n</p>\r\n<p>可包含 {6} 的可选集来指定如何比较键列。此参数目前仅适用于内部使用。</p>",
  "List_MatchesAll_Example2": "确定列表 {1, 2, 3} 中的所有值是否大于 10。",
  "List_MatchesAll_Example1": "确定列表 {11, 12, 13} 中的所有值是否大于 10。",
  "MissingField_Ignore": "记录和表函数中的一个可选参数，指示应忽略缺失字段。",
  "List_Sort_Description": "根据指定的可选条件对数据列表{0} 进行排序。\r\n    可选参数 {1} 可以指定为比较条件。这可以采用以下值:\r\n    <ul>\r\n    <li> 要控制顺序，比较条件可以为“顺序”枚举值。(<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> 要计算要用于排序的键，可以使用 1 个参数的函数。</li>\r\n    <li> 要同时选择键并控制顺序，比较条件可以为包含键和顺序的列表 (<code>{{each 1 / _, Order.Descending}}</code>)。</li>\r\n    <li> 要完全控制比较，可以使用 2 个参数的函数。此函数将从列表中传递两个项(任意两项、任意顺序)。该函数应返回以下其中一个值:\r\n        <ul>\r\n            <li> <code>-1</code>: 第一项小于第二项。</li>\r\n            <li> <code>0</code>: 项相等。</li>\r\n            <li> <code>1</code>: 第一项大于第二项。</li>\r\n        </ul>\r\n        Value.Compare 为可用于委托此逻辑的方法。</li>\r\n    </ul>",
  "Expression_Evaluate_Example1": "计算简单求和。",
  "Expression_Evaluate_Example2": "计算更复杂的求和。",
  "Expression_Evaluate_Example3": "计算含标识符的文本值的串联。",
  "List_Accumulate_Example1": "使用 ((state, current) => state + current ) 从列表 {1, 2, 3, 4, 5} 中的项累积汇总值。",
  "Uri_EscapeDataString": "根据 RFC 3986 对特殊字符进行编码。",
  "Action_Sequence": "创建按顺序执行操作序列的操作。",
  "Combiner_CombineTextByPositions": "返回一个函数，它使用指定的位置将文本列表合并成单个文本。",
  "Option_ContextInfo_Description": "一个二进制值，用于在运行每个命令之前设置 CONTEXT_INFO。",
  "Record_FieldCount_Example1": "查找记录中的字段数。",
  "Table_StopFolding_Description": "防止任何下游操作针对 {0} 中的原始数据源运行。",
  "Date_StartOfDay_Example1": "查找 2011 年 10 月 10 日上午 8:00 的天开始值。",
  "SapHanaDistribution_All": "SAP HANA 的 \"All\" 分发选项。",
  "SapHanaDistribution_Off": "SAP HANA 的 \"Off\" 分发选项。",
  "Table_Column_Description": "将表 {0} 中由 {1} 指定的数据列返回为列表。",
  "List_SingleOrDefault_Example3": "在列表 {} 中查找单个值。如果为空，则返回 -1。",
  "List_SingleOrDefault_Example2": "在列表 {} 中查找单个值。",
  "List_SingleOrDefault_Example1": "在列表 {1} 中查找单个值。",
  "Table_Buffer": "在内存中缓冲一个表，同时在计算期间使其与外部更改隔离。",
  "Table_FromColumns_Example1": "从列表中的客户名称列表返回一个表。客户列表项中的每个值将成为一个行值，每个列表将成为一个列。",
  "Table_FromColumns_Example2": "从给定的列列表和列名列表创建一个表。",
  "Table_FromColumns_Example3": "创建一个表，其中每行的列数不同。缺失的行值为 null。",
  "Value_NativeQuery_Description": "<p>使用 {2} 中指定的参数和 {3} 中指定的选项对 {0} 计算 {1}。</p>\r\n<p>{0} 定义查询的输出。</p>\r\n<p>{0} 提供 {1} 所述运算的上下文。</p>\r\n<p>{1} 描述了要对 {0} 执行的查询。{1} 以 {0} 的专用方式(例如 T-SQL 语句)进行表示。</p>\r\n<p>可选的 {2} 值可能包含适用于提供 {1} 预期的参数值的列表或记录。</p>\r\n<p>可选的 {3} 记录可能包含影响 {1} 对 {0} 的计算行为的选项。这些选项为 {0} 所特有。</p>",
  "Table_ToRecords_Example1": "将表转换为记录列表。",
  "BinaryFormat_Choice_Example2": "读取字节的列表，其中的元素数目由第一个字节确定，并且保留读取的第一个字节。",
  "BinaryFormat_Choice_Example3": "读取字节的列表，其中的元素数目通过使用流式列表由第一个字节确定。",
  "BinaryFormat_Choice_Example1": "读取字节的列表，其中的元素数目由第一个字节确定。",
  "Option_Query_SQL_Description": "用于检索数据的本机 SQL 查询。如果查询生成多个结果集，则仅返回第一个结果集。",
  "Cube_CollapseAndRemoveColumns": "通过折叠映射至指定列的属性，更改多维数据集筛选上下文的维度粒度。",
  "Table_Repeat_Example1": "对表中的行重复两次。",
  "Table_AddKey": "向表添加键。",
  "Number_RoundDown": "返回上一个最大数。可以指定位数。",
  "Comparer_Equals": "在对两个给定值进行同等性检查的基础上返回一个逻辑值。",
  "Option_Query_MDX_Caption": "MDX 查询",
  "Date_ToRecord_Description": "返回包含给定日期值 {0} 的各个部分的记录。\r\n <ul>\r\n        <li>{0}: 要从中计算其各个部分的记录的 <code>date</code> 值。</li>\r\n      </ul>",
  "Table_Repeat_Description": "从输入 {0} 返回一个表，其中的列重复了指定的 {1} 次。",
  "List_Range_Description": "返回从偏移量 {0} 开始的列表的子集。可选参数 {1} 用于设置子集中的最大项数。",
  "Table_IsDistinct_Description": "指示 {0} 是否仅包含非重复行(没有重复项)。如果行为非重复行，则返回 <code>true</code>；否则返回 <code>false</code>。\r\n    可选参数 {1} 指定对表中的哪些列进行测试以确定是否具有重复项。如果未指定 {1}，则测试所有列。",
  "Extension_HasPermission": "返回一个逻辑值，指示用户是否已授予特定权限 {0}。",
  "Embedded_Value": "在嵌入的混合资源中按名称访问值。",
  "Table_Transpose": "使列成为行，并使行成为列。",
  "Replacer_ReplaceValue_Example1": "使用值 10 替换值 11。",
  "RData_FromBinary": "从 RData 文件返回数据帧记录。",
  "Date_IsInPreviousWeek": "指示此日期是否会在系统当前日期和时间确定的上一周中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。",
  "Date_IsInPreviousYear": "指示此日期是否会在系统当前日期和时间确定的上一年中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。",
  "Text_Replace_Example1": "将句子中出现的每个 \"the\" 替换为 \"a\"。",
  "Compression_Type": "指定压缩类型。",
  "Compression_GZip": "压缩数据为 \"GZip\" 格式。",
  "Compression_None": "数据已解压缩。",
  "Table_RenameColumns_Example2": "在表中将列名 \"CustomerNum\" 替换为 \"CustomerID\"，并将 \"PhoneNum\" 替换为 \"Phone\"。",
  "Table_RenameColumns_Example3": "在表中将列名 \"NewCol\" 替换为 \"NewColumn\"，如果列不存在，则忽略。",
  "Table_RenameColumns_Example1": "在表中将列名 \"CustomerNum\" 替换为 \"CustomerID\"。",
  "Table_Contains_Example1": "确定表是否包含行。",
  "Table_Contains_Example2": "确定表是否包含行。",
  "Table_Contains_Example3": "确定表是否包含只比较列 [Name] 的行。",
  "Table_NestedJoin": "对提供的列执行两个表之间的联接，并在新列中生成联接结果。",
  "Number_Acos_Description": "返回 {0} 的反余弦。",
  "BinaryOccurrence_Optional": "要求该项在输入中不出现或出现一次。",
  "Day_Sunday_Description": "返回 0，该数值表示星期日。",
  "List_Times_Example1": "从中午(#time(12, 0, 0))开始创建 4 个值的列表，以 1 小时为增量(#duration(0, 1, 0, 0))。",
  "Date_MonthName": "返回月份名称部分。",
  "Extension_HasPermission_Description": "返回一个逻辑值，指示用户是否已授予特定权限 {0}。",
  "Table_TransformColumnTypes_Description": "通过对在参数 {1} 中指定的列应用转换操作(其中格式为 {{ column name, type name}})，使用可选参数 {2} 中的指定区域性(例如 \"en-US\")，从输入 {0} 中返回一个表。\r\n    如果该列不存在，则引发异常。",
  "Date_MonthName_Description": "返回所提供的 {0} 的月份部分的名称。还可提供可选的 {1} (例如 \"en-US\")。",
  "Diagnostics_Trace_Example1": "在调用 Text.From 函数前跟踪消息，并返回结果。",
  "Binary_Length": "返回字符数。",
  "Table_RemoveMatchingRows_Example1": "从表 <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code> 中删除其中具有 [a = 1] 的任何行。",
  "List_Average_Description": "返回列表 {0} 中项的平均值。采用与列表中的值所属的同一数据类型给出结果。仅处理 number、date、time、datetime、datetimezone 和 duration 值。\r\n    如果列表为空，则返回 null。",
  "TraceLevel_Verbose_Description": "返回详细跟踪级别值 5。",
  "Type_Union": "返回类型列表的并集。",
  "Excel_Workbook_Example1": "从 Excel 工作簿返回 Sheet1 的内容。",
  "DirectQueryCapabilities_From": "此函数仅供内部使用。",
  "Table_FromPartitions_Example1": "从列表 <code>{number}</code> 中找到项类型。",
  "Day_Friday": "表示星期五。",
  "List_Accumulate": "从列表中的项累积汇总值。",
  "Cube_ApplyParameter_Description": "通过 {2} 将 {1} 应用到 {0} 后返回多维数据集。",
  "HdInsight_Files": "返回包含从 Azure 存储库的指定容器中找到的 Blob 属性和内容的表。",
  "BinaryFormat_Transform_Description": "返回一个二进制格式，该二进制格式将转换由另一个二进制格式读取的值。 参数 {0} 指定将用于读取值的二进制格式。 使用读取的值调用 {1}，并返回转换后的值。",
  "DateTimeZone_ToLocal_Example1": "将针对 #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) 的时区信息更改为本地时区(假定 PST)。",
  "Language_Time_Math": "time 值可以相减以生成 duration 值。",
  "Record_AddField_Example1": "将字段地址添加到记录。",
  "Pdf_Tables_Description": "此功能不可用，因为它需要使用 .NET 4.5。",
  "BinaryFormat_List_Description": "返回读取项序列并返回 <code>列表</code> 的二进制格式。{0} 参数指定每个项的二进制格式。可通过三种方式确定读取的项数: <ul><li>如果未指定 {1}，则将一直读取二进制格式，直到没有任何项为止。</li><li>如果 {1} 是数字，则二进制格式将读取此数量的项。</li><li>如果 {1} 是一个函数，则将为每个读取项调用该函数。该函数返回 true 可继续，返回 false 可停止读取项。最后一项包含在列表中。</li><li>如果 {1} 是二进制格式，则项计数应位于列表前面，并使用指定的格式读取计数。</li></ul>",
  "List_RemoveLastN_Example1": "从 {1, 2, 3, 4, 5} 创建不带后 3 个数的列表。",
  "List_RemoveLastN_Example2": "从 {5, 4, 2, 6, 4} 创建一个列表，它以小于 3 的数结尾。",
  "RowExpression_From_Description": "<p>返回 {0} 主体的抽象语法树(AST)，规范化为行表达式<i></i>:\r\n<ul>\r\n  <li>函数必须为单参数 lambda。</li>\r\n  <li>对函数参数的所有引用已替换为 <code>RowExpression.Row</code>。</li>\r\n  <li>对列的所有引用已替换为 <code>RowExpression.Column(columnName<i></i>)</code>。</li>\r\n  <li>AST 将简化为仅包含以下种类的节点:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>如果无法返回 {0} 的主体的行表达式 AST，会出现错误。</p>",
  "List_IsEmpty_Description": "如果列表 {0} 不包含值(长度为 0)，则返回 <code>true</code>。如果列表包含值(长度 > 0)，则返回 <code>false</code>。",
  "Table_Keys_Example1": "获取表的键列表。",
  "Text_AfterDelimiter_Description": "返回指定的 {1} 之后的 {0} 部分。\r\n    可选数字 {2} 指示要考虑哪一次出现的 {1}。\r\n    可选列表 {2} 指示要考虑哪一次出现的 {1}，以及应从输入的开头还是结尾编制索引。",
  "Text_ToBinary_Description": "使用指定的 {1} 将给定的文本值 {0} 编码为二进制值。",
  "Table_Sort_Description": "使用一个或多个列名的列表和可选的 {1} (格式为 {{ {{ col1, comparisonCriteria }}, {{col2}} }})对 {0} 排序。",
  "Text_Select_Description": "返回文本值 {0} 已删除了不在 {1} 中的所有字符的副本。 ",
  "Option_RequestSize_Caption": "请求大小",
  "Table_TransformRows_Description": "通过将 {1} 操作应用于 {0} 中的每一行来创建<code>列表</code>。",
  "Text_ReplaceRange_Description": "返回从文本值 {0} 中的位置 {1} 开始删除一些字符 {2}，然后在 {0} 中的相同位置插入文本值 {3} 的结果。",
  "Duration_TotalDays_Example1": "查找持续时间值跨越的总天数。",
  "Option_ConnectionTimeout_ODBC_Caption": "连接超时",
  "Action_DoNothing": "执行时不执行任何操作并返回 <code>null</code> 作为其结果的操作。",
  "List_Skip_Description": "返回跳过列表 {0} 的第一个元素的列表。如果 {0} 为空列表，则返回空列表。\r\n此函数取一个可选参数 {1} 来支持跳过以下所列的多个值。\r\n <ul>\r\n <li>如果指定一个数，则最多跳过这么多项。</li>\r\n <li>如果指定条件，则返回的列表以 {0} 中满足条件的第一个元素开头。一旦某个项不满足该条件，则不再考虑其他项。</li>\r\n <li>如果此参数为 null，将采用默认行为。</li>\r\n </ul>",
  "Binary_Compress_Example1": "压缩二进制值。",
  "Odbc_Query": "返回在 ODBC 数据源上运行本机查询的结果。",
  "DateTime_IsInNextNHours_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一小时数中出现。请注意，当传递一个在当前小时内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 小时数。</li>\r\n      </ul>",
  "Text_Reverse_Description": "反向所提供的 {0}。",
  "DateTime_Date_Example1": "查找 #datetime(2010, 12, 31, 11, 56, 02) 的日期值。",
  "Password_Type": "表示文本密码的类型。",
  "CryptoAlgorithm_Type": "指定要使用的加密算法。",
  "Extension_InvokeVolatileFunction": "即使在不允许使用的环境中仍然调用易失函数。",
  "List_MinN_Example1": "查找列表 <code>{3, 4, 5, -1, 7, 8, 2}</code> 中的 5 个最小值。",
  "SharePoint_Contents": "返回一个包含 SharePoint 站点内容的表。",
  "TraceLevel_Warning_Description": "返回警告跟踪级别值 3。",
  "Table_AddFuzzyClusterColumn_Example1": "查找员工所在位置的代表值。",
  "List_Distinct": "返回删除了重复项的值列表。",
  "Function_ScalarVector": "在向量函数的基础上创建一个标量函数，批量处理多次调用。",
  "SharePoint_Tables_Description": "返回包含在指定 SharePoint 列表 {0} 上找到的每个列表项的行的表。每行都包含该列表的属性。可以指定 {1} 以控制以下选项:\r\n    {1:type}\r\n    ",
  "Uri_Combine_Description": "返回一个绝对 URI，这是输入 {0} 和 {1} 的组合。",
  "Value_Optimize_Description": "在 Value.Expression 中使用时，如果 {0} 表示可优化的查询，则此函数指示应返回已优化的表达式。否则，{0} 将通过且不产生任何影响。",
  "AccessControlKind_Allow": "允许访问。",
  "Option_CommandTimeout_AS_Caption": "命令超时",
  "Occurrence_All": "返回找到的值出现的所有位置的列表。",
  "Date_StartOfQuarter": "返回季度开始值。",
  "Sybase_Database": "返回 Sybase 数据库中可用的 SQL 表和视图的表。",
  "Text_Proper_Description": "返回只使文本值 {0} 中每个字词的第一个字符大写的结果。所有其他字母均以小写返回。还可提供可选的 {1} (例如 \"en-US\")。",
  "Date_IsInCurrentWeek_Description": "指示在当前星期中给定的日期时间值 {0} 是否出现，它由系统上的当前日期和时间确定。\r\n      <ul>\r\n      <li>{0}: 要进行求值的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Table_InsertRows_Description": "返回一个表，其中行列表 {2} 插入到 {0} 的给定位置 {1}。要插入的行中的每列都必须与表的列类型相匹配。",
  "Date_AddQuarters": "将指定季度数添加到该日期。",
  "Option_MaxDegreeOfParallelism_Caption": "最大并行度",
  "Table_Split_Example1": "将包含五条记录的表拆分为各含两条记录的表。",
  "Type_FunctionParameters_Example1": "找到函数 <code>(x as number, y as text)</code> 的参数类型。",
  "Text_PadStart_Description": "通过在文本值 {0} 的开头插入空格，返回填充到长度 {1} 的 <code>text</code> 值。\r\n    可选字符 {2} 可用于指定用于填充的字符。默认的填充字符是空格。",
  "TableAction_UpdateRows": "创建一个操作以更新表中的行。",
  "List_Times": "给定初始值、计数和增量期间值来生成 time 值的列表。",
  "List_Split": "使用指定页面大小将指定列表拆分为一系列列表。",
  "List_Range": "返回从偏移量开始的列表的子集。",
  "Table_FillUp_Example1": "从表返回一个表，其中，列 [Column2] 中的 null 值使用这些值下方的值填充。",
  "WebAction_Request": "创建以下操作:实施后，将执行 HTTP 请求的结果作为二进制值返回。",
  "Date_AddMonths_Description": "通过将 {1} 个月添加到 <code>datetime</code> 值 {0}，返回 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 结果。\r\n      <ul>\r\n        <li>{0}: 要将月份数添加到其中的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n        <li>{1}: 要添加的月份数。</li>\r\n      </ul>",
  "List_Union": "返回在输入中找到的列表值的并集。",
  "List_LastN": "返回列表中的最后一个值。 (可选)可以指定要返回的值数或限定条件。",
  "RankKind_Competition": "比较结果为相等的项目将获得相同的排名编号，但会与下一个排名的编号之间具有空隙。",
  "List_AllTrue_Example1": "确定列表 {true, true, 2 > 0} 中的所有表达式是否均为 true。",
  "List_AllTrue_Example2": "确定列表 {true, true, 2 < 0} 中的所有表达式是否均为 true。",
  "List_Index": "给定按键函数选择的字段，为查找优化列表。",
  "Option_BatchSize_SAPBW_Description": "指定在执行 MDX 语句时一次检索的最大行数。检索大型数据集时，行数较少意味着多次调用服务器。虽然行数较多可能会提升性能，但可能会导致 SAP BW 服务器出现内存问题。默认值为 50000 行。这不会影响返回的总行数。仅受实现 \"2.0\" 支持。",
  "Option_Query_Web_Description": "以编程方式将查询参数添加到 URL，无需担心转义。",
  "Table_AddIndexColumn_Description": "使用显式位置值将名为 {1} 的列追加到 {0}。\r\n    可选值 {2} 为初始索引值。可选值 {3} 指定每个索引值的增量值。",
  "Web_Page": "返回 HTML 文档的内容(分解为其组成结构)，以及完整文档的表示形式及其删除标记后的文本。",
  "BinaryFormat_Single": "读取 4 字节 IEEE 单精度浮点值的二进制格式。",
  "List_Modes": "返回列表中出现最多的值的列表。",
  "List_Dates": "给定初始值、计数和增量期间值来生成 date 值的列表。",
  "List_Count": "返回列表中的项数。",
  "Language_DateLiteral": "将日期编写为 #date(年, 月, 日)。",
  "Date_IsInYearToDate_Description": "指示在当前年份中给定日期时间值 {0} 是否出现以及该日期时间值是否就在当天或早于当天，它由系统上的当前日期和时间确定。\r\n      <ul>\r\n      <li>{0}: 要进行求值的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Text_Lower_Description": "返回将 {0} 中的所有字符转换为小写的结果。还可提供可选的 {1} (例如 \"en-US\")。",
  "List_First": "返回列表的第一个值；如果为空，则返回指定的默认值。",
  "DateTime_IsInCurrentSecond_Description": "指示给定的日期时间值 {0} 是否按系统当前日期和时间所确定的那样处于当前秒内。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Type_TableColumn_Description": "返回表类型 {0} 中列 {1} 的类型。",
  "Option_MaxRetryCount_Caption": "重试次数",
  "Option_SubQueries_Description": "一个数字(0、1 或 2)，设置连接字符串中 \"SubQueries\" 属性的值。该数字控制嵌套 select 或子多维数据集上计算成员的行为。(默认值为 2)。",
  "Text_PositionOfAny": "返回文本值中任何所列字符的第一个位置(如果找不到，则返回 -1)。",
  "Value_Is_Description": "确定值是否与指定类型兼容。这等效于 M 中的 “is” 运算符，例外情况是其可以接受标识符类型引用(如 Number.Type)。",
  "JoinKind_FullOuter": "<code>Table.Join</code> 中可选 <code>JoinKind</code> 参数的可能值。\r\n    完整外部联接可确保两个表的所有行均在结果中显示。在其他表中没有匹配项的行将会与包含其所有列的 null 值的默认行联接。",
  "Date_IsInNextMonth_Example1": "确定当前系统时间之后的那一月是否处于下一月。",
  "Date_MonthName_Example1": "获取月份名称。",
  "Date_StartOfQuarter_Example1": "查找 2011 年 10 月 10 日上午 8:00 的季度开始值。",
  "Table_ColumnCount_Example1": "查找表中的列数。",
  "BinaryFormat_Record": "返回读取记录的二进制格式。",
  "Table_ToRows": "从表中创建行值的嵌套列表的列表。",
  "Excel_ShapeTable_Description": "此函数仅供内部使用。",
  "Table_ToList": "通过将指定的组合函数应用于表中的每一行值，将表转换为列表。",
  "Int8_From_Description": "从给定的 {0} 中返回一个有符号的 8 位整数 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Int8.From</code> 返回 <code>null</code>。如果给定的 {0} 是不带小数部分的有符号 8 位整数范围内的 <code>number</code>，则返回 {0}。如果带有小数部分，则按指定舍入模式舍入该数字。默认舍入模式为 <code>RoundingMode.ToEven</code>。如果 {0} 属于任何类型，则首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。要了解可用的舍入模式，请参阅 <code>Number.Round</code>。还可能提供可选的 {1} (例如，“en-US”)。",
  "List_Covariance_Description": "返回两个列表 {0} 和 {1} 之间的协方差。{0} 和 {1} 必须包含相同数目的 <code>number</code> 值。",
  "Option_Culture_FuzzyGroup_Caption": "允许根据区域性特定的规则对记录进行分组。",
  "Date_WeekOfYear_Example2": "使用“星期一”作为周开始值，确定 2011 年 3 月 27 日属于该年的哪一周。",
  "Date_WeekOfYear_Example1": "确定 2011 年 3 月 27 日属于该年的哪一周。",
  "Table_Buffer_Description": "在内存中缓冲表，在评估期间将其与外部更改隔离。\r\n    缓冲较浅。它强制计算所有标量单元值，但保留非标量值(记录、列表以及表等)不变。\r\n    <br>\r\n    <br>\r\n    请注意，使用此函数可能会也可能不会加快查询运行。在一些情况下，它可能会使查询的运行速度变慢，这是因为读取所有数据并将其存储在内存中增加了\r\n    成本，且存在缓冲阻止下游折叠这一事实。如果数据不需要\r\n    缓冲，而你只想防止下游折叠，请改为使用 <code>Table.StopFolding</code>。",
  "List_RemoveFirstN": "返回一个列表，它在列表开头跳过指定数目的元素。",
  "Table_IsEmpty_Description": "指示 {0} 是否包含任何行。如果没有行(也即表为空)，则返回 <code>true</code>； 否则，返回 <code>false</code>。",
  "Binary_ApproximateLength_Example1": "获取二进制值的近似长度。",
  "Option_Implementation_SAPBW_Caption": "启用备用 SAP Business Warehouse 连接器实现",
  "Uri_Parts_Example2": "解码百分比编码字符串。",
  "Uri_Parts_Example1": "查找绝对 URI \"www.adventure-works.com\" 的组成部分。",
  "Table_ReplaceErrorValues_Example2": "在表中将 A 列中的错误值替换为文本 \"hello\"，将 B 列中的错误值替换为文本 \"world\"。",
  "Table_ReplaceErrorValues_Example1": "在表中将错误值替换为文本 \"world\"。",
  "Date_From": "从给定的值创建日期。",
  "Option_ConcurrentRequests_FuzzyMatch_Caption": "用于模糊匹配的并行线程数目。",
  "Date_Year": "返回年份部分。",
  "Date_Type": "表示所有日期值的类型。",
  "Guid_From_Description": "从给定的 {0} 返回 <code>Guid.Type</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Guid.From</code> 返回 <code>null</code>。将执行检查以确定给定的 {0} 是否采用了可接受的格式。示例中提供了可接受的格式。",
  "Time_FromText": "根据本地和通用以及自定义时间格式创建时间。",
  "Percentage_From_Description": "从给定的 {0} 返回 <code>percentage</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Percentage.From</code> 将返回 <code>null</code>。如果给定的 {0} 是带有尾随百分比符号的 <code>text</code>，则返回转换的小数。否则，请使用 <code>Number.From</code> 将该值转换为 <code>number</code>。还可提供可选的 {1} (例如 “en-US”)。",
  "Record_FieldNames_Description": "将记录 {0} 中的字段名称作为文本返回。",
  "List_Contains_Example1": "查看列表 {1, 2, 3, 4, 5} 是否包含 3。",
  "List_Contains_Example2": "查看列表 {1, 2, 3, 4, 5} 是否包含 6。",
  "List_ReplaceMatchingItems_Description": "执行对列表 {0} 的指定的替换。一个替换操作 {1} 由两个值的列表、列表中提供的旧值和新值组成。\r\n    可以指定一个可选相等条件值 {2} 来控制相等测试。",
  "Uri_BuildQueryString_Example1": "对包含某些特殊字符的查询字符串进行编码。",
  "Table_TypeFromColumns_Description": "从 {0} 的列表中推断表类型，此列表包含列名及其值。",
  "Table_FuzzyGroup_Example1": "对表进行分组，同时添加聚合列 [Count]，其中包含每个位置的员工数(\"each Table.RowCount(_))\")。",
  "Type_ClosedRecord": "返回给定记录类型(或同一类型，如果其已关闭)的已关闭版本。",
  "Day_Monday_Description": "返回 1，该数值表示星期一。",
  "List_PositionOfAny_Example1": "查找列表 {1, 2, 3} 中第一次出现值 2 或 3 的位置。",
  "Function_From_Example1": "将 List.Sum 转换为一个包含两个参数的函数，这两个参数一同添加",
  "Function_From_Example2": "转换将列表更改为包含两个参数的函数的函数",
  "Number_Ln_Example1": "获取 15 的自然对数。",
  "Day_Tuesday_Description": "返回 2，该数值表示星期二。",
  "Duration_Minutes": "返回持续时间的分钟数部分。",
  "AdobeAnalytics_Cubes_Description": "从 Adobe Analytics 返回多维包的表。可以指定可选的记录参数 {0} 来控制以下选项:\r\n    {0:type}\r\n    ",
  "TraceLevel_Warning": "指定警告跟踪级别。",
  "Table_FilterWithDataTable": "此函数仅供内部使用。",
  "Table_MinN_Example2": "查找表中在列 [a] 中具有最小值且条件 [b] < 0 的行。在应用筛选器之前，先对行排序。",
  "Table_MinN_Example1": "查找表中在列 [a] 中具有最小值且条件 [a] < 3 的行。在应用筛选器之前，先对行排序。",
  "DateTime_IsInNextNSeconds": "指示此日期时间是否会在系统当前日期和时间确定的下一秒数中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。",
  "Duration_Days_Description": "返回 {0} 的天数部分。",
  "List_ContainsAll_Description": "指示列表 {0} 是否包含另一个列表 {1} 中的所有值。\r\n    如果在列表中找到值，则为 true；否则为 false。可以指定一个可选相等条件值 {2} 来控制相等测试。",
  "List_Percentile_Example1": "查找列表 <code>{5, 3, 1, 7, 9}</code> 的第一个四分位数。",
  "List_Percentile_Example2": "使用与 Excel <code>PERCENTILE.EXC</code> 匹配的内插方法查找列表 <code>{5, 3, 1, 7, 9}</code> 的四分位数。",
  "AdoDotNet_Query": "返回在 ADO.NET 数据源上运行本机查询的结果。",
  "Option_Query_Web_Caption": "查询字符串参数",
  "Text_Repeat_Description": "返回由输入文本 {0} 重复 {1} 次而组成的文本值。",
  "Table_Partition_Example1": "使用列的值作为哈希函数，基于列 [a] 将表 <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> 分区为 2 个表。",
  "Language_DateFromText": "通过调用 DateTime.FromText 公式，可以将日期作为文本输入。",
  "Table_Last": "返回最后一行或指定的默认值。",
  "Table_MinN": "使用给定条件返回最小值行。",
  "Table_MaxN": "使用给定条件返回最大值行。",
  "Table_Type": "表示所有表的类型。",
  "Table_Keys": "返回指定表的键。",
  "Table_Join": "联接两个表中基于给定键匹配的行。",
  "Table_View": "使用用户定义的处理程序创建或扩展表，以执行查询和操作。",
  "Table_Sort": "使用一个或多个列名以及比较条件对表排序。",
  "Table_Skip": "返回跳过了前几个计数行的表。",
  "Record_FieldOrDefault_Description": "返回记录 {0} 中指定字段 {1} 的值。如果未找到该字段，则返回可选的 {2}。",
  "DataSource_TestConnection": "返回信息: 是否可以建立到数据源的连接以及凭据是否正确。",
  "List_Contains_Description": "指示列表 {0} 是否包含值 {1}。\r\n    如果在列表中找到值，则为 true；否则为 false。可以指定一个可选相等条件值 {2} 来控制相等测试。 ",
  "WebMethod_Type": "指定 HTTP 方法。",
  "WebMethod_Post": "指定 HTTP 的 POST 方法。",
  "DateTime_ToText": "返回日期时间值的文本表示形式。",
  "WebMethod_Head": "指定 HTTP 的 HEAD 方法。",
  "_Pound_table_Example4": "通过提供列名称列表来创建表。",
  "_Pound_table_Example5": "创建具有显式类型的表。",
  "_Pound_table_Example1": "创建空表。",
  "_Pound_table_Example2": "通过推断第一行中的列数来创建表。",
  "_Pound_table_Example3": "通过指定列数来创建表。",
  "Table_FindText_Example1": "查找表中包含 \"Bob\" 的行。",
  "Web_BrowserContents_Description": "此功能不可用，因为它需要使用 .NET 4.5。",
  "Day_Tuesday": "表示星期二。",
  "Record_FromTable": "从 {[Name = name, Value = value]} 格式的表创建记录。",
  "_Pound_duration": "从日、小时、分钟和秒创建一个持续时间值。",
  "Expression_Constant_Description": "返回常数值的 M 源代码表示形式。",
  "Table_ReplaceKeys": "替换指定表的键。",
  "Table_ReplaceRows": "使用提供的行替换指定范围内的行。",
  "Value_ViewError": "此函数仅供内部使用。",
  "Type_NonNullable": "从一个类型返回非空类型。",
  "Option_MaxRetryCount_Description": "在轮询查询的结果时要执行的重试次数。默认值为 120。",
  "Number_Sign_Description": "如果 {0}为正数，则返回 1；如果它为负数，则返回 -1；如果它为零则返回 0。\r\n    如果 {0} 为 null，则 <code>Number.Sign</code> 返回 null。",
  "Option_Encoding_MySQL_Caption": "编码",
  "List_TransformMany_Description": "返回其元素从输入列表投影的列表。<br>\r\n    <br>\r\n{1} 函数将每个元素转换为中间列表， {2} 函数接收原始元素以及中间列表中的项，以便构造最终结果。<br>\r\n    <br>\r\n{1} 函数具有签名<code> (x as any)作为列表 =>...</code>，其中 <code>x</code> 是 {0} 中的元素。\r\n{2} 函数将投影结果的形状，并具有签名 <code>(x as any， y as any) 作为任何 =>...</code>，其中 <code>x</code> 是 {0} 中的元素，<code>y</code> 是通过将 <code>x</code> 传递给 {1} 生成的列表中的元素。",
  "Binary_ToText_Description": "返回将数值 {0} 的二进制列表转换为文本值的结果。或者，可以指定 {1} 以便指示要在生成的文本值中使用的编码\r\n      以下 <code>BinaryEncoding</code> 值可用于 {1}。\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64 编码</li>\r\n        <li><code>BinaryEncoding.Hex</code>: 十六进制编码</li>\r\n      </ul>",
  "Option_HierarchicalNavigation_Directory_Caption": "返回类似树的目录视图",
  "Date_AddDays_Description": "通过将 {1} 天添加到 <code>datetime</code> 值 {0}，返回 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 结果。\r\n      <ul>\r\n      <li>{0}: 天数要添加到的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 要添加的天数。</li>\r\n      </ul>",
  "Number_RoundTowardZero": "返回向下舍入正数和向上舍入负数的结果。可以指定位数。",
  "AccessControlEntry_Type": "访问控制项(ACE)的表。",
  "SharePoint_Files_Description": "返回包含在指定 SharePoint 站点 {0} 上找到的每个文档和子文件夹的行的表。每行都包含该文件夹或文件的属性以及指向其内容的链接。可以指定 {1} 以控制以下选项:\r\n    {1:type}\r\n    ",
  "DirectQueryCapabilities_From_Description": "此函数仅供内部使用。",
  "Table_PositionOf_Example3": "查找 [a = 2, b = 4] 在表 <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> 中所有出现的位置。",
  "Table_PositionOf_Example2": "查找 [a = 2, b = 4] 在表 <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> 中第二次出现的位置。",
  "Table_PositionOf_Example1": "查找 [a = 2, b = 4] 在表 <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> 中第一次出现的位置。",
  "DateTimeZone_ToLocal_Description": "将 datetimezone 值 {0} 的时区信息更改为本地时区信息。\r\n    如果 {0} 不具有时区部分，则添加本地时区信息。",
  "Option_RelativePath_Web_Description": "如果将此值指定为文本，则会在发出请求之前将其追加到基 URL。",
  "Table_RemoveRowsWithErrors": "返回一个表，其中已从输入表中删除了在至少一个单元中包含错误的行。如果指定了列列表，则只检查指定列中的单元内是否有错误。",
  "Text_Insert_Description": "返回将文本值 {2} 插入到文本值 {0} 中的位置 {1} 的结果。位置从数字 0 开始。",
  "Duration_ToRecord": "返回包含持续时间的各个部分的记录。",
  "Option_NavigationPropertyNameGenerator_Caption": "导航属性名称生成器",
  "Text_TrimEnd_Description": "返回从文本值 {0} 删除所有尾随空格的结果。",
  "Time_ToText_Example2": "使用自定义格式和德语区域性进行转换。",
  "Time_ToText_Example3": "使用标准时间格式进行转换。",
  "Time_ToText_Example1": "将 <code>#time(01, 30, 25)</code> 转换为<code>文本</code>值。<i>结果输出可能因当前区域性而异。</i>",
  "Date_Year_Description": "返回提供的 <code>datetime</code> 值 {0} 的年份部分。",
  "Int16_From_Description": "从给定的 {0} 中返回 16 位整数 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Int16.From</code> 返回 <code>null</code>。如果给定的 {0} 是不带小数部分的 16 位整数范围内的 <code>number</code>，则返回 {0}。如果带有小数部分，则按指定舍入模式舍入该数字。默认舍入模式为 <code>RoundingMode.ToEven</code>。如果 {0} 属于任何类型，则首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。要了解可用的舍入模式，请参阅 <code>Number.Round</code>。还可能提供可选的 {1} (例如，“en-US”)。",
  "Table_ReverseRows_Description": "从输入 {0} 返回一个表，其中的行遵循相反顺序。",
  "Hdfs_Files": "返回一个表，它包含在 Hadoop 文件系统的指定文件夹和子文件夹中找到的文件的属性和内容。",
  "Text_Compare_Description": "根据 {0} 是小于、等于还是大于 {1} (以字典顺序)返回 -1、0 或 1。\r\n    可以提供可选的比较器函数 {2} (TextComparer.IgnoreCase) 使比较变得不区分大小写。默认为区分大小写。\r\n",
  "Cube_AttributeMemberProperty": "返回维度属性的属性。",
  "Json_Document": "返回 JSON 文档的内容。",
  "Informix_Database": "返回包含 Informix 数据库中可用的 SQL 表和视图的表。",
  "List_RemoveItems_Example1": "从列表 {1, 2, 3, 4, 2, 5, 5} 中删除在列表 {2, 4, 6} 中出现的项。",
  "Table_AggregateTableColumn_Description": "将 {0}[{1}] 中的表聚合到包含这些表的聚合值的多个列。{2} 用于指定包含要聚合的表的列、要应用于表以生成其值的聚合函数以及要创建的聚合列的名称。",
  "BinaryFormat_Group": "返回读取一组项的二进制格式。",
  "ValueAction_NativeStatement_Description": "<p>使用 {2} 中指定的参数和 {3} 中指定的选项，创建对 {0} 执行 {1} 的操作。</p>\r\n<p>{0} 定义所创建的操作的行为。</p>\r\n<p>{0} 提供 {1} 所述运算的上下文。</p>\r\n<p>{1} 描述了要对 {0} 执行的操作。{1} 以 {0} 的专用方式(例如 T-SQL 语句)进行表示。</p>\r\n<p>可选的 {2} 值可能包含适用于提供 {1} 预期的参数值的列表或记录。</p>\r\n<p>可选的 {3} 记录可能包含影响 {1} 对 {0} 的执行行为的选项。这些选项为 {0} 所特有。</p>\r\n<p>执行时，返回的操作会执行所述的运算。操作会返回表示运算结果的有意义值(例如，状态代码、受影响的行数等)。</p>\r\n<p>如果(在尝试执行运算之前)检测到无效的输入自变量，则函数会引发计算错误。</p>\r\n<p>如果运算无法成功完成，则操作会引发执行错误。</p>\r\n<p><b>注意:</b> 如果发生执行错误，{0} 可能会继续处于未定义状态。</p>",
  "List_Times_Description": "返回大小为 {1} 的 <code>time</code> 值的列表，从 {0} 开始。给定的增量 {2} 是加到每个值的 <code>duration</code> 值。",
  "Number_Exp_Description": "返回计算 e 的 {0} 次幂(指数函数)所得的结果。\r\n      <ul>\r\n        <li>{0}: 要计算其指数函数的 <code>number</code>。如果 {0} 为 null，则 <code>Number.Exp</code> 返回 null。</li>\r\n      </ul>",
  "Number_Permutations_Example1": "计算 3 个一组、从总共 5 项得到的排列数。",
  "Combiner_CombineTextByDelimiter_Example2": "使用逗号分隔符和 CSV 样式引号合并两列文本。",
  "Combiner_CombineTextByDelimiter_Example1": "使用分号分隔符合并文本值列表。",
  "Replacer_ReplaceValue_Description": "使用 {2} 值替换原始 {0} 中的 {1} 值。可以在 <code>List.ReplaceValue</code> 和 <code>Table.ReplaceValue</code> 中使用此替换器函数。",
  "Option_Implementation_HANA_Caption": "启用备用 SAP HANA 连接器实现",
  "SapHanaDistribution_Connection": "SAP HANA 的 \"Connection\" 分发选项。",
  "Uri_Combine": "返回一个绝对 URI，这是输入基本 URI 和相对 URI 的组合。",
  "Table_FromList_Example2": "使用 Record.FieldValues 拆分器以及所生成的具有 \"CustomerID\" 和 \"Name\" 作为列名的表，从列表创建一个表。",
  "Table_FromList_Example1": "使用默认的拆分器从列表以及名为 \"Letters\" 的列创建表。",
  "List_Alternate_Example4": "从 {1..10} 创建从 1 开始先跳过一个值、接着保留两个值这样依次进行得到的列表。",
  "List_Alternate_Example3": "从 {1..10} 创建从 1 开始、每隔一个数跳过数的列表。",
  "List_Alternate_Example2": "从 {1..10} 创建每隔一个数跳过一个数的列表。",
  "List_Alternate_Example1": "从 {1..10} 创建跳过第一个数的列表。",
  "Table_IsEmpty_Example1": "确定表是否为空。",
  "Table_IsEmpty_Example2": "确定表 <code>({})</code> 是否为空。",
  "_Pound_binary_Example1": "从数字列表创建一个二进制值。",
  "_Pound_binary_Example2": "从以 64 为底的编码文本值创建一个二进制值。",
  "List_RemoveLastN_Description": "返回一个列表，它从列表 {0} 末尾删除最后 {1} 个元素。如果 {0} 中的元素少于 {1} 个，则返回空列表。\r\n <ul>\r\n <li>如果指定一个数字，则最多删除这么多项。</li>\r\n <li>如果指定条件，则返回的列表以 {0} 中满足条件的倒数第一个元素结尾。一旦某个项不满足该条件，则不再考虑其他项。</li>\r\n <li>如果此参数为 null，则仅删除一项。</li>\r\n </ul>",
  "Number_Sinh_Description": "返回 {0} 的双曲正弦。",
  "Date_ToText": "返回日期值的文本表示形式。",
  "Language_Lists": "列表为一连串的值。使用花括号编写它们。",
  "List_Sort_Example1": "将列表 {2, 3, 1} 排序。",
  "List_Sort_Example3": "使用 Value.Compare 方法按降序将列表 {2, 3, 1} 排序。",
  "List_Sort_Example2": "按降序将列表 {2, 3, 1} 排序。",
  "List_Percentile": "返回与给定概率对应的一个或多个示例百分位数。",
  "Language_False": "表示值 false。",
  "Table_AggregateTableColumn_Example1": "将表 <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> 中的 <code>[t]</code> 的表列聚合为 <code>[t.a]</code>、<code>[t.b]</code> 的最小值和最大值以及 <code>[t.a]</code> 中值计数的总和。",
  "Splitter_SplitTextByRanges_Description": "返回一个函数，该函数根据指定的偏移量和长度将文本拆分为文本列表。null 长度指示所有剩余输入都应被包括。",
  "List_FirstN_Example1": "在列表 {3, 4, 5, -1, 7, 8, 2} 中查找大于 0 的初始值。",
  "Date_AddMonths": "将指定月份数添加到该日期。",
  "Date_IsInCurrentMonth": "指示在当月中此日期是否出现，它由系统上的当前日期和时间确定。",
  "Extension_LoadString": "从库 PQX 文件返回本地化字符串。",
  "Language_MixedRanges": "范围和单个项可以同时出现在列表中。",
  "Table_DuplicateColumn_Example1": "将列 \"a\" 复制到表 <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> 中名为 \"copied column\" 的列。",
  "DB2_Database_Description": "返回服务器 {0} (在名为 {1} 的数据库实例中)上 Db2 数据库中可用的 SQL 表和视图的表。可以视需要指定服务器的端口，并用冒号分隔。可以指定可选的记录参数 {2} 来控制以下选项:\r\n    {2:type}\r\n    例如，可以将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "Table_ToRecords": "将表转换为记录列表。",
  "Value_As_Description": "如果值与指定类型兼容，则返回该值。这等效于 M 中的 “as” 运算符，例外情况是其可以接受标识符类型引用(如 Number.Type)。",
  "TextEncoding_Unicode": "用于选择 UTF16 little endian 二进制格式。",
  "Table_ReplaceMatchingRows_Description": "使用提供的行替换 {0} 中所有指定的行。要替换的行以及替换项在 {1} 中使用 {{old, new}} 格式指定。\r\n    可以指定一个可选 {2} 参数，以控制表各行之间的比较。",
  "Text_At_Description": "在位置 {1} 返回文本值中的字符 {0}。文本中的第一个字符位于位置 0。",
  "Number_Sin_Example1": "计算角 0 的正弦。",
  "List_Union_Example1": "创建列表 {1..5}、{2..6}、{3..7} 的并集。",
  "List_Count_Description": "返回列表 {0} 中的项数。",
  "List_Sum_Description": "返回列表 {0} 中所有非 null 值的总和。 如果列表中没有非 null 值，则返回 null。",
  "List_Repeat_Example1": "创建将 {1, 2} 重复 3 次得到的列表。",
  "Currency_From_Example1": "获取 <code>\"1.23455\"</code> 的 <code>currency</code> 值。",
  "Currency_From_Example2": "使用 <code>RoundingMode.Down</code> 获取 <code>\"1.23455\"</code> 的 <code>currency</code> 值。",
  "Record_FieldValues_Description": "返回记录 {0} 中的字段值列表。",
  "Comparer_Ordinal_Example1": "使用 Ordinal 规则，比较“encyclopædia”和“encyclopaedia”是否相等。请注意，这些与使用 <code>Comparer.FromCulture(\"en-US\")</code> 等效。",
  "TextEncoding_BigEndianUnicode": "用于选择 UTF16 big endian 二进制格式。",
  "Time_ToRecord": "返回包含时间值的各个部分的记录。",
  "Number_IntegerDivide_Example2": "8.3 除以 3。",
  "Number_IntegerDivide_Example1": "6 除以 4。",
  "Text_Clean_Description": "返回 {0} 的所有控制字符均已删除的文本值。",
  "Table_SelectRows": "选择满足条件函数的行。",
  "List_RemoveRange": "从指定的位置开始删除指定数目的值。",
  "Option_Query_SQL_Caption": "SQL 语句",
  "Text_Split_Example1": "从由 \"|\" 分隔的文本值 \"Name|Address|PhoneNumber\" 创建列表。",
  "List_RemoveLastN": "返回一个列表，它从列表末尾删除指定数目的元素。",
  "DateTime_ToText_Example2": "使用自定义格式和德语区域性进行转换。",
  "DateTime_ToText_Example3": "使用 ISO 8601 模式进行转换。",
  "DateTime_ToText_Example1": "将 <code>#datetime(2010, 12, 31, 01, 30, 25)</code> 转换为 <code>text</code> 值。<i>结果输出可能因当前区域性而异。</i>",
  "Record_ToList_Description": "返回包含输入 {0} 中的字段值的值列表。",
  "List_RemoveNulls": "从指定的列表中删除所有 \"null\" 值。",
  "Date_IsInNextNYears": "指示此日期是否会在系统当前日期和时间确定的下一年数中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。",
  "Function_IsDataSource_Description": "返回是否将 {0} 视为数据源。",
  "WebAction_Request_Description": "创建一个操作，该操作在执行时针对使用 HTTP 作为二进制值的 {1} 返回执行 {0} 请求的结果。\r\n    可以提供可选的记录参数 {2} 以指定其他属性。记录可以包含以下字段:\r\n    {2:type}\r\n    <br>\r\n    请注意，在大多数上下文中禁用此函数。请考虑改用 Web.Contents 或 Web.Headers。\r\n    ",
  "Option_Threshold_FuzzyGroup_Description": "一个介于 0.00 和 1.00 之间的数字，指定两个值分组的相似性分数。\r\n    例如，仅当此选项设置为小于 0.90 时，“Grapes”和“Graes”(缺少“p”)才会组合在一起。\r\n    阈值 1.00 仅允许完全匹配。\r\n    (请注意，模糊的“精确匹配”可能会忽略大小写、字词顺序和标点符号等差异。)\r\n    默认值为 0.80。",
  "Date_IsInNextNWeeks": "指示此日期是否会在系统当前日期和时间确定的下一周数中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。",
  "List_RemoveItems": "从 list1 中删除在列表中出现的项。",
  "Table_Schema_Description": "<p>返回一个表，该表描述 {0} 的列。</p>\r\n<p>该表中的各行分别描述 {0} 的某一列的属性:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>列名</b></td>\r\n    <td><b>描述</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Name</code></td>\r\n    <td>该列的名称。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Position</code></td>\r\n    <td>该列在 {0} 中的位置(从 0 开始)。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>该列的类型名称。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Kind</code></td>\r\n    <td>该列的类型种类。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>该列是否可以包含 <code>null</code> 值。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td><code>NumericPrecision</code> 和 <code>NumericScale</code> 字段的数值基数(例如，base-2、base-10)。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td><code>NumericPrecisionBase</code> 指定的基数中数值列的精度。这是此类型的值可以表示的最大位数(包括小数位)。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td><code>NumericPrecisionBase</code> 指定的基数中数值列的位数。这是此类型的值的小数部分的位数。值 <code>0</code> 指示不带小数位的固定位数。值 <code>null</code> 指示位数未知(因为它是浮点数或未定义)。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>日期或时间值的秒部分支持的最大小数位数。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td><code>text</code> 列中允许的最大字符数，或 <code>binary</code> 列中允许的最大字节数。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>指示此列的长度可变(长达 <code>MaxLength</code>)还是为固定大小。</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>该列在源的本机类型系统中的类型名称(例如，在 SQL Server 中为 <code>nvarchar</code>)。</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>此列的值在源的本机表达式语言中的默认表达式(例如，在 SQL Server 中为 <code>42</code> 或 <code>newid()</code>)。</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Description</code></td>\r\n    <td>该列的描述。</td>\r\n  </tr>\r\n</table></p>",
  "ByteOrder_Type": "指定字节顺序。",
  "Uri_BuildQueryString_Description": "将记录 {0} 汇编入 URI 查询字符串，根据需要转义字符。",
  "DateTime_IsInPreviousNHours": "指示此日期时间是否会在系统当前日期和时间确定的上一小时数中出现。请注意，当传递一个在当前小时内出现的值时，此函数将返回 false。",
  "Table_Profile_Description": "<p>返回 {0} 中列的配置文件。</p>\r\n<p>为每一列返回以下信息(如果适用):\r\n<ul>\r\n  <li>最小值</li>\r\n  <li>最大值</li>\r\n  <li>平均值</li>\r\n  <li>标准偏差</li>\r\n  <li>计数</li>\r\n  <li>Null 计数</li>\r\n  <li>非重复计数</li>\r\n</ul>\r\n</p>",
  "Odbc_DataSource": "从 ODBC 数据源中返回 SQL 表和视图的表。",
  "Splitter_SplitTextByRanges": "返回一个函数，它根据指定的偏移量和长度将文本拆分为文本列表。",
  "Date_IsInPreviousDay_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一天中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "List_RemoveNulls_Example1": "从列表 {1, 2, 3, null, 4, 5, null, 6} 中删除 \"null\" 值。",
  "Time_Second": "返回秒部分。",
  "Cube_ApplyParameter": "在将参数应用到多维数据集后将其返回。",
  "Table_Schema": "返回一个表，该表包含指定表的列的描述(即架构)。",
  "Binary_From_Description": "从给定的 {0} 返回 <code>binary</code> 值。如果给定的 {0} 是 <code>null</code>，则 <code>Binary.From</code> 将返回 <code>null</code>。如果给定的 {0} 是 <code>binary</code>，则返回 {0}。以下类型的值可以转换为 <code>binary</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 文本表示形式的 <code>binary</code> 值。有关详细信息，请参阅 <code>Binary.FromText</code>。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "BinaryFormat_UnsignedInteger16": "读取 16 位无符号整数的二进制格式。",
  "BinaryFormat_UnsignedInteger32": "读取 32 位无符号整数的二进制格式。",
  "BinaryFormat_UnsignedInteger64": "读取 64 位无符号整数的二进制格式。",
  "SapHanaRangeOperator_Type": "SAP HANA 范围输入参数的范围运算符。",
  "Sql_Databases": "返回 SQL Server 上的数据库表。",
  "TextComparer_Default": "比较两个区分大小写的文本。",
  "Extension_InvokeWithPermissions": "在所提供权限处理程序的上下文中调用函数。",
  "List_Dates_Description": "返回大小为 {1} 的 <code>date</code> 值的列表，从 {0} 开始。给定的增量 {2} 是加到每个值的 <code>duration</code> 值。",
  "Number_BitwiseShiftLeft": "将位左移设置的位数。",
  "Day_Monday": "表示星期一。",
  "Record_Type": "表示所有记录的类型。",
  "List_Skip_Example2": "从 {5, 4, 2, 6, 1} 创建一个列表，它以小于 3 的数开头。",
  "List_Skip_Example1": "从 {1, 2, 3, 4, 5} 创建不带前 3 个数的列表。",
  "Table_Unpivot_Example1": "选取表 <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> 中的列 \"a\"、\"b\" 和 \"c\"，并将它们逆透视为属性-值对。",
  "Table_RemoveRowsWithErrors_Example1": "从第一行中删除错误值。",
  "Time_ToText": "返回时间值的文本表示形式。",
  "List_DateTimeZones_Description": "返回大小为 {1} 的 <code>datetimezone</code> 值的列表，从 {0} 开始。给定的增量 {2} 是加到每个值的 <code>duration</code> 值。",
  "Table_Repeat": "对表行重复指定的次数。",
  "List_Difference_Description": "返回未出现在列表 {1} 中的列表 {0} 中的项。支持重复的值。\r\n    可以指定一个可选相等条件值 {2} 来控制相等测试。 ",
  "IdentityProvider_Type": "定义在其中创建和比较标识的范围。",
  "Date_IsInPreviousNQuarters_Example1": "确定当前系统时间之前的季度是否在之前的两个季度中。",
  "Table_ReplaceKeys_Example1": "替换表的现有键。",
  "List_Median_Example1": "查找列表 <code>{5, 3, 1, 7, 9}</code> 的中位数。",
  "Table_AddColumn_Description": "将名为 {1} 的列添加到表 {0}。使用指定的选择函数 {2}(它将每行作为输入)来计算列的值。",
  "Table_SelectColumns_Example4": "如果包含的列没有退出，选项 <code>MissingField.UseNull</code> 将创建包含 null 值的列。",
  "Table_SelectColumns_Example2": "只包含列 [CustomerID] 和列 [Name]。",
  "Table_SelectColumns_Example3": "如果包含的列没有退出，则默认结果为错误。",
  "Table_SelectColumns_Example1": "只包含列 [Name]。",
  "Lines_FromText": "将文本值转换为在换行符处拆分的文本值列表。如果 includeLineSeparators 为 true，则文本中将包括换行符。",
  "Time_EndOfHour_Example2": "获取 5/17/2011 05:00:00 PM -7:00 的小时结尾。",
  "Time_EndOfHour_Example1": "获取 5/14/2011 05:00:00 PM 的小时结尾。",
  "List_PositionOf_Example1": "查找列表 {1, 2, 3} 中出现值 3 的位置。",
  "Option_RetryInterval_Caption": "重试之间的延迟",
  "Decimal_From_Example1": "获取 <code>\"4.5\"</code> 的十进制 <code>number</code> 值。",
  "Date_WeekOfYear": "返回一个介于 1 到 54 之间的数值，该数值指示此日期属于年份中的哪一周。",
  "Type_ForRecord": "返回一个类型，此类型表示对字段具有特定类型约束的记录。",
  "Binary_End_Description": "<p>返回与 {0} 的结尾对应的二进制值。返回的值始终为空(即长度为 0 字节)。</p>\r\n<p><code>Binary.End</code> 可用于通过替换二进制值的结尾来附加到二进制值。</p>",
  "Option_OldGuids_Description": "一个逻辑值(true/false)，用于设置将 char(36)列(如果为 false)还是 binary(16)列(如果为 true)视为 GUID。默认值为 false。",
  "Date_IsInPreviousNYears": "指示此日期是否会在系统当前日期和时间确定的上一年数中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。",
  "HdInsight_Containers": "返回一个导航表，它包含从 Azure 存储库的指定帐户中找到的容器。",
  "Language_EachUnderscore": "each 创建一个参数的函数，指定为 _。",
  "Date_IsInCurrentMonth_Description": "指示在当月中给定的日期时间值 {0} 是否出现，它由系统上的当前日期和时间确定。\r\n      <ul>\r\n      <li>{0}: 要进行求值的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "LimitClauseKind_AnsiSql2008": "此 SQL 方言支持符合 ANSI SQL 的 LIMIT N ROWS 说明符，以限制返回的行数。",
  "Splitter_SplitTextByDelimiter": "返回一个函数，它根据指定的分隔符将文本拆分为文本列表。",
  "Number_BitwiseShiftRight_Description": "返回对 {0} 执行按位右移指定的位数 {1} 所得的结果。",
  "SapHanaRangeOperator_LessThan": "SAP HANA 输入参数的“小于”范围运算符。",
  "Date_IsInNextYear_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一年中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Date_IsInPreviousNWeeks": "指示此日期是否会在系统当前日期和时间确定的上一周数中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。",
  "Duration_Seconds_Example1": "从持续时间值中提取秒数。",
  "Option_UseDb2ConnectGateway_Description": "指定是否通过 Db2 连接网关进行连接。适用于实现 = \"Microsoft\"。",
  "Table_MaxN_Example1": "查找表中在列 [a] 中具有最大值且条件 [a] > 0 的行。在应用筛选器之前，先对行排序。",
  "Table_MaxN_Example2": "查找表中在列 [a] 中具有最大值且条件 [b] > 0 的行。在应用筛选器之前，先对行排序。",
  "Cube_MeasureProperty_Description": "返回度量值 {0} 的属性 {1}。",
  "Table_MatchesAllRows_Example2": "查找在表 <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> 中，是否所有行值均为 [a = 1, b = 2]。",
  "Table_MatchesAllRows_Example1": "确定列 [a] 中的所有行值是否在表中。",
  "Option_CreateNavigationProperties_Caption": "生成导航属性",
  "Type_Is_Example2": "确定任何类型的值是否始终可以视为类型号。",
  "Type_Is_Example1": "确定类型号的值是否始终可以视为任何类型。",
  "Date_IsInNextMonth_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一月中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Option_ScaleMeasures_SAPBW_Description": "指示是否应对度量值应用缩放的逻辑值。此选项的默认值为 true。此选项不受实现 \"2.0\" 支持",
  "List_ReplaceMatchingItems": "应用 { old, new } 的每个替换。",
  "MissingField_Error": "记录和表函数中的一个可选参数，指示缺失字段应导致错误。(这是默认参数值。)",
  "Type_ReplaceFacets": "替换类型的 Facet。",
  "List_Type": "表示所有列表的类型。",
  "List_Skip": "返回一个列表，它在列表开头跳过指定数目的元素。",
  "List_Sort": "根据指定的条件对数据列表排序。",
  "List_Last": "返回列表的最后一个值；如果为空，则返回指定的默认值。",
  "List_MaxN": "返回列表中的最大值。必须指定要返回的值的数量或筛选条件。",
  "List_MinN": "返回列表中的最小值。可以指定要返回的值的数量或筛选条件。",
  "List_Mode": "返回列表中出现最多的值。",
  "Cube_Properties_Description": "返回一个表，该表包含在多维数据集中扩展的维度的可用属性集。",
  "Excel_Workbook_Description": "返回 Excel 工作簿的内容。\r\n    <ul>\r\n     <li> {1} 可为 null、指示是否应将每个返回表的第一行视为标题的逻辑值(true/false)，或选项记录。默认值: false。</li>\r\n     <li> {2} 可为 null 或逻辑值(true/false)，其中逻辑值表示每个返回的表的列是否应保留未设类型的状态。默认值: false。</li>\r\n    </ul>\r\n\r\n    如果为 {1} 指定了记录(且 {2} 为 null)，则可能提供以下记录字段:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: 可为 null 或指示是否应将每个返回表的第一行视为标题的逻辑值(true/false)。默认值: false。</li>\r\n     <li> <code>DelayTypes</code>: 可为 null 或逻辑值(true/false)，其中逻辑值表示每个返回的表的列应保留未设类型的状态。默认值: false。</li>\r\n     <li> <code>InferSheetDimensions</code>: 可为 null 或逻辑值(true/false)，其中逻辑值表示包含数据的工作表的区域应通过读取工作表本身进行推断，而不是通过读取文件中的维度元数据。如果维度元数据不正确，那么这非常有用。请注意，仅支持对 Open XML Excel 文件使用此选项，不可用于旧版 Excel 文件。默认值: false。</li>\r\n    </ul>\r\n    ",
  "Number_FromText_Description": "从给定的文本值 {0} 返回 <code>number</code> 值。\r\n <ul>\r\n  <li>{0}: 数值的文本表示形式。表示形式必须采用通用数字格式，例如 \"15\"、\"3,423.10\" 或 \"5.0E-10\"。</li>\r\n  <li>{1}: 控制 {0} 的解释方式的可选区域性(例如 \"en-US\")。</li>\r\n </ul>",
  "Date_IsInCurrentYear": "指示在当前年份中此日期是否出现，它由系统上的当前日期和时间确定。",
  "Date_IsInCurrentWeek": "指示在当前星期中此日期是否出现，它由系统上的当前日期和时间确定。",
  "DateTime_IsInNextSecond_Example1": "确定当前系统时间后的秒是否处于接下来的一秒内。",
  "DateTimeZone_ToRecord_Description": "返回包含给定 datetimezone 值 {0} 的各个部分的记录。\r\n <ul>\r\n        <li>{0}: 要从中计算其各个部分的记录的 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "SapBusinessWarehouseExecutionMode_Type": "有效的 SAP Business Warehouse 执行模式选项。",
  "Text_EndsWith": "指示文本是否以指定的值结尾。",
  "Duration_FromText_Example1": "将 <code>\"2.05:55:20\"</code> 转换为 <code>duration</code> 值。",
  "SapBusinessWarehouseExecutionMode_DataStream": "用于在 SAP Business Warehouse 中执行 MDX 的“DataStream 修整模式”选项。",
  "Cdm_Contents_Description": "此功能不可用，因为它需要使用 .NET 4.5。",
  "TextComparer_IgnoreCase": "比较两个对相同字符不区分大小写版本的文本。",
  "MQ_Queue_Description": "返回一个表，该表定义读写消息所需的 IBM WebSphere MQ 服务器信息。它需要下列参数:\r\n    <ul>\r\n    <li> <code>服务器</code>名称或地址(其中包含可选端口号)，用冒号分隔，{0}(默认情况下将使用 1414 端口)。</li>\r\n    <li> <code>队列管理器</code>名称，MQ 服务器上的 {1}。</li>\r\n    <li> <code>通道</code>名称，MQ 服务器上的队列管理器的 {2}。</li>\r\n    <li> <code>队列</code>名称，要访问的 {3}。</li>\r\n    </ul>\r\n\r\n    枚举此函数时，它将返回一个表，其中包含从队列中以非破坏方式读取的信息。\r\n\r\n    可以指定可选记录参数 {4} 以控制以下选项:\r\n    <ul>\r\n    <li> <code>BinaryDisplayEncoding</code> : 使用指定编码将二进制值返回为文本。影响输出中的以下列: MessageId、CorrelationId、AccountingToken、GroupId 和 MsgToken。若未指定，则将值返回为二进制值。将使用以下值:\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code></li>\r\n        <li><code>BinaryEncoding.Hex</code></li>\r\n        <li><code>TextEncoding.Utf16</code></li>\r\n        <li><code>TextEncoding.Unicode</code></li>\r\n        <li><code>TextEncoding.BigEndianUnicode</code></li>\r\n        <li><code>TextEncoding.Windows</code></li>\r\n        <li><code>TextEncoding.Ascii</code></li>\r\n        <li><code>TextEncoding.Utf8</code></li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>MessageDataDisplayEncoding</code> : 默认情况下，将消息数据返回为 UTF8 表示形式的基础二进制值。支持与 <code>BinaryDisplayEncoding</code> 选项相同的值。也支持<code>键入二进制</code>以检索作为二进制值的消息数据。</li>\r\n    <li> <code>Timeout</code> : 如果消息不在队列中，等待消息出现，等待该时间长度后消息将出现。默认值为零。指定为持续时间。</li>\r\n    </ul>\r\n\r\n    例如，可以将记录参数指定为 [option1 = value1, option2 = value2...] 或 [BinaryDisplayEncoding = BinaryEncoding.Hex]。\r\n\r\n    <code>Table.SelectRows</code> 可用于筛选要从队列检索的消息。以下列将被折叠到查询:\r\n    <ul>\r\n      <li> <code>MessageId</code> : 要检索的 MQ 消息的消息标识符。可以是文本或二进制值。</li>\r\n      <li> <code>CorrelationId</code> : 要检索的 MQ 消息的相关标识符。可以是文本或二进制值。</li>\r\n      <li> <code>MessageToken</code> : 要检索的 MQ 消息的消息令牌。可以是文本或二进制值。</li>\r\n      <li> <code>GroupId</code> : 要检索的 MQ 消息的组标识符。可以是文本或二进制值。</li>\r\n      <li> <code>Offset</code> : 要检索的 MQ 消息的偏移。是整数值。(在 MQ z/OS 上不可用)。</li>\r\n      <li> <code>LogicalSequenceNumber</code> : 要检索的 MQ 消息的逻辑序列号。是整数值。</li>\r\n    </ul>\r\n    请注意，当这些列与其他非折叠列合并时，查询可能不会折叠。\r\n\r\n    <code>Table.FirstN</code> 可用于限制从队列检索的消息数。在未指定的情况下，将仅检索前 500 条消息。\r\n\r\n    <code>Table.SelectColumns</code> 用于限制由函数返回的列。\r\n\r\n    <code>TableAction.DeleteRows</code> 用于破坏性地从队列获取消息。\r\n\r\n    <code>TableAction.InsertRows</code> 用于向队列发送消息。可写入以下消息属性:\r\n    <ul>\r\n    <li> <code>MessageData</code> : 消息数据。这是唯一要求的列。可以是文本或二进制值。</li>\r\n    <li> <code>CorrelationId</code> : 要发送的 MQ 消息的相关标识符。可以是文本或二进制值。</li>\r\n    <li> <code>Ccsid</code> : 消息的字符集。默认情况下，将使用 MQ 服务器上的字符集。</li>\r\n    <li> <code>MessageId</code> : 要发送的 MQ 消息的消息标识符。可以是文本或二进制值。</li>\r\n    <li> <code>MessageType</code> : 有效的消息类型为 \"Datagram\"、 \"Reply\" 或 \"Request\"。默认值为 \"Datagram\"。</li>\r\n    <li> <code>Offset</code> : 消息偏移。默认为 0。</li>\r\n    <li> <code>ReplyToQueue</code> : 如果消息类型为 \"Request\"，则可指定回复队列。默认情况下按 <code>MQ.Queue</code> 中的定义使用队列。</li>\r\n    <li> <code>ReplyToQueueManager</code> : ReplyToQueue 的队列管理器的名称。默认情况下按 <code>MQ.Queue</code> 中的定义使用队列管理器。</li>\r\n    </ul>\r\n    ",
  "Type_IsNullable_Description": "如果类型是 <code>nullable</code> 类型则返回 <code>true</code>；否则，返回 <code>false</code>。",
  "Date_IsInNextNMonths": "指示此日期是否会在系统当前日期和时间确定的下一月数中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。",
  "AnalysisServices_Database_Description": "从服务器 {0} 上的 Analysis Services 数据库 {1} 中返回多维数据集或表格模型的表。可以指定可选的记录参数 {2} 来控制以下选项:\r\n    {2:type}\r\n    ",
  "Number_BitwiseOr_Description": "返回对 {0} 和 {1} 执行按位 \"Or\" 所得的结果。",
  "Csv_Document": "返回 CSV 文档的内容作为表。",
  "Option_ConnectionTimeout_Description": "一个时间段，控制在放弃尝试建立到服务器的连接之前等待的时间。默认值与驱动程序相关。",
  "Text_TrimStart": "删除所有前导空格。",
  "Table_FromValue_Example2": "从列表创建一个表。",
  "Table_FromValue_Example3": "使用自定义列名从值 1 创建一个表。",
  "Table_FromValue_Example1": "从值 1 创建一个表。",
  "QuoteStyle_Csv": "引号字符指示被引用的字符串的开头。 嵌套的引号由两个引号字符指示。",
  "Table_FindText_Description": "返回表 {0} 中包含文本 {1} 的行。如果找不到文本，则返回空表。",
  "Time_From": "从给定的值创建时间。",
  "Time_Hour": "返回小时部分。",
  "Time_Type": "表示所有时间值的类型。",
  "Date_IsInPreviousQuarter": "指示此日期是否会在系统当前日期和时间确定的上一季度中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。",
  "Extension_LoadString_Description": "从针对当前区域性(如果没有本地化定义，回退到默认区域性)本地化的当前库 PQX 文件返回字符串 {0}，或返回 <code>null</code>(如果字符串未定义的话)。",
  "Table_ExpandTableColumn_Description": "将 {0}[{1}] 中的表扩展为多个行和列。{2} 用于从内部表中选择要扩展的列。指定 {3} 以避免现有列与新列之间的冲突。",
  "Csv_Document_Example1": "处理包含列标题的 CSV 文本",
  "Hdfs_Contents": "返回一个表，它包含在 Hadoop 文件系统的指定文件夹中找到的文件和文件夹的属性和内容。",
  "Option_Content_Web_Caption": "HTTP 请求的正文",
  "DateTime_IsInCurrentMinute_Example1": "确定当前系统时间是否处于当前分钟内。",
  "DateTime_Time": "返回给定日期时间值的时间部分。",
  "DateTime_Type": "表示不含关联时区的所有日期和时间值的类型。",
  "DateTime_From": "从给定的值创建日期时间。",
  "Language_Duration_Add": "duration 值可以相加。",
  "DateTime_Date": "返回给定 date、datetime 或 datetimezone 值的日期部分。",
  "Option_Distribution_Caption": "分发",
  "Text_Combine_Description": "返回将文本值列表，{0}，合并为单个文本值的结果。{0} 中存在的任何 <code>null</code> 值将被忽略。\r\n    可以指定在最终组合文本中使用的可选 {1}。",
  "DateTime_IsInPreviousHour_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一小时中出现。请注意，当传递一个在当前小时中出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Number_IsEven_Description": "通过以下方式指示值 {0} 是否为偶数: 如果为偶数，则返回 <code>true</code>；否则返回 <code>false</code>。",
  "Table_ToColumns": "从表中创建列值的嵌套列表的列表。",
  "Variable_Value_Description": "此函数仅供内部使用。",
  "List_Zip_Description": "提取列表的列表 {0}，并通过在同一位置合并项返回列表的列表。",
  "Number_RoundTowardZero_Description": "基于数字的符号返回舍入 {0} 的结果。此函数将向下舍入正数、向上舍入负数。\r\n    如果指定了 {1}，则将 {0} 舍入为包含 {1} 位小数。\r\n  ",
  "JoinSide_Left": "指定联接的左表。",
  "JoinSide_Type": "指定联接的左表或右表。",
  "Number_Ln_Description": "返回数 {0} 的自然对数。如果 {0} 为 null，则 <code>Number.Ln</code> 返回 null。",
  "Date_EndOfDay": "返回天结束值。",
  "Cube_Measures_Description": "返回包含 {0} 中可用的度量值集的表。\r\n    每个度量值表示为一个函数。使用 Cube.AddMeasureColumn 可将度量值应用于多维数据集。",
  "SqlExpression_SchemaFrom_Description": "此函数仅供内部使用。",
  "File_Contents": "以二进制形式返回指定文件的内容。",
  "Language_NegativeNumber": "可以写入负数。",
  "Web_DefaultProxy_Description": "返回要用于特定 URI {0} 的 HTTP 代理；如果未配置代理，则返回 null。",
  "Double_From_Example1": "获取 <code>\"4\"</code> 的 Double <code>number</code> 值。",
  "AzureStorage_Blobs": "返回一个导航表，它包含从 Azure 存储库的指定帐户中找到的容器。",
  "Cube_Dimensions_Description": "返回包含 {0} 中可用的维度集的表。每个维度均为包含维度属性集的表，而每个维度属性则表现为维度表中的一列。使用 Cube.AddAndExpandDimensionColumn 可展开多维数据集中的维度。",
  "Table_TransformColumns_Description": "通过应用 {1} 中列出的每个列操作来转换 {0} (格式为 {{ column name, transformation }} 或 {{ column name, transformation, new column type }})。\r\n    如果指定了 {2}，它将应用于未在 {1} 中列出的所有列。\r\n    如果 {1} 中列出的列不存在，则除非可选参数 {3} 指定了替代项，否则将引发一场(例如，<code>MissingField.UseNull</code> 或 <code>MissingField.Ignore</code>)。",
  "DateTime_IsInPreviousMinute": "指示此日期时间是否会在系统当前日期和时间确定的上一分钟内出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。",
  "Text_Range_Description": "从文本 {0} 中返回在偏移量 {1} 中找到的子字符串。\r\n    可以包含一个可选参数 {2}，以指定要返回多少个字符。",
  "RankKind_Type": "指定排名的类型。",
  "Number_Combinations": "返回唯一组合的数目。",
  "RoundingMode_ToEven": "当要舍入到的可能数字之间存在一个等同舍时，舍入到最接近的偶数。",
  "Language_Invocation": "要调用函数，请提供用括号括起来的逗号分隔参数。",
  "Web_Service": "返回可以调用以便对 Web 服务调用方法的函数记录。",
  "Date_IsLeapYear": "指示此日期是否处于闰年中。",
  "BinaryFormat_Decimal": "读取 .NET 16 字节十进制值的二进制格式。",
  "RoundingMode_Up": "当可能四舍五入的数值之间存在等同值时，向上舍入。",
  "Option_EnableColumnBinding_HANA_Caption": "启用列绑定",
  "Text_Start_Example1": "获取 \"Hello, World\" 的前 5 个字符。",
  "Date_IsInNextMonth": "指示此日期是否会在系统当前日期和时间确定的下个月中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。",
  "Date_IsInNextNDays": "指示此日期是否会在系统当前日期和时间确定的下一天数中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。",
  "Language_Table_LookupByKey": "可以按键查找表的项。",
  "Table_RemoveColumns_Example1": "从表中删除列 [Phone]。",
  "Table_RemoveColumns_Example2": "尝试从表中删除不存在的列。",
  "Web_Contents_Description": "以二进制形式返回从 {0} 下载的内容。可以提供可选记录参数 {1} 以指定其他属性。记录可以包含以下字段:\r\n    {1:type}\r\n    HTTP 请求是作为 GET (未指定内容时)或 POST (如果存在内容)发出的。POST 请求只能匿名发出。\r\n    <br>\r\n    HTTP 响应的标头可作为二进制结果的元数据提供。在自定义数据连接器上下文之外，只有一部分响应标头可用(出于安全原因)。\r\n    ",
  "Cube_Parameters_Description": "返回的表所包含的参数集可应用到 {0}。每个参数都是一个函数，可调用这些函数以获取 {0}，其中应用了形参及其实参。",
  "Type_FunctionReturn_Example1": "找到 <code>() as any)</code> 的返回类型。",
  "BinaryFormat_Choice_Description": "返回一个二进制格式，它基于已读取的值选择下一个二进制格式。 由此函数生成的二进制格式值的工作方式分为以下几个阶段:<ul>\r\n<li>使用 {0} 参数指定的二进制格式读取一个值。</li>\r\n<li>将该值传递到由 {1} 参数指定的选择函数。</li>\r\n<li>该选择函数检查值并且返回第二个二进制格式。</li>\r\n<li>使用该第二个二进制格式读取第二个值。</li>\r\n<li>如果指定了合并函数，则第一个值和第二个值将传递到该合并函数，然后返回最终生成的值。</li>\r\n<li>如果未指定该合并函数，则返回第二个值。</li>\r\n<li>返回第二个值。</li>\r\n</ul>可选的 {2} 参数指示选择函数将返回的二进制格式的类型。 或者可以指定 <code>type any</code>、<code>type list</code> 或 <code>type binary</code>。 如果未指定 {2} 参数，则使用 <code>type any</code>。  如果使用了 <code>type list</code> 或 <code>type binary</code>，则系统可能能够返回流式 <code>binary</code> 或 <code>list</code> 值，而不是缓冲后的值，这可以减少读取该格式所需的内存量。",
  "Time_Hour_Description": "返回所提供的 <code>time</code>、<code>datetime</code> 或 <code>datetimezone</code> 值 {0} 的小时部分。",
  "Option_Implementation_SharePoint_Description": "可选。指定要使用的 SharePoint 连接器版本。接受的值为 “2.0” 或 null。如果值为 “2.0”，则使用 SharePoint 连接器的 2.0 实现。如果值为 null，则使用 SharePoint 连接器的原始实现。",
  "Record_SelectFields": "返回只包含指定字段的记录。",
  "Type_RecordFields": "返回一个记录，描述记录类型的字段，其中返回记录类型的每个字段拥有对应的名称和值。",
  "Table_CombineColumns_Example1": "将姓、名合并到新列中，用逗号分隔。",
  "Number_Combinations_Description": "从项列表 {0} 返回具有指定组合大小 {1} 的唯一组合数目。\r\n<ul>\r\n    <li>{0}: 列表中的项数。</li>\r\n    <li>{1}: 每个组合中的项数。</li>\r\n</ul>\r\n",
  "Oracle_Database_Description": "从服务器 {0} 上的 Oracle Database 中返回 SQL 表和视图的表。可以视需要指定服务器的端口，并用冒号分隔。可以指定可选的记录参数 {1} 来控制以下选项:\r\n    {1:type}\r\n    例如，可以将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "BinaryFormat_ByteOrder": "以函数指定的字节顺序返回二进制格式。",
  "Odbc_Query_Description": "返回通过使用 ODBC 的连接字符串 {0} 运行 {1} 的结果。{0} 可以为文本或属性值对记录。属性值可以为文本或数字。可提供一个可选的记录参数 {2} 以指定其他属性。记录可以包含以下字段:\r\n    {2:type}",
  "Date_IsInNextNQuarters_Example1": "确定当前系统时间之后的季度是否在接下来的两个季度中。",
  "BinaryFormat_Choice": "返回一个二进制格式，它基于已读取的值选择下一个二进制格式。",
  "Table_FuzzyJoin": "联接两个表中基于给定键模糊匹配的行。",
  "Action_View_Description": "<p>返回 {0} 视图，其中在将操作应用于视图时，使用 {1} 中指定的函数代替操作的默认行为。</p>\r\n<p>如果已提供 {0}，则所有处理程序函数都为可选项。如果未提供 {0}，则<code>OnExecute</code>处理程序函数为必需项。如果未为操作指定处理程序函数，则操作的默认行为会应用于 {0} (<code>GetExpression</code>除外)。</p>\r\n<p>处理程序函数必须返回值，该值在语义上等效于对 {0} 应用操作的结果(或在<code>GetExpression</code>情况下生成的视图)。</p>\r\n<p>如果处理程序函数引发错误，则操作的默认行为会应用于视图。</p>\r\n<p><code>Action.View</code>可用于实现数据源的折叠 - 将 M 查询转换为特定于源的操作(例如，在表中插入行)。</p>\r\n<p>请参阅已发布的 Power Query 自定义连接器文档，从而了解有关 <code>Action.View</code>的更完整的说明。</p>",
  "Date_EndOfQuarter": "返回季度结束值。",
  "Number_Log10_Description": "返回数值 {0} 的以 10 为底的对数。如果 {0} 为 null，则 <code>Number.Log10</code> 返回 null。",
  "List_First_Description": "返回列表 {0} 中的第一个项；如果列表为空，则返回可选的默认值 {1}。\r\n    如果列表为空且未指定默认值，函数将返回 <code>null</code>。",
  "Splitter_SplitTextByDelimiter_Example1": "按逗号拆分输入，忽略带引号的逗号。",
  "Table_Transpose_Example1": "使名称-值对的表行成为列。",
  "Table_ConformToPageReader_Description": "此函数仅供内部使用。",
  "List_RemoveFirstN_Example1": "从 {1, 2, 3, 4, 5} 创建不带前 3 个数的列表。",
  "List_RemoveFirstN_Example2": "从 {5, 4, 2, 6, 1} 创建一个列表，它以小于 3 的数开头。",
  "Hdfs_Contents_Description": "返回一个表，它包含在 Hadoop 文件系统的文件夹 URL {0} 上找到的每个文件夹和文件所对应的行。每一行都包含所对应的文件夹或文件的属性以及指向其内容的链接。",
  "Record_RenameFields_Example1": "从记录将字段 \"UnitPrice\" 重命名为 \"Price\"。",
  "Record_RenameFields_Example2": "从记录将字段 \"UnitPrice\" 重命名为 \"Price\"，将字段 \"OrderNum\" 重命名为 \"OrderID\"。",
  "DateTime_IsInPreviousNSeconds_Example1": "确定当前系统时间前的秒是否处于前两秒内。",
  "BinaryFormat_Binary": "返回读取二进制值的二进制格式。",
  "Table_PrefixColumns": "返回一个表，其中所有列均以给定的文本为前缀。",
  "Value_ViewError_Description": "此函数仅供内部使用。",
  "SapHana_Database": "返回 SAP HANA 数据库中的包。",
  "Cube_AddMeasureColumn": "向多维数据集添加列，其中包含在每行的行上下文中应用的度量值的结果。",
  "Table_SplitAt": "返回包含指定第一个计数行和其余行的列表。",
  "Date_DayOfYear": "返回表示一年中的日期的数值，该值介于 1 和 366 之间。",
  "Date_DayOfWeek": "返回数字(介于 0 和 6 之间)，以指明提供的值是星期几。",
  "Cube_Transform_Description": "在 {0} 上应用多维数据集函数列表 {1}。",
  "Action_Return": "创建执行时不执行任何操作并返回指定值作为其结果的操作。",
  "Text_Upper_Description": "返回将 {0} 中的所有字符转换为大写的结果。还可提供可选的 {1} (例如 \"en-US\")。",
  "Option_Timeout_Web_Description": "如果将此值指定为持续时间，则将更改 HTTP 请求的超时时间。默认值为 100 秒。",
  "Number_Factorial_Example1": "计算 10 的阶乘。",
  "List_DateTimes": "给定初始值、计数和增量期间值来生成 datetime 值的列表。",
  "Action_Sequence_Description": "<p>创建按顺序执行 {0} 中的元素序列的操作。</p>\r\n<p>{0} 的每个元素是操作或返回操作的函数。列表中的元素仅在列表中位于它之前的所有元素都执行之后才执行。对于作为函数的元素，“已执行”表示已计算函数并且执行了它返回的操作。</p>\r\n<p>如果列表中的某个元素是函数，则它必须是返回操作的 0 参数或 1 参数函数。如果函数是 1 参数函数，则先前元素执行的结果会作为输入提供给它。初始结果(即，可供序列中第一个函数使用的结果)为 <code>null</code>。</p>\r\n<p>列表中取决于执行先前元素的副作用或结果的任何元素都必须使用函数进行表示。</p>\r\n<p><code>Action.Sequence</code> 的结果是执行列表中最后一个元素的结果(如果序列为空，则该结果为 <code>null</code>)。</p>\r\n<p><b>注意:</b> 如果列表中的某个函数引用在其函数体外部声明的变量，则不保证该函数会观察到列表中先前元素的执行的副作用(因为在构造该函数时会捕获空闲变量)。若要确保函数在列表中的先前元素执行之后观察到更新的数据，请使用直接访问受影响的数据源的表达式或函数。</p>",
  "AccessControlEntry_ConditionToIdentities_Description": "<p>使用指定的 {0}，在 {0} 作为标识提供者的情况下，将 {1} 转换为标识的列表，其中 {1} 将在所有授权上下文中返回 <code>true</code>。如果无法将 {1} 转换为标识列表，则会引发错误，例如，如果 {1} 查询用户或组标识以外的属性以做出决策。</p>\r\n    <p>请注意，标识列表表示 {1} 中显示的标识，并且不对其执行任何规范化操作(如组扩展)。</p>\r\n",
  "Binary_Combine": "将一组二进制值合并成单个二进制值。",
  "DateTime_AddZone_Example1": "将时区设置为 UTC+7:30(超过 UTC 7 小时 30 分钟)。",
  "BinaryOccurrence_Required": "要求该项在输入中出现一次。",
  "Option_ConnectionTimeout_ODBC_Description": "一个时间段，控制在放弃尝试建立到服务器的连接之前等待的时间。默认值为 15 秒。",
  "Text_Middle_Description": "返回 {2} 个字符，或返回至 {0} 的结束；采用偏移 {1}。",
  "Table_AlternateRows": "保留初始偏移量，然后交替选取和跳过下列行。",
  "Value_As_Example1": "将数字强制转换为数字。",
  "Value_As_Example2": "尝试将文本值强制转换为数字。",
  "Comparer_OrdinalIgnoreCase_Description": "返回不区分大小写的比较器函数，该函数使用序号规则比较提供的值 {0} 和 {1}。<br>\r\n        <br>\r\n        比较器函数接受两个参数，并根据第一个值是小于、等于还是大于第二个值返回 -1、0 或 1。\r\n    ",
  "Date_IsInPreviousDay_Example1": "确定当前系统时间之前的那一天是否处于前一天。",
  "Date_FromText_Description": "根据文本表示形式 {0} 创建 <code>date</code> 值。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的<code>文本</code>值。要了解更多详细信息，请转到 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致尽最大努力解析日期。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"MMM\"</code> 是 <code>\"Jan\"、\"Feb\"、\"Mar\" 等</code>，而在 <code>\"ru-RU\"</code> 中，<code>\"MMM\"</code> 是 <code>\"янв\"、\"фев\"、\"мар\" 等</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 也可以是文本值。这与 {1}<code> = [Format = null, Culture = {1}]</code> 时的行为相同。",
  "Date_IsInPreviousYear_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一年中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Value_ViewFunction": "此函数仅供内部使用。",
  "Date_AddYears_Example1": "将 4 年添加到表示日期 5/14/2011 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "Date_AddYears_Example2": "将 10 年添加到表示日期和时间 5/14/2011 08:15:22 AM 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "Cdpa_Database_Description": "提供对 CDPA 数据库的访问权限。",
  "MissingField_Type": "指定对包含的列数少于预期的行中缺少的值应采取的操作。",
  "Option_RequestSize_Description": "要在对服务器的单个 HTTP 请求中尝试读取的字节数。默认值为 4MB。",
  "GeometryPoint_From": "创建一条表示各部分的几何点的记录。",
  "Order_Type": "指定排序方向。",
  "OpenApi_Document": "从开放 API 定义返回操作表。",
  "List_Min_Example1": "查找列表 {1, 4, 7, 3, -2, 5} 中的最小值。",
  "List_Min_Example2": "查找列表 {} 中的最小值，如果列表为空，则返回 -1。",
  "GeographyPoint_From": "创建一条表示各部分的地理点的记录。",
  "BinaryFormat_Double": "读取 8 字节 IEEE 双精度浮点值的二进制格式。",
  "Number_Abs_Example1": "-3 的绝对值。",
  "Number_Asin_Description": "返回 {0} 的反正弦。",
  "Excel_ShapeTable": "此函数仅供内部使用。",
  "List_ReplaceRange_Description": "从指定的位置 {1} 开始使用列表 {3} 替换 {0} 中的 {2} 个值。",
  "Text_Middle_Example1": "从文本 \"Hello World\" 中查找从索引 6 开始、跨 5 个字符的子字符串。",
  "Text_Middle_Example2": "从文本 \"Hello World\" 中查找从索引 6 开始到结束的子字符串。",
  "Value_ReplaceType_Example1": "将记录的默认类型替换为更具体的类型。",
  "List_Modes_Example1": "查找列表 <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> 中出现最多的项。",
  "Occurrence_Last": "返回找到的值最后一次出现的位置。",
  "Occurrence_Type": "指定序列中元素的出现次数。",
  "Number_Cos_Example1": "计算角 0 的余弦。",
  "Table_UnpivotOtherColumns_Description": "将指定集以外的所有列转换为属性值对，并与每行中的剩余值合并。",
  "Comparer_FromCulture_Description": "返回比较器函数，该函数使用 {0} 和 {1} 指定的区分大小写来执行比较。<br>\r\n      <br>\r\n      比较器函数接受两个参数，并根据第一个值是小于、等于还是大于第二个值返回 -1、0 或 1。<br>\r\n      <br>\r\n      {1} 的默认值为 false。{0} 应为 .NET framework 支持的区域设置之一(例如，\"en-US\")。\r\n    ",
  "Date_From_Description": "从给定的 {0} 返回 <code>date</code> 值。还可提供可选的 {1} (例如 “en-US”)。\r\n如果给定的 {0} 是 <code>null</code>，<code>Date.From</code> 将返回 <code>null</code>。如果给定的 {0} 是 <code>date</code>，则返回 {0}。以下类型的值可以转换为 <code>date</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 文本表示形式的 <code>date</code> 值。有关详细信息，请参阅 <code>Date.FromText</code>。</li>\r\n        <li><code>datetime</code>: {0} 的日期组件。</li>\r\n        <li><code>datetimezone</code>: 本地日期时间中等效于 {0} 的日期组件。</li>\r\n        <li><code>number</code>: 等效于 {0} 表示的 OLE 自动化日期的日期时间的日期组件。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "Text_Select_Example1": "从文本值中选择范围从 \"a\" 到 \"z\" 的所有字符。",
  "DateTimeZone_FromText_Description": "根据文本表示形式 {0} 创建 <code>datetimezone</code> 值。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的<code>文本</code>值。要了解更多详细信息，请转到 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致尽最大努力解析日期。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"MMM\"</code> 是 <code>\"Jan\"、\"Feb\"、\"Mar\" 等</code>，而在 <code>\"ru-RU\"</code> 中，<code>\"MMM\"</code> 是 <code>\"янв\"、\"фев\"、\"мар\" 等</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 也可以是文本值。这与 {1}<code> = [Format = null, Culture = {1}]</code> 时的行为相同。",
  "Table_PromoteHeaders_Example1": "升级表中的第一行值。",
  "Table_PromoteHeaders_Example2": "将表的第一行中的所有标量升级为标题。",
  "Record_FieldOrDefault": "返回记录中指定字段的值，如果未找到该字段，则返回默认值。",
  "Record_ReorderFields_Example1": "将记录中的部分字段重新排序。",
  "ItemExpression_Item_Description": "表示项表达式中项的抽象语法树(AST)。",
  "Option_BlockSize_Caption": "块大小",
  "Number_FromText_Example1": "获取 <code>\"4\"</code> 的数值。",
  "Number_FromText_Example2": "获取 <code>\"5.0e-10\"</code> 的数值。",
  "Number_BitwiseNot": "返回一个字节，其中每位是输入的相反值。",
  "Number_BitwiseAnd": "返回对两个输入执行按位 \"And\" 运算所得的结果。",
  "Number_BitwiseXor": "返回对两个输入执行按位 \"XOR\" (异或)所得的结果。",
  "SqlDatabase_View": "返回基于类似 SQL 的元数据的导航表。",
  "Type_ListItem": "从列表类型中返回项类型。",
  "Record_ToTable_Example1": "从记录返回表。",
  "Hdfs_Files_Description": "返回一个表，它包含在 Hadoop 文件系统的文件夹 URL {0} 和子文件夹中找到的每个文件所对应的行。每一行都包含所对应的文件的属性以及指向其内容的链接。",
  "Option_IsRetry_Web_Caption": "HTTP 请求的内容是“重试”",
  "List_LastN_Description": "返回列表 {0} 的最后一项。如果列表为空，将引发异常。\r\n 此函数采用一个可选参数 {1} 来支持收集多个项或筛选项。可以通过以下三种方式指定 {1}:\r\n <ul>\r\n  <li>如果指定一个数，则最多返回这么多项。</li>\r\n  <li>如果指定一个条件，则返回最初满足该条件的所有项，从列表末尾开始。一旦某个项不满足该条件，则不再考虑其他项。</li>\r\n  <li>如果此参数为 null，则返回列表中的最后一项。</li>\r\n </ul>",
  "Table_ContainsAll_Example1": "确定表是否包含所有行，同时只比较列[CustomerID]。",
  "Table_ContainsAll_Example2": "确定表是否包含所有行。",
  "Day_Saturday": "表示星期六。",
  "Date_Day_Description": "返回 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值的日部分。\r\n      <ul>\r\n        <li>{0}: 要从其提取日部分的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "List_Positions_Description": "返回输入列表 {0} 的偏移量列表。\r\n    使用 List.Transform 更改列表时，可以使用位置列表来授予对位置的转换权限。",
  "Duration_Seconds_Description": "返回 {0} 的秒数部分。",
  "Comparer_OrdinalIgnoreCase_Example1": "使用不区分大小写的 Ordinal 规则，比较 \"Abc\" 和 \"abc\"。请注意，通过使用 <code>Comparer.Ordinal</code>，\"Abc\" 要小于 \"abc\"。",
  "Duration_TotalSeconds_Example1": "查找持续时间值跨越的总秒数。",
  "Null_Type": "表示 null 的类型。",
  "Language_Function": "使用参数 a => 和要运行的表达式编写函数。",
  "DateTime_IsInNextMinute": "指示此日期时间是否会在系统当前日期和时间确定的下一分钟内出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。",
  "Table_PositionOf_Description": "返回 {1} 在指定的 {0} 中第一次出现的行位置。如果找不到该值，则返回 -1。\r\n    <ul>\r\n       <li>{0}: 输入表。</li>\r\n       <li>{1}: 表中要查找其位置的行。</li>\r\n       <li>{2}: <i>[可选]</i> 指定要返回的行的出现次数。</li>\r\n       <li>{3}: <i>[可选]</i> 控制表行之间的比较。</li>\r\n    </ul>\r\n    ",
  "Text_EndsWith_Example2": "检查 \"Hello, World\" 是否以 \"World\" 结尾。",
  "Text_EndsWith_Example1": "检查 \"Hello, World\" 是否以 \"world\" 结尾。",
  "Option_TreatTinyAsBoolean_Caption": "启用大容量插入",
  "Table_TypeFromColumns_Example1": "查找具有值 {1, 2, 3} 的列 [a] 的类型和具有值 {\"abc\"} 的列 [b] 的类型。",
  "Option_MaxDegreeOfParallelism_Description": "一个数字，用于设置生成的 SQL 查询中 \"maxdop\" 查询子句的值。",
  "Table_DuplicateColumn": "复制具有指定名称的列。从源列复制值和类型。",
  "Table_Skip_Example2": "跳过表的前两行。",
  "Table_Skip_Example3": "跳过表中 [Price] > 25 的前几行。",
  "Table_Skip_Example1": "跳过表的第一行。",
  "Record_RenameFields": "采用 { old, new } 形式从列表中应用重命名。",
  "Option_HierarchicalNavigation_True_Caption": "在完整层次结构中导航",
  "List_PositionOfAny_Description": "返回值在列表 {1} 中第一次出现的位置列表 {0} 中的偏移量。如果找不到该值，则返回 -1。\r\n    可以指定可选的出现次数参数 {2}。\r\n<ul>\r\n   <li>{2}: 可以返回的最大出现次数。</li>\r\n</ul>",
  "LimitClauseKind_LimitOffset": "此 SQL 方言支持 LIMIT 和 OFFSET 说明符，以限制返回的行数。",
  "Date_EndOfQuarter_Example1": "查找 2011 年 10 月 10 日上午 8:00 的季度结束值。",
  "Date_IsInNextQuarter": "指示此日期是否会在系统当前日期和时间确定的下一季度中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。",
  "Option_ApiVersion_Salesforce_Description": "此查询所使用的 Salesforce API 版本。未指定时，使用 API 版本 29.0。",
  "DateTime_IsInPreviousNHours_Example1": "确定当前系统时间前的小时是否处于前两个小时内。",
  "Date_IsInNextNYears_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一年数中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 年数。</li>\r\n      </ul>",
  "RelativePosition_FromEnd": "指示应从输入结尾编制索引。",
  "Language_Text_Compares": "可以比较文本值。",
  "List_FindText_Description": "从包含值 {1} 的列表 {0} 返回值列表。",
  "DateTime_ToRecord_Description": "返回包含给定日期时间值 {0} 的各个部分的记录。\r\n <ul>\r\n        <li>{0}: 要从中计算其各个部分的记录的 <code>datetime</code> 值。</li>\r\n      </ul>",
  "Language_Numbers_Math": "数字可以相加、相减、相乘和相除。",
  "Table_SelectRowsWithErrors": "返回一个表，其中只具有输入表中的在至少一个单元中包含错误的那些行。如果指定了列列表，则只检查指定列中的单元内是否有错误。",
  "AzureStorage_BlobContents": "从 Azure 存储库返回指定 blob 的内容。",
  "Date_DayOfWeek_Description": "返回数字(介于 0 和 6 之间)，以指明提供的 {0} 是星期几。\r\n  <ul>\r\n        <li>{0}: <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n        <li>{1}: <code>Day</code> 值，指明应将哪一天视为一周的第一天。可取值为 Day.Sunday、Day.Monday、Day.Tuesday、Day.Wednesday、Day.Thursday、Day.Friday 或 Day.Saturday。如果未指定，使用的是依赖区域性的默认值。</li>\r\n      </ul>",
  "Folder_Contents_Description": "返回一个表，其中包含在文件夹 {0} 中找到的每个文件夹和文件的一行。每行都包含文件夹或文件的属性以及指向其内容的链接。{1} 参数当前仅供内部使用。",
  "Record_ToTable": "返回一个表，其中的每行是输入记录的字段名称和值。",
  "Table_AddIndexColumn": "使用显式位置值追加列。",
  "Duration_TotalDays": "返回此持续时间跨越的总天数。",
  "List_AllTrue_Description": "如果列表 {0} 中的所有表达式均为 true，则返回 true。",
  "Geography_ToWellKnownText_Description": "将结构化地理点值转换为开放地理空间信息联盟(OGC)定义的 Well-Known Text (WKT)表示形式，该形式也是 SQL Server 等很多数据库使用的序列化格式。",
  "List_Median_Description": "返回列表 {0} 的中位数项。如果列表包含非 <code>null</code> 值，则此函数返回 <code>null</code>。\r\n    如果具有偶数项，则函数选择两个中位数项中的较小者，除非列表\r\n    完全由日期时间、持续时间、数字或时间组成，在这种情况下，函数返回两个项的平均值。",
  "DateTime_FromFileTime_Description": "从 {0} 值创建一个 <code>datetime</code> 值并且将其转换为本地时区。filetime 是一个 Windows 文件时间值，它表示自公元 1601 年 1 月 1 日(C.E.)通用协调时间(UTC)午夜 12:00 后 经过的 100 纳秒时间间隔的数目。\r\n",
  "Day_Sunday": "表示星期日。",
  "Byte_From_Description": "从给定的 {0} 中返回 8 位整数 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Byte.From</code> 返回 <code>null</code>。如果给定的 {0} 是不带小数部分的 8 位整数范围内的 <code>number</code>，则返回 {0}。如果带有小数部分，则按指定舍入模式舍入该数字。默认舍入模式为 <code>RoundingMode.ToEven</code>。如果 {0} 属于任何类型，则首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。要了解可用的舍入模式，请参阅 <code>Number.Round</code>。还可能提供可选的 {1} (例如，“en-US”)。",
  "Duration_TotalDays_Description": "返回 {0} 跨越的总天数。",
  "Type_ReplaceFacets_Description": "将 {0} 的 Facet 替换为记录 {1} 中包含的 Facet。",
  "Access_Database_Description": "返回 Access 数据库 {0} 的结构表示形式。可以指定可选的记录参数 {1} 来控制以下选项:\r\n    {1:type}\r\n    例如，可以将记录参数指定为 [option1 = value1, option2 = value2...]。",
  "Table_HasColumns_Description": "指示 {0} 是否包含指定的列 {1}。如果表包含此列或这些列，则返回 <code>true</code>，否则返回 <code>false</code>。",
  "List_Buffer_Description": "在内存中缓冲列表 {0}。此调用的结果是一个稳定的列表。",
  "LimitClauseKind_None": "此 SQL 方言不支持限制子句。",
  "LimitClauseKind_Type": "描述此数据源使用的 SQL 方言支持的限制子句类型。",
  "Splitter_SplitTextByLengths": "返回一个函数，它按每个指定的长度将文本拆分为文本列表。",
  "RelativePosition_FromStart": "指示应从输入开头编制索引。",
  "AzureStorage_Tables_Description": "返回一个导航表，它包含从 Azure 存储库的帐户 URL {0} 中找到的每个表的行。每行都包含指向 Azure 表的链接。可能提供了可选记录参数 {1} 来指定其他属性。记录可包含以下字段:\r\n    {1:type}",
  "Table_AddJoinColumn_Example1": "从已联接 [saleID] 的表({[saleID = 1, price = 20], [saleID = 2, price = 10]})将名为 \"price/stock\" 的联接列添加到({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]})。",
  "DateTime_IsInNextSecond": "指示此日期时间是否会在系统当前日期和时间确定的下一秒中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。",
  "OData_Feed_Description": "从 URI {0}，标头 {1} 返回由 OData 服务提供的 OData 源表。可以指定指明是使用并发连接还是使用可选记录参数 {2} 的布尔值来控制以下选项:\r\n    <ul>\r\n    <li><code>Query</code>: 以编程方式向 URL 添加查询参数，而无需担心转义。</li>\r\n    <li> <code>标头</code>: 将此值指定为记录将向 HTTP 请求提供附加标头。</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: 将此值指定为列表将从缓存数据计算中排除这些 HTTP 标头密钥。</li>\r\n    <li> <code>ApiKeyName</code>: 如果目标网站具有 API 密钥表示法，则此参数可用于指定必须在 URL 中使用的密钥参数的名称(而不是值)。实际密钥值在凭据中提供。</li>\r\n    <li> <code>Timeout</code>: 将此值指定为持续时间将更改 HTTP 请求的超时。默认值为 600 秒。</li>\r\n    <li> <code>EnableBatch</code>: 逻辑值(true/false)，用于设置是否允许在超出 MaxUriLength 时生成 OData $batch 请求(默认值为 false)。</li>\r\n    <li> <code>MaxUriLength</code>: 指示发送到 OData 服务的允许 URI 最大长度的数字。如果超出且 EnableBatch 为 true，则将向 OData $batch 终结点发送请求，否则将会失败(默认值为 2048)。</li>\r\n    <li> <code>Concurrent</code>: 逻辑值(true/false)，如果设置为 true，则将并发提出向服务的请求。如果设置为 false，则将按顺序发出请求。如果未指定，则值由服务的 AsynchronousRequestsSupported 注释确定。如果服务未指定是否支持 AsynchronousRequestsSupported，则将按顺序发出请求。</li>\r\n    <li> <code>ODataVersion</code>: 数字(3 或 4)，用于指定此 OData 服务使用的 OData 协议版本。如果未指定，将请求所有受支持的版本。服务版本由服务返回的 OData-Version 标头确定。</li>\r\n    <li> <code>FunctionOverloads</code>: 逻辑值(true/false)，如果设置为 true，函数导入过载以单独条目形式在导航器中列出。如果设置为 false，函数导入过载将以一个联合函数的形式在导航器中列出。V3 的默认值为 false。V4 的默认值为 true。</li>\r\n    <li> <code>MoreColumns</code>:逻辑值(true/false)，如果设置为 true，则将“更多列”列添加到每个包含开放式类型和多变类型的实体源。这将包含基类型中未声明的字段。如果设置为 false，则此字段不存在。默认为 false。</li>\r\n    <li> <code>IncludeAnnotations</code>: 要包含的命名空间限定术语名称或模式的逗号分隔列表(使用 “*” 作为通配符)。默认情况下，不包括任何注释。</li>\r\n    <li> <code>IncludeMetadataAnnotations</code>: 要包含在元数据文档请求上的命名空间限定术语名称或模式的逗号分隔列表(使用 “*” 作为通配符)。默认情况下，包括与 IncludeAnnotations 相同的注释。</li>\r\n    <li> <code>OmitValues</code>: 允许 OData 服务避免在响应中写出特定值。如果已由服务确认，我们将通过忽略的字段推断这些值。选项包括:\r\n      <ul>\r\n      <li><code>ODataOmitValues.Nulls</code>: 允许 OData 服务忽略 null 值。</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Implementation</code>: 指定要使用的 OData 连接器实现。有效值为 “2.0” 或 NULL。</li>\r\n    </ul>",
  "_Pound_date": "从年、月和日创建一个日期值。",
  "Binary_ViewFunction": "创建可由在视图上(通过 Binary.View)定义的处理程序截获的函数。",
  "_Pound_time": "从小时、分钟和秒创建一个时间值。",
  "Number_RoundUp_Description": "返回将 {0} 向上舍入到下一个最大整数的结果。如果 {0} 为 null，则此函数返回 null。\r\n    如果提供了 {1}，则将 {0} 舍入为指定的小数位数。\r\n  ",
  "List_Single_Description": "如果列表 {0} 中只有一项，则返回该项。\r\n    如果列表中有多项或列表为空，函数将引发异常。",
  "Number_Sign": "如果为正数，则返回 1；如果为负数，则返回 -1；如果为零则返回 0。",
  "Number_Sinh": "返回数的双曲正弦。",
  "Number_Sqrt": "返回数的平方根。",
  "Number_Tanh": "返回数的双曲正切。",
  "Number_Type": "表示所有数字的类型。",
  "Web_Headers_Example1": "使用 RelativePath 和查询选项查询 <code>\"https://bing.com/search?q=Power+Query\"</code> 的 HTTP 标头。",
  "Number_Cosh": "返回数的双曲余弦。",
  "Number_Atan": "返回数的反正弦。",
  "Number_Asin": "返回数的反正弦。",
  "Number_Acos": "返回数的反余弦。",
  "Number_From": "从给定的值创建一个数。",
  "DateTime_Time_Example1": "查找 #datetime(2010, 12, 31, 11, 56, 02) 的时间值。",
  "Comparer_Ordinal_Description": "返回比较器函数，该函数使用序号规则比较提供的值 {0} 和 {1}。<br>\r\n        <br>\r\n        比较器函数接受两个参数，并根据第一个值是小于、等于还是大于第二个值返回 -1、0 或 1。\r\n    ",
  "MissingField_UseNull": "记录和表函数中的一个可选参数，指示缺失字段应作为 null 值包含。",
  "List_RemoveFirstN_Description": "返回删除列表 {0} 的第一个元素的列表。如果 {0} 为空列表，则返回空列表。\r\n此函数取一个可选参数 {1} 来支持删除以下所列的多个值。\r\n <ul>\r\n <li>如果指定一个数字，则最多删除这么多项。</li>\r\n <li>如果指定条件，则返回的列表以 {0} 中满足条件的第一个元素开头。一旦某个项不满足该条件，则不再考虑其他项。</li>\r\n <li>如果此参数为 null，将采用默认行为。</li>\r\n </ul>",
  "Date_IsInPreviousNQuarters_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一季度数中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 季度数。</li>\r\n      </ul>",
  "Combiner_CombineTextByEachDelimiter": "返回一个函数，它按顺序使用每个指定的分隔符将文本列表合并成单个文本。",
  "Expression_Constant": "返回常数值的 M 源代码表示形式。",
  "TableAction_UpdateRows_Description": "<p>基于 {1} 中的操作集创建一个操作以更新 {0} 中的行。该操作返回的表中包含在操作执行后出现在 {0} 中的已更新的行。</p>\r\n<p>{1} 的值可能为单个 <code>{{columnName, columnFunction}}</code> 对或此类值对的列表。对于每个值对，<code>columnFunction</code> 是要应用于行以计算该行的 <code>columnName</code> 列的新值的函数。</p>\r\n<p>若要更新 {0} 中的行的子集，请在使用 <code>TableAction.UpdateRows</code> 之前先使用 <code>Table.SelectRows</code> 对 {0} 应用筛选器。</p>\r\n<p>如果 {0} 不可更新或 {1} 中的任何操作与 {0} 不兼容，该函数将引发计算错误。</p>\r\n<p>如果操作失败，该操作将引发执行错误。</p>\r\n<p><b>注意:</b> 如果发生执行错误，{0} 可能会保留为部分更新状态。</p>",
  "Option_Culture_FuzzyGroup_Description": "允许根据区域性特定的规则对记录进行分组。它可以是任何有效的区域性名称。例如，\"ja-JP\" 的区域性选项基于日语区域性对记录进行分组。默认值为 \"\"，它基于固定英语区域性进行分组。",
  "Record_SelectFields_Example1": "在记录中选择字段 \"Item\" 和 \"Price\"。",
  "DateTime_AddZone_Description": "将时区信息添加到 {0} 值。时区信息包括 {1} 和可选的 {2}，这指定了所需的 UTC 时间偏移量。",
  "Date_IsInPreviousNDays_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一天数中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 天数。</li>\r\n      </ul>",
  "Geometry_FromWellKnownText_Description": "将 Well-Known Text (WKT)格式的表示几何值的文本转换为结构化记录。WKT 是开放地理空间信息联盟(OGC)定义的一种标准格式，也是 SQL Server 等数据库使用的典型序列化格式。",
  "List_DateTimes_Description": "返回大小为 {1} 的 <code>datetime</code> 值的列表，从 {0} 开始。给定的增量 {2} 是加到每个值的 <code>duration</code> 值。",
  "BinaryFormat_ByteOrder_Description": "返回具有 {0} 指定的字节顺序的二进制格式。 默认字节顺序是 <code>ByteOrder.BigEndian</code>。",
  "DateTime_IsInNextNHours": "指示此日期时间是否会在系统当前日期和时间确定的下一小时数中出现。请注意，当传递一个在当前小时内出现的值时，此函数将返回 false。",
  "SqlExpression_ToExpression_Description": "使用 {1} 定义的可用标识符，将提供的 {0} 查询转换为 M 代码。此函数仅供内部使用。",
  "GeometryPoint_From_Description": "创建一条表示其构成部分的几何点的记录，例如 X 轴、Y 轴以及(若有) Z 轴度量值(M)。如果不同于默认值(0)，可指定可选的空间参照标识符(SRID)。",
  "Expression_Evaluate_Description": "返回 M 表达式 {0} 的计算结果，其中可用的标识符可以由 {1} 进行引用和定义。",
  "Option_Timeout_Web_Caption": "HTTP 请求超时",
  "Text_TrimEnd": "删除所有尾随空格。",
  "List_Durations_Description": "返回 {1} <code>duration</code> 值的列表，从 {0} 开始，以给定的 <code>duration</code> {2} 为增量。",
  "Value_Compare": "根据第一个值是小于、等于还是大于第二个值，返回 -1、0 或 1。",
  "DateTimeZone_SwitchZone_Description": "将针对 datetimezone 值 {0} 的时区信息更改为 {1} 和 {2} (可选)提供的新时区信息。\r\n    如果 {0} 没有时区部分，将引发异常。",
  "Option_CommandTimeout_AS_Description": "一个时间段，控制在取消服务器端查询之前允许该查询运行的时间。默认值与驱动程序相关。",
  "Type_Union_Description": "返回 {0} 中类型的并集。",
  "Lines_FromText_Description": "将文本值转换为在换行符处拆分的文本值列表。如果 includeLineSeparators 为 true，则文本中将包括换行符。\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (默认值)无需任何加引号行为。</li>\r\n            <li><code>QuoteStyle.Csv:</code> 如何加引号按 CSV 的要求进行。使用一个双引号字符来界定这些区域，使用一对双引号来表示此区域中的单个双引号字符。</li>\r\n          </ul>\r\n        </div>\r\n    ",
  "List_Transform": "返回从此列表计算的值的新列表。",
  "Table_OnError_Description": "This function is intended for internal use only.",
  "Option_CommandTimeout_Description": "一个时间段，控制在取消服务器端查询之前允许该查询运行的时间。默认值为 10 分钟。",
  "Mashup_Document": "导入文档的内容。",
  "Text_Compare_Example2": "使用 <code>TextComparer.IgnoreCase</code> 比较器函数比较文本 <code>\"aB\"</code> 和 <code>\"ab\"</code>。(结果显示 <code>\"aB\"</code> 等于 <code>\"ab\"</code>)。",
  "Text_Compare_Example1": "比较文本 <code>\"aB\"</code> 与 <code>\"ab\"</code>。(结果显示 <code>\"aB\"</code> 小于 <code>\"ab\"</code>)",
  "Logical_FromText_Example1": "从文本字符串 \"true\" 创建逻辑值。",
  "Logical_FromText_Example2": "从文本字符串 \"a\" 创建逻辑值。",
  "Table_TransformColumnNames_Example1": "从列名中删除 <code>#(tab)</code> 字符",
  "Table_TransformColumnNames_Example2": "转换列名以生成不区分大小写的名称(长度为 6)。",
  "Geography_FromWellKnownText": "将 Well-Known Text (WKT)格式的表示地理值的文本转换为结构化记录。",
  "BufferMode_Delayed": "将立即计算该值的类型，但在需要数据之前不会缓冲其内容，需要数据时将立即缓冲整个值。",
  "Text_AfterDelimiter_Example3": "获取 \"111-222-333\" 倒数第二个连字符后的部分。",
  "Text_AfterDelimiter_Example2": "获取 \"111-222-333\" 第二个连字符后的部分。",
  "Text_AfterDelimiter_Example1": "获取 \"111-222-333\" (第一个)连字符后的部分。",
  "Expression_Evaluate": "返回 M 表达式的计算结果。",
  "Number_Epsilon": "表示浮点数可容纳的最小正数的常量值。",
  "Variable_Value": "此函数仅供内部使用。",
  "Logical_ToText_Description": "从逻辑值 {0}(<code>true</code>或 <code>false</code>)创建文本值。如果 {0} 不是逻辑值，将引发异常。",
  "Table_RemoveColumns_Description": "从提供的 {0} 中删除指定的 {1}。\r\n    如果指定列不存在，则会引发错误，除非可选参数 {2} 指定备用行为(例如，<code>MissingField.UseNull</code> 或 <code>MissingField.Ignore</code>)。",
  "Salesforce_Reports": "返回来自 Salesforce 帐户的报告。 ",
  "Text_Combine_Example1": "组合文本值 \"Seattle\" 和 \"WA\"。",
  "Text_Combine_Example3": "组合值 \"Seattle\"、<code>null</code> 和 \"WA\"，用逗号和空格分隔。(请注意，忽略了<code>null</code>。)",
  "Text_Combine_Example2": "组合文本值 \"Seattle\" 和 \"WA\"，以逗号和空格分隔。",
  "Text_Format_Example2": "根据美国英语区域性设置记录中的不同数据类型的格式。",
  "Text_Format_Example1": "设置数字列表格式。",
  "BinaryFormat_Length": "返回一个二进制格式，它列出可读取的数据量。",
  "Option_ConcurrentRequests_FuzzyMatch_Description": "一个介于 1 至 8 之间的数字，用于指定模糊匹配要使用的并行线程数。默认值为 1。",
  "Date_IsInPreviousNWeeks_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一周数中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 周数。</li>\r\n      </ul>",
  "TableAction_Tee": "创建一个操作，该操作在读取表中数据时同时执行多个操作。",
  "List_PositionOf_Description": "返回值 {1} 在列表 {0} 中出现时的偏移量。如果值未出现，则返回 -1。\r\n    可以指定可选的出现次数参数 {2}。\r\n<ul>\r\n   <li>{2}: 要报告的最大出现次数。</li>\r\n</ul>",
  "Date_IsInNextNDays_Example1": "确定当前系统时间之后的日期是否在接下来的两天中。",
  "Salesforce_Data": "返回来自 Salesforce 帐户的对象。 ",
  "Type_TableRow_Description": "返回指定表类型的行类型。结果将始终为记录类型。",
  "List_Random_Example1": "创建 3 个随机数的列表。",
  "List_Random_Example2": "创建 3 个随机数的列表，指定种子值。",
  "List_Intersect_Example1": "查找列表 {1..5}、{2..6}、{3..7} 的交集。",
  "Table_ToList_Example1": "使用逗号合并每行文本。",
  "Table_Contains_Description": "指示指定的记录 {1} 是否显示为 {0} 中的一行。\r\n    可以指定一个可选参数 {2}，以控制表各行之间的比较。",
  "List_Histogram_Example3": "使用 4 个 Bucket、开始值为 2、结束值为 9，从列表 {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} 创建直方图。",
  "List_Histogram_Example2": "使用 3 个 Bucket 从列表 {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} 创建直方图。",
  "List_Histogram_Example1": "从列表 {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} 创建直方图。",
  "Number_Atan2_Description": "返回两个数 {0} 和 {1} 相除的反正切。除法被构造为 {0}/{1}。",
  "Number_E": "表示 e 的常量值。",
  "Date_DayOfYear_Example1": "2011 年 3 月 1 日，一年中的某一天。",
  "Int32_From": "从给定的值创建 32 位整数。",
  "Int32_Type": "表示 32 位有符号整数的类型。",
  "List_Min_Description": "返回列表 {0} 中的最小项；如果列表为空，则返回可选的默认值 {1}。\r\n    可以指定可选的 comparisonCriteria 值 {2} 来确定如何在列表中比较项。如果此参数为 null，将使用默认比较器。",
  "List_Distinct_Example1": "从列表 {1, 1, 2, 3, 3, 3} 中删除重复的项。",
  "Option_TypedMeasureColumns_Caption": "使用键入的度量值列",
  "Splitter_SplitTextByCharacterTransition": "返回一个函数，它根据从一种类型的字符到另一种类型字符的转换将文本拆分为一列文本。{0} 和 {1} 参数可以是一列字符，也可以是采用一个字符并返回 true/false 的一个函数。",
  "Table_SplitAt_Description": "返回包含两个表的列表: 包含 {0} 的前 N 行(由 {1} 指定)的表和包含 {0} 的其余行的另一个表。\r\n\r\n 如果结果列表的表恰好枚举一次，且该函数将按顺序仅枚举 {0} 一次。",
  "ValueAction_NativeStatement": "创建一个操作以对目标执行语句。",
  "Table_ToRows_Description": "从表 {0} 中创建嵌套表的列表。 每个列表项都是一个包含行值的内部列表。",
  "List_DateTimes_Example1": "从新年前 5 分钟(#datetime(2011, 12, 31, 23, 55, 0))开始创建 10 个值的列表，以 1 分钟为增量(#duration(0, 0, 1, 0))。",
  "Graph_Nodes_Description": "此函数仅供内部使用。",
  "Time_Minute_Example1": "查找 #datetime(2011, 12, 31, 9, 15, 36) 中的分钟。",
  "Number_From_Description": "从给定的 {0} 返回 <code>number</code> 值。还可提供可选的 {1} (例如 \"en-US\")。\r\n如果给定的 {0} 是 <code>null</code>，<code>Number.From</code> 将返回 <code>null</code>。如果给定的 {0} 是 <code>number</code>，则返回 {0}。以下类型的值可以转换为 <code>number</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 文本表示形式的 <code>number</code> 值。处理通用文本格式(\"15\", \"3,423.10\", \"5.0E-10\")。有关详细信息，请参阅 <code>Number.FromText</code>。</li>\r\n        <li><code>logical</code>: 1 表示 <code>true</code>，0 表示 <code>false</code>。</li>\r\n        <li><code>datetime</code>: 一个包含等效的 OLE 自动化日期的双精度浮点数。</li>\r\n        <li><code>datetimezone</code>: 一个包含与 {0} 的当地日期和时间等效的 OLE 自动化日期的双精度浮点数。</li>\r\n        <li><code>date</code>: 一个包含等效的 OLE 自动化日期的双精度浮点数。</li>\r\n        <li><code>time</code>: 用天的小数形式表示。</li>\r\n        <li><code>duration</code>: 用整数天和天的小数形式表示。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "Type_OpenRecord_Example1": "创建 <code>type [ A = number]</code> 的打开版本。",
  "List_TransformMany": "返回一个列表，其元素是使用指定的函数从输入列表转换而来。",
  "Time_ToText_Description": "返回 {0} 的文本表示形式。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。{2} 仅用于旧版工作流(见下文)。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的 <code>text</code> 值。要了解更多详细信息，请访问 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致使用 <code>Culture</code> 定义的默认值设置日期格式。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"tt\"</code> 是 <code>\"AM\" 或 \"PM\"</code>，而在 <code>\"ar-EG\"</code> 中，<code>\"tt\"</code> 是 <code>\"ص\" 或 \"م\"</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 和 {2} 也可以是文本值。这与 {1}<code> = [Format = {1}, Culture = {2}]</code> 时的行为相同。",
  "List_Percentile_Description": "返回 {0} 列表的一个或多个示例百分位数。如果值 {1} 是一个介于 0.0 至 1.0 之间的数字，则将其视为百分位，且结果将是\r\n    与该概率对应的一个值。如果值 {1} 是包含值介于 0.0 至 1.0 之间的数字的列表，则结果将是与输入概率对应的\r\n    百分位数的列表。高级用户可使用 {2} 中的 PercentileMode 选项来选择更具体的内插方法，但在大多数情况下不建议使用。\r\n    预定义符号 <code>PercentileMode.ExcelInc</code> 和 <code>PercentileMode.ExcelExc</code> 与 Excel 函数 <code>PERCENTILE.INC</code> 和 <code>PERCENTILE.EXC</code> 使用的\r\n    内插方法匹配。默认行为与 <code>PercentileMode.ExcelInc</code> 匹配。符号\r\n    <code>PercentileMode.SqlCont</code> 和 <code>PercentileMode.SqlDisc</code> 分别与 <code>PERCENTILE_CONT</code> 和 <code>PERCENTILE_DISC</code> 的\r\n     SQL Server 行为匹配。\r\n  ",
  "Table_TransformRows": "使用指定的转换函数转换表的行。",
  "Table_AddIndexColumn_Example2": "从值 10 开始、按 5 递增将名为 \"index\" 的索引列添加到表。",
  "Table_AddIndexColumn_Example1": "将名为 \"Index\" 的索引列添加到表。",
  "Date_DayOfWeekName_Description": "返回所提供的 {0} 的星期几名称。还可提供可选的 {1} (例如 \"en-US\")。",
  "DataSource_TestConnection_Description": "如果可以建立到 {0} 的数据源的连接，则返回 true；否则，返回错误。\r\n如果 {0} 是直接数据源函数调用，则不会运行或要求具有用户本机查询权限。\r\n一般而言，通过读取第一个值可以查看表、记录或二进制值的连接。",
  "List_Durations": "给定初始值、计数和增量 duration 值来生成 duration 值的列表。",
  "Function_ScalarVector_Description": "<p>返回类型为 {0} 的标量函数，该函数使用单行参数调用 {1} 并返回其单个输出。此外，对每行输入表(例如，在 Table.AddColumn 中)重复应用标量函数时，将对所有输入应用 {1} 一次。</p>\r\n<p>将向 {1} 传递一个表，该表的列匹配 {0} 的参数的名称和位置。此表的每行均包含对标量函数的单个调用的参数，其中列对应于 {0} 的参数</p>\r\n<p>{1} 必须返回一个与输入表长度相同的列表，其中每个位置的项必须与在对同一位置的输入行上的标量函数进行评估的结果相同。</p>\r\n<p>输入表应流式传入，因此，{1} 应在输入传入时流式传出其输出，一次仅处理一个输入区块。尤其要注意，{1} 枚举其输入表的次数不能超过一次。</p>",
  "Value_NullableEquals_Description": "如果任一参数“{0}”或“{1}”为 Null，则返回 Null，否则等同于 Value.Equals。",
  "DateTime_From_Description": "从给定的 {0} 返回 <code>datetime</code> 值。还可提供可选的 {1} (例如 \"en-US\")。\r\n如果给定的 {0} 是 <code>null</code>，<code>DateTime.From</code> 将返回 <code>null</code>。如果给定的 {0} 是 <code>datetime</code>，则返回 {0}。以下类型的值可以转换为 <code>datetime</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 文本表示形式的 <code>datetime</code> 值。有关详细信息，请参阅 <code>DateTime.FromText</code>。</li>\r\n        <li><code>date</code>: 一个 <code>datetime</code>，它以 {0} 作为日期组件以及<code>午夜 12:00:00</code> 作为时间组件。</li>\r\n        <li><code>datetimezone</code>: 等效于 {0} 的本地 <code>datetime</code>。</li>\r\n        <li><code>time</code>: <code>datetime</code>，它具有作为日期组件的 <code>0</code> 的 OLE 自动化日期的等效日期以及作为时间组件的 {0}。</li>\r\n        <li><code>number</code>: 一个 <code>datetime</code>，它等效于由 {0} 表示的 OLE 自动化日期。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "TraceLevel_Error": "指定错误跟踪级别。",
  "Type_NonNullable_Example1": "返回 <code>type nullable number</code> 的非可空类型。",
  "LogLevel_Type": "指定跟踪级别。",
  "Table_SelectRowsWithErrors_Example1": "选择其行中包含错误的客户的名称。",
  "Time_EndOfHour_Description": "返回 {0} 表示的小时结束值，包括小数秒。保留时区信息。\r\n      <ul>\r\n        <li>{0}: 从中计算小时结束值的<code>time</code>、<code>datetime</code>或<code>datetimezone</code>值。</li>\r\n      </ul>",
  "Text_BeforeDelimiter_Description": "返回 {0} 中位于指定的 {1} 之前的部分。\r\n    可选数字 {2} 指示要考虑哪一次出现的 {1}。\r\n    可选列表 {2} 指示要考虑哪一次出现的 {1}，以及应从输入的开头还是结尾编制索引。",
  "Table_FirstN_Example2": "查找表中 [a] > 0 的前几行。",
  "Table_FirstN_Example1": "查找表的前两行。",
  "Date_IsInNextNDays_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一天数中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 天数。</li>\r\n      </ul>",
  "Precision_Double": "内置算术运算符的可选参数，以指定双精度。",
  "SapHanaDistribution_Statement": "SAP HANA 的 \"Statement\" 分发选项。",
  "Access_Database": "返回 Access 数据库的结构表示形式。",
  "List_Alternate_Description": "返回由列表中所有奇数编号的偏移量元素组成的列表。根据参数在从列表 {0} 取值和跳过其值间切换。\r\n    <ul>\r\n    <li>{1}: 指定每次跳过的值数。</li>\r\n    <li>{2}: 可选的重复间隔，指示在两个跳过的值之间添加了多少个值。</li>\r\n    <li>{3}: 一个可选偏移量参数，指示在初始偏移量处开始跳过值。</li>\r\n    </ul>",
  "Record_HasFields_Description": "通过返回逻辑值(true 或 false)，指示记录 {0} 是否具有 {1} 中指定的字段。\r\n    可以使用列表指定多个字段值。",
  "Table_SelectColumns": "返回只含有指定列的表。",
  "Binary_InferContentType": "读取二进制流，并尝试确定该流的内容类型和格式信息。",
  "Guid_From": "返回给定值的 guid 值。",
  "Guid_Type": "表示 Guid 值的类型。",
  "Number_Tanh_Description": "返回 {0} 的双曲正切。",
  "Action_DoNothing_Description": "执行时不执行任何操作并返回 <code>null</code> 作为其结果的操作。",
  "Date_EndOfQuarter_Description": "返回包含 {0} 的季度结束值。保留时区信息。\r\n <ul>\r\n <li>{0}: 从中计算季度结束值的<code>date</code>、<code>datetime</code>或 <code>datetimezone</code>值</li>\r\n      </ul>",
  "Language_Compares": "如果比较为 true，则 <、>、<= 和 >= 返回 true。",
  "Date_AddQuarters_Description": "通过将 {1} 个季度添加到 <code>datetime</code> 值 {0}，返回 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 结果。\r\n      <ul>\r\n      <li>{0}: 季度数要添加到的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 要添加的季度数。</li>\r\n      </ul>",
  "Action_Sequence_Example1": "创建一个操作，该操作在执行时会执行第一个操作(返回 <code>\"hello\"</code>)，将其结果与字符串 <code>\"world!\"</code> 合并以创建第二个操作，然后执行第二个操作以生成结果 <code>\"hello world!\"</code>。",
  "BinaryEncoding_Base64": "在要求 base-64 编码时要用作编码类型的常量。",
  "Text_PositionOf_Example1": "获取 \"World\" 在文本 \"Hello, World! Hello, World!\" 中第一次出现的位置。",
  "Text_PositionOf_Example2": "获取 \"World\" 在 \"Hello, World! Hello, World!\" 中最后一次出现的位置。",
  "Number_Random_Description": "返回介于 0 到 1 之间的随机数。",
  "Type_FunctionReturn_Description": "返回由函数 {0} 返回的类型。",
  "Duration_TotalMinutes": "返回此持续时间跨越的总分钟数。",
  "DateTimeZone_FromFileTime": "从 64 位长度的数字创建 datetimezone。",
  "Number_Abs_Description": "返回 {0} 的绝对值。如果 {0} 为 null，则 <code>Number.Abs</code> 返回 null。\r\n    <ul>\r\n        <li>{0}: 要计算其绝对值的 <code>number</code>。</li>\r\n      </ul>",
  "Table_View_Example1": "创建一个基本视图，该视图不需要访问行便可以确定类型或行计数。",
  "Time_StartOfHour_Description": "返回 {0} 表示的小时开始值。\r\n    {0} 必须是 <code>time</code>、<code>datetime</code>或<code>datetimezone</code>值。",
  "List_Distinct_Description": "返回包含列表 {0} 中的所有值且删除了重复项的列表。如果列表为空，则结果为空列表。",
  "Table_ColumnCount": "返回表中的列数。",
  "Http_Get": "返回指定的 Web 资源的表示形式。",
  "Record_RemoveFields_Example2": "从记录中删除字段 \"Price\" 和 \"Item\"。",
  "Record_RemoveFields_Example1": "从记录中删除字段 \"Price\"。",
  "Duration_TotalMinutes_Example1": "查找持续时间值跨越的总分钟数。",
  "Table_DemoteHeaders_Description": "将列标题(也即列名)降级到第一行值。默认列名为 \"Column1\"、\"Column2\" 等。",
  "Text_From_Description": "返回 {0} 的文本表示形式。{0} 可以是 <code>number</code>、<code>date</code>、<code>time</code>、<code>datetime</code>、<code>datetimezone</code>、<code>logical</code>、<code>duration</code> 或 <code>binary</code> 值。\r\n    如果给定值为 Null，<code>Text.From</code> 将返回 Null。还可提供可选的 {1} (例如 \"en-US\")。",
  "Web_Contents_Example3": "连接到接受身份验证密钥作为其查询字符串一部分的安全 URL。密钥并非通过在 M 中对密钥进行硬编码来提供(这回带来安全风险)，\r\n    而是通过在 M 中指定密钥名称(而不是其值)、选择 Web API 身份验证，并输入密钥值作为 Web API 凭据的一部分来实现。\r\n    以这种方式使用时，以下示例将生成对 <code>\"https://contoso.com/api/customers/get?api_key=******\"</code> 的请求。",
  "Web_Contents_Example2": "对 URL 执行 POST，以传递二进制 JSON 有效负载并将响应分析为 JSON。",
  "Web_Contents_Example1": "使用 RelativePath 和“查询”选项检索 <code>\"https://bing.com/search?q=Power+Query\"</code> 的内容。这些选项可用于动态查询静态基 URL。",
  "TraceLevel_Information_Description": "返回信息跟踪级别值 4。",
  "Table_ColumnNames": "返回列名作为列表。",
  "Diagnostics_Trace": "写入跟踪条目(如果已启用跟踪的话)并返回值。",
  "TextEquater_IgnoreCase": "测试两个文本值是否相等，这两个文本值对相同字符不区分大小写版本。",
  "Date_IsInCurrentQuarter_Example1": "确定当前系统时间是否处于当前季度。",
  "Number_Sin_Description": "返回 {0} 的正弦。",
  "Date_IsInNextDay_Example1": "确定当前系统时间之后的那一天是否处于下一天。",
  "SapHanaRangeOperator_GreaterThan": "SAP HANA 输入参数的“大于”范围运算符。",
  "BinaryFormat_List_Example3": "读取字节，直到字节值大于或等于 2。",
  "BinaryFormat_List_Example2": "读取两个字节。",
  "BinaryFormat_List_Example1": "读取字节，直到到达数据末尾。",
  "Option_ViewMode_SharePoint_Description": "可选。此选项仅对实现 2.0 有效。接受的值为“全部”和“默认”。如果未指定任何值，则该值设置为“全部”。指定“全部”后，视图将包括用户创建的所有列和系统定义的列。指定“默认”时，视图将与用户在其设置中设置为“默认”的任何视图中在线查看列表时所看到的内容相匹配。。如果用户编辑其默认视图以添加或移除用户创建的列或系统定义的列，或者通过创建新视图并将其设置为默认视图，则这些更改将通过连接器传播。",
  "Occurrence_Required": "要求该项在输入中出现一次。",
  "List_Zip_Example1": "压缩两个简单列表 {1, 2} 和 {3, 4}。",
  "List_Zip_Example2": "压缩两个具有不同长度 {1, 2} 和 {3} 的简单列表。",
  "BinaryFormat_Record_Example1": "读取一个记录，该记录包含一个 16 位整数和一个 32 位整数。",
  "Text_Reverse_Example1": "反向文本 \"123\"。",
  "Table_AlternateRows_Description": "保留初始偏移量，然后交替选取和跳过下列行。\r\n    <ul>\r\n       <li>{0}: 输入表。</li>\r\n       <li>{1}: 在开始迭代之前要保留的行数。</li>\r\n       <li>{2}: 每次迭代中要删除的行数。</li>\r\n       <li>{3}: 每次迭代中要保留的行数。</li>\r\n    </ul>\r\n    ",
  "Table_ApproximateRowCount_Description": "返回 {0} 中的近似行数，或者如果数据源不支持近似值，则返回错误。",
  "Date_Month_Description": "返回提供的 <code>datetime</code> 值 {0} 的月份部分。",
  "Duration_From_Description": "从给定的 {0} 返回 <code>duration</code> 值。如果给定的 {0} 是 <code>null</code>，<code>Duration.From</code> 将返回 <code>null</code>。 如果给定的 {0} 是 <code>duration</code>，则返回 {0}。以下类型的值可以转换为 <code>duration</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 来自文本形式的占用时间格式(d.h:m:s)的 <code>duration</code> 值。有关详细信息，请参阅 <code>Duration.FromText</code>。</li>\r\n        <li><code>number</code>: 与由 {0} 表示的整数天数和不完整天数等效的 <code>duration</code>。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "Geometry_ToWellKnownText_Description": "将结构化几何点值转换为开放地理空间信息联盟(OGC)定义的 Well-Known Text (WKT)表示形式，该形式也是 SQL Server 等很多数据库使用的序列化格式。",
  "Double_From": "从给定的值创建 Double。",
  "Text_Contains": "返回文本是否包含子字符串。",
  "Double_Type": "表示双精度浮点数的类型。",
  "AzureStorage_Blobs_Description": "从 Azure 存储保管库返回包含帐户 URL {0} 处每个容器的行的导航表。每行都包含与容器 blob 的链接。可以指定 {1} 来控制以下选项:\r\n    {1:type}",
  "PercentileMode_Type": "指定百分位数模式类型。",
  "Binary_FromList": "将一组数值转换为一个二进制值。",
  "Binary_FromText": "将来自文本格式的数据解码为二进制值。",
  "Cdpa_Database": "提供对 CDPA 数据库的访问权限。",
  "OData_Feed": "返回 OData 服务提供的 OData 数据源表。",
  "List_Index_Description": "给定按 {1} 函数选择的字段，为查找优化 {0}。",
  "Record_FromTable_Description": "从包含字段名称和值名称 <code>{{[Name = name, Value = value]}}</code> 的记录 {0} 的表返回记录。如果字段名称不是唯一的，将引发异常。",
  "Table_ReverseRows": "返回一个表，其中的行以相反顺序排序。",
  "Number_IsNaN_Example1": "检查 0 除以 0 是否为 NaN。",
  "Number_IsNaN_Example2": "检查 1 除以 0 是否为 NaN。",
  "Type_IsOpenRecord_Description": "返回 <code>logical</code> 表明记录 {0} 是否打开。",
  "Option_Culture_AS_Description": "指定数据区域性的区域性名称。这对应于“区域设置标识符”连接字符串属性。",
  "Table_PromoteHeaders_Description": "将第一行值升级为新的列标题(即列名)。默认情况下，仅将文本或数值升级为标题。有效选项:\r\n    <div>\r\n      <code>PromoteAllScalars</code> : 如果设置为 <code>true</code>，则使用 <code>Culture</code> (如果已指定，或当前文档区域设置)将第一行中的所有标量值升级为标题。\r\n    对于无法转换为文本的值，将使用默认列名。\r\n    </div>\r\n    <div>\r\n    <code>Culture</code> : 区域性名称，指定数据的区域性。\r\n    </div>\r\n",
  "Text_NewGuid": "返回新的、随机的全局唯一标识符(GUID)。",
  "ExtraValues_Ignore": "如果拆分器功能返回的列比表所需的列多，应忽略它们。",
  "Table_PositionOf": "返回行在表中的一个或多个位置。",
  "OleDb_DataSource_Description": "返回 SQL 表的表并从连接字符串 {0} 指定的 OLE DB 数据源进行查看。{0} 可以是文本或属性值对的记录。属性值可以是文本或数字。可以提供一个可选的记录参数 {1} 来指定其他属性。记录可以包含以下字段:\r\n    {1:type}\r\n    例如，将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。",
  "Expression_Identifier_Example1": "获取标识符的 M 源代码表示形式。",
  "Expression_Identifier_Example2": "获取包含空格的标识符的 M 源代码表示形式。",
  "Date_IsInPreviousMonth_Example1": "确定当前系统时间之前的那个月是否处于上个月。",
  "Text_Clean": "返回所有控制字符均已删除的文本值。",
  "Number_Combinations_Example1": "当每个组合为 3 个一组时从总共 5 项中计算组合数。",
  "Table_First_Example1": "查找表的第一行。",
  "Table_First_Example2": "查找表 <code>({})</code> 的第一行，或如果为空，则返回 [a = 0, b = 0]。",
  "Table_Distinct": "从表中删除重复的行。",
  "Option_UnsafeTypeConversions_Caption": "尝试折叠不安全的类型转换",
  "Date_FromText": "根据本地、通用和自定义日期格式创建日期。",
  "Text_Lower": "将所有字符转换为小写。",
  "Text_InferNumberType_Description": "推断 {0} 的粒度值类型(Int64.Type、Double.Type 等)。如果 {0} 不是数值，则会引发错误。还可提供可选的 {1}(例如“en-US”)。",
  "Error_Record": "从为原因、消息和详细信息提供的文本值返回错误记录。",
  "Duration_FromText_Description": "从指定文本 {0} 返回持续时间值。此函数可分析以下格式:\r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (包括所有范围)<br>\r\n        ddd: 天数。<br>\r\n        hh: 小时数，介于 0 到 23 之间。<br>\r\n        mm: 分钟数，介于 0 到 59 之间。<br>\r\n        ss: 秒数，介于 0 到 59 之间。<br>\r\n        ff: 秒的小数部分，介于 0 到 9999999 之间。",
  "IdentityProvider_Default": "当前主机的默认标识提供程序。",
  "Text_Range": "返回在偏移量中找到的子字符串。",
  "Text_Start": "返回文本的开头。",
  "Text_Split": "基于指定的分隔符将文本拆分为文本值列表。",
  "SapHanaRangeOperator_LessThanOrEquals": "SAP HANA 输入参数的“小于或等于”范围运算符。",
  "Text_Upper": "将所有字符转换为大写。",
  "Table_Last_Example1": "查找表的最后一行。",
  "Table_Last_Example2": "查找表 <code>({})</code> 的最后一行，或如果为空，则返回 [a = 0, b = 0]。",
  "DateTime_FixedLocalNow": "返回采用本地时区的当前日期和时间。该值是固定的，因此将不会随着连续调用而更改。",
  "Day_Friday_Description": "返回 5，该数值表示星期五。",
  "AccessControlEntry_ConditionToIdentities": "返回条件将接受的标识的列表。",
  "Date_IsInCurrentQuarter": "指示在当前季度中此日期是否出现，它由系统上的当前日期和时间确定。",
  "Table_Group": "对表中具有相同键的行进行分组。",
  "Character_ToNumber_Example1": "假定提供字符 \"#(tab)\" 9，则查找数值。",
  "Table_First": "返回第一行或指定的默认值。",
  "Extension_Contents": "以二进制形式返回库 PQX 文件中指定文件的内容。",
  "Cube_AddAndExpandDimensionColumn": "将指定维度表合并到多维数据集的筛选上下文中，并通过展开指定维度属性集来更改筛选上下文的维度粒度。",
  "Table_LastN": "返回指定数量的最后几行。",
  "Time_FromText_Example3": "将 <code>\"10\"</code> 转换为 Time 值。",
  "Time_FromText_Example2": "将 <code>\"1012\"</code> 转换为 Time 值。",
  "Time_FromText_Example1": "将 <code>\"10:12:31am\"</code> 转换为时间值。",
  "Int64_From": "根据给定值创建 64 位整数。",
  "Int64_Type": "表示 64 位有符号整数的类型。",
  "List_InsertRange_Example2": "在索引 0 处将带嵌套列表的列表({1, {1.1, 1.2}})插入目标列表({2, 3, 4})。",
  "List_InsertRange_Example1": "在索引 2 处将列表({3, 4})插入目标列表({1, 2, 5})。",
  "Text_Clean_Example1": "从文本值中删除换行和其他控制字符。",
  "DateTime_IsInNextMinute_Example1": "确定当前系统时间后的分钟是否处于接下来的一分钟内。",
  "List_Repeat_Description": "返回作为原始列表 {0} 的 {1}次重复的列表。",
  "Parquet_Document_Description": "此功能不可用，因为它需要使用 .NET 4.5。",
  "Table_Pivot": "给定一对表示属性-值对的列，将属性列中的数据旋转为列标题。",
  "_Pound_duration_Description": "从表示天、小时、分钟和(小数)秒的数值创建持续时间值。",
  "Table_Split": "使用指定页面大小将指定表拆分为一系列表。",
  "Table_Range": "以指定的偏移量开始返回行。",
  "Date_DayOfWeekName_Example1": "获取星期几。",
  "Date_IsInNextQuarter_Example1": "确定当前系统时间之后的那一季度是否处于下一季度。",
  "Logical_Type": "表示所有逻辑值的类型。",
  "Logical_From": "从给定的值创建逻辑。",
  "DateTime_IsInCurrentMinute_Description": "指示给定的日期时间值 {0} 是否按系统当前日期和时间所确定的那样处于当前分钟内。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Number_Power_Example1": "计算 5 的 3 次幂(5 的立方)的值。",
  "Percentage_From": "返回给定值的百分比值。",
  "Percentage_Type": "表示百分比值的类型。",
  "List_Histogram_Description": "将列表 {0} 中值的分布计算为 Bucket 的表。这些 Bucket 包括 Start、Center 和 End 字段(采用数据类型的单位)以及 Bucket 中项的计数(一个数字)。\r\n    可选参数包括:\r\n    <ul>\r\n    <li>{1}: 所需的 Bucket 数。如果为 null，函数默认为列表中项数的平方根，向上舍入到下一个整数。</li>\r\n    <li>{2}: 整个范围的开始值和结束值，编码为列表。</li>\r\n    </ul>",
  "List_Select_Description": "从列表 {0} 返回匹配选择条件 {1} 的值列表。",
  "Duration_Days_Example1": "提取两个日期之间的天数。",
  "Compression_Zstandard": "压缩数据采用 \"Zstandard\" 格式。",
  "List_Alternate": "返回由列表中所有奇数编号的偏移量元素组成的列表。",
  "Date_EndOfMonth_Description": "返回包含 {0} 的月结束值。\r\n <ul>\r\n <li>{0}: 从中计算月结束值的<code>date</code>、<code>datetime</code>或 <code>datetimezone</code>值</li>\r\n      </ul>",
  "Duration_TotalHours_Description": "返回 {0} 跨越的总小时数。",
  "Time_StartOfHour": "返回小时开始值。",
  "Value_Add_Description": "返回 {0} 和 {1} 的总和。可以指定一个可选 {2} 参数，默认情况下使用 <code>Precision.Double</code>。",
  "ValueAction_Replace": "创建一个操作，该操作将值的内容替换为指定值。",
  "Compression_Snappy": "压缩数据采用 \"Snappy\" 格式。",
  "Option_TreatTinyAsBoolean_Description": "一个逻辑值(true/false)，用于确定是否将服务器上的 tinyint 列强制设置为逻辑值。默认值为 true。",
  "Duration_TotalHours": "返回此持续时间跨越的总小时数。",
  "Number_PI_Description": "表示 3.1415926535897932 的常量，pi 的值最多取 16 位小数。",
  "Option_IgnoreSpace_FuzzyMatch_Caption": "允许组合文本部分来查找匹配项。",
  "List_Average": "返回值的平均值。处理 number、date、datetime、datetimezone 和 duration 值。",
  "Excel_Workbook": "返回 Excel 工作簿的内容。",
  "Number_RandomBetween_Description": "返回 {0} 和 {1} 之间的一个随机数。",
  "List_Transform_Description": "通过将转换函数 {1} 应用到列表 {0} 来返回值的新列表。",
  "Text_Replace_Description": "返回将文本值 {0} 中所有出现的文本值 {1} 替换为文本值 {2} 的结果。此函数区分大小写。",
  "RowExpression_Row_Description": "表示行表达式中行的抽象语法树(AST)节点。",
  "List_Transform_Example1": "将 1 与列表 {1, 2} 中的每个值相加。",
  "List_RemoveNulls_Description": "在 {0} 中删除所有出现的 \"null\" 值。如果列表中没有 \"null\" 值，则返回原始列表。",
  "Number_IsNaN_Description": "指示值是否为 NaN (不是数字)。如果 {0} 与 <code>Number.IsNaN</code> 等效，则返回 <code>true</code>；否则返回 <code>false</code>。",
  "DateTime_IsInPreviousNMinutes_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一分钟数中出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 分钟数。</li>\r\n      </ul>",
  "Action_Try": "创建一个操作，该操作执行指定操作，从而捕获并返回在其执行过程中发生的任何错误。",
  "Character_FromNumber_Description": "返回与该数值等效的字符。",
  "Action_ViewFunction_Description": "<p>基于可在由<code>Action.View</code>创建的视图中处理的 {0} 创建视图函数。</p>\r\n<p><code>Action.View</code> 的 <code>OnInvoke</code>处理程序可用于定义视图函数的处理程序。</p>\r\n<p>与内置操作的处理程序一样，如果未指定<code>OnInvoke</code>处理程序，或者如果处理程序未处理视图函数，或者如果处理程序引发错误，则 {0} 会应用于视图顶部。</p>\r\n<p>请参阅已发布的 Power Query 自定义连接器文档，从而了解有关 <code>Action.View</code>和自定义视图函数的更完整的说明。</p>",
  "Type_FunctionRequiredParameters_Example1": "找到函数 <code>(x as number, optional y as text)</code> 所需参数的数量。",
  "Exchange_Contents_Description": "返回 Microsoft Exchange 帐户 {0} 中的内容表。如果未指定 {0}，则将使用凭据的默认帐户。",
  "Value_FromText": "从文本表示形式创建强类型的值。",
  "Table_FromRecords_Example2": "使用键入的列通过记录创建表并选择数字列。",
  "Table_FromRecords_Example1": "使用记录字段名称作为列名称，通过记录创建表。",
  "Date_IsInPreviousWeek_Example1": "确定当前系统时间之前的那个星期是否处于上个星期。",
  "Table_ColumnsOfType": "返回带有与指定类型相匹配的列名的列表。",
  "Date_ToText_Example3": "在回历中查找与公历中的 2000 年 1 月 1 日相对应的年份。",
  "Date_ToText_Example2": "使用自定义格式和德语区域性进行转换。",
  "Date_ToText_Example1": "将 <code>#date(2010, 12, 31)</code> 转换为<code>文本</code>值。<i>结果输出可能因当前区域性而异。</i>",
  "Binary_View": "使用用户定义的处理程序创建或扩展二进制，从而执行查询和操作操作。",
  "Binary_Type": "表示所有二进制值的类型。",
  "Binary_From": "从给定的值创建一个二进制值",
  "Duration_ToRecord_Description": "返回包含 duration 值 {0} 的各个部分的记录。\r\n  <ul>\r\n        <li>{0}: 从中创建记录的 <code>duration</code>。</li>\r\n      </ul>",
  "_Pound_datetime_Description": "从年、月、日、小时、分钟和(小数)秒创建 datetime 值。如果以下内容不为 true 将引发错误:\r\n    <ul>\r\n      <li> 1 ≤ 年 ≤ 9999 </li>\r\n     <li> 1 ≤ 月 ≤ 12 </li>\r\n      <li> 1 ≤ 日 ≤ 31 </li>\r\n      <li> 0 ≤ 小时 ≤ 23 </li>\r\n      <li> 0 ≤ 分钟 ≤ 59 </li>\r\n      <li> 0 ≤ 秒 < 60 </li>\r\n    </ul>",
  "Function_IsDataSource": "返回是否将一个特定的函数视为数据源。",
  "List_Generate_Example1": "创建一个列表，方法是从 10 开始，重复递减一个，并确保每项大于零。",
  "List_Generate_Example2": "生成包含 x 和 y 的记录的列表，其中 x 是一个值，y 是一个列表。x 应保持小于 10 并表示列表 y 中的项数。在生成列表后，只返回 x 值。",
  "ActiveDirectory_Domains": "返回与指定域或当前计算机的域(如果未指定任何域)处于同一个林中的 Active Directory 域的列表。",
  "Type_FunctionParameters_Description": "返回带有字段值的记录以设置 {0} 的参数名称，其值设置为对应类型。",
  "Table_ReplaceErrorValues_Description": "使用 {1} 列表中的新值替换 {0} 指定列中的错误值。列表的格式为 {{{{column1, value1}}, …}}。每列可能只有一个替换值，为列进行多于一次的指定将导致错误。",
  "Cube_AttributeMemberId_Description": "从成员属性值返回唯一的成员标识符。{0}。对其他值返回 null。 ",
  "Record_AddField_Description": "给定字段 {1} 的名称和值 {2}，将字段添加到记录 {0}。",
  "List_StandardDeviation": "返回基于样本估计的标准偏差。",
  "Table_Product_Example1": "在表 <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 5, b = 6]})</code> 的列 [a] 中计算值的乘积。",
  "Table_Product_Example2": "在表 <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 5, b = 6]})</code> 的列 [a] 和列 [b] 中计算值的乘积。",
  "WebMethod_Put": "指定 HTTP 的 PUT 方法。",
  "WebMethod_Get": "指定 HTTP 的 GET 方法。",
  "Sql_Databases_Description": "返回指定 SQL Server {0} 上的数据库表。可以指定可选的记录参数 {1} 来控制以下选项:\r\n    {1:type}\r\n    例如，将记录参数指定为 [option1 = value1, option2 = value2...]。\r\n    <br>\r\n    不支持将 SQL 查询设置为在服务器上运行。应改用 <code>Sql.Database</code> 来运行 SQL 查询。\r\n    ",
  "Table_LastN_Description": "返回表 {0} 中的最后几行，具体取决于 {1} 的值:\r\n    <ul>\r\n    <li> 如果 {1} 为数字，则将返回从位置(结尾 - {1})开始的多行。</li>\r\n    <li> 如果 {1} 是条件，将以升序位置返回满足此条件的行，直到行不满足条件为止。</li>\r\n</ul>",
  "DateTime_FromText_Description": "根据文本表示形式 {0} 创建 <code>datetime</code> 值。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的<code>文本</code>值。要了解更多详细信息，请转到 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致尽最大努力解析日期。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"MMM\"</code> 是 <code>\"Jan\"、\"Feb\"、\"Mar\" 等</code>，而在 <code>\"ru-RU\"</code> 中，<code>\"MMM\"</code> 是 <code>\"янв\"、\"фев\"、\"мар\" 等</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 也可以是文本值。这与 {1}<code> = [Format = null, Culture = {1}]</code> 时的行为相同。",
  "Function_Invoke": "调用给定的函数",
  "Number_IntegerDivide": "使两个数相除，返回结果的整数部分。",
  "WebAction_Request_Example1": "对必应执行 GET 请求。",
  "SapBusinessWarehouse_Cubes": "返回 SAP Business Warehouse 系统中按 InfoArea 分组的 InfoCube 和查询。",
  "BinaryFormat_SignedInteger32": "读取 32 位带符号整数的二进制格式。",
  "BinaryFormat_SignedInteger64": "读取 64 位带符号整数的二进制格式。",
  "BinaryFormat_SignedInteger16": "读取 16 位带符号整数的二进制格式。",
  "Time_Second_Description": "返回所提供的 <code>time</code>、<code>datetime</code> 或 <code>datetimezone</code> 值 {0} 的秒部分。",
  "DateTimeZone_UtcNow_Example1": "获取采用 UTC 的当前日期和时间。",
  "Record_FieldValues": "返回字段值的列表。",
  "Value_Lineage_Description": "此函数仅供内部使用。",
  "Date_StartOfDay_Description": "返回 {0} 表示的天开始值。\r\n    {0} 必须是 <code>date</code>、<code>datetime</code>或<code>datetimezone</code>值。",
  "Text_Range_Example2": "从文本 \"Hello World Hello\" 中查找从索引 6 开始且涵盖 5 个字符的子字符串。",
  "Text_Range_Example1": "从文本 \"Hello World\" 中查找从索引 6 开始的子字符串。",
  "Table_FillDown_Description": "从指定的 {0} 中返回一个表，其中前一个单元的值传播到指定的 {1} 下值为 Null 的单元。",
  "HdInsight_Files_Description": "返回包含从 Azure 存储库的容器 URL {0} 中找到的每个 Blob 文件行的表。",
  "Text_TrimStart_Example1": "从 \"     a b c d    \" 删除前导空格。",
  "Date_From_Example2": "将 <code>#datetime(1899, 12, 30, 06, 45, 12)</code> 转换为 <code>date</code> 值。",
  "Date_From_Example1": "将 <code>43910</code> 转换为 <code>date</code> 值。",
  "Table_CombineColumns": "使用指定的组合程序函数将指定的列组合为一个新列。",
  "ValueAction_Replace_Description": "<p>创建一个操作，该操作在执行时将 {0} 的内容替换为 {1}。</p>\r\n<p>如果 {0} 不可更新或 {1} 与 {0} 不兼容，则该函数会引发计算错误。</p>\r\n<p>如果操作失败，则该操作会引发执行错误。</p>\r\n<p><b>注意:</b> 如果发生执行错误，则 {0} 可能会保留为部分更新状态。</p>",
  "Type_RecordFields_Description": "返回描述记录 {0} 的字段的记录。在记录 <code>[ Type = type, Optional = logical ]</code> 的格式中，返回的记录类型的每个字段都有对应的名称和值。",
  "Table_RowCount_Description": "返回表 {0} 中的行数。",
  "Number_RandomBetween": "返回两个数之间的一个随机数。",
  "List_Count_Example1": "查看列表 {1, 2, 3} 中的值数。",
  "Binary_InferContentType_Description": "返回包含字段 Content.Type 的记录，它包含推断的 MIME 类型。\r\n    如果推断的内容类型为 text/*，且检测到编码代码页，则同时还返回包含流的编码的字段 Content.Encoding。\r\n    如果推断的内容类型为 text/csv，且格式被分隔，则同时还返回包含潜在分隔符分析的表的字段 Csv.PotentialDelimiter。\r\n    如果推断的内容类型为 text/csv，则格式为固定宽度，且同时还返回包含潜在固定宽度列位置分析的列表的字段 Csv.PotentialPositions。",
  "Duration_From": "从给定的值创建持续时间。",
  "Duration_Days": "返回持续时间的天数部分。",
  "Duration_Type": "表示所有 duration 值的类型",
  "_Pound_datetime": "从年、月、其、小时、分钟和秒创建一个日期时间值。",
  "Option_IgnoreSpace_FuzzyGroup_Description": "一个逻辑(true/false)值，它允许组合文本部分来查找组。例如，如果为 true，则 \"Gra pes\" 与 \"Grapes\" 分组到一起。默认值为 true。",
  "OData_Feed_Example1": "连接到 TripPin OData 服务。",
  "Table_TypeFromList_Description": "通过计算记录的字段名称的联合并从这些名称创建一组列，从 {0} 推断表类型。列的类型通过计算每个记录的对应字段中的值类型的联合来得出。如果该记录不包含字段，则使用 \"null\" 进行计算。\r\n    或者，可以使用 {1} 指定要检查的记录数。默认情况下，将检查列表的所有记录。",
  "Uri_Parts": "返回输入绝对 URI 的组成部分作为记录。",
  "JoinAlgorithm_Dynamic": "检查两个表的初始行和元数据，以自动选择联接算法。",
  "Text_StartsWith_Description": "如果文本值 {0} 以文本值 {1} 开头，则返回 true。\r\n      <ul>\r\n        <li>{0}: <i></i> 要搜索的 <code>text</code> 值</li>\r\n        <li>{1}: <i></i> 一个 <code>text</code> 值，即要在 {1} 中搜索的 substring</li>\r\n        <li>{2}: <i>[可选]</i> 用于控制比较的 <code>Comparer</code>。例如，<code>Comparer.OrdinalIgnoreCase</code> 可用于执行不区分大小写的搜索</li>\r\n      </ul>\r\n      <div>\r\n        {2} 是用于控制比较的 <code>Comparer</code>。比较器可用于提供不区分大小写或区分区域性和区域设置的比较。\r\n      </div>\r\n      <div>\r\n        以下内置比较器以公式语言提供:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: 用于执行确切的序号比较</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: 用于执行不区分大小写的精确的序号比较</li>\r\n        <li> <code>Comparer.FromCulture</code>: 用于执行区分区域性的比较</li>\r\n      </ul>",
  "GroupKind_Local": "本地组由具有相同键值的输入表中的连续行序列组成。",
  "TableAction_DeleteRows_Description": "<p>创建一个操作以删除 {0} 中的行。该操作返回的表包含在操作执行前出现在 {0} 中的已删除的行。</p>\r\n<p>若要删除 {0} 中的行的子集，请在使用 <code>TableAction.DeleteRows</code> 之前先使用 <code>Table.SelectRows</code> 对 {0} 应用筛选器。</p>\r\n<p>如果 {0} 不可更新，该函数将引发计算错误。</p>\r\n<p>如果操作失败，该操作将引发执行错误。</p>\r\n<p><b>注意:</b> 如果发生执行错误，{0} 可能会保留为部分更新状态。</p>",
  "Option_UnsafeTypeConversions_Description": "一个逻辑值(true/false)；如果为 true，则尝试折叠可能会失败并导致整个查询失败的类型转换。不建议用于常规用途。",
  "DateTime_IsInPreviousNSeconds_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一秒数中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 秒数。</li>\r\n      </ul>",
  "Type_ForNullable": "返回一个类型，此类型表示参数类型以及 Null。",
  "Date_Year_Example1": "查找 #datetime(2011, 12, 31, 9, 15, 36) 中的年份。",
  "List_IsDistinct_Description": "返回一个指示列表 {0} 中是否有重复值的逻辑值；如果列表没有重复值，则为 <code>true</code>，否则为 <code>false</code>。",
  "Record_Field_Description": "返回 {0} 中指定 {1} 的值。如果未找到该字段，将引发异常。",
  "Percentage_From_Example1": "获取 <code>\"12.3%\"</code> 的<code>百分比</code>值。",
  "Value_Add": "返回两个值的总和。",
  "OleDb_Query_Description": "返回通过使用 OLE DB 的连接字符串 {0} 运行 {1} 的结果。{0} 可以是文本或属性值对的记录。属性值可以是文本或数字。可提供一个可选的记录参数 {2} 来指定其他属性。记录可以包含以下字段:\r\n    {2:type}",
  "Precision_Decimal": "内置算术运算符的可选参数，以指定小数精度。",
  "List_ContainsAll_Example1": "查看列表 {1, 2, 3, 4, 5} 是否包含 3 和 4。",
  "List_ContainsAll_Example2": "查看列表 {1, 2, 3, 4, 5} 是否包含 5 和 6。",
  "Progress_DataSourceProgress": "此函数仅供内部使用。",
  "Option_ReturnSingleDatabase_Description": "一个逻辑值(true/false)，用于设置是返回所有数据库的所有表(如果为 false)，还是返回指定数据库的表和视图(如果为 true)。默认值为 false。",
  "Extension_InvokeWithCredentials": "在所提供的凭据处理程序的上下文中调用函数。",
  "Splitter_SplitTextByWhitespace": "返回一个函数，它在空白处将文本拆分为文本列表。",
  "Table_FromValue_Description": "使用包含提供的值或值列表 {0} 的列创建表。可选记录参数 {1} 可以指定为控制以下选项:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : 从列表或标量值构造表时使用的列名。</li>\r\n    </ul>\r\n  ",
  "Text_EndsWith_Description": "指示给定的文本 {0} 是否以指定值 {1} 结尾。指示区分大小写。\r\n\r\n      <div>\r\n        {2}是用于控制比较的 <code>Comparer</code>。比较器可用于提供不区分大小写或区分区域性和区域设置的比较。\r\n      </div>\r\n      <div>\r\n        以下内置比较器以公式语言提供:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: 用于执行精确的序号比较</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: 用于执行不区分大小写的精确序号比较</li>\r\n        <li> <code>Comparer.FromCulture</code>: 用于执行区分区域性的比较</li>\r\n      </ul>",
  "List_IsEmpty_Example1": "查看列表 {} 是否为空。",
  "List_IsEmpty_Example2": "查看列表 {1, 2} 是否为空。",
  "Action_ViewError": "创建修改的错误记录，当在视图上(通过 Action.View)定义的处理程序引发该记录时，它不会触发回退。",
  "Duration_ToText": "返回采用 \"d.h:m:s\" 格式的文本。",
  "Date_IsInPreviousDay": "指示此日期是否会在系统当前日期和时间确定的上一天中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。",
  "Compression_LZ4": "压缩数据采用 \"LZ4\" 格式。",
  "Option_ScaleMeasures_SAPBW_Caption": "小数位数度量值",
  "_Pound_time_Description": "从代表小时、分钟和(小数)秒的数字创建时间值。如果以下内容不为 true 将引发错误:\r\n    <ul>\r\n      <li> 0 ≤ 小时 ≤ 24 </li>\r\n      <li> 0 ≤ 分钟 ≤ 59 </li>\r\n      <li> 0 ≤ 秒 < 60 </li>\r\n      <li> 如果采用 24 小时计时制，则分钟数和秒数必须是 0 </li>\r\n    </ul>",
  "Text_Insert_Example1": "在 \"ABD\" 中的 \"B\" 和 \"D\" 之间插入 \"C\"。",
  "Option_IgnoreSpace_FuzzyGroup_Caption": "启用文本部分组合来查找组。",
  "Int8_From_Example1": "获取 <code>\"4\"</code> 的 8 位有符号整数 <code>number</code> 值。",
  "Int8_From_Example2": "使用 <code>RoundingMode.AwayFromZero</code> 获取 <code>\"4.5\"</code> 的 8 位有符号整数 <code>number</code> 值。",
  "TableAction_DeleteRows": "创建一个操作以从表中删除行。",
  "Value_Firewall": "此函数仅供内部使用。",
  "List_DateTimeZones": "给定初始值、计数和增量期间值来生成 datetimezone 值的列表。",
  "BinaryEncoding_Type": "指定二进制编码的类型。",
  "Duration_TotalSeconds_Description": "返回 {0} 跨越的总秒数。",
  "Language_DateTime_Math": "date 和 datetime 值也支持相减。",
  "Option_CommandTimeout_Caption": "命令超时",
  "Cube_PropertyKey_Description": "返回属性 {0} 的键。",
  "Option_Content_Web_Description": "指定此值会将 Web 请求从 GET 更改为 POST，并使用选项的值作为 POST 的内容。",
  "Option_Implementation_AdobeAnalytics_Description": "指定 Adobe Analytics API 版本。有效值为: “2.0”。默认使用 API 版本 1.4。",
  "Occurrence_First": "返回找到的值第一次出现的位置。",
  "DateTime_IsInPreviousSecond_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一秒中出现。请注意，当传递一个在当前秒内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Option_ExecutionMode_SAPBW_Description": "指定用于对服务器执行查询的 MDX 接口。此选项的默认值是 SapBusinessWarehouseExecutionMode.BasXmlGzip。仅受实现 \"2.0\" 支持。",
  "Date_IsInNextWeek_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下周中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Date_IsInCurrentDay_Description": "指示在当天中给定的日期时间值 {0} 是否出现，它由系统上的当前日期和时间确定。\r\n      <ul>\r\n      <li>{0}: 要进行求值的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Record_ToList": "返回包含输入记录字段值的值列表。",
  "List_Difference_Example1": "查找列表 {1, 2, 3, 4, 5} 中未出现在 {4, 5, 3} 中的项。",
  "List_Difference_Example2": "查找列表 {1, 2} 中未出现在 {1, 2, 3} 中的项。",
  "Table_FindText": "返回表中包含给定文本的所有行。",
  "Number_BitwiseShiftRight": "将位右移设置的位数。",
  "Table_SplitAt_Example1": "返回表的前 2 行和表的其余行。",
  "Value_NullableEquals": "返回两个值是否相等。",
  "Logical_From_Description": "从给定的 {0} 返回 <code>logical</code> 值。如果给定的 {0} 是 <code>null</code>，则 <code>Logical.From</code> 将返回 <code>null</code>。如果给定的 {0} 是 <code>logical</code>，则返回 {0}。以下类型的值可以转换为 <code>logical</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 来自文本值的 <code>logical</code> 值，可以为 <code>“true”</code> 或 <code>“false”</code>。有关详细信息，请参阅 <code>Logical.FromText</code>。</li>\r\n        <li><code>number</code>: 如果 {0} 等于 <code>0</code>，则为 <code>false</code>，否则为 <code>true</code>。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "Table_TypeFromList_Example1": "查找记录 [A = 1]、[A = 1, B = \"x\"]、[A = 3, B = 3, C = 5] 的类型。",
  "TraceLevel_Type": "指定跟踪级别。",
  "Replacer_ReplaceText_Description": "使用 {2} 文本替换原始 {0} 中的 {1} 文本。可以在 <code>List.ReplaceValue</code> 和 <code>Table.ReplaceValue</code> 中使用此替换器函数。",
  "Duration_Hours": "返回持续时间的小时数部分。",
  "Table_ColumnNames_Description": "返回表 {0} 中的列名作为文本列表。",
  "Table_FuzzyGroup": "根据键的模糊匹配对表中的行进行分组。",
  "Number_IsOdd_Example2": "检查 82 是否为奇数。",
  "Number_IsOdd_Example1": "检查 625 是否为奇数。",
  "Date_IsInNextQuarter_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一季度中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code>。</li>\r\n      </ul>",
  "Option_CreateNavigationProperties_False_Description": "一个逻辑值(true/false)，用于在返回的值上设置是否生成导航属性(默认值为 false)。",
  "Record_TransformFields": "应用指定的转换后返回一个记录。",
  "AzureStorage_BlobContents_Description": "从 Azure 存储保管库返回 URL {0} 处的 blob 内容。可以指定 {1} 来控制以下选项:\r\n    {1:type}",
  "Table_PromoteHeaders": "将第一行值升级为新的列标题(即列名)。",
  "DateTime_IsInNextNMinutes_Example1": "确定当前系统时间后的分钟是否处于接下来的两分钟内。",
  "List_Difference": "返回两个给定列表的差。",
  "Table_AddColumn": "添加具有指定名称的列。使用指定的选择函数(它将每行作为输入)来计算值。",
  "Cube_ReplaceDimensions": "替换 Cube.Dimensions 返回的维度集。",
  "Table_CombineColumnsToRecord": "将指定的列合并到新的记录值列中，其中每条记录都有与所合并的列的列名和值对应的字段名称和值。",
  "Table_Distinct_Example1": "从表中删除重复的行。",
  "Table_Distinct_Example2": "从表 <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code> 的列 [b] 中删除重复的行。",
  "Text_At_Example1": "查找位于字符串 \"Hello, World\" 中位置 4 的字符。",
  "Text_RemoveRange_Example1": "从文本值 \"ABEFC\" 的位置 2 删除 1 个字符。",
  "Text_RemoveRange_Example2": "从文本值 \"ABEFC\" 中删除从位置 2 开始的两个字符。",
  "Precision_Type": "指定比较的精度。",
  "BinaryOccurrence_Repeating": "要求该项在输入中不出现或出现多次。",
  "Date_QuarterOfYear": "返回一个数值，该数值指示日期属于年份中的哪个季度。",
  "Date_EndOfDay_Description": "返回 {0} 表示的天结束值。保留时区信息。\r\n <ul>\r\n <li>{0}: 从中计算天结束值的<code>date</code>、<code>datetime</code>或 <code>datetimezone</code>值</li>\r\n      </ul>",
  "Table_FillDown_Example1": "从表返回一个表，其中，列 [Place] 中的 null 值使用这些值上方的值填充。",
  "DateTime_IsInNextNMinutes_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一分钟数中出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 分钟数。</li>\r\n      </ul>",
  "List_Reverse": "将列表中的值反向排序。",
  "Extension_Contents_Description": "以二进制形式返回库 PQX 文件中文件 {0} 的内容。",
  "Date_IsInPreviousQuarter_Example1": "确定当前系统时间之前的那个季度是否处于上个季度。",
  "Graph_Nodes": "此函数仅供内部使用。",
  "Date_IsInCurrentDay_Example1": "确定当前系统时间是否处于当天。",
  "Sql_Database_Description": "从服务器 {0} 上的 SQL Server 数据库 {1} 返回 SQL 表、视图和存储函数的表。可以视需要指定服务器的端口，并用冒号或逗号分隔。可以指定可选的记录参数 {2} 来控制以下选项:\r\n    {2:type}\r\n    例如，将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "Option_ApiVersion_SharePoint_Description": "数字(14 或 15)或文本 \"Auto\"，指定要用于此站点的 SharePoint API 版本。未指定时，使用 API 版本 14。指定 Auto 时，如果可能将自动发现服务器版本，否则版本默认为 14。非英文的 SharePoint 网站至少需要版本 15。",
  "Table_IsDistinct": "指示表是否仅包含非重复行(没有重复项)。",
  "Record_ReorderFields_Description": "按列表 {1} 中指定的字段顺序将 {0} 中的字段重新排序后，返回一个记录。字段值保持不变，{1} 中未列出的字段仍留在原始位置。",
  "List_Covariance": "返回两个数值列表之间的协方差。",
  "Table_FirstValue": "返回表的第一行的第一列或指定的默认值。",
  "Excel_CurrentWorkbook_Description": "返回当前 Excel 工作簿的内容。它会返回表、命名范围和动态数组。与 <code>Excel.Workbook</code> 不同，它不返回工作表。",
  "Table_Combine_Description": "返回合并表列表 {0} 后生成的表。生成的表的行类型结构由 {1} 定义，或由输入类型的联合定义(如果未指定 {1} 的话)。",
  "Xml_Tables": "返回 XML 文档的内容作为平展表的嵌套集合。",
  "Date_IsInNextNWeeks_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一周数中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 周数。</li>\r\n      </ul>",
  "List_AnyTrue": "如果任意表达式为 true，则返回 true。",
  "Table_FromRows_Example1": "使用列 [CustomerID] 以及值 {1, 2}、列 [Name] 以及值 {\"Bob\", \"Jim\"}、列 [Phone] 以及值 {\"123-4567\", \"987-6543\"} 返回一个表。",
  "Table_FromRows_Example2": "使用列 [CustomerID] 以及值 {1, 2}、列 [Name] 以及值 {\"Bob\", \"Jim\"}、列 [Phone] 以及值 {\"123-4567\", \"987-6543\"} 返回一个表，其中 [CustomerID] 是数值类型，[Name] 和 [Phone] 是文本类型。",
  "DateTimeZone_FromText": "根据本地、通用和自定义 datetimezone 格式创建 datetimezone。",
  "Duration_ToText_Description": "返回给定持续时间值 {0} 的 \"day.hour:mins:sec\" 格式文本表示形式。\r\n <ul>\r\n        <li>{0}:计算文本表示形式所依据的 <code>duration</code>。</li>\r\n  <li>{1}:<i>[可选]</i>已弃用，如果不为 null，将抛出错误</li>\r\n      </ul>",
  "Combiner_CombineTextByDelimiter": "返回一个函数，它使用指定的分隔符将文本值列表合并成单个文本值。",
  "List_Single": "对于长度为 1 的列表返回一个列表项，否则引发异常。",
  "Table_Min_Description": "在给定 {1} 的情况下，返回 {0} 中的最小值行。如果表为空，则返回可选的 {2} 值。",
  "Date_Day_Example1": "获取表示 5/14/2011 05:00:00 PM 的日期和时间的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值的日部分。",
  "Language_Table_Lookup": "可以按其数字位置查找表的项。",
  "Number_E_Description": "表示 2.7182818284590451 的常量，e 的值最多取 16 位小数。",
  "List_Select": "返回匹配条件的值列表。",
  "Date_IsInPreviousMonth": "指示此日期是否会在系统当前日期和时间确定的上一月中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。",
  "List_IsDistinct": "指示列表中是否有重复值。",
  "AnalysisServices_Databases_Description": "返回 Analysis Services 实例 {0} 上的数据库。可提供可选的记录参数 {1} 来指定附加属性。该记录可以包含以下字段:\r\n    {1:type}\r\n    ",
  "Binary_View_Description": "<p>返回 {0} 视图，其中在将操作应用于视图时，使用 {1} 中指定的函数代替操作的默认行为。</p>\r\n<p>如果已提供 {0}，则所有处理程序函数都为可选项。如果未提供 {0}，则<code>GetStream</code>处理程序函数为必需项。如果未为操作指定处理程序函数，则操作的默认行为会应用于 {0} (<code>GetExpression</code>除外)。</p>\r\n<p>处理程序函数必须返回值，该值在语义上等效于对 {0} 应用操作的结果(或在<code>GetExpression</code>情况下生成的视图)。</p>\r\n<p>如果处理程序函数引发错误，则操作的默认行为会应用于视图。</p>\r\n<p><code>Binary.View</code>可用于实现数据源的折叠 - 将 M 查询转换为特定于源的操作(例如，用于下载文件的一部分)。</p>\r\n<p>请参阅已发布的 Power Query 自定义连接器文档，从而了解有关 <code>Binary.View</code>的更完整的说明。</p>",
  "Date_IsInPreviousNDays": "指示此日期是否会在系统当前日期和时间确定的上一天数中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。",
  "Date_IsInPreviousNMonths_Example1": "确定当前系统时间之前的月份是否在之前的两个月中。",
  "Date_Month_Example1": "查找 #datetime(2011, 12, 31, 9, 15, 36) 中的月份。",
  "Function_From_Description": "采用一元函数 {1} 并创建一个类型为 {0} 的新函数，用于构造其参数列表，并将其传递给 {1}。",
  "List_Sum_Example1": "计算列表 <code>{1, 2, 3}</code> 中的数的总和。",
  "Table_Range_Example1": "返回表中以偏移量 1 开始的所有行。",
  "Table_Range_Example2": "返回表中以偏移量 1 开始的一行。",
  "SapHana_Database_Description": "从 SAP HANA 数据库 {0} 返回多维包的表。可以指定可选的记录参数 {1} 来控制以下选项:\r\n    {1:type}\r\n    ",
  "Option_TransformationTable_FuzzyGroup_Caption": "基于自定义值映射对记录进行分组。",
  "DateTime_IsInPreviousNMinutes_Example1": "确定当前系统时间前的分钟是否处于前两分钟内。",
  "Table_ContainsAny_Description": "指示记录列表 {1} 中任何指定的记录是否显示为 {0} 中的各行。\r\n    可以指定一个可选参数 {2}，以控制表各行之间的比较。",
  "Number_Factorial": "返回数的阶乘。",
  "Number_PositiveInfinity": "表示 1 除以 0 的常量值。",
  "Text_Combine": "将一系列文本值连接成一个文本值。",
  "Text_Compare": "根据第一个文本值是小于、等于还是大于第二个值，返回 -1、0 或 1。",
  "Table_ReplaceValue_Example4": "匿名化美国员工的所有列。",
  "Table_ReplaceValue_Example1": "将文本“goodbye”替换为 B 列中的“world”，仅匹配整个值。",
  "Table_ReplaceValue_Example2": "将文本 “your” 替换为 B 列中的 “or”，与值的任何部分匹配。",
  "Table_ReplaceValue_Example3": "匿名化美国员工的姓名。",
  "Number_Mod_Description": "返回从 {0} 整除 {1} 所得的余数。\r\n    如果 {0} 或 {1} 为 null，则 <code>Number.Mod</code> 返回 null。\r\n      <ul>\r\n        <li>{0}: 被除数。</li>\r\n        <li>{1}: 除数。</li>\r\n      </ul>",
  "Table_Partition_Description": "根据 {1} 和 {3} 函数的值，将 {0} 分区为一组 {2} 个表。\r\n    {3} 函数应用于 {1} 行的值，以获取该行的哈希值。哈希值模数 {2} 确定要将该行放入所返回的哪个表中。\r\n    <ul>\r\n       <li>{0}: 要分区的表。</li>\r\n       <li>{1}: 要执行哈希运算以确定该行位于返回的哪个表中的列。</li>\r\n       <li>{2}: 要对输入表进行分区的表数。</li>\r\n       <li>{3}: 应用以获取哈希值的函数。</li>\r\n    </ul>\r\n  ",
  "Table_TransformColumnNames_Description": "使用给定的 {1} 函数转换列名。有效选项:\r\n    <div>\r\n      <code>MaxLength</code> 指定新列名的最大长度。如果给定函数生成的列名较长，则长名称将被剪裁。\r\n    </div>\r\n    <div>\r\n      <code>Comparer</code> 用于在生成新列名时控制比较。比较器可用于提供不区分大小写或区分区域性和区域设置的比较。\r\n    </div>\r\n    <div>\r\n      以下内置比较器以公式语言提供:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: 用于执行精确的序号比较</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: 用于执行精确的不区分大小写的序号比较</li>\r\n      <li> <code>Comparer.FromCulture</code>: 用于执行区分区域性的比较</li>\r\n    </ul>\r\n    ",
  "Table_RemoveFirstN": "返回跳过了前几个计数行的表。",
  "List_Random": "返回随机数的列表。",
  "BinaryFormat_Text_Example1": "将两个字节解码为 ASCII 文本。",
  "BinaryFormat_Text_Example2": "对 ASCII 文本进行解码，其中，以字节为单位的文本长度作为一个字节出现在文本之前。",
  "Splitter_SplitTextByPositions": "返回一个函数，它在每个指定的位置将文本拆分为文本列表。",
  "List_Repeat": "返回作为原始列表指定次数的重复的列表。",
  "Extension_InvokeWithCredentials_Description": "在所提供的凭据处理程序 {0} 的上下文中调用函数 {1}。此处理程序要么必须返回数据源的有效凭据，要么必须返回 <code>null</code> 指明没有可用凭据。",
  "List_FindText": "返回包含指定文本的值(包括记录字段)列表。",
  "Value_Expression_Description": "返回表示值表达式的抽象语法树(AST)",
  "List_Generate_Description": "使用提供的函数生成值列表。{0} 函数生成一个起始候选值，然后针对 {1} 进行测试。\r\n    如果候选值获得批准，则会将其作为结果列表的一部分返回，并通过将新批准的值传递给 {2} 来生成下一个候选值。\r\n    候选值无法匹配 {1} 后，列表生成进程将停止。\r\n    也可以提供可选参数 {3}，以转换生成列表中的项。",
  "RowExpression_Column": "返回表示对行表达式中列的访问权限的抽象语法树(AST)。",
  "List_ParallelInvoke_Example1": "使用 2 个并行计算构造列表 <code>{1, 2, 3}<code>。",
  "JoinKind_LeftAnti": "<code>Table.Join</code> 中可选 <code>JoinKind</code> 参数的可能值。\r\n    左边的反联接返回在第二个表中没有匹配项的第一个表中的所有行。",
  "WebMethod_Patch": "指定 HTTP 的 PATCH 方法。",
  "Number_Cos_Description": "返回 {0} 的余弦。",
  "Table_ColumnsOfType_Description": "返回带有与 {1} 中指定的类型相匹配的表 {0} 中的列名的列表。",
  "DateTime_Date_Description": "返回 {0} 以及给定 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值的日期部分。",
  "Record_Field": "返回记录中指定字段的值。",
  "Type_IsNullable": "如果类型是可空类型则返回 True；否则，返回 False。",
  "Duration_Seconds": "返回持续时间的秒数部分。",
  "AzureStorage_DataLake": "返回一个导航表，其中包含在 Azure Data Lake Storage 的指定容器及其子文件夹中找到的文档。",
  "Csv_Document_Description": "以表的形式返回 CSV 文档的内容。\r\n    <ul>\r\n      <li>\r\n        {1} 可以为 null、列数、列名称的列表、表类型或选项记录。\r\n      </li>\r\n      <li>\r\n        {2} 可以是单个字符、字符的列表，或值 <code>\"\"</code>，表示应使用连续空格字符拆分行。默认值: <code>“,”</code>。\r\n      </li>\r\n      <li>\r\n        请参考 <code>ExtraValues.Type</code> 以了解 {3} 的受支持的值。\r\n      </li>\r\n      <li>\r\n        {4} 指定文本编码类型。\r\n      </li>\r\n    </ul>\r\n\r\n    如果为 {1} 指定了记录(且 {2}、{3} 和 {4} 为 null)，则可能提供以下记录字段:\r\n    <ul>\r\n      <li>\r\n        <code>Delimiter</code>: 列分隔符。默认值: <code>“,”</code>。\r\n      </li>\r\n      <li>\r\n        <code>Columns</code>: 可以为 null、列数、列名称的列表或表类型。如果列数小于输入中发现的数字，则忽略其他列。如果列数大于输入中发现的数字，则其他列将为 null。如果未指定，则列数将由输入中发现的数字决定。\r\n      </li>\r\n      <li>\r\n        <code>Encoding</code>: 文件的文本编码。默认值: 65001 (UTF-8)。\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle</code>: 指定引号的处理方式。\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (默认值): 字段中的引号仅在紧跟分隔符后才起作用。\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: 字段中的引号始终起作用，无论它们出现在什么位置。\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code>: 指定带引号换行符的处理方式。\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.None</code> (默认值): 将所有换行符视为当前行的末尾，即使它们出现在带引号的值内也是如此。\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code>: 将带引号的换行符视为数据的一部分，而不是当前行的末尾。\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
  "List_AllTrue": "如果所有表达式均为 true，则返回 true。",
  "Date_EndOfYear_Description": "返回包含 {0} 的年结束值，包括小数秒。保留时区信息。\r\n      <ul>\r\n        <li>{0}: 从中计算年结束值的 <code>date</code>、<code>datetime</code>或<code>datetimezone</code>值。</li>\r\n      </ul>",
  "TextEquater_Default": "测试两个区分大小写的文本值是否相等。",
  "Day_Wednesday": "表示星期三。",
  "Text_Lower_Example1": "获取 \"AbCd\" 的小写版本。",
  "Number_Factorial_Description": "返回数 {0} 的阶乘。",
  "Function_Invoke_Description": "使用指定的参数列表调用给定的函数并返回结果。",
  "Language_Record_Combine": "可以使用 \"&\" 号组合记录。",
  "Table_Min_Example1": "查找表的列 [a] 中具有最小值的行。",
  "Table_Min_Example2": "查找表的列 [a] 中具有最小值的行。如果为空，则返回 -1。",
  "Table_Buffer_Example1": "将 SQL 表的所有行加载到内存中，从而使得所有下游操作都将无法再查询 SQL Server。",
  "Day_Wednesday_Description": "返回 3，该数值表示星期三。",
  "JoinAlgorithm_LeftHash": "将左行缓冲到查找表中，并流式传输右行。对于每个右行，通过缓冲的查找表找到匹配的左行。当左表较小且右表中的多数行应与左行匹配时，建议使用此算法。",
  "Record_AddField": "将字段添加到记录。",
  "Web_Contents": "将从该 URL 下载的内容返回为二进制。",
  "Date_IsInNextWeek_Example1": "确定当前系统时间之后的那一星期是否处于下一星期。",
  "Time_StartOfHour_Example1": "查找 2011 年 10 月 10 日上午 8:10:32 的小时开始值。",
  "Value_Divide_Description": "返回将 {0} 除以 {1} 的结果。可以指定一个可选 {2} 参数，默认情况下使用 <code>Precision.Double</code>。",
  "Date_QuarterOfYear_Example1": "查找日期 #date(2011, 12, 31) 属于年份中的哪个季度。",
  "Option_ManualStatusHandling_Web_Caption": "要手动处理的 HTTP 状态代码",
  "Option_ConnectionTimeout_Caption": "连接超时",
  "Splitter_SplitTextByAnyDelimiter_Example1": "从输入开头开始，按逗号或分号拆分输入，忽略引号和带引号的分隔符。",
  "Splitter_SplitTextByAnyDelimiter_Example2": "从输入结尾开始，按逗号或分号拆分输入，忽略引号和带引号的分隔符。",
  "Essbase_Cubes": "返回 Essbase 实例中按 Essbase 服务器分组的多维数据集。",
  "Date_IsInNextNMonths_Example1": "确定当前系统时间之后的月份是否在接下来的两个月中。",
  "AccessControlKind_Type": "指定访问控制的类型。",
  "AccessControlKind_Deny": "拒绝访问。",
  "Language_DateTimeWithZoneLiteral": "带时区的 datetime 值采用可选偏移量。",
  "Table_FillDown": "将前一个单元的值传播到该列中下面的值为 Null 的单元中。",
  "BinaryFormat_Text": "返回读取文本值的二进制格式。",
  "BinaryFormat_Byte": "读取 8 位无符号整数的二进制格式。",
  "BinaryFormat_Null": "读取零字节并且返回 null 的二进制格式。",
  "BinaryFormat_List": "返回读取项序列的二进制格式并且返回一个列表。",
  "Table_AddKey_Description": "向 {0} 添加一个键，其中 {1} 是定义该键的列名称列表，{2} 指定该键是否为主键。",
  "Type_ClosedRecord_Description": "返回给定 <code>record</code> {0} (或同一类型，如果其已关闭)的已关闭版本。",
  "Table_Contains": "指示指定的记录是否显示为表中的一行。",
  "DateTime_IsInNextMinute_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一分钟内出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Cube_MeasureProperty": "返回度量值的属性(单元格属性)。",
  "Value_Subtract": "返回两个值的差。",
  "Language_Text_Combine": "可以使用 \"&\" 号组合文本值。",
  "Any_Type": "表示所有值的类型。",
  "ItemExpression_From_Description": "<p>返回 {0} 主体的抽象语法树(AST)，规范化为项表达式<i></i>:\r\n<ul>\r\n  <li>函数必须为单参数 lambda。</li>\r\n  <li>对函数参数的所有引用已替换为 <code>ItemExpression.Item</code>。</li>\r\n  <li>AST 将简化为仅包含以下种类的节点:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>如果无法返回 {0} 的主体的项表达式 AST，会出现错误。</p>",
  "Language_List_Lookup": "可以按其数字位置查找列表的项。",
  "Option_LanguageCode_Caption": "SAP 语言代码",
  "Int16_From_Example2": "使用 <code>RoundingMode.AwayFromZero</code> 获取 <code>\"4.5\"</code> 的 16 位整数 <code>number</code> 值。",
  "Int16_From_Example1": "获取 <code>\"4\"</code> 的 16 位整数 <code>number</code> 值。",
  "Date_EndOfWeek_Example2": "获取 5/17/2011 05:00:00 PM -7:00 的星期结束值，Sunday 作为该星期的第一天。",
  "Date_EndOfWeek_Example1": "获取 5/14/2011 的星期结束值。",
  "Table_FromPartitions_Description": "返回为组合分区表 {1} 集的结果的表。{0} 是要添加的列名称。列类型默认为 <code>any</code>，但可以由 {2} 指定。",
  "List_PositionOfAny": "返回列表中值的第一个偏移量。",
  "Guid_From_Example4": "可以将 Guid 提供为 32 个由连字符分隔且括在括号中的十六进制数字。",
  "Guid_From_Example1": "可以将 Guid 提供为 32 个连续的十六进制数字。",
  "Guid_From_Example2": "可以将 Guid 提供为 32 个由连字符分隔成 8-4-4-4-12 块的十六进制数字。",
  "Guid_From_Example3": "可以将 Guid 提供为 32 个由连字符分隔且括在大括号中的十六进制数字。",
  "Text_Length_Example1": "查找文本 \"Hello World\" 中有多少个字符。",
  "List_Covariance_Example1": "计算两个列表之间的协方差。",
  "Date_IsInPreviousNQuarters": "指示此日期是否会在系统当前日期和时间确定的上一季度数中出现。请注意，当传递一个在当前季度内出现的值时，此函数将返回 false。",
  "Type_IsOpenRecord": "返回记录类型是否打开。",
  "List_Positions": "返回输入的偏移量列表。",
  "Number_Tan_Example1": "计算角 1 的正切。",
  "Value_Multiply_Description": "返回将 {0} 与 {1} 相乘的乘积。可以指定一个可选 {2} 参数，默认情况下使用 <code>Precision.Double</code>。",
  "DateTimeZone_ToUtc": "将时区部分转换为 UTC 时区。",
  "Option_Culture_FuzzyMatch_Caption": "允许根据区域性特定的规则匹配记录。",
  "Table_Distinct_Description": "从表中删除重复的行。\r\n    可选参数 {1} 指定对表的哪些列进行重复测试。如果未指定 {1}，则将测试所有列。<br>\r\n    <br>\r\n    因为 Power Query 有时会将某些操作卸载到后端数据源(称为“折叠”)，并且有时还会通过\r\n    跳过并非绝对需要的操作来优化查询，所以通常无法保证将保留哪些特定重复项。\r\n    例如，不能假定将会保留具有一组唯一列值的第一行，并将删除表中更靠下的行。\r\n    如果希望删除重复项的行为可以预测，请首先使用 <code>Table.Buffer</code> 缓冲该表。",
  "_Pound_date_Description": "从代表年、月和日的整数创建日期值。如果以下内容不为 true，将引发错误:\r\n    <ul>\r\n      <li> 1 ≤ 年 ≤ 9999 </li>\r\n      <li> 1 ≤ 月 ≤ 12 </li>\r\n      <li> 1 ≤ 日 ≤ 31 </li>\r\n    </ul>",
  "Extension_Cache": "返回具有缓存函数的记录。",
  "Table_LastN_Example2": "查找表中 [a] > 0 的后几行。",
  "Table_LastN_Example1": "查找表的最后两行。",
  "Time_From_Example2": "将 <code>#datetime(1899, 12, 30, 06, 45, 12)</code> 转换为 <code>time</code> 值。",
  "Time_From_Example1": "将 <code>0.7575</code> 转换为 <code>time</code> 值。",
  "Option_EnableStructures_SAPBW_Caption": "启用特性结构",
  "Date_IsLeapYear_Example1": "确定由 <code>#date(2012, 01, 01)</code> 表示的 2012 年是否为闰年。",
  "DateTimeZone_FromFileTime_Description": "从 {0} 值创建 <code>datetimezone</code> 值并将其转换为本地时区。filetime 是一个 Windows 文件时间值，它表示自公元 1601 年 1 月 1 日协调世界时(UTC)午夜 12:00 后经过的 100 纳秒时间间隔的数目。\r\n    ",
  "AzureStorage_DataLakeContents": "从 Azure Data Lake Storage 文件系统返回指定文件的内容。",
  "DateTime_IsInPreviousHour_Example1": "确定当前系统时间前的小时是否处于前一小时内。",
  "Folder_Contents": "返回一个表，其中包含在指定文件夹中找到的文件和文件夹的属性和内容。",
  "Comparer_Equals_Example1": "使用 \"en-US\" 区域设置比较 \"1\" 和 \"A\" 以确定这些值是否相等。",
  "List_Split_Description": "将 {0} 拆分为一系列列表，其中输出列表的第一个元素是包含源列表中前 {1} 个元素的列表，\r\n    输出列表的下一个元素是包含源列表中接下来 {1} 个元素的列表，以此类推。",
  "Binary_Split_Description": "将 {0} 拆分为二进制文件列表，其中输出列表的第一个元素是包含源二进制文件 \r\n    的第一个 {1} 字节的二进制文件，输出列表的下一个元素是包含源二进制文件中下一个 {1} 字节的二进制文件，等等。",
  "Date_StartOfWeek_Example1": "查找 2011 年 10 月 11 日星期二所在周的开始时间。",
  "Date_StartOfWeek_Example2": "查找 2011 年 10 月 11 日星期二所在周的开始时间(使用星期一作为该周开始)。",
  "JoinAlgorithm_RightHash": "将右行缓冲到查找表中，并流式传输左行。对于每个左行，通过缓冲的查找表找到匹配的右行。当右表较小且左表中的多数行应与右行匹配时，建议使用此算法。",
  "Date_IsInNextNWeeks_Example1": "确定当前系统时间之后的周是否在接下来的两周中。",
  "Extension_Cache_Description": "返回具有缓存函数的记录。",
  "DateTimeZone_LocalNow": "返回采用本地时区的当前日期和时间。",
  "Table_SplitColumn": "使用指定的拆分器功能，将指定的列拆分为一组其他列。",
  "Value_Expression": "返回表示值表达式的抽象语法树(AST)。",
  "Lines_ToText": "将文本列表转换为单个文本。 指定的 lineSeparator 追加到每行之后。 如果未指定，则使用回车和换行符。",
  "List_Average_Example1": "计算数的列表 <code>{3, 4, 6}</code> 的平均值。",
  "List_Average_Example2": "计算 date 值 2011 年 1 月 1 日、2011 年 1 月 2 日和 2011 年 1 月 3 日的平均值。",
  "Table_AddRankColumn_Description": "将名为“{1}”的列追加到{0}，并使用由{2}描述的一个或多个其他列进行排名。\r\n高级用户可以使用{3}中的 RankKind 选项来选择更具体的排名方法。",
  "Table_DuplicateColumn_Description": "将名为 {1} 的列复制到表 {0}。列 {2} 的值和类型从列 {1} 复制。",
  "Language_DurationLiteral": "通过 #duration(天数, 小时数, 分钟数, 秒数) 采用 24 小时制编写 duration 值。",
  "Option_ExecutionMode_SAPBW_Caption": "确定使用的 MDX 接口",
  "Table_TransformColumns_Example2": "将缺失列 [X] 中的数字值转换为文本值，同时忽略不存在的列。",
  "Table_TransformColumns_Example3": "将缺失列 [X] 中的数字值转换为文本值，同时将不存在的列中的值默认设置为 null。",
  "Table_TransformColumns_Example1": "将列 [A] 中的文本值转换为数字值，并将列 [B] 中的数字值转换为文本值。",
  "Table_TransformColumns_Example4": "递增列 [B] 中的数字值并将其转换为文本值，并将所有其他列转换为数字。",
  "Time_EndOfHour": "返回小时结束值。",
  "Text_Start_Description": "返回 {0} 的前 {1} 个字符作为文本值。",
  "Value_ViewFunction_Description": "此函数仅供内部使用。",
  "Date_IsInNextDay_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一天中出现。请注意，当传递一个在当前天内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "QuoteStyle_Type": "指定引号样式。",
  "QuoteStyle_None": "引号字符没有意义。",
  "AccessControlEntry_ConditionContextType": "针对其评估访问控制项(ACE)条件的授权上下文。",
  "List_Histogram": "生成带计数的 duration 值的表。",
  "Option_Headers_Web_Description": "将此值指定为记录将向 HTTP 请求提供其他标头。",
  "Table_ApproximateRowCount_Example1": "估计大型表中城市和省/市/自治区的不同组合数，这可用作列的基数估计值。基数估计值非常重要，因此各种数据源(如 SQL Server)通常使用名为 HyperLog 的算法支持此特殊近似值。",
  "DateTime_IsInNextNMinutes": "指示此日期时间是否会在系统当前日期和时间确定的下一分钟数中出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。",
  "Date_IsInPreviousNMonths": "指示此日期是否会在系统当前日期和时间确定的上一月数中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。",
  "Date_AddWeeks_Example1": "将 2 个星期添加到表示日期 5/14/2011 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "DateTimeZone_From_Description": "从给定的 {0} 返回 <code>datetimezone</code> 值。还可提供可选的 {1} (例如 “en-US”)。\r\n如果给定的 {0} 是 <code>null</code>，则 <code>DateTimeZone.From</code> 将返回 <code>null</code>。如果给定的 {0} 是 <code>datetimezone</code>，则返回 {0}。以下类型的值可以转换为 <code>datetimezone</code> 值:\r\n      <ul>\r\n        <li><code>text</code>: 文本表示形式的 <code>datetimezone</code> 值。有关详细信息，请参阅 <code>DateTimeZone.FromText</code>。</li>\r\n        <li><code>date</code>: 一个以 {0} 为日期组件，<code>午夜 12:00:00</code> 为时间组件的 <code>datetimezone</code>，其偏移量与本地时区相对应。</li>\r\n        <li><code>datetime</code>: 一个以 {0} 作为日期时间的 <code>datetimezone</code>，其偏移量与本地时区相对应。</li>\r\n        <li><code>time</code>: 一个 <code>datetimezone</code>，它具有作为日期组件的 <code>0</code> 的 OLE 自动化日期的等效日期、作为时间组件的 {0} 以及与本地时区相对应的偏移量。</li>\r\n        <li><code>number</code>: 一个 <code>datetimezone</code>，它具有由 {0} 表示的 OLE 自动化日期的等效日期时间以及与本地时区相对应的偏移量。</li>\r\n      </ul>\r\n如果 {0} 属于任何其他类型，则返回错误。",
  "Odbc_Query_Example1": "返回针对提供的连接字符串运行简单查询的结果。",
  "Number_Round_Description": "返回将 {0} 四舍五入到最接近的数的结果。如果 {0} 为 null，则 <code>Number.Round</code> 返回 null。<br>\r\n      <br>\r\n      默认情况下，{0} 舍入到最接近的整数，并通过舍入到最接近的偶数(使用 <code>RoundingMode.ToEven</code>，也称为“银行家舍入法”)断开联系。<br>\r\n      <br>\r\n      但可通过以下可选参数覆盖这些默认值。\r\n      <ul>\r\n        <li>{1}: 导致 {0} 四舍五入到指定的小数位数.</li>\r\n        <li>{2}: 在 {0} 位于两个可能的舍入值之间的中间点时，替代默认的断开联系行为\r\n       (有关可能值的信息，请参阅 <code>RoundingMode.Type</code>)。</li>\r\n      </ul>",
  "Number_BitwiseShiftLeft_Description": "返回对 {0} 执行按位左移指定的位数 {1} 所得的结果。",
  "Table_Max_Description": "在给定 {1} 的情况下，返回 {0} 中的最大值行。如果表为空，则返回可选的 {2} 值。",
  "Date_IsInPreviousNMonths_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一月数中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 月数。</li>\r\n      </ul>",
  "Compression_Brotli": "压缩数据采用 \"Brotli\" 格式。",
  "Table_PartitionValues_Description": "返回有关如何对表进行分区的信息。 此时将返回一个表，其中的每列为原始表中的一个分区列，每行对应于原始表中的一个分区。",
  "Binary_Buffer_Description": "缓冲内存中的二进制值。 此调用的结果是一个稳定的二进制值，这意味着它将具有确定的字节长度和顺序。",
  "Table_FuzzyNestedJoin_Example1": "基于 [FirstName] 的两个表的左侧内部模糊联接",
  "Option_SqlCompatibleWindowsAuth_Caption": "Windows 身份验证与 SQL Server 兼容",
  "Table_HasColumns_Example1": "确定表是否具有列 [Name]。",
  "Table_HasColumns_Example2": "查找表是否具有列 [Name] 和 [PhoneNumber]。",
  "Table_Combine": "返回作为合并一系列表的结果的表。",
  "Option_Timeout_Description": "一个时间段，控制在放弃对服务器的请求之前等待的时间。默认值特定于源。",
  "Duration_TotalSeconds": "返回此持续时间跨越的总秒数。",
  "Number_Sqrt_Description": "返回 {0} 的平方根。\r\n    如果 {0} 为 null，则 <code>Number.Sqrt</code> 返回 null。如果它是负值，则返回 <code>Number.NaN</code> (不是数字)。",
  "Text_End_Description": "返回一个 <code>text</code> 值，该值是 <code>text</code> 值 {0} 的后 {1} 个字符。",
  "Option_NumberOfMatches_FuzzyMatch_Description": "一个整数，用于指定可为每个输入行返回的匹配行的最大数目。例如，如果值为 1，则每个输入行最多返回 1 个匹配行。如果未提供此选项，则返回所有匹配的行。",
  "Table_TransformColumnTypes_Example1": "在表 <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> 中将列 [a] 中的数值转换为文本值。",
  "Value_ReplaceType": "替换值的类型。",
  "Table_ExpandListColumn_Example1": "拆分表中的列表列 [Name]。",
  "List_PositionOf": "返回列表中值的偏移量。",
  "Table_RemoveLastN_Example1": "删除表的最后一行。",
  "Table_RemoveLastN_Example2": "删除表中 [CustomerID] > 2 的最后几行。",
  "DateTime_FromFileTime": "从 64 位长度的数字创建日期时间。",
  "Splitter_SplitTextByLengths_Example2": "从输入结尾开始，将输入拆分为前两个字符后跟接下来三个字符。",
  "Splitter_SplitTextByLengths_Example1": "从输入开头开始，将输入拆分为前两个字符后跟接下来三个字符。",
  "Salesforce_Data_Description": "返回凭据中提供的 Salesforce 帐户上的对象。该帐户将通过提供的环境 {0} 进行连接。如果没有提供任何环境，则该帐户将连接到生产(https://login.salesforce.com)。可提供可选记录参数 {1} 来指定附加属性。该记录可以包含以下字段:\r\n    {1:type}\r\n    ",
  "Table_SelectColumns_Description": "返回仅具有指定 {1} 的 {0}。\r\n    <ul>\r\n       <li>{0}: 提供的表。</li>\r\n       <li>{1}: 要返回的表 {0} 中列的列表。返回表中的列按 {1} 中列出的顺序。</li>\r\n       <li>{2}: <i>(可选)</i> 列不存在时如何操作。示例: <code>MissingField.UseNull</code> 或 <code>MissingField.Ignore</code>。\r\n    </ul>\r\n    ",
  "Time_ToRecord_Example1": "将 <code>#time(11, 56, 2)</code> 值转换为包含时间值的记录。",
  "Record_FieldCount_Description": "返回记录 {0} 中的字段数。",
  "Record_Field_Example1": "在记录中查找字段 \"CustomerID\" 的值。",
  "Language_Number": "可以自然写入数字。",
  "Excel_CurrentWorkbook": "返回当前 Excel 工作簿的内容。",
  "Odbc_InferOptions_Example1": "返回连接字符串的推断 SQL 功能。",
  "RowExpression_From": "返回函数主体的抽象语法树(AST)。",
  "Record_FromList_Description": "根据给定的一个字段值 {0} 和一组字段，返回一个记录。 可以通过文本值列表或记录类型指定 {1}。 如果字段不是唯一的，将引发错误。",
  "Option_IgnoreCase_FuzzyGroup_Caption": "启用不区分大小写的键分组。",
  "Time_FromText_Description": "根据文本表示形式 {0} 创建 <code>time</code> 值。可以提供可选的 <code>record</code> 参数 {1} 来指定其他属性。<code>record</code> 可以包含以下字段:\r\n<ul>\r\n   <li><code>Format</code>: 指示要使用的格式的<code>文本</code>值。要了解更多详细信息，请转到 https://go.microsoft.com/fwlink/?linkid=2180104 和 https://go.microsoft.com/fwlink/?linkid=2180105。省略此字段或提供 <code>null</code> 将导致尽最大努力解析时间。</li>\r\n   <li><code>Culture</code>: 如果 <code>Format</code> 不为 null，则 <code>Culture</code> 将控制某些格式说明符。例如，在 <code>\"en-US\"</code> 中，<code>\"tt\"</code> 是 <code>\"AM\" 或 \"PM\"</code>，而在 <code>\"ar-EG\"</code> 中，<code>\"tt\"</code> 是 <code>\"ص\" 或 \"م\"</code>。当 <code>Format</code> 为 <code>null</code> 时，<code>Culture</code> 控制要使用的默认格式。当 <code>Culture</code> 为 <code>null</code> 或省略时，将使用 <code>Culture.Current</code>。</li>\r\n</ul>\r\n要支持旧版工作流，{1} 也可以是文本值。这与 {1}<code> = [Format = null, Culture = {1}]</code> 时的行为相同。",
  "Table_AggregateTableColumn": "将多个表的一列聚合到包含表中的多列。",
  "Type_Facets": "返回类型的 Facet。",
  "List_ParallelInvoke_Description": "计算所提供的 {0} 函数，同时最多计算 {1} 函数。能同时计算多少个函数取决于所执行的操作。",
  "RowExpression_Column_Description": "返回一个抽象语法树(AST)，该树表示对行表达式中行的列 {0} 的访问权限。",
  "BinaryFormat_Group_Description": "参数如下所示:\r\n<ul>\r\n<li>{0} 参数指定键值的二进制格式。</li>\r\n<li>{1} 参数提供与已知项的组有关的信息。</li>\r\n<li>可选的 {2} 参数可用于指定一个函数，该函数将为跟随在任何意外的键之后的值返回一个二进制格式值。如果未指定 {2} 参数，则在存在意外的键值时会引发错误。</li>\r\n</ul>\r\n{1} 参数指定项定义的列表。每个项定义都是一个列表，包含 3-5 个值，如下所示:\r\n<ul>\r\n<li>键值。与项相对应的键的值。该值在项组内必须唯一。</li>\r\n<li>项格式。与项的值相对应的二进制格式。其允许每个项都具有不同的格式。</li>\r\n<li>项出现次数。针对该项应在组中出现多少次的 <code>BinaryOccurrence.Type</code> 值。如果必需的项未提供，将会导致错误。像对待意外键值一样处理必需的或可选的重复项。</li>\r\n<li>默认项值(可选)。如果默认项值出现在项定义列表中并且不为 Null，将使用默认项值而非默认值。重复或可选项的默认值为 Null，而重复值的默认值为空列表 {{ }}。</li>\r\n<li>项值转换(可选)。如果在项定义列表中提供了项值转换函数并且不为 Null，将调用该函数以便转换该项值，然后才能返回它。只有在该项出现在输入中的情况下才调用该转换函数(将永远不会用默认值调用它)。</li>\r\n</ul>",
  "JoinKind_LeftOuter": "<code>Table.Join</code> 中可选 <code>JoinKind</code> 参数的可能值。\r\n    左边的外部联接确保第一个表的所有行显示在结果中。",
  "Logical_ToText_Example1": "从逻辑 <code>true</code> 创建一个文本值。",
  "MQ_Queue": "返回一个表，其中的消息可从队列中以非破坏性方式读取。",
  "Option_Timeout_Caption": "超时",
  "Occurrence_Optional": "要求该项在输入中不出现或出现一次。",
  "List_Contains": "指示列表是否包含值。",
  "Table_ReplaceMatchingRows_Example1": "在表中将行 [a = 1, b = 2] 和 [a = 2, b = 3] 替换为 [a = -1, b = -2] 和 [a = -2, b = -3]。",
  "Option_ConcurrentRequests_Stream_Description": "ConcurrentRequests 选项通过指定要并行执行的请求数来支持更快速的数据下载，这是以内存利用率为代价的。所需的内存为 (ConcurrentRequest * RequestSize)。默认值为 16。",
  "Table_ReplaceRows_Description": "在输入 {0} 中使用指定的 {3}，从 {1} 之后开始替换指定的行数 {2}。{3} 参数是记录列表。\r\n    <ul>\r\n       <li>{0}: 要在其中执行替换的表。</li>\r\n       <li>{1}: 在进行替换之前要跳过的行数。</li>\r\n       <li>{2}: 要替换的行数。</li>\r\n       <li>{3}: 要在由 {1} 指定的位置插入到 {0} 中的行记录的列表。</li>\r\n    </ul>\r\n",
  "List_Intersect_Description": "返回在输入列表 {0} 中找到的列表值的交集。可以指定可选参数 {1}。",
  "List_Product_Example1": "计算列表 <code>{1, 2, 3, 3, 4, 5, 5}</code> 中的数的乘积。",
  "Option_IgnoreCase_FuzzyGroup_Description": "一个逻辑(true/false)值，它允许不区分大小写的键分组。例如，如果为 true，则 \"Grapes\" 与 \"grapes\" 分组到一起。默认值为 true。",
  "DateTime_IsInPreviousMinute_Example1": "确定当前系统时间前的分钟是否处于前一分钟内。",
  "Cube_AddAndExpandDimensionColumn_Description": "将指定维度表 {1} 合并到多维数据集 {0} 的筛选上下文中，并通过展开指定维度属性集 {2} 来更改维度粒度。维度属性将添加到含有名为 {3} (如果未指定，则为 {2})的列的表格视图。",
  "Date_IsInCurrentMonth_Example1": "确定当前系统时间是否处于当月。",
  "OpenApi_Document_Description": "从开放 API 定义返回操作表。可提供一个可选的记录参数 options 来指定其他属性。记录可包含以下字段:\r\n    <ul>\r\n    <li><code>IncludeExtensions</code> : 一个逻辑值(true/false)。默认值为 true。如果为 true，供应商扩展作为元记录字段包含在相应的值中。</li>\r\n    <li> <code>SecurityDefinition</code> : 一个文本值。默认值为匹配接受的凭据类型(basic，apiKey)的第一个定义。如果指定此值，会重写用于此服务的安全定义。</li>\r\n    <li> <code>ManualStatusHandling</code> : 将此值指定为列表会禁止对响应具有这些状态代码之一的 HTTP 请求进行任何内置处理。</li>\r\n    <li> <code>IncludeDeprecated</code> : 一个逻辑值(true/false)。默认值为 false。如果为 true，标记为已弃用的操作将包含在导航表中。</li>\r\n    <li> <code>IncludeMoreColumns</code> : 一个逻辑值(true/false)。默认值为 false。如果为 true，则启用 \"MoreColumns\" 列。</li>\r\n    ",
  "Character_ToNumber_Description": "返回与字符 {0} 等效的数值。",
  "List_SingleOrDefault": "对于长度为 1 的列表返回一个列表项，对于空列表返回默认值。",
  "Number_NegativeInfinity": "表示 -1 除以 0 的常量值。",
  "Table_InsertRows_Example1": "将行插入表中的位置 1。",
  "Table_InsertRows_Example2": "将两行插入表中的位置 1。",
  "Option_CreateNavigationProperties_False_Caption": "生成导航属性",
  "Table_IsDistinct_Example2": "确定表的列中是否非重复。",
  "Table_IsDistinct_Example1": "确定表是否为非重复表。",
  "Geography_FromWellKnownText_Description": "将 Well-Known Text (WKT)格式的表示地理值的文本转换为结构化记录。WKT 是开放地理空间信息联盟(OGC)定义的一种标准格式，也是 SQL Server 等数据库使用的典型序列化格式。",
  "Table_ExpandTableColumn_Example1": "将表 <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> 的 <code>[a]</code> 中的表列扩展为 3 列 <code>[t.a]</code>、<code>[t.b]</code> 和 <code>[t.c]</code>。",
  "Table_DemoteHeaders": "将列标题降级到第一行值。",
  "Option_SqlCompatibleWindowsAuth_Description": "用于确认是否生成与 SQL Server 兼容的 Windows 身份验证连接字符串选项的逻辑(true/false)。默认值为 true。",
  "Type_ReplaceTableKeys": "返回所有键均由指定的键列表替换的新的表类型。",
  "Option_ApiKeyName_Web_Caption": "API 密钥查询参数的名称",
  "Web_DefaultProxy": "返回要用于特定 URI 的 HTTP 代理。",
  "ByteOrder_LittleEndian": "<code>BinaryFormat.ByteOrder</code> 中 <code>byteOrder</code> 参数的可能值。最不重要字节按小端字节顺序最先出现。",
  "DateTime_AddZone": "将时区信息添加到日期/时间值。",
  "Table_MinN_Description": "在给定 {1} 的情况下，返回 {0} 中的最小值行。在对行排序后，必须指定 {2} 参数以进一步筛选结果。注意，排序算法无法保证固定的排序结果。{2} 参数可以采用多种格式:\r\n    <ul>\r\n        <li> 如果指定一个数，则返回以升序排序的、最多包含 {2} 项的列表。</li>\r\n        <li> 如果指定条件，则返回最初满足该条件的项列表。如果某个项不满足该条件，则不再考虑其他项。</li>\r\n </ul>",
  "DateTime_ToRecord": "返回包含日期时间值的各个部分的记录。",
  "Uri_Type": "表示文本 URI 的类型。",
  "Identity_From": "创建标识。",
  "Identity_Type": "标识代表用户、组、设备或其他可识别的项。",
  "GroupKind_Type": "指定分组类型。",
  "Text_Trim_Example1": "从 \"     a b c d    \" 删除前导空格和尾随空格。",
  "Number_RoundAwayFromZero": "返回向上舍入正数和向下舍入负数的结果。可以指定位数。",
  "DateTime_IsInNextHour_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一小时中出现。请注意，当传递一个在当前小时内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "TraceLevel_Critical": "指定严重跟踪级别。",
  "Table_FromList_Description": "通过将可选的拆分函数 {1} 应用于列表中的每一项，将列表 {0} 转换为表。默认情况下，假定列表是用逗号分隔的文本值的列表。可选的 {2} 可以是列数、列的列表或 TableType。还可以指定可选的 {3} 和 {4}。",
  "List_Generate": "生成值列表。",
  "Number_RoundUp": "返回下一个最大数。可以指定位数。",
  "Binary_Buffer_Example1": "创建二进制值的稳定版本。",
  "Number_Sqrt_Example2": "计算 85 的平方根。",
  "Number_Sqrt_Example1": "计算 625 的平方根。",
  "Cube_MeasureProperties_Description": "返回一个表，该表包含在多维数据集中扩展的度量的可用属性集。",
  "TraceLevel_Error_Description": "返回错误跟踪级别值 2。",
  "DateTime_IsInCurrentSecond_Example1": "确定当前系统时间是否处于当前秒内。",
  "List_ContainsAll": "指示一个列表是否包含另一个列表中的所有值。",
  "List_ContainsAny": "指示一个列表是否包含另一个列表中的任意值。",
  "Binary_Range_Example1": "返回从偏移量 6 开始的二进制值的子集。",
  "Binary_Range_Example2": "返回从偏移量 6 开始、长度为 2 的二进制值的子集。",
  "List_Last_Example1": "查找列表 {1, 2, 3} 中的最后一个值。",
  "List_Last_Example2": "查找列表 {} 中的最后一个值，如果列表为空，则返回 -1。",
  "Date_StartOfYear_Example1": "查找 2011 年 10 月 10 日上午 8:10:32 的年开始值。",
  "List_Union_Description": "取列表的列表 {0}，合并各个列表中的项，然后在输出列表中返回它们。因此，返回的列表包含所有输入列表中的所有项。\r\n    此操作维护传统的包语义，因此重复值作为 Union 的一部分匹配。\r\n    可以指定一个可选相等条件值 {1} 来控制相等测试。 ",
  "DateTimeZone_RemoveZone_Description": "从 {0} 返回 #datetime 值并且删除时区信息。",
  "Text_Trim_Description": "返回从文本值 {0} 删除所有前导空格和尾随空格的结果。",
  "Type_TableSchema": "返回包含指定表类型的列(即架构)的说明的表。",
  "Number_Power_Description": "返回计算 {0} 的 {1} 次幂所得的结果。\r\n    如果 {0} 或 {1} 为 null，则 <code>Number.Power</code> 返回 null。\r\n      <ul>\r\n        <li>{0}: 底数。</li>\r\n        <li>{1}: 指数。</li>\r\n      </ul>",
  "List_AnyTrue_Description": "如果列表 {0} 中的任意表达式为 true，则返回 true。",
  "Option_NavigationPropertyNameGenerator_Description": "一个函数，用于创建导航属性的名称。",
  "Date_StartOfWeek": "返回该周的开始时间。",
  "Date_StartOfYear": "返回年开始值。",
  "Action_Try_Description": "创建一个操作，该操作执行 {0}，捕获在执行操作期间发生的任何错误，并返回包含 <code>HasError</code> 字段以及 <code>Value</code> 或 <code>Error</code> 字段(具体取决于操作是否成功执行)的记录。",
  "Date_IsInNextNMonths_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的下一月数中出现。请注意，当传递一个在当前月内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      <li>{1}: 月数。</li>\r\n      </ul>",
  "List_ContainsAny_Description": "指示列表 {0} 是否包含另一个列表 {1} 中的任意值。\r\n       如果在列表中找到值，则为 true；否则为 false。可以指定一个可选相等条件值 {2} 来控制相等测试。",
  "Language_Records": "记录为命名的字段及其值。使用方括号编写它们。",
  "Date_QuarterOfYear_Description": "返回一个介于 1 到 4 之间的数值，该数值指示日期 {0} 属于年份中的哪个季度。{0} 可以是 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "Date_EndOfMonth_Example2": "获取 5/17/2011 05:00:00 PM -7:00 的月份结束值。",
  "Date_EndOfMonth_Example1": "获取 5/14/2011 的月份结束值。",
  "GroupKind_Global": "全局组由具有相同键值的输入表中的所有行组成。",
  "Duration_TotalHours_Example1": "查找持续时间值跨越的总小时数。",
  "TraceLevel_Type_Description": "指定跟踪级别。",
  "Web_Headers_Description": "返回从 {0} 下载的标头作为记录。可以提供可选记录参数 {1}来指定其他属性。记录可以包含以下字段:\r\n    {1:type}\r\n    使用 HEAD 方法发出 HTTP 请求。在自定义数据连接器上下文之外，只有一部分响应标头可用(出于安全原因)。\r\n    ",
  "DB2_Database": "返回 Db2 数据库中可用的 SQL 表和视图的表。",
  "AccessControlEntry_Type_Description": "表示授权规则的访问控制项(ACE)的排序表。针对当前授权上下文(按顺序)评估每行且 <code>Condition</code> 表达式返回 true 的第一行确定适用哪种规则。<code>Action</code> 列表示规则适用的操作类型。<code>AccessControlKind</code> 列确定是否允许或拒绝该操作的访问。",
  "Record_TransformFields_Example1": "将 \"Price\" 字段转换为数字。",
  "Record_TransformFields_Example2": "将 \"OrderID\" 和 \"Price\" 字段转换为数字。",
  "Option_TransformationTable_FuzzyMatch_Description": "允许根据自定义值映射来匹配记录的表。它应包含“从”和“到”列。例如，如果提供了一个转换表，表中有包含 \"Grapes\" 的“从”列和包含 \"Raisins\" 的“到”列，则 \"Grapes\" 与 \"Raisins\" 匹配。请注意，转换将应用于转换表中所有出现该文本的位置。通过上述转换表，\"Grapes are sweet\" 也将与 \"Raisins are sweet\" 匹配。",
  "Language_Record_OptionalLookup": "如果字段名称可能缺失，请使用 ? 以在缺失时返回 null。",
  "Number_Permutations_Description": "使用指定的排列大小 {1} 返回可从项数 {0} 生成的排列数。",
  "Option_IgnoreSpace_FuzzyMatch_Description": "一个逻辑(true/false)值，它允许组合文本部分来查找匹配项。例如，如果为 true，则 \"Gra pes\" 与 \"Grapes\" 匹配。默认值为 true。",
  "Table_NestedJoin_Description": "<p>根据由 {1} (针对 {0})和 {3} (针对 {2})选择的键列值的等同性联接 {0} 的行与 {2} 的行。将结果输入名为 {4} 的列。</p>\r\n<p>可选的 {5} 指定要执行的联接类型。默认情况下，如果未指定 {5}，则执行左外部联接。</p>\r\n<p>可包含 {6} 的可选集来指定如何比较键列。此功能目前仅适用于内部使用。</p>  ",
  "Uri_EscapeDataString_Description": "根据 RFC 3986 的规则对输入 {0} 中的特殊字符进行编码。",
  "Identity_IsMemberOf": "确定标识是否为标识集合的成员。",
  "Date_IsInNextWeek": "指示此日期是否会在系统当前日期和时间确定的下周中出现。请注意，当传递一个在当前周内出现的值时，此函数将返回 false。",
  "Date_IsInNextYear": "指示此日期是否会在系统当前日期和时间确定的下一年中出现。请注意，当传递一个在当前年内出现的值时，此函数将返回 false。",
  "Table_ConformToPageReader": "此函数仅供内部使用。",
  "List_Median": "返回列表中的中位数值。",
  "List_RemoveRange_Description": "在 {0} 中删除从指定的位置 {1} 开始的 {2} 个值。",
  "List_FirstN_Description": " <ul>\r\n  <li>如果指定一个数，则最多返回这么多项。</li>\r\n  <li>如果指定一个条件，则返回最初满足该条件的所有项。一旦某个项不满足该条件，则不再考虑其他项。</li>\r\n </ul>",
  "Type_TableRow_Example1": "返回简单表的行类型信息。",
  "Table_ToColumns_Description": "从表 {0} 中创建嵌套表的列表。 每个列表项都是一个包含列值的内部列表。",
  "RankKind_Ordinal": "所有项目都会获得一个唯一的排名编号，即使它们的比较结果为相等。",
  "Text_PadEnd_Example2": "用 \"|\" 填充文本值的尾部，使其长度为 10 个字符。",
  "Text_PadEnd_Example1": "填充文本值的尾部，使其长度为 10 个字符。",
  "DateTime_LocalNow_Description": "返回设置为系统上的当前日期和时间的 <code>datetime</code> 值。",
  "Number_RoundAwayFromZero_Description": "基于数字的符号返回舍入 {0} 的结果。此函数将向上舍入正数、向下舍入负数。\r\n    如果指定了 {1}，则将 {0} 舍入为包含 {1} 位小数。\r\n  ",
  "Option_Threshold_FuzzyGroup_Caption": "将两个值分组在一起所依据的相似度分数。",
  "Text_PositionOf_Description": "返回在 {0} 中找到的文本值 {1} 的指定出现位置。\r\n    可选参数 {2} 可用于指定要返回的出现位置(默认值为第一次出现)。\r\n    如果未找到 {1}，则返回 -1。\r\n\r\n      <div>\r\n        {3} 是用于控制比较的 <code>Comparer</code>。比较器可用于提供不区分大小写的比较或区分区域性与区域设置的比较。\r\n      </div>\r\n      <div>\r\n        以下内置比较器以公式语言提供:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: 用于执行精确的序号比较</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: 用于执行不区分大小写的精确序号比较</li>\r\n        <li> <code>Comparer.FromCulture</code>: 用于执行区分区域性的比较</li>\r\n      </ul>",
  "List_ReplaceValue_Example1": "使用 \"A\" 替换列表 {\"a\", \"B\", \"a\", \"a\"} 中的所有 \"a\" 值。",
  "ExtraValues_Error": "如果拆分器功能返回的列比表所需的列多，应引发错误。",
  "BinaryFormat_Record_Description": "返回读取记录的二进制格式。 {0} 参数指定该记录的格式。 该记录中的各字段可具有不同的二进制格式。 如果某个字段包含的值不是二进制格式值，则不会为该字段读取任何数据，并且该字段值回显到结果。",
  "Table_FromValue": "从提供的值创建具有一列的表。",
  "Value_Subtract_Description": "返回 {0} 和 {1} 的差。可以指定一个可选 {2} 参数，默认情况下使用 <code>Precision.Double</code>。",
  "Date_IsInYearToDate_Example1": "确定当前系统时间是否处于本年度截至现在的日期内。",
  "Option_Culture_SAP_Caption": "区域性名称",
  "Language_ScientificNumber": "可使用科学记数法写入数字。这表示 100。",
  "Record_FieldNames_Example1": "查找记录中字段的名称。",
  "Table_ColumnNames_Example1": "查找表的列名。",
  "Table_FromRows": "从行值列表和可选列创建一个表",
  "Language_If": "if 表达式测试一个条件，如果为 true，则返回 then 部分；如果为 false，则返回 else 部分。",
  "Language_Or": "如果任何一端为 true，则返回 true。",
  "Table_FromList": "通过将指定的拆分函数应用于列表中的每一项，将列表转换为表。",
  "Number_BitwiseXor_Description": "返回对 {0} 和 {1} 执行按位 \"XOR\" (异或)所得的结果。",
  "Number_RoundTowardZero_Example1": "向零方向舍入数 -1.2。",
  "Number_RoundTowardZero_Example3": "将数字 -1.234 向零的方向舍入为包含两位小数。",
  "Number_RoundTowardZero_Example2": "向零方向舍入数 1.2。",
  "DateTime_IsInPreviousMinute_Description": "指示给定的日期时间值 {0} 是否会在系统当前日期和时间确定的上一分钟内出现。请注意，当传递一个在当前分钟内出现的值时，此函数将返回 false。\r\n      <ul>\r\n      <li>{0}: 要计算的 <code>datetime</code> 或 <code>datetimezone</code> 值。</li>\r\n      </ul>",
  "Date_IsInYearToDate": "指示在当前年份中该日期是否出现以及该日期是否就在当天或早于当天，它由系统上的当前日期和时间确定。",
  "Splitter_SplitTextByRepeatedLengths": "返回一个函数，它在指定的长度后反复将文本拆分为文本列表。",
  "Type_ForFunction": "返回一个类型，此类型表示具有特定参数的函数和返回类型约束。",
  "Language_Not": "返回相反的逻辑值。",
  "Language_Let": "let 表达式允许您使用表达式创建变量并计算其结果。",
  "Language_And": "如果两端均为 true，则返回 true。",
  "Text_End": "返回文本的后几个字符。",
  "Int8_Type": "表示 8 位有符号整数的类型。",
  "Int8_From": "从给定的值创建 8 位有符号整数。",
  "Table_ReplaceErrorValues": "使用相应指定值替换指定列中的错误值。",
  "Table_Group_Description": "按 {1} 定义的键列对 {0} 的行进行分组。{1} 可以是单个列名，也可以是列名称列表。\r\n    每个组会构造一条记录，其中包含键列(和它们的值) 以及由 {2} 指定的任何聚合列。\r\n    或者，也可以指定 {3} 和 {4}。<br>\r\n    <br>\r\n    如果数据已按键列排序，则可以提供 GroupKind.Local 的 {3}。在某些情况下，这可能会提高分组的性能，\r\n    因为具有给定键值集的所有行都被认为是连续的。 <br>\r\n    <br>\r\n    传递 {4} 时，请注意，如果它将不同的键视为相等，则可能会将行放置在与其键不同的组中。<br>\r\n    <br>\r\n    此函数不能保证它返回的行的顺序。\r\n  ",
  "List_DateTimeZones_Example1": "从新年前 5 分钟(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0))开始创建 10 个值的列表，以 1 分钟为增量(#duration(0, 0, 1, 0))。",
  "Table_ReplaceValue": "用指定列中的其他值替换一个值。",
  "Number_Log_Description": "根据指定底数 {1} 返回数值 {0} 的对数。如果未指定 {1}，则默认值为 Number.E。\r\n    如果 {0} 为 null，则 <code>Number.Log</code> 返回 null。",
  "Option_Culture_SAP_Description": "映射到 SAP 语言代码的区域性名称。无法同时指定区域性和 LanguageCode。",
  "Geometry_FromWellKnownText": "将 Well-Known Text (WKT)格式的表示几何值的文本转换为结构化记录。",
  "Folder_Files": "返回一个表，它包含在指定文件夹和子文件夹中找到的文件的属性和内容。",
  "BufferMode_Streaming": "立即计算值的类型，并且仅在后续计算需要时缓冲其内容。",
  "DateTimeZone_ToText": "返回 datetimezone 值的文本表示形式。",
  "Date_AddQuarters_Example1": "将 1 个季度添加到表示日期 5/14/2011 的 <code>date</code>、<code>datetime</code> 或 <code>datetimezone</code> 值。",
  "Cube_AddMeasureColumn_Description": "将名为 {1} 的列添加到 {0}，其中包含在每行的行上下文中应用的度量值 {2} 的结果。度量值应用受维度粒度和切片的变化的影响。执行特定多维数据集操作后，系统会调整度量值。",
  "DateTimeZone_UtcNow": "返回采用 UTC (GMT 时区)的当前日期和时间。",
  "DateTime_FixedLocalNow_Description": "返回设置为系统上的当前日期和时间的 <code>datetime</code> 值。该值是固定的，因此将不会随着连续调用而更改，这与 DateTime.LocalNow 不同，后者可能会在表达式的执行过程中返回不同值。",
  "Number_BitwiseNot_Description": "返回对 {0} 执行按位 \"Not\" 运算所得的结果。",
  "Table_FromPartitions": "返回作为组合一组分区表的结果的表。",
  "Text_ToBinary": "将文本编码为二进制格式。",
  "Option_RelativePath_Web_Caption": "相对 URL 路径",
  "Type_IsNullable_Example2": "确定 <code>type nullable number</code> 是否可空。",
  "Type_IsNullable_Example1": "确定 <code>number</code> 是否可空。",
  "List_Select_Example1": "查找列表 {1, -3, 4, 9, -2} 中大于 0 的值。",
  "List_Buffer": "缓冲列表。",
  "Number_Exp_Example1": "计算 e 的 3 次幂。",
  "Table_ToRecords_Description": "将表 {0} 转换为记录列表。",
  "Duration_Hours_Description": "返回 {0} 的小时数部分。",
  "Exchange_Contents": "返回来自 Microsoft Exchange 帐户的目录。",
  "Table_AlternateRows_Example1": "从表中创建一个表，从第一行开始，跳过 1 个值，然后保留 1 个值。",
  "Time_Second_Example1": "查找日期时间值中的秒值。",
  "Comparer_FromCulture": "根据指定的区域性和区分大小写返回比较器函数。",
  "List_Buffer_Example1": "创建列表 {1..10} 的稳定副本。",
  "Table_ExpandTableColumn": "将一个记录列或表列扩展到包含表中的多列。",
  "Value_Type": "返回给定值的类型。",
  "Value_Hash": "返回值的哈希代码。",
  "Number_Sin": "返回数的正弦。",
  "Number_Tan": "返回数的正切。",
  "Number_NaN": "表示 0 除以 0 的常量值。",
  "Number_Log": "根据指定底数(默认为 e)返回数的对数。",
  "Number_Mod": "使两个数整除并返回余数。",
  "Number_Cos": "返回数的余弦。",
  "Number_Abs": "返回数的绝对值。",
  "Number_Exp": "计算 e 的指定次幂。",
  "PostgreSQL_Database_Description": "返回服务器 {0} 上 PostgreSQL 数据库(在名为 {1} 的数据库实例中)中可用的 SQL 表和视图的表。可以视需要指定服务器的端口，并用冒号分隔。可以指定可选的记录参数 {2} 来控制以下选项:\r\n    {2:type}\r\n    例如，将记录参数指定为 [option1 = value1, option2 = value2...] 或 [Query = \"select ...\"]。\r\n    ",
  "Language_Table_MultiProject": "通过使用一系列列引用、每个引用用方括号括起来可以从表选择列。",
  "Replacer_ReplaceValue": "在提供的输入内替换值。",
  "Environment_Configuration": "返回当前环境中设置的所有配置属性的值。",
  "Language_Equals": "如果两个值相等，则 = 返回 true。",
  "TableAction_InsertRows_Description": "<p>创建一个可向 {0} 中插入 {1} 的操作。该操作返回的表包含在操作执行后出现在 {0} 中的已插入的行。</p>\r\n<p>对于不是在 {1} 中指定的 {0} 中的列，将使用特定于目标的默认值。</p>\r\n<p>如果 {0} 不可更新或 {1} 与 {0} 不兼容，该函数将引发计算错误。</p>\r\n<p>如果操作失败，该操作将引发执行错误。</p>\r\n<p><b>注意:</b> 如果发生执行错误，{0} 可能会保留为部分更新状态。</p>",
  "List_Density": "以表的形式返回值的频率。",
  "Option_EnableCrossDatabaseFolding_Description": "一个逻辑 (true/false) 值，如果为 true，则允许查询折叠同一服务器上的数据库。默认值为 false。",
  "Option_UseDb2ConnectGateway_Caption": "使用 Db2 连接网关",
  "Binary_Decompress_Description": "使用给定的压缩类型解压缩二进制值。此调用的结果是输入的压缩后副本。压缩类型包括:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
  "List_Index_Example1": "使用 \"each [A]\" 以将列 [A] 作为列表 {[A = 1, B = 2], [A = 2, B = 3], [A = 3, B = 4]} 中的键。",
  "Option_Implementation_SAPBW_Description": "指定要使用的 SAP Business Warehouse 连接器实现。",
  "List_Combine_Description": "提取列表的列表 {0} 并将它们合并为一个新列表。",
  "Binary_ViewError_Description": "从 {0} 创建修改的错误记录，当在视图上(通过 Binary.View)定义的处理程序引发该记录时，它不会触发回退。",
  "Number_RandomBetween_Example1": "获取 1 和 5 之间的一个随机数。",
  "DateTimeZone_SwitchZone": "更改此值的时区。",
  "PercentileMode_ExcelExc": "在对 <code>List.Percentile</code> 内插值时，请使用与 Excel 的 <code>PERCENTILE.EXC</code> 兼容的方法。",
  "PercentileMode_ExcelInc": "在对 <code>List.Percentile</code> 内插值时，请使用与 Excel 的 <code>PERCENTILE.INC</code> 兼容的方法。",
  "Single_From_Description": "从给定的 {0} 返回单精度 <code>number</code> 值。如果给定的 {0} 为 <code>null</code>，则 <code>Single.From</code> 将返回 <code> null</code>。如果给定的 {0} 为单精度范围内的 <code>number</code>，则返回 {0}，否则返回错误。如果 {0} 属于任何其他类型，则将首先使用 <code>Number.FromText</code> 将其转换为 <code>number</code>。还可以提供可选的 {1} (例如，“en-US”)。",
  "Oracle_Database": "从 Oracle Database 中返回 SQL 表和视图的表。",
  "Text_From_Example1": "从数字 3 创建一个文本值。",
  "List_Density_Description": "通过创建报告每个值的计数的记录表，计算列表 {0} 的密度。\r\n    可以指定一个可选相等条件值 {1} 来控制相等测试。选择每个相等组的第一个值。",
  "BufferMode_Eager": "在继续操作之前，立即在内存中缓冲整个值。",
  "List_Combine_Example2": "合并两个列表 {1, 2} 和 {3, {4, 5}}，其中一个包含嵌套的列表。",
  "List_Combine_Example1": "合并两个简单的列表 {1, 2} 和 {3, 4}。",
  "RowExpression_From_Example1": "返回函数 <code>each [CustomerID] = \"ALFKI\"</code> 主体的 AST",
  "Record_FieldCount": "返回记录中的字段数。",
  "Table_RemoveFirstN_Example1": "删除表的第一行。",
  "Table_RemoveFirstN_Example3": "删除表中 [CustomerID] <=2 的前几行。",
  "Table_RemoveFirstN_Example2": "删除表的前两行。",
  "Table_TypeFromList": "从记录列表中推断表类型。",
  "Record_FieldNames": "返回字段的名称。",
  "BinaryFormat_Transform_Example1": "读取一个字节并向其加 1。",
  "DateTimeZone_FromFileTime_Example1": "将 <code>129876402529842245</code> 转换为 datetimezone 值。"
}