{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "Az Access-adatbázisok szerkezeti ábrázolását adja vissza.",
        "Documentation.LongDescription": "Visszaadja egy Access-adatbázis (<code>database</code>) szerkezeti ábrázolását. Egy választható rekordparaméter adható meg (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a false, azaz hamis).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n</ul>\r\n\r\n    Például a rekordparaméter meghatározása lehet [option1 = value1, option2 = value2…].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "Az adott gazdagépen található Analysis Services-adatbázisokat adja vissza.",
        "Documentation.LongDescription": "A(z) <code>server</code> Analysis Services-példányon található adatbázisokat adja vissza. Megadható egy választható rekordparaméter (<code>options</code>) további tulajdonságok meghatározásához. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : Egy logikai &#233;rt&#233;k, amely azt hat&#225;rozza meg, hogy a t&#246;bbdimenzi&#243;s vagy t&#225;bl&#225;zatos modellben megadott t&#237;pusok legyenek-e haszn&#225;lva a hozz&#225;adott m&#233;rt&#233;koszlopok t&#237;pusaik&#233;nt. Ha az &#233;rt&#233;ke false (hamis), minden m&#233;rt&#233;koszlophoz a „number” t&#237;pus lesz alkalmazva. A be&#225;ll&#237;t&#225;s alap&#233;rtelmezett &#233;rt&#233;ke a false.</li>\r\n<li><code>Culture</code> : Az adatok kultur&#225;lis k&#246;rnyezet&#233;t meghat&#225;roz&#243; n&#233;v, amely megfelel a kapcsolati sztring „Ter&#252;letibe&#225;ll&#237;t&#225;s-azonos&#237;t&#243;” tulajdons&#225;g&#225;nak.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>SubQueries</code> : Egy sz&#225;m (0, 1 vagy 2), amely meghat&#225;rozza a „SubQueries” (Seg&#233;dlek&#233;rdez&#233;sek) tulajdons&#225;g &#233;rt&#233;k&#233;t a kapcsolati sztringben. Ez az &#233;rt&#233;k vez&#233;rli a r&#233;szkijel&#246;l&#233;sek &#233;s r&#233;szkock&#225;k sz&#225;m&#237;tott elemeinek viselked&#233;s&#233;t. (Az alap&#233;rtelmezett &#233;rt&#233;k a 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "AtScale-kockák",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "Importálás/DirectQuery-kockaadatok egy AtScale-ből.",
        "Documentation.LongDescription": "\r\nVisszaadja a(z) <code>server</code> kiszolgálón található AtScale-kockaadatokat. Az <code>options</code> választhat rekordparaméter megadásával vezérelhetők a következő beállítások:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: Egy logikai érték, amely azt jelzi, hogy a többdimenziós vagy táblázatos modellben meghatározott típusok lesznek-e a hozzáadott mértékoszlopok típusai. Ha false értékű, akkor a rendszer a number típust használja minden mértékoszlophoz. A beállítás alapértelmezett értéke false.</li>\r\n        <li><code>CommandTimeout</code>: Időtartam (másodpercben), amely azt szabályozza, hogy a kiszolgálóoldali lekérdezés mennyi ideig futhat, mielőtt megszakadna. Az alapértelmezett érték az illesztőtől függ. </li>\r\n        <li><code>ConnectionTimeout</code>: Időtartam (másodpercben), amely azt szabályozza, hogy mennyi ideig várjon a rendszer, mielőtt félbehagyja a kiszolgálóhoz való csatlakozási kísérletet. Az alapértelmezett érték az illesztőtől függ. </li>\r\n\r\n</ul>\r\nA rekordparaméter a következőképpen adható meg: [option1 = value1, option2 = value2...].",
        "Documentation.Examples": {
          "Description": "Egy AtScale-kockában listázza a kockaadatokat.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Adatok importálása az Azure Data Explorerből (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Adatokat importál az Ön Azure Data Explorer- (Kusto-) példányából",
        "Documentation.Examples": [
          {
            "Description": "A Storm-események információit tartalmazó táblát adja vissza",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "A „súgó” fürtben lévő „Samples” adatbázisból származó Storm-események táblája"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "Adja meg az Azure DevOps Analytics szolgáltatás URL-címét.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Az Azure DevOps Analytics szolgáltatás URL-címéről letöltött tartalmakat adja vissza bináris értékként. A függvény különböző vállalatokhoz különböző hitelesítő adatokat használ."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Services-csatorna",
        "Documentation.DisplayName": "Azure DevOps Services-csatorna",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Az Azure DevOps által kínált OData-csatornák tábláját adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "Adja meg a regisztrációhoz társított Azure Enterprise REST API-végpont URL-címét",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Az elérhető hónapok és jelentések listáját adja vissza az Azure Enterprise API-ból",
        "Documentation.Name": "Adatok importálása az Azure Enterprise-ból",
        "Documentation.Examples": [
          {
            "Description": "Az AzureEnterprise.Tables függvény használata és navigálás egy adott értékhez az eredmények megszerzése érdekében.",
            "Code": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents",
            "Result": "Tábla"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "Kezdő lekérdezésmintákért lásd: https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli.",
        "Documentation.Examples": [
          {
            "Description": "Egy olyan táblát ad vissza, amely a resources felhasználói lekérdezés lekérdezési eredményeit tartalmazza",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Azure Spark-példányban lévő táblák listázása.",
        "Documentation.LongDescription": "Azure Spark-példányban lévő táblák listázása.",
        "Documentation.Examples": [
          {
            "Description": "Azure Spark-példányban lévő táblák listázása.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "Egy Azure-tárolócsoportbeli fiók tárolóit tartalmazó navigációs tábla visszaadása.",
        "Documentation.LongDescription": "Egy navigációs táblát ad vissza az Azure-tárfiókból, amely a fiók URL-címén (<code>account</code>) talált minden egyes tárolóhoz tartalmaz egy sort. Az egyes sorokban hivatkozás található a tárolóblobokra. A(z) <code>options</code> megadásával vezérelhetők a következő beállítások:\r\n    <ul>\r\n<li><code>BlockSize</code> : Az adatfogyaszt&#243;ra val&#243; v&#225;rakoz&#225;s előtt beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>RequestSize</code> : A kiszolg&#225;l&#243;ra egyetlen HTTP-k&#233;relemben beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A ConcurrentRequests be&#225;ll&#237;t&#225;s az adatok gyorsabb let&#246;lt&#233;s&#233;t t&#225;mogatja a p&#225;rhuzamosan v&#233;gzett k&#233;relmek sz&#225;m&#225;nak megad&#225;s&#225;val, a mem&#243;ria kihaszn&#225;lts&#225;g&#225;nak &#225;r&#225;n. A sz&#252;ks&#233;ges mem&#243;ria (ConcurrentRequest * RequestSize). Az alap&#233;rtelmezett &#233;rt&#233;k 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Visszaad egy navigációs táblát, amely az Azure Data Lake Storage-ban lévő megadott tárolóban és annak almappáiban található dokumentumokat tartalmazza.",
        "Documentation.LongDescription": "Visszaad egy navigációs táblát, amely egy Azure Data Lake Storage-fájlrendszerben lévő, <code>endpoint</code> URL-címen elérhető fiók megadott tárolójában és annak almappáiban található dokumentumokat tartalmazza. A(z) <code>options</code> megadásával vezérelhetők a következő beállítások:\r\n    <ul>\r\n<li><code>BlockSize</code> : Az adatfogyaszt&#243;ra val&#243; v&#225;rakoz&#225;s előtt beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>RequestSize</code> : A kiszolg&#225;l&#243;ra egyetlen HTTP-k&#233;relemben beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A ConcurrentRequests be&#225;ll&#237;t&#225;s az adatok gyorsabb let&#246;lt&#233;s&#233;t t&#225;mogatja a p&#225;rhuzamosan v&#233;gzett k&#233;relmek sz&#225;m&#225;nak megad&#225;s&#225;val, a mem&#243;ria kihaszn&#225;lts&#225;g&#225;nak &#225;r&#225;n. A sz&#252;ks&#233;ges mem&#243;ria (ConcurrentRequest * RequestSize). Az alap&#233;rtelmezett &#233;rt&#233;k 16.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy a rendszer a f&#225;jlokat egy faszerű k&#246;nyvt&#225;rn&#233;zetben adja-e vissza vagy egy egyszerű list&#225;ban. Az alap&#233;rtelmezett &#233;rt&#233;k a hamis.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "Egy olyan navigációs táblát ad vissza, amely egy Azure-tároló megadott fiókjában található táblákat tartalmazza.",
        "Documentation.LongDescription": "Egy olyan navigációs táblát ad vissza, amely a fiók URL-címében (<code>account</code>) található táblák sorait tartalmazza egy Azure Storage-tárból. Minden sor az Azure-táblára mutató hivatkozást tartalmaz. A további tulajdonságok megadásához egy választható rekordparamétert (<code>options</code>) lehet megadni. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>Timeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;nak k&#252;ld&#246;tt k&#233;r&#233;st. Az alap&#233;rtelmezett &#233;rt&#233;k forr&#225;sspecifikus.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight az AKS Trinóban"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "Ez a függvény nem érhető el, mert .NET 4.5 szükséges hozzá.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (örökölt)",
        "Documentation.Caption": "Common Data Service (örökölt)",
        "Documentation.LongDescription": "Csatlakozzon a Common Data Service-példányhoz (Dynamics 365 és PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "A CSV-dokumentum tartalmát adja vissza táblaként.",
        "Documentation.LongDescription": "Táblaként adja vissza a CSV-dokumentum tartalmát.\r\n    <ul>\r\n      <li>\r\n        A(z) <code>columns</code> lehet null, az oszlopok száma, oszlopnevek listája, táblatípus vagy beállításrekord.\r\n      </li>\r\n      <li>\r\n        A(z) <code>delimiter</code> lehet egyetlen karakter, karakterek listája, vagy a <code>\"\"</code> érték, amely azt jelzi, hogy a sorokat egymást követő térköz karakterekkel kell elválasztani. Alapértelmezett: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        A(z) <code>extraValues</code> támogatott értékeit az <code>ExtraValues.Type</code> tartalmazza.\r\n      </li>\r\n      <li>\r\n        A(z) <code>encoding</code> határozza meg a szöveg kódolási típusát.\r\n      </li>\r\n    </ul>\r\n\r\n    Ha a(z) <code>columns</code> rendelkezik meghatározott rekorddal (és a(z) <code>delimiter</code>, <code>extraValues</code>, illetve <code>encoding</code> értéke null), akkor a következő rekordmezők lehetnek megadva:\r\n    <ul>\r\n      <li>\r\n        <code>Elválasztó karakter</code>: Az oszlop elválasztó karaktere. Alapértelmezett: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Oszlopok</code>: Lehet null, az oszlopok száma, oszlopnevek listája vagy táblatípus. Ha az oszlopok száma alacsonyabb, mint a bemenetben szereplő szám, a további oszlopok nem lesznek figyelembe véve. Ha az oszlopok száma magasabb, mint a bemenetben szereplő szám, a további oszlopok értéke null lesz. Ha nincs megadva, az oszlopok számát a bemenet tartalma határozza meg.\r\n      </li>\r\n      <li>\r\n        <code>Kódolás</code>: A fájl szövegkódolása. Alapértelmezett: 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle</code>: Az idézőjelek kezelésének módját adja meg.\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (alapértelmezett): A mezőkben lévő idézőjelek csak akkor számítanak, ha közvetlenül egy elválasztó karakter után állnak.\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: A mezőkben lévő idézőjelek mindig számítanak, a helyüktől függetlenül.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code>: Az idézőjelek között álló szóközök kezelésének módját adja meg.\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.None</code> (alapértelmezett): A rendszer minden sortörést az aktuális sor végeként kezel, még akkor is, ha idézőjelek között álló értékben szerepel.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code>: A rendszer az idézőjelek között álló sortöréseket az adatok részeként kezeli, nem pedig az aktuális sor végeként.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "CSV-szöveg feldolgozása oszlopfejlécek nélkül",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "Az elérhető dimenziók készletét tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "A(z) <code>cube</code> kockában elérhető dimenziók készletét tartalmazó táblát ad vissza. Mindegyik dimenzió a dimenzióattribútumok készletét tartalmazó tábla lesz, és mindegyik dimenzióattribútumnak egy oszlop felel meg a dimenziótáblában. A dimenziók kibontásához a Cube.AddAndExpandDimensionColumn függvény használható a kockában. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "Táblák egymásba ágyazott fastruktúráját adja vissza, amely az objektumok (például a dimenziók és a mértékek) megjelenítésimappa-hierarchiájának felel meg.",
        "Documentation.LongDescription": "Táblák egymásba ágyazott fastruktúráját adja vissza, amely az objektumok (például a dimenziók és a mértékek) megjelenítésimappa-hierarchiájának felel meg, és amely a következőben használható: <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "Egy táblát ad vissza, amely a kockában kibontott mértékek elérhető tulajdonságainak készletét tartalmazza.",
        "Documentation.LongDescription": "Egy táblát ad vissza, amely a kockában kibontott mértékek elérhető tulajdonságainak készletét tartalmazza.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "Az elérhető mértékek készletét tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "A <code>cube</code> elérhető mértékeinek készletét tartalmazó táblát ad vissza.\r\n    Mindegyik mérték egy-egy függvényként van ábrázolva. A mértékek a Cube.AddMeasureColumn függvénnyel alkalmazhatók a kockára.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "Egy, az adatkockára alkalmazható paraméterkészletet tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "Egy táblát ad vissza, amely tartalmazza a következőre alkalmazható paraméterek készletét: <code>cube</code>. Minden paraméter egy meghívható függvény, amellyel lekérhető a(z) <code>cube</code>az alkalmazott paraméterrel és argumentumokkal.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "Egy táblát ad vissza, amely a kockában kibontott dimenziók elérhető tulajdonságkészletét tartalmazza.",
        "Documentation.LongDescription": "Egy táblát ad vissza, amely a kockában kibontott dimenziók elérhető tulajdonságkészletét tartalmazza.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Adja meg Azure Data Lake Storage Gen1-fiókja URL-címét.",
        "Documentation.LongDescription": "Visszaad egy táblát, amelyben szerepel egy sor minden mappához és fájlhoz, amely az Azure Data Lake Storage Gen1 <code>url</code> címén található. Minden egyes sor tartalmazza a mappa vagy a fájl tulajdonságait, valamint egy, a tartalmukra mutató hivatkozást."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Adja meg Azure Data Lake Storage-fiókja URL-címét.",
        "Documentation.LongDescription": "Visszaad egy táblát, amelyben szerepel egy sor minden fájlhoz, amely az Azure Data Lake Storage Gen1 <code>url</code> címén található. Minden egyes sor tartalmazza a fájl tulajdonságait, valamint egy, a tartalmára mutató hivatkozást."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL API)",
        "Documentation.Description": "Adja meg egy Azure Cosmos DB-fiók URL-címét.",
        "Documentation.LongDescription": "Az Azure Cosmos DB adatbázisok tábláját adja vissza a(z) <code>url</code> URL-címen. Ha a <code>database</code> értéket adja meg, a rendszer a gyűjtemények tábláját adja vissza. Ezenfelül, ha megadja a <code>Query</code> mezőt az <code>options</code> szakaszban, akkor a rendszer a megadott adatbázison és/vagy gyűjteményen végrehajtott lekérdezés eredményét adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV370",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV370(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "Adja meg a Dynamics 365 Business Central (helyszíni) OData-szolgáltatásvégpontjának URL-címét.",
        "Documentation.DisplayName": "Dynamics 365 Business Central (helyszíni)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (helyszíni)",
        "Documentation.LongDescription": "A vonatkozó Dynamics 365 Business Central (helyszíni)-adatokat tartalmazó táblát adja vissza. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "Adja meg a Dynamics NAV OData-szolgáltatásvégpontjának URL-címét.",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "A vonatkozó Dynamics NAV-adatokat tartalmazó táblát adja vissza. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Az Essbase-példányokban lévő kockákat adja vissza az Essbase-kiszolgáló által csoportosítva.",
        "Documentation.LongDescription": "Az Essbase-kiszolgáló által csoportosított kockák tábláját adja vissza egy, a(z) <code>url</code> APS-kiszolgálón futó Essbase-példányból. A(z) <code>options</code> választható rekordparaméter megadásával szabályozhatja az alábbi beállításokat:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Az Excel-munkafüzet tartalmát adja vissza.",
        "Documentation.LongDescription": "Az Excel-munkafüzet tartalmát adja vissza.\r\n    <ul>\r\n     <li> A(z) <code>useHeaders</code> lehet null értékű vagy logikai (igaz/hamis) érték, amely azt adja meg, hogy a rendszer fejlécként kezelje-e a visszaadott táblázatok első sorát, vagy pedig beállításrekordról van szó. Alapértelmezett érték: hamis.</li>\r\n     <li> A(z) <code>delayTypes</code> lehet null értékű vagy logikai (igaz/hamis) érték, amely azt adja meg, hogy a visszaadott táblázatok oszlopai nem típusosak maradjanak-e. Alapértelmezett érték: hamis.</li>\r\n    </ul>\r\n\r\n    Ha meg van adva rekord a(z) <code>useHeaders</code> esetében (és a(z) <code>delayTypes</code> null értékű), a következő rekordmezők jelenhetnek meg:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: Lehet null értékű vagy logikai (igaz/hamis) érték, amely azt adja meg, hogy a rendszer fejlécként kezelje-e a visszaadott táblázatok első sorát. Alapértelmezett érték: hamis.</li>\r\n     <li> <code>DelayTypes</code>: Lehet null értékű vagy logikai (igaz/hamis) érték, amely azt adja meg, hogy a visszaadott táblázatok oszlopai nem típusosak maradjanak-e. Alapértelmezett érték: hamis.</li>\r\n     <li> <code>InferSheetDimensions</code>: Lehet null értékű vagy logikai (igaz/hamis) érték, amely azt adja meg, hogy a munkafüzet adatokat tartalmazó területét a rendszer a munkafüzet beolvasásával következtesse-e ki, a méretek metaadatainak a fájlból történő beolvasása helyett. Ez olyan esetekben lehet hasznos, amikor a méretek metaadatai nem megfelelőek. Vegye figyelembe, hogy ez a lehetőség csak Open XML Excel-fájlok esetében támogatott, régi Excel-fájlok esetében nem. Alapértelmezett érték: hamis.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "A Munka1 tartalmának visszaadása egy Excel-munkafüzetből.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "Egy olyan táblát ad vissza, amely a megadott mappában levő fájlok és mappák tulajdonságait és tartalmát tartalmazza.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely a(z) <code>path</code> mappában található minden egyes mappához és fájlhoz tartalmaz egy sort. Minden sor tartalmazza a mappa vagy fájl tulajdonságait, valamint a tartalmára mutató hivatkozást. A(z) <code>options</code> paraméter jelenleg csak belső használatra szolgál.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "Egy olyan táblát ad vissza, amely a megadott mappában és annak almappáiban levő fájlok tulajdonságait és tartalmát tartalmazza.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely a(z) <code>path</code> mappában található minden egyes mappához és annak almappáihoz tartalmaz egy sort. Minden sor tartalmazza a fájl tulajdonságait, valamint a tartalmára mutató hivatkozást. A(z) <code>options</code> paraméter jelenleg csak belső használatra szolgál.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Adatok importálása egy Google BigQuery-adatbázisból az Azure AD használatával",
        "Documentation.LongDescription": "\r\n      Egy olyan táblát ad vissza, amely a Google BigQueryben elérhető projekteket sorolja fel a <code>Billing Project ID</code> Azure AD-jének használatával. Megadható egy választható rekordparaméter (<code>options</code>) is a következő beállítások meghatározásához:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Az időtartam, amelynek a letelte után a rendszer felhagy a kiszolgálóhoz történő csatlakozásra tett kísérlettel. Az alapértelmezett érték az ODBC-kapcsolat időtúllépésének az értéke.</li>\r\n        <li><code>CommandTimeout</code>: Az időtartam, ameddig a kiszolgálóoldali lekérdezés futhat, mielőtt megszakadna.</li>\r\n        <li><code>UseStorageApi</code>: Megadja, hogy használja-e BigQuery Storage API-t a nagy eredményhalmazok esetében. Állítsa „hamis” értékre, ha nem kívánja használni a Storage API-t API</li>\r\n        <li><code>AudienceUri</code>: Ez a célközönség URI-azonosítója, amelyet az ODBC-illesztőprogram a jogkivonatcserére vonatkozó kérelmeihez használhat. Ennek a mezőnek teljes URI-azonosítónak kell lennie (vagyis //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/aad-provider), ahol a pool_id a munkaerőkészlet azonosítására szolgáló globálisan egyedi név.</li>\r\n      </ul>\r\n     A rekordparaméter a következőképpen adható meg: [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "A Google BigQuery-ben elérhető projektek felsorolása az Azure AD használatával",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Google Táblázatok",
        "Documentation.Caption": "Google Táblázatok",
        "Documentation.Description": "Adatokat importál a Google Táblázatokból",
        "Documentation.LongDescription": "Adatokat importál a Google Táblázatokból"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "Egy Azure-tárolócsoportbeli fiók tárolóit tartalmazó navigációs tábla visszaadása.",
        "Documentation.LongDescription": "A függvény megvizsgálja egy Azure-tárolócsoport <code>account</code> paraméterben megadott URL-címen található fiókját, és előállít egy navigációs táblát, amelynek minden sora a fiók egyik tárolóját írja le, és egy hivatkozást is tartalmaz az érintett tárolóblobra.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "Egy Azure-tárolócsoportbeli fiók tárolóit tartalmazó navigációs tábla visszaadása.",
        "Documentation.LongDescription": "A függvény megvizsgálja egy Azure-tárolócsoport <code>account</code> paraméterben megadott URL-címen található fiókját, és előállít egy navigációs táblát, amelynek minden sora a fiók egyik tárolóját írja le, és egy hivatkozást is tartalmaz az érintett tárolóblobra.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "Egy olyan táblát ad vissza, amely egy Hadoop-fájlrendszer megadott mappájában levő fájlok és mappák tulajdonságait és tartalmát tartalmazza.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely egy sort tartalmaz egy Hadoop-fájlrendszer következő URL-címen levő mappájában található mindegyik mappához és fájlhoz: <code>url</code>. Mindegyik sor tartalmazza az adott mappa vagy fájl tulajdonságait és a tartalmára mutató hivatkozást.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "Egy olyan táblát ad vissza, amely egy Hadoop-fájlrendszer megadott mappájában és annak almappáiban levő fájlok tulajdonságait és tartalmát tartalmazza.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely egy sort tartalmaz egy Hadoop-fájlrendszer következő URL-címen levő mappájában és annak almappáiban található mindegyik fájlhoz: <code>url</code>. Mindegyik sor tartalmazza az adott fájl tulajdonságait és a tartalmára mutató hivatkozást.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Adatok importálása Impala-fürtből",
        "Documentation.LongDescription": "Adatok importálása Impala-fürtből <code>server</code>. Ha nincs megadva a port, az alapértelmezett 21050-es port lesz használatban.",
        "Documentation.Examples": [
          {
            "Description": "Egy Impala-fürtben lévő táblák felsorolása.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Adatokat importál az Azure Data Explorerről (Kustóból)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Adatokat importál az Ön Azure Data Explorer- (Kusto-) példányából",
        "Documentation.Examples": [
          {
            "Description": "A Storm-események információit tartalmazó táblát adja vissza",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "A „súgó” fürtben lévő „Samples” adatbázisból származó Storm-események táblája"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "LinkedIn Sales Navigator",
        "Documentation.LongDescription": "LinkedIn Sales Navigator",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "Egy táblát ad vissza a MailChimp-végpontból származó adatokkal.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "Hívást küld a MailChimp API-ra, és az eredményül kapott adatkészletet egy táblában adja vissza. Automatikusan átlapozza az eredményeket. Az opcionális entityName paraméter olyan API-végpontok esetén használható, ahol a gyökérszintű végpont és a JSON-válaszban szereplő fő entityName nem egyezik.",
        "Documentation.Examples": [
          {
            "Description": "Lekér egy táblát a MailChimp API listáinak végpontjából származó adatokkal.",
            "Code": "MailChimp.Collection(\"lists\")",
            "Result": "Listaadatokat tartalmazó tábla."
          },
          {
            "Description": "Lekér egy táblát a MailChimp API kampánymappáinak végpontjából származó adatokkal.",
            "Code": "MailChimp.Collection(\"campaign-folders\", \"folders\")",
            "Result": "Kampánymappaadatokat tartalmazó tábla."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "Nyers válaszeredményeket ad vissza egy MailChimp API-végpontból.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "Hívást küld a MailChimp API-ra, és a nyers választ adja vissza.",
        "Documentation.Examples": [
          {
            "Description": "Nyers adatokat ad vissza egy adott kampány jelentésekkel/kattintási információkkal kapcsolatos MailChimp API-végpontjából.",
            "Code": "MailChimp.Instance(\"reports/{campaign_id}/click-details\")",
            "Result": "Nyers kattintási adatok az adott kampányból."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy for Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "Speciális lekérdezési funkciókat biztosítanak.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "Speciális lekérdezési funkciókat biztosítanak.",
        "Documentation.Examples": [
          {
            "Description": "Ha a mai dátum 2017. 6. 15., lekéri a 2017. 5. 1. és 2017. 6. 15. közötti adatok összesítését",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2017. 5. 1. és 2017. 6. 15. közötti összefoglaló adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 6. 15., a 2017. áprilisi összefoglaló adatokat kéri le.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2017. 4. 1. és 2017. 4. 30. közötti adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 6. 15., a 2017. áprilistól a mai napig tartó összefoglaló adatokat kéri le.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2017. 4. 1. és 2017. 6. 15. közötti adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 6. 15., a múlt decembertől a mai napig tartó összefoglaló adatokat kéri le ",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2016. 12. 1. és 2017. 2. 28 közötti adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 6. 15., az elmúlt 18 havi piactéri díjakat kéri le",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2015. 12. 1. és 2017. 6. 15. közötti adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 6. 15., a 2017. júniusi és 2017. májusi részletes díjakat kéri le",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2017. 5. 1. és 2017. 6. 15. közötti adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 07. 03., a 2016. júliusi részletes díjakat kéri le",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2016. 07. 01. és 2016. 07. 31. közötti adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 7. 13., az elmúlt 10 hónap és a folyó hónap 13 napjának egyenlegösszesítéseit kéri le",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "A függvény a 2016. 9. 1. és 2017. 7. 13. közötti adatokat adja vissza"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Microsoft Azure Consumption Insights",
        "Documentation.Description": "Microsoft Azure Consumption Insights",
        "Documentation.DisplayName": "Microsoft Azure Consumption Insights",
        "Documentation.LongDescription": "Microsoft Azure Consumption Insights",
        "Documentation.Name": "Microsoft Azure Consumption Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "Az ODBC-adatforrásban elérhető SQL-táblák és -nézetek tábláját adja vissza. ",
        "Documentation.LongDescription": "SQL-táblák és -nézetek tábláját adja vissza a(z) <code>connectionString</code> kapcsolati sztring által meghatározott ODBC-adatforrásból. A(z) <code>connectionString</code> szöveg vagy tulajdonságérték-párok rekordja lehet. A tulajdonságérték szöveg vagy szám lehet. A(z) <code>options</code> elhagyható rekordparaméterrel további tulajdonságok határozhatók meg. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k 15 m&#225;sodperc.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy l&#233;trej&#246;jjenek-e SQL Server-kompatibilis kapcsolatisztring-be&#225;ll&#237;t&#225;sok a Windows-hiteles&#237;t&#233;shez. Az alap&#233;rtelmezett &#233;rt&#233;k true (igaz).</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Az SQL-táblákat és -nézeteket küldi vissza a megadott kapcsolati sztringből.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "Az OLE DB-adatforrásból származó SQL-táblák és nézetek tábláját adja vissza.",
        "Documentation.LongDescription": "SQL-táblák és -nézetek tábláját adja vissza a(z) <code>connectionString</code> kapcsolati sztring által meghatározott OLE DB-adatforrásból. A(z) <code>connectionString</code> szöveg vagy tulajdonságérték-párok rekordja lehet. A tulajdonságértékek szövegek vagy számok lehetnek. Megadható egy <code>options</code> választható rekordparaméter további tulajdonságok meghatározásához. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a true, azaz igaz).</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy l&#233;trej&#246;jjenek-e SQL Server-kompatibilis kapcsolatisztring-be&#225;ll&#237;t&#225;sok a Windows-hiteles&#237;t&#233;shez. Az alap&#233;rtelmezett &#233;rt&#233;k true (igaz).</li>\r\n</ul>\r\n\r\n    A rekordparaméter meghatározása lehet például [option1 = value1, option2 = value2…] vagy [Query = \"select ...\"].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Az Oracle-adatbázisban elérhető SQL-táblák és -nézetek tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>server</code> kiszolgálón lévő Oracle-adatbázisból származó SQL-táblák és nézetek tábláját adja vissza. A portot megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n</ul>\r\n\r\n    A rekordparaméter például a következők szerint adható meg: [lehetőség1 = érték1, lehetőség2 = érték2...] vagy például [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "Egy PDF-fájlban talált táblákat ad vissza.",
        "Documentation.LongDescription": "A következőben található összes táblát visszaadja: <code>pdf</code>. Megadható egy választható rekordparaméter (<code>options</code>) további tulajdonságok meghatározásához. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>Implementation</code> : A t&#225;bl&#225;k azonos&#237;t&#225;s&#225;hoz haszn&#225;land&#243; algoritmus verzi&#243;ja. A r&#233;gi verzi&#243;k csak a visszamenőleges kompatibilit&#225;s &#233;rdek&#233;ben &#233;rhetők el, hogy a r&#233;gi lek&#233;rdez&#233;sek ne v&#225;ljanak haszn&#225;lhatatlann&#225; az algoritmusfriss&#237;t&#233;sek miatt. Mindig a leg&#250;jabb verzi&#243;nak kell a legjobb eredm&#233;nyt adnia. Az &#233;rv&#233;nyes &#233;rt&#233;kek a k&#246;vetkezők: „1.3”, „1.2”, „1.1“ vagy null.</li>\r\n<li><code>StartPage</code> : Meghat&#225;rozza a vizsg&#225;land&#243; oldaltartom&#225;ny első oldal&#225;t. Alap&#233;rtelmezett &#233;rt&#233;k: 1.</li>\r\n<li><code>EndPage</code> : Meghat&#225;rozza a vizsg&#225;land&#243; oldaltartom&#225;ny utols&#243; oldal&#225;t. Alap&#233;rtelmezett &#233;rt&#233;k: a dokumentum utols&#243; oldala.</li>\r\n<li><code>MultiPageTables</code> : Meghat&#225;rozza, hogy az egym&#225;st k&#246;vető lapokon l&#233;vő, hasonl&#243; t&#225;bl&#225;k automatikusan egyes&#237;tve lesznek-e egyetlen t&#225;bl&#225;ba. Alap&#233;rtelmezett &#233;rt&#233;k: igaz.</li>\r\n<li><code>EnforceBorderLines</code> : Meghat&#225;rozza, hogy a szeg&#233;lyvonalakat mindig cellahat&#225;rk&#233;nt haszn&#225;lja-e a rendszer (ha igaz), vagy hogy t&#246;bb m&#225;s v&#233;grehajt&#225;si m&#243;dos&#237;t&#243;val egy&#252;tt haszn&#225;lja őket a cellahat&#225;rok meghat&#225;roz&#225;s&#225;hoz (ha hamis). Alap&#233;rtelmezett &#233;rt&#233;k: hamis.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Adatok elérése",
        "Documentation.Examples": [
          {
            "Description": "Visszaadja a sample.pdf fájlban található táblázatokat.",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "Adja meg Planview Projectplace-fiókja URL-címét.",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "A vonatkozó Planview Projectplace-adatokat tartalmazó táblát adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "Рŷťнøŉ şĉѓĩþţ",
        "Documentation.Description": "Ëхèĉυτêѕ Рутђôή śčŗϊρт âⁿð яèţΰŗиš đāτд ƒѓåmēś",
        "Documentation.Examples": {
          "Description": "Ëхèĉυτêѕ Рутђôή śčŗϊρт âⁿð яèţΰŗиš đāτд ƒѓåmēś",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "Ŕ šĉŗîрτ",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "Egy olyan táblát ad vissza, amelyben mindegyik sor a bemeneti rekord egyik mezőjének nevét és értékét tartalmazza.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely a <code>Name</code> és a <code>Value</code> oszlopból áll, és a(z) <code>record</code> mindegyik mezőjéhez tartalmaz egy sort.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Visszaadja a táblát a rekordból.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "Egy SAP HANA-adatbázis csomagjait adja vissza.",
        "Documentation.LongDescription": "Többdimenziós csomagok tábláját adja vissza a(z) <code>server</code> SAP HANA-adatbázisból. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>Distribution</code> : Egy SapHanaDistribution, amely a „Distribution” tulajdons&#225;g &#233;rt&#233;k&#233;t adja meg a kapcsolati sztringben. Az utas&#237;t&#225;s-&#250;tvonaltervez&#233;s egy olyan m&#243;dszer, amellyel ki lehet &#233;rt&#233;kelni egy elosztott rendszer megfelelő kiszolg&#225;l&#243;-csom&#243;pontj&#225;t az utas&#237;t&#225;s v&#233;grehajt&#225;sa előtt. Az alap&#233;rtelmezett &#233;rt&#233;k a SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : Megadja a haszn&#225;land&#243; SAP HANA &#246;sszek&#246;tő implement&#225;ci&#243;j&#225;t.</li>\r\n<li><code>EnableColumnBinding</code> : Az adatok lek&#233;r&#233;sekor egy SAP HANA eredm&#233;nyhalmaz oszlopaihoz k&#246;ti a v&#225;ltoz&#243;kat. A valamivel magasabb mem&#243;riakihaszn&#225;lts&#225;g &#225;r&#225;n esetleges javul&#225;s &#233;rhető el a teljes&#237;tm&#233;nyben. Az alap&#233;rtelmezett &#233;rt&#233;k hamis.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k 15 m&#225;sodperc.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "Egy olyan táblát ad vissza, amely egy SharePoint-webhely tartalmából áll.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely a megadott SharePoint-webhelyen (<code>url</code>) talált minden egyes mappához és dokumentumhoz tartalmaz egy sort. Minden egyes sor tartalmazza a mappa vagy a fájl tulajdonságait, valamint egy, a tartalmukra mutató hivatkozást. A(z) <code>options</code> elemet a következő lehetőségek meghatározására lehet megadni:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Egy sz&#225;m (14 vagy 15) vagy az „Auto” sz&#246;veg, amely a webhelyhez haszn&#225;latos SharePoint API-verzi&#243;t adja meg. Ha nincs megadva, a 14-es verzi&#243;t haszn&#225;lja a rendszer. Amikor az Auto sz&#246;veg van megadva, a rendszer lehetős&#233;g szerint automatikusan &#233;szleli a kiszolg&#225;l&#243;verzi&#243;t, egy&#233;bk&#233;nt alap&#233;rtelmez&#233;s szerint a 14-es verzi&#243;t haszn&#225;lja. Az angolt&#243;l elt&#233;rő nyelvű SharePoint-webhelyekhez legal&#225;bb 15-&#246;s verzi&#243;t kell haszn&#225;lni.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "Egy olyan táblát ad vissza, amely egy SharePoint-webhelyen levő dokumentumokból áll.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely a megadott SharePoint-webhelyen (<code>url</code>) vagy az almappákban talált minden egyes dokumentumhoz tartalmaz egy sort. Minden egyes sor tartalmazza a mappa vagy a fájl tulajdonságait, valamint egy, a tartalmukra mutató hivatkozást. A(z) <code>options</code> elemet a következő lehetőségek meghatározásához lehet megadni:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Egy sz&#225;m (14 vagy 15) vagy az „Auto” sz&#246;veg, amely a webhelyhez haszn&#225;latos SharePoint API-verzi&#243;t adja meg. Ha nincs megadva, a 14-es verzi&#243;t haszn&#225;lja a rendszer. Amikor az Auto sz&#246;veg van megadva, a rendszer lehetős&#233;g szerint automatikusan &#233;szleli a kiszolg&#225;l&#243;verzi&#243;t, egy&#233;bk&#233;nt alap&#233;rtelmez&#233;s szerint a 14-es verzi&#243;t haszn&#225;lja. Az angolt&#243;l elt&#233;rő nyelvű SharePoint-webhelyekhez legal&#225;bb 15-&#246;s verzi&#243;t kell haszn&#225;lni.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "Egy SharePoint-lista tartamát tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza, amely a megadott SharePoint-listán (<code>url</code>) talált minden egyes listaelemhez tartalmaz egy sort. Minden egyes sor tartalmazza a lista tulajdonságait. A(z) <code>options</code> elemet a következő lehetőségek meghatározásához lehet megadni:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Egy sz&#225;m (14 vagy 15) vagy az „Auto” sz&#246;veg, amely a webhelyhez haszn&#225;latos SharePoint API-verzi&#243;t adja meg. Ha nincs megadva, a 14-es verzi&#243;t haszn&#225;lja a rendszer. Amikor az Auto sz&#246;veg van megadva, a rendszer lehetős&#233;g szerint automatikusan &#233;szleli a kiszolg&#225;l&#243;verzi&#243;t, egy&#233;bk&#233;nt alap&#233;rtelmez&#233;s szerint a 14-es verzi&#243;t haszn&#225;lja. Az angolt&#243;l elt&#233;rő nyelvű SharePoint-webhelyekhez legal&#225;bb 15-&#246;s verzi&#243;t kell haszn&#225;lni.</li>\r\n<li><code>Implementation</code> : V&#225;laszthat&#243;. A SharePoint-&#246;sszek&#246;tő haszn&#225;land&#243; verzi&#243;j&#225;t hat&#225;rozza meg. Az elfogadott &#233;rt&#233;kek a k&#246;vetkezők: „2.0” vagy null. Ha az &#233;rt&#233;k „2.0”, a rendszer a SharePoint-&#246;sszek&#246;tő 2.0-s implement&#225;ci&#243;j&#225;t haszn&#225;lja. Ha az &#233;rt&#233;k null, a rendszer a SharePoint-&#246;sszek&#246;tő eredeti implement&#225;ci&#243;j&#225;t haszn&#225;lja.</li>\r\n<li><code>ViewMode</code> : V&#225;laszthat&#243;. Ez a be&#225;ll&#237;t&#225;s csak a 2.0-s implement&#225;ci&#243; eset&#233;n &#233;rv&#233;nyes. Az elfogadott &#233;rt&#233;kek a k&#246;vetkezők: „Mind” &#233;s „Alap&#233;rtelmezett”. Ha nincs megadva &#233;rt&#233;k, a rendszer a „Mind” &#233;rt&#233;ket &#225;ll&#237;tja be. Ha a „Mind” &#233;rt&#233;k van megadva, a n&#233;zet az &#246;sszes felhaszn&#225;l&#243; &#225;ltal l&#233;trehozott &#233;s rendszer &#225;ltal defini&#225;lt oszlopot tartalmazza. Ha az „Alap&#233;rtelmezett” &#233;rt&#233;k van megadva, a n&#233;zet megegyezik azzal, amit a felhaszn&#225;l&#243; l&#225;t, amikor online n&#233;zi meg a list&#225;t abban a n&#233;zetben, amelyet a felhaszn&#225;l&#243; alap&#233;rtelmezettk&#233;nt &#225;ll&#237;tott be a be&#225;ll&#237;t&#225;saiban. Ha a felhaszn&#225;l&#243; m&#243;dos&#237;tja az alap&#233;rtelmezett n&#233;zetet a felhaszn&#225;l&#243; &#225;ltal l&#233;trehozott vagy a rendszer &#225;ltal defini&#225;lt oszlopok hozz&#225;ad&#225;s&#225;val vagy elt&#225;vol&#237;t&#225;s&#225;val, vagy egy &#250;j n&#233;zet l&#233;trehoz&#225;s&#225;val &#233;s alap&#233;rtelmezettk&#233;nt val&#243; be&#225;ll&#237;t&#225;s&#225;val, ezek a m&#243;dos&#237;t&#225;sok az &#246;sszek&#246;tőn kereszt&#252;l propag&#225;lva lesznek.</li>\r\n<li><code>DisableAppendNoteColumns</code> : Megakad&#225;lyozza, hogy az &#246;sszek&#246;tő k&#252;l&#246;n v&#233;gpontot haszn&#225;ljon a jegyzetoszlopokhoz.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "A megadott URL-címen található tartalomból álló táblát ad vissza a SODA 2.0 API által definiált formátumban.",
        "Documentation.LongDescription": "A megadott <code>url</code> URL-címen található tartalomból álló táblát ad vissza a SODA 2.0 API által definiált formátumban. Az URL-címnek olyan érvényes, a SODA szabványnak megfelelő forrásra kell mutatnia, amely a .csv kiterjesztésre végződik.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "A függvény segítségével az 1-es verziójú SparkPost API által feltárt „Lists” (Listák) végpontok hívhatók meg. A SparkPost API a függvénnyel való meghívásakor vegye figyelembe, hogy a SparkPost API szigorú API-kvótával rendelkezik. Ha a SparkPost-kiszolgáló 429-es állapotkódot ad vissza, elérte a kvótát, és néhány pillanatot várnia kell a további hívások előtt.",
        "Documentation.Examples": [
          {
            "Description": "Egy egyoszlopos táblát ad vissza, amely az 1-es verziójú SparkPost API egyik „Lists” (Listák) végpontjáról származó adatokkal van feltöltve (részletekért lásd a SparkPost dokumentációját).",
            "Code": "Forrás = SparkPost.GetList(metrikák/kampányok)",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "A SparkPost-összekötő által feltárt beépített táblák lekérése a felhasználó által meghatározott számú napra összesített adatokkal. A táblák frissítésekor, illetve a SparkPost API az összekötővel való meghívásakor vegye figyelembe, hogy a SparkPost API szigorú API-kvótával rendelkezik. Ha a SparkPost-kiszolgáló 429-es állapotkódot ad vissza, elérte a kvótát, és néhány pillanatot várnia kell a további hívások előtt. A Number of days (Napok száma) paraméter értékének megadásakor vegye figyelembe, hogy az API csak 6 hónapnyi adatot tárol."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "Egy SQL Server-kiszolgálón levő adatbázisokat tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "Az adott SQL Server kiszolgálón (<code>server</code>) található adatbázisok tábláját adja vissza. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : A l&#233;trehozott SQL-lek&#233;rdez&#233;sben tal&#225;lhat&#243; maxdop lek&#233;rdez&#233;si z&#225;rad&#233;k &#233;rt&#233;k&#233;t meghat&#225;roz&#243; sz&#225;m.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n<li><code>MultiSubnetFailover</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza a „MultiSubnetFailover” tulajdons&#225;g &#233;rt&#233;k&#233;t a kapcsolati sztringben (az alap&#233;rtelmezett &#233;rt&#233;k a hamis).</li>\r\n<li><code>UnsafeTypeConversions</code> : Logikai (igaz/hamis) &#233;rt&#233;k. Ha Igaz, akkor a rendszer megk&#237;s&#233;rli &#225;tadni a t&#237;puskonverzi&#243;kat, ami sikertelen lehet, &#233;s a teljes lek&#233;rdez&#233;s meghi&#250;sul&#225;s&#225;t okozhatja. &#193;ltal&#225;nos haszn&#225;latra nem javasolt.</li>\r\n<li><code>ContextInfo</code> : Az egyes parancsok futtat&#225;sa előtt a CONTEXT_INFO be&#225;ll&#237;t&#225;s&#225;hoz haszn&#225;lt bin&#225;ris &#233;rt&#233;k.</li>\r\n<li><code>OmitSRID</code> : Logikai (igaz/hamis) &#233;rt&#233;k. Ha Igaz, akkor a rendszer kihagyja az SRID azonos&#237;t&#243;t Well-Known Text form&#225;tum&#250; sz&#246;veg geometriai vagy f&#246;ldrajzi t&#237;pusokb&#243;l val&#243; elő&#225;ll&#237;t&#225;sakor.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely igaz &#233;rt&#233;k eset&#233;n enged&#233;lyezi az adatb&#225;zisok k&#246;z&#246;tti lek&#233;rdez&#233;s&#225;tad&#225;st ugyanazon a kiszolg&#225;l&#243;n. Az alap&#233;rtelmezett &#233;rt&#233;k a hamis.</li>\r\n</ul>\r\n\r\n    A rekordparaméter például a következők szerint adható meg: [lehetőség1 = érték1, lehetőség2 = érték2...] vagy például [Query = \"select ...\"].\r\n    <br>\r\n    Nem támogatja az SQL-lekérdezések beállítását a kiszolgálón történő futtatáshoz. SQL-lekérdezés futtatása helyett használja a következőt: <code>Sql.Database</code>.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "Hívást indít a Stripe API-ra. Az elindított API-hívások száma korlátozható.",
        "Documentation.LongDescription": "Hívást indít a https://api.stripe.com/v1/<code>method</code> címen található Stripe API-ra. A <code>query</code> rekorddal további paramétereket továbbíthat, a <code>pageLimit</code> elemmel pedig az API-kérések számát korlátozhatja, ha szeretné. A rendszer először a legfrissebb adatokat adja vissza. Ha a <code>pageLimit</code> nincs megadva, minden adatot visszaad. A Stripe 2015-10-16-os verziója van használatban.",
        "Documentation.Examples": [
          {
            "Description": "A díjtételekre vonatkozó adatokat adja vissza.",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "Az aktuális Stripe-fiók díjtételekre vonatkozó adatait tartalmazó tábla"
          },
          {
            "Description": "Egy oldalnyi, díjtételekre vonatkozó adatot ad vissza.",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "Az aktuális Stripe-fiók legutóbbi díjtételeire vonatkozó adatokat tartalmazó tábla"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "A memóriában pufferel egy táblát, elkülönítve azt a külső módosításoktól a kiértékelés során.",
        "Documentation.LongDescription": "Pufferel egy táblát a memóriában, és elkülöníti azt a külső változásoktól a kiértékelés során.\r\n    A pufferelés egyszintű. A skaláris cellaértékek kiértékelését kényszeríti, de a nem skaláris értékeket (rekordokat, listákat, táblák stb.) ugyanúgy hagyja.\r\n    <br>\r\n    <br>\r\n    Figyeljen arra, hogy a függvény használata felgyorsíthatja vagy éppen nem gyorsíthatja fel a lekérdezéseket. Bizonyos esetekben lelassíthatja a lekérdezéseket a hozzáadott \r\n    költség amiatt, ami az összes adat beolvasásával és memóriában történő tárolásával jár, ugyanúgy mint az, hogy a pufferelés megakadályozza az alsóbb rétegbeli átadást. Ha az adatokat nem kell\r\n    pufferelni, hanem csak az alsóbb rétegbeli átadást szeretné megakadályozni, használja helyette a következőt: <code>Table.StopFolding</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Töltse be egy SQL-tábla összes sorát a memóriába, hogy az alsóbb rétegbeli műveletek többé ne tudják lekérdezni az SQL-kiszolgálót.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "A táblák listájának egyesítési eredményét tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "Egy táblát ad vissza, amely a(z) <code>tables</code> táblalistán található táblák egyesítésének eredménye. A létrejövő tábla sor típusú struktúráját a(z) <code>columns</code> határozza meg, illetve ha a(z) <code>columns</code> nincs megadva, akkor a bemeneti típusok uniója.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Egyesíti a három táblát.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Három különböző struktúrájú tábla egyesítése.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Két tábla egyesítése és leképezése az adott típusba.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "Első értéksorrá minősíti vissza az oszlopfejléceket.",
        "Documentation.LongDescription": "Visszaminősíti az oszlopfejléceket (pl. oszlopneveket) első értéksorrá. Az alapértelmezett oszlopnevek „1. oszlop”, „2. oszlop” és így tovább.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Lefokozza a táblában szereplő értékek első sorát.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "Eltávolítja az ismétlődő sorokat a táblából.",
        "Documentation.LongDescription": "Eltávolítja az ismétlődő sorokat a táblázatból.\r\n    A nem kötelező <code>equationCriteria</code> paraméter határozza meg, hogy a tábla mely oszlopai legyenek tesztelve a duplikációk szempontjából. Ha a(z) <code>equationCriteria</code> nincs megadva, a rendszer az összes oszlopot teszteli.<br>\r\n    <br>\r\n    Mivel a Power Query bizonyos műveleteket időnként kiszervez háttérbeli adatforrásokhoz (más szóval „átadja“ őket), és néha optimalizálja a lekérdezéseket a(z) \r\n használatával, és így kihagyja a nem feltétlenül szükséges műveleteket, általában nincs garancia arra, hogy a rendszer mely konkrét duplikátumokat őrzi meg.\r\n    Nem feltételezhetjük például, hogy az egyedi oszlopértékeket tartalmazó első sor megmarad, és a táblázatban az alatta lévő sorok el lesznek távolítva.\r\n    Ha azt szeretné, hogy a duplikátumok eltávolítása kiszámítható módon viselkedjen, először pufferelje a táblát a <code>Table.Buffer</code> használatával.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja a tábla duplikált sorait.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "A(z) [b] oszlopban ismétlődő sorok eltávolítása a(z) <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code> táblából.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "Táblát hoz létre oszlopok és megadott értékek listájából.",
        "Documentation.LongDescription": "<code>columns</code> típusú táblát hoz létre a(z) <code>lists</code> listából, amely beágyazott listákat tartalmaz az oszlopok nevével és értékeivel.\r\n    Ha valamelyik oszlop több értéket tartalmaz a többinél, akkor a hiányzó értékek az alapértelmezett „null” értékkel lesznek feltöltve, ha az oszlopok nullázhatóak.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Egy táblát ad vissza egy listában található ügyfélnevek listája alapján. Az ügyféllista elemeinek értékei a sorok értékei lesznek, az egyes listákat pedig az oszlopok jelölik.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Tábla létrehozása adott oszloplistából és az oszlopnevek listájából.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Egy olyan táblát készít, amelyben soronként különbözőek az oszlopszámok. A hiányzó sorérték null értékű.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "Táblára alakít át egy listát úgy, hogy alkalmazza a megadott felosztási függvényt a lista összes elemére.",
        "Documentation.LongDescription": "Táblára alakít át egy listát (<code>list</code>) a nem kötelező felosztó függvény (<code>splitter</code>) a lista összes elemére való alkalmazásával. Alapértelmezésben a listát szöveges értékek listájának tekinti, melyek vesszővel vannak elválasztva. A nem kötelező <code>columns</code> paraméter lehet az oszlopok száma, az oszlopok listája vagy egy táblatípus. Megadható nem kötelező <code>default</code> és <code>extraValues</code> paraméter is.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Az alapértelmezett elválasztóval hozhat létre táblázatot listából.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "Egyéni elválasztóval hozhat létre táblázatot listából.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "A Record.FieldValues elválasztóval hozhat létre táblázatot listából.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "Táblára alakítja át a rekordok listáját.",
        "Documentation.LongDescription": "Táblára alakítja át a(z) <code>records</code> rekordok listáját.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Hozzon létre egy táblát rekordokból, rekordmezőneveket használva oszlopnevekként.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Hozzon létre egy táblát rekordokból begépelt oszlopokkal, és válassza ki az oszlopok számát.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "Egy táblát hoz létre sorértékek és opcionális oszlopok egy adott listájából",
        "Documentation.LongDescription": "Egy táblát hoz létre a(z) <code>rows</code> listából, ahol a lista egyes elemei belső listák, amelyek egyetlen sor oszlopértékeit tartalmazzák. A(z) <code>columns</code> elemhez megadható egy opcionális lista az oszlopnevekkel, egy táblatípus, vagy az oszlopok száma.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Egy olyan táblát ad vissza, amelyben a [CustomerID] oszlop értékei {1, 2}, a [Name] oszlop értékei {\"Bob\", \"Jim\"} és a [Phone] oszlop értékei {\"123-4567\", \"987-6543\"} lesznek.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Egy olyan táblát ad vissza, amelyben a [CustomerID] oszlop értékei {1, 2}, a [Name] oszlop értékei {\"Bob\", \"Jim\"} és a [Phone] oszlop értékei {\"123-4567\", \"987-6543\"} lesznek, továbbá a [CustomerID] szám, a [Name] és a [Phone] pedig szöveg típusú mezők.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "Táblát hoz létre a megadott érték(ek)ből álló oszloppal.",
        "Documentation.LongDescription": "Táblát hoz létre a megadott értéket vagy <code>value</code> értéklistát tartalmazó oszloppal. Megadható egy opcionális rekordparaméter (<code>options</code>) a következő beállítások szabályozásához:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : Egy tábla listából vagy skaláris értékből történő létrehozásához használt oszlopnév.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Tábla létrehozása az 1 értékből.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "Létrehoz egy táblát a listából.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "Tábla létrehozása az 1 értéktől, egyéni oszlopnévvel.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "Információt ad vissza egy tábla particionálásáról.",
        "Documentation.LongDescription": "Információt ad vissza egy tábla particionálásáról. Egy táblát ad vissza, amelyben minden oszlop egy partícióoszlop az eredeti táblában és minden sor egy partíciónak felel meg az eredeti táblában.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "Egy tábla oszlopainak profilját adja vissza.",
        "Documentation.LongDescription": "<p>A(z) <code>table</code> oszlopainak profilját adja vissza.</p>\r\n<p>Az egyes oszlopok esetében a következo adatokat adja vissza (ha lehetséges):\r\n<ul>\r\n  <li>minimum</li>\r\n  <li>maximum</li>\r\n  <li>átlag</li>\r\n  <li>szórás</li>\r\n  <li>szám</li>\r\n  <li>null szám</li>\r\n  <li>eltérok darabszáma</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "Új oszlopfejlécekké (azaz oszlopnevekké) lépteti elő az értékek első sorát a táblában.",
        "Documentation.LongDescription": "Új oszlopfejlécekké (azaz oszlopnevekké) lépteti elő az értékek első sorát a táblában. Alapértelmezés szerint a rendszer csak szöveges vagy számértékeket léptet elő fejléccé. Érvényes beállítások:\r\n    <div>\r\n      <code>PromoteAllScalars</code>: Ha a <code>true</code> érték van beállítva, a rendszer az első sor minden skaláris értékét fejléccé lépteti elő a <code>Culture</code> használatával, ha az meg van adva (ha nincs, a dokumentum aktuális területi beállításait használja).\r\n    A szöveggé nem alakítható értékek esetében a rendszer egy alapértelmezett oszlopnevet használ.\r\n    </div>\r\n    <div>\r\n    <code>Culture</code>: Az adatok kulturális környezetét meghatározó kulturáliskörnyezet-név.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Előlépteti az értékek első sorát a táblában.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "A tábla első sorában található összes skaláris érték előléptetése fejlécekké.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "Egy táblát ad vissza, amelyben ki van hagyva a megfelelő darabszámú első sor.",
        "Documentation.LongDescription": "Olyan táblát ad vissza, amely nem tartalmazza a(z) <code>table</code> tábla megadott számú első sorát (<code>countOrCondition</code>).\r\n    Az eltávolított sorok száma a nem kötelező <code>countOrCondition</code> paramétertől függ.\r\n    <ul>\r\n    <li> Ha a(z) <code>countOrCondition</code> nincs megadva, a függvény csak az első sort távolítja el. </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy szám, a függvény ennek megfelelő mennyiségű sort távolít el (az elejétől kezdve). </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy feltétel, a függvény a feltételnek megfelelő sorokat eltávolítja addig, amíg olyan sort nem talál, amely nem felel meg a feltételnek.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja a tábla első sorát.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eltávolítja a tábla első két sorát.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eltávolítja a tábla első sorait, ha a [CustomerID] <=2.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "Olyan táblát ad vissza, amelynek eltávolítja az utolsó N sorát.",
        "Documentation.LongDescription": "Olyan táblát ad vissza, amely nem tartalmazza a(z) <code>table</code> tábla utolsó <code>countOrCondition</code> sorát.\r\n        Az eltávolított sorok száma a nem kötelező <code>countOrCondition</code> paramétertől függ.\r\n    <ul>\r\n    <li> Ha a(z) <code>countOrCondition</code> nincs megadva, a függvény csak az utolsó sort távolítja el. </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy szám, a függvény ennek megfelelő mennyiségű sort távolít el (a végétől kezdve). </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy feltétel, a függvény a feltételnek megfelelő sorokat eltávolítja addig, amíg olyan sort nem talál, amely nem felel meg a feltételnek.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja a tábla utolsó sorát.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Eltávolítja a tábla utolsó sorait, ha a [CustomerID] > 2.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "Táblát ad vissza, amely a bemeneti tábla azon sorait tartalmazza, amelyekben hiba fordult elő legalább egy cellában. Ha oszloplista van megadva, csak a megadott oszlopok celláiban keres hibát.",
        "Documentation.LongDescription": "Táblát ad vissza, amely a bemeneti tábla azon sorait tartalmazza, amelyekben hiba fordult elő legalább egy cellában. Ha oszloplista van megadva, csak a megadott oszlopok celláiban keres hibát.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Távolítsa el a hibaértéket az első sorból.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "Táblát ad vissza, amely fordított sorrendben tartalmazza a sorokat.",
        "Documentation.LongDescription": "Táblát ad vissza a bemeneti <code>table</code> táblából, amely fordított sorrendben tartalmazza a sorokat.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Fordított sorrendbe rendezi a sorokat a táblában.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "A megadott tábla oszlopainak leírását (a sémát) tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "<p>A(z) <code>table</code> oszlopait leíró táblát ad vissza.</p>\r\n<p>A tábla egyes sorai a(z) <code>table</code> egy-egy oszlopának tulajdonságait írják le:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>Oszlop neve</b></td>\r\n    <td><b>Leírás</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Name</code></td>\r\n    <td>Az oszlop neve</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Position</code></td>\r\n    <td>A(z) <code>table</code> oszlopának 0-alapú pozíciója.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>Az oszlop típusának neve.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Kind</code></td>\r\n    <td>Az oszlop típusának fajtája.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>Tartalmazhat-e az oszlop <code>null</code> értékeket.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code>></td>\r\n    <td>A <code>NumericPrecision</code> és a <code>NumericScale</code> mezők számrendszere (például: kettes, tízes).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>A számoszlop pontossága a <code>NumericPrecisionBase</code> által meghatározott rendszerben. Ez az ilyen típusú értékek által megjeleníthető számjegyek maximális száma (beleértve a tört számjegyeket is).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>A számoszlop skálája a <code>NumericPrecisionBase</code> által meghatározott rendszerben. Ez az ilyen típusú értékek tört részében lévő számjegyek száma. A <code>0</code> érték azt jelöli, hogy a skála rögzített, és nem tartalmaz tört számjegyeket. A <code>null</code> érték azt jelöli, hogy a skála nem ismert (nem rögzített, vagy nincs meghatározva).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>Egy dátum- vagy időérték másodpercek része által támogatott tört számjegyek maximális száma.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>Egy <code>text</code> oszlopban engedélyezett karakterek maximális száma, vagy egy <code>binary</code> oszlopban engedélyezett bájtok maximális száma</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>Azt jelzi, hogy az oszlop lehet-e változó hosszúságú (a <code>MaxLength</code> értékéig), vagy rögzített a mérete.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>Az oszlop típusának neve a forrás natív típusrendszerében (az SQL Server esetében például <code>nvarchar</code>).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>Az oszlop értékének alapértelmezett kifejezése a forrás natív kifejezés nyelvén (az SQL Server esetében például <code>42</code> vagy <code>newid()</code>)</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Description</code></td>\r\n    <td>Az oszlop leírása.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "Táblát ad vissza, amely csak a bemeneti tábla azon sorait tartalmazza, amelyekben hiba fordult elő legalább egy cellában. Ha oszloplista van megadva, csak a megadott oszlopok celláiban keres hibát.",
        "Documentation.LongDescription": "Táblát ad vissza, amely csak a bemeneti tábla azon sorait tartalmazza, amelyekben hiba fordult elő legalább egy cellában. Ha oszloplista van megadva, csak a megadott oszlopok celláiban keres hibát.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Válassza ki azon ügyfelek nevét, akiknek a soraiban hiba található.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "Egy táblát ad vissza, amelyben ki van hagyva a megfelelő darabszámú első sor.",
        "Documentation.LongDescription": "Olyan táblát ad vissza, amely nem tartalmazza a(z) <code>table</code> tábla megadott számú első sorát (<code>countOrCondition</code>).\r\n    A kihagyandó sorok száma a nem kötelező <code>countOrCondition</code> paramétertől függ.\r\n    <ul>\r\n    <li> Ha a(z) <code>countOrCondition</code> nincs megadva, a függvény csak az első sort hagyja ki. </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy szám, a függvény ennek megfelelő mennyiségű sort hagy ki (az elejétől kezdve). </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy feltétel, a függvény a feltételnek megfelelő sorokat kihagyja addig, amíg olyan sort nem talál, amely nem felel meg a feltételnek.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Átugorja a tábla első sorát.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Átugorja a tábla első két sorát.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Átugorja a tábla első sorát, ha a [Price] > 25.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "Meggátolja, hogy alsóbb rétegbeli műveletek fussanak az adatok eredeti forrásán.",
        "Documentation.LongDescription": "Meggátolja, hogy alsóbb rétegbeli műveletek fussanak az adatok eredeti forrásán a következőben: <code>table</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Adatokat hív le egy SQL-táblából oly módon, hogy megakadályozza, hogy bármely alsóbb rétegbeli művelet lekérdezésként fusson az SQL-kiszolgálón.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "Az oszlopokat sorokra, a sorokat oszlopokra alakítja át.",
        "Documentation.LongDescription": "Az oszlopokat sorokra, a sorokat oszlopokra alakítja át.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Oszlopokra alakítja át a név-érték párokat tartalmazó tábla sorait.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "Lekéri a táblák egy készlete közötti kapcsolatokat.",
        "Documentation.LongDescription": "Lekéri a táblák egy készlete közötti kapcsolatokat. A(z) <code>tables</code> készletről feltételezhető, hogy a navigációs táblákhoz hasonló struktúrával rendelkezik. A(z) <code>dataColumn</code> által meghatározott oszlop tartalmazza a tényleges adattáblákat.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "A Teradata-adatbázisban elérhető SQL-táblák és -nézetek tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>server</code> kiszolgálón lévő Teradata-adatbázisból származó SQL-táblák és nézetek tábláját adja vissza. A portot megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. Egy választható rekordparaméter adható meg (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n</ul>\r\n\r\n    A rekordparaméter például a következőképpen adható meg: [option1 = value1, option2 = value2...] vagy [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "Adja meg, hogy hány hónapnyi Twilio-előzményadatot kíván lekérni.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "A vonatkozó Twilio-adatokat tartalmazó táblát adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "Egy, a megadott táblatípus oszlopainak leírását (a sémát) tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "<p>Egy, a(z) <code>tableType</code> oszlopait leíró táblát ad vissza.</p>\r\n<p>Az eredményül kapott tábla leírása a <code>Table.Schema</code> dokumentációjában található.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Services-csatorna",
        "Documentation.DisplayName": "Azure DevOps Services-csatorna",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Az Azure DevOps által kínált OData-csatornák tábláját adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Csatlakozás a Viva Elemzések adataihoz",
        "Documentation.LongDescription": "Heti metrikák és attribútumok adatainak importálása a Workplace Analyticsből.",
        "Documentation.Examples": [
          {
            "Description": "Egy olyan táblát ad vissza, amely látható attribútumokkal és heti metrikákkal rendelkezik a partíció minden mért alkalmazottja esetében.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "A HTML-dokumentum tartalmát adja vissza a dokumentumot alkotó struktúrákra lebontva, valamint a teljes dokumentumot és annak a címkék eltávolításával előállított szövegét jelölő objektumot is visszaad.",
        "Documentation.LongDescription": "A HTML-dokumentum tartalmát adja vissza a dokumentumot alkotó struktúrákra lebontva, valamint a teljes dokumentumot és annak a címkék eltávolításával előállított szövegét jelölő objektumot is visszaad.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "A fő Webtrends-mérőszámokat tartalmazó táblát adja vissza.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Hívást küld a Webtrends KeyMetrics-végpontra, és egy táblában adja vissza az összes adatot.",
        "Documentation.Examples": [
          {
            "Description": "Lekéri a 98765-ös bérlő az elmúlt 30 napot felölelő, a fő mérőszámokat tartalmazó tábláját",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "A fő mérőszámok táblája"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "Adja meg a Webtrends-fiókjával társított profilazonosítót.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "A vonatkozó Webtrends-adatokat tartalmazó táblát adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Csatlakozás a Viva Elemzések adataihoz",
        "Documentation.LongDescription": "Heti metrikák és attribútumok adatainak importálása a Workplace Analyticsből.",
        "Documentation.Examples": [
          {
            "Description": "Egy olyan táblát ad vissza, amely látható attribútumokkal és heti metrikákkal rendelkezik a partíció minden mért alkalmazottja esetében.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "Az XML-dokumentum tartalmát adja vissza hierarchikus táblaként.",
        "Documentation.LongDescription": "Az XML-dokumentum tartalmát adja vissza hierarchikus táblaként.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "Az XML-dokumentum tartalmát adja vissza egybesimított táblák egymásba beágyazott gyűjteményeként.",
        "Documentation.LongDescription": "Az XML-dokumentum tartalmát adja vissza egybesimított táblák egymásba beágyazott gyűjteményeként.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Egy helyi XML-fájl tartalmának lekérése.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "Adja meg Zendesk-fiókja URL-címét.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "A vonatkozó Zendesk-adatokat tartalmazó táblát adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "Az ADO.NET adatforrás sémagyűjteményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>connectionString</code> kapcsolati sztringgel és a(z) <code>providerName</code> szolgáltatónévvel meghatározott ADO.NET-adatforrás sémagyűjteményét adja vissza. A(z) <code>connectionString</code> szöveg vagy tulajdonságérték-párok rekordja lehet. A tulajdonságérték szöveg vagy szám lehet. A(z) <code>options</code> elhagyható rekordparaméterrel további tulajdonságok határozhatók meg. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy l&#233;trej&#246;jjenek-e SQL Server-kompatibilis kapcsolatisztring-be&#225;ll&#237;t&#225;sok a Windows-hiteles&#237;t&#233;shez. Az alap&#233;rtelmezett &#233;rt&#233;k true (igaz).</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (bétaverzió)",
        "Documentation.Description": "Adatok importálása Amazon Redshift-adatbázisból.",
        "Documentation.LongDescription": "Az adatbázis <code>adatbázis</code> Amazon Redshift fürt <code>kiszolgálójában</code> lévő táblákat felsoroló táblát adja vissza.  Megadható egy választható rekordparaméter, a <code>beállítások</code>, a következő beállítások vezérléséhez:\r\n<ul>\r\n<li><code>Szolgáltató neve</code>: A kapcsolat szolgáltatójának neveként használandó szöveges érték. Ezt Microsoft-hitelesítés használatakor használják.</li>\r\n<li><code>Köteg mérete</code>: A kiszolgáló egyetlen hívása során beolvasandó sorok száma.</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Többdimenziós kockák vagy táblázatos modellek tábláját adja vissza az Analysis Services-adatbázisból.",
        "Documentation.LongDescription": "Többdimenziós kockák vagy táblázatos modellek tábláit adja vissza a(z) <code>server</code> kiszolgálón található <code>database</code> Analysis Services-adatbázisból. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v MDX-lek&#233;rdez&#233;s.</li>\r\n<li><code>TypedMeasureColumns</code> : Egy logikai &#233;rt&#233;k, amely azt hat&#225;rozza meg, hogy a t&#246;bbdimenzi&#243;s vagy t&#225;bl&#225;zatos modellben megadott t&#237;pusok legyenek-e haszn&#225;lva a hozz&#225;adott m&#233;rt&#233;koszlopok t&#237;pusaik&#233;nt. Ha az &#233;rt&#233;ke false (hamis), minden m&#233;rt&#233;koszlophoz a „number” t&#237;pus lesz alkalmazva. A be&#225;ll&#237;t&#225;s alap&#233;rtelmezett &#233;rt&#233;ke a false.</li>\r\n<li><code>Culture</code> : Az adatok kultur&#225;lis k&#246;rnyezet&#233;t meghat&#225;roz&#243; n&#233;v, amely megfelel a kapcsolati sztring „Ter&#252;letibe&#225;ll&#237;t&#225;s-azonos&#237;t&#243;” tulajdons&#225;g&#225;nak.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>SubQueries</code> : Egy sz&#225;m (0, 1 vagy 2), amely meghat&#225;rozza a „SubQueries” (Seg&#233;dlek&#233;rdez&#233;sek) tulajdons&#225;g &#233;rt&#233;k&#233;t a kapcsolati sztringben. Ez az &#233;rt&#233;k vez&#233;rli a r&#233;szkijel&#246;l&#233;sek &#233;s r&#233;szkock&#225;k sz&#225;m&#237;tott elemeinek viselked&#233;s&#233;t. (Az alap&#233;rtelmezett &#233;rt&#233;k a 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "A megadott Spark-fürtön lévő táblákat felsoroló táblát adja vissza.",
        "Documentation.LongDescription": "A megadott Spark-fürt <code>host</code> elemén lévő táblákat felsoroló táblát adja vissza <code>protocol</code> használatával.  Az érvényes protokollok a következők:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "A megadott Spark-fürtön lévő táblákat felsoroló táblát adja vissza.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Adja meg a vállalat- és projektneveket.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (csak táblák)",
        "Documentation.LongDescription": "Az Azure DevOps által kínált Analytics-nézetek tábláját adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "HDInsight Interactive Query",
        "Documentation.Caption": null,
        "Documentation.Description": "Adatok importálása HDInsight Interactive Query-lekérdezésből",
        "Documentation.LongDescription": "\r\nA HDInsight Interactive Query-lekérdezés a(z) <code>server</code> HDInsight Interactive Query-kiszolgáló <code>database</code> adatbázisa által megadott tábláinak listáját adja vissza. A kiszolgálóval választhatóan egy portszám is megadható, amelyet kettősponttal kell elválasztani. Egy választható <code>options</code> paraméter megadásával a következő beállítások szabályozhatók:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: Ez az időtartam megadja, hogy mennyi ideig várjon a rendszer, mielőtt feladja a kiszolgálókapcsolat létrehozását. Az alapértelmezett érték az illesztőtől függ.</li>\r\n        <li><code>CommandTimeout</code>: Ez az időtartam azt szabályozza, hogy mennyi ideig futhat a kiszolgálóoldali lekérdezés, mielőtt megszakadna. Az alapértelmezett érték az illesztőtől függ.</li>\r\n</ul>\r\nAz <code>options</code> paraméter a következőképpen adható meg: [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "Egy olyan táblázatot ad vissza, amelynek oszlopai egy, a Common Data Modelben lévő entitás attribútumaihoz vannak hozzárendelve, beleértve az adattípusokat is.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "Egy olyan táblázatot ad vissza, amelynek oszlopai egy, a Common Data Modelben lévő entitás attribútumaihoz vannak hozzárendelve, beleértve az adattípusokat is. A rendszer hozzáadja az entitásdefiníció oszlopait, ha azok nincsenek hozzárendelve, és minden nem hozzárendelt oszlopot eltávolít.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "CloudBluePSA",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "Egy paraméter alkalmazása után egy adatkockát ad vissza.",
        "Documentation.LongDescription": "A(z) <code>parameter</code> és <code>arguments</code> <code>cube</code>-ra való alkalmazása után egy adatkockát ad vissza.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "Megváltoztatja a kocka szűrőkörnyezetének dimenziógranularitását a megadott oszlopokhoz rendelt attribútumok összecsukásával.",
        "Documentation.LongDescription": "Megváltoztatja a <code>cube</code> szűrőkörnyezetének dimenziógranularitását a megadott <code>columnNames</code> oszlopokhoz rendelt attribútumok összecsukásával. Az oszlopok a kocka táblázatos nézetéből is el lesznek távolítva.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Lecseréli a Cube.Dimensions által visszaadott dimenziókészletet.",
        "Documentation.LongDescription": "Lecseréli a <code>Cube.Dimensions</code> által visszaadott dimenziókészletet.\r\n    Ezzel a függénnyel például azonosító oszlop adható hozzá egy dimenzió attribútumhoz, így az adatforrás a megjelenített érték helyett az azonosító alapján csoportosíthat.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "Kockafüggvények listáját alkalmazza.",
        "Documentation.LongDescription": "A kockafüggvények listáját (<code>transforms</code>) alkalmazza a következőre: <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "A Db2-adatbázisban elérhető SQL-táblák és nézetek tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>database</code> nevű adatbázispéldányban, <code>server</code> kiszolgálón lévő Db2-adatbázisban elérhető SQL-táblák és nézetek tábláját adja vissza. A portot lehetősége van megadni a kiszolgálóval együtt, kettősponttal elválasztva. Megadható egy választható <code>options</code> rekordparaméter a következő beállítások meghatározásához: \r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n<li><code>Implementation</code> : Megadja a haszn&#225;lni k&#237;v&#225;nt belső adatb&#225;zisszolg&#225;ltat&#243;i implement&#225;ci&#243;t. Az &#233;rv&#233;nyes &#233;rt&#233;kek az IBM &#233;s a Microsoft.</li>\r\n<li><code>BinaryCodePage</code> : Olyan sz&#225;m, amely a CCSID (Coded Character Set Identifier) alapj&#225;n DB2 FOR BIT bin&#225;ris adatokat karakterl&#225;ncokra dek&#243;dol. Akkor haszn&#225;lhat&#243;, ha az implement&#225;ci&#243; &#233;rt&#233;ke „Microsoft”. 0-ra &#225;ll&#237;tva kikapcsolhatja az &#225;talak&#237;t&#225;st (ez az alap&#233;rtelmezett be&#225;ll&#237;t&#225;s). 1 &#233;rt&#233;kre &#225;ll&#237;tva adatb&#225;zis-k&#243;dol&#225;s alapj&#225;n t&#246;rt&#233;nik az &#225;talak&#237;t&#225;s. M&#225;s CCSID-sz&#225;mra &#225;ll&#237;tva a rendszer alkalmaz&#225;sk&#243;dol&#225;sra alak&#237;t &#225;t.</li>\r\n<li><code>PackageCollection</code> : Meghat&#225;roz egy sztring&#233;rt&#233;ket a csomagok gyűjt&#233;s&#233;hez (alap&#233;rtelmezett &#233;rt&#233;k: NULLID), amely lehetőv&#233; teszi az SQL-utas&#237;t&#225;sok feldolgoz&#225;s&#225;hoz sz&#252;ks&#233;ges megosztott csomagok haszn&#225;lat&#225;t. Microsoft &#233;rt&#233;kű implement&#225;ci&#243; eset&#233;n &#233;rv&#233;nyes.</li>\r\n<li><code>UseDb2ConnectGateway</code> : Meghat&#225;rozza, hogy a kapcsolat egy DB2 Connect-&#225;tj&#225;r&#243;n kereszt&#252;l t&#246;rt&#233;njen-e. A Microsoft implement&#225;ci&#243;ra vonatkozik.</li>\r\n</ul>\r\n\r\n    A rekordparaméter például a következők szerint adható meg: [lehetőség1 = érték1, lehetőség2 = érték2...] vagy például [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Lekérdez egy adathalmazt a Data.Worldről"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV370",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV370(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "Egy Azure-tárolócsoportbeli blobtároló blobjainak tulajdonságait és tartalmát tartalmazó tábla visszaadása.",
        "Documentation.LongDescription": "A függvény megvizsgálja egy Azure-tárolócsoport <code>account</code> paraméterben megadott URL-címen található tárolóját, és előállít egy táblát, amelynek minden sora a tároló egyik fájlját írja le tulajdonságok és a fájl tartalmához vezető hivatkozás formájában.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "Egy olyan táblát ad vissza, amely a megadott CSS-választók megadott HTML-hez való futtatásának eredményeit tartalmazza.",
        "Documentation.LongDescription": "Egy táblát ad vissza, amely a megjelölt CSS-választók a megadott <code>html</code> alapján történő futtatásának eredményeit tartalmazza. Egy opcionális rekordparaméter (<code>options</code>) is megadható további tulajdonságok beállításához. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Adatok elérése",
        "Documentation.Examples": [
          {
            "Description": "Egy táblát ad vissza egy HTML formátumú szöveges mintaérték alapján.",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>Manager</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "Minden href elemet kinyer egy minta html-szövegértékből.",
            "Code": "Html.Table(\"<a href=\"\"/test.html\"\">Teszt</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "Az Informix-adatbázisban elérhető SQL-táblák és nézetek tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>database</code> nevű adatbázispéldányban, a(z) <code>server</code> kiszolgálón lévő Informix-adatbázisban elérhető SQL-táblák és nézetek tábláját adja vissza. A portot megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. Egy opcionális rekordparaméterrel (<code>options</code>) meghatározhatja a következő beállításokat:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n</ul>\r\n\r\n    A rekordpareméter például a következőképpen határozható meg: [option1 = value1, option2 = value2...] vagy [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "Az érdeklődési részleteket tartalmazó táblát adja vissza.",
        "Documentation.LongDescription": "Hívást indít az <code>url</code>/rest/v1/leads.json címen található Marketo REST API végpontra. A rendszer a <code>leadIds</code> listában található minden érdeklődést visszaad.",
        "Documentation.Examples": [
          {
            "Description": "Három érdeklődés részleteit kérdezi le",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "A megadott érdeklődések részleteit tartalmazó tábla"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "Adja meg a fiókjával társított Marketo REST API-végpont URL-címét.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "A vonatkozó Marketo-adatokat tartalmazó táblát adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "Egy MySQL-adatbázisban elérhető SQL-táblák és -nézetek, valamint tárolt skaláris függvények tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>database</code> nevű adatbázispéldányban, a(z) <code>server</code> kiszolgálón lévő MySQL-adatbázisban elérhető SQL-táblák, nézetek és tárolt skaláris függvények tábláját adja vissza. A portot megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. Egy opcionális rekordparaméterrel (<code>options</code>) meghatározhatja a következő beállításokat:\r\n    <ul>\r\n<li><code>Encoding</code> : Egy TextEncoding &#233;rt&#233;k, amely a kiszolg&#225;l&#243;ra k&#252;ld&#246;tt &#246;sszes lek&#233;rdez&#233;s k&#243;dol&#225;s&#225;hoz haszn&#225;lt karakterk&#233;szletet hat&#225;rozza meg (az alap&#233;rtelmezett &#233;rt&#233;ke null).</li>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>TreatTinyAsBoolean</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy logikai &#233;rt&#233;kekk&#233;nt k&#233;nyszer&#237;ti-e a tinyint-oszlopokat. Az alap&#233;rtelmezett &#233;rt&#233;k az igaz.</li>\r\n<li><code>OldGuids</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely be&#225;ll&#237;tja, hogy a char(36)-oszlopokat (ha hamis) vagy a binary(16)-oszlopokat (ha igaz) kezelje-e GUID-k&#233;nt a rendszer. Az alap&#233;rtelmezett &#233;rt&#233;k a hamis.</li>\r\n<li><code>ReturnSingleDatabase</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely be&#225;ll&#237;tja, hogy a rendszer az &#246;sszes adatb&#225;zis &#246;sszes t&#225;bl&#225;j&#225;t adja vissza (ha hamis), vagy a megadott adatb&#225;zis t&#225;bl&#225;it &#233;s n&#233;zeteit adja vissza (ha igaz). Az alap&#233;rtelmezett &#233;rt&#233;k a hamis.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n</ul>\r\n\r\n    A rekordpareméter például a következőképpen határozható meg: [option1 = value1, option2 = value2...] vagy [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "Adatok importálása egy IBM Netezza-adatbázisból.",
        "Documentation.LongDescription": "\r\nNetezza-táblák, -nézetek és tárolt függvények tábláját adja vissza a Netezza-kiszolgáló <code>database</code> adatbázisából a(z) <code>server</code> kiszolgálón. Igény szerint a portot is megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. A következő beállítások szabályozásához egy opcionális rekordparaméter (<code>options</code>) is megadható:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: Egy logikai (igaz/hamis) érték, amely megadja, hogy a rendszer létrehozzon-e navigációs tulajdonságokat a visszaadott értékekhez (az alapértelmezett beállítás a true (igaz))</li>\r\n        <li><code>HierarchicalNavigation</code>: Egy logikai (igaz/hamis) érték, amely megadja, hogy a táblák a sémanevük alapján csoportosítva jelenjenek-e meg (az alapértelmezett érték a false (hamis))</li>\r\n        <li><code>ConnectionTimeout</code>: Egy időtartamérték, amely azt szabályozza, hogy meddig várjon a rendszer, mielőtt felhagyna a kiszolgálóhoz való csatlakozási kísérlettel. Az alapértelmezett érték az illesztőtől függ.</li>\r\n        <li><code>CommandTimeout</code>: Egy időtartamérték, amely azt szabályozza, hogy mennyi ideig futhat egy kiszolgálóoldali lekérdezés, mielőtt a rendszer megszakítaná. Az alapértelmezett érték az illesztőtől függ.</li>\r\n<li><code>NormalizeDatabaseName</code>: Egy logikai (igaz/hamis) érték, amely azt adja meg, hogy a rendszer normalizálja-e nagybetűsre az adatbázis nevét, vagy szó szerint értelmezze (az alapértelmezett a true (igaz)).</li>\r\n</ul>\r\nA rekordparaméter a következőképpen határozható meg: [option1 = value1, option2 = value2...].",
        "Documentation.Examples": [
          {
            "Description": "Egy IBM Netezza-projektben található táblák felsorolása.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "Egy natív lekérdezés ODBC-adatforráson való futtatásának eredményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>query</code> a(z) <code>connectionString</code> kapcsolati sztringgel és az ODBC-vel való futtatásának eredményét adja vissza. A(z) <code>connectionString</code> szöveg vagy tulajdonságérték-párok rekordja lehet. A tulajdonságérték szöveg vagy szám lehet. A(z) <code>options</code> elhagyható rekordparaméterrel további tulajdonságok határozhatók meg. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k 15 m&#225;sodperc.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy l&#233;trej&#246;jjenek-e SQL Server-kompatibilis kapcsolatisztring-be&#225;ll&#237;t&#225;sok a Windows-hiteles&#237;t&#233;shez. Az alap&#233;rtelmezett &#233;rt&#233;k true (igaz).</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Egyszerű lekérdezés futtatásának eredményét küldi vissza a megadott kapcsolati sztring alapján.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "Egy natív lekérdezés OLE DB-adatforráson való futtatásának eredményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>query</code> a(z) <code>connectionString</code> kapcsolati sztringgel és az OLE DB-vel való futtatásának eredményét adja vissza. A(z) <code>connectionString</code> szöveg vagy tulajdonságérték-párok rekordja lehet. A tulajdonságérték szöveg vagy szám lehet. A(z) <code>options</code> elhagyható rekordparaméterrel további tulajdonságok határozhatók meg. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy l&#233;trej&#246;jjenek-e SQL Server-kompatibilis kapcsolatisztring-be&#225;ll&#237;t&#225;sok a Windows-hiteles&#237;t&#233;shez. Az alap&#233;rtelmezett &#233;rt&#233;k true (igaz).</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "Egy PostgreSQL-adatbázisban elérhető SQL-táblák és -nézetek tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>database</code> nevű adatbázispéldányban, <code>server</code> kiszolgálón lévő PostgreSQL-adatbázisban elérhető SQL-táblák és nézetek tábláját adja vissza. A portot megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n</ul>\r\n\r\n    A rekordparaméter például a következők szerint adható meg: [lehetőség1 = érték1, lehetőség2 = érték2...] vagy például [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Adatok importálása egy Snowflake Computing-adatraktárból.",
        "Documentation.LongDescription": "Egy táblát ad vissza, amely a következő kiszolgálón található Snowflake Computing <code>warehouse</code> tábláit listázza: <code>server</code>. Megadható egy opcionális rekordparaméter (<code>options</code>) a következő beállítások vezérléséhez:\r\n<ul>\r\n<li><code>Role</code>: a kapcsolathoz a szerepkör neveként használni kívánt szöveges érték.</li>\r\n<li><code>CreateNavigationProperties</code>: Egy logikai (igaz/hamis) érték, amely megadja, hogy a rendszer létrehozzon-e navigációs tulajdonságokat a visszaadott értékekhez (az alapértelmezett érték true).</li>\r\n<li><code>ConnectionTimeout</code>: A Snowflake hálózati válaszaira való várakozással töltendő másodpercek száma.</li>\r\n<li><code>CommandTimeout</code>: A lekérdezés végrehajtására való várakozással töltendő másodpercek száma.</li>\r\n</ul>\r\n",
        "Documentation.Examples": [
          {
            "Description": "Snowflake-adatraktárban található táblák felsorolása.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "A megadott Spark-fürtön lévő táblákat felsoroló táblát adja vissza.",
        "Documentation.LongDescription": "A megadott Spark-fürt <code>host</code> elemén lévő táblákat felsoroló táblát adja vissza <code>protocol</code> használatával.  Az érvényes protokollok a következők:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Azure Spark-példányban lévő táblák listázása.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "Az SQL Server-adatbázisban elérhető SQL-táblák és -nézetek, valamint tárolt függvények tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>server</code> kiszolgálón található <code>database</code>SQL Server-adatbázisban elérhető SQL-táblák és -nézetek, valamint tárolt függvények tábláját adja vissza. A portot megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : A l&#233;trehozott SQL-lek&#233;rdez&#233;sben tal&#225;lhat&#243; maxdop lek&#233;rdez&#233;si z&#225;rad&#233;k &#233;rt&#233;k&#233;t meghat&#225;roz&#243; sz&#225;m.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n<li><code>MultiSubnetFailover</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza a „MultiSubnetFailover” tulajdons&#225;g &#233;rt&#233;k&#233;t a kapcsolati sztringben (az alap&#233;rtelmezett &#233;rt&#233;k a hamis).</li>\r\n<li><code>UnsafeTypeConversions</code> : Logikai (igaz/hamis) &#233;rt&#233;k. Ha Igaz, akkor a rendszer megk&#237;s&#233;rli &#225;tadni a t&#237;puskonverzi&#243;kat, ami sikertelen lehet, &#233;s a teljes lek&#233;rdez&#233;s meghi&#250;sul&#225;s&#225;t okozhatja. &#193;ltal&#225;nos haszn&#225;latra nem javasolt.</li>\r\n<li><code>ContextInfo</code> : Az egyes parancsok futtat&#225;sa előtt a CONTEXT_INFO be&#225;ll&#237;t&#225;s&#225;hoz haszn&#225;lt bin&#225;ris &#233;rt&#233;k.</li>\r\n<li><code>OmitSRID</code> : Logikai (igaz/hamis) &#233;rt&#233;k. Ha Igaz, akkor a rendszer kihagyja az SRID azonos&#237;t&#243;t Well-Known Text form&#225;tum&#250; sz&#246;veg geometriai vagy f&#246;ldrajzi t&#237;pusokb&#243;l val&#243; elő&#225;ll&#237;t&#225;sakor.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely igaz &#233;rt&#233;k eset&#233;n enged&#233;lyezi az adatb&#225;zisok k&#246;z&#246;tti lek&#233;rdez&#233;s&#225;tad&#225;st ugyanazon a kiszolg&#225;l&#243;n. Az alap&#233;rtelmezett &#233;rt&#233;k a hamis.</li>\r\n</ul>\r\n\r\n    A rekordparaméter például a következők szerint adható meg: [lehetőség1 = érték1, lehetőség2 = érték2...] vagy például [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Egy Sybase-adatbázisban elérhető SQL-táblák és -nézetek tábláját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>database</code> nevű adatbázispéldányban, <code>server</code> kiszolgálón lévő Sybase-adatbázisban elérhető SQL-táblák és nézetek tábláját adja vissza. A portot megadhatja a kiszolgálóval együtt, kettősponttal elválasztva. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a true (igaz)).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : A navig&#225;ci&#243;s tulajdons&#225;gok nev&#233;nek l&#233;trehoz&#225;s&#225;ra haszn&#225;lhat&#243; f&#252;ggv&#233;ny.</li>\r\n<li><code>Query</code> : Adatok lek&#233;r&#233;s&#233;re haszn&#225;lt nat&#237;v SQL-lek&#233;rdez&#233;s. Ha a lek&#233;rdez&#233;s t&#246;bb tal&#225;lathalmazt is eredm&#233;nyez, a rendszer csak az elsőt adja vissza.</li>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>ConnectionTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;hoz val&#243; csatlakoz&#225;si k&#237;s&#233;rletet. Az alap&#233;rtelmezett &#233;rt&#233;k az illesztőtől f&#252;gg.</li>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n</ul>\r\n\r\n    A rekordparaméter például a következők szerint adható meg: [lehetőség1 = érték1, lehetőség2 = érték2...] vagy például [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "Hozzáfűz egy oszlopot explicit pozícióértékekkel.",
        "Documentation.LongDescription": "Hozzáfűz egy <code>newColumnName</code> nevű oszlopot a következőhöz explicit pozícióértékekkel: <code>table</code>.\r\n    Megadható egy nem kötelező <code>initialValue</code> érték, a kezdeti indexérték. Megadható továbbá egy nem kötelező <code>increment</code> érték, amely meghatározza az egyes indexértékek növeléséhez használt növekményt.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Felvesz egy Index nevű indexoszlopot a táblába.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "Felvesz egy „index” nevű, a 10-es értékkel kezdődő, 5-tel növekvő indexoszlopot a táblába.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "Egy táblának egy adott listaoszlopából a listája minden egyes értékéhez létrehozza egy sor másolatát.",
        "Documentation.LongDescription": "Adott a(z) <code>table</code> tábla, ahol <code>column</code> az értékek listája, felosztja a listát értékenként egy sorra. A többi oszlop adata megismétlődik minden egyes újonnan létrehozott sorban.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Felosztja a tábla [Name] listaoszlopát.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "Egyik előző cella értékével tölti ki az oszlopban lejjebb levő, null értékű cellákat.",
        "Documentation.LongDescription": "Táblát ad vissza a megadott <code>table</code> táblából, ahol az előző cella értékét a(z) <code>columns</code> oszlopban lejjebb levő, null értékű cellákba propagálja.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Visszaad egy olyan táblát, amelynek null értékekkel rendelkező [Place] oszlopát feltölti a felettük levő értékkel a táblából.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "Egy előző cella értékét az oszlopban lejjebb levő, null értékű cellákba propagálja.",
        "Documentation.LongDescription": "Táblát ad vissza a megadott <code>table</code> táblából, ahol a következő cella értékét a(z) <code>columns</code> oszlopban feljebb levő, null értékű cellákba propagálja.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Visszaad egy olyan táblát, amelynek null értékekkel rendelkező [Column2] oszlopát feltölti az alattuk levő értékkel a táblából.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "A rendszer az összes olyan sort visszaadja, amelyek tartalmazzák az adott szöveget a táblában.",
        "Documentation.LongDescription": "Azokat a sorokat adja vissza a(z) <code>table</code> táblából, melyek tartalmazzák a(z) <code>text</code> szöveget. Ha a szöveg nem található, egy üres táblát ad vissza.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a tábla azon sorait, amelyek tartalmazzák a „Bob” kifejezést.",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "A megadott darabszámú első sort adja vissza.",
        "Documentation.LongDescription": "A(z) <code>table</code> tábla első sorát vagy sorait adja vissza a(z) <code>countOrCondition</code> értékétől függően:\r\n    <ul>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy szám, a függvény ennek megfelelő számú sort ad vissza (az elejétől kezdve). </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy feltétel, a függvény a feltételnek megfelelő sorokat adja vissza addig, amíg olyan sort nem talál, amely nem felel meg a feltételnek.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a tábla első két sorát.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Megkeresi a tábla első olyan sorait, ahol [a] > 0.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "Particionált táblák csoportjának tartalmát egyesítő tábla visszaadása.",
        "Documentation.LongDescription": "A(z) <code>partitions</code> paraméterben megadott particionált táblák csoportjának egyesítésével képzett tábla visszaadása. A felveendő oszlop nevét a(z) <code>partitionColumn</code> paraméter adja meg. Az oszlop alapértelmezett típusa  <code>any</code>, ami a(z) <code>partitionColumnType</code> paraméterrel módosítható.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Elemtípus megkeresése a <code>{number}</code> listában.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "Az adott számú utolsó sort adja vissza.",
        "Documentation.LongDescription": "A(z) <code>table</code> tábla utolsó sorát vagy sorait adja vissza a(z) <code>countOrCondition</code> értékétől függően:\r\n    <ul>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy szám, a függvény ennek megfelelő számú sort ad vissza az adott pozíciótól kezdve (vége – <code>countOrCondition</code>). </li>\r\n    <li> Ha a(z) <code>countOrCondition</code> egy feltétel, a függvény a feltételnek megfelelő sorokat adja vissza a növekvő pozíciókból, amíg olyan sort nem talál, amely nem felel meg a feltételnek.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a tábla utolsó két sorát.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Megkeresi a tábla utolsó olyan sorait, ahol [a] > 0.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "Olyan táblát ad vissza, amelyben minden oszlopnévhez hozzá lett fűzve előtagként a megadott szöveg.",
        "Documentation.LongDescription": "Olyan táblát ad vissza, amelyben a megadott <code>table</code> összes oszlopnevéhez hozzá lett fűzve előtagként a megadott szöveg (<code>prefix</code>), valamint egy pont a következő formátumban: <code>prefix</code><code>.ColumnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Hozzáfűzi a tábla oszlopaihoz a MyTable előtagot.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "Visszaadja a sorokat megadott eltolástól kezdve.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>table</code> sorait a megadott <code>offset</code> eltolástól kezdve. A választható <code>count</code> paraméterrel határozható meg a visszaadandó sorok száma. Alapértelmezés szerint a függvény az összes sort visszaadja az eltolástól kezdve.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Visszaadja az összes sort az 1 eltolástól kezdve a táblából.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Visszaad egy sort az 1 eltolástól kezdve a táblában.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "Eltávolítja a megadott sorokat.",
        "Documentation.LongDescription": "Eltávolítja a megadott <code>columns</code> oszlopot a megadott <code>table</code> táblából.\r\n    Ha a megadott oszlop nem létezik, a rendszer hibát jelez. Ez nem történik meg, ha a választható <code>missingField</code> paraméterrel meg van adva egy alternatív viselkedés (például <code>MissingField.UseNull</code> vagy <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja a [Phone] oszlopot a táblából.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Megpróbál eltávolítani egy nem létező oszlopot a táblából.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "Eltávolítja a megadott sorok összes előfordulását a táblából.",
        "Documentation.LongDescription": "Eltávolítja a megadott <code>rows</code> összes előfordulását a következőből: <code>table</code>.\r\n    A nem kötelező <code>equationCriteria</code> paraméterrel határozható meg a tábla sorainak összehasonlítása.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja az olyan sorokat az <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code> táblából, ahol [a = 1].",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "Eltávolítja a megadott számú sort.",
        "Documentation.LongDescription": "Eltávolít <code>count</code> sort a(z) <code>table</code> elejéről, a megadott <code>offset</code> pozíciónál kezdve. Ha a(z) <code>count</code> paraméter nincs megadva, az alapértelmezett 1 darabszámot használja. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja a tábla első sorát.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eltávolítja a tábla 1. pozícióján lévő sort.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eltávolít a tábla 1. pozíciójától kezdve két sort.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "Végrehajtja a {old, new} jellegű átnevezés(eke)t.",
        "Documentation.LongDescription": "Végrehajtja a megadott átnevezéseket a(z) <code>table</code> tábla oszlopaiban. A lecserélést végző <code>renames</code> művelet két értéklistát használ, az egyikben a régi oszlopnevek, a másikban pedig az új oszlopnevek szerepelnek.\r\n    Ha az oszlop nem létezik, kivételhiba fordul elő. Ez nem történik meg, ha a választható <code>missingField</code> paraméterrel meg van adva egy alternatíva (pl. <code>MissingField.UseNull</code> vagy <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Lecseréli a CustomerNum oszlopnevet a CustomerID névre a táblában.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Lecseréli a CustomerNum oszlopnevet a CustomerID névre, a PhoneNum nevet pedig a Phone névre a táblában.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Lecseréli a NewCol oszlopnevet a NewColumn névre a táblában. Ha az oszlop nem létezik, figyelmen kívül hagyja.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "Táblát ad vissza, amely a megadott sorrendben tartalmazza az oszlopokat.",
        "Documentation.LongDescription": "Egy olyan táblát ad vissza a bemeneti <code>table</code> táblából, amely a(z) <code>columnOrder</code> által megadott sorrendben tartalmazza az oszlopokat. A listán nem szereplő oszlopok nem lesznek átrendezve.\r\n     Ha egy oszlop nem létezik, a program kivételt vált ki, kivéve abban az esetben, ha a nem kötelező <code>missingField</code> paraméterrel meg van adva egy alternatíva (pl. <code>MissingField.UseNull</code> vagy <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Felcseréli a [Phone] és a [Name] oszlopot a táblában.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Felcseréli a [Phone] és az [Address] oszlopot a táblában, vagy a MissingField.Ignore műveletet használja. Nem módosítja a táblát, mert az [Address] oszlop nem létezik.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "Megismétli a tábla sorait a megadott számú alkalommal.",
        "Documentation.LongDescription": "Táblát ad vissza a bemeneti <code>table</code> táblából, amely a megadott <code>count</code> alkalommal ismételve tartalmazza annak sorait.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Kétszer megismétli a sorokat a táblában.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "A megadott oszlopokban szereplő hibaértékek cseréje a megadott értékekre.",
        "Documentation.LongDescription": "A(z) <code>table</code> paraméterben megadott oszlopokban szereplő hibaértékek cseréje a(z) <code>errorReplacement</code> listabeli értékekre. A listát {{column1, value1}, …} formátumban kell megadni. Oszloponként csak egy érték engedélyezett, és egy oszlop többszöri megadása hibához vezet.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lecseréli a táblában szereplő hibaértékeket a „world” szóra.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "Lecseréli a tábla A oszlopában szereplő hibaértékeket a „hello” szóra, a B oszlopában lévő hibaértékeket pedig a „world” szóra.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "Lecseréli a megadott táblázat kulcsait.",
        "Documentation.LongDescription": "Lecseréli a megadott táblázat kulcsait.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Táblázat meglévő kulcsainak lecserélése.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "Lecseréli az összes megadott sort a megadott sorokra.",
        "Documentation.LongDescription": "Lecseréli a(z) <code>table</code> összes megadott sorát a megadott sorokra. A lecserélendő és az új sorok a(z) <code>replacements</code> segítségével adhatók meg {old, new} formátumban.\r\n    A nem kötelező <code>equationCriteria</code> paraméterrel határozható meg a tábla sorainak összehasonlítása.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Lecseréli az [a = 1, b = 2] és [a = 2, b = 3] sorokat az [a = -1, b = -2],[a = -2, b = -3] sorokra a táblában.",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "Táblát ad vissza, amely csak a megadott oszlopokat tartalmazza.",
        "Documentation.LongDescription": "A(z) <code>table</code> táblát adja vissza, amely csak a megadott <code>columns</code> oszlopot tartalmazza.\r\n    <ul>\r\n       <li><code>table</code>: A megadott tábla.</li>\r\n       <li><code>columns</code>: A visszaadandó <code>table</code> tábla oszloplistája. A visszaadott tábla oszlopai a(z) <code>columns</code> által megadott sorrendben szerepelnek.</li>\r\n       <li><code>missingField</code>: <i>(Választható)</i> Ezt a műveletet kell végrehajtani, ha az oszlop nem létezik. Példa: <code>MissingField.UseNull</code> vagy <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Csak a [Name] oszlopot foglalja bele.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "Csak a [CustomerID] és [Name] oszlopot foglalja bele.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Ha a belefoglalt oszlop nem létezik, az alapértelmezett eredmény egy hiba.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "Ha a belefoglalt oszlop nem létezik, a <code>MissingField.UseNull</code> beállítás egy null értékekkel rendelkező oszlopot hoz létre.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "Kijelöli a feltételnek megfelelő sorokat.",
        "Documentation.LongDescription": "Azon sorok tábláját adja vissza a(z) <code>table</code> táblából, amelyek megfelelnek a kijelölésnek (<code>condition</code>).",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Válassza ki a tábla azon sorait, ahol a [CustomerID] oszlop értékei 2-nél nagyobbak.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Válassza ki a tábla azon sorait, ahol a nevek nem tartalmazzák a „B” karaktert.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "Rendezi a táblát egy vagy több oszlopnév és összehasonlítási feltétel használatával.",
        "Documentation.LongDescription": "Rendezi a(z) <code>table</code> táblát egy vagy több oszlopnév listájának és a választható <code>comparisonCriteria</code> paraméter használatával; formátum: { { col1, comparisonCriteria }, {col2} }.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Az OrderID oszlop alapján rendezi a táblát.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "Az OrderID oszlop alapján rendezi a táblát csökkenő sorrendben.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "A CustomerID, majd az OrderID oszlop alapján rendezi a táblát a CustomerID szerinti növekvő sorrendbe.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "A megadott függvényt használva átalakítja az oszlopneveket.",
        "Documentation.LongDescription": "A megadott <code>nameGenerator</code> függvényt használva átalakítja az oszlopneveket. Érvényes beállítások:\r\n    <div>\r\n      A <code>MaxLength</code> az új oszlopnevek maximális hosszát határozza meg. Ha a megadott függvény hosszabb oszlopnevet eredményez, a rendszer levág a név hosszából.\r\n    </div>\r\n    <div>\r\n      A <code>Comparer</code> az összehasonlítást szabályozza az új oszlopnevek létrehozása során. Az összehasonlítók a kis- és nagybetűket meg nem különböztető, illetve kulturális környezetet és területi beállítást figyelembe vevő összehasonlítások megadására használhatók.\r\n    </div>\r\n    <div>\r\n      A következő beépített összehasonlítók érhetők el a képletnyelvben:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: Pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: Kis- és nagybetűk megkülönböztetése nélküli, pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n      <li> <code>Comparer.FromCulture</code>: Kulturális környezetet figyelembe vevő összehasonlítás végrehajtására szolgál.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "A következő karakter eltávolítása az oszlopnevekből: <code>#(tab)</code>",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "Oszlopnevek átalakítása 6 karakter hosszúságú nevekké, amelyek nem tesznek különbséget kis- és nagybetűk között.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "Meghatározott kulturális környezet használatával alkalmazza az { column, type } jellegű típusátalakításokat.",
        "Documentation.LongDescription": "Visszaad egy táblázatot a bemeneti <code>table</code> táblázatból úgy, hogy alkalmazza a <code>typeTransformations</code> paraméterben megadott oszlopokra az átalakítást (ahol a formátum { column name, type name}) a nem kötelező <code>culture</code> paraméterben megadott kulturális környezet használatával (például „en-US”).\r\n    Ha az oszlop nem létezik, a rendszer kivételt ad vissza.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Szöveges értékre alakítja át az <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> tábla [a] oszlopának számértékeit.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "Átalakítja egy vagy több oszlop értékeit.",
        "Documentation.LongDescription": "A(z) <code>table</code> helyen szereplő egyes oszlopműveletek alkalmazásával átalakítja a(z) <code>transformOperations</code> elemet (ahol a formátum { column name, transformation } vagy { column name, transformation, new column type }).\r\n    Ha <code>defaultTransformation</code> van megadva, a(z) <code>transformOperations</code> helyen nem szereplő összes oszlopra alkalmazva lesz.\r\n    Ha a(z) <code>transformOperations</code> helyen szereplő valamelyik oszlop nem létezik, kivétel történik, ha a választható <code>missingField</code> paraméter nem ad meg alternatívát (például <code>MissingField.UseNull</code> vagy <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Az [A] oszlop szöveges értékeit számértékekké alakíthatja, a [B] oszlopban szereplő számértékeket pedig szöveges értékekké.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "A hiányzó [X] oszlop számértékeit szövegértékekké alakíthatja, figyelmen kívül hagyva a nem létező oszlopokat.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "Átalakíthatja a hiányzó [X] oszlop számértékeit szövegértékekké, null alapértelmezett értéket adva a nem létező oszlopoknak.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "Növelheti a [B] oszlopban szereplő számértékeket és átalakíthatja őket szöveges értékekké, és az összes többi oszlopot számmá alakíthatja.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "Létrehoz vagy kibővít egy táblát lekérdezési és műveleti tevékenységekhez a felhasználó által meghatározott kezelőkkel.",
        "Documentation.LongDescription": "<p>Visszaad egy <code>table</code> nézetet, ahol a(z) <code>handlers</code> megadott függvényei vannak használatban egy művelet alapértelmezett viselkedése helyett, ha a művelet alkalmazva van a nézetre.</p>\r\n<p>Ha <code>table</code> meg van adva, az összes kezelőfüggvény opcionális. Ha <code>table</code> nincs megadva, a <code>GetType</code> és a <code>GetRows</code> kezelőfüggvényekre van szükség. Ha egy kezelőfüggvény nincs meghatározva egy műveletnél, a rendszer a művelet alapértelmezett viselkedését alkalmazza itt: <code>table</code> (kivéve <code>GetExpression</code> esetében).</p>\r\n<p>A kezelőfüggvényeknek olyan értéket kell visszaadnia, amely szemantikailag megegyezik a művelet <code>table</code> esetében való alkalmazásának eredményével (vagy <code>GetExpression</code> esetén az eredményül kapott nézettel).</p>\r\n<p>Ha egy kezelőfüggvény hibát jelez, a nézetre a rendszer az alapértelmezett viselkedést alkalmazza.</p>\r\n<p><code>Table.View</code> segítségével megvalósítható egy adatforrásba való összevonás – M lekérdezések fordítása forrásspecifikus lekérdezésekbe (pl. T-SQL utasítások létrehozása M lekérdezésekből).</p>\r\n<p>A <code>Table.View</code> részletesebb leírásáért tekintse meg a közzétett dokumentációt.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Hozzon létre egy alapszintű nézetet, amely nem igényli a sorokhoz való hozzáférést a típus vagy a sorok számának meghatározásához.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Adja meg a vállalat- és projektneveket.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure-DevOps (csak táblák)",
        "Documentation.LongDescription": "Az Azure DevOps által kínált Analytics-nézetek tábláját adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Adatok importálása a Verticából",
        "Documentation.LongDescription": "A <code>database</code> paraméter által megnevezett adatbázisban található <code>server</code> paraméter által megnevezett kiszolgálón elérhető sémák tábláját adja vissza.\r\nEgy opcionális rekordparaméter, az <code>options</code> is megadható további tulajdonságok meghatározásához. A rekord a következő mezőket tartalmazhatja:\r\n<ul>\r\n    <li><code>ConnectionTimeout</code>: Az időtartam, amennyit a rendszer vár, mielőtt felhagyna a kiszolgálóhoz való csatlakozásra tett kísérletekkel. Az alapértelmezett érték illesztőtől függ.</li>\r\n    <li><code>CommandTimeout </code>: Az időtartam, ameddig a kiszolgálóoldali lekérdezés futhat, mielőtt a rendszer megszakítaná. Az alapértelmezett érték illesztőtől függ.</li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "A Verticában található táblák listája"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "A Webtrends jelentéstartalmát tartalmazó táblát adja vissza.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "Hívást küld az adott Webtrends-jelentésvégpontra, és egy táblában adja vissza az összes adatot.",
        "Documentation.Examples": [
          {
            "Description": "Hívást küld a Webtrends-látogatók jelentésvégpontjára az elmúlt 30 nap adatainak lekéréséhez",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "A látogatóadatok táblája"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "Azon Active Directory-tartományok listáját adja vissza, amelyek ugyanabban az erdőben találhatók, mint a megadott tartomány, illetve mint a gép tartománya, ha nincs más megadva.",
        "Documentation.LongDescription": "Azon Active Directory-tartományok listáját adja vissza, amelyek ugyanabban az erdőben találhatók, mint a megadott tartomány, illetve mint a gép tartománya, ha nincs más megadva.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "Egy natív lekérdezés egy ADO.NET-adatforráson való futtatásának eredményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>query</code> a(z) <code>connectionString</code> kapcsolati sztringgel és a(z) <code>providerName</code> ADO.NET-szolgáltató használatával való futtatásának eredményét adja vissza. A(z) <code>connectionString</code> szöveg vagy tulajdonságérték-párok rekordja lehet. A tulajdonságérték szöveg vagy szám lehet. A(z) <code>options</code> elhagyható rekordparaméterrel további tulajdonságok határozhatók meg. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a kiszolg&#225;l&#243;oldali lek&#233;rdez&#233;s mennyi ideig futhat, mielőtt megszakadna. Az alap&#233;rtelmezett &#233;rt&#233;k t&#237;z perc.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely meghat&#225;rozza, hogy l&#233;trej&#246;jjenek-e SQL Server-kompatibilis kapcsolatisztring-be&#225;ll&#237;t&#225;sok a Windows-hiteles&#237;t&#233;shez. Az alap&#233;rtelmezett &#233;rt&#233;k true (igaz).</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "A jelentéscsomagokat az Adobe Analytics rendszerében adja vissza.",
        "Documentation.LongDescription": "Többdimenziós csomagok tábláját adja vissza az Adobe Analytics rendszeréből. Megadható egy választható rekordparaméter (<code>options</code>) a következő beállítások meghatározásához:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a t&#225;bl&#225;k a s&#233;manevek szerint csoportos&#237;tva jelenjenek-e meg (az alap&#233;rtelmezett &#233;rt&#233;k a false (hamis)).</li>\r\n<li><code>MaxRetryCount</code> : A lek&#233;rdez&#233;s eredm&#233;ny&#233;nek ciklikus lek&#233;rdez&#233;se eset&#233;n v&#233;grehajtand&#243; &#250;jrapr&#243;b&#225;lkoz&#225;sok sz&#225;ma. Az alap&#233;rt&#233;k 120.</li>\r\n<li><code>RetryInterval</code> : Az &#250;jrapr&#243;b&#225;lkoz&#225;si k&#237;s&#233;rletek k&#246;z&#246;tti időtartam. Az alap&#233;rtelmezett &#233;rt&#233;k 1 m&#225;sodperc.</li>\r\n<li><code>Implementation</code> : Az Adobe Analytics API verzi&#243;j&#225;nak megad&#225;sa. Az &#233;rv&#233;nyes &#233;rt&#233;kek a k&#246;vetkezők: „2.0“. Az alap&#233;rtelmez&#233;s az API 1.4-es verzi&#243;j&#225;t haszn&#225;lja.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Hive LLAP",
        "Documentation.Caption": null,
        "Documentation.Description": "Adatok importálása Hive LLAP-ből",
        "Documentation.LongDescription": "\r\nA Hive LLAP a(z) <code>server</code> Hive LLAP-kiszolgáló <code>database</code> adatbázisa által megadott tábláinak listáját adja vissza a kiválasztott <code>protocol</code> protokoll használatával. A kiszolgálóval választhatóan egy portszám is megadható, amelyet kettősponttal kell elválasztani. A Thrift átviteli protokoll egy enumerált típus a következő értékekkel: Standard, HTTP. Egy választható <code>options</code> paraméter megadásával a következő beállítások szabályozhatók:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: Ez az időtartam megadja, hogy mennyi ideig várjon a rendszer, mielőtt feladja a kiszolgálókapcsolat létrehozását. Az alapértelmezett érték az illesztőtől függ.</li>\r\n        <li><code>CommandTimeout</code>: Ez az időtartam azt szabályozza, hogy mennyi ideig futhat a kiszolgálóoldali lekérdezés, mielőtt megszakadna. Az alapértelmezett érték az illesztőtől függ.</li>\r\n</ul>\r\nAz <code>options</code> paraméter a következőképpen adható meg: [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "Ha a mai dátum 2017. 6. 15., lekéri a 2017. 5. 1. és 2017. 6. 15. közötti adatok összesítését",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "A függvény a 2017. 5. 1. és 2017. 6. 15. közötti összefoglaló adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 6. 15., a 2017. áprilisi összefoglaló adatokat kéri le.",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "A függvény a 2017. 4. 1. és 2017. 4. 30. közötti adatokat adja vissza"
          },
          {
            "Description": "Ha a mai dátum 2017. 6. 15., a 2017. áprilistól a mai napig tartó összefoglaló adatokat kéri le.",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "A függvény a 2017. 4. 1. és 2017. 6. 15. közötti adatokat adja vissza"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "Adja meg a vállalat- és projektneveket.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Az Azure DevOps által kínált OData-csatornák tábláját adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "Csatlakozzon a Dataverse-példányhoz (Dynamics 365 és PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "A megadott dimenziótáblát a kocka szűrőkörnyezetében egyesíti, és a megváltoztatja a szűrőkörnyezet dimenziógranularitását a dimenzióattribútumok megadott készletének kibontásával.",
        "Documentation.LongDescription": "A megadott dimenziótáblát (<code>dimensionSelector</code>) a kocka (<code>cube</code>) szűrőkörnyezetében egyesíti, és a megváltoztatja a szűrőkörnyezet dimenziógranularitását a dimenzióattribútumok megadott készletének (<code>attributeNames</code>) kibontásával. A dimenzióértékek fel lesznek véve a táblázatos nézetbe <code>newColumnNames</code> nevű oszlopokkal, illetve <code>attributeNames</code> nevűekkel, ha nincs más megadva.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "Oszlopot ad hozzá az egyes sorok sorkörnyezetében alkalmazott mérték eredményeit tartalmazó kockához.",
        "Documentation.LongDescription": "<code>column</code> nevű oszlopot ad hozzá az egyes sorok sorkörnyezetében alkalmazott <code>cube</code> mérték eredményeit tartalmazó <code>measureSelector</code> kockához. A mérték alkalmazására hatással vannak a dimenziógranularitás és a felosztás változásai. A mértékek értéke módosulni fog az egyes kockaműveletek végrehajtása után.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "A Dynamics 365 Business Central-környezetet és -vállalat megadása.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "A vonatkozó Dynamics 365 Business Central-adatokat tartalmazó táblát adja vissza. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "A Dynamics 365 Business Central-környezetet és -vállalat megadása.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "A vonatkozó Dynamics 365 Business Central-adatokat tartalmazó táblát adja vissza. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "A Dynamics 365 Business Central-környezetet és -vállalat megadása.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "A vonatkozó Dynamics 365 Business Central-adatokat tartalmazó táblát adja vissza. "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "A Dynamics 365 Business Central-környezetet és -vállalat megadása.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "A vonatkozó Dynamics 365 Business Central-adatokat tartalmazó táblát adja vissza. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "Az aktuális Excel-munkafüzet tartalmát adja vissza.",
        "Documentation.LongDescription": "Az aktuális Excel-munkafüzet tartalmát adja vissza. Táblákat, névvel ellátott tartományokat és dinamikus tömböket ad vissza. Ellentétben az <code>Excel.Workbook</code> utasítással, nem ad vissza lapokat.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Egy tartalomjegyzéket ad vissza egy Microsoft Exchange-fiókból.",
        "Documentation.LongDescription": "Egy tartalomjegyzéket ad vissza a(z) <code>mailboxAddress</code> Microsoft Exchange-fiókból. Ha a(z) <code>mailboxAddress</code> nincs megadva, a rendszer a azonosító adatok alapértelmezett fiókját használja.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Adattárház",
        "Documentation.Caption": "Adattárház",
        "Documentation.Description": "Adatok importálása adattárházakból",
        "Documentation.LongDescription": "Adatok importálása adattárházakból"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Google Analytics-fiókokat ad vissza.",
        "Documentation.LongDescription": "Olyan Google Analytics-fiókokat ad vissza, amelyek elérhetők a jelenlegi hitelesítő adatokkal.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Adatok importálása egy Google BigQuery-adatbázisból.",
        "Documentation.LongDescription": "\r\n      Egy olyan táblát ad vissza, amely a Google BigQueryben elérhető projekteket sorolja fel. Megadható egy választható rekordparaméter (<code>options</code>) is a következő beállítások meghatározásához\r\n      <ul>\r\n      <li><code>ConnectionTimeout</code>: Az időtartam, amelynek a letelte után a rendszer felhagy a kiszolgálóhoz történő csatlakozásra tett kísérlettel. Az alapértelmezett érték az ODBC-kapcsolat időtúllépésének az értéke.</li>\r\n      <li><code>CommandTimeout</code>: Az időtartam, ameddig a kiszolgálóoldali lekérdezés futhat, mielőtt megszakadna.</li>\r\n      <li><code>BillingProject</code>: A számlázási projekt azonosítója. Az alapértelmezett érték az első rendelkezésre álló projekt.</li>\r\n      <li><code>UseStorageApi</code>: Megadja, hogy használja-e BigQuery Storage API-t a nagy eredményhalmazok esetében. Állítsa „hamis” értékre, ha nem kívánja használni a Storage API-t API</li>\r\n      </ul>\r\n      A rekordparaméter a következőképpen adható meg: [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "A Google BigQuery-ben elérhető projektek felsorolása",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Tótárház",
        "Documentation.Caption": "Adatok importálása tótárházból",
        "Documentation.Description": "Adatok importálása tótárházból",
        "Documentation.LongDescription": "Az összes tótárházhoz csatlakozhat, amelyhez hozzáféréssel rendelkezik, és kiválaszthatja a használni kívánt entitásokat"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "A fontos MailChimp-adatokat tartalmazó táblát adja vissza.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "A fontos MailChimp-adatokat tartalmazó táblát adja vissza.",
        "Documentation.Examples": [
          {
            "Description": "A fontos MailChimp-adatokat tartalmazó táblát adja vissza.",
            "Code": "MailChimp.Tables()",
            "Result": "Fontos MailChimp-adatokat tartalmazó tábla."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "Az érdeklődési tevékenységeket tartalmazó táblát adja vissza.",
        "Documentation.LongDescription": "Hívást indít az <code>url</code>/rest/v1/activities.json címen található Marketo REST API végpontra. A rendszer az <code>activityIds</code> lista minden olyan tevékenységét kiadja, amelyre <code>startTime</code> óta került sor.",
        "Documentation.Examples": [
          {
            "Description": "A 2015. november 1-gyel kezdődő időszak „Webhelylátogatás” tevékenységeit tartalmazó táblát kéri le.",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "A november 1-gyel kezdődő időszak „Webhelylátogatás” tevékenységeinek részleteit tartalmazó tábla"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"select * from PVE_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Power BI-adatfolyamok (örökölt)",
        "Documentation.Caption": "Adatok importálása egy Power BI-adatfolyamból",
        "Documentation.LongDescription": "Az összes Power BI-adatfolyamhoz csatlakozhat, amelyhez hozzáféréssel rendelkezik, és kiválaszthatja a használni kívánt entitásokat."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Adatpiacok",
        "Documentation.Caption": "Adatpiacok",
        "Documentation.Description": "Adatokat importál az adatpiacokról",
        "Documentation.LongDescription": "Adatokat importál az adatpiacokról"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "Adatfolyamok",
        "Documentation.Caption": "Adatok importálása adatfolyamból",
        "Documentation.Description": "Adatok importálása adatfolyamból",
        "Documentation.LongDescription": "Az összes adatfolyamhoz csatlakozhat, amelyhez hozzáféréssel rendelkezik, és kiválaszthatja a használni kívánt entitásokat"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "Adatok importálása a QuickBooks Online-ból.",
        "Documentation.LongDescription": "\r\n        Egy olyan táblát ad vissza, amely a QuickBooks Online-ban elérhető táblákat sorolja fel. Megadható egy választható rekordparaméter (<code>options</code>) is a következő beállítások meghatározásához:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Az időtartam, amelynek a letelte után a rendszer felhagy a kiszolgálóhoz történő csatlakozásra tett kísérlettel.</li>\r\n        <li><code>CommandTimeout</code>: Az időtartam, ameddig a kiszolgálóoldali lekérdezés futhat, mielőtt meg lenne szakítva.</li>\r\n      </ul>\r\n    A rekordparaméter a következőképpen adható meg: [option1 = value1, option2 = value2...].\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "A Salesforce-fiókban található objektumokat adja vissza.",
        "Documentation.LongDescription": "A hitelesítő adatokban megadott Salesforce-fiókban található objektumokat adja vissza. A fiók a megadott környezeten (<code>loginUrl</code>) keresztül lesz csatlakoztatva. Ha nincs környezet megadva, a fiók az éles környezethez fog csatlakozni (https://login.salesforce.com). A(z) <code>options</code> választható rekordparaméter segítségével további tulajdonságok adhatók meg. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logikai (igaz/hamis) &#233;rt&#233;k, amely megadja, hogy a visszaadott &#233;rt&#233;kekhez l&#233;trej&#246;jjenek-e navig&#225;ci&#243;s tulajdons&#225;gok (az alap&#233;rtelmezett &#233;rt&#233;k a false, azaz hamis).</li>\r\n<li><code>ApiVersion</code> : A Salesforce API jelen lek&#233;rdez&#233;sben haszn&#225;land&#243; verzi&#243;ja. Ha nincs megadva, a rendszer a 29.0-s verzi&#243;j&#250; API-t haszn&#225;lja.</li>\r\n<li><code>Timeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;nak k&#252;ld&#246;tt k&#233;r&#233;st. Az alap&#233;rtelmezett &#233;rt&#233;k forr&#225;sspecifikus.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "A Salesforce-fiókban található jelentéseket adja vissza.",
        "Documentation.LongDescription": "A hitelesítő adatokban megadott Salesforce-fiókban található objektumokat adja vissza. A fiók a megadott környezeten (<code>loginUrl</code>) keresztül lesz csatlakoztatva. Ha nincs környezet megadva, a fiók az éles környezethez fog csatlakozni (https://login.salesforce.com). A(z) <code>options</code> választható rekordparaméter segítségével további tulajdonságok adhatók meg. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>ApiVersion</code> : A Salesforce API jelen lek&#233;rdez&#233;sben haszn&#225;land&#243; verzi&#243;ja. Ha nincs megadva, a rendszer a 29.0-s verzi&#243;j&#250; API-t haszn&#225;lja.</li>\r\n<li><code>Timeout</code> : Egy időtartam, amely azt vez&#233;rli, hogy a rendszer mennyi ideig v&#225;rjon, mielőtt feladja a kiszolg&#225;l&#243;nak k&#252;ld&#246;tt k&#233;r&#233;st. Az alap&#233;rtelmezett &#233;rt&#233;k forr&#225;sspecifikus.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "Az SAP Business Warehouse rendszerben előforduló InfoCubes-értékeket és lekérdezéseket InfoArea szerint csoportosítva adja vissza.",
        "Documentation.LongDescription": "Egy, az InfoArea szerint csoportosított InfoCubes-értékeket és lekérdezéseket tartalmazó táblát ad vissza a(z) <code>server</code> kiszolgálón (rendszer száma: <code>systemNumberOrSystemId</code>, ügyfél-azonosító: <code>clientId</code>) található SAP Business Warehouse-példányból. Megadható egy választható rekordparaméter (<code>optionsOrLogonGroup</code>) a következő beállítások meghatározásához:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Lapok, jelentések, mappák és munkaterületek tábláját adja vissza a Smartsheet API-tól",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Lapok, jelentések, mappák és munkaterületek beágyazott tábláját adja vissza a Smartsheet API-tól.",
        "Documentation.Examples": [
          {
            "Description": "A Smartsheet-hierarchia legfelső szintjén elérhető lapokat, mappákat, jelentéseket és munkaterületeket adja vissza",
            "Code": "Smartsheet.Tables()",
            "Result": "A Smartsheet-hierarchia legfelső szintjén lévő lapok, mappák, jelentések és munkaterületek táblája"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "Az 1-es verziójú SparkPost API-ból elérhető mérőszámok tábláját adja vissza",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "A függvény segítségével az 1-es verziójú SparkPost API „Metrics” (Mérőszámok) végpontjairól kérhetők le adatok. A táblák frissítésekor, illetve a SparkPost API az összekötővel való meghívásakor vegye figyelembe, hogy a SparkPost API szigorú API-kvótával rendelkezik. Ha a SparkPost-kiszolgáló 429-es állapotkódot ad vissza, elérte a kvótát, és néhány pillanatot várnia kell a további hívások előtt. A Number of days (Napok száma) paraméter értékének megadásakor vegye figyelembe, hogy az API csak 6 hónapnyi adatot tárol.",
        "Documentation.Examples": [
          {
            "Description": "Beolvassa az elmúlt három napban összesített összes campaign_id count_sent és count_rejected kézbesíthetőségi mutatóit. ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "táblázat"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "Hívást indít a Stripe API-ra.",
        "Documentation.LongDescription": "Hívást indít a https://api.stripe.com/v1/<code>method</code> címen található Stripe API-ra. Az <code>additionalParameters</code> rekorddal további paramétereket továbbíthat, a <code>ColumnNames</code> listával pedig a várható oszlopneveket sorolhatja fel. A Stripe 2015-10-16-os verziója van használatban.",
        "Documentation.Examples": [
          {
            "Description": "A 2015. november 1. után létrehozott eseményeket tartalmazó táblát adja vissza.",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "Az aktuális Stripe-fiókhoz megadott eseményeket tartalmazó tábla"
          },
          {
            "Description": "A termékváltozatokat tartalmazó táblát adja vissza.",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "Az aktuális Stripe-fiók termékváltozatait tartalmazó tábla"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "Az elérhető Stripe-táblákat és -funkciókat felsoroló táblát adja vissza.",
        "Documentation.LongDescription": "Az elérhető Stripe-táblákat és -funkciókat felsoroló táblát adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Synapse Analytics-munkaterület",
        "Documentation.Caption": "Azure Synapse Analytics-munkaterület",
        "Documentation.LongDescription": "PQ-összekötő Azure Synapse Analytics munkaterülethez",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "Felvesz egy oszlopot a megadott névvel. Az érték kiszámítása a megadott kiválasztási függvénnyel történik, amely mindegyik sort megkapja bemenetként.",
        "Documentation.LongDescription": "Felvesz egy <code>newColumnName</code> nevű oszlopot a(z) <code>table</code> táblába. Az oszlop értékeinek kiszámítása a megadott <code>columnGenerator</code> kiválasztási függvénnyel történik, amely mindegyik sort megkapja bemenetként.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Adjon hozzá egy „TotalPrice“ nevű számoszlopot a táblához, amelynek minden értéke a [Price] és a [Shipping] oszlop összege.",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "A tábla megadott oszlopában található értékek intelligens csoportosításával beszerzett reprezentatív értékekkel rendelkező új oszlopot ad hozzá.",
        "Documentation.LongDescription": "Egy <code>newColumnName</code> nevű új oszlopot ad hozzá a(z) <code>table</code> elemhez a következő reprezentatív értékeivel: <code>columnName</code>. A reprezentatív értékek beszerzése a(z) <code>columnName</code> értékeinek minden egyes sorra vonatkozó intelligens egyeztetésével történik.\r\n    <p>Az opcionális <code>options</code> halmaz hozzáadható annak megadásához, hogy miként történjen a kulcsoszlopok összehasonlítása. Elérhető beállítások:\r\n    <ul>\r\n<li><code>Culture</code> : Lehetőv&#233; teszi a rekordok kultur&#225;lisk&#246;rnyezet-specifikus szab&#225;lyok szerinti csoportos&#237;t&#225;s&#225;t. Ez lehet b&#225;rmilyen &#233;rv&#233;nyes kultur&#225;lisk&#246;rnyezet-n&#233;v. Ha p&#233;ld&#225;ul a Kultur&#225;lis k&#246;rnyezet be&#225;ll&#237;t&#225;s &#233;rt&#233;ke ja-JP, akkor a jap&#225;n kultur&#225;lis k&#246;rnyezet alapj&#225;n csoportos&#237;tja a rekordokat. Az alap&#233;rtelmezett &#233;rt&#233;k a „”, amely a semleges angol kultur&#225;lis k&#246;rnyezet alapj&#225;n v&#233;gzi a csoportos&#237;t&#225;st.</li>\r\n<li><code>IgnoreCase</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a kulcsok kis-&#233;s nagybetűk megk&#252;l&#246;nb&#246;ztet&#233;se n&#233;lk&#252;li csoportos&#237;t&#225;s&#225;t. Igaz &#233;rt&#233;k eset&#233;n a „Szőlő” p&#233;ld&#225;ul a „szőlő” sz&#243;val van csoportos&#237;tva. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>IgnoreSpace</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a sz&#246;vegr&#233;szek kombin&#225;l&#225;s&#225;t a csoportok keres&#233;s&#233;hez. Igaz &#233;rt&#233;k eset&#233;n a „Sző lő” p&#233;ld&#225;ul a „Szőlő” sz&#243;val van csoportos&#237;tva. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>SimilarityColumnName</code> : A bemeneti &#233;rt&#233;k &#233;s az adott bemenethez tartoz&#243; reprezentat&#237;v &#233;rt&#233;k k&#246;z&#246;tti hasonl&#243;s&#225;got &#225;br&#225;zol&#243; oszlop neve. Az alap&#233;rtelmezett &#233;rt&#233;k a null, amely esetben a rendszer nem ad meg egy &#250;j oszlopot a hasonl&#243;s&#225;goknak.</li>\r\n<li><code>Threshold</code> : Egy 0,00 &#233;s 1,00 k&#246;z&#246;tti sz&#225;m, amely meghat&#225;rozza azt a hasonl&#243;s&#225;gi pontsz&#225;mot, amelyen k&#233;t &#233;rt&#233;k csoportos&#237;tva lesz.\r\n    P&#233;ld&#225;ul a „Szőlő” &#233;s a „Szlő” (hi&#225;nyz&#243; „ő” betűvel) csak akkor lesz csoportos&#237;tva, ha a be&#225;ll&#237;t&#225;s &#233;rt&#233;ke kisebb, mint 0,90.\r\n    Az 1,00 k&#252;sz&#246;b&#233;rt&#233;k csak a pontos egyez&#233;seket enged&#233;lyezi.\r\n    (Vegye figyelembe, hogy a fuzzy „pontos egyez&#233;s” figyelmen k&#237;v&#252;l hagyhat olyan k&#252;l&#246;nbs&#233;geket, mint p&#233;ld&#225;ul a kis- &#233;s nagybetűhaszn&#225;latot, a sz&#243;sorrendet &#233;s az &#237;r&#225;sjeleket.)\r\n    Az alap&#233;rtelmezett &#233;rt&#233;k 0,80.</li>\r\n<li><code>TransformationTable</code> : Egy t&#225;bl&#225;zat, amely lehetőv&#233; teszi a rekordok egy&#233;ni &#233;rt&#233;kt&#225;rs&#237;t&#225;sok alapj&#225;n t&#246;rt&#233;nő csoportos&#237;t&#225;s&#225;t. Tartalmaznia kell a „From” &#233;s „To” oszlopokat. A „Szőlő” p&#233;ld&#225;ul akkor lesz csoportos&#237;tva a „Mazsola” sz&#243;val, ha meg van adva egy &#225;talak&#237;t&#225;si t&#225;bla, ahol a „From” oszlopban a „Szőlő” &#233;rt&#233;k, a „To” oszlopban pedig a „Mazsola” &#233;rt&#233;k szerepel. Vegye figyelembe, hogy az &#225;talak&#237;t&#225;s az &#225;talak&#237;t&#225;si t&#225;bl&#225;ban tal&#225;lhat&#243; &#246;sszes a sz&#246;vegelőfordul&#225;sra &#233;rv&#233;nyes lesz. A fenti &#225;talak&#237;t&#225;si t&#225;bla eset&#233;n p&#233;ld&#225;ul „A szőlő &#233;des” a „Mazsola &#233;des” kifejez&#233;ssel is csoportos&#237;tva lesz.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Az alkalmazottak tartózkodási helyére vonatkozó reprezentatív értékek keresése.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "Illesztést végez a táblákon a megadott oszlopok használatával, és egy új oszlopban helyezi el az illesztés eredményeit.",
        "Documentation.LongDescription": "Összeilleszti a(z) <code>table1</code> tábla sorait a(z) <code>table2</code> tábla soraival a(z) <code>key1</code> (<code>table1</code> esetén) és a(z) <code>key2</code> (<code>table2</code> esetén) által kiválasztott kulcsoszlopok értékeinek egyenlősége alapján. Az eredmények a(z) <code>newColumnName</code> nevű oszlopba kerülnek.\r\nEz a függvény a Table.Join függvényhez hasonlóan működik, LeftOuter értékű JoinKind beállítással, azzal a kivétellel, hogy az illesztés eredményei egybesimított helyett egymásba beágyazott módon jelennek meg.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Egy „price/stock” nevű illesztési oszlop hozzáadása a ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) táblához a [saleID] mező alapján összekapcsolt ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) táblából",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "Hozzáad egy kulcsot egy táblázathoz.",
        "Documentation.LongDescription": "Hozzáad egy kulcsot a(z) <code>table</code> táblázathoz, ahol a(z) <code>columns</code> a kulcsot meghatározó oszlopnevek listája, illetve a(z) <code>isPrimary</code> megadja, hogy a kulcs elsődleges-e.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Egyoszlopos elsődleges kulcs hozzáadása egy táblázathoz.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "Egy oszlop hozzáfűzése egy vagy több másik oszlop rangsorolásával.",
        "Documentation.LongDescription": "Hozzáfűz egy <code>newColumnName</code> nevű oszlopot a(z) <code>comparisonCriteria</code> által leírt egy vagy több oszlop rangsorolásával a következőhöz: <code>table</code>.\r\nA <code>options</code> RankKind beállítását speciálisabb rangsorolási módszer kiválasztására használhatják a haladó felhasználók.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Adjon hozzá egy RevenueRank nevű oszlopot a táblához, amely a Bevétel oszlopot rangsorolja a legmagasabbtól a legalacsonyabbig.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "Összesíti a táblák oszlopát több oszlopba az azokat tartalmazó táblában.",
        "Documentation.LongDescription": "Összesíti a(z) <code>table</code>[<code>column</code>] tábláit a táblák összesített értékeit tartalmazó több oszlopba. A(z) <code>aggregations</code> használatával adhatók meg az összesítendő táblákat tartalmazó oszlopok, a táblákra alkalmazandó aggregátumfüggvények, amelyek előállítják a táblák értékeit, valamint a létrehozni kívánt összesítő oszlopok neve.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Összesített táblaoszlopok a következőben: <code>[t]</code> a(z) <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> táblában a(z) <code>[t.a]</code> összegében, a(z) <code>[t.b]</code> minimuma és maximuma és a(z) <code>[t.a]</code> értékeinek száma.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "Megtartja a kezdeti eltolást, majd felváltva veszi és kihagyja a következő sorokat.",
        "Documentation.LongDescription": "Megtartja a kezdeti eltolást, majd felváltva veszi és kihagyja a következő sorokat.\r\n    <ul>\r\n       <li><code>table</code>: A bemeneti tábla.</li>\r\n       <li><code>offset</code>: A megtartandó sorok száma az iteráció megkezdése előtt.</li>\r\n       <li><code>skip</code>: Az eltávolítandó sorok száma az egyes iterációs lépésekben.</li>\r\n       <li><code>take</code>: A magtartandó sorok száma az egyes iterációs lépésekben.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Visszaad egy olyan táblát a táblából, amely az első sornál kezdődik, majd kihagy 1 értéket, majd megtart 1 értéket.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "Összevonja a megadott oszlopokat egy új oszlopba a megadott egyesítő függvény használatával.",
        "Documentation.LongDescription": "Összevonja a megadott oszlopokat egy új oszlopba a megadott egyesítő függvény használatával.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "A vezeték- és az utónevek új oszlopban való egyesítése, vesszővel elválasztva.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "A megadott oszlopokat kombinálja egy rekordértékekkel rendelkező új oszlopban, amelyben minden rekordnak a kombinált oszlopok neveinek és értékeinek megfelelő mezőnevei és értékei vannak.",
        "Documentation.LongDescription": "A(z) <code>table</code> meghatározott oszlopait új, <code>newColumnName</code> nevű, rekordértékű oszlopba kombinálja, amelyben mindegyik rekord a kombinált oszlopok oszlopnevének és értékének megfelelő mezőnévvel és értékkel rendelkezik. Ha egy rekord van meghatározva a(z) <code>options</code> esetén, a következő lehetőségek adhatók meg:\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: Amikor szövegként van meghatározva, azt jelzi, hogy az adott oszlopnevet a rekord megjelenített neveként kell kezelni. Ennek nem kell a magában a rekordban lévő valamelyik oszlopnak lennie.</li>\r\n     <li> <code>TypeName</code>: Amikor szövegként van meghatározva, az eredményül kapott rekord logikai típusának nevét adja meg, amely az adatok betöltése során a betöltési környezet viselkedésének vezérlésére használható.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "Másolatot készít egy oszlopról a megadott névvel. Az értékeket és a típusokat a forrásoszlopból másolja át.",
        "Documentation.LongDescription": "A(z) <code>columnName</code> nevű oszlopot másolja a(z) <code>table</code> táblába. A(z) <code>newColumnName</code> oszlop értékeit és típusát a(z) <code>columnName</code> oszlopból másolja át.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Az „a” nevű oszlop átmásolása a „másolt oszlop” nevű oszlopba a <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> táblában.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "Kibontja a rekordok oszlopát értékenként egy oszlopra.",
        "Documentation.LongDescription": "Adott a rekordok <code>column</code> oszlopa <code>table</code> bemeneteként, létrehoz egy táblát a rekord minden egyes mezőjéhez egy oszloppal. Ha szükséges, megadhatja a(z) <code>newColumnNames</code> paramétert, hogy egyedi neveket biztosítson az új tábla oszlopainak.\r\n    <ul>\r\n        <li><code>table</code>: Az eredeti tábla a rekordok kibontandó oszlopával. </li>\r\n        <li><code>column</code>: A kibontandó oszlop.</li>\r\n        <li><code>fieldNames</code>: Az oszlopokba kibontandó mezők listája a táblában.</li>\r\n        <li><code>newColumnNames</code>: Az új oszlopoknak adandó oszlopnevek listája. Az új oszlopnevek nem egyezhetnek meg az új tábla egyik oszlopnevével sem.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "A(z) [a] oszlop kibontása a <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> tábla „aa”, „bb” és „cc” nevű 3 oszlopába.",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "Kibontja a rekordok oszlopát vagy a táblák oszlopát több oszlopra az azokat tartalmazó táblában.",
        "Documentation.LongDescription": "A(z) <code>table</code>[<code>column</code>] oszlop tábláját kibontja több sorra és oszlopra. A(z) <code>columnNames</code> paraméterrel ki lehet választani a kibontandó oszlopokat a belső táblából. A(z) <code>newColumnNames</code> megadásával elkerülheti a meglévő és az új oszlopok közötti ütközést.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Táblaoszlopok kibontása az <code>[a]</code> oszlopból a <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> táblában 3 oszlopra: <code>[t.a]</code>, <code>[t.b]</code> és <code>[t.c]</code>.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "Csoportosítja a táblázat sorait a kulcsok intelligens (fuzzy) egyezése alapján.",
        "Documentation.LongDescription": "Csoportosítja a(z) <code>table</code> sorait az adott <code>key</code> oszlopban lévő értékek alapján minden egyes sor esetében.\r\n    Minden csoport esetében létrejön egy rekord, amely tartalmazza a kulcsoszlopokat (és azok értékeit) a(z) <code>aggregatedColumns</code> által meghatározott összesített oszlopokkal együtt.\r\n   A sorok rögzített sorrendben való visszaadása nem garantált.\r\n    <p>Az opcionális <code>options</code> hozzáadható annak megadásához, hogy miként történjen a kulcsoszlopok összehasonlítása. Elérhető beállítások:\r\n    <ul>\r\n<li><code>Culture</code> : Lehetőv&#233; teszi a rekordok kultur&#225;lisk&#246;rnyezet-specifikus szab&#225;lyok szerinti csoportos&#237;t&#225;s&#225;t. Ez lehet b&#225;rmilyen &#233;rv&#233;nyes kultur&#225;lisk&#246;rnyezet-n&#233;v. Ha p&#233;ld&#225;ul a Kultur&#225;lis k&#246;rnyezet be&#225;ll&#237;t&#225;s &#233;rt&#233;ke ja-JP, akkor a jap&#225;n kultur&#225;lis k&#246;rnyezet alapj&#225;n csoportos&#237;tja a rekordokat. Az alap&#233;rtelmezett &#233;rt&#233;k a „”, amely a semleges angol kultur&#225;lis k&#246;rnyezet alapj&#225;n v&#233;gzi a csoportos&#237;t&#225;st.</li>\r\n<li><code>IgnoreCase</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a kulcsok kis-&#233;s nagybetűk megk&#252;l&#246;nb&#246;ztet&#233;se n&#233;lk&#252;li csoportos&#237;t&#225;s&#225;t. Igaz &#233;rt&#233;k eset&#233;n a „Szőlő” p&#233;ld&#225;ul a „szőlő” sz&#243;val van csoportos&#237;tva. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>IgnoreSpace</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a sz&#246;vegr&#233;szek kombin&#225;l&#225;s&#225;t a csoportok keres&#233;s&#233;hez. Igaz &#233;rt&#233;k eset&#233;n a „Sző lő” p&#233;ld&#225;ul a „Szőlő” sz&#243;val van csoportos&#237;tva. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>SimilarityColumnName</code> : A bemeneti &#233;rt&#233;k &#233;s az adott bemenethez tartoz&#243; reprezentat&#237;v &#233;rt&#233;k k&#246;z&#246;tti hasonl&#243;s&#225;got &#225;br&#225;zol&#243; oszlop neve. Az alap&#233;rtelmezett &#233;rt&#233;k a null, amely esetben a rendszer nem ad meg egy &#250;j oszlopot a hasonl&#243;s&#225;goknak.</li>\r\n<li><code>Threshold</code> : Egy 0,00 &#233;s 1,00 k&#246;z&#246;tti sz&#225;m, amely meghat&#225;rozza azt a hasonl&#243;s&#225;gi pontsz&#225;mot, amelyen k&#233;t &#233;rt&#233;k csoportos&#237;tva lesz.\r\n    P&#233;ld&#225;ul a „Szőlő” &#233;s a „Szlő” (hi&#225;nyz&#243; „ő” betűvel) csak akkor lesz csoportos&#237;tva, ha a be&#225;ll&#237;t&#225;s &#233;rt&#233;ke kisebb, mint 0,90.\r\n    Az 1,00 k&#252;sz&#246;b&#233;rt&#233;k csak a pontos egyez&#233;seket enged&#233;lyezi.\r\n    (Vegye figyelembe, hogy a fuzzy „pontos egyez&#233;s” figyelmen k&#237;v&#252;l hagyhat olyan k&#252;l&#246;nbs&#233;geket, mint p&#233;ld&#225;ul a kis- &#233;s nagybetűhaszn&#225;latot, a sz&#243;sorrendet &#233;s az &#237;r&#225;sjeleket.)\r\n    Az alap&#233;rtelmezett &#233;rt&#233;k 0,80.</li>\r\n<li><code>TransformationTable</code> : Egy t&#225;bl&#225;zat, amely lehetőv&#233; teszi a rekordok egy&#233;ni &#233;rt&#233;kt&#225;rs&#237;t&#225;sok alapj&#225;n t&#246;rt&#233;nő csoportos&#237;t&#225;s&#225;t. Tartalmaznia kell a „From” &#233;s „To” oszlopokat. A „Szőlő” p&#233;ld&#225;ul akkor lesz csoportos&#237;tva a „Mazsola” sz&#243;val, ha meg van adva egy &#225;talak&#237;t&#225;si t&#225;bla, ahol a „From” oszlopban a „Szőlő” &#233;rt&#233;k, a „To” oszlopban pedig a „Mazsola” &#233;rt&#233;k szerepel. Vegye figyelembe, hogy az &#225;talak&#237;t&#225;s az &#225;talak&#237;t&#225;si t&#225;bl&#225;ban tal&#225;lhat&#243; &#246;sszes a sz&#246;vegelőfordul&#225;sra &#233;rv&#233;nyes lesz. A fenti &#225;talak&#237;t&#225;si t&#225;bla eset&#233;n p&#233;ld&#225;ul „A szőlő &#233;des” a „Mazsola &#233;des” kifejez&#233;ssel is csoportos&#237;tva lesz.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "A táblázat csoportosítása egy [Count] (szám) összesített oszlop hozzáadásával, amely az egyes helyeken lévő alkalmazottak számát tartalmazza (\"each Table.RowCount(_))\").",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "Összeilleszti a két tábla azon sorait, amelyek a megadott kulcsok alapján intelligens (fuzzy) egyezést mutatnak.",
        "Documentation.LongDescription": "<p>A(z) <code>table1</code> sorait illeszti össze a(z) <code>table2</code> soraival a(z) <code>key1</code> által (<code>table1</code> esetén) és a(z) <code>key2</code> által (<code>table2</code> esetén) kiválasztott kulcsoszlopok értékeinek fuzzy keresése alapján.</p>\r\n<p>A fuzzy keresés egy olyan összehasonlítás, amely nem a szövegek egyezésén, hanem a hasonlóságukon alapul.</p>\r\n<p>Alapértelmezés szerint a program egy belső illesztést hajt végre, de egy opcionális <code>joinKind</code> is megadható az illesztés típusának meghatározásához. Elérhető beállítások:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Az opcionális <code>joinOptions</code> halmaz hozzáadható annak megadásához, hogy miként történjen a kulcsoszlopok összehasonlítása. Elérhető beállítások:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Egy 1 &#233;s 8 k&#246;z&#246;tti sz&#225;m, amely megadja a fuzzy keres&#233;shez haszn&#225;land&#243; p&#225;rhuzamos sz&#225;lak sz&#225;m&#225;t. Az alap&#233;rtelmezett &#233;rt&#233;k 1.</li>\r\n<li><code>Culture</code> : Lehetőv&#233; teszi a rekordok kultur&#225;lisk&#246;rnyezet-specifikus szab&#225;lyok szerinti egyeztet&#233;s&#233;t. Ez lehet b&#225;rmilyen &#233;rv&#233;nyes kultur&#225;lisk&#246;rnyezet-n&#233;v. Ha p&#233;ld&#225;ul a Kultur&#225;lis k&#246;rnyezet be&#225;ll&#237;t&#225;s &#233;rt&#233;ke ja-JP, akkor a jap&#225;n kultur&#225;lis k&#246;rnyezet alapj&#225;n egyezteti a rekordokat. Az alap&#233;rtelmezett &#233;rt&#233;k a „”, amely a semleges angol kultur&#225;lis k&#246;rnyezet alapj&#225;n v&#233;gzi az egyeztet&#233;st.</li>\r\n<li><code>IgnoreCase</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a kulcsok kis-&#233;s nagybetűk megk&#252;l&#246;nb&#246;ztet&#233;se n&#233;lk&#252;li egyeztet&#233;s&#233;t. Igaz &#233;rt&#233;k eset&#233;n a „Szőlő” p&#233;ld&#225;ul egyezőnek minős&#252;l a „szőlő” sz&#243;val. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>IgnoreSpace</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a sz&#246;vegr&#233;szek kombin&#225;l&#225;s&#225;t az egyez&#233;sek keres&#233;s&#233;hez. Igaz &#233;rt&#233;k eset&#233;n a „Sző lő” p&#233;ld&#225;ul egyezőnek minős&#252;l a „Szőlő” sz&#243;val. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>NumberOfMatches</code> : Egy eg&#233;sz sz&#225;m, amely megadja az egyező sorok maxim&#225;lis visszaadhat&#243; sz&#225;m&#225;t minden bemeneti sor eset&#233;ben. Az 1 &#233;rt&#233;k p&#233;ld&#225;ul az egyes bemeneti sorokkal legink&#225;bb egyező sort adja vissza. Ha ez a be&#225;ll&#237;t&#225;s nincs megadva, a rendszer az &#246;sszes egyező sort visszaadja.</li>\r\n<li><code>SimilarityColumnName</code> : A bemeneti &#233;rt&#233;k &#233;s az adott bemenethez tartoz&#243; reprezentat&#237;v &#233;rt&#233;k k&#246;z&#246;tti hasonl&#243;s&#225;got &#225;br&#225;zol&#243; oszlop neve. Az alap&#233;rtelmezett &#233;rt&#233;k a null, amely esetben a rendszer nem ad meg egy &#250;j oszlopot a hasonl&#243;s&#225;goknak.</li>\r\n<li><code>Threshold</code> : Egy 0,00 &#233;s 1,00 k&#246;z&#246;tti sz&#225;m, amely meghat&#225;rozza azt a hasonl&#243;s&#225;gi pontsz&#225;mot, amelyen k&#233;t &#233;rt&#233;k egyeztetve lesz.\r\n    P&#233;ld&#225;ul a „Szőlő” &#233;s a „Szlő” (hi&#225;nyz&#243; „ő” betűvel) csak akkor lesz egyeztetve, ha a be&#225;ll&#237;t&#225;s &#233;rt&#233;ke kisebb, mint 0,90.\r\n    Az 1,00 k&#252;sz&#246;b&#233;rt&#233;k csak a pontos egyez&#233;seket enged&#233;lyezi.\r\n    (Vegye figyelembe, hogy a fuzzy „pontos egyez&#233;s” figyelmen k&#237;v&#252;l hagyhat olyan k&#252;l&#246;nbs&#233;geket, mint p&#233;ld&#225;ul a kis- &#233;s nagybetűhaszn&#225;latot, a sz&#243;sorrendet &#233;s az &#237;r&#225;sjeleket.)\r\n    Az alap&#233;rtelmezett &#233;rt&#233;k 0,80.</li>\r\n<li><code>TransformationTable</code> : Egy t&#225;bl&#225;zat, amely lehetőv&#233; teszi a rekordok egy&#233;ni &#233;rt&#233;kt&#225;rs&#237;t&#225;sok alapj&#225;n t&#246;rt&#233;nő egyeztet&#233;s&#233;t. Tartalmaznia kell a „From” &#233;s „To” oszlopokat. A „Szőlő” p&#233;ld&#225;ul akkor lesz egyeztetve a „Mazsola” sz&#243;val, ha meg van adva egy &#225;talak&#237;t&#225;si t&#225;bla, ahol a „From” oszlopban a „Szőlő” &#233;rt&#233;k, a „To” oszlopban pedig a „Mazsola” &#233;rt&#233;k szerepel. Vegye figyelembe, hogy az &#225;talak&#237;t&#225;s az &#225;talak&#237;t&#225;si t&#225;bl&#225;ban tal&#225;lhat&#243; &#246;sszes a sz&#246;vegelőfordul&#225;sra &#233;rv&#233;nyes lesz. A fenti &#225;talak&#237;t&#225;si t&#225;bla eset&#233;n p&#233;ld&#225;ul „A szőlő &#233;des” a „Mazsola &#233;des” kifejez&#233;ssel is egyeztetve lesz.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Két tábla bal oldali intelligens (fuzzy) belső illesztése [FirstName] alapján",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "Fuzzy illesztést végez a táblákon a megadott oszlopok használatával, és egy új oszlopban helyezi el az illesztés eredményeit.",
        "Documentation.LongDescription": "<p>A(z) <code>table1</code> és a(z) <code>table2</code> sorait kapcsolja össze a(z) <code>key1</code> (<code>table1</code>) és <code>key2</code> (<code>table2</code>) által kiválasztott kulcsoszlopok értékeinek fuzzy keresése alapján. Az eredményeket egy új, <code>newColumnName</code> nevű oszlopban adja vissza a rendszer.</p>\r\n<p>A fuzzy keresés a szöveg hasonlóságán, nem pedig a minőségén alapuló összehasonlítás.</p>\r\n<p>A választható <code>joinKind</code> adja meg az összekapcsolás típusát. Alapértelmezés szerint bal oldali külső illesztés lesz végrehajtva, ha nincs megadva <code>joinKind</code>. A választható lehetőségek a következők::\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Egy választható <code>joinOptions</code> készlet is megadható a kulcsoszlopok összehasonlítási módjának megadásához. A válaszható lehetőségek a következők: \r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Egy 1 &#233;s 8 k&#246;z&#246;tti sz&#225;m, amely megadja a fuzzy keres&#233;shez haszn&#225;land&#243; p&#225;rhuzamos sz&#225;lak sz&#225;m&#225;t. Az alap&#233;rtelmezett &#233;rt&#233;k 1.</li>\r\n<li><code>Culture</code> : Lehetőv&#233; teszi a rekordok kultur&#225;lisk&#246;rnyezet-specifikus szab&#225;lyok szerinti egyeztet&#233;s&#233;t. Ez lehet b&#225;rmilyen &#233;rv&#233;nyes kultur&#225;lisk&#246;rnyezet-n&#233;v. Ha p&#233;ld&#225;ul a Kultur&#225;lis k&#246;rnyezet be&#225;ll&#237;t&#225;s &#233;rt&#233;ke ja-JP, akkor a jap&#225;n kultur&#225;lis k&#246;rnyezet alapj&#225;n egyezteti a rekordokat. Az alap&#233;rtelmezett &#233;rt&#233;k a „”, amely a semleges angol kultur&#225;lis k&#246;rnyezet alapj&#225;n v&#233;gzi az egyeztet&#233;st.</li>\r\n<li><code>IgnoreCase</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a kulcsok kis-&#233;s nagybetűk megk&#252;l&#246;nb&#246;ztet&#233;se n&#233;lk&#252;li egyeztet&#233;s&#233;t. Igaz &#233;rt&#233;k eset&#233;n a „Szőlő” p&#233;ld&#225;ul egyezőnek minős&#252;l a „szőlő” sz&#243;val. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>IgnoreSpace</code> : Egy logikai (igaz/hamis) &#233;rt&#233;k, amely lehetőv&#233; teszi a sz&#246;vegr&#233;szek kombin&#225;l&#225;s&#225;t az egyez&#233;sek keres&#233;s&#233;hez. Igaz &#233;rt&#233;k eset&#233;n a „Sző lő” p&#233;ld&#225;ul egyezőnek minős&#252;l a „Szőlő” sz&#243;val. Az alap&#233;rtelmezett &#233;rt&#233;k Igaz.</li>\r\n<li><code>NumberOfMatches</code> : Egy eg&#233;sz sz&#225;m, amely megadja az egyező sorok maxim&#225;lis visszaadhat&#243; sz&#225;m&#225;t minden bemeneti sor eset&#233;ben. Az 1 &#233;rt&#233;k p&#233;ld&#225;ul az egyes bemeneti sorokkal legink&#225;bb egyező sort adja vissza. Ha ez a be&#225;ll&#237;t&#225;s nincs megadva, a rendszer az &#246;sszes egyező sort visszaadja.</li>\r\n<li><code>SimilarityColumnName</code> : A bemeneti &#233;rt&#233;k &#233;s az adott bemenethez tartoz&#243; reprezentat&#237;v &#233;rt&#233;k k&#246;z&#246;tti hasonl&#243;s&#225;got &#225;br&#225;zol&#243; oszlop neve. Az alap&#233;rtelmezett &#233;rt&#233;k a null, amely esetben a rendszer nem ad meg egy &#250;j oszlopot a hasonl&#243;s&#225;goknak.</li>\r\n<li><code>Threshold</code> : Egy 0,00 &#233;s 1,00 k&#246;z&#246;tti sz&#225;m, amely meghat&#225;rozza azt a hasonl&#243;s&#225;gi pontsz&#225;mot, amelyen k&#233;t &#233;rt&#233;k egyeztetve lesz.\r\n    P&#233;ld&#225;ul a „Szőlő” &#233;s a „Szlő” (hi&#225;nyz&#243; „ő” betűvel) csak akkor lesz egyeztetve, ha a be&#225;ll&#237;t&#225;s &#233;rt&#233;ke kisebb, mint 0,90.\r\n    Az 1,00 k&#252;sz&#246;b&#233;rt&#233;k csak a pontos egyez&#233;seket enged&#233;lyezi.\r\n    (Vegye figyelembe, hogy a fuzzy „pontos egyez&#233;s” figyelmen k&#237;v&#252;l hagyhat olyan k&#252;l&#246;nbs&#233;geket, mint p&#233;ld&#225;ul a kis- &#233;s nagybetűhaszn&#225;latot, a sz&#243;sorrendet &#233;s az &#237;r&#225;sjeleket.)\r\n    Az alap&#233;rtelmezett &#233;rt&#233;k 0,80.</li>\r\n<li><code>TransformationTable</code> : Egy t&#225;bl&#225;zat, amely lehetőv&#233; teszi a rekordok egy&#233;ni &#233;rt&#233;kt&#225;rs&#237;t&#225;sok alapj&#225;n t&#246;rt&#233;nő egyeztet&#233;s&#233;t. Tartalmaznia kell a „From” &#233;s „To” oszlopokat. A „Szőlő” p&#233;ld&#225;ul akkor lesz egyeztetve a „Mazsola” sz&#243;val, ha meg van adva egy &#225;talak&#237;t&#225;si t&#225;bla, ahol a „From” oszlopban a „Szőlő” &#233;rt&#233;k, a „To” oszlopban pedig a „Mazsola” &#233;rt&#233;k szerepel. Vegye figyelembe, hogy az &#225;talak&#237;t&#225;s az &#225;talak&#237;t&#225;si t&#225;bl&#225;ban tal&#225;lhat&#243; &#246;sszes a sz&#246;vegelőfordul&#225;sra &#233;rv&#233;nyes lesz. A fenti &#225;talak&#237;t&#225;si t&#225;bla eset&#233;n p&#233;ld&#225;ul „A szőlő &#233;des” a „Mazsola &#233;des” kifejez&#233;ssel is egyeztetve lesz.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Két tábla bal oldali intelligens (fuzzy) belső illesztése [FirstName] alapján",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "Csoportosítja a tábla azon sorait, melyek azonos kulccsal rendelkeznek.",
        "Documentation.LongDescription": "Csoportosítja a(z) <code>table</code> sorait a(z) <code>key</code> által meghatározott kulcsoszlopok szerint. A(z) <code>key</code> lehet egyetlen oszlopnév vagy oszlopnevek listája.\r\n    A függvény mindegyik csoport esetében összeállít egy rekordot, amely tartalmazza a kulcsoszlopokat (és azok értékeit), valamint a(z) <code>aggregatedColumns</code> által megadott összesített oszlopokat.\r\n    Szükség esetén <code>groupKind</code> és <code>comparer</code> is megadható.<br>\r\n    <br>\r\n    Ha az adatok már a kulcsoszlopok szerint vannak rendezve, megadható egy GroupKind.Local függvényből származó <code>groupKind</code>. Ez bizonyos esetekben javíthatja a csoportosítás teljesítményét,\r\n    mert a függvény összefüggőnek tekinti az összes olyan sort, amely a kulcsértékek adott halmazának elemeit tartalmazza.<br>\r\n    <br>\r\n    Egy <code>comparer</code> átadásakor vegye figyelembe, hogy ha az egyenlőnek tekinti az eltérő kulcsokat, elhelyezhet egy sort egy olyan csoportban, amelynek a kulcsai eltérnek a sajátjától.<br>\r\n    <br>\r\n    Ez a függvény nem garantálja a visszaadott sorok sorrendjét.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Egy összesített [total] oszlop hozzáadásával csoportosítja a táblát, amely az árak összesítését („each List.Sum([price])”) tartalmazza.",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "Sorok listáját szúrja be egy táblába a megadott helyen.",
        "Documentation.LongDescription": "Egy táblát ad vissza a sorok <code>rows</code> listájával, beszúrva a(z) <code>table</code> táblába a megadott <code>offset</code> helyen. A beszúrandó sor minden oszlopának meg kell felelnie a tábla oszloptípusának.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Beszúrja a sort a táblában az 1. pozícióba.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Beszúr két sort a táblában az 1. pozícióba.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "Összeilleszti a két tábla azon sorait, amelyek a megadott kulcsok alapján megfelelnek egymásnak.",
        "Documentation.LongDescription": "<p>A(z) <code>table1</code> sorait kapcsolja össze a(z) <code>table2</code> soraival a(z) <code>key1</code> által (<code>table1</code> esetében) és <code>key2</code> által (<code>table2</code> esetében) kiválasztott kulcsoszlopok értékeinek egyenlősége alapján.</p>\r\n<p>Alapértelmezés szerint belső illesztés lesz végrehajtva, de az illesztés típusának meghatározásához egy opcionális <code>joinKind</code> is megadható. A lehetőségek a következők:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Megadható egy opcionális <code>keyEqualityComparers</code> készlet is a kulcsoszlopok összehasonlítási módjának meghatározásához. Ez a paraméter jelenleg csak belső használatra érhető el.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Két tábla összekapcsolása egyetlen kulcsoszlop használatával.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "Két ütköző oszlopnevű tábla összekapcsolása több kulcsoszlop használatával.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "A legnagyobb sor(oka)t adja vissza az adott feltétel használatával.",
        "Documentation.LongDescription": "A(z) <code>table</code> legnagyobb sorát/sorait adja vissza a(z) <code>comparisonCriteria</code> megadása alapján.\r\n    A sorok rendezése után meg kell adni a(z) <code>countOrCondition</code> paramétert az eredmény további szűréséhez. A rendezési algoritmus nem tudja garantálni a rögzített rendezési eredményt. A(z) <code>countOrCondition</code> paraméter többféle formátumú lehet:\r\n    <ul>\r\n        <li> Ha egy szám van megadva, a függvény egy legfeljebb <code>countOrCondition</code> elemből álló, növekvő sorrendben rendezett listát ad vissza. </li>\r\n        <li> Ha egy feltétel van megadva, a függvény a feltételnek kezdetben megfelelő értékek listáját adja vissza. Ha egy elem nem felel meg a feltételnek, a függvény nem vizsgálja a további elemeket. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a legnagyobb értékű sorokat a tábla [a] oszlopában az [a] > 0 feltétellel. Ügyeljen arra, hogy a sorokat a rendszer rendezi a szűrő alkalmazása előtt.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Megkeresi a legnagyobb értékű sorokat a tábla [a] oszlopában a [b] > 0 feltétellel. Ügyeljen arra, hogy a sorokat a rendszer rendezi a szűrő alkalmazása előtt.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "A legkisebb sor(oka)t adja vissza az adott feltétel használatával.",
        "Documentation.LongDescription": "A legkisebb sor(oka)t adja vissza a(z) <code>table</code> táblából az adott <code>comparisonCriteria</code> feltétel használatával. A sorok rendezése után meg kell adni a(z) <code>countOrCondition</code> paramétert az eredmény további szűréséhez. A rendezési algoritmus nem tudja garantálni a rögzített rendezési eredményt. A(z) <code>countOrCondition</code> paraméter többféle formát ölthet:\r\n    <ul>\r\n        <li> Ha egy szám van megadva, a függvény egy legfeljebb <code>countOrCondition</code> elemből álló, növekvő sorrendben rendezett listát ad vissza. </li>\r\n        <li> Ha egy feltétel van megadva, a függvény a feltételnek kezdetben megfelelő értékek listáját adja vissza. Amint egy elem nem felel meg a feltételnek, a függvény nem vizsgálja a további elemeket. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a legkisebb értékű sorokat a tábla [a] oszlopában az [a] < 3 feltétellel. Ügyeljen arra, hogy a sorokat a rendszer rendezi a szűrő alkalmazása előtt.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Megkeresi a legkisebb értékű sorokat a tábla [a] oszlopában a [b] < 0 feltétellel. Ügyeljen arra, hogy a sorokat a rendszer rendezi a szűrő alkalmazása előtt.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "Illesztést végez a táblákon a megadott oszlopok használatával, és egy új oszlopban helyezi el az illesztés eredményeit.",
        "Documentation.LongDescription": "<p>A(z) <code>table1</code> sorait kapcsolja össze a(z) <code>table2</code> soraival a(z) <code>key1</code> által (<code>table1</code> esetében) és <code>key2</code> által (<code>table2</code> esetében) kiválasztott kulcsoszlopok értékeinek egyenlősége alapján. Az eredményeket a rendszer egy <code>newColumnName</code> nevű oszlopban tünteti fel.</p>\r\n<p>Az opcionális <code>joinKind</code> a végrehajtandó illesztés típusát határozza meg. Alapértelmezés szerint a rendszer bal oldali külső illesztést hajt végre, ha a(z) <code>joinKind</code> nincs megadva.</p>\r\n<p>Megadható egy opcionális <code>keyEqualityComparers</code> készlet is a kulcsoszlopok összehasonlítási módjának meghatározásához. Ez a funkció jelenleg csak belső használatra érhető el.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Két tábla összekapcsolása egyetlen kulcsoszlop használatával.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "Az adott egy oszloppárból, mely az attribútum-érték párokat jelenti, az attribútum oszlopának adatait oszlopfejlécekbe forgatja el.",
        "Documentation.LongDescription": "Az adott egy oszloppárból, mely az attribútum-érték párokat jelenti, az attribútum oszlopának adatait oszlopfejlécekbe forgatja el.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "A <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> tábla attribútumoszlopában levő „a”, „b” és „c” értékek kimutatásszerű kezelése a saját oszlopukban.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "A <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> tábla attribútumoszlopában levő „a”, „b” és „c” értékek kimutatásszerű kezelése a saját oszlopukban. Az „x” kulcs „c” attribútumához több érték tartozik, az ütközés feloldásához használja a List.Max függvényt.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "Lecseréli a megadott sortartományt a megadott sorokra.",
        "Documentation.LongDescription": "Lecseréli a megadott számú sort (<code>count</code>) a bemeneti <code>table</code> táblában a megadott <code>rows</code> sorra a(z) <code>offset</code> után kezdve. A(z) <code>rows</code> paraméter egy rekordlista.\r\n    <ul>\r\n       <li><code>table</code>: Az a tábla, amelyben a csere végre lesz hajtva.</li>\r\n       <li><code>offset</code>: A kihagyandó sorok száma a lecserélési művelet kezdőpontja előtt.</li>\r\n       <li><code>count</code>: A lecserélendő sorok száma.</li>\r\n       <li><code>rows</code>: A(z) <code>table</code> táblába a(z) <code>offset</code> által megadott helyen beszúrandó rekordok listája.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Az 1. pozíciótól kezdve lecserél 3 sort.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "Az egyik értéket lecseréli egy másik értékre a megadott oszlopokban.",
        "Documentation.LongDescription": "A(z) <code>oldValue</code> értéket lecseréli a(z) <code>newValue</code> értékre a(z) <code>table</code> tábla megadott oszlopaiban.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Cserélje le a „goodbye” szöveget a „world\"” szövegre a B oszlopban, hogy csak a teljes érték feleljen meg.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "Cserélje le a „your” szöveget az „or” szövegre a B oszlopban, hogy az érték bármely része megfeleljen.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "Anonimizálja az egyesült államokbeli alkalmazottainak nevét.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "Anonimizálja az egyesült államokbeli alkalmazottak összes oszlopát.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "Felosztja a megadott oszlopokat további oszlopok készletére a megadott felosztó függvény használatával.",
        "Documentation.LongDescription": "Felosztja a megadott oszlopokat további oszlopok készletére a megadott felosztó függvény használatával.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ossza a [Name] oszlopot két oszlopra az „i” pozícióban",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "Attribútum-érték párokra fordítja le a táblában levő oszlopkészleteket.",
        "Documentation.LongDescription": "Attribútum-érték párokra fordítja le a táblában levő oszlopkészleteket, egyesítve azokat az egyes sorokban levő többi értékkel.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "A <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> tábla „a”, „b” és „c” oszlopát attribútum-érték párokra alakítja át.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "Attribútum-érték párokra fordítja le a megadott halmazon kívül az összes oszlopot.",
        "Documentation.LongDescription": "A megadott készlet kivételével az összes oszlopot attribútum-érték párokká alakítja, a sorokban lévő többi értékkel egyesítve.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "A megadott készlet kivételével az összes oszlopot attribútum-érték párokká alakítja, a sorokban lévő többi értékkel egyesítve.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Teams Personal Analytics",
        "Documentation.LongDescription": "<p>A Teams Analytics-összekötő révén betekintést nyerhet a Teams használati információiba. Adatokat kaphat a Teamsben végzett személyes tevékenységeire, valamint az olyan Teams-csatornákra vonatkozóan is, amelyeknek Ön a tagja.</p>\r\n<p>Az elmúlt 90 napra vonatkozóan érhetők el adatok. </p>\r\n<p> Az elérhető adatok típusairól a következő súgódokumentációban talál információt: </p>\r\n<ul>\r\n<li><b>Teams-használat:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Teams-felhasználói tevékenység:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "Adja meg a vállalat- és projektneveket.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Az Azure DevOps által kínált OData-csatornák tábláját adja vissza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "Bináris értéket olvasó bináris formátumot ad vissza.",
        "Documentation.LongDescription": "Bináris értéket olvasó bináris formátumot ad vissza. Ha a(z) <code>length</code> meg van adva, a bináris érték ennyi bájtot fog tartalmazni. Ha a(z) <code>length</code> nincs megadva, a bináris érték a fennmaradó bájtokat fogja tartalmazni. A(z) <code>length</code> megadható számként, illetve a bináris adatok előtti hosszúság bináris formátumaként.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "A két megadott érték egyenlőségének ellenőrzésén alapuló logikai érték visszaadása.",
        "Documentation.LongDescription": "Egy <code>logikai</code> értéket ad vissza a két megadott érték (<code>x</code> és <code>y</code>) egyenlőségvizsgálata alapján a megadott <code>comparer</code> használatával.\r\n      <div>\r\n        A(z) <code>comparer</code> egy <code>összehasonlító</code>, amely az összehasonlítást szabályozza.\r\n        Az összehasonlító olyan függvény, amely két argumentumot vár, és -1, 0 vagy 1 értéket ad vissza attól függően, hogy az első megadott érték a másodikhoz képest kisebb, azzal egyenlő vagy nagyobb.\r\n        Az összehasonlítók a kis- és nagybetűket meg nem különböztető, illetve kulturális környezetet és területi beállítást figyelembe vevő összehasonlítások megadására használhatók.\r\n      </div>\r\n      <div>\r\n        A következő beépített összehasonlítók érhetők el a képletnyelvben:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Kis- és nagybetűk megkülönböztetése nélküli, pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li> <code>Comparer.FromCulture</code>: Kulturális környezetet figyelembe vevő összehasonlítás végrehajtására szolgál</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Az „1” és az „A” érték egyenlőségvizsgálata az „en-US” nyelv szerint.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "Az aktuális dátumot és időt adja vissza a helyi időzónában. Ez az érték rögzített, és egymást követő hívások esetén nem változik.",
        "Documentation.LongDescription": "Egy olyan <code>datetime</code> típusú értéket ad vissza, amely a rendszer aktuális dátumát és idejét tartalmazza. Ez az érték rögzített, és egymást követő hívások esetén nem változik, ellentétben a DateTime.LocalNow értékkel, amely egy kifejezés végrehajtása során eltérő értékeket adhat vissza.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "Az aktuális dátumot és időt adja vissza a helyi időzónában.",
        "Documentation.LongDescription": "Egy olyan <code>datetime</code> típusú értéket ad vissza, amely a rendszer aktuális dátumát és idejét tartalmazza.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "Az aktuális dátumot és időt adja vissza a helyi időzónában. Ez az érték rögzített, és egymást követő hívások esetén nem változik.",
        "Documentation.LongDescription": "Egy olyan <code>datetime</code> típusú értéket ad vissza, amely a rendszer aktuális dátumát és idejét tartalmazza. A visszaadott érték a helyi időzónát jelölő időzónaadatokat tartalmaz. Ez az érték rögzített, és egymást követő hívások esetén nem változik, ellentétben a DateTimeZone.LocalNow értékkel, amely egy kifejezés végrehajtása során eltérő értékeket adhat vissza.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "Az aktuális dátumot és időt adja vissza az UTC (egyezményes világidő) időzónában. Ez az érték rögzített, és egymást követő hívások esetén nem változik.",
        "Documentation.LongDescription": "Az aktuális dátumot és időt adja vissza az UTC (egyezményes világidő) időzónában. Ez az érték rögzített, és egymást követő hívások esetén nem változik.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "Az aktuális dátumot és időt adja vissza a helyi időzónában.",
        "Documentation.LongDescription": "Egy olyan <code>datetimezone</code> típusú értéket ad vissza, amely a rendszer aktuális dátumát és idejét tartalmazza. \r\n    A visszaadott érték a helyi időzónát jelölő időzónaadatokat tartalmaz.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "Az aktuális dátumot és időt adja vissza az UTC (egyezményes világidő) időzónában.",
        "Documentation.LongDescription": "Az aktuális dátumot és időt adja vissza az UTC (egyezményes világidő) időzónában.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Az aktuális dátum és idő lekérése az UTC időzónában",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "Egy nem átlátszó azonosítót ad vissza az aktuálisan futó értékeléshez.",
        "Documentation.LongDescription": "Egy nem átlátszó azonosítót ad vissza az aktuálisan futó értékeléshez.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "Egy nem átlátszó azonosítót ad vissza a bejövő kérelmek kimenő kérelmekkel való korrelációjához.",
        "Documentation.LongDescription": "Egy nem átlátszó azonosítót ad vissza a bejövő kérelmek kimenő kérelmekkel való korrelációjához.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "Egy nyomkövetési bejegyzést ír, ha a nyomkövetés engedélyezve van, és visszaadja az értéket.",
        "Documentation.LongDescription": "Egy nyomkövetést (<code>message</code>) ír, ha a nyomkövetés engedélyezve van, és visszaadja a(z) <code>value</code> értéket. Egy választható paraméter (<code>delayed</code>) meghatározza, hogy a(z) <code>value</code> kiértékelése késleltetve legyen-e az üzenet nyomon követéséig. A(z) <code>traceLevel</code> a következő értékek egyikét veheti fel:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Az üzenet nyomon követése a Text.Form függvény meghívása előtt, és az eredmény visszaadása.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "Az aktuális gazdagép alapértelmezett identitásszolgáltatója.",
        "Documentation.LongDescription": "Az aktuális gazdagép alapértelmezett identitásszolgáltatója.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "Összesít egy összegértéket a lista elemeiből.",
        "Documentation.LongDescription": "Összesít egy összegértéket a(z) <code>list</code> lista elemeiből a következő használatával: <code>accumulator</code>.\r\n    Megadható egy nem kötelező <code>seed</code> kezdőérték paraméter.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Összesít egy összegértéket az {1, 2, 3, 4, 5} lista elemeiből a ((state, current) => state + current ) képlet használatával.",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "Egy datetimezone (dátum és idő időzóna-eltolással) típusú értékekből álló listát hoz létre egy kezdeti érték, egy elemszám és egy növekmény-időtartam megadása alapján.",
        "Documentation.LongDescription": "Egy <code>count</code> méretű, <code>start</code> értéktől induló, <code>datetimezone</code> típusú értékekből álló listát ad vissza. A megadott <code>step</code> növekmény egy <code>duration</code> típusú érték, amelyet a függvény hozzáad minden egyes értékhez.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "10 értékből álló lista létrehozása, újév előtt 5 perccel kezdve (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)), 1 perces növekménnyel (#duration(0, 0, 1, 0))",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "Egy datetime (dátum és idő) típusú értékekből álló listát hoz létre egy kezdeti érték, egy elemszám és egy növekmény-időtartam megadása alapján.",
        "Documentation.LongDescription": "Egy <code>count</code> méretű, <code>start</code> értéktől induló, <code>datetime</code> típusú értékekből álló listát ad vissza. A megadott <code>step</code> növekmény egy <code>duration</code> típusú érték, amelyet a függvény hozzáad minden egyes értékhez.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "10 értékből álló lista létrehozása, újév előtt 5 perccel kezdve (#datetime(2011, 12, 31, 23, 55, 0)), 1 perces növekménnyel (#duration(0, 0, 1, 0))",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "Egy date (dátum) típusú értékekből álló listát hoz létre egy kezdeti érték, egy elemszám és egy növekmény-időtartam megadása alapján.",
        "Documentation.LongDescription": "Egy <code>count</code> méretű, <code>start</code> értéktől induló, <code>date</code> típusú értékekből álló listát ad vissza. A megadott <code>step</code> növekmény egy <code>duration</code> típusú érték, amelyet a függvény hozzáad minden egyes értékhez.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Hozzon létre egy 5 értékből álló listát, amelynek első eleme szilveszter (#date(2011, 12, 31)), és az érték 1 nappal növekszik (#duration(1, 0, 0, 0)).",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "Egy duration (időtartam) típusú értékekből álló listát hoz létre egy kezdeti érték, egy elemszám és egy növekményes időtartam érték megadása alapján.",
        "Documentation.LongDescription": "<code>count</code> db <code>duration</code> értékből álló listát ad vissza, melynek kezdőpontja: <code>start</code>, növekménye pedig: <code>step</code> <code>duration</code> érték.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Hozzon létre egy 5 értékből álló listát, amelynek első eleme 1 óra, és az érték egy órával növekszik.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "Értéklistát hoz létre.",
        "Documentation.LongDescription": "Értéklistát hoz létre a megadott függvények használatával. A(z) <code>initial</code> függvény létrehoz egy kezdő jelöltértéket, amelyet ezután a(z) <code>condition</code> ellenében tesztel.\r\n     Ha a jelölt értéke jóvá van hagyva, akkor az eredményül kapott lista részeként lesz visszaadva, a következő jelölt érték pedig úgy jön létre, hogy a rendszer az újonnan jóváhagyott <code>next</code> értéket adja át.\r\n Amint egy jelölt értéke nem felel meg a(z) <code>condition</code> feltételének, a listalétrehozási folyamat leáll.\r\n Az eredményként kapott lista elemeinek átalakításához megadható a(z) <code>selector</code>opcionális paraméter is.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Hozzon létre egy listát úgy, hogy tíztől kezdve ismétlődően eggyel csökkenti, és gondoskodik arról, hogy minden elem nullánál nagyobb legyen.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "Létrehoz egy olyan rekordlistát, amely tartalmazza x-et és y-t, ahol x egy érték, y pedig egy lista. Az x értéknek 10 alatt kell maradnia, ez az érték jelzi az y lista elemeinek számát. A lista létrehozása után a függvény csak az x értékeket adja vissza.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "Értékeket szúr be egy listába a megadott indexnél.",
        "Documentation.LongDescription": "Új listát ad vissza, amely úgy készült, hogy a(z) <code>values</code> értékeit beilleszti a(z) <code>list</code> listába <code>index</code> index által megadott pozícióba. A lista első pozíciója a 0. index.\r\n      <ul>\r\n        <li><code>list</code>: a céllista, ahová az értékeket be kell szúrni</li>\r\n        <li><code>index</code>: a céllista (<code>list</code>) azon indexe, ahová az értékeket be kell szúrni A lista első pozíciója a 0. index.</li>\r\n        <li><code>values</code>: a(z) <code>list</code> listába beszúrandó értékek listája</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "A ({3, 4}) lista beszúrása az ({1, 2, 5}) céllistába a 2. indexnél.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "Beágyazott listát is tartalmazó lista ({1, {1.1, 1.2}}) beszúrása a ({2, 3, 4}) céllistába, a 0. indexnél.",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "Lecserél megadott számú értéket egy pozíciótól kezdődően a megadott csereértékekre.",
        "Documentation.LongDescription": "Lecserél <code>count</code> értéket a(z) <code>list</code> listán a(z) <code>replaceWith</code> elemeire a megadott <code>index</code> pozíciótól kezdődően.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "A {7, 8, 9} lista lecserélése az {1, 2, 7, 8, 9, 5} listán a {3, 4} listára",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "Megkeresi a megadott értéket egy listán, és lecseréli.",
        "Documentation.LongDescription": "Megkeresi az értékek <code>list</code> listáján a(z) <code>oldValue</code> értéket, és mindegyik előfordulását lecseréli a(z) <code>newValue</code> csereértékre.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Az összes „a” érték lecserélése az {\"a\", \"B\", \"a\", \"a\"} listán az „A” értékre",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "Egy time (idő) típusú értékekből álló listát hoz létre egy kezdeti érték, egy elemszám és egy növekmény-időtartam megadása alapján.",
        "Documentation.LongDescription": "Egy <code>count</code> méretű, <code>start</code> értéktől induló, <code>time</code> típusú értékekből álló listát ad vissza. A megadott <code>step</code> növekmény egy <code>duration</code> típusú érték, amelyet a függvény hozzáad minden egyes értékhez.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "4 értékből álló lista létrehozása, déltől kezdve (#time(12, 0, 0)), egy órás növekménnyel (#duration(0, 1, 0, 0))",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "Olyan listát ad vissza, amelynek elemei a bemeneti lista megadott függvények használatával való átalakításából származnak.",
        "Documentation.LongDescription": "Egy olyan listát ad vissza, amelynek elemei a bemeneti listából vannak kivetítve.<br>\r\n    <br>\r\n    A(z) <code>collectionTransform</code> függvény köztes listává alakítja át az egyes elemeket, és a(z) <code>resultTransform</code> függvény megkapja az eredeti elemet és egy elemet a köztes listából a végeredmény létrehozásához. <br>\r\n    <br>\r\n    A(z) <code>collectionTransform</code> függvény aláírása <code>(x bármely) lista =>... </code>, ahol az <code>x</code> a(z) <code>list</code> eleme.\r\n    A(z) <code>resultTransform</code> függvény az eredmény alakját vetíti ki, és az aláírása <code>(x bármely, y bármely) bármely => ...</code>, ahol  az <code>x</code> a(z) <code>list</code> eleme és  az <code>y</code> pedig az <code>x</code> <code>collectionTransform</code> függvénynek történő átadásával létrehozott lista egyik eleme.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Egybesimíthatja a személyek és a kedvenceik listáját.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "Egy véletlenszerű számot ad vissza.",
        "Documentation.LongDescription": "Egy 0 és 1 közötti véletlenszerű számot ad vissza.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Egy véletlenszerű szám lekérése",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "Felvesz egy mezőt egy rekordba.",
        "Documentation.LongDescription": "Felvesz egy mezőt a(z) <code>record</code> rekordba a mező megadott <code>fieldName</code> neve és <code>value</code> értéke alapján.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Felveszi a Cím mezőt a rekordba.",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "Lecseréli a szöveget a megadott bemeneti adatban.",
        "Documentation.LongDescription": "Lecseréli az eredeti <code>text</code> elemben levő <code>old</code> szöveget az új <code>new</code> szövegre. Ez a lecserélő függvény a <code>List.ReplaceValue</code> és a <code>Table.ReplaceValue</code> függvényben használható.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "A „hE” szöveg lecserélése a „He” szövegre a „hEllo world” sztringben",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "Lecseréli az értékeket a megadott bemeneti adatban.",
        "Documentation.LongDescription": "Lecseréli az eredeti <code>value</code> elemben levő <code>old</code> értéket az új <code>new</code> értékre. Ez a lecserélő függvény a <code>List.ReplaceValue</code> és a <code>Table.ReplaceValue</code> függvényben használható.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "A 11 érték lecserélése a 10 értékre",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Egy JSON-eredményt ad vissza a Smartsheet API-ról",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "Hívást küld a Smartsheet 2.0 REST API-ra a megadott végponton, és az eredményeket JSON-rekordként adja vissza.",
        "Documentation.Examples": [
          {
            "Description": "Adatokat kér le a lapok Smartsheet API-végpontjáról további megadott argumentumokkal",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "A Smartsheet API által visszaadott lapinformációk táblája"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.ContentsV110",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "RangeStart": "datetime",
        "RangeEnd": "datetime"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely nem végez felosztást, és egyetlen elemlistán adja vissza az argumentumát.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely nem végez felosztást, és egyetlen elemlistán adja vissza az argumentumát.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a szóközöknél.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a szóközöknél.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása térközkarakterek szerint, idézőjelek kezelése más karakterekhez hasonlóan.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "Egy táblalistába particionálja a táblát a csoportok és oszlopok megadott száma alapján.",
        "Documentation.LongDescription": "Particionálja a(z) <code>table</code> táblát egy <code>groups</code> számú táblából álló listába a(z) <code>column</code> tábla és a(z) <code>hash</code> függvény alapján.\r\n    A(z) <code>hash</code> függvényt alkalmazza a rendszer a(z) <code>column</code> sor értékére a sor kivonatértékének meghatározásához. A kivonatérték moduló <code>groups</code> módon (maradékos osztással) határozza meg, hogy melyik visszaadott táblában legyen az adott sor.\r\n    <ul>\r\n       <li><code>table</code>: A particionálandó tábla.</li>\r\n       <li><code>column</code>: A kivonat készítéséhez szükséges sor annak meghatározására, hogy melyik visszaadott táblában van a sor.</li>\r\n       <li><code>groups</code>: A táblák száma, melyekre particionálja a rendszer a bemeneti táblát.</li>\r\n       <li><code>hash</code>: A kivonat értékének megállapítására szolgáló függvény.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "A(z) <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> tábla particionálása 2 táblába a(z) [a] oszlopban, az oszlopok értékének kivonatfüggvényként való használatával.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "<code>text</code> részét adja vissza a meghatározott <code>startDelimiter</code> és <code>endDelimiter</code> között.\r\n    Egy opcionális <code>startIndex</code> szám jelöli, a(z) <code>startDelimiter</code> melyik előfordulása legyen számba véve.\r\n    Egy opcionális <code>startIndex</code> lista jelöli, a(z) <code>startDelimiter</code> mely előfordulása legyen számba véve, valamint, hogy az indexelés a bevitel elejétől vagy végétől történjen-e.\r\n    A(z) <code>endIndex</code> ehhez hasonló, azzal a különbséggel, hogy az indexelés a(z) <code>startIndex</code> értékhez viszonyítva történik.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "„111 (222) 333 (444)” részének lekérése az (első) nyitó zárójel és az azt követő (első) záró zárójel között.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "Az „111 (222) 333 (444)” azon részének lekérése, ami a második nyitó zárójel és az azt követő első záró zárójel között van.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "Az „111 (222) 333 (444)” azon részének lekérése, ami az utolsó előtti nyitó zárójel és az azt követő második záró zárójel között van.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "Szöveges értéket szúr be egy másikba a megadott pozíciónál.",
        "Documentation.LongDescription": "A(z) <code>newText</code> szöveges értéknek a(z) <code>text</code> szöveges értékbe a(z) <code>offset</code> pozíciónál való beszúrási eredményét adja vissza. A pozíciók számozása 0-nál kezdődik.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "A „C” karaktert szúrja be a „B” és a „D” közé a „ABD” karakterláncban.",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "Visszaad egy új, véletlenszerűen előállított globálisan egyedi azonosítót (GUID).",
        "Documentation.LongDescription": "Visszaad egy új, véletlenszerűen előállított globálisan egyedi azonosítót (GUID).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "Lecseréli a megadott sztringrészlet összes előfordulását a szövegben.",
        "Documentation.LongDescription": "Azt az eredményt adja vissza, amely a(z) <code>old</code> szöveges érték <code>text</code> szöveges értékben levő összes előfordulásának a(z) <code>new</code> szöveges értékre való lecserélésével keletkezik. Ez a függvény megkülönbözteti a kis- és nagybetűket.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "A „the” karakterlánc összes előfordulásának lecserélése egy mondatban az „a” karakterre",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "Eltávolít egy karaktertartományt, és beszúr egy új értéket a megadott pozícióba.",
        "Documentation.LongDescription": "Azt az eredményt adja vissza, amely a(z) <code>count</code> karaktereknek a(z) <code>text</code> szöveges érték <code>offset</code>. pozíciójától kezdődő eltávolításával, majd a(z) <code>newText</code> szöveges értéknek a(z) <code>text</code> ugyanazon pozíciójába való beszúrásával keletkezik.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Egyetlen karakter lecserélése az „ABGF” szöveges érték 2. pozíciójában az új „CDE” szöveges értékre",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "Hozzáad egy kulcsot a megadott táblatípushoz.",
        "Documentation.LongDescription": "Hozzáad egy kulcsot a megadott táblatípushoz.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "A feltétel által elfogadott identitások listáját adja vissza.",
        "Documentation.LongDescription": "<p>A megadott <code>identityProvider</code> használatával a(z) <code>condition</code> elemet azon identitások listájává konvertálja, amelyekhez a(z) <code>condition</code> <code>true</code> értéket ad vissza minden engedélyezési környezetben, ha a(z) <code>identityProvider</code> az identitásszolgáltató. Hiba történik, ha nem lehet identitáslistává konvertálni a(z) <code>condition</code> elemet, például ha a(z) <code>condition</code> nem felhasználói vagy csoportidentitás-attribútumok alapján dönt.</p>\r\n    <p>Vegye figyelembe, hogy az identitáslista úgy jelöli az identitásokat, ahogyan a(z) <code>condition</code> szolgáltatásban megjelennek, és nem történik rajtuk normalizálás (például csoportbővítés).</p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "A megadott tömörítéstípussal tömöríti a bináris értékeket.",
        "Documentation.LongDescription": "A megadott tömörítési típussal tömöríti a bináris értékeket. A hívás eredménye a bemenet tömörített másolata. A tömörítési típusok a következők:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Bináris érték tömörítése.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "Kibontja a bináris értékeket a megadott tömörítési típusnak megfelelően.",
        "Documentation.LongDescription": "Kibontja a bináris értékeket a megadott tömörítési típusnak megfelelően.  A hívás eredménye a bemeneti adatok kibontott példánya. A tömörítési típusok a következők:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "A bináris érték kibontása.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "A bináris érték részhalmazát adja vissza egy eltolástól kezdődően.",
        "Documentation.LongDescription": "A bináris érték részhalmazát adja vissza a(z) <code>binary</code> eltolástól kezdődően. Az opcionális <code>offset</code> paraméter a részhalmaz maximális hosszát határozza meg.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "A bináris érték részhalmazát adja vissza a 6-os eltolástól kezdődően.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "A bináris érték 2 számból álló részhalmazát adja vissza a 6-os eltolástól kezdődően.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "Bináris fájlokból álló listára osztja fel a megadott bináris fájlt a megadott oldalméret használatával.",
        "Documentation.LongDescription": "Több bináris fájlból listából álló listára osztja fel a(z) <code>binary</code> elemet, ahol a kimeneti lista első eleme egy, a(z) \r\n    forrás bináris fájl első <code>pageSize</code> bájtját tartalmazó bináris fájl, a kimeneti lista következő eleme a forrás bináris fájl következő <code>pageSize</code> bájtját tartalmazó bináris fájl stb.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "Létrehoz vagy kibővít egy binárist a lekérdezési és műveleti tevékenységekhez a felhasználó által meghatározott kezelőkkel.",
        "Documentation.LongDescription": "<p>Visszaad egy <code>binary</code> nézetet, ahol a <code>handlers</code> megadott függvényeit használja a rendszer egy művelet alapértelmezett viselkedése helyett, ha a műveletet alkalmazza a nézetre.</p>\r\n<p>Ha a <code>binary</code> meg lett adva, az összes kezelőfüggvény opcionális. Ha a <code>binary</code> nem lett megadva, a <code>GetStream</code> kezelőfüggvény használata kötelező. Ha nem lett kezelőfüggvény megadva egy művelethez, a rendszer a művelet alapértelmezett viselkedését alkalmazza a <code>binary</code> elemre (kivéve a <code>GetExpression</code> esetében).</p>\r\n<p>A kezelőfüggvényeknek olyan értéket kell visszaadniuk, amely szemantikailag megegyezik a műveletnek a <code>binary</code> esetében való alkalmazásának eredményével (vagy <code>GetExpression</code> esetén az eredményül kapott nézettel).</p>\r\n<p>Ha egy kezelőfüggvény hibát jelez, a nézetre a rendszer az alapértelmezett viselkedést alkalmazza.</p>\r\n<p>A <code>Binary.View</code> segítségével implementálható egy adatforrásba való összevonás – M-lekérdezések fordítása forrásspecifikus műveletekbe (pl. egy fájl adott szakaszának letöltése).</p>\r\n<p>A <code>Binary.View</code> részletesebb leírásáért tekintse meg a Power Query egyéni csatlakoztató közzétett dokumentációját.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Létrehoz egy alapszintű nézetet, amely nem igényli az adatokhoz való hozzáférést a hossz meghatározásához.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "Egy függvény által meghatározott bájtsorrendű bináris formátumot ad vissza.",
        "Documentation.LongDescription": "A(z) <code>binaryFormat</code> által meghatározott bájtsorrendű bináris formátumot ad vissza. Az alapértelmezett bájtsorrend a következő: <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "Olyan bináris formátumot ad vissza, amely kiválasztja a következő bináris formátumot egy már kiolvasott érték alapján.",
        "Documentation.LongDescription": "Olyan bináris formátumot ad vissza, amely kiválasztja a következő bináris formátumot egy már kiolvasott érték alapján. A függvény által létrehozott bináris formátumú érték a következő szakaszokat követve működik:<ul>\r\n<li>A(z) <code>binaryFormat</code> paraméter által megadott bináris formátum használható az érték kiolvasásához.</li>\r\n<li>Az értéket át kell adni a(z) <code>chooseFunction</code> paraméter által meghatározott választó függvénynek.</li>\r\n<li>A választó függvény megvizsgálja az értéket, és visszaad egy második bináris formátumot.</li>\r\n<li>A második bináris formátum egy második érték kiolvasásához használható.</li>\r\n<li>Ha meg van adva az egyesítő függvény, akkor a rendszer átadja az első és a második értéket az egyesítő függvénynek, amely visszaadja eredményként létrehozott értéket.</li>\r\n<li>Ha nincs megadva az összesítő függvény, a visszaadott érték a második érték lesz.</li>\r\n<li>A rendszer visszaadja a második értéket.</li>\r\n</ul>A választható <code>type</code> paraméter jelzi a választó függvény által visszaadandó bináris formátum típusát. Itt a következő adhatók meg: <code>type any</code>, <code>type list</code> vagy <code>type binary</code>. Ha a(z) <code>type</code> paraméter nincs megadva, a rendszer a <code>type any</code> lehetőséget használja. A <code>type list</code> vagy a <code>type binary</code> használata esetén a rendszer streamként küldött <code>binary</code> vagy <code>list</code> értéket tud visszaadni a pufferelt érték helyett, ami csökkentheti a formátum olvasásához szükséges memória mennyiségét.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "Kiolvassa a bájtok listáját, amelyben az első bájt határozza meg az elemek számát.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "Kiolvassa a bájtok listáját, amelyben az első bájt határozza meg az elemek számát; megőrzi az első bájtból kiolvasott értéket.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "Streamként küldött lista használatával kiolvassa a bájtok listáját, amelyben az első bájt határozza meg az elemek számát.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "Elemcsoportot olvasó bináris formátumot ad vissza.",
        "Documentation.LongDescription": "A paraméterek a következők:\r\n<ul>\r\n<li>A(z) <code>binaryFormat</code> paraméter határozza meg a kulcsérték bináris formátumát.</li>\r\n<li>A(z) <code>group</code> paraméter szolgáltat adatokat az ismert elemek csoportjáról.</li>\r\n<li>A választható <code>extra</code> paraméterrel adható meg olyan függvény, amely bináris formátumú értéket ad vissza a nem várt kulcsok értékéhez. Ha a(z) <code>extra</code> paraméter nincs megadva, akkor hiba jelentkezik a nem várt kulcsértékek esetében.</li>\r\n</ul>\r\nA(z) <code>group</code> paraméter elemdefiníciók listáját határozza meg. Az elemdefiníciók 3–5 értéket tartalmazó listák. Ezek a következők:\r\n<ul>\r\n<li>Kulcsérték. Az elemnek megfelelő kulcs értéke. Egyedinek kell lennie az elemkészletben.</li>\r\n<li>Elemformátum. Az elem értékének megfelelő bináris formátum. Ez lehetővé teszi, hogy minden elemnek más formátuma legyen. </li>\r\n<li>Elem előfordulása. A <code>BinaryOccurrence.Type</code> érték azt adja meg, hogy az elemnek hányszor kell előfordulnia a csoportban. A kötelező elemek hiánya hibát okoz. A rendszer nem várt kulcsértékként kezeli az ismétlődő kötelező vagy válaszható elemeket.</li>\r\n<li>Elem alapértelmezett értéke (választható). Ha alapértelmezett elemérték szerepel az elemdefiníciók listáján, és nem null, akkor a rendszer ezt használja az alapérték helyett. Az ismétlődő és a választható elemek alapértéke null, és az ismétlődő értékek alapérték az üres lista { }.</li>\r\n<li>Elem értékének átalakítása (választható). Ha az elemértéket átalakító függvény szerepel az elemdefiníciók listáján, és nem null, akkor a rendszer ezt a függvény hívja meg az elemérték átalakításához az érték visszaadása előtt. Az átalakító függvény meghívása csak akkor történik meg, ha az elem szerepel a bemenetben (az alapértelmezett értékkel nem hívható meg). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "Az alábbiakban olyan kulcsértéket feltételezünk, amely egybájtos, 4 elem tartozik hozzá a csoportban, és mind a 4 elemben egy bájtnyi adat szerepel a kulcs után. Az elemek a következőképpen szerepelnek a bemenetben:\r\n<ul>\r\n<li>Az 1. kulcs kötelező, és a 11 értékkel jelenik meg.</li>\r\n<li>A 2. kulcs ismétlődik, kétszer jelenik meg a 22 értékkel, és a { 22, 22 } értéket adja eredményül.</li>\r\n<li>A 3. kulcs választható, nem jelenik meg, és null értéket ad eredményül.</li>\r\n<li>A 4. kulcs ismétlődik, de nem jelenik meg, és a { } értéket adja eredményül.</li>\r\n<li>Az 5. kulcs nem része a csoportnak, de megjelenik egyszer az 55 értékkel. Az extra függvény meghívása az 5. kulcsértékkel történik, és a visszaadott eredmény az adott értéknek megfelelő formátum lesz (BinaryFormat.Byte). A rendszer kiolvassa az 55 értéket, és figyelmen kívül hagyja azt.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "A következő példa az elemérték átalakítását és az alapértelmezett elemértéket mutatja be. Az 1. kulcshoz tartozó ismétlődő elem a List.Sum függvény használatával összesíti a kiolvasott értékek listáját. A 2. kulcshoz tartozó választható elem alapértéke 123 a null érték helyett.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "Bináris formátumot ad vissza, amely korlátozza az olvasható adatok mennyiségét.",
        "Documentation.LongDescription": "Bináris formátumot ad vissza, amely korlátozza az olvasható adatok mennyiségét. A <code>BinaryFormat.List</code> és a <code>BinaryFormat.Binary</code> függvény is használható az olvasáshoz az adatok végéig. A <code>BinaryFormat.Length</code> használatával korlátozható az olvasandó bájtok száma. A(z) <code>binaryFormat</code> paraméter határozza meg a korlátozandó bináris formátumot. A(z) <code>length</code> paraméter határozza meg az olvasandó bájtok számát. A(z) <code>length</code> paraméter lehet számérték, illetve bináris formátumot jelző érték, amely meghatározza az olvasott érték előtt található hosszúságérték formátumát.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "2-re korlátozza az olvasott bájtok számát a bájtlisták olvasásakor.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "A listát megelőző bájtértékre korlátozza az olvasott bájtok számát a bájtlisták olvasásakor.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "Bináris formátumot ad vissza, amely átalakítja a másik bináris formátum által olvasott értékeket.",
        "Documentation.LongDescription": "Bináris formátumot ad vissza, amely átalakítja a másik bináris formátum által olvasott értékeket. A(z) <code>binaryFormat</code> paraméter határozza meg az érték kiolvasásához használandó bináris formátumot. A(z) <code>function</code> meghívása az érték olvasásakor történik, a visszaadott eredmény az átalakított érték.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "Kiolvas egy bájtot, és hozzáad egyet.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "Az értékeket sorszámszabályokkal összevető összehasonlító függvény visszaadása.",
        "Documentation.LongDescription": "Olyan összehasonlító függvényt ad vissza, amely sorszámszabályok használatával hasonlítja össze a megadott <code>x</code> és <code>y</code> értékeket.<br>\r\n        <br>\r\n        Az összehasonlító függvény két argumentumot fogad el, és -1, 0 vagy 1 értéket ad vissza attól függően, hogy az első érték a másodikhoz képest kisebb, egyenlő vagy nagyobb.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Az „encyclopædia” és az „encyclopaedia” szó egyezőségének vizsgálata a karakterek sorszáma alapján. A művelet ekvivalens a <code>Comparer.FromCulture(\"en-US\")</code> művelettel. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "Nem betűérzékeny összehasonlító függvényt ad vissza, amely sorrendi szabályokat használ az értékek összehasonlítására.",
        "Documentation.LongDescription": "Olyan, kis- és nagybetűk megkülönböztetése nélküli összehasonlító függvényt ad vissza, amely sorszámszabályok használatával hasonlítja össze a megadott <code>x</code> és <code>y</code> értékeket.<br>\r\n        <br>\r\n        Az összehasonlító függvény két argumentumot fogad el, és -1, 0 vagy 1 értéket ad vissza attól függően, hogy az első érték a másodikhoz képest kisebb, egyenlő vagy nagyobb.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Az „Abc” összehasonlítása az „abc”-vel nem betűérzékeny sorrendi szabályok használatával. Megjegyzés: a <code>Comparer.Ordinal</code> használata esetén az „Abc” értéke kisebb, mint az „abc”. ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "Egy dimenzióattribútum tulajdonságát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>attribute</code> dimenzióattribútum <code>propertyName</code> tulajdonságát adja vissza.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "Egy mérték egyik tulajdonságát adja vissza (cellatulajdonság).",
        "Documentation.LongDescription": "A(z) <code>measure</code> mérték <code>propertyName</code> tulajdonságát adja vissza.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL-lekérdezés forrása",
        "Documentation.LongDescription": "Databricks-adatforrás definiálása SQL-lekérdezések futtatásához"
      },
      "ReturnType": "Databricks SQL-lekérdezés",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL-lekérdezés forrása",
        "Documentation.LongDescription": "Databricks-adatforrás definiálása SQL-lekérdezések futtatásához"
      },
      "ReturnType": "Databricks SQL-lekérdezés",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "Hozzáadja a megadott számú napot a dátumhoz.",
        "Documentation.LongDescription": "Azt a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú eredményt adja vissza, amely <code>numberOfDays</code> napnak a(z) <code>dateTime</code> <code>datetime</code> értékhez való hozzáadásával keletkezik.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyhez napokat ad hozzá</li>\r\n      <li><code>numberOfDays</code>: A hozzáadni kívánt napok száma</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5 nap hozzáadása a 2011. 05. 14. dátumot jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú értékhez",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "Hozzáadja a megadott számú hónapot a dátumhoz.",
        "Documentation.LongDescription": "Azt a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú eredményt adja vissza, amely <code>numberOfMonths</code> hónap és a(z) <code>dateTime</code> <code>datetime</code> érték összeadásából keletkezik.\r\n      <ul>\r\n        <li><code>dateTime</code>: Az a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyhez hónapokat ad hozzá.</li>\r\n        <li><code>numberOfMonths</code>: A hozzáadandó hónapok száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5 hónap hozzáadása a 2011. 05. 14. dátumot jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú értékhez",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "18 hónap hozzáadása a 2011. 05. 14., 08:15:22 dátumot és időt jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú értékhez",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "Hozzáadja a megadott számú negyedévet a dátumhoz.",
        "Documentation.LongDescription": "Azt a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú eredményt adja vissza, amely <code>numberOfQuarters</code> negyedévnek a(z) <code>dateTime</code> <code>datetime</code> értékhez való hozzáadásával keletkezik.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyhez negyedéveket ad hozzá</li>\r\n      <li><code>numberOfQuarters</code>: A hozzáadni kívánt negyedévek száma</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "1 negyedév hozzáadása a 2011. 05. 14. dátumot jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú értékhez",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "Hozzáadja a megadott számú hetet a dátumhoz.",
        "Documentation.LongDescription": "Azt a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú eredményt adja vissza, amely <code>numberOfWeeks</code> hétnek a(z) <code>dateTime</code> <code>datetime</code> értékhez való hozzáadásával keletkezik.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyhez heteket ad hozzá</li>\r\n      <li><code>numberOfWeeks</code>: A hozzáadni kívánt hetek száma</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "2 hét hozzáadása a 2011. 05. 14. dátumot jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú értékhez",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "Hozzáadja a megadott számú évet a dátumhoz.",
        "Documentation.LongDescription": "Azt a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú eredményt adja vissza, amely <code>numberOfYears</code> év és a(z) <code>dateTime</code> <code>datetime</code> érték összeadásából keletkezik.\r\n      <ul>\r\n        <li><code>dateTime</code>: Az a <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyhez éveket ad hozzá.</li>\r\n        <li><code>numberOfYears</code>: A hozzáadandó évek száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "4 év hozzáadása a 2011. 05. 14. dátumot jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú értékhez",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "10 év hozzáadása a 2011. 05. 14., 08:15:22 dátumot és időt jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú értékhez",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú napon belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú napon belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>days</code>: A napok száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot követő nap a következő két napon belülre esik-e.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú hónapon belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú hónapon belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>months</code>: A hónapok száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot követő hónap a következő két hónapon belülre esik-e.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú negyedéven belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú negyedéven belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>quarters</code>: A negyedévek száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot követő negyedév a következő két negyedéven belülre esik-e.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú héten belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú héten belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>weeks</code>: A hetek száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot követő hét a következő két héten belülre esik-e.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú évben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú évben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>years</code>: Az évek száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot követő év a következő két éven belülre esik-e.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú napon következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú napon következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>days</code>: A napok száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot megelőző nap az előző két éven belülre esik-e.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú hónapban következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú hónapban következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>months</code>: A hónapok száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot megelőző hónap az előző két hónapon belülre esik-e.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú negyedévben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú negyedévben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>quarters</code>: A negyedévek száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot megelőző negyedév az előző két negyedéven belülre esik-e.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú héten belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú héten belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>weeks</code>: A hetek száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot megelőző hét az előző két héten belülre esik-e.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú éven belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú éven belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>years</code>: Az évek száma.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A példafüggvény megvizsgálja, hogy a rendszer pontos ideje szerinti napot megelőző év az előző két éven belülre esik-e.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "Hozzáadja az időzóna információt a datetime értékhez.",
        "Documentation.LongDescription": "Időzónadatokat ad hozzá a(z) <code>dateTime</code> értékhez. Az időzónára vonatkozó információk <code>timezoneHours</code> és opcionálisan <code>timezoneMinutes</code>, amelyek meghatározzák az UTC-idő kívánt eltolódását.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Állítsa be az időzónát UTC+7:30-ra (7 órával és 30 perccel UTC után).",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú órán belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú órán belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>hours</code>: Az órák száma.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő utáni óra a következő két órán belül van-e.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú percen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú percen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>minutes</code>: A percek száma.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő utáni perc a következő két percen belül van-e.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú másodpercen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő, adott számú másodpercen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>seconds</code>: A másodpercek száma.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő utáni másodperc a következő két másodpercen belül van-e.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú órán belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú órán belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>hours</code>: Az órák száma.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő előtti óra az előző két órán belül van-e.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú percen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú percen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>minutes</code>: A percek száma.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő előtti perc az előző két percen belül van-e.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú másodpercen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző, adott számú másodpercen belül következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      <li><code>seconds</code>: A másodpercek száma.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő előtti másodperc az előző két másodpercen belül van-e.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "Módosítja az érték időzónáját.",
        "Documentation.LongDescription": "Módosítja a(z) <code>dateTimeZone</code> datetimezone érték időzónára vonatkozó adatait a(z) <code>timezoneHours</code> és esetleg a(z) <code>timezoneMinutes</code> által megadott új időzónaadatokra.\r\n    Ha a(z) <code>dateTimeZone</code> nem tartalmaz időzóna összetevőt, a program kivételt vált ki.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "A #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) érték időzónaadatainak módosítása 8 órára",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "A #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) érték időzónaadatainak módosítása -30 percre",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "Név alapján ér el egy értéket egy beágyazott tartalomegyesítőben.",
        "Documentation.LongDescription": "Név alapján ér el egy értéket egy beágyazott tartalomegyesítőben.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "Létrehoz egy adott paraméter-aláírással rendelkező függvényt egy másik függvényen, amelyhez egyetlen listaargumentum tartozik",
        "Documentation.LongDescription": "Egy egyoperandusú függvényből (<code>function</code>) létrehoz egy <code>functionType</code> típusú új függvényt, amely listát készít az argumentumaiból, és továbbítja a(z) <code>function</code> felé.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Olyan kétargumentumos függvénnyé alakítja át a List.Sum-ot, amelynek az argumentumai összeadódnak",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "Kétargumentumú függvénnyé alakít át egy listát használó függvényt",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "Meghívja az adott függvényt.",
        "Documentation.LongDescription": "Meghívja az adott függvényt a megadott argumentumok listájának használatával, és visszaadja az eredményt.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "A Record.FieldNames függvény meghívása egy argumentummal [A=1,B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "A megadott időtartam elteltével meghívja az adott függvényt.",
        "Documentation.LongDescription": "<code>delay</code> időtartam elteltével visszaadja a(z) <code>function</code> függvény meghívásának eredményét.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "Skaláris függvényt ad hozzá egy vektorfüggvényhez, és több hívást egy kötegbe fűz össze.",
        "Documentation.LongDescription": "<p><code>scalarFunctionType</code> típusú skaláris függvényt ad vissza, amely a(z) <code>vectorFunction</code> függvényt hívja meg egy sornyi argumentummal, és annak egyetlen kimeneti értékét adja vissza. Emellett, ha a skaláris függvény ismételten alkalmazva van egy bemeneti tábla minden sorára (pl.: Table.AddColumn), a rendszer helyette a(z) <code>vectorFunction</code> függvényt alkalmazza egyszer minden bemenetre.</p>\r\n<p>A(z) <code>vectorFunction</code> függvény egy olyan táblát kap, amelynek oszlopai elnevezésben és pozícióban is megegyeznek a(z) <code>scalarFunctionType</code> függvény paramétereivel. A tábla minden egyes sora a skaláris függvény egyszeri meghívásának argumentumait tartalmazza, és oszlopai megfelelnek a(z) <code>scalarFunctionType</code> függvény paramétereinek.</p>\r\n<p>A(z) <code>vectorFunction</code> függvénynek a bemeneti táblával azonos hosszúságú listát kell visszaadnia, amelyben az elemnek minden pozícióban egyeznie kell azzal az eredménnyel, amelyet az azonos pozíciójú bemeneti sor skaláris függvényének kiértékelése ad.</p>\r\n<p>A bemeneti táblának streameléssel kell beérkeznie, ezért a(z) <code>vectorFunction</code> függvénynek a bemenet érkezésekor streamelnie kell a kimenetet, miközben egyszerre csak egy bemenettömböt kezelhet. Különösen fontos, hogy a(z) <code>vectorFunction</code> függvény csak egyszer enumerálja a hozzá tartozó bemeneti táblát.</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "Létrehoz egy rekordot, amely egy alkotóelemekből álló földrajzi pontot jelöl.",
        "Documentation.LongDescription": "Létrehoz egy rekordot, amely egy alkotóelemekből – hosszúság, szélesség, illetve tengerszint feletti magasság (Z) és mérték (M), ha van – álló földrajzi pontot jelöl. Egy opcionális térbeli referenciaazonosító (SRID) is megadható, ha eltér az alapértelmezett értéktől (amely 4326).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "Létrehoz egy rekordot, amely egy alkotóelemekből álló geometriai pontot jelöl.",
        "Documentation.LongDescription": "Létrehoz egy rekordot, amely egy alkotóelemekből – X koordináta, Y koordináta, illetve Z koordináta és mérték (M), ha van – álló geometriai pontot jelöl. Egy opcionális térbeli referenciaazonosító (SRID) is megadható, ha eltér az alapértelmezett értéktől (amely 0).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "Létrehoz egy identitást.",
        "Documentation.LongDescription": "Létrehoz egy identitást.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "Meghatározza, hogy egy identitás egy identitásgyűjtemény tagja-e.",
        "Documentation.LongDescription": "Meghatározza, hogy egy identitás egy identitásgyűjtemény tagja-e.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "Egy listát ad vissza, amelyen egy lista összes páratlan sorszámú eltolt eleme szerepel.",
        "Documentation.LongDescription": "Egy listát ad vissza, amelyen egy lista összes páratlan sorszámú eltolt eleme szerepel. Felváltva vesz és kihagy értékeket a(z) <code>list</code> listáról, a paraméterektől függően.\r\n    <ul>\r\n    <li><code>count</code>: Meghatározza, hogy mindig hány érték legyen kihagyva.</li>\r\n    <li><code>repeatInterval</code>: Opcionális ismétlési intervallum, amely megadja, hogy a kihagyott értékek között hány érték kerüljön felvételre.</li>\r\n    <li><code>offset</code>: Opcionális eltolási paraméter, amely megadja, hogy az értékek kihagyása a kezdeti eltolástól kiindulva kezdődjön.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Lista készítése az {1..10} tartományból, amely kihagyja az első számot",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "Lista készítése az {1..10} tartományból, amely kihagyja minden második számot.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "Lista készítése az {1..10} tartományból, amely 1-nél kezdődik, és kihagyja minden második számot",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "Lista készítése az {1..10} tartományból, amely 1-nél kezdődik, kihagy egy értéket, megtart két értéket és így tovább.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "Jelzi, hogy a lista tartalmazza-e az értéket.",
        "Documentation.LongDescription": "Jelzi, hogy a <code>list</code> lista tartalmazza-e a <code>value</code> értéket.\r\n    True értéket ad vissza, ha az érték megtalálható a listán, egyéb esetben pedig false értéket ad vissza. Megadható egy nem kötelező <code>equationCriteria</code> egyenlőségi feltétel érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3, 4, 5} lista tartalmazza-e a 3-at",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3, 4, 5} lista tartalmazza-e a 6-ot",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "Jelzi, hogy egy lista tartalmazza-e egy másik lista összes értékét.",
        "Documentation.LongDescription": "Jelzi, hogy a(z) <code>list</code> lista tartalmazza-e egy másik lista (<code>values</code>) összes értékét.\r\n    Igaz értéket ad vissza, ha az érték megtalálható a listán, egyéb esetben pedig hamis értéket ad vissza. Megadható egy nem kötelező <code>equationCriteria</code> egyenlőségi feltétel érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3, 4, 5} lista tartalmazza-e a 3-at és a 4-et",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3, 4, 5} lista tartalmazza-e az 5-öt és a 6-ot",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "Jelzi, hogy egy lista tartalmazza-e egy másik lista valamely értékét.",
        "Documentation.LongDescription": "Jelzi, hogy a(z) <code>list</code> lista tartalmazza-e egy másik lista (<code>values</code>) valamely értékét.\r\n        Igaz értéket ad vissza, ha valamely érték megtalálható a listán, egyéb esetben pedig hamis értéket ad vissza. Megadható egy nem kötelező <code>equationCriteria</code> egyenlőségi feltétel érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3, 4, 5} lista tartalmazza-e a 3-at vagy a 9-et",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3, 4, 5} lista tartalmazza-e a 6-ot vagy a 7-et",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "A két számlista közötti kovarianciát adja vissza.",
        "Documentation.LongDescription": "A két számlista (<code>numberList1</code> és <code>numberList2</code>) közötti kovarianciát adja vissza. A(z) <code>numberList1</code> és a(z) <code>numberList2</code> listának azonos számú <code>number</code> értéket kell tartalmaznia.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Két számlista közötti kovariancia kiszámítása",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "A két megadott lista különbségét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>list1</code> lista azon elemeit adja vissza, amelyek nem szerepelnek a(z) <code>list2</code> listán. Ismétlődő értékek is engedélyezettek. \r\n    Megadható egy nem kötelező <code>equationCriteria</code> egyenlőségi feltétel érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Az {1, 2, 3, 4, 5} lista azon elemeinek megkeresése, amelyek nem szerepelnek a {4, 5, 3} listán.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "Az {1, 2} lista azon elemeinek megkeresése, amelyek nem szerepelnek az {1, 2, 3} listán.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "A megadott szöveget tartalmazó értékek (köztük a rekordmezők) listáját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista azon értékeinek listáját adja vissza, amelyek tartalmazzák a következő értéket: <code>text</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "A(z) {\"a\", \"b\", \"ab\"} lista azon szöveges értékeinek megkeresése, amelyek egyeznek az „a” értékkel. ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "A lista első elemeinek halmazát adja vissza, a visszaadandó elemek megadott darabszáma vagy egy feltétel teljesülése alapján.",
        "Documentation.LongDescription": " <ul>\r\n  <li>Ha egy szám van megadva, a függvény legfeljebb annyi elemet ad vissza. </li>\r\n  <li>Ha egy feltétel van megadva, a függvény a feltételnek kezdetben megfelelő összes elemet visszaadja. Amint egy elem nem felel meg a feltételnek, a függvény nem vizsgálja a további elemeket. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "A {3, 4, 5, -1, 7, 8, 2} lista azon kezdeti értékeinek megkeresése, amelyek nagyobbak 0-nál",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "Igazat ad vissza, ha a lista összes értéke kielégíti a feltételfüggvényt.",
        "Documentation.LongDescription": "<code>true</code> értéket ad vissza, ha a(z) <code>condition</code> feltételfüggvényt a(z) <code>list</code> lista összes értéke kielégíti; egyéb esetben <code>false</code> értéket ad vissza.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Annak eldöntése, hogy a {11, 12, 13} lista összes értéke nagyobb-e 10-nél",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Annak eldöntése, hogy az {1, 2, 3} lista összes értéke nagyobb-e 10-nél",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "Igazat ad vissza, ha bármely érték kielégíti a feltételfüggvényt.",
        "Documentation.LongDescription": "<code>true</code> értéket ad vissza, ha a(z) <code>condition</code> feltételfüggvényt a(z) <code>list</code> lista bármely értéke kielégíti; egyéb esetben <code>false</code> értéket ad vissza.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Annak eldöntése, hogy a {9, 10, 11} lista bármely eleme nagyobb-e 10-nél",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Annak eldöntése, hogy az {1, 2, 3} lista bármely eleme nagyobb-e 10-nél",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "A listán szereplő legnagyobb érték(ek)et adja vissza. Meg kell adni a visszaadandó értékek számát vagy egy szűrési feltételt.",
        "Documentation.LongDescription": "A <code>list</code> listán szereplő legnagyobb érték(ek)et adja vissza.\r\n    A sorok rendezése után megadhatók nem kötelező paraméterek az eredmény további szűréséhez. A <code>countOrCondition</code> nem kötelező paraméter megadja a visszaadandó értékek számát vagy a szűrési feltételt. A nem kötelező <code>comparisonCriteria</code> paraméterrel határozható meg a listaértékek összehasonlításának módja.\r\n <ul>\r\n        <li> <code>list</code>: Az értékek listája.</li>\r\n        <li> <code>countOrCondition</code>: Ha egy szám van megadva, a függvény egy legfeljebb <code>countOrCondition</code> elemből álló, növekvő sorrendben rendezett listát ad vissza. Ha egy feltétel van megadva, a függvény a feltételnek kezdetben megfelelő elemek listáját adja vissza. Ha egy elem nem felel meg a feltételnek, a függvény nem vizsgálja a további elemeket.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Nem kötelező]</i> A nem kötelező <code>comparisonCriteria</code> érték megadásával meghatározható a lista elemeinek összehasonlítási módja. Ha ez a paraméter nullértékű, a függvény az alapértelmezett összehasonlítót használja. \r\n</ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "A listán szereplő legkisebb érték(ek)et adja vissza. Megadható a visszaadandó értékek száma vagy egy szűrési feltétel.",
        "Documentation.LongDescription": "A(z) <code>list</code> listán szereplő legkisebb érték(ek)et adja vissza.\r\n    A(z) <code>countOrCondition</code> paraméter megadja a visszaadandó értékek számát vagy a szűrési feltételt. A nem kötelező <code>comparisonCriteria</code> paraméterrel határozható meg a listaértékek összehasonlításának módja.\r\n <ul>\r\n        <li> <code>list</code>: Az értékek listája.</li>\r\n        <li> <code>countOrCondition</code>: Ha egy szám van megadva, a függvény egy legfeljebb <code>countOrCondition</code> elemből álló, növekvő sorrendben rendezett listát ad vissza. Ha egy feltétel van megadva, a függvény a feltételnek kezdetben megfelelő értékek listáját adja vissza. Ha egy elem nem felel meg a feltételnek, a függvény nem vizsgálja a további elemeket. Ha a paraméter nullértékű, a függvény a lista legkisebb értékét adja vissza.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Nem kötelező]</i> A nem kötelező <code>comparisonCriteria</code> érték megadásával meghatározható a lista elemeinek összehasonlítási módja. Ha ez a paraméter nullértékű, a függvény az alapértelmezett összehasonlítót használja. \r\n</ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "A <code>{3, 4, 5, -1, 7, 8, 2}</code> lista 5 legkisebb elemének megkeresése",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "Egy számokból álló listát ad vissza egy kezdeti érték, egy elemszám és egy nem kötelező növekményérték megadása után.",
        "Documentation.LongDescription": "Egy számokból álló listát ad vissza egy kezdeti érték, egy elemszám és egy nem kötelező növekményérték megadása után. Az alapértelmezett növekményérték 1.\r\n<ul>\r\n   <li><code>start</code>: A lista kezdőértéke</li>\r\n   <li><code>count</code>: A létrehozni kívánt értékek száma</li>\r\n   <li><code>increment</code>: <i>[Nem kötelező]</i> Az értékek növeléséhez használt növekményérték. Ha nincs megadva, az értékek növekménye 1 lesz.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "10 egymást követő számból álló, 1-től kezdődő lista létrehozása",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "10 számból álló, 1-től kezdődő lista létrehozása, ahol az egymást követő számok közötti növekmény 2",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "Egy vagy több, az adott valószínűségeknek megfelelő mintapercentilist ad vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista egy vagy több mintapercentiliseit adja vissza. Ha a(z) <code>percentiles</code> érték 0,0 és 1,0 közötti szám, akkor a rendszer percentilisként fogja kezelni, és az eredmény\r\n    a valószínűségnek megfelelő egyetlen érték. Ha a(z) <code>percentiles</code> érték a 0,0 és a 1,0 közötti értékekkel rendelkező számok listája, az eredmény\r\n    a bemeneti valószínűségnek megfelelő percentilisek listája lesz. A(z) <code>options</code> PercentileMode beállítását a tapasztalt felhasználók használhatják egy konkrétabb interpolációs módszer kiválasztására, de a legtöbb felhasználó számára ez nem ajánlott.\r\n    A <code>PercentileMode.ExcelInc</code> és <code>PercentileMode.ExcelExc</code> előre definiált szimbólumok megfelelnek az\r\n    <code>PERCENTILE.INC</code> és <code>PERCENTILE.EXC</code> Excel-függvények által használt interpolációs metódusoknak. Az alapértelmezett viselkedés megegyezik a <code>PercentileMode.ExcelInc</code> függvényével. A\r\n    <code>PercentileMode.SqlCont</code> és <code>PercentileMode.SqlDisc</code> szimbólumok megfelelnek a <code>PERCENTILE_CONT</code> és\r\n    <code>PERCENTILE_DISC</code> SQL Serverbeli viselkedésének.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Az <code>{5, 3, 1, 7, 9}</code> lista első kvartilisának megkeresése.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Az <code>{5, 3, 1, 7, 9}</code> lista kvartilisának megkeresése egy olyan interpolációs metódus használatával, amely megfelel az Excel <code>PERCENTILE.EXC</code> függvényének.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "Egy listán szereplő érték eltolását (eltolásait) adja vissza.",
        "Documentation.LongDescription": "Azt az eltolást adja vissza, amelynél a(z) <code>value</code> érték megjelenik a(z) <code>list</code> listán. –1 értéket ad vissza, ha az érték nem szerepel a listán.\r\n    Megadható egy nem kötelező <code>occurrence</code> előfordulási paraméter.\r\n<ul>\r\n    <li><code>occurrence</code>: Az előfordulások jelentendő maximális száma.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "A 3 érték előfordulási pozíciójának megkeresése az {1, 2, 3} listán",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "Egy listán szereplő érték első eltolását adja vissza.",
        "Documentation.LongDescription": "Egy <code>values</code> listán szereplő érték <code>list</code> listán való első előfordulásának eltolását adja vissza. –1 értéket ad vissza, ha nem található előfordulás.\r\n    Megadható egy nem kötelező <code>occurrence</code> előfordulási paraméter.\r\n<ul>\r\n    <li><code>occurrence</code>: Az előfordulások visszaadható maximális száma.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "A 2 vagy a 3 érték első előfordulási pozíciójának megkeresése az {1, 2, 3} listán",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "Egy lista részhalmazát adja vissza egy eltolástól kezdődően.",
        "Documentation.LongDescription": "Egy lista részhalmazát adja vissza a(z) <code>list</code> eltolástól kezdődően. A nem kötelező <code>offset</code> paraméter meghatározza a részhalmazban szereplő elemek maximális számát.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Az 1 és 10 közötti számokat tartalmazó lista 6-os eltolásánál kezdődő részhalmaz megkeresése",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "Az 1 és 10 közötti számokat tartalmazó lista 6-os eltolásánál kezdődő, 2 hosszúságú részhalmaz megkeresése",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "Eltávolítja a list1 listáról a list listán szereplő elemeket.",
        "Documentation.LongDescription": "Eltávolítja a(z) <code>list2</code> listán szereplő megadott értékek összes előfordulását a(z) <code>list1</code> listáról. Ha a(z) <code>list2</code> listán szereplő értékek nem szerepelnek a(z) <code>list1</code> listán, a függvény az eredeti listát adja vissza.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "A {2, 4, 6} lista elemeinek eltávolítása az {1, 2, 3, 4, 2, 5, 5} listáról",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "Eltávolítja a bemeneti értékek összes előfordulását.",
        "Documentation.LongDescription": "Eltávolítja a(z) <code>list2</code> listán szereplő megadott értékek összes előfordulását a(z) <code>list1</code> listáról. Ha a(z) <code>list2</code> listán szereplő értékek nem szerepelnek a(z) <code>list1</code> listán, a függvény az eredeti listát adja vissza.\r\n    Megadható egy nem kötelező <code>equationCriteria</code> egyenlőségi feltétel érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása az {1, 2, 3, 4, 5, 5} listából az {1, 5} lista elemei nélkül",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "Eltávolít megadott számú értéket a megadott pozíciótól kezdődően.",
        "Documentation.LongDescription": "Eltávolít <code>count</code> értéket a(z) <code>list</code> listáról a megadott <code>index</code> pozíciótól kezdődően.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "3 érték eltávolítása az {1, 2, 3, 4, -6, -2, -1, 5} listáról a 4-es indextől kezdődően",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "Egy olyan listát ad vissza, amely az eredeti lista adott számú ismétlődését tartalmazza.",
        "Documentation.LongDescription": "Egy olyan listát ad vissza, amely az eredeti <code>list</code> lista <code>count</code> ismétlődését tartalmazza.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Olyan lista létrehozása, amely az {1, 2} lista 3 ismétlődését tartalmazza",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "Végrehajtja mindegyik { old, new } jellegű cserét.",
        "Documentation.LongDescription": "Végrehajtja a megadott cseréket a(z) <code>list</code> listán. Egy lecserélést végző <code>replacements</code> művelet két értékből álló listát használ, a régi értéket és az új értéket tartalmazó listát.\r\n    Megadható egy nem kötelező <code>equationCriteria</code> egyenlőségi feltétel érték is az egyenlőségvizsgálat szabályozásához.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása az {1, 2, 3, 4, 5} listából az 5 érték -5 értékre cserélésével és az 1 érték -1 értékre cserélésével",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "A feltételnek megfelelő értékekből álló listát ad vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista azon értékeinek listáját adja vissza, amelyek megfelelnek a(z) <code>selection</code> kiválasztási feltételnek.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "A 0-nál nagyobb értékek megkeresése az {1, -3, 4, 9, -2} listán",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "Több listából álló listára osztja fel a megadott listát a megadott oldalméret használatával.",
        "Documentation.LongDescription": "Több listából álló listára osztja fel a(z) <code>list</code> elemet, ahol a kimeneti lista első eleme egy, a forráslista első <code>pageSize</code> elemét\r\n   tartalmazó lista, a következő eleme egy, a forráslista következő <code>pageSize</code> elemét tartalmazó lista, stb.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "Az ezen lista alapján kiszámított értékekből álló új listát ad vissza.",
        "Documentation.LongDescription": "Értékek új listáját adja vissza oly módon, hogy alkalmazza a(z) <code>transform</code> átalakító függvényt a(z) <code>list</code> listára.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "1 hozzáadása az {1, 2} lista mindegyik értékéhez",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "A két szám hányadosának arkusz tangensét adja vissza.",
        "Documentation.LongDescription": "A két szám – <code>y</code> és <code>x</code> – hányadosának arkusz tangensét adja vissza. A hányados <code>y</code>/<code>x</code> alakú lesz.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "A két bemenet közötti bitenkénti „És” művelet eredményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>number1</code> és <code>number2</code> közötti bitenkénti „És” művelet eredményét adja vissza.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "A két bemenet közötti bitenkénti „Vagy” művelet eredményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>number1</code> és <code>number2</code> közötti bitenkénti „Vagy” művelet eredményét adja vissza.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "Balra eltolja a bitkészletet.",
        "Documentation.LongDescription": "A(z) <code>number1</code> értéken elvégzett, a megadott <code>number2</code> bittel való bitenkénti balra eltolási művelet eredményét adja vissza.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "Jobbra eltolja a bitkészletet.",
        "Documentation.LongDescription": "A(z) <code>number1</code> értéken elvégzett, a megadott <code>number2</code> bittel való bitenkénti jobbra eltolási művelet eredményét adja vissza.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "A két bemenet közötti bitenkénti „XOR” (kizáró vagy) művelet eredményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>number1</code> és <code>number2</code> közötti bitenkénti „XOR” (kizáró vagy) művelet eredményét adja vissza.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "Az egyedi kombinációk számát adja vissza.",
        "Documentation.LongDescription": "Az elemek <code>setSize</code> listájából létrehozható, a megadott <code>combinationSize</code> méretű egyedi kombinációk számát adja vissza.\r\n<ul>\r\n    <li><code>setSize</code>: A listán szereplő elemek száma</li>\r\n    <li><code>combinationSize</code>: Az egyes kombinációkban szereplő elemek száma</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Összesen 5 elem kombinációinak lehetséges száma, ha mindegyik kombináció egy 3 elemű csoport",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "Két szám hányadosának egész részét adja vissza eredményként.",
        "Documentation.LongDescription": "Egy szám (<code>number1</code>) másik számmal (<code>number2</code>) való osztásából kapott hányados egész szám részét adja vissza eredményként.\r\n    Ha a(z) <code>number1</code> vagy a(z) <code>number2</code> érték null, a <code>Number.IntegerDivide</code> függvény nullértéket ad vissza.\r\n      <ul>\r\n        <li><code>number1</code>: Az osztandó.</li>\r\n        <li><code>number2</code>: Az osztó.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "6 osztása 4-gyel",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "8,3 osztása 3-mal",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "Eloszt két számot maradékos osztással, és a maradékot adja vissza.",
        "Documentation.LongDescription": "Visszaadja egy egész szám (<code>number</code>) egy másik számmal (<code>divisor</code>) való maradékos osztásából kapott maradékot.\r\n    Ha a(z) <code>number</code> vagy a(z) <code>divisor</code> érték null, a <code>Number.Mod</code> függvény nullértéket ad vissza.\r\n      <ul>\r\n        <li><code>number</code>: Az osztandó.</li>\r\n        <li><code>divisor</code>: Az osztó.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A maradék meghatározása az 5 szám 3-mal való osztásakor",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "A permutációk számát adja vissza.",
        "Documentation.LongDescription": "Az elemek <code>setSize</code> halmazából létrehozható, a megadott <code>permutationSize</code> méretű permutációk számát adja vissza.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Összesen 5 elem 3 elemű csoportokban alkotott permutációinak lehetséges száma",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "A megadott hatványra emel egy számot.",
        "Documentation.LongDescription": "A(z) <code>number</code> érték <code>power</code>. hatványra emelésének eredményét adja vissza.\r\n    Ha a(z) <code>number</code> vagy a(z) <code>power</code> érték null, a <code>Number.Power</code> függvény null értéket ad vissza.\r\n      <ul>\r\n        <li><code>number</code>: Az alap.</li>\r\n        <li><code>power</code>: A kitevő.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Az 5 érték 3. hatványra emelésének eredménye (5 köbe)",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "Két szám közé eső véletlenszerű számot ad vissza.",
        "Documentation.LongDescription": "Egy <code>bottom</code> és <code>top</code> közé eső véletlenszerű számot ad vissza.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Egy 1 és 5 közé eső véletlenszerű szám lekérése",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "Egy rekord megadott mezőjének értékét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>record</code> rekord megadott <code>field</code> mezőjének értékét adja vissza. Ha a mező nem található, a függvény kivételt vált ki.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a rekordban levő CustomerID mező értékét.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "Egy rekord megadott mezőjének értékét adja vissza, illetve az alapértelmezett értéket, ha a mező nem található.",
        "Documentation.LongDescription": "A(z) <code>record</code> rekord megadott <code>field</code> mezőjének értékét adja vissza. Ha a mező nem található, a nem kötelező <code>defaultValue</code> értéket adja vissza.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a rekordban levő Phone mező értékét, vagy null értéket ad vissza, ha az nem létezik.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "Megállapítja a rekordban levő Phone mező értékét, vagy az alapértelmezett értéket adja vissza, ha az nem létezik.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "Egy rekordot ad vissza a mezőértékek megadott listája és a mezők halmaza alapján.",
        "Documentation.LongDescription": "Egy rekordot ad vissza a mezőértékeket tartalmazó megadott <code>list</code> és a mezők halmaza alapján. A(z) <code>fields</code> megadható szöveges értékek listájával vagy egy rekordtípussal. A függvény hibát vált ki, ha a mezők nem egyediek.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Rekord összeállítása a mezőértékek listája és a mezőnevek listája alapján",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Rekord összeállítása a mezőértékek listája és egy rekordtípus alapján",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "Azt jelzi, hogy a rekord tartalmazza-e a megadott mezőket.",
        "Documentation.LongDescription": "Egy logikai érték (igaz vagy hamis) visszaadásával jelzi, hogy a(z) <code>record</code> rekord tartalmazza-e a(z) <code>fields</code> által megadott mezőket.\r\n    Lista használatával több mezőérték is megadható.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Ellenőrzi, hogy a rekord tartalmazza-e a CustomerID mezőt.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "Ellenőrzi, hogy a rekord tartalmazza-e a CustomerID és az Address mezőt.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "Eltávolítja a megadott mező(ke)t a bemeneti rekordból.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amelyből el van távolítva a bemeneti <code>record</code> összes olyan mezője, amely meg van adva a(z) <code>fields</code> listán. Ha a megadott mező nem létezik, a függvény kivételt vált ki.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja a Price mezőt a rekordból.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "Eltávolítja a Price és az Item mezőt a rekordból.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "Egy { old, new } alakú listán megadott átnevezés(eke)t hajt végre.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amelyben át vannak nevezve a bemeneti <code>record</code> mezői a(z) <code>renames</code> listán megadott új mezőnevekre. Több átnevezéshez beágyazott lista használható: ({ {old1, new1}, {old2, new2} }.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Átnevezi a UnitPrice mezőt Price-ra a rekordban.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "Átnevezi a UnitPrice mezőt Price-ra és az OrderNum mezőt OrderID-re a rekordban.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "Átrendezi a megadott mező(ke)t az új sorrendbe.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amelyben át vannak rendezve a(z) <code>record</code> mezői a(z) <code>fieldOrder</code> listán megadott mezősorrendbe. A mezőértékek megőrződnek, és a(z) <code>fieldOrder</code> listán nem szereplő mezők az eredeti helyükön maradnak.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Újrarendezi a rekordban levő egyes mezőket.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amely csak a megadott mezőket tartalmazza.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amely csak a bemeneti <code>record</code> azon mezőit tartalmazza, amelyek meg vannak adva a(z) <code>fields</code> listán.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Kiválasztja a rekordban levő Item és Price mezőket.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amelyre alkalmazta a megadott átalakításokat.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amelyre alkalmazta a(z) <code>transformOperations</code> listán a következőre megadott átalakításokat: <code>record</code>.\r\n    Egyszerre egy vagy több mező is átalakítható. \r\n      <div>Egyetlen mező átalakítása esetén a(z) <code>transformOperations</code> listának két elemet kell tartalmaznia. A(z) <code>transformOperations</code> első eleme megad egy mezőnevet, a(z) <code>transformOperations</code> második eleme pedig megadja az átalakításhoz használandó függvényt. Például: <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>Több mező átalakítása esetén a(z) <code>transformOperations</code> listának listákból kell állnia, ahol a belső listák mindegyike egy mezőnévből és egy átalakítási műveletből álló pár. Például: <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Konvertálja a „Price” mezőt számmá.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "Konvertálja az „OrderID” és a „Price” mezőt számmá.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "Visszaad egy függvényt, amely egy szöveglistára osztja fel a szövegeket az egyik karaktertípusról egy másikra való áttérés szerint. A(z) {0} és {1} paraméterek lehetnek karakterlisták, vagy olyan függvények, amelyek egy karaktert vesznek fel, és az igaz/hamis értéket adják vissza.",
        "Documentation.LongDescription": "Visszaad egy függvényt, amely egy szöveglistára osztja fel a szövegeket az egyik karaktertípusról egy másikra való áttérés szerint. A(z) <code>before</code> és <code>after</code> paraméterek lehetnek karakterlisták, vagy olyan függvények, amelyek egy karaktert vesznek fel, és az igaz/hamis értéket adják vissza.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása minden alkalommal, amikor egy kis- vagy nagybetűt számjegy követ.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "A megadott SQL-lekérdezést M-kóddá konvertálja. Ez a függvény csak belső használatra készült.",
        "Documentation.LongDescription": "A megadott <code>sql</code>-lekérdezést M-kódra konvertálja, a(z) <code>environment</code> által meghatározott elérhető azonosítókkal. Ez a függvény csak belső használatra készült.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "Az adatok egy megadott oszlopát adja vissza listaként a táblából.",
        "Documentation.LongDescription": "Az adatok <code>column</code> által megadott oszlopát adja vissza listaként a(z) <code>table</code> táblából.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Visszaadja a tábla [Name] oszlopában található értékeket.",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "A megadott típusoknak megfelelő oszlopok neveinek listáját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>table</code> tábla a következőben megadott típusoknak megfelelő oszlopainak nevét adja vissza: <code>listOfTypes</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Visszaadja a tábla Number.Type típusú oszlopainak nevét.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "Azt jelzi, hogy sorként szerepel-e az adott rekord a táblában.",
        "Documentation.LongDescription": "Azt jelzi, hogy sorként szerepel-e az adott <code>row</code> rekord a(z) <code>table</code> táblában.\r\n    A választható <code>equationCriteria</code> paraméterrel határozható meg a tábla sorainak összehasonlítása.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a tábla tartalmazza-e az adott sort.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "Megállapítja, hogy a tábla tartalmazza-e az adott sort.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "Kizárólag a [Name] oszlop összehasonlításával megállapítja, hogy a tábla tartalmazza-e az adott sort.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "Azt jelzi, hogy az összes megadott rekord sorként szerepel-e a táblában.",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>rows</code> rekordlistában az összes megadott rekord sorként szerepel-e a(z) <code>table</code> táblában.\r\n    A választható <code>equationCriteria</code> paraméterrel határozható meg a tábla sorainak összehasonlítása.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kizárólag a [CustomerID] oszlop összehasonlításával megállapítja, hogy a tábla tartalmazza-e az összes sort.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Megállapítja, hogy a tábla tartalmazza-e az összes sort.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "Azt jelzi, hogy valamely megadott rekord sorként szerepel-e a táblában.",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>rows</code> rekordlistában valamely megadott rekord sorként szerepel-e a(z) <code>table</code> táblában.\r\n    A választható <code>equationCriteria</code> paraméterrel határozható meg a tábla sorainak összehasonlítása.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> tábla tartalmazza-e a következő sorokat: <code>[a = 1, b = 2]</code> vagy <code>[a = 3, b = 5]</code>",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "Annak megállapítása, hogy az <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> tábla tartalmazza-e a következő sorokat: <code>[a = 1, b = 3]</code> vagy <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "Annak megállapítása, hogy a <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> tábla tartalmazza-e a következő sorokat: <code>[a = 1, b = 3]</code> vagy <code>[a = 3, b = 5]</code> csak az [a] oszlop összehasonlításával.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "Azt jelzi, hogy a tábla tartalmazza-e a megadott oszlopo(ka)t.",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>table</code> tábla tartalmazza-e a megadott <code>columns</code> oszlopo(ka)t. <code>true</code> értéket ad vissza, ha a tábla tartalmazza az oszlopo(ka)t, egyébként <code>false</code> értéket ad vissza.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a tábla tartalmazza-e a [Name] oszlopot.",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Ellenőrzi, hogy a tábla tartalmazza-e a [Name] és [PhoneNumber] nevű oszlopokat.",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "Azt jelzi, hogy a tábla minden sora megfelel-e az adott feltételnek.",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>table</code> tábla minden sora megfelel-e az adott <code>condition</code> feltételnek. <code>true</code> értéket ad vissza, ha minden sor megfelel, egyébként <code>false</code> értéket ad.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy az összes sorérték páros-e a tábla [a] oszlopában.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "Annak eldöntése, hogy a sorértékek [a = 1, b = 2] értékűek-e a(z) <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> táblában.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "Azt jelzi, hogy a tábla bármely sora megfelel-e az adott feltételnek.",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>table</code> tábla bármely sora megfelel-e az adott <code>condition</code> feltételnek. <code>true</code> értéket ad vissza, ha bármely sor megfelel, egyébként <code>false</code> értéket ad.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy bármely sorérték az [a] oszlopban páros-e az <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> táblában.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "Annak megállapítása, hogy bármely sorérték [a = 1, b = 2] értékű-e a táblában <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "A legnagyobb sort vagy egy adott alapértelmezett értéket ad vissza az adott feltétel használatával.",
        "Documentation.LongDescription": "A legnagyobb sort adja vissza a(z) <code>table</code> táblából az adott <code>comparisonCriteria</code> feltétel használatával. Ha a tábla üres, a nem kötelező <code>default</code> értéket adja vissza. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "A legnagyobb értékű sorok megkeresése a(z) [a] oszlopban a(z) <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> táblában.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "A legnagyobb értékű sorok megkeresése a(z) [a] oszlopban a(z) <code>({})</code> táblában, illetve -1 érték visszaadása üres lista esetén.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "A legkisebb sort vagy egy adott alapértelmezett értéket ad vissza az adott feltétel használatával.",
        "Documentation.LongDescription": "A legkisebb sort adja vissza a(z) <code>table</code> táblából az adott <code>comparisonCriteria</code> feltétel használatával. Ha a tábla üres, a nem kötelező <code>default</code> értéket adja vissza.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a legkisebb értékű sorokat a tábla [a] oszlopában.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "Megkeresi a legkisebb értékű sorokat a tábla [a] oszlopában, illetve -1 értéket ad vissza üres lista esetén.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "A táblában levő sor pozícióját vagy pozícióit adja vissza.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>row</code> első előfordulásának sorpozícióját a megadott <code>table</code> táblában. –1 értéket ad vissza, ha nem található előfordulás.\r\n    <ul>\r\n       <li><code>table</code>: A bemeneti tábla.</li>\r\n       <li><code>row</code>: A táblában lévő sor, amelynek pozícióját meg kell keresni.</li>\r\n       <li><code>occurrence</code>: <i>[Nem kötelező]</i> Azt adja meg, hogy a sor melyik előfordulásait adja vissza a függvény.</li>\r\n       <li><code>equationCriteria</code>: <i>[Nem kötelező]</i> A tábla sorainak összehasonlítását szabályozza.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi az [a = 2, b = 4] első előfordulásának pozícióját az <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> táblában.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "Megkeresi az [a = 2, b = 4] második előfordulásának pozícióját az <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> táblában.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "Megkeresi az [a = 2, b = 4] összes előfordulásának pozícióját az <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> táblában.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "A táblában levő adott sorok bármelyikének pozícióját vagy pozícióit adja vissza.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>table</code> táblából a(z) <code>rows</code> lista első előfordulási sorának pozícióját. –1 értéket ad vissza, ha nem található előfordulás.\r\n    <ul>\r\n    <li><code>table</code>: A bemeneti tábla.</li>\r\n       <li><code>rows</code>: A táblában lévő sorok listája, amelyek pozícióját meg kell keresni.</li>\r\n       <li><code>occurrence</code>: <i>[Nem kötelező]</i> Azt adja meg, hogy a sor melyik előfordulásait adja vissza a függvény.</li>\r\n       <li><code>equationCriteria</code>: <i>[Nem kötelező]</i> A tábla sorainak összehasonlítását szabályozza.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Az [a = 2, b = 4] vagy az [a = 6, b = 8] első előfordulási pozíciójának megkeresése a(z) <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> táblában.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "Az [a = 2, b = 4] vagy az [a = 6, b = 8] összes előfordulási pozíciójának megkeresése a táblában <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "Táblákból álló listára osztja fel a megadott listát a megadott oldalméret használatával.",
        "Documentation.LongDescription": "Táblákból álló listára osztja fel a(z) <code>table</code> elemet, ahol a lista első eleme egy, a forrástábla első <code>pageSize</code> sorát\r\n    tartalmazó tábla, a következő eleme egy, a forrástábla következő <code>pageSize</code> sorát tartalmazó tábla, stb.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Öt rekordot tartalmazó tábla felosztása két-két rekordot tartalmazó táblákra.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "A megadott első sorokat és a fennmaradó sorokat tartalmazó listát adja vissza.",
        "Documentation.LongDescription": "Egy olyan listát ad vissza, amely két táblát tartalmaz: az elsőt <code>table</code> N soraival (<code>count</code> által meghatározott), és egyet a(z) <code>table</code> fennmaradó soraival.\r\n\r\nHa az eredményül kapott lista táblái pontosan egyszer és sorrendben vannak felsorolva, <code>table</code> felsorolását is csak egyszer fogja elvégezi a függvény.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "A tábla első két sorát és a tábla fennmaradó sorait adja vissza.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "Átalakítja a tábla sorait a megadott átalakító függvény használatával.",
        "Documentation.LongDescription": "<code>Lista</code> létrehozásához a(z) <code>transform</code> műveletet alkalmazza a(z) <code>table</code> egyes soraira.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Táblázat sorainak átalakítása számokból álló listává.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "Numerikus táblázat sorainak átalakítása szöveges rekordokká.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "<code>text</code> részét adja vissza a meghatározott <code>delimiter</code> után.\r\n    Egy opcionális <code>index</code> szám jelöli, a(z) <code>delimiter</code> melyik előfordulása legyen számba véve.\r\n    Egy opcionális <code>index</code> lista jelöli, a(z) <code>delimiter</code> mely előfordulása legyen számba véve, valamint, hogy az indexelés a bevitel elejétől vagy végétől induljon-e.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "„111-222-333” részének lekérése az (első) kötőjel után.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "„111-222-333” részének lekérése a második kötőjel után.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "„111-222-333” részének lekérése az utolsó előtti kötőjel után.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "Visszaadja a megadott pozíciónál található karaktert.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>text</code> szöveges érték <code>index</code> pozíciójánál található karaktert. A szöveg első karaktere számít 0-s pozíciónak.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a 4-es pozíciónál levő karaktert a „Hello, World” sztringben.",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "<code>text</code> részét adja vissza a meghatározott <code>delimiter</code> előtt.\r\n    Egy opcionális <code>index</code> szám jelöli, a(z) <code>delimiter</code> melyik előfordulása legyen számba véve.\r\n    Egy opcionális <code>index</code> lista jelöli, a(z) <code>delimiter</code> mely előfordulása legyen számba véve, valamint, hogy az indexelés a bevitel elejétől vagy végétől induljon-e.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "„111-222-333” részének lekérése az (első) kötőjel előtt.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "„111-222-333” részének lekérése a második kötőjel előtt.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "„111-222-333” részének lekérése az utolsó előtti kötőjel előtt.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "Visszaadja, hogy a szöveg tartalmazza-e a sztringrészletet.",
        "Documentation.LongDescription": "Azt észleli, hogy <code>text</code> tartalmazza-e a(z) <code>substring</code> értéket. True értéket ad vissza, ha az érték megtalálható. Ez a függvény nem támogatja a helyettesítő karaktereket és a reguláris kifejezéseket.\r\n      <br>\r\n      <br>\r\n     A választható <code>comparer</code> argumentum a kis- és nagybetűk megkülönböztetésére, illetve kulturális környezetre és területi beállításokra érzékeny összehasonlításokra használható.\r\n      A következő beépített összehasonlítók érhetők el a képletnyelvben:\r\n       <ul>\r\n        <li><code>Comparer.Ordinal</code>: Kis- és nagybetűket megkülönböztető sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Kis- és nagybetűket meg nem különböztető sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li> <code>Comparer.FromCulture</code>: Kulturális környezetre érzékeny összehasonlítás végrehajtására szolgál.</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a „Hello World” szöveg tartalmazza-e a „Hello” szövegrészt.",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "Megállapítja, hogy a „Hello World” szöveg tartalmazza-e a „hello” szövegrészt.",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Annak megkeresése, hogy a szöveg „Hello World” tartalmaz-e „hello” kifejezést, a kis- és nagybetűket nem megkülönböztető összehasonlító használatával.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "Visszaadja a szöveg utolsó karakterét.",
        "Documentation.LongDescription": "Egy <code>text</code> értéket ad vissza, amely az utolsó <code>count</code> karaktert tartalmazza a <code>text</code> <code>text</code> értékből.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Beolvassa a „Hello, World” karakterlánc utolsó 5 karakterét.",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "Azt jelzi, hogy a szöveg a megadott értékkel végződik-e.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott szöveg (<code>text</code>) a megadott értékre (<code>substring</code>) végződik-e. A függvény megkülönbözteti a kis- és nagybetűket.\r\n\r\n      <div>\r\n        A(z) <code>comparer</code> egy <code>Comparer</code>, amely az összehasonlítás szabályozására szolgál. Az összehasonlítók a kis- és nagybetűket meg nem különböztető vagy kulturális környezetre és területi beállításra érzékeny összehasonlítások megadására használhatók.\r\n      </div>\r\n      <div>\r\n        A következő beépített összehasonlítók érhetőek el a képletnyelvben:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Kis- és nagybetűket meg nem különböztető, pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li> <code>Comparer.FromCulture</code>: Kulturális környezetre érzékeny összehasonlítás végrehajtására szolgál.</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Ellenőrzi, hogy a „Hello, World” karakterlánc a „world” karakterlánccal végződik-e.",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "Ellenőrzi, hogy a „Hello, World” karakterlánc a „World” karakterlánccal végződik-e.",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "Formázott szöveget ad vissza egy formázó sztringből és argumentumokból.",
        "Documentation.LongDescription": "Olyan formázott szöveget ad vissza, amelynek létrehozása <code>arguments</code> alkalmazásával történt egy listából vagy rekordból egy <code>formatString</code> formázó karakterláncra. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Számlista formázása.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "Különböző adattípusok formázása rekordokból az Egyesült Államok angol kulturális környezetének megfelelően.",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "A sztringrészt adja vissza a megadott hosszig.",
        "Documentation.LongDescription": "<code>count</code> karaktert ad vissza, vagy a(z) <code>text</code> végéig; a(z) <code>start</code> eltolásnál.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "A „Hello World” szöveg 6. indexétől kezdődő 5 karakterből álló sztringrész keresése.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "A „Hello World” szöveg 6. indexétől kezdődő és a szöveg végéig tartó sztringrész keresése.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "Visszaad egy meghatározott hosszúságú szöveget a megadott szöveg végének kitöltésével.",
        "Documentation.LongDescription": "Visszaad egy <code>text</code> értéket, amely <code>count</code> hosszúságra van kitöltve úgy, hogy szóközök vannak beszúrva a(z) <code>text</code> szöveges érték végére.\r\n    A nem kötelező <code>character</code> karakterrel a kitöltéshez használandó karakter is megadható. Az alapértelmezett kitöltő karakter a szóköz.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Kitölti egy szöveges érték végét úgy, hogy az érték 10 karakter hosszúságú legyen.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "Kitölti egy szöveges érték végét „|” karakterekkel úgy, hogy az érték 10 karakter hosszúságú legyen.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "Visszaad egy meghatározott hosszúságú szöveget a megadott szöveg elejének kitöltésével.",
        "Documentation.LongDescription": "Visszaad egy <code>text</code> értéket, amely <code>count</code> hosszúságra van kitöltve úgy, hogy szóközök vannak beszúrva a(z) <code>text</code> szöveges érték elejére.\r\n    A nem kötelező <code>character</code> karakterrel a kitöltéshez használandó karakter is megadható. Az alapértelmezett kitöltő karakter a szóköz.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Kitölti egy szöveges érték elejét úgy, hogy az érték 10 karakter hosszúságú legyen.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "Kitölti egy szöveges érték elejét „|” karakterekkel úgy, hogy az érték 10 karakter hosszúságú legyen.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "Visszaadja az érték első pozícióját (ha nincs találat, a -1 értéket adja vissza).",
        "Documentation.LongDescription": "Visszaadja a(z) <code>substring</code> szöveges érték <code>text</code> szövegbeli meghatározott előfordulásának pozícióját.\r\n   A nem kötelező <code>occurrence</code> paraméterrel adható meg, hogy melyik előfordulási pozíciót adja vissza (alapértelmezés szerint az első előfordulásét).\r\n    Ha a(z) <code>substring</code> nem található, -1 értéket ad vissza.\r\n\r\n    <div>\r\n        A(z) <code>comparer</code> egy <code>Comparer</code>, amely az összehasonlítás szabályozására szolgál. Az összehasonlítók a kis- és nagybetűket meg nem különböztető, illetve kulturális környezetet és területi beállítást figyelembe vevő összehasonlítások megadására használhatók.\r\n      </div>\r\n      <div>\r\n        A következő beépített összehasonlítók érhetők el a képletnyelvben:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Kis- és nagybetűk megkülönböztetése nélküli, pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li> <code>Comparer.FromCulture</code>: Kulturális környezetet figyelembe vevő összehasonlítás végrehajtására szolgál.</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Visszaadja a „World” szöveg első előfordulásának pozícióját a következő szövegben: „Hello, World! Hello, World!”.",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "Visszaadja a „World” szöveg utolsó előfordulásának pozícióját a következő szövegben: „Hello, World! Hello, World!”.",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "Visszaadja az első pozíciót a felsorolt karakterek szöveges értékében (ha nincs találat, a -1 értéket adja vissza).",
        "Documentation.LongDescription": "A(z) <code>characters</code> lista bármely karakterének első pozícióját adja vissza, amely a következőben található: <code>text</code>.\n    Egy nem kötelező <code>occurrence</code> paraméterrel adható meg, hogy melyik előfordulási pozíciót adja vissza.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a „W” vagy a „H” karakter első pozícióját a „Hello, World!” szövegben.",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "Megkeresi a „W“ vagy a „H“ összes pozícióját a „Hello, World!“ szövegben.",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "Visszaadja az eltolásnál talált sztringrészletet.",
        "Documentation.LongDescription": "A(z) <code>text</code> szöveg <code>offset</code> eltolásánál található sztringrészletet adja vissza.\r\n    A nem kötelező <code>count</code> paraméterrel meghatározhatja, hogy a függvény hány karaktert adjon vissza. Hibát jelez, ha nincs elég karakter.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a „Hello World” szövegben a 6-os indexpozíciónál kezdődő sztringrészletet.",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "Megkeresi a „Hello World Hello” szövegben a 6-os indexpozíciónál kezdődő és 5 karakterre kiterjedő sztringrészletet.",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "Eltávolítja a megadott karakter vagy karakterlista összes előfordulását a bemeneti szöveges értékből.",
        "Documentation.LongDescription": "A(z) <code>text</code> szöveges érték olyan másolatát adja vissza, amelyből a(z) <code>removeChars</code> összes karaktere el van távolítva.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "A , és a ; karakter eltávolítása a szöveges értékből",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "Eltávolítja a megadott darabszámú karaktert a megadott eltolásnál kezdve.",
        "Documentation.LongDescription": "A(z) <code>text</code> szöveges érték olyan másolatát adja vissza, amelyből az összes karakter el van távolítva a(z) <code>offset</code> pozíciótól kezdve.\r\n    A nem kötelező <code>count</code> paraméterrel megadható az eltávolítandó karakterek száma is. A(z) <code>count</code> alapértelmezett értéke 1. A pozíciók számozása 0-tól kezdődik.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "1 karakter eltávolítása az „ABEFC” szöveges értékből a 2. pozícióból",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "Két karakter eltávolítása az „ABEFC” szöveges értékből a 2. pozíciótól kezdődően",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "Egy olyan szöveges értéket ad vissza, amely a bemeneti szöveg adott számú ismétlődéséből áll.",
        "Documentation.LongDescription": "Egy olyan szöveges értéket ad vissza, amely a bemeneti <code>text</code> szöveg <code>count</code> ismétlődéséből áll.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Az „a” szöveg megismétlése ötször",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "A „helloworld” szöveg megismétlése háromszor",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "Kiválasztja a megadott karakter vagy karakterlista összes előfordulását a bemeneti szöveges értékből.",
        "Documentation.LongDescription": "A(z) <code>text</code> szöveges érték olyan másolatát adja vissza, amelyből az összes nem <code>selectChars</code> karakter el van távolítva.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "A szöveges érték összes, az a-tól z-ig eső tartományban található karakterének kiválasztása.",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "Felosztja a szöveget szöveges értékek listájára a megadott elválasztó alapján.",
        "Documentation.LongDescription": "Szöveges értékek olyan listáját adja vissza, amely a(z) <code>text</code> szöveges értéknek a megadott <code>separator</code> elválasztó alapján történő felosztásának eredménye.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása a „|” karakterrel elválasztott „Name|Address|PhoneNumber” szöveges értékből",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "Szöveges értékek listáját adja vissza, amelyet az elválasztóban szereplő bármely karakternél való felosztással állít elő.",
        "Documentation.LongDescription": "Szöveges értékek olyan listáját adja vissza, amely a(z) <code>text</code> szöveges értéknek a megadott <code>separators</code> elválasztóban szereplő bármely karakter alapján történő felosztásának eredménye.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása a „Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com” szöveges értékből",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "A szöveg kezdetét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>text</code> első <code>count</code> karakterét adja vissza szöveges értékként.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "A „Hello, World” karakterlánc első 5 karakterének beolvasása",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "Azt jelzi, hogy a szöveg egy megadott értékkel kezdődik-e.",
        "Documentation.LongDescription": "True értéket ad vissza, ha a(z) <code>text</code> szöveges érték a(z) <code>substring</code> szöveges értékkel kezdődik.\r\n      <ul>\r\n        <li><code>text</code>: <i></i> A keresendő <code>text</code> érték</li>\r\n        <li><code>substring</code>: <i></i> Egy <code>text</code> érték, amely a(z) <code>substring</code> szöveges értékben keresendő sztringrészlet.</li>\r\n        <li><code>comparer</code>: <i>[Nem kötelező]</i> Az összehasonlítást szabályozó <code>Comparer</code>. A <code>Comparer.OrdinalIgnoreCase</code> például a kis- és nagybetűket meg nem különböztető keresések végrehajtására használható.</li>\r\n      </ul>\r\n      <div>\r\n        A(z) <code>comparer</code> egy <code>Comparer</code>, amely az összehasonlítás szabályozására használható. Összehasonlítók használatával végezhető a kis- és nagybetűket meg nem különböztető, illetve a kulturális környezetet és a területi beállítást figyelembe vevő összehasonlítás.\r\n      </div>\r\n      <div>\r\n        A következő beépített összehasonlítók érhetők el a képletnyelvben:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Pontos sorrendi összehasonlításhoz használható.</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Kis- és nagybetűk megkülönböztetése nélküli, pontos sorrendi összehasonlítás végrehajtására szolgál.</li>\r\n        <li> <code>Comparer.FromCulture</code>: A kulturális környezetet figyelembe vevő összehasonlítás végrehajtására szolgál.</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Annak ellenőrzése, hogy a „Hello, World” szöveg a „hello” szöveggel kezdődik-e",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Annak ellenőrzése, hogy a „Hello, World” szöveg a „Hello” szöveggel kezdődik-e",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "Egy olyan típust ad vissza, amely a paraméterekre és a visszatérési típusra vonatkozó adott megkötéseket tartalmazó függvényeket jelöl.",
        "Documentation.LongDescription": "Egy <code>function type</code> típusú rekord létrehozása a(z) <code>signature</code> paraméterben megadott rekordból, amely egy visszatérési értéket megadó <code>ReturnType</code>, egy paramétereket megadó <code>Parameters</code>, illetve a kötelező argumentumok számát megadó <code>min</code> attribútumból áll.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Létrehozza egy függvény típusát, amely egy X nevű számparamétert fogad bemenetként, és egy számot ad vissza.",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "Egy olyan típust ad vissza, amely a mezőkre vonatkozó adott típusmegkötéseket tartalmazó rekordokat jelöl.",
        "Documentation.LongDescription": "Egy olyan típust ad vissza, amely a mezőkre vonatkozó adott típusmegkötéseket tartalmazó rekordokat jelöl.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Táblatípus dinamikus létrehozása.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "Meghatározza, hogy az első típus értéke mindig kompatibilis-e a második típussal.",
        "Documentation.LongDescription": "Meghatározza, hogy a(z) <code>type1</code> értéke mindig kompatibilis-e a következővel: <code>type2</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Annak meghatározása, hogy egy szám típusú érték mindig kezelhető-e bármely típusként.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "Annak meghatározása, hogy egy tetszőleges típusú érték mindig kezelhető-e szám típusként.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "Lecseréli egy típus aspektusait.",
        "Documentation.LongDescription": "Lecseréli a(z) <code>type</code> aspektusait a(z) <code>facets</code> bejegyzésben található aspektusokra.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "Egy új táblatípust ad vissza, amelyben az összes kulcs le lett cserélve a megadott listán szereplő kulcsokra.",
        "Documentation.LongDescription": "Egy új táblatípust ad vissza, amelyben az összes kulcs le lett cserélve a megadott listán szereplő kulcsokra.<br>\r\n    <br>\r\n    Minden kulcs egy rekorddal van definiálva a következő formában:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: a kulcsot definiáló oszlopnevek listája\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code>, ha a kulcs a tábla elsődleges kulcsa; egyébként <code>false</code>\r\n      </li>\r\n    </ul>\r\n    A rendszer ellenőrzi a megadott listán szereplő kulcsokat annak biztosításához, hogy ne legyen egynél több elsődleges kulcs definiálva, és hogy az összes kulcsoszlopnév szerepeljen a táblatípusban.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Táblatípus kulcsadatainak lecserélése.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "A táblatípusban korábban definiált kulcsadatok törlése.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "Egy táblában szereplő oszlop típusát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>tableType</code> táblatípusban szereplő <code>column</code> oszlop típusát adja vissza.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "Egy abszolút URI-azonosítót ad vissza, amelyet a bemeneti alap URI és relatív URI egyesítésével állít elő.",
        "Documentation.LongDescription": "Egy abszolút URI-azonosítót ad vissza, amelyet a bemeneti <code>baseUri</code> és <code>relativeUri</code> egyesítésével állít elő.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "A két érték összegét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>value1</code> és <code>value2</code> értékek összegét adja vissza. Megadható egy nem kötelező <code>precision</code> paraméter, a függvény alapértelmezés szerint a <code>Precision.Double</code> beállítást használja.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "Visszaadja az értéket, ha az kompatibilis a megadott típussal.",
        "Documentation.LongDescription": "Visszaadja az értéket, ha az kompatibilis a megadott típussal. Ez egyenértékű az M „as” operátorával, azzal a különbséggel, hogy ez elfogadja az azonosító típusú hivatkozásokat, például a Number.Type-ot.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Típuskonverziót használ egy szám számmá konvertáláshoz.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "Megkísérel szöveges értéket típuskonverzióval számmá alakítani.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "-1, 0 vagy 1 értéket ad vissza attól függően, hogy az első érték kisebb, egyenlő vagy nagyobb, mint a második érték.",
        "Documentation.LongDescription": "-1, 0 vagy 1 értéket ad vissza attól függően, hogy az első érték kisebb, egyenlő vagy nagyobb, mint a második érték.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "Az első érték második értékkel való osztásának eredményét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>value1</code> érték <code>value2</code> értékkel való osztásának eredményét adja vissza. Megadható egy nem kötelező <code>precision</code> paraméter, a függvény alapértelmezés szerint a <code>Precision.Double</code> beállítást használja.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "Azt adja vissza, hogy két érték egyenlő-e.",
        "Documentation.LongDescription": "Igaz értéket ad vissza, ha a(z) <code>value1</code> érték egyenlő a(z) <code>value2</code> értékkel, egyéb esetben pedig hamis értéket ad vissza.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "Meghatározza, hogy egy érték kompatibilis-e a megadott típussal.",
        "Documentation.LongDescription": "Meghatározza, hogy egy érték kompatibilis-e a megadott típussal. Ez egyenértékű az M „is” operátorával, azzal a különbséggel, hogy ez elfogadja az azonosító típusú hivatkozásokat, például a Number.Type-ot.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Két módszer összehasonlítása annak megállapításához, hogy egy szám kompatibilis-e a szám típussal.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "A két érték szorzatát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>value1</code> és <code>value2</code> értékek szorzatát adja vissza. Megadható egy nem kötelező <code>precision</code> paraméter, a függvény alapértelmezés szerint a <code>Precision.Double</code> beállítást használja.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "Kiértékeli a célon futtatott lekérdezést.",
        "Documentation.LongDescription": "<p>Kiértékeli a(z) <code>query</code> elemet a(z) <code>target</code> elemen a(z) <code>parameters</code> megadott paramétereivel és a(z) <code>options</code> megadott beállításaival.</p>\r\n<p>A lekérdezés kimenetét a(z) <code>target</code> határozza meg.</p>\r\n<p>A(z) <code>target</code> elem környezetet nyújt a(z) <code>query</code> által leírt művelethez.</p>\r\n<p>A(z) <code>query</code> elem leírja a(z) <code>target</code> elemen futtatandó lekérdezést. A(z) <code>query</code> elem a(z) <code>target</code> elemre érvényes módon fejezhető ki (például T-SQL utasítás).</p>\r\n<p>Az opcionális <code>parameters</code> érték a(z) <code>query</code> által várt paraméterértékek megadásához megfelelő listát vagy rekordot tartalmazhat.</p>\r\n<p>Az opcionális <code>options</code> rekord a(z) <code>query</code> <code>target</code> elemen végzett kiértékelési viselkedését befolyásoló beállításokat tartalmazhat. Ezek a beállítások a(z) <code>target</code> elemre vonatkoznak.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "Azt adja vissza, hogy két érték egyenlő-e.",
        "Documentation.LongDescription": "Null értéket ad vissza, ha a(z) „<code>value1</code>” és „<code>value2</code>” argumentumok bármelyike null értékű, egyéb esetben pedig a Value.Equals értékét adja vissza.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "Lecseréli a bemeneti érték metaadatait.",
        "Documentation.LongDescription": "Lecseréli a bemeneti érték metaadatait.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "Lecseréli az érték típusát.",
        "Documentation.LongDescription": "Lecseréli a(z) <code>value</code> típusát a megadott <code>type</code> típussal.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "A rekord alapértelmezett típusának lecserélése egy pontosabb típusra.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "A két érték különbségét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>value1</code> és <code>value2</code> értékek különbségét adja vissza. Megadható egy nem kötelező <code>precision</code> paraméter, a függvény alapértelmezés szerint a <code>Precision.Double</code> beállítást használja.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "Egy műveletet hoz létre, amely a végrehajtáskor egy HTTP-kérés végrehajtásának eredményét adja vissza bináris értékként.",
        "Documentation.LongDescription": "Olyan művelet létrehozása, amely a végrehajtásakor a következőnek küldött HTTP-alapú <code>method</code>-kérés végrehajtásának eredményét adja vissza bináris értékként: <code>url</code>.\r\n    A nem kötelező <code>options</code> rekordparaméter használatával további tulajdonságok is megadhatók. A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>Query</code> : Lek&#233;rdez&#233;sparam&#233;terek szoftveres hozz&#225;ad&#225;sa az URL-c&#237;mhez escape-karaktersorozat haszn&#225;lata n&#233;lk&#252;l.</li>\r\n<li><code>ApiKeyName</code> : Ha a c&#233;lhely API-kulcsot haszn&#225;l, ezzel a param&#233;terrel adhat&#243; meg a kulcsparam&#233;ter neve (nem pedig az &#233;rt&#233;ke), amelyet az URL-c&#237;mben kell haszn&#225;lni. A kulcs t&#233;nyleges &#233;rt&#233;ke a hiteles&#237;tő adatokban tal&#225;lhat&#243;.</li>\r\n<li><code>Headers</code> : Az &#233;rt&#233;k rekordk&#233;nt val&#243; meghat&#225;roz&#225;s&#225;val tov&#225;bbi fejl&#233;cek adhat&#243;k hozz&#225; egy HTTP-k&#233;r&#233;shez.</li>\r\n<li><code>Timeout</code> : Az &#233;rt&#233;k időtartamk&#233;nt val&#243; megad&#225;sa m&#243;dos&#237;tja a HTTP-k&#233;r&#233;s időkorl&#225;tj&#225;t. Az alap&#233;rtelmezett &#233;rt&#233;k 100 m&#225;sodperc.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Ha ezen &#233;rt&#233;ket listak&#233;nt adja meg, kiz&#225;rja ezeket a HTTP-fejl&#233;ckulcsokat az adatok gyors&#237;t&#243;t&#225;raz&#225;s&#225;nak sz&#225;m&#237;t&#225;s&#225;b&#243;l.</li>\r\n<li><code>IsRetry</code> : Ha a logikai &#233;rt&#233;ket igazk&#233;nt adja meg, figyelmen k&#237;v&#252;l hagyja a gyors&#237;t&#243;t&#225;rban l&#233;vő megl&#233;vő v&#225;laszokat az adatok leh&#237;v&#225;sakor.</li>\r\n<li><code>ManualStatusHandling</code> : Ha az &#233;rt&#233;ket listak&#233;nt adja meg, megg&#225;tolja azon HTTP-k&#233;r&#233;sek be&#233;p&#237;tett kezel&#233;s&#233;t, amelyek v&#225;lasza ezen &#225;llapotk&#243;dok egyik&#233;t tartalmazza.</li>\r\n<li><code>RelativePath</code> : Ha az &#233;rt&#233;ket sz&#246;vegk&#233;nt hat&#225;rozza meg, az alap URL-hez fűzi azt a k&#233;r&#233;s elv&#233;gz&#233;se előtt.</li>\r\n<li><code>Content</code> : Ha megadja ezt az &#233;rt&#233;ket, annak tartalma lesz a HTTP-k&#233;r&#233;s t&#246;rzse.</li>\r\n</ul>\r\n\r\n    <br>\r\n    Vegye figyelembe, hogy ez a függvény a legtöbb környezetben le van tiltva. Helyette a Web.Contents vagy a Web.Headers használata javasolt.\r\n    ",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "GET kérés küldése a Bingnek.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "Adja meg a regisztrációhoz társított Azure Enterprise REST API-végpont URL-címét",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Az Azure Enterprise API-hoz megadott URL-cím meghívásának bináris formátumú eredményeit adja vissza.",
        "Documentation.Examples": [
          {
            "Description": "Az AzureEnterprise.Contents függvény használata adott jelentés eredményeinek lekéréséhez.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "Tábla"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "A megadott blob tartalmát adja vissza egy Azure-tárolóból.",
        "Documentation.LongDescription": "A blob tartalmát adja vissza az URL-címen (<code>url</code>) egy Azure Storage-tárból. A(z) <code>options</code> megadásával vezérelhetők a következő beállítások:\r\n    <ul>\r\n<li><code>BlockSize</code> : Az adatfogyaszt&#243;ra val&#243; v&#225;rakoz&#225;s előtt beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>RequestSize</code> : A kiszolg&#225;l&#243;ra egyetlen HTTP-k&#233;relemben beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A ConcurrentRequests be&#225;ll&#237;t&#225;s az adatok gyorsabb let&#246;lt&#233;s&#233;t t&#225;mogatja a p&#225;rhuzamosan v&#233;gzett k&#233;relmek sz&#225;m&#225;nak megad&#225;s&#225;val, a mem&#243;ria kihaszn&#225;lts&#225;g&#225;nak &#225;r&#225;n. A sz&#252;ks&#233;ges mem&#243;ria (ConcurrentRequest * RequestSize). Az alap&#233;rtelmezett &#233;rt&#233;k 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "Egy adott fájl tartalmát adja vissza egy Azure Data Lake Storage-fájlrendszerből.",
        "Documentation.LongDescription": "A fájl tartalmát adja vissza az URL-címen (<code>url</code>) egy Azure Data Lake Storage-fájlrendszerből. A(z) <code>options</code> megadásával vezérelhetők a következő beállítások:\r\n    <ul>\r\n<li><code>BlockSize</code> : Az adatfogyaszt&#243;ra val&#243; v&#225;rakoz&#225;s előtt beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>RequestSize</code> : A kiszolg&#225;l&#243;ra egyetlen HTTP-k&#233;relemben beolvasni k&#237;v&#225;nt b&#225;jtok sz&#225;ma. Az alap&#233;rtelmezett &#233;rt&#233;k 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A ConcurrentRequests be&#225;ll&#237;t&#225;s az adatok gyorsabb let&#246;lt&#233;s&#233;t t&#225;mogatja a p&#225;rhuzamosan v&#233;gzett k&#233;relmek sz&#225;m&#225;nak megad&#225;s&#225;val, a mem&#243;ria kihaszn&#225;lts&#225;g&#225;nak &#225;r&#225;n. A sz&#252;ks&#233;ges mem&#243;ria (ConcurrentRequest * RequestSize). Az alap&#233;rtelmezett &#233;rt&#233;k 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "A bináris fájl hozzávetőleges hosszát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>binary</code> hozzávetőleges hosszát adja vissza, vagy hibát, ha az adatforrás nem támogatja a hozzávetőleges hosszt.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "A bináris érték hozzávetőleges hosszának lekérése.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "A memóriában puffereli a bináris értéket.",
        "Documentation.LongDescription": "A memóriában puffereli a bináris értéket. A hívás eredménye egy stabil bináris érték, ami azt jelenti, hogy az érték meghatározott hosszúsággal és bájtsorrenddel rendelkezik.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Létrehozza a bináris érték stabil verzióját.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "Egy bináris értékben egyesíti a bináris értékek listáját.",
        "Documentation.LongDescription": "Egy bináris értékben egyesíti a bináris értékek listáját.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "Bináris értéket hoz létre a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>binary</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> érték <code>null</code>, a <code>Binary.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> érték <code>binary</code>, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>binary</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>binary</code> érték a szöveges alakból. További részletek: <code>Binary.FromText</code>.</li>\r\n      </ul>\r\nHa a <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Az <code>\"1011\"</code> <code>binary</code> típusú értékének lekérése",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "Bináris értékké alakít át egy számokból álló listát.",
        "Documentation.LongDescription": "Bináris értékké alakít át egy számokból álló listát.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "Szöveges formátumú adatokat bináris formátumra dekódol.",
        "Documentation.LongDescription": "A <code>text</code> szöveges érték bináris formátumra való konvertálásának eredményét adja vissza (<code>number</code> elemeket tartalmazó lista). Az <code>encoding</code> megadható úgy, hogy megjelenítse a szöveges értékben használt kódolást.\r\n      A következő <code>BinaryEncoding</code> értékek használhatók az <code>encoding</code> esetében.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64-kódolás</li>\r\n        <li><code>BinaryEncoding.Hex</code>: hexadecimális kódolás</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Bináris formátumra dekódolja az „1011” értéket.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "Hexadecimális kódolással bináris formátumra dekódolja az „1011” értéket.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "Beolvassa a bináris streamet, és megpróbálja megállapítani a stream tartalomtípusát és formátumadatait.",
        "Documentation.LongDescription": "Egy rekordot ad vissza a Content.Type mezővel, amely a kikövetkeztetett MIME-típust tartalmazza. \r\n    Ha a kikövetkeztetett tartalomtípus a text/*, és egy kódolási kódlap is észlelhető, akkor a Content.Encoding mezőt is visszaadja, amely a stream kódolását tartalmazza.\r\n    Ha a kikövetkeztetett tartalomtípus a text/csv, és a formátum vesszővel tagolt fájl, akkor a Csv.PotentialDelimiter mezőt is visszaadja, amely a lehetséges elválasztó karakterek elemzési tábláját tartalmazza.\r\n    Ha a kikövetkeztetett tartalomtípus a text/csv, és a formátum rögzített szélességű szövegfájl, akkor a Csv.PotentialPositions mezőt is visszaadja, amely a lehetséges rögzített szélességű oszloppozíciók elemzési listáját tartalmazza.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "Visszaadja a karakterek számát.",
        "Documentation.LongDescription": "Visszaadja a karakterek számát.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "Számokból álló listává alakít át egy bináris értéket.",
        "Documentation.LongDescription": "Számokból álló listává alakít át egy bináris értéket.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "Bináris formátumú adatokat szöveges formátumra kódol.",
        "Documentation.LongDescription": "A(z) <code>binary</code> bináris számlista szöveges értékre való konvertálásának eredményét adja vissza. A(z) <code>encoding</code> megadható úgy is, hogy megjelenítse a létrehozandó szöveges értékben használandó kódolást.\r\n      A következő <code>BinaryEncoding</code> értékek használhatók a(z) <code>encoding</code> esetében.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64-kódolás</li>\r\n        <li><code>BinaryEncoding.Hex</code>: Hexadecimális kódolás</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "Létrehoz egy módosított hibarekordot, amely nem indít tartalékot, ha egy nézetben definiált kezelő váltja ki (a Binary.View használatával).",
        "Documentation.LongDescription": "Létrehoz egy módosított hibarekordot az <code>errorRecord</code> elemből, amely nem indít tartalékot, ha egy nézetben (a Binary.View használatával) definiált kezelő váltja ki.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "Létrehoz egy függvényt, amelyet elfoghat egy nézetben (a Binary.View használatával) meghatározott kezelő.",
        "Documentation.LongDescription": "<p>Egy <code>function</code>-alapú nézetfüggvényt hoz létre, amelyet a <code>Binary.View</code> által létrehozott nézetben lehet kezelni.</p>\r\n<p>A <code>Binary.View</code> <code>OnInvoke</code> kezelőjével lehet meghatározni a nézetfüggvény kezelőjét.</p>\r\n<p>A beépített műveletek kezelőihez hasonlóan, ha nem lett meghatározva <code>OnInvoke</code> kezelő, vagy ha az nem kezeli a nézetfüggvényt, illetve ha a kezelő valamilyen hibát jelez, a rendszer a <code>function</code> elemet alkalmazza a nézet tetején.</p>\r\n<p>A <code>Binary.View</code> és az egyéni nézetfüggvények részletesebb leírásáért tekintse meg a Power Query egyéni csatlakoztató közzétett dokumentációját.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "Bináris formátum, amely 7 bites változó hosszúságú kódolás használatával kódolt 64 bites, előjeles egész számokat olvas.",
        "Documentation.LongDescription": "Bináris formátum, amely 7 bites változó hosszúságú kódolás használatával kódolt 64 bites, előjeles egész számokat olvas.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "Bináris formátum, amely 7 bites változó hosszúságú kódolás használatával kódolt 64 bites, előjel nélküli egész számokat olvas.",
        "Documentation.LongDescription": "Bináris formátum, amely 7 bites változó hosszúságú kódolás használatával kódolt 64 bites, előjel nélküli egész számokat olvas.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "8 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.LongDescription": "8 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": ".NET 16 bájtos decimális értéket olvasó bináris formátum",
        "Documentation.LongDescription": ".NET 16 bájtos decimális értéket olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "8 bájtos IEEE kétszeres pontosságú lebegőpontos értéket olvasó bináris formátum",
        "Documentation.LongDescription": "8 bájtos IEEE kétszeres pontosságú lebegőpontos értéket olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "Elemek sorrendjét olvasó bináris formátumot ad vissza, list típusú elemként.",
        "Documentation.LongDescription": "Elemek sorrendjét olvasó bináris formátumot ad vissza, és <code>list</code> elemet ad vissza. A(z) <code>binaryFormat</code> paraméter határozza meg az egyes értékek bináris formátumát. Az olvasandó elemek száma háromféleképpen határozható meg: <ul><li>Ha a(z) <code>countOrCondition</code> nincs megadva, akkor a bináris formátumot kell olvasni, amíg már nincs több elem.</li><li>Ha a(z) <code>countOrCondition</code> egy szám, akkor a bináris formátummal a számnak megfelelő mennyiségű elem olvasható.</li><li>Ha a(z) <code>countOrCondition</code> egy függvény, akkor az adott függvény hívható meg minden olvasott elemnél. A függvény igaz értéket ad vissza az elemek olvasásának folytatásához, illetve hamis értéket az olvasás befejezéséhez. Az utolsó elem szerepelni fog a listán.</li><li>Ha a(z) <code>countOrCondition</code>egy bináris formátum, akkor a rendszer azt feltételezi, hogy az elemek darabszáma megelőzi a listát, és megadott formátumot használja a darabszám kiolvasásához.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "Az adatok végéig olvassa az adatokat.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Két bájtot olvas.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Addig olvassa a bájtokat, amíg a bájtérték nagyobb, mint 2 vagy 2-vel egyenlő.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "Bináris formátum, amely nulla bájtot olvas, és null értéket ad vissza.",
        "Documentation.LongDescription": "Bináris formátum, amely nulla bájtot olvas, és null értéket ad vissza.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "Rekordot olvasó bináris formátumot ad vissza.",
        "Documentation.LongDescription": "Rekordot olvasó bináris formátumot ad vissza. A(z) <code>record</code> paraméter határozza meg a rekord formátumát. A rekordban különbözhet az egyes mezők bináris formátuma. Ha egy mező olyan értéket tartalmaz, amely nem bináris formátumú érték, akkor annál a mezőnél nem történik adatolvasás, és a mezőérték jelenik meg az eredményben.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "Egy 16 bites egész számot és egy 32 bites egész számot tartalmazó rekordot olvas.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "16 bites, előjeles egész számokat olvasó bináris formátum",
        "Documentation.LongDescription": "16 bites, előjeles egész számokat olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "32 bites, előjeles egész számokat olvasó bináris formátum",
        "Documentation.LongDescription": "32 bites, előjeles egész számokat olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "64 bites, előjeles egész számokat olvasó bináris formátum",
        "Documentation.LongDescription": "64 bites, előjeles egész számokat olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "4 bájtos IEEE egyszeres pontosságú lebegőpontos értéket olvasó bináris formátum",
        "Documentation.LongDescription": "4 bájtos IEEE egyszeres pontosságú lebegőpontos értéket olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "Szöveges értéket olvasó bináris formátumot ad vissza.",
        "Documentation.LongDescription": "Szöveges értéket olvasó bináris formátumot ad vissza. A(z) <code>length</code> megadja a dekódolandó bájtok számát, illetve a szöveg előtti hosszúság bináris formátumát. A választható <code>encoding</code> érték a szöveg kódolását adja meg. Ha a(z) <code>encoding</code> nincs megadva, akkor a Unicode bájtsorrendjelzők határozzák meg a kódolást. Ha nincsenek bájtsorrendjelzők, akkor a <code>TextEncoding.Utf8</code> használható.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "ASCII-szövegként dekódol két bájtot.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "ASCII-szöveget dekódol, amelyben a szöveg hosszúsága bájtban szerepel a bájtban megadott szöveg előtt.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "16 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.LongDescription": "16 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "32 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.LongDescription": "32 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "64 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.LongDescription": "64 bites, előjel nélküli egész számokat olvasó bináris formátum",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "A megadott érték átalakítása 8 bites egész számmá.",
        "Documentation.LongDescription": "Egy 8 bites egész <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Byte.From</code> függvény visszaadott értéke <code>null</code>. Ha a megadott <code>value</code> <code>number</code> a 8 bites egész számok tartományában, törtrész nélkül, <code>value</code> értéket ad vissza. Ha rendelkezik törtrésszel, a szám a megadott kerekítési mód szerint lesz kerekítve. Az alapértelmezett kerekítési mód a <code>RoundingMode.ToEven</code>. Ha <code>value</code> bármilyen más típusba tartozik, előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Az elérhető kerekítési módokkal kapcsolatban lásd: <code>Number.Round</code>. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> érték átalakítása <code>number</code> típusú 8 bites egész számmá.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "A <code>\"4.5\"</code> érték átalakítása <code>number</code> típusú 8 bites egész számmá a <code>RoundingMode.AwayFromZero</code> használatával.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "Szöveges karakterré alakít egy számot.",
        "Documentation.LongDescription": "Visszaadja a szám megfelelőjét karakterben.<br>\r\n    <br>\r\n    A megadott <code>number</code> karakternek 21 bites Unicode-kódpontnak kell lennie.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Számot alakít át a számnak megfelelő karakterértékre.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "Karaktert alakít át számmá, majd vissza karakterré.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "A „vigyorgó arc” hangulatjel hexadecimális kódpontját alakítja át a megfelelő UTF-16 helyettesítő párrá.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "Számértékére alakít át egy karaktert.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>character</code> megfelelőjét számban.<br>\r\n    <br>\r\n    Az eredmény a megadott karakter vagy helyettesítő pár által jelölt 21 bites Unicode-kódpont.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Karaktert alakít át a karakternek megfelelő számértékre.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "A „vigyorgó arc” hangulatjel UTF-16 helyettesítő párját alakítja át a megfelelő hexadecimális kódponttá.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "Olyan függvényt ad vissza, amely szöveges értékekből álló listát egyesít a megadott elválasztó karakter használatával.",
        "Documentation.LongDescription": "Olyan függvényt ad vissza, amely egy szövegértékben egyesíti a szövegértéklistát a megadott elválasztó használatával.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "A szöveges értékek listája pontosvesszővel elválasztva vonható össze.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "Két oszlop szövegének egyesítése vesszővel elválasztva és CSV-stílusú idézőjelek használatával.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "Olyan függvényt ad vissza, amely szöveges értékekből álló listát egyesít elválasztó karakterek sorozatának használatával.",
        "Documentation.LongDescription": "Olyan függvényt ad vissza, amely egyetlen szövegértékben egyesíti a szöveges értékekből álló listát elválasztó karakterek sorozatának használatával.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Szöveges értékek listáját egyesíti elválasztó karakterek sorozatának használatával.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "Olyan függvényt ad vissza, amely szöveges értékekből álló listát egyesít a megadott hosszúságok használatával.",
        "Documentation.LongDescription": "Olyan függvényt ad vissza, amely egyetlen szövegértékben egyesíti a szöveges értékekből álló listát a megadott hosszúságok használatával.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Szöveges értékekből álló listát egyesít a megadott számú karakter mindegyik bemeneti értékből való kinyerésével.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "Szöveges értékekből álló listát egyesít a megadott számú karakter kinyerésével, miután először előzetesen kitöltötte az eredményt a sablonszöveggel.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "Olyan függvényt ad vissza, amely szöveges értékekből álló listát egyesít a megadott kimeneti helyzetek használatával.",
        "Documentation.LongDescription": "Olyan függvényt ad vissza, amely egyetlen szövegértékben egyesíti a szöveges értékekből álló listát a megadott kimeneti helyzetek használatával.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Szöveges értékekből álló listát egyesít az értékeknek a kimenet megadott helyzeteibe történő elhelyezésével.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "Olyan függvényt ad vissza, amely szöveges értékekből álló listát egyesít a megadott pozíciók és hosszúságok használatával.",
        "Documentation.LongDescription": "Olyan függvényt ad vissza, amely egyetlen szövegértékben egyesíti a szöveges értékekből álló listát a megadott kimeneti helyzetek és hosszúságok használatával. A null hosszúságérték azt jelzi, hogy a teljes tesztértéket bele kell foglalni.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Szöveges értékekből álló listát egyesít a megadott kimeneti helyzetek és hosszúságok használatával.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "Egy összehasonlító függvényt ad vissza a megadott kulturális környezet és a kis- és nagybetűk megkülönböztetése alapján.",
        "Documentation.LongDescription": "Egy olyan összehasonlító függvényt ad vissza, amely a(z) <code>culture</code> és a(z) <code>ignoreCase</code> által megadott kis- és nagybetűk közötti megkülönböztetést használja összehasonlítások végrehajtásához.<br>\r\n      <br>\r\n      Az összehasonlító függvény két argumentumot fogad el, és -1, 0 vagy 1 értéket ad vissza attól függően, hogy az első érték a másodikhoz képest kisebb, egyenlő vagy nagyobb.<br>\r\n      <br>\r\n      A(z) <code>ignoreCase</code> alapértelmezett értéke hamis. A(z) <code>culture</code> értékének a .NET-keretrendszer által támogatott területi beállítások egyikének kell lennie (például „en-US”).\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Az „a” és az „A” érték egyenlőségvizsgálata az „en-US” nyelv szabályai szerint.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "Az „a” és az „A” érték kis- és nagybetűket azonosnak tekintő egyenlőségvizsgálata az „en-US” nyelv szabályai szerint.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "A tagok tulajdonságértékének egyedi tagazonosítóját adja vissza.",
        "Documentation.LongDescription": "A tagok tulajdonságértékének egyedi tagazonosítóját adja vissza. <code>attribute</code>. Egyéb értékek esetén null értéket ad vissza.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "Egy tulajdonság kulcsát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>property</code> tulajdonság kulcsát adja vissza.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "Az adott értékből képzett pénznemértéket ad vissza.",
        "Documentation.LongDescription": "Egy <code>currency</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Time.From</code> függvény <code>null</code> értéket ad vissza. Ha az adott <code>value</code> a pénznem tartományán belüli <code>number</code> érték, a <code>value</code> tört részét a rendszer 4 tizedesjegyig kerekíti és adja vissza. Ha <code>value</code> bármilyen más típusba tartozik, előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. A pénznem érvényes tartománya: <code>-922,337,203,685,477.5808</code> – <code>922,337,203,685,477.5807</code>. Az elérhető kerekítési módokkal kapcsolatban lásd: <code>Number.Round</code>. Az alapértelmezett érték: <code>RoundingMode.ToEven</code>. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Az <code>1,23455</code>-ös érték <code>currency</code> értékének lekérése.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "Szerezze be az <code>\"1.23455\"</code> értékű <code>currency</code> értéket a <code>RoundingMode.Down</code> kód használatával.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "A nap összetevőt adja vissza.",
        "Documentation.LongDescription": "Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték nap összetevőjét adja vissza.\r\n      <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték, amelyből a nap összetevő ki lesz nyerve.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A 2011. 05. 14., 17:00:00 dátumot és időt jelölő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték nap összetevőjének megállapítása",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "Visszaad egy számot (0 és 6 között), amely a hét napját jelöli a megadott érték vonatkozásában.",
        "Documentation.LongDescription": "Visszaad egy számot (0 és 6 között), amely a hét napját jelöli a megadott <code>dateTime</code> vonatkozásában.\r\n  <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n        <li><code>firstDayOfWeek</code>: Egy <code>Day</code> érték, amely megadja, hogy melyik nap minősül a hét első napjának. Az engedélyezett értékek a következők: Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday, or Day.Saturday. Ha nincs megadva, a rendszer a kulturális környezetnek megfelelő alapértelmezett értéket használja.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A hét 2011. február 21., hétfő által jelölt napjának lekérése, ahol a vasárnap számít a hét első napjának.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "A hét 2011. február 21., hétfő által jelölt napjának lekérése, ahol a hétfő számít a hét első napjának.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "A hét napjának nevét adja vissza.",
        "Documentation.LongDescription": "A megadott <code>date</code> napjának nevét adja vissza. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A hét napja nevének lekérése.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "Az év napját jelző, 1 és 366 közötti számot ad vissza.",
        "Documentation.LongDescription": "A megadott <code>dateTime</code> <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> értékben az év napjának sorszámát jelölő számot adja vissza.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Az év napja 2011. március 1-jén.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "A hónapban levő napok számát jelző, 28 és 31 közötti számot ad vissza.",
        "Documentation.LongDescription": "A(z) <code>dateTime</code> <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> értékben lévő hónap napjainak számát adja vissza.\r\n <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amely esetében a hónap napjainak száma vissza lesz adva.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A <code>#date(2011, 12, 01)></code> értékkel jelölt december hónapban levő napok száma",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "A nap végét adja vissza.",
        "Documentation.LongDescription": "A következő által jelölt nap végét adja vissza: <code>dateTime</code>. A rendszer megőrzi az időzónával kapcsolatos adatokat.\r\n      <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyből a nap végének a számítása történik.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A 2011. 05. 14., 17:00:00 által jelölt nap végének megállapítása",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "A 2011. 05. 17., 17:00:00 -7:00 által jelölt nap végének megállapítása",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "A hónap végét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó hónap végét adja vissza: <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyből a hónap végének a számítása történik.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A 2011. 05. 14. által jelölt hónap végének megállapítása",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "A 2011. 05. 17., 17:00:00 -7:00 által jelölt hónap végének megállapítása",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "A negyedév végét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó negyedév végét adja vissza: <code>dateTime</code>. A rendszer megőrzi az időzónával kapcsolatos adatokat.\r\n      <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyből a negyedév végének a számítása történik.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A negyedév végének megállapítása 2011. október 10., 8:00 esetén.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "A hét végét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó hét végét adja vissza: <code>dateTime</code>.\r\n    Ez a függvény egy nem kötelező <code>firstDayOfWeek</code> <code>Day</code> értéket is elfogad, amely beállítja a hét első napját ehhez a relatív számításhoz. Az alapértelmezett érték: <code>Day.Sunday</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyből a hét utolsó napjának a számítása történik.</li>\r\n        <li><code>firstDayOfWeek</code>: <i>[Nem kötelező]</i> Egy <code>Day.Type</code> típusú érték, amely a hét első napját jelöli. A lehetséges értékek: <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> és <code>Day.Saturday.</code>. Az alapértelmezett érték: <code>Day.Sunday</code>.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A 2011. 05. 14. által jelölt hét végének megállapítása",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "A 2011. 05. 17., 17:00:00 -7:00 által jelölt hét végének megállapítása, ha a hét első napja a vasárnap",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "Az év végét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó év végét adja vissza a tört másodpercekkel együtt: <code>dateTime</code>. A rendszer megőrzi az időzónával kapcsolatos adatokat.\r\n      <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyből az év végének a számítása történik.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A 2011. 05. 14., 17:00:00 által jelölt év végének megállapítása",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "A 2011. 05. 17., 17:00:00 -7:00 által jelölt év végének megállapítása",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "Dátumot hoz létre a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>date</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).\r\nHa a megadott <code>value</code> <code>null</code>, a <code>Date.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> <code>date</code>, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>date</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>date</code> érték szöveges alakból. További részletek: <code>Date.FromText</code>.</li>\r\n        <li><code>datetime</code>: A \r dátum összetevője.</li><code>value</code>\n        <li><code>datetimezone</code>: A <code>value</code> helyi datetime megfelelőjének dátum összetevője.</li>\r\n        <li><code>number</code>: A <code>value</code> által kifejezett OLE-automatizálási dátum datetime megfelelőjének dátum összetevője.</li>\r\n      </ul>\r\nHa a <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A <code>43910</code> érték konvertálása <code>date</code> értékre",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "A <code>#datetime(1899, 12, 30, 06, 45, 12)</code> érték konvertálása <code>date</code> értékre",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "Egy dátumértéket hoz létre helyi, univerzális és egyéni dátumformátumokból.",
        "Documentation.LongDescription": "Egy <code>date</code> típusú értéket hoz létre egy szöveges alakból (<code>text</code>). Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén a dátum elemzése a legjobb lehetőség alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például az <code>\"MMM\"</code> <code>\"Jan\", \"Feb\", \"Mar\", ...</code> lehet, míg a <code>\"ru-RU\"</code> esetén az <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> értékű lenne.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"2010-12-31\"</code> érték konvertálása <code>date</code> értékre.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "Konvertálás egyéni formátummal és a német kulturális környezet használatával.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "Megkeresi azt a dátumot a Gergely-naptárban, amely az iszlám naptárban 1400. kezdetének felel meg.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "Azt jelzi, hogy ez a dátum az aktuális napra esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott <code>dateTime</code> datetime érték az aktuális napra esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.\r\n      <ul>\r\n      <li><code>dateTime</code>: A kiértékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridő az aktuális napra esik-e",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "Azt jelzi, hogy ez a dátum az aktuális hónapra esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott <code>dateTime</code> datetime érték az aktuális hónapra esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.\r\n      <ul>\r\n      <li><code>dateTime</code>: A kiértékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridő az aktuális hónapra esik-e",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "Azt jelzi, hogy ez a dátum az aktuális negyedévre esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott <code>dateTime</code> datetime érték az aktuális negyedévre esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.\r\n      <ul>\r\n      <li><code>dateTime</code>: A kiértékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridő az aktuális negyedévre esik-e",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "Azt jelzi, hogy ez a dátum az aktuális hétre esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott <code>dateTime</code> datetime érték az aktuális hétre esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.\r\n      <ul>\r\n      <li><code>dateTime</code>: A kiértékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridő az aktuális hétre esik-e",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "Azt jelzi, hogy ez a dátum az aktuális évre esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott <code>dateTime</code> datetime érték az aktuális évre esik-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.\r\n      <ul>\r\n      <li><code>dateTime</code>: A kiértékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridő az aktuális évre esik-e",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő napon következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő napon következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt követő nap a következő napra esik-e",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő hónapban következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő hónapban következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt követő hónap a következő hónapra esik-e",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő negyedévben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő negyedévben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt követő negyedév a következő negyedévre esik-e",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő héten következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő héten következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt követő hét a következő hétre esik-e",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő évben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő évben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt követő év a következő évre esik-e",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző napon következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző napon következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális napon következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt megelőző nap az előző napra esik-e",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző hónapban következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző hónapban következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális hónapban következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt megelőző hónap az előző hónapra esik-e",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző negyedévben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző negyedévben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális negyedévben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt megelőző negyedév az előző negyedévre esik-e",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző héten következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző héten következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális héten következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt megelőző hét az előző hétre esik-e",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "Jelzi, hogy ez a date típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző évben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző évben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális évben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridőt megelőző év az előző évre esik-e",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "Azt jelzi, hogy ez a dátum az aktuális évre esik-e, és az aktuális napon vagy az előtt van-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott <code>dateTime</code> datetime érték az aktuális évre esik-e, és az aktuális napon vagy az előtt van-e, amit a rendszeren beállított aktuális dátum és idő határoz meg.\r\n      <ul>\r\n      <li><code>dateTime</code>: A kiértékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az aktuális rendszeridő az év eddig eltelt részére esik-e",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "Azt jelzi, hogy ez a dátum szökőévre esik-e.",
        "Documentation.LongDescription": "Azt jelzi, hogy a megadott <code>dateTime</code> datetime érték szökőévre esik-e.\r\n <ul>\r\n        <li><code>dateTime</code>: A kiértékelendő <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy a <code>#date(2012, 01, 01)</code> érték által jelölt 2012-es év szökőév-e",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "A hónap összetevőt adja vissza.",
        "Documentation.LongDescription": "A megadott <code>dateTime</code> <code>datetime</code> érték hónap összetevőjét adja vissza.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A hónap megállapítása a #datetime(2011, 12, 31, 9, 15, 36) értékből",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "A hónap neve összetevőt adja vissza.",
        "Documentation.LongDescription": "A megadott <code>date</code> hónap összetevőjének nevét adja vissza. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A hónap nevének lekérése.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "Egy olyan számot ad vissza, amely jelzi, hogy a dátum az év hányadik negyedévébe esik.",
        "Documentation.LongDescription": "Egy olyan 1 és 4 közötti számot ad vissza, amely jelzi, hogy a(z) <code>dateTime</code> dátum az év hányadik negyedévébe esik. A(z) <code>dateTime</code> egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték lehet.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy a #date(2011, 12, 31) dátum az év hányadik negyedévébe esik",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "A nap kezdetét adja vissza.",
        "Documentation.LongDescription": "A következő által jelölt nap kezdetét adja vissza: <code>dateTime</code>.\r\n    A(z) <code>dateTime</code> csak <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték lehet.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A nap kezdetének megállapítása 2011. október 10., 8:00 esetén.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "A hónap kezdetét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó hónap kezdetét adja vissza: <code>dateTime</code>.\r\n    A(z) <code>dateTime</code> csak <code>date</code> vagy <code>datetime</code> típusú érték lehet.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A hónap kezdetének megállapítása 2011. október 10., 8:10:32 esetén.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "A negyedév kezdetét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó negyedév kezdetét adja vissza: <code>dateTime</code>.\r\n    A(z) <code>dateTime</code> csak <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték lehet.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A negyedév kezdetének megállapítása 2011. október 10., 8:00 esetén.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "A hét kezdetét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó hét kezdetét adja vissza: <code>dateTime</code>.\r\n    A(z) <code>dateTime</code> csak <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték lehet.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A hét kezdetének megállapítása 2011. október 11., kedd esetén.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "A hét kezdetének megállapítása 2011. október 11., kedd esetén, hétfő használatával a hét kezdeteként.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "Az év kezdetét adja vissza.",
        "Documentation.LongDescription": "A következőt tartalmazó év kezdetét adja vissza: <code>dateTime</code>.\r\n    A(z) <code>dateTime</code> csak <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték lehet.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Az év kezdetének megállapítása 2011. október 10., 8:10:32 esetén.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amely tartalmazza a dátumérték részeit.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amely tartalmazza a megadott <code>date</code> dátumérték részeit.\r\n <ul>\r\n        <li><code>date</code>: Egy <code>date</code> érték, amelyből a részeit tartalmazó rekord számítva lesz.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A <code>#date(2011, 12, 31)</code> érték konvertálása egy olyan rekordra, amely tartalmazza a dátumérték részeit",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "A dátumértéket képviselő szöveges alakot adja vissza.",
        "Documentation.LongDescription": "A(z) <code>date</code> szöveges alakját adja vissza. Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A(z) <code>culture</code> csak örökölt munkafolyamatok esetén használható. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén a dátum formázása a <code>Culture</code> paraméter által meghatározott alapértelmezett érték alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például az <code>\"MMM\"</code> <code>\"Jan\", \"Feb\", \"Mar\", ...</code> lehet, míg a <code>\"ru-RU\"</code> esetén az <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> és a(z) <code>culture</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> értékű lenne.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A <code>#date(2010, 12, 31)</code> konvertálása <code>text</code> értékre. <i>Az eredmény kimenete eltérő lehet az aktuális kulturális környezettől függően.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "Konvertálás egyéni formátummal és a német kulturális környezet használatával.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "Megkeresi azt az évet az iszlám naptárban, amely a Gergely-naptárban 2000. január 1-nek felel meg.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "Egy 1 és 6 közötti számot ad vissza, amely azt jelzi, hogy ez a dátum a hónap hányadik hetére esik.",
        "Documentation.LongDescription": "Egy 1 és 6 közötti számot ad vissza, amely azt jelzi, hogy a(z) <code>dateTime</code> dátum a hónap hányadik hetére esik.\r\n <ul>\r\n        <li><code>dateTime</code>: a <code>datetime</code> azon értéke, amely alapul szolgál a hónap hetének meghatározásához.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy március hányadik hetére esik a hónap 15. napja 2011-ben.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "Egy olyan 1 és 54 közötti számot ad vissza, amely jelzi, hogy ez a dátum az év hányadik hetére esik.",
        "Documentation.LongDescription": "Egy 1 és 54 közé eső számot ad vissza, jelezve, hogy a dátum (<code>dateTime</code>) melyik hétre esik az évben.\r\n <ul>\r\n        <li><code>dateTime</code>: Egy <code>datetime</code> érték, amelyhez meg lesz határozva az év egy adott hete.</li>\r\n        <li><code>firstDayOfWeek</code>: Egy nem kötelező <code>Day.Type</code> érték, amely jelzi, hogy melyik nap minősül az új hét kezdetének (például <code>Day.Sunday</code>). Ha nincs megadva, akkor a kulturális környezetnek megfelelő alapérték lesz alkalmazva.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy az év mely hete tartalmazza 2011. március 27-ét.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "Annak megállapítása, hogy az év hányadik hetére esik 2011. március 27., a hét kezdetét hétfőként megadva.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "Az év összetevőt adja vissza.",
        "Documentation.LongDescription": "A megadott <code>dateTime</code> <code>datetime</code> érték év összetevőjét adja vissza.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Az év megállapítása a #datetime(2011, 12, 31, 9, 15, 36) értékből",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "A megadott date, datetime vagy datetimezone típusú érték dátum összetevőjét adja vissza.",
        "Documentation.LongDescription": "A megadott <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú <code>dateTime</code> érték dátum összetevőjét adja vissza.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "A #datetime(2010, 12, 31, 11, 56, 02) érték dátumértékének megállapítása",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "Létrehoz egy datetime értéket a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>datetime</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).\r\nHa a megadott <code>value</code> <code>null</code>, a <code>DateTime.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> <code>datetime</code>, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>datetime</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>datetime</code> érték szöveges alakból. További részletek: <code>DateTime.FromText</code>.</li>\r\n        <li><code>date</code>: Egy <code>datetime</code> érték, ahol a dátum összetevő <code>value</code>, az idő összetevő pedig <code>12:00:00 AM</code>.</li>\r\n        <li><code>datetimezone</code>: A <code>value</code> helyi <code>datetime</code> megfelelője.</li>\r\n        <li><code>time</code>: Egy <code>datetime</code> érték, ahol a dátum összetevő a <code>0</code> OLE-automatizálási dátum megfelelője, az idő összetevő pedig <code>value</code>.</li>\r\n        <li><code>number</code>: A <code>value</code> által kifejezett OLE-automatizálási dátum <code>datetime</code> megfelelője.</li>\r\n      </ul>\r\nHa a <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "A <code>#time(06, 45, 12)</code> érték konvertálása <code>datetime</code> értékre",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "A <code>#date(1975, 4, 4)</code> érték konvertálása <code>datetime</code> értékre",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "Létrehoz egy datetime értéket egy 64 bit hosszúságú számból.",
        "Documentation.LongDescription": "Létrehoz egy <code>datetime</code> értéket a(z) <code>fileTime</code> értékből, és konvertálja azt a helyi időzónára. A filetime érték egy Windows rendszerbeli fájl időpontját jelölő érték, amely az egyezményes világidőben (UTC időzónában) megadott, i. sz. 1601. január 1. 00:00 óta eltelt 100 nanoszekundumos időszakok számát jelzi.\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Az <code>129876402529842245</code> érték konvertálása datetime értékre",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "Létrehoz egy datetimezone értéket a helyi és univerzális datetime formátumokból.",
        "Documentation.LongDescription": "Egy <code>datetime</code> típusú értéket hoz létre egy szöveges alakból (<code>text</code>). Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén a dátum elemzése a legjobb lehetőség alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például az <code>\"MMM\"</code> <code>\"Jan\", \"Feb\", \"Mar\", ...</code> lehet, míg a <code>\"ru-RU\"</code> esetén az <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> értékű lenne.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"2010-12-31T01:30:00\"</code> érték konvertálása datetime értékre.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "A <code>\"2010-12-31T01:30:00.121212\"</code> érték konvertálása datetime értékre.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "A <code>\"2010-12-31T01:30:00\"</code> érték konvertálása datetime értékre.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "A <code>\"20101231T013000\"</code> érték konvertálása datetime értékre.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a jelenlegi órán belül következik-e be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a jelenlegi órán belül következik-e be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő a jelenlegi órán belül van-e.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a jelenlegi percen belül következik-e be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a jelenlegi percen belül következik-e be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő a jelenlegi percen belül van-e.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a jelenlegi másodpercen belül következik-e be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a jelenlegi másodpercen belül következik-e be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő a jelenlegi másodpercen belül van-e.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő órában következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő órában következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő utáni óra a következő órán belül van-e.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő percben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő percben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő utáni perc a következő percen belül van-e.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő másodpercben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján a következő másodpercben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő utáni másodperc a következő másodpercen belül van-e.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző órában következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző órában következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális órában következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő előtti óra az előző órán belül van-e.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző percben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző percben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális percben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő előtti perc az előző percen belül van-e.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "Jelzi, hogy ez a datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző másodpercben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.",
        "Documentation.LongDescription": "Jelzi, hogy az adott <code>dateTime</code> datetime típusú érték a rendszeren beállított jelenlegi dátum és idő alapján az előző másodpercben következik-e be. Vegye figyelembe, hogy a függvény false (hamis) értéket ad vissza, ha az átadott érték az aktuális másodpercben következik be.\r\n      <ul>\r\n      <li><code>dateTime</code>: Az értékelendő <code>datetime</code> vagy <code>datetimezone</code> érték.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a jelenlegi rendszeridő előtti másodperc az előző másodpercen belül van-e.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "A megadott datetime érték idő összetevőjét adja vissza.",
        "Documentation.LongDescription": "A megadott <code>dateTime</code> datetime érték idő összetevőjét adja vissza.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "A #datetime(2010, 12, 31, 11, 56, 02) érték időértékének megállapítása",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amely tartalmazza a datetime érték részeit.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amely tartalmazza a megadott <code>dateTime</code> datetime érték részeit.\r\n <ul>\r\n        <li><code>dateTime</code>: Egy <code>datetime</code> érték, amelyből a részeit tartalmazó rekord számítandó.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "A <code>#datetime(2011, 12, 31, 11, 56, 2)</code> érték konvertálása egy olyan rekordra, amely tartalmazza a dátum és az idő értékét",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "A datetime értéket képviselő szöveges alakot adja vissza.",
        "Documentation.LongDescription": "A(z) <code>dateTime</code> szöveges alakját adja vissza. Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A(z) <code>culture</code> csak örökölt munkafolyamatok esetén használható. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén a dátum formázása a <code>Culture</code> paraméter által meghatározott alapértelmezett érték alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például az <code>\"MMM\"</code> <code>\"Jan\", \"Feb\", \"Mar\", ...</code> lehet, míg a <code>\"ru-RU\"</code> esetén az <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> és a(z) <code>culture</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> értékű lenne.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "A <code>#datetime(2010, 12, 31, 01, 30, 25)</code> konvertálása <code>text</code> értékre. <i>Az eredmény kimenete eltérő lehet az aktuális kulturális környezettől függően.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "Konvertálás egyéni formátummal és a német kulturális környezet használatával.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "Konvertálás az ISO 8601-mintával.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "Létrehoz egy datetimezone értéket a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>datetimezone</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).\r\nHa a megadott <code>value</code> <code>null</code> értékű, a <code>DateTimeZone.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> <code>datetimezone</code> értékű, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>datetimezone</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>datetimezone</code> érték szöveges alakból. További részletek: <code>DateTimeZone.FromText</code>.</li>\r\n        <li><code>date</code>: Egy <code>datetimezone</code> érték, ahol a dátum összetevő <code>value</code>, az idő összetevő és a helyi időzónának megfelelő eltolás pedig <code>12:00:00 AM</code>.</li>\r\n        <li><code>datetime</code>: Egy <code>datetimezone</code> érték, ahol a datetime összetevő és a helyi időzónának megfelelő eltolás <code>value</code>.</li>\r\n        <li><code>time</code>: Egy <code>datetimezone</code> érték, ahol a dátum összetevő a <code>0</code> OLE-automatizálási dátum megfelelője, az idő összetevő és a helyi időzónának megfelelő eltolás pedig <code>value</code>.</li>\r\n        <li><code>number</code>: Egy <code>datetimezone</code> érték, ahol a datetime összetevő és a helyi időzónának megfelelő eltolás a <code>value</code> által kifejezett OLE-automatizálási dátum megfelelője.</li>\r\n      </ul>\r\nHa a <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"2020-10-30T01:30:00-08:00\"</code> érték konvertálása <code>datetimezone</code> értékre",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "Létrehoz egy datetimezone értéket egy 64 bit hosszúságú számból.",
        "Documentation.LongDescription": "Létrehoz egy <code>datetimezone</code> értéket a(z) <code>fileTime</code> értékből, és konvertálja azt a helyi időzónára. A filetime érték egy Windows rendszerbeli fájl időpontját jelölő érték, amely az egyezményes világidőben (UTC időzónában) megadott, i. sz. 1601. január 1. 00:00 óta eltelt 100 nanoszekundumos időszakok számát jelzi.\r\n    ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Az <code>129876402529842245</code> érték konvertálása datetimezone típusú értékre",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "Egy datetimezone értéket hoz létre helyi, univerzális és egyéni datetimezone formátumokból.",
        "Documentation.LongDescription": "Egy <code>datetimezone</code> típusú értéket hoz létre egy szöveges alakból (<code>text</code>). Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén a dátum elemzése a legjobb lehetőség alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például az <code>\"MMM\"</code> <code>\"Jan\", \"Feb\", \"Mar\", ...</code> lehet, míg a <code>\"ru-RU\"</code> esetén az <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> értékű lenne.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"2010-12-31T01:30:00-08:00\"</code> érték konvertálása <code>datetimezone</code> típusú értékre.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "Konvertálás egyéni formátummal és a német kulturális környezet használatával.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "Konvertálás az ISO 8601 használatával.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "Eltávolítja az időzónára vonatkozó adatokat a megadott datetimezone értékből.",
        "Documentation.LongDescription": "Egy #datetime értéket ad vissza a következőből az időzónára vonatkozó adatok eltávolításával: <code>dateTimeZone</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Az időzónára vonatkozó adatok eltávolítása a #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0) értékből",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "Konvertálja az időzóna összetevőt a helyi időzónára.",
        "Documentation.LongDescription": "Módosítja a(z) <code>dateTimeZone</code> datetimezone érték időzónaadatait a helyi időzóna adataira.\r\n    Ha a(z) <code>dateTimeZone</code> nem tartalmaz időzóna összetevőt, a program hozzáadja a helyi időzóna adatait.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "A #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) érték időzónaadatainak módosítása a helyi időzónára (Csendes-óceáni időt feltételezve)",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amely tartalmazza a datetimezone érték részeit.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amely tartalmazza a megadott <code>dateTimeZone</code> datetimezone érték részeit.\r\n <ul>\r\n        <li><code>dateTimeZone</code>: Egy <code>datetimezone</code> érték, amelyből a részeit tartalmazó rekord ki lesz számítva.</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "A <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> érték konvertálása egy olyan rekordra, amely tartalmazza a dátum, az idő és az időzóna értékét",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "A datetimezone értéket képviselő szöveges alakot adja vissza.",
        "Documentation.LongDescription": "A(z) <code>dateTimeZone</code> szöveges alakját adja vissza. Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A(z) <code>culture</code> csak örökölt munkafolyamatok esetén használható. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén a dátum formázása a <code>Culture</code> paraméter által meghatározott alapértelmezett érték alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például az <code>\"MMM\"</code> <code>\"Jan\", \"Feb\", \"Mar\", ...</code> lehet, míg a <code>\"ru-RU\"</code> esetén az <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> és a(z) <code>culture</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> értékű lenne.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "A <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> konvertálása <code>text</code> értékre. <i>Az eredmény kimenete eltérő lehet az aktuális kulturális környezettől függően.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "Konvertálás egyéni formátummal és a német kulturális környezet használatával.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "Konvertálás az ISO 8601-mintával.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "Konvertálja az időzóna összetevőt az UTC időzónára.",
        "Documentation.LongDescription": "Módosítja a(z) <code>dateTimeZone</code> datetime érték időzónaadatait az UTC (egyezményes világidő) időzóna adataira.\r\n    Ha a(z) <code>dateTimeZone</code> nem tartalmaz időzóna összetevőt, a program hozzáadja az UTC időzóna adatait.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "A #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) érték időzónaadatainak módosítása az UTC időzónára",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "Módosítja az érték időzónáját.",
        "Documentation.LongDescription": "Módosítja az érték időzónáját.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "Módosítja az érték időzónáját.",
        "Documentation.LongDescription": "Módosítja az érték időzónáját.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "Decimális értéket hoz létre a megadott értékből.",
        "Documentation.LongDescription": "Egy tizedes tört <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Decimal.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> egy <code>number</code> a tizedes törtek tartományában, <code>value</code> értéket ad vissza, más esetben hibát jelez. Ha <code>value</code> bármilyen más típusba tartozik,előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4.5\"</code> decimális <code>number</code> típusú értékének előállítása.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "A Delta Lake-tábla tartalmát adja vissza.",
        "Documentation.LongDescription": "A Delta Lake-tábla tartalmát adja vissza.",
        "Documentation.Category": "Adatok elérése",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "Időértéket hoz létre a megadott értékből.",
        "Documentation.LongDescription": "Egy double <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Double.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> egy <code>number</code> a double számok tartományában, <code>value</code> értéket ad vissza, más esetben hibát jelez. Ha <code>value</code> bármilyen más típusba tartozik,előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> <code>number</code> típusú értékének előállítása.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "Egy időtartam naprészét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> naprészét adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "A két dátum közötti napok számának kivonása.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "Létrehoz egy időtartamot a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>duration</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Duration.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> érték <code>duration</code>, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>duration</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>duration</code> érték az eltelt idő szöveges alakjaiból (n.ó:p:s). További részletek: <code>Duration.FromText</code>.</li>\r\n        <li><code>number</code>: A(z) <code>value</code> által kifejezett egész és töredéknapok számának megfelelő <code>duration</code> érték.</li>\r\n      </ul>\r\nHa a(z) <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "A <code>2.525</code> érték konvertálása <code>duration</code> értékre",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "Egy időtartamértéket ad vissza az eltelt idő szöveges alakjaiból (n.ó:p:s).",
        "Documentation.LongDescription": "Időtartamértéket ad vissza a megadott szövegből: <code>text</code>. Ez a függvény a következő formátumokat tudja elemezni:\r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (Beleértve a tartományok szélső értékeit)<br>\r\n        ddd: Napok száma.<br>\r\n        hh: Órák száma 0 és 23 között.<br>\r\n        mm: Percek száma 0 és 59 között.<br>\r\n        ss: Másodpercek száma 0 és 59 között.<br>\r\n        ff: Másodperc töredéke 0 és 9 999 999 között.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"2.05:55:20\"</code> érték konvertálása <code>duration</code> értékre",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "Egy időtartam órarészét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> órarészét adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Az órák számának kinyerése egy időtartamértékből.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "Egy időtartam percrészét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> percrészét adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "A percek számának kinyerése egy időtartamértékből.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "Egy időtartam másodpercrészét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> másodpercrészét adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "A másodpercek számának kinyerése egy időtartamértékből.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amely tartalmazza az időtartam részeit.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amely tartalmazza a(z) <code>duration</code> időtartamérték részeit.\r\n  <ul>\r\n        <li><code>duration</code>: Egy <code>duration</code> típusú érték, amelyből a rekord létre lesz hozva.</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "A <code>#duration(2, 5, 55, 20)</code> érték konvertálása az azt alkotó részeket – adott esetben napokat, órákat, perceket és másodperceket – tartalmazó rekordra",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "A „n.ó:p:s” formátumú szöveget adja vissza.",
        "Documentation.LongDescription": "Az adott időtartam (<code>duration</code>) szöveges alakját adja vissza „nap.óra:perc:mp” formában.\r\n <ul>\r\n        <li><code>duration</code>: Az az <code>időtartam</code>, amelyből a rendszer kiszámolja a szöveges alakot.</li>\r\n  <li><code>format</code>: <i>[Opcionális]</i> Elavult, hibát eredményez, ha az értéke nem null</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "A <code>#duration(2, 5, 55, 20)</code> érték konvertálása szöveges értékre",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "Az ezen időtartam által felölelt napok számát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> által felölelt napok teljes számát adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Az időtartamérték által felölelt napok teljes számát keresi meg.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "Az ezen időtartam által felölelt órák számát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> által felölelt órák teljes számát adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Az időtartamérték által felölelt órák teljes számát keresi meg.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "Az ezen időtartam által felölelt percek számát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> által felölelt percek teljes számát adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Az időtartamérték által felölelt percek teljes számát keresi meg.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "Az ezen időtartam által felölelt másodpercek számát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>duration</code> által felölelt másodpercek teljes számát adja vissza.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Az időtartamérték által felölelt másodpercek teljes számát keresi meg.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "Egy hibarekordot ad vissza az ok, üzenet és részletek megadott szöveges értékeiből.",
        "Documentation.LongDescription": "Egy hibarekordot ad vissza az ok, üzenet és részletek megadott szöveges értékeiből.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "Egy állandó érték M forráskód formátumú változatát adja vissza.",
        "Documentation.LongDescription": "Egy állandó érték M forráskód formátumú változatát adja vissza.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Egy számérték M forráskód formátumú változatának lekérése.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "Egy dátumérték M forráskód formátumú változatának lekérése.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "Egy szöveges érték M forráskód formátumú változatának lekérése.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "Egy M kifejezés kiértékelésének eredményét adja vissza.",
        "Documentation.LongDescription": "Egy M kifejezés (<code>document</code>) kiértékelésének eredményét adja vissza, a(z) <code>environment</code> által meghatározott, rendelkezésre álló, hivatkozható azonosítókkal együtt.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Egyszerű összeg kiértékelése.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "Összetettebb összeg kiértékelése.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "Egy szöveges érték és egy azonosító összefűzésének kiértékelése.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "Egy azonosító M forráskód formátumú változatát adja vissza.",
        "Documentation.LongDescription": "Egy azonosító (<code>name</code>) M forráskód formátumú változatát adja vissza.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Egy azonosító M forráskód formátumú változatának lekérése.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "Szóközt tartalmazó azonosító M forráskód formátumú változatának lekérése.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "A megadott fájl tartalmát adja vissza bináris formában.",
        "Documentation.LongDescription": "A(z) <code>path</code> fájl tartalmát adja vissza binárisként. A(z) <code>options</code> paraméter jelenleg csak belső használatra szolgál.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "Visszaadja, hogy az adott függvény adatforrásnak számít-e.",
        "Documentation.LongDescription": "Visszaadja, hogy a(z) <code>function</code> adatforrásnak számít-e.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Földrajzi értéket Well-Known Text (WKT) formátumban képviselő szöveget fordít le strukturált rekorddá.",
        "Documentation.LongDescription": "Földrajzi értéket Well-Known Text (WKT) formátumban képviselő szöveget fordít le strukturált rekorddá. A WKT a Nyílt térinformatikai konzorcium (OGC) által definiált szabványos formátum, amely az adatbázisok, például az SQL Server által használt jellemző szerializálási formátum.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "Egy strukturált földrajzi pont értékét fordítja le Well-Known Text (WKT) formába.",
        "Documentation.LongDescription": "Egy strukturált földrajzi pont értékét fordítja le Well-Known Text (WKT) formába a Nyílt térinformatikai konzorcium (OGC) meghatározásai szerint. Ezt a szerializálási formátumot sok adatbázis használja, köztük az SQL Server is.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Geometriai értéket Well-Known Text (WKT) formátumban képviselő szöveget fordít le strukturált rekorddá.",
        "Documentation.LongDescription": "Geometriai értéket Well-Known Text (WKT) formátumban képviselő szöveget fordít le strukturált rekorddá. A WKT a Nyílt térinformatikai konzorcium (OGC) által definiált szabványos formátum, amely az adatbázisok, például az SQL Server által használt jellemző szerializálási formátum.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "Egy strukturált geometriai pont értékét fordítja le Well-Known Text (WKT) formába.",
        "Documentation.LongDescription": "Egy strukturált geometriai pont értékét fordítja le Well-Known Text (WKT) formába a Nyílt térinformatikai konzorcium (OGC) meghatározásai szerint. Ezt a szerializálási formátumot sok adatbázis használja, köztük az SQL Server is.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "GUID értéket ad vissza az adott elemből.",
        "Documentation.LongDescription": "Egy <code>Guid.Type</code> értéket ad vissza az adott <code>value</code> elemből. Ha a megadott <code>value</code> <code>null</code>, a <code>Guid.From</code> <code>null</code> értéket ad vissza.  A rendszer ellenőrzi, hogy a megadott <code>value</code> formátuma elfogadható-e. Az elfogadható formátumok a példákban vannak megadva.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "A GUID 32 összefüggő hexadecimális számjegyeként is megadható.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "A Guid összesen 32, kötőjelekkel 8-4-4-4-12 karakteres szakaszokra osztott hexadecimális számjegyként is megadható.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "A GUID megadható 32 hexadecimális számjegyként is, ahol minden számjegyet kötőjel választ el, és kapcsos zárójelek között található.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "A GUID megadható 32 hexadecimális számjegyként is, ahol minden számjegyet kötőjel választ el, és zárójelek között található.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "A megadott érték átalakítása 16 bites egész számmá.",
        "Documentation.LongDescription": "Egy 16 bites egész <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, az <code>Int16.From</code> függvény visszaadott értéke <code>null</code>. Ha a megadott <code>value</code> <code>number</code> a 16 bites egész számok tartományában, törtrész nélkül, <code>value</code> értéket ad vissza. Ha rendelkezik törtrésszel, a szám a megadott kerekítési mód szerint lesz kerekítve. Az alapértelmezett kerekítési mód a <code>RoundingMode.ToEven</code>. Ha <code>value</code> bármilyen más típusba tartozik, előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Az elérhető kerekítési módokkal kapcsolatban lásd: <code>Number.Round</code>. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> érték átalakítása <code>number</code> típusú 16 bites egész számmá.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "A <code>\"4.5\"</code> érték átalakítása <code>number</code> típusú 16 bites egész számmá a <code>RoundingMode.AwayFromZero</code> használatával.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "A megadott érték átalakítása 32 bites egész számmá.",
        "Documentation.LongDescription": "Egy 32 bites egész <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, az <code>Int32.From</code> függvény visszaadott értéke <code>null</code>. Ha a megadott <code>value</code> <code>number</code> a 32 bites egész számok tartományában, törtrész nélkül, <code>value</code> értéket ad vissza. Ha rendelkezik törtrésszel, a szám a megadott kerekítési mód szerint lesz kerekítve. Az alapértelmezett kerekítési mód a <code>RoundingMode.ToEven</code>. Ha <code>value</code> bármilyen más típusba tartozik, előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Az elérhető kerekítési módokkal kapcsolatban lásd: <code>Number.Round</code>. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> érték átalakítása <code>number</code> típusú 32 bites egész számmá.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "A <code>\"4.5\"</code> érték átalakítása <code>number</code> típusú 32 bites egész számmá a <code>RoundingMode.AwayFromZero</code> használatával.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "A megadott érték átalakítása 64 bites egész számmá.",
        "Documentation.LongDescription": "Egy 64 bites egész <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, az <code>Int64.From</code> függvény visszaadott értéke <code>null</code>. Ha a megadott <code>value</code> <code>number</code> a 64 bites egész számok tartományában, törtrész nélkül, <code>value</code> értéket ad vissza. Ha rendelkezik törtrésszel, a szám a megadott kerekítési mód szerint lesz kerekítve. Az alapértelmezett kerekítési mód a <code>RoundingMode.ToEven</code>. Ha <code>value</code> bármilyen más típusba tartozik, előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Az elérhető kerekítési módokkal kapcsolatban lásd: <code>Number.Round</code>. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> érték átalakítása <code>number</code> típusú 64 bites egészre.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "A <code>\"4,5\"</code> 64 bites <code>számértékének</code> beolvasása a <code>RoundingMode.AwayFromZero</code> használatával.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "A megadott érték átalakítása aláírt 8 bites egész számmá.",
        "Documentation.LongDescription": "Egy 8 bites előjeles egész <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, az <code>Int8.From</code> függvény visszaadott értéke <code>null</code>. Ha a megadott <code>value</code> <code>number</code> a 8 bites előjeles egész számok tartományában, törtrész nélkül, <code>value</code> értéket ad vissza. Ha rendelkezik törtrésszel, a szám a megadott kerekítési mód szerint lesz kerekítve. Az alapértelmezett kerekítési mód a <code>RoundingMode.ToEven</code>. Ha <code>value</code> bármilyen más típusba tartozik, előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Az elérhető kerekítési módokkal kapcsolatban lásd: <code>Number.Round</code>. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> érték átalakítása <code>number</code> típusú aláírt 8 bites egész számmá.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "A <code>\"4.5\"</code> érték átalakítása <code>number</code> típusú aláírt 8 bites egész számmá a <code>RoundingMode.AwayFromZero</code> használatával.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "Egy függvény törzséhez tartozó absztrakt szintaxisfát (AST) adja vissza.",
        "Documentation.LongDescription": "<p>A(z) <code>function</code> törzséhez tartozó absztrakt szintaxisfát (AST) adja vissza <i>sorkifejezésbe</i> normalizálva:\r\n<ul>\r\n  <li>A függvény csak 1 argumentumos lambda lehet.</li>\r\n  <li>A függvényparaméterre mutató összes hivatkozás helyére az <code>ItemExpression.Item</code> kerül.</li>\r\n  <li>Az AST-t a rendszer egyszerűsíti, hogy csak a következő típusú csomópontokat tartalmazza:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Akkor jelentkezik hiba, ha nem sikerül egy sorkifejezés AST-jét visszaadni a(z) <code>function</code> törzséhez.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Az <code>each _ <> null</code> függvény törzséhez tartozó AST-t adja vissza",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "A JSON-dokumentum tartalmát adja vissza.",
        "Documentation.LongDescription": "A JSON-dokumentum tartalmát adja vissza.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "Létrehozza a megadott érték JSON-ábrázolását.",
        "Documentation.LongDescription": "<p>Létrehozza a megadott <code>value</code> érték JSON-ábrázolását a(z) <code>encoding</code> által meghatározott szövegkódolással. Ha a(z) <code>encoding</code> ki van hagyva, a rendszer az UTF8-at használja. Az értékek a következőképpen jelennek meg:</p>\r\n <ul>\r\n        <li>A null, szöveg és logikai értékek a nekik megfelelő JSON-típusokként jelennek meg.</li>\r\n        <li>A számok JSON-számokként jelennek meg, kivétel az <code>#infinity</code>, <code>-#infinity</code> és <code>#nan</code> elemek, amelyek null értékre konvertálódnak.</li>\r\n        <li>A listák JSON-tömbökként jelennek meg.</li>\r\n        <li>A rekordok JSON-objektumokként jelennek meg.</li>\r\n        <li>A táblák objektumok tömbjeiként jelennek meg.</li>\r\n        <li>A dátumok, időpontok, dátum/idő értékek, dátum/időzónák és az időtartamok ISO-8601 szövegként jelennek meg.</li>\r\n        <li>A bináris értékek base-64 kódolású szövegként jelennek meg.</li>\r\n        <li>A típusok és függvények hibát okoznak.</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Összetett érték konvertálása JSON formátumúvá.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "Átalakít egy bináris értéket a sortöréseknél elválasztott szöveges értékekből álló listára. Ha az idézőjel stílusa meg van adva, a sortörések idézőjelek között jelenhetnek meg. Ha az includeLineSeparators értéke igaz, a sortörés karakterek a szöveg részét képezik.",
        "Documentation.LongDescription": "Átalakít egy bináris értéket a sortöréseknél elválasztott szöveges értékekből álló listára. Ha az idézőjel stílusa meg van adva, a sortörések idézőjelek között jelenhetnek meg. Ha az includeLineSeparators értéke igaz, a sortörés karakterek a szöveg részét képezik.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "Átalakít egy szöveges értéket a sortöréseknél elválasztott szöveges értékekből álló listára. Ha az includeLineSeparators értéke igaz, a sortörés karakterek a szöveg részét képezik.",
        "Documentation.LongDescription": "Átalakít egy szöveges értéket a sortöréseknél elválasztott szöveges értékekből álló listára. Ha az includeLineSeparators értéke igaz, a sortörés karakterek a szöveg részét képezik.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (alapértelmezett) Nincs szükség az idézési mód meghatározására.</li>\r\n            <li><code>QuoteStyle.Csv:</code> Az idézés a CSV formátumnak megfelelően történik. Az ilyen régiók dupla idézőjellel választhatók el egymástól. Egy adott régión belül egy pár dupla idézőjellel tüntethető fel egyetlen dupla idézőjel.</li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "Bináris értékké alakít egy szöveges listát a megadott kódolás és lineSeparator használatával. A megadott lineSeparator elválasztó mindegyik sorhoz hozzá lesz fűzve. Ha nincs megadva elválasztó, a program a kocsivissza és sortörés karaktereket használja sorelválasztóként.",
        "Documentation.LongDescription": "Bináris értékké alakít egy szöveges listát a megadott kódolás és lineSeparator használatával. A megadott lineSeparator elválasztó mindegyik sorhoz hozzá lesz fűzve. Ha nincs megadva elválasztó, a program a kocsivissza és sortörés karaktereket használja sorelválasztóként.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "Egyetlen szöveggé alakít egy szöveges listát. A megadott lineSeparator elválasztó mindegyik sorhoz hozzá lesz fűzve. Ha nincs megadva elválasztó, a program a kocsivissza és sortörés karaktereket használja sorelválasztóként.",
        "Documentation.LongDescription": "Egyetlen szöveggé alakít egy szöveges listát. A megadott lineSeparator elválasztó mindegyik sorhoz hozzá lesz fűzve. Ha nincs megadva elválasztó, a program a kocsivissza és sortörés karaktereket használja sorelválasztóként.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "Igaz értéket ad vissza, ha az összes kifejezés igaz.",
        "Documentation.LongDescription": "Igaz értéket ad vissza, ha a(z) <code>list</code> listán szereplő összes kifejezés igaz.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy a {true, true, 2 > 0} listán szereplő összes kifejezés igaz-e",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "Annak megállapítása, hogy a {true, true, 2 < 0} listán szereplő összes kifejezés igaz-e",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "Igaz értéket ad vissza, ha bármely kifejezés igaz.",
        "Documentation.LongDescription": "Igaz értéket ad vissza, ha a(z) <code>list</code> listán szereplő bármely kifejezés igaz.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Annak megállapítása, hogy a {true, false, 2 > 0} listán szereplő bármely kifejezés igaz-e",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "Annak megállapítása, hogy a {2 = 0, false, 2 < 0} listán szereplő bármely kifejezés igaz-e",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "Az értékek átlagát adja vissza. Számértékekkel, valamint date, datetime, datetimezone és duration típusú értékekkel használható.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista elemeinek átlagértékét adja vissza. Az eredmény adattípusa meg fog egyezni a lista értékeinek adattípusával. Csak számértékekkel, valamint date, time, datetime, datetimezone és duration típusú értékekkel használható.\r\n    Ha a lista üres, null értéket ad vissza.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "A <code>{3, 4, 6}</code> számlista átlagának kiszámítása",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "A 2011. január 1., a 2011. január 2. és a 2011. január 3. dátumértékek átlagának kiszámítása.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "Pufferel egy listát.",
        "Documentation.LongDescription": "A memóriában puffereli a(z) <code>list</code> listát. A hívás eredménye egy stabil lista.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Létrehozza az {1..10} lista stabil másolatát.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "Több lista kombinálásával egyetlen listát ad vissza.",
        "Documentation.LongDescription": "Listák listájából (<code>lists</code>) kiindulva egyetlen új listává fűzi össze azokat.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Két egyszerű lista ({1, 2} és {3, 4}) összevonása",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "Két lista ({1, 2} és {3, {4, 5}}) összevonása, amelyek közül az egyik egy beágyazott listát is tartalmaz",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "A listán szereplő elemek számát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> listán szereplő elemek számát adja vissza.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Az {1, 2, 3} listán levő értékek számának meghatározása",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "Értékek listáját adja vissza az ismétlődő értékek eltávolításával.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista összes eleméből készülő listát ad vissza, az ismétlődő értékek eltávolításával. Ha a lista üres, az eredmény üres lista lesz.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja az ismétlődéseket az {1, 1, 2, 3, 3, 3} listából.",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "A lista első értékét adja vissza, vagy pedig a megadott alapértéket, ha üres.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista első elemét adja vissza, vagy pedig a nem kötelező alapértéket (<code>defaultValue</code>), ha a lista üres.\r\n    Ha a lista üres, és nincs megadva alapértelmezett érték, a függvény <code>null</code> értéket ad vissza.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Az {1, 2, 3} lista első értékének megkeresése",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "A {} lista első értékének megkeresése. Ha a lista üres, -1-et ad vissza.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "A bemenetben található listaértékek metszetét adja vissza.",
        "Documentation.LongDescription": "A bemeneti <code>lists</code> listában található listaértékek metszetét adja vissza. Megadható egy nem kötelező <code>equationCriteria</code> paraméter is.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "A következő listák metszetének megkeresése: {1..5}, {2..6}, {3..7}",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "Jelzi, hogy a listán vannak-e ismétlődő elemek.",
        "Documentation.LongDescription": "Logikai értéket ad vissza aszerint, hogy a(z) <code>list</code> listán vannak-e ismétlődő elemek; <code>true</code>, ha a lista minden eleme különbözik; <code>false</code>, ha vannak a listán ismétlődő értékek. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3} lista értékei egyediek-e (vagyis nincsenek ismétlődések)",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "Annak meghatározása, hogy az {1, 2, 3, 3} lista értékei egyediek-e (vagyis nincsenek ismétlődések)",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "Igaz értéket ad vissza, ha üres a lista.",
        "Documentation.LongDescription": "<code>true</code> értéket ad, ha a(z) <code>list</code> lista nem tartalmaz értéket (tehát a lista hossza 0). Ha a lista tartalmaz értéket (tehát a lista hossza > 0), a függvény <code>false</code> értéket ad.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Annak eldöntése, hogy a {} lista üres-e",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "Annak eldöntése, hogy az {1, 2} lista üres-e",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "A lista utolsó értékét adja vissza, vagy pedig a megadott alapértéket, ha üres.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista utolsó elemét adja vissza, vagy pedig a nem kötelező alapértéket (<code>defaultValue</code>), ha a lista üres.\r\n    Ha a lista üres, és nincs megadva alapértelmezett érték, a függvény <code>null</code> értéket ad vissza.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Az {1, 2, 3} lista utolsó értékének megkeresése",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "A {} lista utolsó értékének megkeresése, illetve -1 érték visszaadása, ha a lista üres",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "A lista utolsó értékét adja vissza. Megadható nem kötelezően a visszaadandó értékek száma vagy egy szűrési feltétel is.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista utolsó elemét adja vissza. A függvény kivételt vált ki, ha a lista üres.\r\n Ez a függvény egy nem kötelező <code>countOrCondition</code> paramétert is fogad több elem összegyűjtésének vagy az elemek szűrésének támogatásához. A(z) <code>countOrCondition</code> paraméter háromféleképpen adható meg:\r\n <ul>\r\n  <li>Ha egy szám van megadva, a függvény legfeljebb annyi elemet ad vissza. </li>\r\n  <li>Ha egy feltétel van megadva, a függvény a feltételnek kezdetben megfelelő összes elemet visszaadja a lista végéről. Amint egy elem nem felel meg a feltételnek, a függvény nem vizsgálja a további elemeket. </li>\r\n  <li>Ha a paraméter null értékű, a függvény a lista utolsó elemét adja vissza.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "A {3, 4, 5, -1, 7, 8, 2} lista utolsó értékének megkeresése",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "A {3, 4, 5, -1, 7, 8, 2} lista azon utolsó értékeinek megkeresése, amelyek nagyobbak 0-nál",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "A legnagyobb értéket – vagy üres lista esetén az alapértelmezett értéket – adja vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> lista legnagyobb elemét – vagy üres lista esetén a nem kötelezően megadott <code>default</code> alapértelmezett értéket – adja vissza. \r\n    Megadható egy nem kötelező <code>comparisonCriteria</code> comparisonCriteria érték, amellyel meghatározható a lista elemeinek összehasonlítási módja. Ha ez a paraméter null értékű, a függvény az alapértelmezett összehasonlítót használja.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Az {1, 4, 7, 3, -2, 5} lista legnagyobb elemének megkeresése",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "Az {} lista legnagyobb elemének megkeresése, illetve -1 érték visszaadása, ha a lista üres ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "A lista középértéket adja vissza.",
        "Documentation.LongDescription": "A <code>list</code> lista középértékének megfelelő elemet adja vissza. A függvény <code>null</code> értéket ad vissza, ha a lista nem tartalmaz <code>null</code> értéktől eltérő értéket.\r\n    Páros számú elem esetén a függvény kiválasztja a két középérték elem közül a kisebbet, kivéve, ha a lista\r\n    kizárólag datetime értékekből, időtartamokból, számokból vagy időértékekből áll. Ez esetben a két elem átlagát adja vissza.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Az <code>{5, 3, 1, 7, 9}</code> lista középértékének megkeresése",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "A legkisebb értéket vagy üres lista esetén az alapértelmezett értéket adja vissza.",
        "Documentation.LongDescription": "A <code>list</code> lista legkisebb elemét, vagy üres lista esetén a nem kötelező <code>default</code> alapértelmezett értéket adja vissza.\r\n    Megadható egy nem kötelező <code>comparisonCriteria</code> comparisonCriteria érték, amellyel meghatározható a lista elemeinek összehasonlítási módja. Ha ez a paraméter nullértékű, a függvény az alapértelmezett összehasonlítót használja.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Az {1, 4, 7, 3, -2, 5} lista legkisebb elemének megkeresése",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "Az {} lista legkisebb elemének megkeresése, illetve -1 érték visszaadása, ha a lista üres ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "A lista leggyakoribb értéket adja vissza.",
        "Documentation.LongDescription": "A <code>list</code> listán leggyakrabban szereplő elemet adja vissza. A függvény kivételt vált ki, ha a lista üres. Ha több elem szerepel ugyanazzal a maximális gyakorisággal, a függvény az utolsót választja közülük.\r\n    Megadható egy nem kötelező <code>equationCriteria</code> <code>comparisonCriteria</code> érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Az <code>{\"A\", 1, 2, 3, 3, 4, 5}</code> listán leggyakrabban szereplő elem megkeresése",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "Az <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> listán leggyakrabban szereplő elem megkeresése",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "A lista leggyakoribb értékeinek listáját adja vissza.",
        "Documentation.LongDescription": "A <code>list</code> listán leggyakrabban szereplő elemet adja vissza. A függvény kivételt vált ki, ha a lista üres. Ha több elem szerepel ugyanazzal a maximális gyakorisággal, a függvény az utolsót választja közülük.\r\n    Megadható egy nem kötelező <code>equationCriteria</code> <code>comparisonCriteria</code> érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Az <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> listán leggyakrabban szereplő elemek megkeresése",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "A listán szereplő nem null értékű elemek számát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> listán szereplő nem null értékű elemek számát adja vissza.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "A bemeneti listához tartozó eltolások listáját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> bemeneti listához tartozó eltolások listáját adja vissza.\r\n    Ha a List.Transform használatával módosít egy listát, a pozíciók listájának felhasználásával biztosíthatja a hozzáférést a pozícióhoz a transzformáció számára.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Az {1, 2, 3, 4, null, 5} listán levő értékek eltolásának meghatározása",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "A listán szereplő számok szorzatát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>numbersList</code> listán szereplő nem null értékű számok szorzatát adja vissza. Null értéket ad vissza, ha nem szerepel a listán nem null értékű szám.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Az <code>{1, 2, 3, 3, 4, 5, 5}</code> listán szereplő számok szorzatának meghatározása",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "Egy véletlenszerű számokból álló listát ad vissza.",
        "Documentation.LongDescription": "0 és 1 közötti véletlenszerű számok sorozatát adja vissza, ha meg van adva az előállítani kívánt értékek száma, illetve egy opcionális kezdőérték.\r\n<ul>\r\n    <li><code>count</code>: Az előállítani kívánt véletlenszerű értékek száma.</li>\r\n    <li><code>seed</code>: <i>[Nem kötelező]</i> A véletlenszám-generálás kezdőértékeként megadott numerikus érték. Ha kihagyják, a rendszer egy véletlenszerű egyedi számsort állít elő a függvény minden egyes meghívásakor. Ha kezdőértékként meg van adva egy szám, a rendszer a függvény minden egyes meghívásakor ugyanazt a véletlenszerű számsort állítja elő.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "3 véletlenszerű számból álló lista létrehozása",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "3 véletlenszerű számból álló lista létrehozása kezdeti érték megadásával",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "Olyan listát ad vissza, amelyről ki van hagyva a megadott számú elem a lista elejéről.",
        "Documentation.LongDescription": "Egy olyan listát ad vissza, amelyből el van távolítva a(z) <code>list</code> lista első eleme. Ha a(z) <code>list</code> üres lista, a rendszer üres listát ad vissza.\r\nEz a függvény egy nem kötelező <code>countOrCondition</code> paramétert fogad, amivel több érték eltávolítását támogatja az alábbiak szerint.\r\n <ul>\r\n <li>Ha egy szám van megadva, legfeljebb annyi elem lesz eltávolítva. </li>\r\n <li>Ha egy feltétel van megadva, a(z) <code>list</code> elején lévő összes egymást követő egyező elem el lesz távolítva.</li>\r\n <li>Ha ez a paraméter null értékű, az alapértelmezett viselkedés lesz figyelembe véve. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása az {1, 2, 3, 4, 5} listából az első 3 szám elhagyásával",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Olyan lista létrehozása az {5, 4, 2, 6, 1} listából, amely egy 3-nál kisebb számmal kezdődik",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "Olyan listát ad vissza, amelyről el van távolítva a megadott számú elem a lista végéről.",
        "Documentation.LongDescription": "Olyan listát ad vissza, amelyben el van távolítva az utolsó <code>countOrCondition</code> elem a(z) <code>list</code> lista végéről. Ha a(z) <code>list</code> kevesebb mint <code>countOrCondition</code> elemet tartalmaz, a rendszer üres listát ad vissza.\r\n <ul>\r\n <li>Ha egy szám van megadva, legfeljebb annyi elem lesz eltávolítva. </li>\r\n <li>Ha egy feltétel van megadva, a(z) <code>list</code> végén lévő összes egymást követő egyező elem el lesz távolítva.</li>\r\n <li>Ha ez a paraméter null értékű, a rendszer csak egy elemet távolít el. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása az {1, 2, 3, 4, 5} listából az utolsó 3 szám elhagyásával.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Olyan lista létrehozása az {5, 4, 2, 6, 4} listából, amely egy 3-nál kisebb számmal végződik.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "Eltávolítja az összes „null” értéket a megadott listáról.",
        "Documentation.LongDescription": "Eltávolítja a „null” értékek összes előfordulását a(z) <code>list</code> listáról. Ha nem szerepelnek „null” értékek a listán, a függvény az eredeti listát adja vissza.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Az összes „null” érték eltávolítása az {1, 2, 3, null, 4, 5, null, 6} listáról",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "Megfordítja az értékek sorrendjét a listán.",
        "Documentation.LongDescription": "Egy olyan listát ad vissza, amely fordított sorrendben tartalmazza az eredeti <code>list</code> lista értékeit.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása az {1..10} tartományból fordított sorrendben",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "Visszaadja egy 1 hosszúságú lista egyetlen elemét, egyéb esetben pedig kivételt vált ki.",
        "Documentation.LongDescription": "Ha csak egy elem szerepel a(z) <code>list</code> listán, a függvény azt az elemet adja vissza.\r\n    Ha több elem szerepel a listán, vagy ha a lista üres, a függvény kivételt vált ki.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "A(z) {1} lista egyetlen értékének megkeresése",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "Az {1, 2, 3} lista egyetlen értékének megkeresése",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "Visszaadja egy 1 hosszúságú lista egyetlen elemét, illetve üres lista esetén az alapértelmezett értéket.",
        "Documentation.LongDescription": "Ha csak egy elem szerepel a(z) <code>list</code> listán, a függvény azt az elemet adja vissza.\r\n    Ha a lista üres, és nincs megadva egy nem kötelező <code>default</code> érték, a függvény nullértéket ad vissza. Ha több elem szerepel a listán, a függvény hibát ad vissza.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "A(z) {1} lista egyetlen értékének megkeresése",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "Az {} lista egyetlen értékének megkeresése",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "Az {} lista egyetlen értékének megkeresése, illetve -1 érték visszaadása üres lista esetén",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "Olyan listát ad vissza, amelyről ki van hagyva a megadott számú elem a lista elejéről.",
        "Documentation.LongDescription": "Egy olyan listát ad vissza, amelyből ki van hagyva a(z) <code>list</code> lista első eleme. Ha a(z) <code>list</code> üres lista, a rendszer üres listát ad vissza.\r\nEz a függvény egy nem kötelező <code>countOrCondition</code> paramétert fogad, amivel több érték kihagyását támogatja az alábbiak szerint.\r\n <ul>\r\n <li>Ha egy szám van megadva, legfeljebb annyi elem lesz kihagyva. </li>\r\n <li>Ha egy feltétel van megadva, a(z) <code>list</code> elején lévő összes egymást követő egyező elem ki lesz hagyva.</li>\r\n <li>Ha ez a paraméter null értékű, az alapértelmezett viselkedés lesz figyelembe véve. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Lista létrehozása az {1, 2, 3, 4, 5} listából az első 3 szám elhagyásával",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Olyan lista létrehozása az {5, 4, 2, 6, 1} listából, amely egy 3-nál kisebb számmal kezdődik",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "A megadott feltételeknek megfelelően rendez egy adatokból álló listát.",
        "Documentation.LongDescription": "A megadott nem kötelező feltételeknek megfelelően rendez egy adatokból álló <code>list</code> listát.\r\n    Megadható egy nem kötelező <code>comparisonCriteria</code> paraméter összehasonlítási feltételként. Ez a következő értékek egyike lehet:\r\n    <ul>\r\n    <li> A sorrend szabályozásához az összehasonlítási feltétel az Order számbavétel egyik értéke lehet (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> A rendezéshez használandó kulcs kiszámításához használható egy 1 argumentumot fogadó függvény. </li>\r\n    <li> Egyidejűleg egy kulcs kiválasztásához és a sorrend szabályozásához az összehasonlítási feltétel lehet egy kulcsból és egy sorrendből álló lista (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> Az összehasonlítás teljes körű szabályozásához használható egy 2 argumentumot elfogadó függvény, amely két elemet kap meg a listából (bármely két elemet, bármilyen sorrendben). A függvény a következő értékek valamelyikét adja ki: \r\n        <ul>\r\n            <li> <code>-1</code>: Az első elem kisebb, mint a második.</li>\r\n            <li> <code>0</code>: A két elem egyenlő.</li>\r\n            <li> <code>1</code>: Az első elem nagyobb, mint a második.</li>\r\n        </ul>\r\n       A  Value.Compare metódus használható ezen logikai működés delegálásához. </li>\r\n    </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "A {2, 3, 1} lista rendezése",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "A {2, 3, 1} lista rendezése csökkenő sorrendben",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "A {2, 3, 1} lista rendezése csökkenő sorrendben a Value.Compare metódus használatával",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "A szórásnak egy minta alapján megbecsült értékét adja vissza.",
        "Documentation.LongDescription": "Mintán alapuló becslést ad a(z) <code>numbersList</code> listában lévő értékek szórására.\r\n    Ha a(z) <code>numbersList</code> egy számlista, számot ad vissza.\r\n    Kivétel történik üres listák vagy nem <code>number</code> típusú elemekből álló listák esetén.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Az 1 és 5 közötti számok szórásának meghatározása",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "A listán szereplő elemek összegét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>list</code> listán szereplő nem null értékek összegét adja vissza. Null értéket ad vissza, ha nem szerepel a listán nem null értékű szám.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "Az <code>{1, 2, 3}</code> listán szereplő számok összegének meghatározása",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "A bemenetben található listaértékek unióját adja vissza.",
        "Documentation.LongDescription": "Veszi a(z) <code>lists</code> listákból álló listát, az egyes listák elemeinek unióját képezi, és visszaadja azokat a kimeneti listán. Az eredményként visszaadott lista a bemeneti listák bármelyikén szereplő összes elemet tartalmazza.\r\n    Ez a művelet fenntartja a hagyományos zsák szemantikát, így az ismétlődő értékek egyeztetve lesznek az unió részeként.\r\n    Megadható egy nem kötelező <code>equationCriteria</code> egyenlőségi feltétel érték is az egyenlőségvizsgálat szabályozásához. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Az {1..5}, {2..6}, {3..7} lista uniójának létrehozása",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "Olyan listákat sorol fel, amelyek az ugyanabban a pozícióban található elemek egyesítésével alakulnak ki.",
        "Documentation.LongDescription": "Felvesz egy listákból álló <code>lists</code> listát, illetve olyan listákat sorol fel, amelyek az ugyanabban a pozícióban található elemek egyesítésével alakulnak ki.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Két egyszerű listát ({1, 2} és {3, 4}) tömörít.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Két, egymástól eltérő hosszúságú egyszerű listát ({1, 2} és {3}) tömörít.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "Létrehoz egy logikai értéket a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>logical</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Logical.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> érték <code>logical</code>, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>logical</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>logical</code> érték a szöveges értékből, amely <code>\"true\"</code> vagy <code>\"false\"</code> lehet. További részletek: <code>Logical.FromText</code>.</li>\r\n        <li><code>number</code>: <code>false</code>, ha a(z) <code>value</code> egyenlő <code>0</code>-val, egyéb esetben <code>true</code>.</li>\r\n      </ul>\r\nHa a(z) <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "A <code>2</code> érték konvertálása <code>logical</code> értékre",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "Létrehoz egy logikai értéket a szöveges „true” és „false” értékekből.",
        "Documentation.LongDescription": "Létrehoz egy logikai értéket a szöveges <code>text</code> értékből, amely „true” vagy „false” lehet. Ha a(z) <code>text</code> ezektől eltérő sztringet tartalmaz, a függvény kivételt vált ki. A függvény nem különbözteti meg a kis- és nagybetűket a szöveges <code>text</code> értékben.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Logikai érték létrehozása a „true” szöveges sztringből",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "Logikai érték létrehozása az „a” szöveges sztringből",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "A „true” vagy a „false” szöveget adja vissza a megadott logikai értéktől függően.",
        "Documentation.LongDescription": "Létrehoz egy szöveges értéket a logikai <code>logicalValue</code> értékből, amely <code>true</code> vagy <code>false</code> lehet. Ha a(z) <code>logicalValue</code> nem logikai érték, a függvény kivételt vált ki.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Szöveges érték létrehozása a logikai <code>true</code> értékből",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "A szám abszolút értékét adja vissza.",
        "Documentation.LongDescription": "<code>number</code> Abszolút értékét adja vissza. Ha a(z) <code>number</code> nullértékű, a <code>Number.Abs</code> nullértéket ad vissza.\r\n    <ul>\r\n        <li><code>number</code>: Egy <code>number</code> érték, amelyhez a rendszer abszolút értéket számít.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A -3 abszolút értéke",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "Visszaadja a szám arkusz koszinuszát.",
        "Documentation.LongDescription": "A(z) <code>number</code> arkusz koszinuszát adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "Visszaadja a szám arkusz szinuszát.",
        "Documentation.LongDescription": "A(z) <code>number</code> arkusz szinuszát adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "Visszaadja a szám arkusz tangensét.",
        "Documentation.LongDescription": "A(z) <code>number</code> arkusz tangensét adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "Egy olyan bájtot ad vissza, amelyben mindegyik bit ellentétes a bemenetben szereplővel.",
        "Documentation.LongDescription": "A(z) <code>number</code> értéken elvégzett bitenkénti „Negálás” művelet eredményét adja vissza.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "Visszaadja a szám koszinuszát.",
        "Documentation.LongDescription": "A(z) <code>number</code> koszinuszát adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "A 0 radiános szög koszinuszának meghatározása",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "Visszaadja a szám koszinusz hiperbolikuszát.",
        "Documentation.LongDescription": "A(z) <code>number</code> koszinusz hiperbolikuszát adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "A megadott hatványra emeli az e értéket.",
        "Documentation.LongDescription": "Az e érték <code>number</code>. hatványra emelésének eredményét adja vissza (exponenciális függvény).\r\n      <ul>\r\n        <li><code>number</code>: Egy <code>number</code> típusú érték, amelyre ki kell számítani az exponenciális függvényt. Ha a(z) <code>number</code> érték null, a <code>Number.Exp</code> függvény null értéket ad vissza. </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Az e érték 3. hatványra emelése",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "Visszaadja a szám faktoriálisát.",
        "Documentation.LongDescription": "A(z) <code>number</code> szám faktoriálisát adja vissza.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A 10 faktoriálisának meghatározása",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "Számot hoz létre a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>number</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).\r\nHa a megadott <code>value</code> <code>null</code>, a <code>Number.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> <code>number</code>, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>number</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>number</code> érték szöveges alakból. Az általános szöveges formátumok („15”, „3423.10”, „5.0E-10”) használhatók. További részletek: <code>Number.FromText</code>.</li>\r\n        <li><code>logical</code>: 1 <code>true</code> esetén, 0 <code>false</code> esetén.</li>\r\n        <li><code>datetime</code>: Egy OLE-automatizálási dátum megfelelőjét tartalmazó kétszeres pontosságú lebegőpontos szám.</li>\r\n        <li><code>datetimezone</code>: A <code>value</code> helyi dátum és idő OLE-automatizálási dátum megfelelőjét tartalmazó kétszeres pontosságú lebegőpontos szám.</li>\r\n        <li><code>date</code>: Egy OLE-automatizálási dátum megfelelőjét tartalmazó kétszeres pontosságú lebegőpontos szám.</li>\r\n        <li><code>time</code>: Töredéknapokban kifejezve.</li>\r\n        <li><code>duration</code>: Egész és töredéknapokban kifejezve.</li>\r\n      </ul>\r\nHa a <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> <code>number</code> típusú értékének lekérése",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "A <code>#datetime(2020, 3, 20, 6, 0, 0)</code> <code>number</code> típusú értékének lekérése",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "Kérje le a <code>\"12.3%\"</code> <code>number</code> értékét.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "Számot hoz létre az általános szöveges formátumokból (\"15\", \"3423,10\", \"5,0E-10\").",
        "Documentation.LongDescription": "Egy <code>number</code> értéket ad vissza a <code>text</code> szöveges értékből.\r\n <ul>\r\n  <li><code>text</code>: Egy számérték szöveges megjelenítése. A megjelenítésnek általános számformátumban kell történnie. Például: „15”, „3,423.10”, „5.0E-10”.</li>\r\n  <li><code>culture</code>: Egy nem kötelező paraméter a kulturális környezetre vonatkozóan, amely szabályozza a <code>text</code> értelmezési módját (például, „en-US”).</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"4\"</code> számértékének előállítása",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Az <code>\"5.0e-10\"</code> számértékének előállítása",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "Azt jelzi, hogy az érték páros-e.",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>number</code> érték páros-e: ha páros, <code>true</code> értéket ad vissza, egyéb esetben <code>false</code> értéket.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Annak ellenőrzése, hogy a 625 páros szám-e",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "Annak ellenőrzése, hogy a 82 páros szám-e",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "Azt jelzi, hogy az érték számtól eltérő érték-e (NaN).",
        "Documentation.LongDescription": "Azt jelzi, hogy az érték számtól eltérő érték-e (NaN). Ha a(z) <code>number</code> egyenlő az <code>Number.IsNaN</code> értékkel, <code>true</code> értéket ad vissza, egyéb esetben pedig <code>false</code> értéket ad vissza.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Annak ellenőrzése, hogy a 0 osztása 0-val NaN értéket eredményez-e",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "Annak ellenőrzése, hogy az 1 osztása 0-val NaN értéket eredményez-e",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "Azt jelzi, hogy az érték páratlan-e.",
        "Documentation.LongDescription": "Azt jelzi, hogy az érték páratlan-e. Ha a(z) <code>number</code> páratlan szám, <code>true</code> értéket ad vissza, egyéb esetben pedig <code>false</code> értéket ad vissza.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Annak ellenőrzése, hogy a 625 páratlan szám-e",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "Annak ellenőrzése, hogy a 82 páratlan szám-e",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "A szám természetes alapú logaritmusát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>number</code> szám természetes algoritmusát adja vissza. Ha a(z) <code>number</code> értéke null, akkor a <code>Number.Ln</code> null értéket ad vissza.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A 15 természetes alapú logaritmusának kiszámítása",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "A szám megadott alapú logaritmusát adja vissza (az alapértelmezés az e).",
        "Documentation.LongDescription": "A(z) <code>number</code> szám megadott <code>base</code> alapú logaritmusát adja vissza. Ha a(z) <code>base</code> nincs megadva, az alapértelmezett érték Number.E. \r\n    Ha a(z) <code>number</code> érték null, a <code>Number.Log</code> függvény null értéket ad vissza.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A 2-es szám 10-es alapú logaritmusának lekérése.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "A 2-es szám „e” alapú logaritmusának lekérése.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "A szám 10-es alapú logaritmusát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>number</code> szám 10-es alapú logaritmusát adja vissza. Ha a(z) <code>number</code> érték null, a <code>Number.Log10</code> függvény null értéket ad vissza.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A 2-es szám 10-es alapú logaritmusának lekérése.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "A kerekített számot adja vissza. A számjegyek száma és a kerekítési mód beállítható.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>number</code> legközelebbi kerekítési eredményét. Ha <code>number</code> null, a <code>Number.Round</code> null értéket ad vissza.<br>\r\n      <br>\r\n      Alapértelmezés szerint a rendszer a(z) <code>number</code> legközelebbi egész számú kerekített értékét veszi, és a nem egyértelmű kerekítési helyzeteket a legközelebbi páros számra való kerekítéssel oldja fel (a <code>RoundingMode.ToEven</code>, vagyis az ún. „banki/bankári kerekítés“ használatával).<br>\r\n      <br>\r\n      Azonban ezek az alapértékek felülírhatók a következő választható paraméterekkel.\r\n      <ul>\r\n        <li><code>digits</code>: Hatására a rendszer a(z) <code>number</code> értékét a megadott számú tizedesjegyre kerekítve adja vissza.</li>\r\n        <li><code>roundingMode</code>: Felülírja az alapértelmezett döntetlen döntési viselkedést, ha <code>number</code> két potenciális kerekített érték közötti középpontban van\r\n       (a lehetséges értékekért lásd: <code>RoundingMode.Type</code>).</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Az 1,234 szám kerekítése a legközelebbi egész számra",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "Az 1,56 szám kerekítése a legközelebbi egész számra",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "Az 1,2345 szám kerekítése két tizedesjegyre",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "Az 1,2345 szám kerekítése három tizedesjegyre (felfelé kerekítés)",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "Az 1,2345 szám kerekítése három tizedesjegyre (lefelé kerekítés)",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "A pozitív számok felfelé kerekítésének, illetve a negatív számok lefelé kerekítésének eredményét adja vissza. A számjegyek száma megadható.",
        "Documentation.LongDescription": "A(z) <code>number</code> szám előjeltől függő kerekítésének eredményét adja vissza. Ez a függvény felfelé kerekíti a pozitív számokat, és lefelé kerekíti a negatív számokat.\r\n    Ha meg van adva a(z) <code>digits</code> érték, a(z) <code>number</code> szám <code>digits</code> tizedesjegyre lesz kerekítve.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "A -1,2 szám nullától távolodó irányba való kerekítése",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "Az 1,2 szám nullától távolodó irányba való kerekítése",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "A -1,234 kerekítése két tizedesjegyre a nullától távolodó irányban.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "Az előző legnagyobb számot adja vissza. A számjegyek száma megadható.",
        "Documentation.LongDescription": "A(z) <code>number</code> szám következő legnagyobb egész számra való lefelé kerekítésének eredményét adja vissza. Ha a(z) <code>number</code> értéke null, a függvény null értéket ad vissza.\r\n\r\nHa meg van adva a(z) <code>digits</code> érték, <code>number</code> a megadott számú tizedesjegyre lesz kerekítve.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Az 1,234 szám lefelé kerekítése a legközelebbi egész számra",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "Az 1,999 szám lefelé kerekítése a legközelebbi egész számra",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "Az 1,999 lefelé kerekítése két tizedesjegyre.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "A pozitív számok lefelé kerekítésének, illetve a negatív számok felfelé kerekítésének eredményét adja vissza. A számjegyek száma megadható.",
        "Documentation.LongDescription": "A(z) <code>number</code> szám előjeltől függő kerekítésének eredményét adja vissza. Ez a függvény lefelé kerekíti a pozitív számokat, és felfelé kerekíti a negatív számokat.\r\n    Ha meg van adva a(z) <code>digits</code> érték, a(z) <code>number</code> szám <code>digits</code> tizedesjegyre lesz kerekítve.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "A -1,2 szám nullához közeledő irányba való kerekítése",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "Az 1,2 szám nullához közeledő irányba való kerekítése",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "A -1,234 kerekítése két tizedesjegyre a nullához közeledő irányban.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "A következő legnagyobb számot adja vissza. A számjegyek száma megadható.",
        "Documentation.LongDescription": "A(z) <code>number</code> szám következő legnagyobb egész számra való felfelé kerekítésének eredményét adja vissza. Ha a(z) <code>number</code> értéke null, a függvény null értéket ad vissza.\r\n    Ha meg van adva a(z) <code>digits</code> érték, <code>number</code> a megadott számú tizedesjegyre lesz kerekítve.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Az 1,234 szám felfelé kerekítése a legközelebbi egész számra",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "Az 1,999 szám felfelé kerekítése a legközelebbi egész számra",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "Az 1,2345 felfelé kerekítése két tizedesjegyre.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "1 értéket ad vissza, ha a szám pozitív, -1 értéket, ha negatív, nulla esetén pedig 0-t.",
        "Documentation.LongDescription": "1 értéket ad vissza, ha a(z) <code>number</code> pozitív szám, –1 értéket, ha negatív szám, nulla esetén pedig 0-t.\r\n    Ha a(z) <code>number</code> érték null, a <code>Number.Sign</code> függvény nullértéket ad vissza.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A 182 előjelének megállapítása",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "A -182 előjelének megállapítása",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "A 0 előjelének megállapítása",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "Visszaadja a szám szinuszát.",
        "Documentation.LongDescription": "A(z) <code>number</code> szinuszát adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "A 0 radiános szög szinuszának meghatározása",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "Visszaadja a szám szinusz hiperbolikuszát.",
        "Documentation.LongDescription": "A(z) <code>number</code> szinusz hiperbolikuszát adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "A szám négyzetgyökét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>number</code> négyzetgyökét adja vissza. \r\n    Ha a(z) <code>number</code> érték null, a <code>Number.Sqrt</code> függvény nullértéket ad vissza. Ha az érték negatív, a függvény <code>Number.NaN</code> (nem szám) értéket ad vissza.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "A 625 szám négyzetgyökének meghatározása",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "A 85 szám négyzetgyökének meghatározása",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "Visszaadja a szám tangensét.",
        "Documentation.LongDescription": "A(z) <code>number</code> tangensét adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Az 1 radiános szög tangensének meghatározása",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "Visszaadja a szám tangens hiperbolikuszát.",
        "Documentation.LongDescription": "A(z) <code>number</code> tangens hiperbolikuszát adja vissza.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "Szöveggé alakítja a megadott számot.",
        "Documentation.LongDescription": "Átalakítja a(z) <code>number</code> számértéket a(z) <code>format</code><br>\r által megadott formátumú szöveges értékké\n    <br>\r\n    A formátum egy szöveges érték, amely a szám konvertálásának módját jelzi. A támogatott formátumértékekkel kapcsolatos további részletekért látogasson el a https://go.microsoft.com/fwlink/?linkid=2241210 és a https://go.microsoft.com/fwlink/?linkid=2240884.<br> webhelyre\r\n    <br>\r\n   Opcionális <code>culture</code> is megadható (például „en-US“) a(z) <code>format</code> kulturális környezettől függő viselkedésének szabályozásához.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Szám átalakítása szöveggé formátum megadása nélkül.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "Szám átalakítása exponenciális formátumra.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "Szám átalakítása csak egy tizedeshelyet tartalmazó százalékos formátumra.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "Egy OData-szolgáltatás által kínált OData-adatcsatornákat tartalmazó táblát ad vissza.",
        "Documentation.LongDescription": "Egy <code>serviceUri</code> URI-ról (<code>headers</code> fejléc) származó OData-szolgáltatás által kínált OData-csatornák tábláját adja vissza. Egy logikai érték, amellyel beállítható a párhuzamos kapcsolatok vagy egy választható rekordparaméter használata, a(z) <code>options</code> megadásával a következő beállítások adhatók meg:\r\n    <ul>\r\n    <li><code>Query</code>: Lekérdezésparaméterek szoftveres hozzáadása az URL-címhez escape-karaktersorozat használata nélkül.</li>\r\n    <li> <code>Headers</code>: Az érték rekordként való meghatározásával további fejlécek adhatók hozzá egy HTTP-kéréshez.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: Az érték listaként való megadásával a rendszer nem veszi figyelembe a HTTP-fejléckulcsokat a gyorsítótárazott adatok számításainál.</li>\r\n    <li> <code>ApiKeyName</code>: Ha a célhely egy API-kulcsot használ, ezzel a paraméterrel adható meg a kulcsparaméter neve (nem pedig az értéke), amelyet az URL-címben kell használni. A kulcs tényleges értéke a hitelesítő adatokban jelenik meg.</li>\r\n    <li> <code>Timeout</code>: Az érték időtartamként való megadásával módosítható a HTTP-kérés időkorlátja. Az alapértelmezett érték 600 másodperc.</li>\r\n    <li> <code>EnableBatch</code>: Egy logikai (igaz/hamis) érték, amely megadja, hogy létrejöjjön-e egy OData $kötegelt kérelem a MaxUriLength túllépésekor (az alapértelmezett érték a hamis).</li>\r\n    <li> <code>MaxUriLength</code>: Az OData-szolgáltatásnak elküldött engedélyezett URI maximális hosszát jelző szám. Ha a hossz meghaladja a korlátot, és az EnableBatch beállítása igaz, a kérelmet egy OData $kötegvégpontra küldi a rendszer, egyéb esetben a kérelem meghiúsul (az alapértelmezett érték 2048).</li>\r\n    <li> <code>Concurrent</code>: Egy logikai (igaz/hamis) érték, amelynek igaz értéke esetén a szolgáltatásra irányuló kérelmek párhuzamosan jönnek létre. Ha az érték hamis, a kérelmek egymás után jönnek létre. Ha nincs megadva, az értéket a szolgáltatás AsynchronousRequestsSupported megjegyzése határozza meg. Ha a szolgáltatás nem adja meg, hogy az AsynchronousRequestsSupported támogatott-e, a kérelmek egymás után jönnek létre.</li>\r\n    <li> <code>ODataVersion</code>: Egy szám (3 vagy 4), amely az OData-szolgáltatáshoz használatos OData-protokollverziót adja meg. Ha nincs megadva, az összes támogatott verziót kérelmezi a rendszer. A szolgáltatás verzióját a szolgáltatás által visszaadott OData-verziófejléc határozza meg.</li>\r\n    <li> <code>FunctionOverloads</code>: Egy logikai (igaz/hamis) érték, amelynek igaz beállítása esetén a függvényimportálási túlterhelések külön bejegyzésekként, hamis beállítása esetén pedig egy Union függvényként jelennek meg a kezelőben. A V3 alapértelmezett értéke: hamis. A V4 alapértelmezett értéke: igaz.</li>\r\n    <li> <code>MoreColumns</code>: Egy logikai (igaz/hamis) érték, amely igaz beállítása esetén egy Több oszlop nevű oszlopot ad hozzá minden nyitott és polimorf típust tartalmazó entitáscsatornához. Az oszlop az alaptípusban nem deklarált mezőket is tartalmazza. Ha az érték hamis, ez a mező nem jelenik meg. Az alapértelmezett érték a hamis.</li>\r\n    <li> <code>IncludeAnnotations</code>: A felvenni kívánt, névtérrel minősített kifejezésnevek vagy minták vesszővel tagolt listája, amelyekben a * helyettesítő karakter használható. Alapértelmezés szerint egyetlen jegyzet sincs felvéve.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code>: A metaadat-dokumentumok kérésekor felvenni kívánt, névtérrel minősített kifejezésnevek vagy minták vesszővel tagolt listája, amelyekben a * helyettesítő karakter használható. Alapértelmezés szerint ugyanazok a jegyzetek vannak felvéve, mint az IncludeAnnotations esetében.</li>\r\n    <li> <code>OmitValues</code>: Engedélyezi, hogy az OData-szolgáltatás a válaszokban bizonyos értékeket ne írjon ki. Ha a szolgáltatás nyugtázza, ezek az értékek a kihagyott mezőkből lesznek kikövetkeztetve. Az elérhető lehetőségek a következők:\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code> : Engedélyezi, hogy az OData-szolgáltatás kihagyja a null értékeket.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Implementation</code> : Az OData-összekötő használni kívánt megvalósítását adja meg. Az érvényes értékek a 2.0 és a null.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Csatlakozás a TripPin OData szolgáltatáshoz.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "Egy ODBC-illesztőprogram SQL-képességeinek kikövetkeztetésére tett kísérlet eredményét adja vissza.",
        "Documentation.LongDescription": "Az SQL-képességek <code>connectionString</code> kapcsolati sztringgel és ODBC-vel való kikövetkeztetésére tett kísérlet eredményét adja vissza. A(z) <code>connectionString</code> lehet szöveg vagy tulajdonságérték-párokból álló rekord. A tulajdonságértékek szövegesek vagy számok lehetnek.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Egy kapcsolati sztring kikövetkeztetett SQL-képességeit küldi vissza.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "A Parquet-dokumentum tartalmát adja vissza táblaként.",
        "Documentation.LongDescription": "A Parquet-dokumentum tartalmát adja vissza táblázatként. A lehetőségek a következők:\n    <ul>\n    <li> <code>TypeMapping</code>: A fájlok olvasása és írása során az alapértelmezett típusleképezést szabályozó szöveges érték. Az alapértelmezett érték null, és a lehető legtöbb hűséget próbálja megőrizni az eredeti típushoz. Az Sql érték adja az Sql Server-rel leginkább kompatibilis eredményeket.</li>\n    </ul>",
        "Documentation.Category": "Adatok elérése",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Adatok elérése",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "Százalékos értéket ad vissza az adott elemből.",
        "Documentation.LongDescription": "Egy <code>percentage</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Percentage.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> <code>text</code> értékű egy záró százalék szimbólummal, akkor a konvertált tizedes tört számot adja vissza. Máskülönben a <code>Number.From</code> függvény használatával <code>number</code> értékre konvertálja. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Kérje le a <code>\"12.3%\"</code> <code>percentage</code> értékét.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "Az RData fájlból származó adatkeretek bejegyzését adja vissza.",
        "Documentation.LongDescription": "Az RData fájlból származó adatkeretek bejegyzését adja vissza.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "Összevonja a rekordokat a megadott listán.",
        "Documentation.LongDescription": "Összevonja a rekordokat a megadott <code>records</code> listán. Ha a(z) <code>records</code> rekordtól eltérő értékeket tartalmaz, a függvény hibát ad vissza.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Létrehoz egy összevont rekordot a rekordokból.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "A rekord mezőinek számát adja vissza.",
        "Documentation.LongDescription": "A(z) <code>record</code> rekord mezőinek számát adja vissza.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a rekordban levő mezők számát.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "A mezők nevét adja vissza.",
        "Documentation.LongDescription": "A(z) <code>record</code> rekord mezőinek nevét adja vissza szövegként.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a rekordban levő mezők nevét.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "A mezőértékek listáját adja vissza.",
        "Documentation.LongDescription": "A(z) <code>record</code> rekordban levő mezőértékek listáját adja vissza.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a rekordban levő mezők értékét.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "Létrehoz egy rekordot egy {[Name = name, Value = value]} alakú táblából.",
        "Documentation.LongDescription": "Egy rekordot ad vissza rekordok <code>table</code> táblából, amely mezőneveket és értékneveket tartalmaz <code>{[Name = name, Value = value]}</code> alakban. A függvény kivételt vált ki, ha a mezőnevek nem egyediek.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Létrehoz egy rekordot a Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}) alakú táblából.",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "A bemeneti rekord mezőértékeit tartalmazó értéklistát ad vissza.",
        "Documentation.LongDescription": "A bemeneti <code>record</code> mezőértékeit tartalmazó értéklistát ad vissza.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "A mezőértékek kigyűjtése egy rekordból",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "Egy olyan absztrakt szintaxisfát (AST) ad vissza, amely egy oszlophoz való hozzáférést jelöli egy sorkifejezésen belül.",
        "Documentation.LongDescription": "Egy olyan absztrakt szintaxisfát ad vissza, amely a(z) <code>columnName</code> oszlophoz való hozzáférést jelöli egy sorkifejezésen belül.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Létrehoz egy, a „CustomerName” oszlophoz való hozzáférést jelölő AST-t.",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "Egy függvény törzséhez tartozó absztrakt szintaxisfát (AST) adja vissza.",
        "Documentation.LongDescription": "<p>A(z) <code>function</code> törzséhez tartozó absztrakt szintaxisfát (AST) adja vissza <i>sorkifejezésbe</i> normalizálva:\r\n<ul>\r\n  <li>A függvény csak 1 argumentumos lambda lehet.</li>\r\n  <li>A függvényparaméterre mutató összes hivatkozás helyére a <code>RowExpression.Row</code> kerül.</li>\r\n  <li>Minden oszlopra mutató hivatkozás helyére a <code>RowExpression.Column(<i>columnName</i>)</code> kerül.</li>\r\n  <li>Az AST-t a rendszer egyszerűsíti, hogy csak a következő típusú csomópontokat tartalmazza:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Akkor jelentkezik hiba, ha nem sikerül egy sorkifejezés AST-jét visszaadni a(z) <code>function</code> törzséhez.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Az <code>each [CustomerID] = \"ALFKI\"</code> függvény törzséhez tartozó AST-t adja vissza.",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "A megadott érték átalakítása egyszeres pontosságú számmá.",
        "Documentation.LongDescription": "Egy single <code>number</code> értéket ad vissza a megadott <code>value</code> értékből. Ha a megadott <code>value</code> <code>null</code>, a <code>Single.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> egy <code>number</code> a single számok tartományában, <code>value</code> értéket ad vissza, más esetben hibát jelez. Ha <code>value</code> bármilyen más típusba tartozik,előbb a <code>Number.FromText</code> függvénnyel alakítja át <code>number</code> típusú értékre. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"1.5\"</code> egyszeres <code>number</code> típusú értékének előállítása.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "A Smartsheet-indexvégpont adatainak tábláját adja vissza.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "Hívást küld a Smartsheet 2.0 REST API-ra a megadott végponton, és táblává alakítja a visszaadott adatelemet.",
        "Documentation.Examples": [
          {
            "Description": "Lekéri a felhasználók információit tartalmazó táblát a Smartsheet API-tól",
            "Code": "Smartsheet.Content(\"users\")",
            "Result": "A Smartsheet API által visszaadott felhasználói információk táblája"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott elválasztók bármelyikénél.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott elválasztók bármelyikénél.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása vesszővel vagy pontosvesszővel, az idézőjelek és az idézőjeles határolójelek figyelmen kívül hagyásával, valamint a bemenet elejétől kezdve.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "A bemenet felosztása vesszővel vagy pontosvesszővel, az idézőjelek és az idézőjeles határolójelek figyelmen kívül hagyásával, valamint a bemenet végétől kezdve.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott elválasztó figyelembevételével.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott elválasztó figyelembevételével.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása vesszővel, az idézőjelek közötti vesszők figyelmen kívül hagyásával.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott elválasztók mindegyikénél, az elválasztók megadott sorrendjében.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott elválasztók mindegyikénél, az elválasztók megadott sorrendjében.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása vesszővel, majd pontosvesszővel, a bemenet elejétől kezdve.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "A bemenet felosztása vesszővel, majd pontosvesszővel és az idézőjelek bármely más karakterhez hasonló kezelése, a bemenet végétől kezdve.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott hosszak mindegyikének figyelembevételével.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott hosszak mindegyikének figyelembevételével.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása az első két karakterre, majd az ezt követő három karakterre a bemenet elejétől kezdve.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "A bemenet felosztása az első három, majd az ezt követő kettő karakterre a bemenet végétől kezdve.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott pozíciók mindegyikénél.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott pozíciók mindegyikénél.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása a megadott pozíciókban, a bemenet elejétől kezdve.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "A bemenet felosztása a megadott pozíciókban, a bemenet végétől kezdve.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott eltolások és hosszak figyelembevételével.",
        "Documentation.LongDescription": "Olyan függvényt ad vissza, amely egy szöveglistára osztja fel a szöveget a megadott eltolások és hosszúságok alapján. A null hosszúságérték azt jelzi, hogy az összes fennmaradó bemenetet bele kell foglalni.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet felosztása a megadott pozíció- és hosszpárokkal, a bemenet elejétől kezdve. Ebben a példában a tartományok átfedik egymást.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "A bemenet felosztása a megadott pozíció- és hosszpárokkal, a bemenet végétől kezdve.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "Ossza fel a bemenetet egy fix hosszúságú irányítószámra, amelyet egy változó hosszúságú városnév követ.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott hossz ismételt alkalmazásával.",
        "Documentation.LongDescription": "Egy olyan függvényt ad vissza, amely felosztja a szöveget egy szöveges értékekből álló listára a megadott hossz ismételt alkalmazásával.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "A bemenet ismételt felosztása három karakterből álló adattömbökre, a bemenet elejétől kezdve.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "A bemenet ismételt felosztása három karakterből álló adattömbökre, a bemenet végétől kezdve.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "Visszaadja a táblában található sorok hozzávetőleges számát.",
        "Documentation.LongDescription": "A(z) <code>table</code> sorainak hozzávetőleges számát adja vissza, vagy hibát, ha az adatforrás nem támogatja a közelítést.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "A település és az állam különböző kombinációinak becslése egy nagy táblában, amely számosságbecslésként használható az oszlopokhoz. A számosságbecslések elég fontosak ahhoz, hogy a különböző adatforrások (például SQL Server) támogatják ezt a konkrét közelítést, gyakran a HyperLogLog nevű algoritmust használva.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "Visszaadja a táblában található oszlopok számát.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>table</code> táblában található oszlopok számát.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a táblában levő oszlopok számát.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "Listaként adja vissza az oszlopok neveit.",
        "Documentation.LongDescription": "Szöveges listaként adja vissza a(z) <code>table</code> tábla oszlopneveit.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a tábla oszlopneveit.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "Az első sort vagy egy adott alapértelmezett értéket ad vissza.",
        "Documentation.LongDescription": "A(z) <code>table</code> tábla első sorát adja vissza, vagy egy nem kötelező alapértéket (<code>default</code>), ha a tábla üres.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a tábla első sorát.",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "A(z) <code>({})</code> tábla első sorának, vagy ha üres, [a = 0, b = 0] értéknek a visszaadása.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "A tábla első sorának első oszlopát adja vissza vagy egy meghatározott alapértelmezett értéket.",
        "Documentation.LongDescription": "A(z) <code>table</code> tábla első sorának első oszlopát adja vissza vagy egy meghatározott alapértelmezett értéket.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "Azt jelzi, hogy a tábla csak különböző sorokat tartalmaz-e (nincsenek-e ismétlődések).",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>table</code> tábla csak különböző sorokat tartalmaz-e (nincsenek-e ismétlődések). <code>true</code> értéket ad vissza, ha a sorok különbözőek, egyébként <code>false</code> értéket ad.\r\n    A választható <code>comparisonCriteria</code> paraméter határozza meg, hogy a tábla mely soraiban ellenőrizze az ismétlődést. Ha a(z) <code>comparisonCriteria</code> nincs megadva, az összes oszlopot ellenőrzi.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a tábla eltér-e.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "Megállapítja, hogy a tábla eltér-e oszlopok tekintetében.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "Azt jelzi, hogy a tábla tartalmaz-e sorokat.",
        "Documentation.LongDescription": "Azt jelzi, hogy a(z) <code>table</code> tábla tartalmaz-e sorokat. <code>true</code> értéket ad vissza, ha nincsenek sorok (pl. üres a tábla), egyébként <code>false</code> értéket ad.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy a tábla üres-e.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "Annak megállapítása, hogy üres-e a(z) <code>({})</code> tábla.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "A megadott táblázat kulcsait adja vissza.",
        "Documentation.LongDescription": "A megadott táblázat kulcsait adja vissza.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Táblázathoz tartozó kulcsok listájának beolvasása.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "Az utolsó sort vagy egy adott alapértelmezett értéket ad vissza.",
        "Documentation.LongDescription": "A(z) <code>table</code> tábla utolsó sorát adja vissza, vagy egy nem kötelező alapértéket (<code>default</code>), ha a tábla üres.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Megkeresi a tábla utolsó sorát.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "A(z) <code>({})</code> tábla utolsó sorának, vagy ha üres, [a = 0, b = 0] értéknek a visszaadása.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "Visszaadja a táblában található sorok számát.",
        "Documentation.LongDescription": "Visszaadja a(z) <code>table</code> táblában található sorok számát.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja a sorok számát a táblában.",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "Visszaadja a tábla egyetlen sorát.",
        "Documentation.LongDescription": "Visszaadja az egyetlen sort az egysoros <code>table</code> táblából. Ha a(z) <code>table</code> tábla egynél több sort tartalmaz, kivételhiba fordul elő.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Egy sort ad vissza a táblában.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "Létrehoz egy listát, amely egy tábla oszlopértékeinek beágyazott listáit tartalmazza.",
        "Documentation.LongDescription": "Létrehozza a(z) <code>table</code> tábla beágyazott listáinak listáját. Mindegyik listaelem egy-egy belső lista, amely az oszlopértékeket tartalmazza.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Listát hoz létre a tábla oszlopértékeiből.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "Listára alakít át egy táblát úgy, hogy alkalmazza a megadott egyesítő függvényt a tábla összes értéksorára.",
        "Documentation.LongDescription": "Listára alakít át egy táblát úgy, hogy alkalmazza a megadott egyesítő függvényt a tábla összes értéksorára.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Egyesítse vesszővel az egyes sorok szövegét.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "Rekordok listájára alakítja át a táblákat.",
        "Documentation.LongDescription": "Rekordok listájára alakítja át a(z) <code>table</code> táblát.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Rekordok listájára alakítja át a táblát.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "Létrehoz egy listát, amely egy tábla sorértékeinek beágyazott listáit tartalmazza.",
        "Documentation.LongDescription": "Létrehozza a(z) <code>table</code> tábla beágyazott listáinak listáját. Mindegyik listaelem egy-egy belső lista, amely a sorértékeket tartalmazza.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Listát hoz létre a tábla sorértékeiből.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "Módosított hibarekordot hoz létre, amely nem indít tartalékot, ha egy nézeten definiált kezelő váltja ki (a Table.View-n keresztül).",
        "Documentation.LongDescription": "Módosított hibarekordot hoz létre a(z) <code>errorRecord</code> elemből, amely nem indít tartalékot, ha egy nézeten definiált kezelő váltja ki (a Table.View-n keresztül).",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "Olyan függvényt hoz létre, amelyet elfoghat egy nézeten (a Table.View-n keresztül) meghatározott kezelő.",
        "Documentation.LongDescription": "<p>Egy <code>function</code>-alapú nézetfüggvényt hoz létre, amelyet a <code>Table.View</code> által létrehozott nézetben lehet kezelni.</p>\r\n<p>A <code>Table.View</code> <code>OnInvoke</code> kezelőjével lehet meghatározni a nézetfüggvény kezelőjét.</p>\r\n<p>Ugyanúgy, mint a beépített műveletek esetén, ha nincs meghatározva <code>OnInvoke</code> kezelő, vagy ha nem az kezeli a nézetfüggvényt, illetve ha a kezelő valamilyen hibát jelez, <code>function</code> jelenik meg a nézet tetején.</p>\r\n<p>A <code>Table.View</code> és az egyéni nézetfüggvények részletes ismertetését lásd a Power Query egyéni csatlakoztató dokumentációjában.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "Visszaadja a szöveges értéket, amelyből el van távolítva az összes vezérlőkarakter.",
        "Documentation.LongDescription": "Visszaad egy szöveges értéket, amelyből el van távolítva a(z) <code>text</code> összes vezérlőkaraktere.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Eltávolítja a sortöréseket és az egyéb vezérlőkaraktereket a szöveges értékekből.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "Egy szöveges értékké fűzi össze a szöveges értékek listáját.",
        "Documentation.LongDescription": "A szöveges értékek listájának (<code>texts</code>) egyetlen szöveges értékbe való kombinálásának eredményét adja vissza. A <code>texts</code> elemben található <code>null</code> értékek figyelmen kívül lesznek hagyva.\r\n    Megadható a végső kombinált szövegben használt opcionális <code>separator</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Összevonja a „Seattle” és a „WA” szöveges értéket.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "Összevonja a „Seattle” és a „WA” szöveges értéket úgy, hogy egy vesszőt és egy szóközt („, ”) használ elválasztóként.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "Kombinálja a „Seattle“, a <code>null</code> és a „WA“ értékeket vesszővel és szóközzel elválasztva. (Vegye figyelembe, hogy a(z) <code>null</code> figyelmen kívül van hagyva.)",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "Létrehoz egy szöveges értéket a megadott értékből.",
        "Documentation.LongDescription": "A <code>value</code> szöveges ábrázolását adja vissza. A <code>value</code> lehet <code>number</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>datetimezone</code>, <code>logical</code>, <code>duration</code> vagy <code>binary</code> érték.\r\n    Ha az adott érték null, a <code>Text.From</code> null értéket ad vissza. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Létrehoz egy szöveges értéket a 3 számból.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "Bináris formátumú adatokat szövegre dekódol.",
        "Documentation.LongDescription": "A(z) <code>binary</code> adatot bináris értékről szöveges értékre dekódolja a(z) <code>encoding</code> típus használatával.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "Kikövetkezteti a szövegben kódolt szám részletes számának típusát (Int64.Type, Double.Type stb.).",
        "Documentation.LongDescription": "Következtet a <code>text</code> részletes számtípusára (Int64.Type, Double.Type stb.). Hiba történik, ha a <code>text</code> nem számérték. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "Visszaadja a karakterek számát.",
        "Documentation.LongDescription": "A(z) <code>text</code> szövegben található karakterek számát adja vissza.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "Megállapítja, hogy hány karakter szerepel a „Hello World” szövegben.",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "Kisbetűssé alakítja az összes karaktert.",
        "Documentation.LongDescription": "A <code>text</code> értékben levő összes karakter kisbetűssé alakításával előállított eredményt adja vissza. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Kisbetűssé alakítja az „AbCd” karakterláncot.",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "Nagybetűre alakítja minden szó első betűjét.",
        "Documentation.LongDescription": "Visszaadja annak a műveletnek az eredményét, amely a <code>text</code> szöveges értékben nagybetűre alakítja át az összes szó első betűjét. Az összes többi betűt kisbetűként adja vissza. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Használja a <code>Text.Proper</code> függvényt egy egyszerű mondatnál.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "Megfordítja a megadott <code>text</code> elemet.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Az „123” szöveg megfordítása.",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "Bináris formában kódolja a szöveget.",
        "Documentation.LongDescription": "Bináris értékké kódolja a megadott <code>text</code> szöveges értéket a megadott <code>encoding</code> használatával.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "A megadott szöveges értékben szereplő karakteres értékek listáját adja vissza.",
        "Documentation.LongDescription": "A megadott <code>text</code> szöveges értékben szereplő karakteres értékek listáját adja vissza.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "A „Hello World” szövegben szereplő karakteres értékek listájának létrehozása",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "Eltávolítja az összes kezdő és záró szóközt.",
        "Documentation.LongDescription": "A(z) <code>text</code> szöveges értékből az összes kezdő és záró szóköz eltávolításával előállított eredményt adja vissza.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "A kezdő és záró szóközök eltávolítása a „     a b c d    ” szövegből",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "Eltávolítja az összes záró szóközt.",
        "Documentation.LongDescription": "A(z) <code>text</code> szöveges értékből az összes záró szóköz eltávolításával előállított eredményt adja vissza.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "A záró szóközök eltávolítása a „     a b c d    ” szövegből",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "Eltávolítja az összes kezdő szóközt.",
        "Documentation.LongDescription": "A(z) <code>text</code> szöveges értékből az összes kezdő szóköz eltávolításával előállított eredményt adja vissza.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "A kezdő szóközök eltávolítása a „     a b c d    ” szövegből",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "Nagybetűssé alakítja az összes karaktert.",
        "Documentation.LongDescription": "A <code>text</code> értékben levő összes karakter nagybetűssé alakításával előállított eredményt adja vissza. Egy nem kötelező <code>culture</code> is megadható (például „en-US”).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Az „aBcD” karakterlánc nagybetűssé alakítása",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "Az óra végét adja vissza.",
        "Documentation.LongDescription": "A következő által jelölt óra végét adja vissza a tört másodpercekkel együtt: <code>dateTime</code>. A rendszer megőrzi az időzónával kapcsolatos adatokat.\r\n      <ul>\r\n        <li><code>dateTime</code>: Egy <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték, amelyből az óra végének a számítása történik.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "A 2011. 05. 14., 17:00:00 által jelölt óra végének megállapítása",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "A 2011. 05. 17., 17:00:00 -7:00 által jelölt óra végének megállapítása",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "Időértéket hoz létre a megadott értékből.",
        "Documentation.LongDescription": "Egy <code>time</code> típusú értéket ad vissza a megadott <code>value</code> értékből. Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).\r\nHa a megadott <code>value</code> <code>null</code>, a <code>Time.From</code> függvény <code>null</code> értéket ad vissza. Ha a megadott <code>value</code> érték <code>time</code>, a visszaadott érték <code>value</code>. A következő típusú értékek konvertálhatók <code>time</code> értékre:\r\n      <ul>\r\n        <li><code>text</code>: Egy <code>time</code> érték szöveges alakból. További részletek: <code>Time.FromText</code>.</li>\r\n        <li><code>datetime</code>: A <code>value</code> idő összetevője.</li>\r\n        <li><code>datetimezone</code>: A <code>value</code> helyi datetime megfelelőjének idő összetevője.</li>\r\n        <li><code>number</code>: A <code>value</code> által kifejezett töredéknapok számának megfelelő <code>time</code> érték. Ha a <code>value</code> negatív, illetve nagyobb vagy egyenlő 1-gyel, a függvény hibát ad vissza.</li>\r\n      </ul>\r\nHa a <code>value</code> más típusú, a függvény hibát ad vissza.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "A <code>0.7575</code> érték konvertálása <code>time</code> értékre",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "A <code>#datetime(1899, 12, 30, 06, 45, 12)</code> érték konvertálása <code>time</code> értékre",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "Egy időértéket hoz létre helyi, univerzális és egyéni időformátumokból.",
        "Documentation.LongDescription": "Egy <code>time</code> típusú értéket hoz létre egy szöveges alakból (<code>text</code>). Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén az idő elemzése a legjobb lehetőség alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például a <code>\"tt\"</code> <code>\"AM\" or \"PM\"</code> lehet, míg az <code>\"ar-EG\"</code> esetén a <code>\"tt\"</code> <code>\"ص\" or \"م\"</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> értékű lenne.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"10:12:31am\"</code> érték konvertálása időértékre",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "Az <code>\"1012\"</code> érték konvertálása Idő értékre.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "A <code>\"10\"</code> érték konvertálása Idő értékre.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "Az óra összetevőt adja vissza.",
        "Documentation.LongDescription": "A megadott <code>time</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú <code>dateTime</code> érték óra összetevőjét adja vissza.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Az óra megállapítása a #datetime(2011, 12, 31, 9, 15, 36) értékből",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "A perc összetevőt adja vissza.",
        "Documentation.LongDescription": "A megadott <code>time</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú <code>dateTime</code> érték perc összetevőjét adja vissza.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "A perc megállapítása a #datetime(2011, 12, 31, 9, 15, 36) értékből",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "A másodperc összetevőt adja vissza.",
        "Documentation.LongDescription": "A megadott <code>time</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú <code>dateTime</code> érték másodperc összetevőjét adja vissza.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "A dátum/idő értékben szereplő másodpercérték megállapítása.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "Az óra kezdetét adja vissza.",
        "Documentation.LongDescription": "A következő által jelölt óra kezdetét adja vissza: <code>dateTime</code>.\r\n    A(z) <code>dateTime</code> csak <code>date</code>, <code>datetime</code> vagy <code>datetimezone</code> típusú érték lehet.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Az óra kezdetének megállapítása 2011. október 10., 8:10:32 esetén.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amely tartalmazza az időérték részeit.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amely tartalmazza a megadott <code>time</code> időérték részeit.\r\n <ul>\r\n        <li><code>time</code>: Egy <code>time</code> érték, amelyből a részeit tartalmazó rekord számítva lesz.</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "A <code>#time(11, 56, 2)</code> érték konvertálása egy olyan rekordra, amely tartalmazza az idő értékét",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "Az időértéket képviselő szöveges alakot adja vissza.",
        "Documentation.LongDescription": "A(z) <code>time</code> szöveges alakját adja vissza. Megadható egy nem kötelező <code>record</code> paraméter (<code>options</code>) további tulajdonságok megadásához. A(z) <code>culture</code> csak örökölt munkafolyamatok esetén használható. A <code>record</code> az alábbi mezőket tartalmazhatja:\r\n<ul>\r\n   <li><code>Format</code>: A használandó formátumot jelző <code>text</code> érték. További részletek: https://go.microsoft.com/fwlink/?linkid=2180104 és https://go.microsoft.com/fwlink/?linkid=2180105. A mező kihagyása vagy <code>null</code> érték megadása esetén a dátum formázása a <code>Culture</code> paraméter által meghatározott alapértelmezett érték alapján történik.</li>\r\n   <li><code>Culture</code>: Ha a <code>Format</code> nem null értékű, a <code>Culture</code> vezérel egyes formátummegadókat. Az <code>\"en-US\"</code> esetén például a <code>\"tt\"</code> <code>\"AM\" or \"PM\"</code> lehet, míg az <code>\"ar-EG\"</code> esetén a <code>\"tt\"</code> <code>\"ص\" or \"م\"</code> lehet. Ha a <code>Format</code> <code>null</code> értékű, a <code>Culture</code> paraméter vezérli a használandó alapértelmezett formátumot. Ha a <code>Culture</code> <code>null</code> értékű vagy ki lett hagyva, a <code>Culture.Current</code> paramétert használja a rendszer.</li>\r\n</ul>\r\nAz örökölt munkafolyamatok támogatásához a(z) <code>options</code> és a(z) <code>culture</code> szöveges érték is lehet. Ez ugyanazt a működést eredményezi, mintha a(z) <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> értékű lenne.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "A <code>#time(01, 30, 25)</code> konvertálása <code>text</code> értékre. <i>Az eredmény kimenete eltérő lehet az aktuális kulturális környezettől függően.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "Konvertálás egyéni formátummal és a német kulturális környezet használatával.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "Konvertálás szabványos időformátummal.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "A megadott rekordtípus zárt verziójának (vagy ha már zárt, akkor ugyanazon típus) visszaadása.",
        "Documentation.LongDescription": "A megadott <code>type</code> <code>record</code> típus zárt verziójának (vagy ha már zárt, akkor ugyanazon típus) visszaadása.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "A <code>type [ A = number,…]</code> típus zárt verziójának létrehozása.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "Egy típus aspektusait adja vissza.",
        "Documentation.LongDescription": "A(z) <code>type</code> aspektusait tartalmazó bejegyzést ad vissza.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "Egy function típus paramétereinek nevéből álló rekord visszaadása. A rekord mezőinek értéke a paraméterek típusával azonos.",
        "Documentation.LongDescription": "A(z) <code>type</code> paraméterben megadott függvény típusú konstrukció paramétereinek nevéből álló rekord visszaadása. A rekord mezőinek értéke a paraméterek típusával azonos.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Az <code>(x as number, y as text)</code> függvény paramétertípusainak megkeresése.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "Egy function típusú függvény meghívásához szükséges paraméterek minimális számának visszaadása.",
        "Documentation.LongDescription": "A függvény visszaadja a(z) <code>type</code> paraméterben megadott függvénytípus kötelező paramétereinek számát.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Az <code>(x as number, optional y as text)</code> függvény kötelező paraméterei számának megkeresése.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "Egy adott function típusú konstrukció visszatérési típusának visszaadása.",
        "Documentation.LongDescription": "A(z) <code>type</code> paraméterben megadott függvény visszatérési típusának visszaadása.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Az <code>() as any)</code> függvény visszatérési típusának megkeresése.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "Nullértéket támogató típus esetén true, nullmentes típus esetén pedig false érték visszaadása.",
        "Documentation.LongDescription": "A <code>nullable</code> jellegű típusok esetén <code>true</code>, nullmentes típusok esetén pedig <code>false</code> érték visszaadása.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "A <code>number</code> típus nullérték-támogatottságának meghatározása.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "A <code>type nullable number</code> típus nullérték-támogatottságának meghatározása.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "Rekordtípus nyitottságának meghatározása.",
        "Documentation.LongDescription": "A(z) <code>type</code> paraméterben megadott rekord nyitottságát jelző <code>logical</code> típusú érték visszaadása.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "A <code>type [ A = number, ...]</code> rekord nyitottságának meghatározása.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "Elemtípus visszaadása egy listatípusból.",
        "Documentation.LongDescription": "A(z) paraméterben megadott <code>type</code> lista elemtípusának visszaadása.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Elemtípus megkeresése a <code>{number}</code> listában.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "Egy adott típus nullmentes típusvariánsának visszaadása.",
        "Documentation.LongDescription": "A(z) <code>type</code> paraméterben megadott típus <code>nullable</code> típusmódosítótól megfosztott variánsának visszaadása.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "A <code>type nullable number</code> érték nullmentes típusvariánsának visszaadása.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "A megadott rekordtípus nyitott verziójának (vagy ha már nyitott, akkor ugyanazon típus) visszaadása.",
        "Documentation.LongDescription": "A megadott <code>type</code> <code>record</code> típus nyitott verziójának (vagy ha már nyitott, akkor ugyanazon típus) visszaadása.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "A <code>type [ A = number,…]</code> nyitott zárt verziójának létrehozása.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "Egy adott rekordtípus mezőit leíró rekord visszaadása. A visszaadott rekordtípus egyes mezői az eredeti típus mezőinek nevét és értékét tartalmazzák.",
        "Documentation.LongDescription": "A(z) <code>type</code> paraméterben megadott rekord mezőit leíró rekord visszaadása. A visszaadott rekordtípus egyes mezői az eredeti típus mezőinek nevét és értékét tartalmazzák, <code>[ Type = type, Optional = logical ]</code> formátumban.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Az <code>[ A = number, optional B = any]</code> rekordbeli mezők nevének és értékének megkeresése.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "A megadott táblatípushoz tartozó kulcsok esetlegesen üres listáját adja vissza.",
        "Documentation.LongDescription": "Az adott táblatípushoz tartozó kulcsok esetlegesen üres listáját adja vissza.<br>\r\n    <br>\r\n    Minden kulcs egy rekorddal van definiálva a következő formában:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: a kulcsot definiáló oszlopnevek listája\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code>, ha a kulcs a tábla elsődleges kulcsa; egyébként <code>false</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Táblatípus kulcsadatainak visszaadása.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "A táblatípus sortípusát adja vissza.",
        "Documentation.LongDescription": "A megadott táblatípus sortípusát adja vissza. Az eredmény mindig rekord típusú lesz.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Egy egyszerű tábla sortípus adatainak visszaadása.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "Típuslista uniójának visszaadása.",
        "Documentation.LongDescription": "A(z) <code>types</code> típusainak unióját adja vissza.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "Rekord lefordítása URI-lekérdezési sztringgé.",
        "Documentation.LongDescription": "A(z) <code>query</code> rekord lefordítása URI-lekérdezési sztringgé az escape-karakterek szükség szerinti figyelmen kívül hagyásával.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Különleges karaktereket is tartalmazó lekérdezési sztring kódolása.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "A különleges karaktereket az RFC 3986 szabványnak megfelelően kódolja.",
        "Documentation.LongDescription": "A(z) <code>data</code> bemenetben szereplő különleges karaktereket az RFC 3986 szabvány szabályainak megfelelően kódolja.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "A \"+money$\" kifejezésben szereplő különleges karakterek kódolása.",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "A bemeneti abszolút URI részeit adja vissza rekordként.",
        "Documentation.LongDescription": "A bemeneti <code>absoluteUri</code> részeit adja vissza rekordként, amely egyebek között Scheme, Host, Port, Path, Query, Fragment, UserName és Password értékeket tartalmaz.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "A „www.adventure-works.com” abszolút URI részeinek előállítása",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "Egy százalékjellel kódolt sztring dekódolása.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "Adja meg az Azure DevOps Analytics szolgáltatás URL-címét.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Az Azure DevOps Analytics szolgáltatás URL-címéről letöltött tartalmakat adja vissza bináris értékként. A függvény különböző vállalatokhoz különböző hitelesítő adatokat használ."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "Adja meg az Azure DevOps Analytics szolgáltatás URL-címét.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Az Azure DevOps Analytics szolgáltatás URL-címéről letöltött tartalmakat adja vissza bináris értékként. A függvény az elérhető vállalatokhoz globális hitelesítő adatokat használ."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "Alternatív lekérdezésterveket fejez ki.",
        "Documentation.LongDescription": "Alternatív lekérdezésterveket fejez ki a Value.Expression(Value.Optimize(...)) függvényből szerzett lekérdezésterv-kifejezésben. Más felhasználásra nem ajánlott.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "Egy, az érték kifejezését jelölő absztrakt szintaxisfát (AST) ad vissza.",
        "Documentation.LongDescription": "Egy, az érték kifejezését jelölő absztrakt szintaxisfát (AST) ad vissza",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "Létrehoz egy szigorú típusmeghatározású értéket egy szöveges alakból.",
        "Documentation.LongDescription": "Dekódol egy értéket a <code>text</code> szöveges alakból, és a megfelelő típusú értékként értelmezi azt.\r\n    A <code>Value.FromText</code> függvény szöveges értéket fogad, és számot, logikai értéket, null értéket, datetime értéket, időtartamértéket vagy szöveges értéket ad vissza. Az üres szöveges értéket null értékként értelmezi.\r\n    Egy nem kötelező <code>culture</code> is megadható (például, „en-US”).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "Egy olyan rekordot ad vissza, amely a bemeneti érték metaadatait tartalmazza.",
        "Documentation.LongDescription": "Egy olyan rekordot ad vissza, amely a bemeneti érték metaadatait tartalmazza.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "Jelzi a Value.Expression függvénynek, hogy egy értékhez az optimalizált kifejezést adja vissza.",
        "Documentation.LongDescription": "Ha a Value.Express függvényben történő használatkor a(z) <code>value</code> optimalizálható lekérdezést jelöl, ez a függvény jelzi, hogy az optimalizált kifejezést kell visszaadni. Egyéb esetben a(z) <code>value</code> elemnek nem lesz hatása.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "Eltávolítja a bemeneti érték metaadatait.",
        "Documentation.LongDescription": "Eltávolítja a bemeneti érték metaadatait.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "A megadott érték típusát adja vissza.",
        "Documentation.LongDescription": "A megadott érték típusát adja vissza.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.LongDescription": "Ez a függvény csak belső használatra szolgál.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "A megadott URL HTML-jét adja vissza egy webböngésző által megtekintett módon.",
        "Documentation.LongDescription": "Visszaadja a megadott <code>url</code> HTML-jét egy webböngészőben megjelenített formában. Egy választható rekordparaméterrel (<code>options</code>) további tulajdonságok is megadhatók. A rekord a következő mezőket tartalmazhatja:\r\n     <ul>\r\n        <li><code>ApiKeyName</code>: Ha a célhely API-kulcsot használ, ezzel a paraméterrel adható meg a kulcsparaméter neve (nem pedig az értéke), amelyet az URL-címben kell használni. A kulcs tényleges értéke a hitelesítő adatokban található.</li>\r\n        <li><code>WaitFor</code>: Megadja a várakozás feltételét a HTML letöltése előtt, valamint azt a feltételt, amely az oldal betöltésére vár (ami mindig megtörténik). Olyan rekord lehet, amely az időtúllépés és/vagy a szelektor mezőket tartalmazza. Ha csak a Timeout (időtúllépés) értéke van megadva, a függvény a megadott ideig vár a HTML-fájl letöltése előtt. Ha a Selector (szelektor) és a Timeout (időtúllépés) értékei is meg vannak adva, és a szelektor megléte előtt történik meg az időtúllépés, a rendszer hibát fog jelezni. Ha a szelektor értéke meg van adva időtúllépési érték nélkül, akkor a rendszer az alapértelmezett időtúllépési értéket használja, ami 30 másodperc.</li>\r\n      </ul>\r\n    ",
        "Documentation.Category": "Adatok elérése",
        "Documentation.Examples": [
          {
            "Description": "A https://microsoft.com HTML-jét adja vissza.",
            "Code": "Web.BrowserContents (\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "A https://microsoft.com HTML-jét adja vissza, miután kivárja egy CSS-szelektor megjelenését.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "A https://microsoft.com HTML-jét adja vissza 10 másodperc várakozás után.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "A https://microsoft.com HTML-jét adja vissza, miután legfeljebb tíz másodpercet vár egy CSS-szelektor megjelenésére.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "Az URL-címről letöltött tartalmat adja vissza bináris formában.",
        "Documentation.LongDescription": "A(z) <code>url</code> helyről letöltött tartalmat adja vissza binárisként. További tulajdonságok meghatározásához megadható egy nem kötelező rekordparaméter (<code>options</code>). A rekord a következő mezőket tartalmazhatja:\r\n <ul>\r\n<li><code>Query</code> : Lek&#233;rdez&#233;sparam&#233;terek szoftveres hozz&#225;ad&#225;sa az URL-c&#237;mhez escape-karaktersorozat haszn&#225;lata n&#233;lk&#252;l.</li>\r\n<li><code>ApiKeyName</code> : Ha a c&#233;lhely API-kulcsot haszn&#225;l, ezzel a param&#233;terrel adhat&#243; meg a kulcsparam&#233;ter neve (nem pedig az &#233;rt&#233;ke), amelyet az URL-c&#237;mben kell haszn&#225;lni. A kulcs t&#233;nyleges &#233;rt&#233;ke a hiteles&#237;tő adatokban tal&#225;lhat&#243;.</li>\r\n<li><code>Headers</code> : Az &#233;rt&#233;k rekordk&#233;nt val&#243; meghat&#225;roz&#225;s&#225;val tov&#225;bbi fejl&#233;cek adhat&#243;k hozz&#225; egy HTTP-k&#233;r&#233;shez.</li>\r\n<li><code>Timeout</code> : Az &#233;rt&#233;k időtartamk&#233;nt val&#243; megad&#225;sa m&#243;dos&#237;tja a HTTP-k&#233;r&#233;s időkorl&#225;tj&#225;t. Az alap&#233;rtelmezett &#233;rt&#233;k 100 m&#225;sodperc.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Ha ezen &#233;rt&#233;ket listak&#233;nt adja meg, kiz&#225;rja ezeket a HTTP-fejl&#233;ckulcsokat az adatok gyors&#237;t&#243;t&#225;raz&#225;s&#225;nak sz&#225;m&#237;t&#225;s&#225;b&#243;l.</li>\r\n<li><code>IsRetry</code> : Ha a logikai &#233;rt&#233;ket igazk&#233;nt adja meg, figyelmen k&#237;v&#252;l hagyja a gyors&#237;t&#243;t&#225;rban l&#233;vő megl&#233;vő v&#225;laszokat az adatok leh&#237;v&#225;sakor.</li>\r\n<li><code>ManualStatusHandling</code> : Ha az &#233;rt&#233;ket listak&#233;nt adja meg, megg&#225;tolja azon HTTP-k&#233;r&#233;sek be&#233;p&#237;tett kezel&#233;s&#233;t, amelyek v&#225;lasza ezen &#225;llapotk&#243;dok egyik&#233;t tartalmazza.</li>\r\n<li><code>RelativePath</code> : Ha az &#233;rt&#233;ket sz&#246;vegk&#233;nt hat&#225;rozza meg, az alap URL-hez fűzi azt a k&#233;r&#233;s elv&#233;gz&#233;se előtt.</li>\r\n<li><code>Content</code> : Az &#233;rt&#233;k megad&#225;sa a webes k&#233;r&#233;st GET k&#233;r&#233;sről POST k&#233;r&#233;sre m&#243;dos&#237;tja, a be&#225;ll&#237;t&#225;s &#233;rt&#233;k&#233;t haszn&#225;lva a POST tartalmak&#233;nt.</li>\r\n</ul>\r\n\r\n    A HTTP-kérés GET (ha nincs megadva tartalom) vagy POST (tartalom esetén) típusú is lehet. A POST-kérések csak névtelenül hajthatóak végre.\r\n    <br>\r\n    A HTTP-válasz fejlécei a bináris eredmény metaadataiként érhetők el. Az egyéni adatösszekötő környezetén kívül csak a válaszfejlécek egy részhalmaza érhető el (biztonsági okokból).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "<code>\"https://bing.com/search?q=Power+Query\"</code> tartalmának lekérése a RelativePath és a lekérdezési beállítások használatával. Ezekkel a beállításokkal dinamikusan lekérdezheti a statikus alap URL-címet.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "POST végrehajtása egy URL-címen, egy bináris JSON-adattartalom továbbításával és a válasz JSON-ként történő elemzésével.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "Csatlakozhat egy olyan biztonságos URL-címhez, amely elfogad hitelesítési kulcsot a lekérdezési sztringjeként. A titkos kulcs M-ben történő (biztonsági kockázatot jelentő) szoftveres kódolása helyett, \r\n    a kulcs biztonságosan megadható a nevének (nem pedig az értékének) az M-ben történő megadásával, a webes API-alapú hitelesítést választva, majd a kulcs értékét a webes API hitelesítő adatainak a részeként megadva.\r\n    Ilyen használat esetén a következő példa egy kérést hoz létre a következő számára: <code>\"https://contoso.com/api/customers/get?api_key=******\"</code>.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "Az URL-címről letöltött HTTP-fejléceket adja vissza rekordértékként.",
        "Documentation.LongDescription": "A(z) <code>url</code> helyről letöltött fejléceket adja vissza rekordként. További tulajdonságok meghatározásához megadható egy nem kötelező rekordparaméter (<code>options</code>). A rekord a következő mezőket tartalmazhatja:\r\n    <ul>\r\n<li><code>Query</code> : Lek&#233;rdez&#233;sparam&#233;terek szoftveres hozz&#225;ad&#225;sa az URL-c&#237;mhez escape-karaktersorozat haszn&#225;lata n&#233;lk&#252;l.</li>\r\n<li><code>ApiKeyName</code> : Ha a c&#233;lhely API-kulcsot haszn&#225;l, ezzel a param&#233;terrel adhat&#243; meg a kulcsparam&#233;ter neve (nem pedig az &#233;rt&#233;ke), amelyet az URL-c&#237;mben kell haszn&#225;lni. A kulcs t&#233;nyleges &#233;rt&#233;ke a hiteles&#237;tő adatokban tal&#225;lhat&#243;.</li>\r\n<li><code>Headers</code> : Az &#233;rt&#233;k rekordk&#233;nt val&#243; meghat&#225;roz&#225;s&#225;val tov&#225;bbi fejl&#233;cek adhat&#243;k hozz&#225; egy HTTP-k&#233;r&#233;shez.</li>\r\n<li><code>Timeout</code> : Az &#233;rt&#233;k időtartamk&#233;nt val&#243; megad&#225;sa m&#243;dos&#237;tja a HTTP-k&#233;r&#233;s időkorl&#225;tj&#225;t. Az alap&#233;rtelmezett &#233;rt&#233;k 100 m&#225;sodperc.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Ha ezen &#233;rt&#233;ket listak&#233;nt adja meg, kiz&#225;rja ezeket a HTTP-fejl&#233;ckulcsokat az adatok gyors&#237;t&#243;t&#225;raz&#225;s&#225;nak sz&#225;m&#237;t&#225;s&#225;b&#243;l.</li>\r\n<li><code>IsRetry</code> : Ha a logikai &#233;rt&#233;ket igazk&#233;nt adja meg, figyelmen k&#237;v&#252;l hagyja a gyors&#237;t&#243;t&#225;rban l&#233;vő megl&#233;vő v&#225;laszokat az adatok leh&#237;v&#225;sakor.</li>\r\n<li><code>ManualStatusHandling</code> : Ha az &#233;rt&#233;ket listak&#233;nt adja meg, megg&#225;tolja azon HTTP-k&#233;r&#233;sek be&#233;p&#237;tett kezel&#233;s&#233;t, amelyek v&#225;lasza ezen &#225;llapotk&#243;dok egyik&#233;t tartalmazza.</li>\r\n<li><code>RelativePath</code> : Ha az &#233;rt&#233;ket sz&#246;vegk&#233;nt hat&#225;rozza meg, az alap URL-hez fűzi azt a k&#233;r&#233;s elv&#233;gz&#233;se előtt.</li>\r\n</ul>\r\n\r\n    A HTTP-kérés a HEAD metódussal történik. Az egyéni adatösszekötő környezetén kívül csak a válaszfejlécek egy részhalmaza érhető el (biztonsági okokból).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "A <code>\"https://bing.com/search?q=Power+Query\"</code> HTTP-fejléceinek lekérése a RelativePath és a Query beállításokkal.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "Az engedélyezési környezet, amely alapján a rendszer kiértékeli a hozzáférés-vezérlő bejegyzés (access control entry, ACE) feltételét.",
        "Documentation.LongDescription": "Az engedélyezési környezet, amely alapján a rendszer kiértékeli a hozzáférés-vezérlő bejegyzés (access control entry, ACE) feltételét.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "Hozzáférés-vezérlő bejegyzések (ACE-k) táblázata",
        "Documentation.LongDescription": "Engedélyezési szabályokat jelölő hozzáférés-vezérlő bejegyzések (ACE-k) rendezett táblázata. Mindegyik sort az aktuális engedélyezési környezet alapján értékeli a rendszer (sorrendben), és az első olyan sor határozza meg az érvényes szabályt, amelyhez a <code>Condition</code> (Feltétel) kifejezés true (igaz) értéket ad vissza. Az <code>Action</code> (Művelet) oszlop azon művelettípust jelöli, amelyre a szabály érvényes. Az <code>AccessControlKind</code> oszlop határozza meg, hogy a művelethez engedélyezett vagy tiltott-e a hozzáférés.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "A hozzáférés-vezérlés típusát határozza meg.",
        "Documentation.LongDescription": "A hozzáférés-vezérlés típusát határozza meg.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "Az összes értéket jelölő típus",
        "Documentation.LongDescription": "Az összes értéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "Az összes bináris értéket jelölő típus",
        "Documentation.LongDescription": "Az összes bináris értéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "Meghatározza a bináris kódolás típusát.",
        "Documentation.LongDescription": "Meghatározza a bináris kódolás típusát.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "Meghatározza, hogy az elemnek hány alkalommal kell szerepelnie a csoportban.",
        "Documentation.LongDescription": "Meghatározza, hogy az elemnek hány alkalommal kell szerepelnie a csoportban.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "A végrehajtandó pufferelés típusát ismerteti.",
        "Documentation.LongDescription": "A végrehajtandó pufferelés típusát ismerteti.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "Az összes bájtot jelölő típus",
        "Documentation.LongDescription": "Az összes bájtot jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "A bájtsorrendet határozza meg.",
        "Documentation.LongDescription": "A bájtsorrendet határozza meg.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "Az összes karaktert jelölő típus",
        "Documentation.LongDescription": "Az összes karaktert jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "A tömörítés típusát határozza meg.",
        "Documentation.LongDescription": "A tömörítés típusát határozza meg.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Az idézőjelek CSV-dokumentumokban való figyelembe vételének módját adja meg.",
        "Documentation.LongDescription": "Az idézőjelek CSV-dokumentumokban való figyelembe vételének módját adja meg.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "A pénznemértéket jelölő típus.",
        "Documentation.LongDescription": "A pénznemértéket jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "Az összes dátumértéket jelölő típus",
        "Documentation.LongDescription": "Az összes dátumértéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "Az a típus, amely társított időzóna nélkül adja meg az összes dátum- és időértéket",
        "Documentation.LongDescription": "Az a típus, amely társított időzóna nélkül adja meg az összes dátum- és időértéket",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "Az a típus, amely egy időzónához képest adja meg az összes dátum- és időértéket",
        "Documentation.LongDescription": "Az a típus, amely egy időzónához képest adja meg az összes dátum- és időértéket",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "A hét egy napját határozza meg.",
        "Documentation.LongDescription": "A hét egy napját határozza meg.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "A fixpontos decimális típust jelző típus.",
        "Documentation.LongDescription": "A fixpontos decimális típust jelző típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "A dupla pontosságú lebegőpontos számot jelző típus.",
        "Documentation.LongDescription": "A dupla pontosságú lebegőpontos számot jelző típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "Az összes időtartamértéket jelölő típus",
        "Documentation.LongDescription": "Az összes időtartamértéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "Megadja az extra értékekkel kapcsolatos teendőt olyan sorok esetén, amely a vártnál több oszlopot tartalmaznak.",
        "Documentation.LongDescription": "Megadja az extra értékekkel kapcsolatos teendőt olyan sorok esetén, amely a vártnál több oszlopot tartalmaznak.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "Az összes függvényt jelölő típus",
        "Documentation.LongDescription": "Az összes függvényt jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "Meghatározza a csoportosítás jellegét.",
        "Documentation.LongDescription": "Ugyanazzal a kulcsértékkel több helyi csoport, de csak egyetlen globális csoport hozható létre.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "Egy GUID értéket jelölő típus.",
        "Documentation.LongDescription": "Egy GUID értéket jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "Az identitások felhasználót, csoportot, eszközt vagy más azonosítható dolgot jelölnek.",
        "Documentation.LongDescription": "Az identitások felhasználót, csoportot, eszközt vagy más azonosítható dolgot jelölnek.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "Az identitások létrehozásának és összehasonlításának hatókörét határozza meg.",
        "Documentation.LongDescription": "Az identitások létrehozásának és összehasonlításának hatókörét határozza meg.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "Az aláírt 16 bites egész számot jelölő típus.",
        "Documentation.LongDescription": "Az aláírt 16 bites egész számot jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "Az aláírt 32 bites egész számot jelölő típus.",
        "Documentation.LongDescription": "Az aláírt 32 bites egész számot jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "Az aláírt 64 bites egész számot jelölő típus.",
        "Documentation.LongDescription": "Az aláírt 64 bites egész számot jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "Az aláírt 8 bites egész számot jelölő típus.",
        "Documentation.LongDescription": "Az aláírt 8 bites egész számot jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "Meghatározza az illesztési műveletben használandó illesztési algoritmust.",
        "Documentation.LongDescription": "Meghatározza az illesztési műveletben használandó illesztési algoritmust.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "Meghatározza az illesztési művelet jellegét.",
        "Documentation.LongDescription": "Meghatározza az illesztési művelet jellegét.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "Egy összekapcsolás bal vagy jobb oldali tábláját adja meg.",
        "Documentation.LongDescription": "Egy összekapcsolás bal vagy jobb oldali tábláját adja meg.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "Az adatforrás esetében használt SQL-dialektus által támogatott korlátozási záradék típusát írja le.",
        "Documentation.LongDescription": "Az adatforrás esetében használt SQL-dialektus által támogatott korlátozási záradék típusát írja le.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "Az összes listát jelölő típus",
        "Documentation.LongDescription": "Az összes listát jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "Az összes logikai értéket jelölő típus",
        "Documentation.LongDescription": "Az összes logikai értéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "Meghatározza a hiányzó értékekkel kapcsolatos teendőt olyan sorok esetén, amely a vártnál kevesebb oszlopot tartalmaznak.",
        "Documentation.LongDescription": "Meghatározza a hiányzó értékekkel kapcsolatos teendőt olyan sorok esetén, amely a vártnál kevesebb oszlopot tartalmaznak.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "A null értéket jelölő típus",
        "Documentation.LongDescription": "A null értéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "Az összes számot jelölő típus",
        "Documentation.LongDescription": "Az összes számot jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "Megadja az OData-szolgáltatás által kihagyható értéktípusokat.",
        "Documentation.LongDescription": "Megadja az OData-szolgáltatás által kihagyható értéktípusokat.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "Egy elem előfordulását határozza meg egy sorozatban.",
        "Documentation.LongDescription": "Egy elem előfordulását határozza meg egy sorozatban.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "A rendezés irányát határozza meg.",
        "Documentation.LongDescription": "A rendezés irányát határozza meg.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "Szöveges jelszót jelölő típus.",
        "Documentation.LongDescription": "Szöveges jelszót jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "A százalékos értéket képviselő típus.",
        "Documentation.LongDescription": "A százalékos értéket képviselő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "A percentilis mód típusát határozza meg.",
        "Documentation.LongDescription": "A percentilis mód típusát határozza meg.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "Az összehasonlítás pontosságát határozza meg.",
        "Documentation.LongDescription": "Az összehasonlítás pontosságát határozza meg.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "Az idézetstílust határozza meg.",
        "Documentation.LongDescription": "Az idézetstílust határozza meg.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "Meghatározza a rangsorolás típusát.",
        "Documentation.LongDescription": "Meghatározza a rangsorolás típusát.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "Az összes rekordot jelölő típus",
        "Documentation.LongDescription": "Az összes rekordot jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "Azt jelöli, hogy az indexelés a bevitel elejétől vagy végétől történjen-e.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "Meghatározza a kerekítés irányát, ha a lehetséges kerekítési célszámok között nem lehet dönteni.",
        "Documentation.LongDescription": "Meghatározza a kerekítés irányát, ha a lehetséges kerekítési célszámok között nem lehet dönteni.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "Érvényes beállítások az SAP Business Warehouse végrehajtási mód beállításához.",
        "Documentation.LongDescription": "Érvényes beállítások az SAP Business Warehouse végrehajtási mód beállításához.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "Érvényes SAP HANA-eloszlási beállítások.",
        "Documentation.LongDescription": "Érvényes SAP HANA-eloszlási beállítások.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "Tartományoperátor SAP HANA-bemeneti paraméterekhez.",
        "Documentation.LongDescription": "Tartományoperátor SAP HANA-bemeneti paraméterekhez.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "Az egyszeres pontosságú lebegőpontos számot jelző típus.",
        "Documentation.LongDescription": "Az egyszeres pontosságú lebegőpontos számot jelző típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "A Spark egy példányához való csatlakozáskor használandó protokoll.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "Az összes táblát jelölő típus.",
        "Documentation.LongDescription": "Az összes táblát jelölő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "Az összes szöveges értéket jelölő típus",
        "Documentation.LongDescription": "Az összes szöveges értéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "Meghatározza a szövegkódolás típusát.",
        "Documentation.LongDescription": "Meghatározza a szövegkódolás típusát.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "Az összes időértéket jelölő típus",
        "Documentation.LongDescription": "Az összes időértéket jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "Meghatározza a nyomkövetési szintet.",
        "Documentation.LongDescription": "Meghatározza a nyomkövetési szintet.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "Az összes típust jelölő típus",
        "Documentation.LongDescription": "Az összes típust jelölő típus",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "Szöveges URI-t képviselő típus.",
        "Documentation.LongDescription": "Szöveges URI-t képviselő típus.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "Meghatároz egy HTTP-metódust.",
        "Documentation.LongDescription": "Meghatároz egy HTTP-metódust.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
