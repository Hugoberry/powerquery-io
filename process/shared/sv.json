{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "Returnerar en strukturell representation av en Access-databas.",
        "Documentation.LongDescription": "Returnerar en strukturell representation av Access-databasen <code>database</code>. Du kan ange en valfri postparameter, <code>options</code>, om du vill styra följande alternativ:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger huruvida navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n</ul>\r\n\r\n    Postparametern anges t.ex. som [option1 = value1, option2 = value2...].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "Returnerar Analysis Services-databaser hos en viss värd.",
        "Documentation.LongDescription": "Returnerar databaser i Analysis Services-instansen <code>server</code>.  Du kan ange en valfri parameter, <code>options</code>, om du vill ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : Ett logiskt v&#228;rde som indikerar om den typ som anges i flerdimensions- eller tabellmodellen kommer att anv&#228;ndas f&#246;r de tillagda m&#229;ttkolumnernas typer. N&#228;r det ges v&#228;rdet false anv&#228;nds typen number f&#246;r alla m&#229;ttkolumner. Standardv&#228;rdet f&#246;r det h&#228;r alternativet &#228;r false.</li>\r\n<li><code>Culture</code> : Ett kulturnamn anger datakulturen. Detta motsvarar anslutningsstr&#228;ngsegenskapen Locale Identifier.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>SubQueries</code> : Ett nummer (0, 1 eller 2) som anger v&#228;rdet f&#246;r &quot;SubQueries&quot;-egenskapen i anslutningsstr&#228;ngen. Det h&#228;r styr beteendet f&#246;r ber&#228;knade medlemmar p&#229; delmarkeringar eller subcutes. (Standardv&#228;rdet &#228;r 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "AtScale-kuber",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "Import-/DirectQuery-kubdata från en AtScale.",
        "Documentation.LongDescription": "\r\nReturnerar kubdata från AtScale på servern <code>server</code>. En valfri postparameter <code>options</code>, kan anges för att kontrollera följande alternativ:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: ett logiskt värde som anger om typerna som anges i den multidimensionella eller tabularmodellen används för typerna av de tillagda måttkolumnerna. När det är konfigurerat som falskt så används typen ”number” för alla måttkolumner. Standardvärdet för det här alternativet är falskt.</li>\r\n        <li><code>CommandTimeout</code>: en varaktighet (i sekunder) som styr hur länge serversidefrågan tillåts köra innan den avbryts. Standardvärdet är drivrutinsberoende. </li>\r\n        <li><code>ConnectionTimeout</code>: en varaktighet (i sekunder) som styr tiden att vänta innan ett försök att upprätta en anslutning till servern överges. Standardvärdet är drivrutinsberoende. </li>\r\n\r\n</ul>\r\nPostparameter har angetts som [alternativ1 = värde1, alternativ2 = värde2...].",
        "Documentation.Examples": {
          "Description": "Listar kubdata i en AtScale-kub.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Importerar data från Azure Data Explorer (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Importerar data från din Azure Data Explorer-instans (Kusto)",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med Storm Events-information",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "En tabell med Storm-händelser från databasen Exempel i klustret Hjälp"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "Ange URL för din Azure DevOps Analytics Service.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS. AccountContents",
        "Documentation.Name": "VSTS. AccountContents",
        "Documentation.LongDescription": "Returnerar det innehåll som har hämtas från Azure DevOps Analytics Service-URL:en som ett binärt värde. Funktionen använder olika autentiseringsuppgifter för olika organisationer."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Services-flöde",
        "Documentation.DisplayName": "Azure DevOps Services-flöde",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Returnerar en tabell med OData-flöden som erbjuds av Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "Ange URL:en till den Azure Enterprise REST API-slutpunkt som är associerad till din registrering",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Returnerar en lista över rapporter och månader som är tillgängliga från Azure Enterprise-API:et",
        "Documentation.Name": "Importera data från Azure Enterprise",
        "Documentation.Examples": [
          {
            "Description": "Använd funktionen AzureEnterprise.Tables och navigera till ett visst värde för att få resultaten.",
            "Code": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents",
            "Result": "Tabell"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "See https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli for starter query samples.",
        "Documentation.Examples": [
          {
            "Description": "Return a table with query results of user query 'resources'",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Lista tabellerna i en Azure Spark-instans.",
        "Documentation.LongDescription": "Lista tabellerna i en Azure Spark-instans.",
        "Documentation.Examples": [
          {
            "Description": "Lista tabellerna i en Azure Spark-instans.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "Returnerar en navigeringstabell som innehåller de containrar som påträffats i det angivna kontot från ett Azure Storage-valv.",
        "Documentation.LongDescription": "Returnerar en navigeringstabell som innehåller en rad för varje container som hittats i kontots URL, <code>account</code>, från ett Azure Storage-valv. Varje rad innehåller en länk till containerblobarna. <code>options</code> kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>BlockSize</code> : Antal byte som ska l&#228;sas innan de v&#228;ntar p&#229; datakonsumenten. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>RequestSize</code> : Antal byte som ska f&#246;rs&#246;ka l&#228;sas i en enskild HTTP-beg&#228;ran till servern. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-alternativet st&#246;der snabbare nedladdning av data genom att ange antalet beg&#228;randen som ska g&#246;ras parallellt till pris av minnesanv&#228;ndning. Minnet som kr&#228;vs &#228;r (ConcurrentRequest * RequestSize). Standardv&#228;rdet &#228;r 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Returnerar en navigeringstabell som innehåller de dokument som hittades i den angivna containern och dess undermappar från Azure Data Lake Storage.",
        "Documentation.LongDescription": "Returnerar en navigeringstabell som innehåller de dokument som hittades i den angivna containern och dess undermappar på kontots URL <code>endpoint</code> från ett Azure Data Lake Storage-filsystem. <code>options</code> kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>BlockSize</code> : Antal byte som ska l&#228;sas innan de v&#228;ntar p&#229; datakonsumenten. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>RequestSize</code> : Antal byte som ska f&#246;rs&#246;ka l&#228;sas i en enskild HTTP-beg&#228;ran till servern. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-alternativet st&#246;der snabbare nedladdning av data genom att ange antalet beg&#228;randen som ska g&#246;ras parallellt till pris av minnesanv&#228;ndning. Minnet som kr&#228;vs &#228;r (ConcurrentRequest * RequestSize). Standardv&#228;rdet &#228;r 16.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som styr om filerna returneras i en tr&#228;dlik katalogvy eller som en plan lista. Standardv&#228;rdet &#228;r falskt.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "Returnerar en navigeringstabell som innehåller de tabeller som hittats i det angivna kontot från ett Azure-lagringsvalv.",
        "Documentation.LongDescription": "Returnerar en navigeringstabell som innehåller en rad för varje tabell som hittas på kontowebbadressen <code>account</code> från ett Azure Storage-valv. Varje rad innehåller en länk till Azure-tabellen. En valfri postparameter, <code>options</code>, kan läggas till för att ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>Timeout</code> : En varaktighet som styr hur l&#229;ng tid som ska g&#229; innan f&#246;rfr&#229;gan till servern avbryts. Standardv&#228;rdet &#228;r k&#228;llspecifikt.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight on AKS Trino"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "Funktionen är inte tillgänglig eftersom den kräver .NET 4,5.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (äldre)",
        "Documentation.Caption": "Common Data Service (äldre)",
        "Documentation.LongDescription": "Anslut till din Common Data Service-instans (Dynamics 365 och PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "Returnerar innehållet i CSV-dokumentet som en tabell.",
        "Documentation.LongDescription": "Returnerar innehållet i CSV-dokumentet som en tabell.\r\n    <ul>\r\n     <li> \r\n        <code>columns</code> kan vara null, antalet kolumner, en lista över kolumnnamn, en tabelltyp eller en alternativpost.\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> kan vara ett enstaka tecken, en lista med tecken eller värdet <code>\"\"</code>, vilket indikerar att rader ska delas av på varandra följande blanktecken. Standard: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        Kontrollera <code>ExtraValues.Type</code> för värden som stöds av <code>extraValues</code>.\r\n      </li>\r\n      <li>\r\n        <code>encoding</code> anger textkodningstypen.\r\n      </li>\r\n    </ul>\r\n\r\n    Om en post har angetts för <code>columns</code> (och <code>delimiter</code>, <code>extraValues</code> och <code>encoding</code> är null) kan följande postfält anges:\r\n    <ul>\r\n      <li>\r\n        <code>Avgränsare</code>: Kolumnavgränsaren. Standard: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Kolumner</code>: Kan vara null, antalet kolumner, en lista med kolumnnamn eller en tabelltyp. Om antalet kolumner är lägre än antalet som återfinns i indata, ignoreras de ytterligare kolumnerna. Om antalet kolumner är högre än antalet i indata, blir de ytterligare kolumnerna null. När det inte anges, fastställs antalet kolumner efter vad som finns i indata.\r\n      </li>\r\n      <li>\r\n        <code>Kodning</code>: Filens textkodning. Standard: 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle</code>: Anger hur citatationstecken hanteras.\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (standard): Citationstecken i ett fält är enbart betydande direkt efter avgränsaren.\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: Citationstecken i ett fält är alltid betydande, oavsett var de visas.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code>: Anger hur radbrytningar inom citationstecken hanteras. \r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code> (default): Citerade radbrytningar hanteras som del av data, inte som slutet på den aktuella raden.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.None</code> (standard): Alla radbrytningar hanteras som slutet på aktuell rad, även när de inträffar inom ett citerat värde.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Bearbeta CSV-text med kolumnrubriker",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "Returnerar en tabell med uppsättningen tillgängliga dimensioner.",
        "Documentation.LongDescription": "Returnerar en tabell med uppsättningen tillgängliga dimensioner i <code>cube</code>. Varje dimension är en tabell med en uppsättning dimensionsattribut och varje dimensionsattribut representeras som en kolumn i dimensionstabellen. Dimensioner kan expanderas i kuben med Cube.AddAndExpandDimensionColumn. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "Returnerar ett kapslat träd av tabeller som representerar mapphierarkin med objekt (till exempel dimensioner och mått).",
        "Documentation.LongDescription": "Returnerar ett kapslat träd av tabeller som representerar mapphierarkin med objekt (till exempel dimensioner och mått) som är tillgängliga att användas i <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "Returnerar en tabell som innehåller uppsättningen tillgängliga måttegenskaper som expanderas i kuben.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en uppsättning tillgängliga egenskaper för mått som expanderas i kuben.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "Returnerar en tabell med uppsättningen tillgängliga mått.",
        "Documentation.LongDescription": "Returnerar en tabell med uppsättningen tillgängliga mått i <code>cube</code>.\r\n    Varje mått representeras som en funktion. Mått kan tillämpas i kuben med Cube.AddMeasureColumn.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "Returnerar en tabell som innehåller den uppsättning parametrar som kan tillämpas på kuben.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller den uppsättning parametrar som kan tillämpas på <code>cube</code>. Varje parameter är en funktion som kan anropas för att hämta <code>cube</code> med parametern och dess argument tillämpade.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "Returnerar en tabell som innehåller en uppsättning med tillgängliga egenskaper för dimensioner som expanderas i kuben.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en uppsättning med tillgängliga egenskaper för dimensioner som expanderas i kuben.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Ange URL till ditt Azure Data Lake Storage Gen1-konto.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje mapp och fil som hittades på <code>URL</code> från Azure Data Lake Storage Gen1. Varje rad innehåller egenskaper för mappen eller filen och en länk till dess innehåll."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Ange URL:en till ditt Azure Data Lake Storage-konto.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje fil som hittades på <code>URL</code> från Azure Data Lake Storage Gen1. Varje rad innehåller egenskaper för filen och en länk till dess innehåll."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL API)",
        "Documentation.Description": "Ange URL:en för ett Azure Cosmos DB-konto.",
        "Documentation.LongDescription": "Returnerar en tabell för Azure Cosmos DB-databaser på <code>url</code>. Om du anger <code>database</code> returneras istället en tabell över samlingar. Om dessutom fältet <code>Query</code> anges i posten <code>options</code> returneras resultatet för frågan som körs på den angivna databasen och/eller samlingen."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "Ange URL för din Dynamics 365 Business Central (lokal) OData-tjänstens slutpunkt.",
        "Documentation.DisplayName": "Dynamics 365 Business Central (lokal)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (lokal)",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Dynamics 365 Business Central (lokal)-data. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "Ange URL:en för slutpunkten för din Dynamics NAV OData-tjänstslutpunkt.",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Dynamics NAV-data. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Returnerar kuberna i en Essbase-instansen grupperade efter Essbase-server.",
        "Documentation.LongDescription": "Returnerar en tabell med kuber grupperade efter Essbase-server från en Essbase-instans på APS-server <code>url</code>. En valfri postparameter <code>options</code> kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Returnerar innehållet i Excel-arbetsboken.",
        "Documentation.LongDescription": "Returnerar innehållet för Excel-arbetsboken.\r\n    <ul>\r\n     <li> <code>useHeaders</code> kan vara null, ett logiskt värde (sant/falskt) som visar huruvida den första raden i varje returnerad tabell ska behandlas om sidhuvud eller alternativpost. Standardvärde: falskt.</li>\r\n     <li> <code>delayTypes</code> kan vara null eller ett logiskt värde (sant/falskt) som visar huruvida kolumnerna i varje returnerad tabell ska lämnas tomma. Standardvärde: falskt.</li>\r\n    </ul>\r\n\r\n    Om en post har angetts för <code>useHeaders</code> (och <code>delayTypes</code> är null), kan följande postfält anges:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: Kan vara null eller ett logiskt värde (sant/falskt) som visar huruvida den första raden i varje returnerad tabell ska betraktas som sidhuvud. Standardvärde: falskt.</li>\r\n     <li> <code>DelayTypes</code>: Kan vara null eller ett logiskt värde (sant/falskt) som visar huruvida kolumnerna i varje returnerad tabell ska lämnas tomma. Standardvärde: falskt.</li>\r\n     <li> <code>InferSheetDimensions</code>: Kan vara null eller ett logiskt värde (sant/falskt) som visar huruvida en del av kalkylbladet som innehåller data ska härledas genom läsning av själva kalkylbladet, eller genom läsning av dimensionsmetadata från filen. Det här kan vara användbart när dimensionsmetadata är felaktiga. Tänk på att det här alternativet endast stöds för Open XML Excel-filer, inte för äldre Excel-filer. Standardvärde: falskt.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returnera innehållet i Blad1 från en Excel-arbetsbok.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "Returnerar en tabell som innehåller egenskaperna och innehållet i filerna och mapparna i den angivna mappen.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje mapp och fil som finns i mappen <code>path</code>. Varje rad innehåller egenskaper för mappen eller filen och en länk till dess innehåll. Parametern <code>options</code> är för närvarande endast avsedd för intern användning.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "Returnerar en tabell som innehåller egenskaperna och innehållet i filerna i den angivna mappen och undermapparna.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje fil i mappen <code>path</code> och alla dess undermappar. Varje rad innehåller egenskaper för filen och en länk till dess innehåll. Parametern <code>options</code> är för närvarande endast avsedd för internt bruk.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Importera data från en Google BigQuery-databas med Hjälp av Azure AD",
        "Documentation.LongDescription": "\r\n      Returnerar en tabell som visar tillgängliga projekt i Google BigQuery med hjälp av Azure AD för <code>Fakturering av projekt-ID</code> . En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: En varaktighet som styr hur lång tid det ska ta innan ett försök att upprätta en anslutning till servern avbryts. Standardvärdet är ODBC Connection Timeout value.</li>\r\n        <li><code>CommandTimeout</code>: En varaktighet som styr hur länge frågan på serversidan tillåts köras innan den avbryts.</li>\r\n        <li><code>UseStorageApi</code>:  Anger om BigQuery Storage-API:et ska användas för stora resultatuppsättningar. Standardvärdet är sant för att använda Lagrings-API. Ställ in på falskt om du inte vill använda Storage API</li>\r\n        <li><code>AudienceUri</code>: Det här är målgrupps-URI:n som ODBC-drivrutinen kan använda för sina tokenutbytesbegäranden. Det här fältet måste vara en fullständigt kvalificerad URI (dvs. //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/aad-provider) där pool_id är ett globalt unikt namn för att identifiera arbetsstyrkans pool.</li>\r\n      </ul>\r\n    Postparametern anges som [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Lista tillgängliga projekt i Google BigQuery med hjälp av Azure AD",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Google Sheets",
        "Documentation.Caption": "Google Sheets",
        "Documentation.Description": "Importerar data från GoogleSheets",
        "Documentation.LongDescription": "Importerar data från GoogleSheets"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "Returnerar en navigeringstabell som innehåller de containrar som påträffats i det angivna kontot från ett Azure Storage-valv.",
        "Documentation.LongDescription": "Returnerar en navigeringstabell som innehåller en rad för varje container som påträffats på kontots URL, <code>account</code>, från ett Azure Storage-valv. Varje rad innehåller en länk till containerblobarna.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "Returnerar en navigeringstabell som innehåller de containrar som påträffats i det angivna kontot från ett Azure Storage-valv.",
        "Documentation.LongDescription": "Returnerar en navigeringstabell som innehåller en rad för varje container som påträffats på kontots URL, <code>account</code>, från ett Azure Storage-valv. Varje rad innehåller en länk till containerblobarna.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "Returnerar en tabell som innehåller egenskaperna och innehållet i filerna och mapparna i den angivna mappen från ett Hadoop-filsystem.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje mapp och fil på mappens URL, <code>url</code>, från ett Hadoop-filsystem. Varje rad innehåller egenskaper för mappen eller filen och en länk till dess innehåll.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "Returnerar en tabell som innehåller egenskaperna och innehållet i filerna i den angivna mappen och undermapparna från ett Hadoop-filsystem.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje fil på mappens URL, <code>url</code>, och undermapparna från ett Hadoop-filsystem. Varje rad innehåller egenskaper för filen och en länk till dess innehåll.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Importera data från ett Impala-kluster",
        "Documentation.LongDescription": "Importera data från Impala-klustret <code>server</code>. Om du inte anger någon port används standardporten 21050.",
        "Documentation.Examples": [
          {
            "Description": "Lista tabellerna i ett Impala-kluster.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Importerar data från Azure Data Explorer (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Innehåll",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Importerar data från din Azure Data Explorer-instans (Kusto)",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med Storm Events-information",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "En tabell med Storm-händelser från databasen Exempel i klustret Hjälp"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "LinkedIn Sales Navigator",
        "Documentation.LongDescription": "LinkedIn Sales Navigator",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "Returnerar en tabell med data från en MailChimp-slutpunkt.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "Anropar MailChimp API:n och returnerar den resulterande datauppsättningen som en tabell. Bläddrar automatiskt igenom alla resultat. entityName-parametern som är valfri, kan användas för API-slutpunkter där rot-slutpunkten och huvudsakliga entityName i JSON-responsen inte matchar.",
        "Documentation.Examples": [
          {
            "Description": "Hämtar en tabell med data från list-slutpunkten av MailChimps API:er.",
            "Code": "MailChimp.Collection(\"listor\")",
            "Result": "En tabell med listdata."
          },
          {
            "Description": "Hämtar en tabell med data från kampanjmapp-slutpunkten av MailChimps API:er.",
            "Code": "MailChimp.Collection(\"kampanjmappar\", \"mappar\")",
            "Result": "En tabell med kampanjmapp-data."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "Returnerar rå-resultat från en MailChimp API-slutpunkt.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "Anropar MailChimp API:n och returnerar råsvaret.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar rådata från MailChimps API-slutpunkt rapporter/klickinformation för en given kampanj.",
            "Code": "MailChimp.Instance(\"rapporter/{campaign_id}/klickinformation\")",
            "Result": "Rå-klickinformationsdata från den givna kampanjen."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy för Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "Ange avancerade frågefunktioner.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "Ange avancerade frågefunktioner.",
        "Documentation.Examples": [
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta sammanfattningsdata mellan 2017-05-01 till 2017-06-15",
            "Code": "\r\n      låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          resultat = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen kommer att returnera sammanfattningsdata mellan 2017-05-01 och 2017-06-15"
          },
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta sammanfattningsdata för april 2017.",
            "Code": "\r\n      låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          resultat = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen kommer att returnera data mellan 2017-04-01 och 2017-04-30"
          },
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta sammanfattningsdata från april 2017 fram tills nu.",
            "Code": "\r\n      låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Sammanfattningar\" ],\r\n          resultat = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen kommer att returnera data mellan 2017-04-01 och 2017-06-15"
          },
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta sammanfattningsdata från sista december till denna februari ",
            "Code": "\r\n      låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Sammanfattningar\" ],\r\n          resultat = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen kommer att returnera data mellan 2016-12-01 och 2017-02-28"
          },
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta marketplace-debiteringar för de senaste 18 månaderna",
            "Code": "\r\n      låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen kommer att returnera data mellan 2015-12-01 och 2017-06-15"
          },
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta detaljerade avgifter för juni 2017 och maj 2017",
            "Code": "\r\n      låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          resultat = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen kommer att returnera data mellan 2017-05-01 och 2017-06-15"
          },
          {
            "Description": "Om vi antar att idag är 2017-07-03, så hämta detaljerade avgifter för juli 2016",
            "Code": "\r\n      låt  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          resultat = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen returnerar data mellan 2016-07-01 och 2016-07-31"
          },
          {
            "Description": "Om vi antar att idag är 2017-07-13, hämta balanssammanfattningar för de senaste 10 månaderna plus 13 dagar i denna månad",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktionen kommer att returnera data mellan 2016-09-01 och 2017-07-13"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Microsoft Azure Consumption Insights",
        "Documentation.Description": "Microsoft Azure Consumption Insights",
        "Documentation.DisplayName": "Microsoft Azure Consumption Insights",
        "Documentation.LongDescription": "Microsoft Azure Consumption Insights",
        "Documentation.Name": "Microsoft Azure Consumption Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och vyer från ODBC-datakällan. ",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer från den ODBC-datakälla som har angetts av anslutningssträngen <code>connectionString</code>. <code>connectionString</code> kan vara text eller en post med egenskapsvärdepar. Egenskapsvärdena kan antingen vara text eller siffror. En valfri postparameter, <code>options</code>, kan anges för att specificera ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r 15 sekunder.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Ett logiskt (sant/falskt) som fastst&#228;ller om alternativ f&#246;r SQL Server-kompatibla anslutningsstr&#228;ngpar ska skapas f&#246;r Windows-autentisering. Standardv&#228;rdet &#228;r sant.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returnera SQL-tabeller och vyer från den angivna anslutningssträngen.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och -vyer från OLE DB-datakällan.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer från den OLE DB-datakälla som har angivits av anslutningssträngen <code>connectionString</code>. <code>connectionString</code> kan vara text eller en post med egenskapsvärdespar. Egenskapsvärden kan antingen vara text eller siffror. Du kan tillhandahålla en valfri postparameter, <code>options</code>, om du vill ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om tabellerna ska visas grupperade efter sina schemanamn (standard &#228;r sant).</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Ett logiskt (sant/falskt) som fastst&#228;ller om alternativ f&#246;r SQL Server-kompatibla anslutningsstr&#228;ngpar ska skapas f&#246;r Windows-autentisering. Standardv&#228;rdet &#228;r sant.</li>\r\n</ul>\r\n\r\n    Postparametern anges t.ex. som [option1 = value1, option2 = value2...] or [Query = \"select ...\"].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och vyer från Oracle-databasen.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer från Oracle-databasen på servern <code>server</code>. Du kan också välja att ange porten med servern, avgränsad med ett kolon. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2 ... ] eller [Query= \"select ... \"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "Returnerar alla tabeller som finns i en PDF-fil.",
        "Documentation.LongDescription": "Returnerar tabeller som hittats i <code>pdf</code>. Du kan ange en valfri postparameter <code>options</code> för att specificera ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>Implementation</code> : Versionen f&#246;r den algoritm som ska anv&#228;ndas f&#246;r att identifiera tabeller. &#196;ldre versioner &#228;r enbart tillg&#228;ngliga f&#246;r bak&#229;tkompatibilitet f&#246;r att f&#246;rhindra att &#228;ldre fr&#229;gor bryts av algoritmuppdateringar. Den senaste versionen b&#246;r alltid ge b&#228;st resultat. Giltiga v&#228;rden &#228;r 1.3, 1.2, 1.1 eller null.</li>\r\n<li><code>StartPage</code> : Anger den f&#246;rsta sidan i sidintervallet som ska unders&#246;kas. Standard: 1.</li>\r\n<li><code>EndPage</code> : Anger den sista sidan i sidintervallet som ska unders&#246;kas. Standard: den sista sidan i dokumentet.</li>\r\n<li><code>MultiPageTables</code> : Anger om liknande tabeller p&#229; flera sidor automatiskt kombineras till en enda tabell. Standard: sant.</li>\r\n<li><code>EnforceBorderLines</code> : Anger om kantlinjer alltid anv&#228;nds som cellkanter (n&#228;r sant), eller bara anv&#228;nds som en indikation bland m&#229;nga f&#246;r att fastst&#228;lla cellkanter (n&#228;r faskt). Standard: falskt.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Öppnar data",
        "Documentation.Examples": [
          {
            "Description": "Returnerar tabellerna som finns i sample.pdf.",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "Ange URL:en för ditt Planview Projectplace-konto.",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Planview Projectplace-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "Ρŷτћόŉ §čгΐρť",
        "Documentation.Description": "Èхзćüţêš Рγťћöñ ŝсřірŧ àñδ ŕетűгήś δǻτα ƒґāмêš",
        "Documentation.Examples": {
          "Description": "Èхзćüţêš Рγťћöñ ŝсřірŧ àñδ ŕетűгήś δǻτα ƒґāмêš",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "Я śĉѓīρт",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "Returnerar en tabell där varje rad är ett fältnamn och värde i indataposten.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller kolumnerna <code>Name</code> och <code>Value</code> med en rad för varje fält i <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Skapa en tabell från posten.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "Returnerar paketet i en SAP HANA-databas.",
        "Documentation.LongDescription": "Returnerar en tabell med multidimensionella paket från SAP HANA-databasen <code>server</code>. Du kan ange en valfri postparameter, <code>options</code>, om du vill styra följande alternativ:\r\n    <ul>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>Distribution</code> : En SapHanaDistribution som st&#228;ller in v&#228;rdet f&#246;r Distribution-egenskapen i anslutningsstr&#228;ngen. Instruktionsroutning &#228;r metoden f&#246;r att utv&#228;rdera korrekt servernod f&#246;r ett distribuerat system innan instruktionsutf&#246;rande. Standardv&#228;rdet &#228;r SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : Anger den implementering av SAP HANA-anslutningsappen som ska anv&#228;ndas.</li>\r\n<li><code>EnableColumnBinding</code> : Binder variabler till kolumnerna i en SAP HANA resultatupps&#228;ttning n&#228;r data h&#228;mtas. Kan potentiellt f&#246;rb&#228;ttra prestanda p&#229; bekostnad av n&#229;got h&#246;gre minnesanv&#228;ndning. Standardv&#228;rdet &#228;r falskt.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r 15 sekunder.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "Returnerar en tabell med innehåll från en SharePoint-webbplats.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje mapp och dokument på den angivna SharePoint-webbplatsen, <code>url</code>. Varje rad innehåller egenskaper för mappen eller filen och en länk till dess innehåll. Du kan ange <code>options</code> om du vill styra följande alternativ:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Ett tal (14 eller 15) eller texten &quot;Auto&quot; som specificerar vilken SharePoint API-version som ska anv&#228;ndas f&#246;r den h&#228;r webbplatsen. Om det inte anges anv&#228;nds API-version 14. Om Auto specificeras uppt&#228;cks serverversionen automatiskt. I annat fall anv&#228;nds version 14. Ej engelskspr&#229;kiga SharePoint-webbplatser kr&#228;ver minst version 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "Returnerar en tabell som innehåller dokument från en SharePoint-webbplats.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje dokument på den angivna SharePoint-webbplatsen, <code>url</code>, och undermappar. Varje rad innehåller egenskaper för mappen eller filen och en länk till dess innehåll. Du kan ange <code>options</code> om du vill styra följande alternativ:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Ett tal (14 eller 15) eller texten &quot;Auto&quot; som specificerar vilken SharePoint API-version som ska anv&#228;ndas f&#246;r den h&#228;r webbplatsen. Om det inte anges anv&#228;nds API-version 14. Om Auto specificeras uppt&#228;cks serverversionen automatiskt. I annat fall anv&#228;nds version 14. Ej engelskspr&#229;kiga SharePoint-webbplatser kr&#228;ver minst version 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "Returnerar en tabell med innehåll från en SharePoint-lista",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje listobjekt i den angivna SharePoint-listan, <code>url</code>. Varje rad innehåller egenskaper för listan. Du kan ange <code>options</code> om du vill styra följande alternativ:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Ett tal (14 eller 15) eller texten &quot;Auto&quot; som specificerar vilken SharePoint API-version som ska anv&#228;ndas f&#246;r den h&#228;r webbplatsen. Om det inte anges anv&#228;nds API-version 14. Om Auto specificeras uppt&#228;cks serverversionen automatiskt. I annat fall anv&#228;nds version 14. Ej engelskspr&#229;kiga SharePoint-webbplatser kr&#228;ver minst version 15.</li>\r\n<li><code>Implementation</code> : Valfritt. Anger vilken version av SharePoint-anslutningsprogrammet som ska anv&#228;ndas. Godk&#228;nda v&#228;rden &#228;r 2.0 eller null. Om v&#228;rdet &#228;r 2.0 anv&#228;nds 2.0-implementeringen av SharePoint-anslutningsprogrammet. Om v&#228;rdet &#228;r null anv&#228;nds den ursprungliga implementeringen av SharePoint-anslutningsprogrammet.</li>\r\n<li><code>ViewMode</code> : Valfritt. Det h&#228;r alternativet &#228;r endast giltigt f&#246;r implementering 2.0. Godk&#228;nda v&#228;rden &#228;r Alla och Standard. Om inget v&#228;rde anges, anv&#228;nds v&#228;rdet Alla. D&#229; omfattar vyn alla anv&#228;ndarskapade och systemdefinierade kolumner. N&#228;r Standard anges matchar vyn vad anv&#228;ndaren ser n&#228;r han eller hon tittar p&#229; listan online i den vy som anv&#228;ndaren angett som standard i sina inst&#228;llningar. Om anv&#228;ndaren redigerar standardvyn f&#246;r att l&#228;gga till eller ta bort antingen anv&#228;ndarskapade eller systemdefinierade kolumner, eller genom att skapa en ny vy och ange den som standard, sprids &#228;ndringarna via anslutningsprogrammet.</li>\r\n<li><code>DisableAppendNoteColumns</code> : Hindrar anslutningsprogrammet fr&#229;n att anv&#228;nda en separat slutpunkt f&#246;r anteckningskolumner.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "Returnerar en tabell från innehållet på den angivna URL:en formaterad enligt SODA 2.0 API.",
        "Documentation.LongDescription": "Returnerar en tabell från innehållet på URL:en <code>url</code> formaterad enligt SODA 2.0 API. URL:en måste peka på en SODA-kompatibel källa som slutar med filnamnstillägget .csv.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "Den här funktionen kan användas för att anropa någon av de Listor-slutpunkter som erbjuds av SparkPost API v1. När du gör anrop till SparkPost API:t med den här funktionen så bör du tänka på att SparkPost API:t har en strik hastighetsbegränsning. Om du ser statuskod 429 returnerad från SparkPost-servern så har du uppnått hastighetsgränsen och kommer att behöva vänta en stund innan du gör några fler anrop.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med en enskild kolumn ifylld med data från en av SparkPost API v1 Listor-slutpunkterna (se SparkPost-dokumentationen för information).",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "Hämta de inbyggda tabeller som exponeras av SparkPost-anslutningsappen med data som sammanställts för ett användardefinierat antal dagar. Vid uppdatering av de här tabellerna eller vid anrop till SparkPost-API:t med den här anslutningsappen så bör du tänka på att SparkPost API har en strikt hastighetsbegränsning för API:t. Om du ser statuskod 429 returneras från SparkPost-servern så har du nått hastighetsgränsen måste vänta ett tag innan du gör fler anrop. När du väljer ett värde för parametern Antal dagar så bör du tänka på att API:t endast lagrar 6 månaders data."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "Returnerar en tabell med databaser på en SQL Server.",
        "Documentation.LongDescription": "Returnerar en tabell med databaser på den angivna SQL-servern <code>server</code>. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Ett tal som anger v&#228;rdet p&#229; maxdop-fr&#229;gesatsen i den genererade SQL-fr&#229;gan.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n<li><code>MultiSubnetFailover</code> : Ett logiskt v&#228;rde (sant/falskt) som anger v&#228;rdet f&#246;r egenskapen MultiSubnetFailover i anslutningsstr&#228;ngen (standard &#228;r falskt).</li>\r\n<li><code>UnsafeTypeConversions</code> : Ett logiskt v&#228;rde (sant/falskt) som, om det st&#228;lls in p&#229; sant, f&#246;rs&#246;ker delegera typomvandlingar som skulle kunna misslyckas och leda till att hela fr&#229;gan misslyckas. Rekommenderas inte f&#246;r allm&#228;nt bruk.</li>\r\n<li><code>ContextInfo</code> : Ett bin&#228;rt v&#228;rde som anv&#228;nds f&#246;r att ange CONTEXT_INFO innan varje kommando k&#246;rs.</li>\r\n<li><code>OmitSRID</code> : Ett logiskt v&#228;rde (sant/falskt) som, om det &#228;r sant, utesluter SRID n&#228;r WKT skapas fr&#229;n geometri- och geografityper.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Ett logiskt v&#228;rde (sant/falskt) som, om det &#228;r sant, till&#229;ter fr&#229;gedelegering av databaser p&#229; samma server. Standardv&#228;rdet &#228;r falskt.</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2...].\r\n    <br>\r\n    Stöder inte körning av en SQL-fråga på servern. <code>Sql.Database</code> ska användas istället för att köra en SQL-fråga.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "Anropar Stripe-API:et, med alternativet att begränsa antalet gjorda API-anrop.",
        "Documentation.LongDescription": "Anropar Stripe-API:et på https://api.stripe.com/v1/<code>method</code>, med den alternativa posten <code>query</code> överförd som extra parametrar och valfria <code>pageLimit</code> som gräns för antalet API-förfrågningar. Senaste data returneras först. Om <code>pageLimit</code> inte anges returneras alla data. Stripe-version 2015-10-16 används.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar alla debiteringsdata",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "En tabell med alla debiteringsdata för det aktuella Stripe-kontot"
          },
          {
            "Description": "Returnerar en sida med debiteringsdata",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "En tabell med senaste debiteringsdata för det aktuella Stripe-kontot"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "Buffrar en tabell i minnet och isolerar den från externa ändringar under utvärdering.",
        "Documentation.LongDescription": "Buffrar en tabell i minnet och isolerar den från externa ändringar under utvärdering.\r\n buffring är grund. Den tvingar utvärderingen av alla skalärcellsvärden, men lämnar icke-skalära värden (poster, listor, tabeller och så vidare) som de är.\r\n    <br>\r\n    <br>\r\n    Obs! Om du använder den här funktionen kanske dina frågor körs snabbare eller inte. I vissa fall kan det göra att dina frågor körs långsammare på grund av den extra \r\n    kostnaden för att läsa alla data och lagra dem i minnet, samt det faktum att buffring förhindrar nedströmsdelegering. Om data inte behöver\r\n    buffras men du bara vill förhindra nedströms vikning kan du istället använda <code>Table.StopFolding</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Läs in alla rader i en SQL-tabell i minnet så att underordnade åtgärder inte längre kan köra frågor mot SQL-servern.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "Returnerar en tabell som är resultatet av sammanslagningen av en lista med tabeller.",
        "Documentation.LongDescription": "Returnerar en tabell som är resultatet av en sammanslagning av en lista över tabeller, <code>tables</code>. Den resulterande tabellen har en radtypsstruktur som definieras av <code>columns</code> eller av en union av indatatyper om <code>columns</code> inte har angetts.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Slå ihop tre tabeller.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Sammanfoga tre tabeller med olika strukturer.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Sammanfoga två tabeller och projekt till den angivna typen.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "Flyttar ned kolumnrubrikerna till den första raden med värden.",
        "Documentation.LongDescription": "Flyttar ned kolumnrubrikerna (d.v.s. kolumnnamn) till den första raden med värden. Standardkolumnvärdena är \"Kolumn1\", \"Kolumn2\" och så vidare.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Flytta ned den första raden med värden i tabellen.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "Tar bort dubblettrader i tabellen.",
        "Documentation.LongDescription": "Tar bort dubblettrader från tabellen.\r\n En valfri parameter, <code>equationCriteria</code>, anger vilka kolumner i tabellen som testas för duplicering. Om <code>equationCriteria</code> inte anges testas alla kolumner.<br>\r\n <br>\r\n Eftersom Power Query ibland avlastar vissa åtgärder till serverdelsdatakällor (kallas \"vikning\") och även ibland optimerar frågor genom att \r\n hoppa över åtgärder som inte är absolut nödvändiga,  i allmänhet finns det ingen garanti för vilken specifik dubblett som ska bevaras.\r\n Du kan till exempel inte förutsätta att den första raden med en unik uppsättning kolumnvärden finns kvar och att rader längre ned i tabellen tas bort.\r\n Om du vill att dubblettborttagningen ska fungera förutsägbart buffrar du först tabellen med <code>Table.Buffer</code>.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Ta bort dubblettraderna från tabellen.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "Ta bort dubblettraderna från kolumnen [b] i tabellen <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code>.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "Skapar en tabell från en lista med kolumner och angivna värden.",
        "Documentation.LongDescription": "Skapar en tabell av typen <code>columns</code> från en lista <code>lists</code> som innehåller kapslade listor med kolumnnamn och värden.\r\n    Om vissa kolumner har fler värden än andra fylls de värden som saknas i med standardvärdet, null, om kolumnerna kan vara null.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returnera en tabell från en lista med kundnamn i en lista. Varje värde i kundlistobjektet blir till ett radvärde, och varje lista blir en kolumn.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Skapa en tabell från en angiven lista med kolumner och en lista med kolumnnamn.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Skapa en tabell med olika antal kolumner per rad. Det saknade radvärdet är null.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "Konverterar en lista till en tabell genom att tillämpa angiven delningsfunktion på varje objekt i listan.",
        "Documentation.LongDescription": "Konverterar en lista, <code>list</code>, till en tabell genom att tillämpa den valfria delningsfunktionen, <code>splitter</code>, på varje objekt i listan. Som standard antas listan vara en lista med textvärden som avgränsas med komma. <code>columns</code> (valfritt) kan vara antalet kolumner, en lista med kolumner eller en TableType. <code>default</code> och <code>extraValues</code> (valfria) kan också anges.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Skapa en tabell från en lista med standarddelaren.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "Skapa en tabell från en lista med en anpassad delning.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "Skapa en tabell från listan med splittern Record.FieldValues.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "Konverterar en lista med poster till en tabell.",
        "Documentation.LongDescription": "Konverterar <code>records</code>, en lista med poster, till en tabell.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Skapa en tabell från poster med postfältsnamn som kolumnnamn.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Skapar en tabell från poster med typbestämda kolumner och välj nummerkolumnerna.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "Skapar en tabell från en lisa med radvärden och valfria kolumner",
        "Documentation.LongDescription": "Skapar en tabell från listan <code>rows</code> där varje element i listan är en inre lista som innehåller kolumnvärdena för en enskild rad. En valfri lista med kolumnnamn, en tabelltyp, eller ett antal kolumner kan tillhandahållas för <code>columns</code>.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med kolumnen [CustomerID] med värdena {1, 2} och kolumnen [Name] med värdena {\"Bob\", \"Jim\"}, och kolumnen [Phone] med värdena {\"123-4567\", \"987-6543\"}.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Returnerar en tabell med kolumnen [CustomerID] med värdena {1, 2}, kolumnen [Name] med värdena {\"Bob\", \"Jim\"} och kolumnen [Phone] med värdena {\"123-4567\", \"987-6543\"}, där [CustomerID] är en siffertyp och [Name] och [Phone] är texttyper.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "Skapar en tabell med en kolumn från det eller de angivna värdena.",
        "Documentation.LongDescription": "Skapar en tabell med en kolumn som innehåller det angivna värdet eller listan med värden, <code>value</code>. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : Det kolumnnamn som används när man skapar en tabell från en lista eller ett skalärvärde.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Skapa en tabell från värdet 1.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "Skapa en tabell från listan.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "Skapa en tabell från värdet 1, med ett anpassat kolumnnamn.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "Returnerar information om hur en tabell är partitionerad.",
        "Documentation.LongDescription": "Returnerar information om hur en tabell är partitionerad. En tabell returneras där varje kolumn är en partitionskolumn i den ursprungliga tabellen, och varje rad motsvarar en partition i den ursprungliga tabellen.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "Returnerar en profil av en tabells kolumner.",
        "Documentation.LongDescription": "<p>Returnerar en profil för kolumnerna i <code>table</code>.</p>\r\n<p>Följande information returneras för varje kolumn (när så är tillämpbart):\r\n<ul>\r\n  <li>minimum</li>\r\n  <li>maximum</li>\r\n  <li>medel</li>\r\n  <li>standardavvikelse</li>\r\n  <li>antal</li>\r\n  <li>nullantal</li>\r\n  <li>distinkt antal</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "Flyttar upp den första raden med värden som de nya kolumnrubrikerna (t.ex. kolumnnamn).",
        "Documentation.LongDescription": "Höjer upp den första raden med värden som de nya kolumnrubrikerna (t.ex. kolumnnamn). Endast text och siffror höjs som standard upp som rubriker. Giltiga alternativ:\r\n    <div>\r\n      <code>PromoteAllScalars</code> : Om du väljer inställningen <code>true</code> höjs alla skalarvärden på den första raden upp som rubriker med hjälp av <code>Kultur</code>, om sådan angetts (eller det aktuella dokumentets nationella inställningar).\r\n    När det gäller värden som inte kan konverteras till text används ett standardkolumnnamn.\r\n    </div>\r\n    <div>\r\n    <code>Kultur</code> : Ett kulturnamn som anger informationens kultur.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Flytta upp den första raden med värden i tabellen.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "Höj upp alla skalärer på den första raden till rubriker.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "Returnerar en tabell där det första angivna antalet rader hoppas över.",
        "Documentation.LongDescription": "Returnerar en tabell som inte innehåller det första angivna antalet rader, <code>countOrCondition</code>, i tabellen <code>table</code>. \r\n    Hur många rader som tas bort beror på den valfria parametern <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Om <code>countOrCondition</code> utelämnas tas bara den första raden bort. </li>\r\n    <li> Om <code>countOrCondition</code> är ett tal, tas så många rader (med början uppifrån) bort. </li>\r\n    <li> Om <code>countOrCondition</code> är ett villkor tas de rader som uppfyller villkoret bort tills en rad inte uppfyller villkoret.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort den första raden i tabellen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ta bort de två första raderna i tabellen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ta bort de första raderna där [CustomerID] <=2 i tabellen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "Returnerar en tabell där de sista N raderna tagits bort.",
        "Documentation.LongDescription": "Returnerar en tabell som inte innehåller de sista <code>countOrCondition</code> raderna i tabellen <code>table</code>.\r\n        Hur många rader som tas bort beror på den valfria parametern <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Om <code>countOrCondition</code> utelämnas tas bara den sista raden bort. </li>\r\n    <li> Om <code>countOrCondition</code> är ett tal tas så många rader (med början nedifrån) bort. </li>\r\n    <li> Om <code>countOrCondition</code> är ett villkor tas de rader som uppfyller villkoret bort tills en rad inte uppfyller villkoret.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort den sista raden i tabellen.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Ta bort de sista raderna där [CustomerID] > 2 i tabellen.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "Returnerar en tabell där de rader från indatatabellen som innehåller ett fel i minst en av cellerna har tagits bort. Om en kolumnlista anges genomsöks bara cellerna i de angivna kolumnerna efter fel.",
        "Documentation.LongDescription": "Returnerar en tabell där de rader från indatatabellen som innehåller ett fel i minst en av cellerna har tagits bort. Om en kolumnlista anges genomsöks bara cellerna i de angivna kolumnerna efter fel.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Ta bor felvärdet från den första raden.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "Returnerar en tabell med raderna i omvänd ordning.",
        "Documentation.LongDescription": "Returnerar en tabell med raderna från angivna indata, <code>table</code>, i omvänd ordning.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Byt till omvänd ordning för raderna i tabellen.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "Returnerar en tabell som innehåller en beskrivning av den angivna tabellens kolumner (t.ex. schemat).",
        "Documentation.LongDescription": "<p> Returnerar en tabell som beskriver kolumnerna i <code>table</code>.</p>\r\n<p> Varje rad i tabellen beskriver egenskaperna för en kolumn i <code>table</code>:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>Kolumnnamn</b></td>\r\n    <td><b>Beskrivning</b></td>\r\n </tr>\r\n  <tr>\r\n    <td><code>Namn</code></td>\r\n    <td>Kolumnens namn.</td>\r\n </tr>\r\n  <tr>\r\n    <td><code>Plats</code></td>\r\n    <td>Den 0-baserade platsen för kolumnen i <code>table</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Typnamn</code></td>\r\n    <td>Namnet på kolumnens typ.</td>\r\n </tr>\r\n  <tr>\r\n    <td><code>Typ</code></td>\r\n    <td>Kolumnens typ.</td>\r\n  </tr>\\\r\nr\\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>Huruvida kolumnen kan innehålla <code>null</code>-värden.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>Den numeriska basen (t.ex. base-2, base-10) för <code>NumericPrecision</code>- och <code>NumericScale</code>-fält.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>Precisionen för en numerisk kolumn i den bas som anges av <code>NumericPrecisionBase</code>. Detta är det maximala antalet siffror som kan representeras med ett värde av den här typen (inklusive decimaler).</td>\r\n   </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>Skalan för en numerisk kolumn i den bas som anges av <code>NumericPrecisionBase</code>. Detta är antalet siffror i decimaldelen av ett värde av den här typen. Ett värde på <code>0</code> indikerar en fast skala utan decimaler. Ett <code>null</code>-värde indikerar att skalan är okänd (eftersom den är flytande eller inte definierad).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>Det maximala antal decimaler som stöds i den andra delen av datum- eller tidsvärdet.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>Det maximala antal tecken som tillåts i en <code>text</code>-kolumn, eller det maximala antalet byte som tillåts i en <code>binary</code>-kolumn.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>Indikerar om den här kolumnen kan variera i längd (upp till <code>MaxLength</code>) eller om den har fast storlek.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>Namnet på kolumntypen i källans originaltypssystem (t.ex. <code>nvarchar</code> för SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>Standarduttrycket för ett värde för den här kolumnen i källans originaluttrycksspråk (t.ex. <code>42</code> eller <code>newid()</code> för SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n   <td>&nbsp;</td>\r\n     <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Beskrivning</code></td>\r\n    <td>Kolumnens beskrivning.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "Returnerar en tabell med bara de rader i indatatabellen som innehåller ett fel i minst en av cellerna. Om en kolumnlista anges genomsöks bara cellerna i de angivna kolumnerna efter fel.",
        "Documentation.LongDescription": "Returnerar en tabell med bara de rader i indatatabellen som innehåller ett fel i minst en av cellerna. Om en kolumnlista anges genomsöks bara cellerna i de angivna kolumnerna efter fel.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Markera namnen på kunder med fel i sina rader.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "Returnerar en tabell där det första angivna antalet rader hoppas över.",
        "Documentation.LongDescription": "Returnerar en tabell som inte innehåller det första angivna antalet rader, <code>countOrCondition</code>, i tabellen <code>table</code>.\r\n    Hur många rader som hoppas över beror på den valfria parametern <code>countOrCondition</code>. \r\n    <ul>\r\n    <li> Om <code>countOrCondition</code> utelämnas hoppas bara den första raden över. </li>\r\n    <li> Om <code>countOrCondition</code> är ett tal hoppas så många rader (med början ovanifrån) över. </li>\r\n    <li> Om <code>countOrCondition</code> är ett villkor hoppas de rader som uppfyller villkoret över tills en rad inte uppfyller villkoret.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hoppa över den första raden i tabellen.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Hoppa över de två första raderna i tabellen.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Hoppa över de första raderna där [Price] > 25 i tabellen.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "Förhindrar att underordnade åtgärder körs mot den ursprungliga datakällan.",
        "Documentation.LongDescription": "Förhindrar att underordnade åtgärder körs mot den ursprungliga datakällan i <code>table</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Hämtar data från en SQL-tabell på ett sätt som förhindrar att underordnade åtgärder körs som en fråga på SQL-servern.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "Omvandlar kolumner till rader och rader till kolumner.",
        "Documentation.LongDescription": "Omvandlar kolumner till rader och rader till kolumner.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Omvandla raderna i tabellen med namn-värde-par till kolumner.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "Hämtar relationerna från en uppsättning tabeller.",
        "Documentation.LongDescription": "Hämtar relationerna från en uppsättning tabeller. Uppsättningen <code>tables</code> antas ha en struktur liknande den i en navigeringstabell. Kolumnen som definieras av <code>dataColumn</code> innehåller de faktiska datatabellerna.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och vyer från Teradata-databasen.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer från Teradata-databasen på servern <code>server</code>. Du kan också välja att ange porten med servern, avgränsad med ett kolon. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2 ... ] eller [Query = \"select ... \"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "Ange hur många månader av historikdata från Twilio som ska hämtas.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Twilio-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "Returnerar en tabell som innehåller en beskrivning av den angivna tabelltypens kolumner (t.ex. schemat).",
        "Documentation.LongDescription": "<p>Returnerar en tabell som beskriver kolumnerna i <code>tableType</code>.</p>\r\n<p>En beskrivning av den resulterande tabellen finns i dokumentationen till <code>Table.Schema</code>.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Services-flöde",
        "Documentation.DisplayName": "Azure DevOps Services-flöde",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Returnerar en tabell med OData-flöden som erbjuds av Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Anslut till Viva Insights-data",
        "Documentation.LongDescription": "Importera vecko mått- och attributdata veckovis från arbetsyteanalysen.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med synliga attribut och mått per vecka för varje uppmätt anställd i partitionen.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "advancedParameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "Returnerar innehållet i HTML-dokumentet i strukturen med dokumentets beståndsdelar, samt en representation av det fullständiga dokumentet och texten när taggarna har tagits bort.",
        "Documentation.LongDescription": "Returnerar innehållet i HTML-dokumentet i strukturen med dokumentets beståndsdelar, samt en representation av det fullständiga dokumentet och texten när taggarna har tagits bort.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "Returnerar en tabell med Webtrends-statistiköversikt.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Anropar Webtrends KeyMetrics-slutpunkten och returnerar alla data som en tabell.",
        "Documentation.Examples": [
          {
            "Description": "Hämtar en statistiköversiktstabell för klient 98765 under de senaste 30 dagarna",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "En statistiköversiktstabell"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "Ange det profil-ID som är kopplat till ditt Webtrends-konto.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Webtrends-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Anslut till Viva Insights-data",
        "Documentation.LongDescription": "Importera vecko mått- och attributdata veckovis från arbetsyteanalysen.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med synliga attribut och mått per vecka för varje uppmätt anställd i partitionen.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "Returnerar innehållet i XML-dokumentet som en hierarkisk tabell.",
        "Documentation.LongDescription": "Returnerar innehållet i XML-dokumentet som en hierarkisk tabell.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "Returnerar innehållet i XML-dokumentet som en kapslad samling utplattade tabeller.",
        "Documentation.LongDescription": "Returnerar innehållet i XML-dokumentet som en kapslad samling utplattade tabeller.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Hämta innehållet i en lokal XML-fil.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "Ange URL:en för ditt Zendesk-konto.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Zendesk-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "Returnerar schemasamlingen för en ADO.NET-datakälla.",
        "Documentation.LongDescription": "Returnerar schemasamlingen för ADO.NET-datakällan med providernamnet <code>providerName</code> och anslutningssträngen <code>connectionString</code>. <code>connectionString</code> kan vara text eller en post med egenskapsvärdepar. Egenskapsvärdena kan antingen vara text eller siffror. En valfri postparameter, <code>options</code>, kan anges för att specificera ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Ett logiskt (sant/falskt) som fastst&#228;ller om alternativ f&#246;r SQL Server-kompatibla anslutningsstr&#228;ngpar ska skapas f&#246;r Windows-autentisering. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (Beta)",
        "Documentation.Description": "Importera data från en Amazon Redshift-databas.",
        "Documentation.LongDescription": "Returnerar en tabell med tabellerna i Amazon Redshift-klustret <code>server</code> i databasen <code>databas</code>. En valfri postparameter, <code>alternativ</code>, kan anges för att styra följande alternativ:\r\n<ul>\r\n<li><code>Providernamn</code>: Ett textvärde som ska användas som providernamn för anslutningen. Det här används när Microsoft Authentication.</li>\r\n<li><code>Batchstorlek</code>: Antalet rader som hämtas i ett enda anrop till servern.</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Returnerar en tabell med flerdimensionella kuber eller tabellmodeller från Analysis Services-databasen.",
        "Documentation.LongDescription": "Returnerar en tabell med flerdimensionella kuber eller tabellmodeller från Analysis Services-databasen <code>database</code> på servern <code>server</code>. Du kan ange en valfri postparameter, <code>options</code>, om du vill styra följande alternativ:\r\n    <ul>\r\n<li><code>Query</code> : En intern MDX-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data.</li>\r\n<li><code>TypedMeasureColumns</code> : Ett logiskt v&#228;rde som indikerar om den typ som anges i flerdimensions- eller tabellmodellen kommer att anv&#228;ndas f&#246;r de tillagda m&#229;ttkolumnernas typer. N&#228;r det ges v&#228;rdet false anv&#228;nds typen number f&#246;r alla m&#229;ttkolumner. Standardv&#228;rdet f&#246;r det h&#228;r alternativet &#228;r false.</li>\r\n<li><code>Culture</code> : Ett kulturnamn anger datakulturen. Detta motsvarar anslutningsstr&#228;ngsegenskapen Locale Identifier.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>SubQueries</code> : Ett nummer (0, 1 eller 2) som anger v&#228;rdet f&#246;r &quot;SubQueries&quot;-egenskapen i anslutningsstr&#228;ngen. Det h&#228;r styr beteendet f&#246;r ber&#228;knade medlemmar p&#229; delmarkeringar eller subcutes. (Standardv&#228;rdet &#228;r 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Returnerar en tabell som listar tabellerna för det angivna Spark-klustret.",
        "Documentation.LongDescription": "Returnerar en tabell som listar tabellerna i Spark-klustret <code>host</code> med <code>protocol</code>.  Giltiga protokoll är:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell som listar tabellerna för det angivna Spark-klustret.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Ange organisations- och projektnamn.",
        "Documentation.DisplayName": "VSTS. AnalyticsViews",
        "Documentation.Caption": "VSTS. AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (endast kort)",
        "Documentation.LongDescription": "Returnerar en tabell med analysvyer som tillhandahålls av Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Interaktiv HDInsight-fråga",
        "Documentation.Caption": null,
        "Documentation.Description": "Importera data från en interaktiv HDInsight-fråga",
        "Documentation.LongDescription": "\r\nReturnerar en lista med tabeller från en interaktiv HDInsight-fråga som anges av <code>databasen</code> på <code>servern</code> för interaktiva HDInsight-frågor. Om du vill kan du ange ett portnummer med servern, åtskilt med ett kolon. Thrift Transport Protocol är en uppräknad typ med värdena Binary, SASL och HTTP. Du kan ange en valfri <code>alternativparameter</code> om du vill kontrollera följande alternativ: \r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: En varaktighet som anger hur lång väntetiden ska vara innan försöket att ansluta till servern avbryts. Standardvärdet är drivrutinsberoende. </li>\r\n        <li><code>CommandTimeout</code>: En varaktighets som anger hur länge frågan på serversidan tillåts köra innan den avbryts. Standardvärdet är drivrutinsberoende. </li>\r\n</ul>\r\n<code>Alternativparametern</code> anges som [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "Returnerar en tabell med kolumner som har mappats till attribut för en entitet i Common Data Model, inklusive datatyper.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "Returnerar en tabell med kolumner som har mappats till attribut för en entitet i Common Data Model, inklusive datatyper. Kolumner från entitetsdefinitionen läggs till om de inte mappas, och alla omappade kolumner tas bort.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "Retrieve all pages of data",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "Returnerar en kub efter det att en parameter har tillämpats på den.",
        "Documentation.LongDescription": "Returnerar en kub efter att ha tillämpat <code>parameter</code> med <code>arguments</code> på <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "Ändrar dimensionsgranulariteten för kubens filterkontext genom att komprimera attributen som är mappade till de angivna kolumnerna.",
        "Documentation.LongDescription": "Ändrar dimensionsgranulariteten för filterkontexten för <code>cube</code> genom att komprimera attributen som är mappade till de angivna kolumnerna (<code>columnNames</code>). Kolumnerna tas även bort från kubens tabellvy.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Ersätter den uppsättning dimensioner som returneras av Cube.Dimensions.",
        "Documentation.LongDescription": "Ersätter den uppsättning dimensioner som returneras av <code>Cube.Dimensions</code>.\r\n    Den här funktionen kan till exempel användas för att lägga till en ID-kolumn i ett dimensionsattribut, så att datakällan kan grupperas efter ID:t i stället för det visade värdet.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "Tillämpar en lista med kubfunktioner.",
        "Documentation.LongDescription": "Tillämpar en lista med kubfunktioner (<code>transforms</code>) på <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en DB2-databas.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en DB2-databas på servern <code>server</code> i databasinstansen med namnet <code>database</code>. Porten kan också valfritt anges med servern, avgränsat med ett kolon. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n<li><code>Implementation</code> : Anger vilken intern implementering av databasleverant&#246;r som ska anv&#228;ndas. Giltiga v&#228;rden &#228;r: IBM och Microsoft.</li>\r\n<li><code>BinaryCodePage</code> : Ett nummer f&#246;r CCSID (Coded Character Set Identifier) f&#246;r att avkoda DB2 FOR BIT-bin&#228;ra data till teckenstr&#228;ngar. Till&#228;mpas f&#246;r implementeringen = &quot;Microsoft&quot;. Ange 0 f&#246;r att inaktivera konvertering (standard). Ange 1 f&#246;r att konvertera baserat p&#229; databaskodning. Ange ett annat CCSID-nummer f&#246;r att konvertera till programkodning.</li>\r\n<li><code>PackageCollection</code> : Anger ett stringv&#228;rde f&#246;r paketsamling (standard &#228;r NULLID) f&#246;r att aktivera anv&#228;ndning av delade paket som kr&#228;vs f&#246;r att bearbeta SQL-uttryck. G&#228;ller f&#246;r implementeringen = Microsoft.</li>\r\n<li><code>UseDb2ConnectGateway</code> : Anger om anslutningen g&#246;rs via en DB2 Connect-Gateway. G&#228;ller Implementering = &quot;Microsoft&quot;.</li>\r\n</ul>\r\n\r\n    Postparametern anges till exempel som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Hämtar en datamängd från Data.World"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "Returnerar en tabell som innehåller egenskaperna och innehållet för de blobar som påträffats i den angivna containern från ett Azure Storage-valv.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller en rad för varje blobfil som påträffats på containerns webbadress, <code>account</code>, från ett Azure Storage-valv. Varje rad innehåller egenskaper för filen och en länk till dess innehåll.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "Returnerar en tabell som innehåller resultatet av att köra de angivna CSS-väljare mot angiven HTML.",
        "Documentation.LongDescription": "Returnerar en tabell som innehåller resultatet av en körning av de angivna CSS-väljarna mot tillhandahållna <code>html</code>. Ytterligare egenskaper kan anges genom att en valfri postparameter, <code>options</code>, tillhandahålls. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Öppnar data",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell från ett HTML-exempeltextvärde.",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>Ansvarig</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "Extraherar alla hrefar från ett HTML-exempeltextvärde.",
            "Code": "Html.Table(”<a href=\"\"/test.html\"\">Test</a>”, {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en Informix-databas.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en Informix-databas på servern <code>server</code> i databasinstansen <code>database</code>. Du kan också välja att ange porten med servern, avgränsad med ett kolon. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2...] or [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "Returnerar en tabell med leadinformation.",
        "Documentation.LongDescription": "Anropar Marketo REST API-slutpunkten på <code>url</code>/rest/v1/leads.json. Alla leads i listan <code>leadIds</code> returneras.",
        "Documentation.Examples": [
          {
            "Description": "Hämtar information om tre leads",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "En tabell med information om tillhandahållna leads"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "Ange URL:en för den Marketo REST API-slutpunkt som associeras med ditt konto.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Marketo-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller, vyer och lagrade skalärfunktioner som är tillgängliga i en MySQL-databas.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller, vyer och lagrade skalärfunktioner som är tillgängliga i en MySQL-databas på servern <code>server</code> i databasinstansen <code>database</code>. Du kan också välja att ange porten med servern, avgränsad med ett kolon. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>Encoding</code> : Ett TextEncoding-v&#228;rde som anger den teckenupps&#228;ttning som anv&#228;nds f&#246;r att koda alla fr&#229;gor som skickas till servern (standard &#228;r null).</li>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>TreatTinyAsBoolean</code> : En logisk v&#228;rde (sant/falskt) som avg&#246;r om du vill tvinga tinyint-kolumner p&#229; servern som logiska v&#228;rden. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>OldGuids</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om char(36)-kolumner (om falskt) eller binary(16)-kolumner (om sant) kommer att behandlas som GUID. Standardv&#228;rdet &#228;r falskt.</li>\r\n<li><code>ReturnSingleDatabase</code> : En logiskt v&#228;rde (sant/falskt) som anger om du vill returnera alla tabeller i alla databaser (om falskt) eller returnera tabeller och vyer i den angivna databasen (om sant). Standardv&#228;rdet &#228;r falskt.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "Importera data från en IBM Netezza-databas.",
        "Documentation.LongDescription": "\r\nReturnerar en tabell över Netezza-tabeller, vyer och lagrade funktioner från Netezza Server-databasen <code>database</code> på servern <code>server</code>. Porten kan anges med servern åtskilt med ett kolon. En valfri postparameter <code>options</code> kan anges för att styra följande alternativ:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: En logik (sant/falskt) som fastställer om navigeringsegenskaper för de returnerade värdena ska skapas (standardvärdet är sant)</li>\r\n        <li><code>HierarchicalNavigation</code>: En logik (sant/falskt) som fastställer om tabellerna ska visas grupperade efter sina schemanamn (standardvärdet är falskt)</li>\r\n        <li><code>HierarchicalNavigation</code>: En varaktighet som styr väntetiden innan ett försök ska göras för att upprätta en anslutning till servern. Standardvärdet är drivrutinsberoende.</li>\r\n        <li><code>CommandTimeout</code>: En varaktighet som styr hur länge frågan på serversidan tillåts köra innan den avbryts. Standardvärdet är drivrutinsberoende.</li>\r\n<li><code>NormalizeDatabaseName</code>: En logik (sant/falskt) som anger om databasnamn ska normaliseras till versaler eller tolkas i bokstäver (standardvärdet är sant).</li>\r\n</ul>\r\nPostparametern anges som [option1 = value1, option2 = value2...].",
        "Documentation.Examples": [
          {
            "Description": "Lista tabellerna i ett IBM Netezza-projekt.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "Returnerar resultatet för en intern fråga som körs på en ODBC-datakälla.",
        "Documentation.LongDescription": "Returnerar resultatet av att köra <code>query</code> med anslutningssträngen <code>connectionString</code> med ODBC. <code>connectionString</code> kan vara text eller en post med egenskapsvärdepar. Egenskapsvärdena kan antingen vara text eller siffror. En valfri postparameter, <code>options</code>, kan anges för att specificera ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r 15 sekunder.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Ett logiskt (sant/falskt) som fastst&#228;ller om alternativ f&#246;r SQL Server-kompatibla anslutningsstr&#228;ngpar ska skapas f&#246;r Windows-autentisering. Standardv&#228;rdet &#228;r sant.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returnera resultatet av att köra en enkel fråga mot den angivna anslutningssträngen.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "Returnerar resultatet för en intern fråga som körs på en OLE DB-datakälla.",
        "Documentation.LongDescription": "Returnerar resultatet av att köra <code>query</code> med anslutningssträngen <code>connectionString</code> med OLE DB. <code>connectionString</code> kan vara text eller en post med egenskapsvärdepar. Egenskapsvärdena kan antingen vara text eller siffror. En valfri postparameter, <code>options</code>, kan anges för att specificera ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Ett logiskt (sant/falskt) som fastst&#228;ller om alternativ f&#246;r SQL Server-kompatibla anslutningsstr&#228;ngpar ska skapas f&#246;r Windows-autentisering. Standardv&#228;rdet &#228;r sant.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en PostgreSQL-databas.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en PostgreSQL-databas på servern <code>server</code> i databasinstansen <code>database</code>. Du kan också välja att ange porten med servern, avgränsad med ett kolon. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ::\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2 ... ] eller [Query = \"select ... \"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Importera data från ett Snowflake Computing-lager.",
        "Documentation.LongDescription": "Returnerar en tabellista med tabeller i Snowflake Computing <code>warehouse</code> på <code>server</code>. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n<ul>\r\n<li><code>Roll</code>: Ett textvärde som ska användas som rollnamn för anslutningen.</li>\r\n<li><code>CreateNavigationProperties</code>: En logiskt värde (sant/falskt) som fastställer om navigeringsegenskaper för de returnerade värdena ska skapas (standardvärdet är sant).</li>\r\n<li><code>ConnectionTimeout</code>: Antal sekunder att vänta på nätverkssvar från Snowflake.</li>\r\n<li><code>CommandTimeout</code>: Antal sekunder att vänta på att en fråga ska köras.</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Lista tabellerna i ett Snowflake-lager.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Returnerar en tabell som listar tabellerna för det angivna Spark-klustret.",
        "Documentation.LongDescription": "Returnerar en tabell som listar tabellerna i Spark-klustret <code>host</code> med <code>protocol</code>.  Giltiga protokoll är:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Lista tabellerna i en Azure Spark-instans.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller, vyer och lagrade funktioner från SQL Server-databasen.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller, vyer och lagrade funktioner från SQL Server-databasen <code>database</code> på servern <code>server</code>. Du kan också välja att ange porten med servern, avgränsad med ett kolon eller ett kommatecken. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Ett tal som anger v&#228;rdet p&#229; maxdop-fr&#229;gesatsen i den genererade SQL-fr&#229;gan.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n<li><code>MultiSubnetFailover</code> : Ett logiskt v&#228;rde (sant/falskt) som anger v&#228;rdet f&#246;r egenskapen MultiSubnetFailover i anslutningsstr&#228;ngen (standard &#228;r falskt).</li>\r\n<li><code>UnsafeTypeConversions</code> : Ett logiskt v&#228;rde (sant/falskt) som, om det st&#228;lls in p&#229; sant, f&#246;rs&#246;ker delegera typomvandlingar som skulle kunna misslyckas och leda till att hela fr&#229;gan misslyckas. Rekommenderas inte f&#246;r allm&#228;nt bruk.</li>\r\n<li><code>ContextInfo</code> : Ett bin&#228;rt v&#228;rde som anv&#228;nds f&#246;r att ange CONTEXT_INFO innan varje kommando k&#246;rs.</li>\r\n<li><code>OmitSRID</code> : Ett logiskt v&#228;rde (sant/falskt) som, om det &#228;r sant, utesluter SRID n&#228;r WKT skapas fr&#229;n geometri- och geografityper.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Ett logiskt v&#228;rde (sant/falskt) som, om det &#228;r sant, till&#229;ter fr&#229;gedelegering av databaser p&#229; samma server. Standardv&#228;rdet &#228;r falskt.</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en Sybase-databas.",
        "Documentation.LongDescription": "Returnerar en tabell med SQL-tabeller och vyer som är tillgängliga i en Sybase-databas på servern <code>server</code> i databasinstansen <code>database</code>. Du kan också välja att ange porten med servern, avgränsad med ett kolon. En valfri postparameter, <code>options</code>, kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion som anv&#228;nds f&#246;r att skapa namn f&#246;r navigeringsegenskaper.</li>\r\n<li><code>Query</code> : En intern SQL-fr&#229;ga som anv&#228;nds f&#246;r att h&#228;mta data. Om fr&#229;gan producerar flera resultatupps&#228;ttningar, s&#229; returneras enbart den f&#246;rsta.</li>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>ConnectionTimeout</code> : En varaktighet som styr v&#228;ntetiden innan ett f&#246;rs&#246;k ska g&#246;ras f&#246;r att uppr&#228;tta en anslutning till servern. Standardv&#228;rdet &#228;r drivrutinsberoende.</li>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n</ul>\r\n\r\n    Postparametern anges exempelvis som [option1 = value1, option2 = value2 ... ] eller [Query = \"select ... \"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "Lägger till en kolumn med explicita positionsvärden.",
        "Documentation.LongDescription": "Lägger till en kolumn med namnet <code>newColumnName</code> i <code>table</code> med explicita positionsvärden.\r\n    Ett valfritt värde, <code>initialValue</code>, som anger det ursprungliga indexvärdet. Ett valfritt värde, <code>increment</code>, anger med hur mycket varje indexvärde ska öka.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lägg till en indexkolumn med namnet \"Index\" i tabellen.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "Lägg till en indexkolumn med namnet \"index\", som börjar med värdet 10 och som ökar med 5, i tabellen.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "Skapa en kopia av en rad för varje värde i dess lista baserat på en kolumn med listor i en tabell.",
        "Documentation.LongDescription": "Baserat på en <code>table</code>, där en <code>column</code> är en lista med värden, delas listan upp i en rad för varje värde. Värdena i de övriga kolumnerna dupliceras i varje ny rad som skapas.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Dela upp listkolumnen [Name] i tabellen.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "Sprider värdet från en föregående cell till cellerna med null-värden nedanför i kolumnen.",
        "Documentation.LongDescription": "Returnerar en tabell från angiven <code>table</code> där föregående cells värde sprids till cellerna med null-värden nedanför i angiven <code>columns</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Returnera en tabell med null-värdena i kolumnen [Place] som fyllts med värdet ovanför dem från tabellen.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "Sprider värdet från en cell till cellerna med null-värden ovanför i kolumnen.",
        "Documentation.LongDescription": "Returnerar en tabell från angiven <code>table</code> där nästa cells värde sprids till cellerna med null-värden ovanför i angiven <code>columns</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Returnera en tabell med null-värdena i kolumnen [Column2] som fyllts med värdet nedanför dem från tabellen.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "Returnerar alla raderna som innehåller angiven text i tabellen.",
        "Documentation.LongDescription": "Returnerar raderna i tabellen <code>table</code> som innehåller texten <code>text</code>. Om texten inte hittas returneras en tom tabell.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta de rader i tabellen som innehåller Bob.",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "Returnerar så många första rader som angetts.",
        "Documentation.LongDescription": "Returnerar den eller de första raderna i tabellen <code>table</code>, beroende på värdet för <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Om <code>countOrCondition</code> är ett tal returneras så många rader (med början ovanifrån). </li>\r\n    <li> Om <code>countOrCondition</code> är ett villkor returneras de rader som uppfyller villkoret tills en rad inte uppfyller villkoret.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta de två första raderna i tabellen.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Hitta de första raderna där [a] > 0 i tabellen.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "Returnerar en tabell som är resultatet av sammanslagningen av en uppsättning partitionerade tabeller.",
        "Documentation.LongDescription": "Returnerar en tabell som är resultatet av en kombination av en uppsättning partionerade tabeller, <code>partitions</code>. <code>partitionColumn</code> är namnet på den kolumn som ska läggas till. Kolumntypen har standardvärdet <code>any</code>, men kan specificeras med <code>partitionColumnType</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta objekttypen i listan <code>{number}</code>.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "Returnerar det sista angivna antalet rader.",
        "Documentation.LongDescription": "Returnerar den eller de sista raderna från tabellen <code>table</code>, beroende på värdet för <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Om <code>countOrCondition</code> är ett tal returneras så många rader med början från positionen (slutet - <code>countOrCondition</code>). </li>\r\n    <li> Om <code>countOrCondition</code> är ett villkor returneras de rader som uppfyller villkoret i stigande ordning tills en rad inte uppfyller villkoret.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta de två sista raderna i tabellen.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Hitta de sista raderna där [a] > 0 i tabellen.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "Returnerar en tabell där alla kolumnerna föregås av angiven text.",
        "Documentation.LongDescription": "Returnerar en tabell där alla angivna kolumnnamn från <code>table</code> föregås av angiven text, <code>prefix</code>, plus en punkt i formatet <code>prefix</code><code>.ColumnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Lägg till \"MyTable\" som prefix i tabellen.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "Returnerar raderna som börjar vid angiven förskjutning.",
        "Documentation.LongDescription": "Returnerar raderna från <code>table</code> med början vid angiven <code>offset</code>. En valfri parameter, <code>count</code>, anger hur många rader som ska returneras. Som standard returneras alla rader efter förskjutningen.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Returnera alla rader som börjar vid förskjutningen 1 i tabellen.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Returnera den rad som börjar vid förskjutningen 1 i tabellen.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "Tar bort de angivna kolumnerna.",
        "Documentation.LongDescription": "Tar bort den angivna <code>columns</code> från den angivna <code>table</code>.\r\n    Om den angivna kolumnen inte finns utlöses ett fel om inte den valfria parametern <code>missingField</code> anger ett alternativt beteende (till exempel <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort kolumnen [Phone] från tabellen.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Försök att ta bort en kolumn som inte finns från tabellen.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "Tar bort alla förekomster av de angivna raderna från tabellen.",
        "Documentation.LongDescription": "Tar bort alla förekomster av den angivna <code>rows</code> från <code>table</code>.\r\n    En valfri parameter <code>equationCriteria</code> kan anges för att hantera jämförelsen mellan raderna i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Ta bort alla rader där [a = 1] från tabellen <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code>.",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "Tar bort angivet antal rader.",
        "Documentation.LongDescription": "Tar bort <code>count</code> rader från början av <code>table</code>, med början vid angiven <code>offset</code>. Standardantalet 1 används om parametern <code>count</code> inte anges. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort den första raden från tabellen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ta bort raden vid position 1 från tabellen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ta bort två rader med början vid position 1 från tabellen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "Tillämpar namnbyten i formatet {old, new}.",
        "Documentation.LongDescription": "Genomför angivna namnbyten på kolumnerna i tabellen <code>table</code>. En ersättningsåtgärd, <code>renames</code>, består av en lista med två värden, det gamla kolumnnamnet och det nya kolumnnamnet, som anges i en lista.\r\n    Om kolumnen inte finns genereras ett undantag såvida inte den valfria parametern <code>missingField</code> anger ett alternativ (t.ex. <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ersätt kolumnnamnet CustomerNum med CustomerID i tabellen.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Ersätt kolumnnamnet CustomerNum med CustomerID och PhoneNum med Phone i tabellen.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Ersätt kolumnnamnet NewCol med NewColumn i tabellen och ignorera om kolumnen inte finns.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "Returnerar en tabell med kolumnerna i angiven ordning.",
        "Documentation.LongDescription": "Returnerar en tabell från indata, <code>table</code>, med kolumnerna i ordningen som anges av <code>columnOrder</code>. Ordningen för kolumner som inte anges i listan ändras inte.\r\n     Om kolumnen inte finns genereras ett undantag såvida inte den valfria parametern <code>missingField</code> anger ett alternativ (t.ex. <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Byt ordning på kolumnerna [Phone] och [Name] i tabellen.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Byt ordning på kolumnerna [Phone] och [Address] eller använd MissingField.Ignore i tabellen. Den ändrar inte tabellen eftersom kolumnen [Address] inte finns.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "Upprepar raderna i tabellen angivet antal gånger.",
        "Documentation.LongDescription": "Returnerar en tabell där raderna från angivna indata, <code>table</code>, upprepas <code>count</code> gånger.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Upprepar raderna i tabellen två gånger.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "Ersätter felvärdena i de angivna kolumnerna med motsvarande angivet värde.",
        "Documentation.LongDescription": "Ersätter felvärdena i de angivna kolumnerna i <code>table</code> med de nya värdena i listan <code>errorReplacement</code>. Listans format är {{column1, value1}, …}. Det får bara finnas ett ersättningsvärde per kolumn. Om kolumnen specificeras mer än en gång genereras ett fel.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ersätt felvärdet med texten \"världen\" i tabellen.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "Ersätt felvärdet i kolumn A med texten \"hej\" och i kolumn B med texten \"världen\" i tabellen.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "Ersätter nycklarna i den angivna tabellen.",
        "Documentation.LongDescription": "Ersätter nycklarna i den angivna tabellen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ersätt de befintliga nycklarna i en tabell.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "Ersätter alla angivna rader med den eller de angivna raderna.",
        "Documentation.LongDescription": "Ersätter alla specificerade rader i <code>table</code> med de som angivits. Raderna som ska ersättas och ersättningarna anges i <code>replacements</code> i formatet {old, new}.\r\n    En valfri <code>equationCriteria</code>-parameter kan anges för att styra jämförelsen mellan raderna i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Ersätt raderna [a = 1, b = 2] och [a = 2, b = 3] med [a = -1, b = -2],[a = -2, b = -3] i tabellen.",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "Returnerar en tabell med bara de angivna kolumnerna.",
        "Documentation.LongDescription": "Returnerar <code>table</code> med bara angivna <code>columns</code>.\r\n    <ul>\r\n       <li><code>table</code>: Den angivna tabellen.</li>\r\n       <li><code>columns</code>: Den lista med kolumner från tabellen <code>table</code> som ska returneras. Kolumnerna i den returnerade tabellen visas i ordningen som anges i <code>columns</code>.</li>\r\n       <li><code>missingField</code>: <i>(Valfritt)</i> Vad som ska göras om kolumnen inte finns. Exempel: <code>MissingField.UseNull</code> or <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Inkludera bara kolumnen [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "Inkludera bara kolumnerna [CustomerID] och [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Om den inkluderade kolumnen inte avslutas blir standardresultatet ett fel.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "Om den inkluderade kolumnen inte avslutas skapar alternativet <code>MissingField.UseNull</code> en kolumn med null-värden.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "Markerar de rader som uppfyller villkorsfunktionen.",
        "Documentation.LongDescription": "Returnerar en tabell med rader från <code>table</code> som matchar <code>condition</code> som valts.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Markera de rader i tabellen där värdena i kolumnen [CustomerID] är större än 2.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Markera de rader i tabellen där namnen inte innehåller något B.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "Sorterar tabellen baserat på ett eller flera kolumnnamn och jämförelsevillkor.",
        "Documentation.LongDescription": "Sorterar <code>table</code> baserat på listan med ett eller flera kolumnnamn och valfri <code>comparisonCriteria</code> i formatet { { col1, comparisonCriteria }, {col2} }.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Sortera tabellen efter kolumnen OrderID.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "Sortera tabellen efter kolumnen OrderID i fallande ordning.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "Sortera tabellen efter kolumnen CustomerID och sedan OrderID, med CustomerID i stigande ordning.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "Transformerar kolumnnamn genom att använda den givna funktionen.",
        "Documentation.LongDescription": "Transformerar kolumnnamn genom att använda den givna <code>nameGenerator</code>-funktionen. Giltiga alternativ:\r\n    <div>\r\n      <code>MaxLength</code> anger maxlängden för nya kolumnnamn. Om den givna funktionen resulterar i ett längre kolumnnamn kommer det långa namnet att trimmas.\r\n    </div>\r\n    <div>\r\n      <code>Comparer</code> används för att styra jämförelsen samtidigt som nya kolumnnamn genereras. Jämförelsefunktioner kan användas för att tillhandahålla skiftlägesokänsliga eller kultur- och språkmedvetna jämförelser.\r\n    </div>\r\n    <div>\r\n      Följande inbyggda jämförelsefunktioner är tillgängliga i formelspråket:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: Används för att genomföra en exakt ordningstalsjämförelse</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: Används för att genomföra en exakt skiftlägesokänslig ordningstalsjämförelse</li>\r\n      <li> <code>Comparer.FromCulture</code>: Används för att genomföra en kulturmedveten jämförelse</li>\r\n\\r\\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort <code>#(tab)</code>-tecknet från kolumnnamn",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "Ändra kolumnnamn för att generera skiftlägesokänsliga namn med längden 6.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "Tillämpar typtransformeringar i formatet { column, type } med hjälp av en specifik kultur.",
        "Documentation.LongDescription": "Returnerar en tabell från angivna indata, <code>table</code>, genom att köra transformeringsåtgärden på kolumnerna som anges i parametern <code>typeTransformations</code> (där formatet är { column name, type name}) med hjälp av den angivna kulturen i parametern <code>culture</code> (till exempel, \"en-US\").\r\n    Om kolumnen inte finns genereras ett undantag.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Transformera de numeriska värdena i kolumnen [a] till textvärden från tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "Omvandlar värdena för en eller flera kolumner.",
        "Documentation.LongDescription": "Omvandlar <code>table</code> genom att tillämpa varje kolumnåtgärd som listas i <code>transformOperations</code> (där formatet är { column name, transformation } eller { column name, transformation, new column type }).\r\n    Om en <code>defaultTransformation</code> anges tillämpas den på alla kolumner som inte är listade i <code>transformOperations</code>.\r\n    Om en kolumn i <code>transformOperations</code> inte finns genereras ett undantag om inte den valfria parametern <code>missingField</code> anger ett alternativ (t.ex. <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Omvandla textvärdena i kolumnen [A] till talvärden och talvärdena i kolumnen [B] till textvärden.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "Omvandla de numeriska värdena i den saknade kolumnen [X] till textvärden, och ignorera kolumner som inte finns.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "Omvandla talvärdena i den saknade kolumnen [X] till textvärden, där null används som standard för kolumner som inte finns.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "Öka talvärdena i kolumnen [B] och omvandla dem till textvärden och omvandla alla andra kolumner till tal.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "Skapar eller utvidgar en tabell med användardefinierade hanterare för fråge- och åtgärdsåtgärder.",
        "Documentation.LongDescription": "<p>Returnerar en vy över <code>table</code> där de funktioner som specificerats i <code>handlers</code> används i stället för en åtgärds standardbeteende när åtgärden tillämpas på vyn.</p>\r\n<p>Om <code>table</code> anges, är alla hanteringsfunktioner valfria. Om <code>table</code> inte anges krävs funktionerna <code>GetType</code> och <code>GetRows</code>. Om har angetts för en åtgärd tillämpas åtgärdens standardbeteende på <code>table</code> i stället (undantaget när det gäller <code>GetExpression</code>).</p>\r\n<p>Hanterarfunktioner måste returnera ett värde som semantiskt motsvarar resultatet av att tillämpa åtgärden på <code>table</code> (eller den resulterande vyn när det gäller <code>GetExpression</code>).</p>\r\n<p>Om en hanterarfunktion meddelar ett fel tillämpas åtgärdens standardbeteende på vyn.</p>\r\n<p><code>Table.View</code> kan användas för att implementera vikning på en datakälla – översättningen av M-frågor till källspecifika frågor (t.ex. för att skapa T-SQL-instruktioner från M-frågor).</p>\r\n<p>En mer fullständig beskrivning av <code>Table.View</code> finns i den publicerade dokumentationen.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Skapa en grundläggande vy som inte kräver åtkomst till raderna för att fastställa typ eller radantal.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Ange organisations- och projektnamn.",
        "Documentation.DisplayName": "VSTS. AnalyticsViews",
        "Documentation.Caption": "VSTS. AnalyticsViews",
        "Documentation.Name": "Azure-DevOps (endast kort)",
        "Documentation.LongDescription": "Returnerar en tabell med analysvyer som tillhandahålls av Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Importera data från Vertica",
        "Documentation.LongDescription": "Returnerar en tabell med scheman som är tillgängliga på servern som namnges av <code>server</code>parametern i databasen som namnges av <code>databas</code>parametern.\r\nEn valfri post-parameter <code>alternativ</code>, kan tillhandahållas för att ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n<ul> <li> <code>ConnectionTimeout</code>: en varaktighet som anger hur lång väntan ska vara innan försök att ansluta till servern avbryts. Standardvärdet är drivrutinsberoende. </li> <li> <code>CommandTimeout </code>: en varaktighet som anger hur länge servern frågan kan köras innan den avbryts. Standardvärdet är drivrutinsberoende.\r\n    \r\n    </li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "Lista tabellerna i Vertica"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "Returnerar en tabell med rapportinnehåll från Webtrends.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "Anropar den givna Webtrends-rapportslutpunkten och returnerar alla data som en tabell.",
        "Documentation.Examples": [
          {
            "Description": "Anropar Webtrends-besökarnas rapportslutpunkt för data under de senaste 30 dagarna",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "En besöksdatatabell"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "Returnerar en lista över Active Directory-domäner i samma skog som den angivna domänen eller i den aktuella datorns domän om ingen anges.",
        "Documentation.LongDescription": "Returnerar en lista över Active Directory-domäner i samma skog som den angivna domänen eller i den aktuella datorns domän om ingen anges.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "Returnerar resultatet för en intern fråga som körs på en ADO.NET-datakälla.",
        "Documentation.LongDescription": "Returnerar resultatet av att köra <code>query</code> med anslutningssträngen <code>connectionString</code> med ADO.NET-providern <code>providerName</code>. <code>connectionString</code> kan vara text eller en post med egenskapsvärdepar. Egenskapsvärdena kan antingen vara text eller siffror. En valfri postparameter, <code>options</code>, kan anges för att specificera ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : En varaktighet som styr hur l&#228;nge fr&#229;gan p&#229; serversidan till&#229;ts k&#246;ra innan den avbryts. Standardv&#228;rdet &#228;r tio minuter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Ett logiskt (sant/falskt) som fastst&#228;ller om alternativ f&#246;r SQL Server-kompatibla anslutningsstr&#228;ngpar ska skapas f&#246;r Windows-autentisering. Standardv&#228;rdet &#228;r sant.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "Returnerar rapportsviterna i Adobe Analytics.",
        "Documentation.LongDescription": "Returnerar en tabell med flerdimensionella paket från Adobe Analytics. Du kan ange en valfri postparameter, <code>options</code>, om du vill styra följande alternativ:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : Ett logiskt v&#228;rde (sant/falskt) som anger om du vill visa vilka tabeller som &#228;r grupperade efter schemanamn (standard &#228;r falskt).</li>\r\n<li><code>MaxRetryCount</code> : Det antal &#229;terf&#246;rs&#246;k som ska utf&#246;ras n&#228;r en avs&#246;kning g&#246;rs f&#246;r fr&#229;gans resultat. Standardv&#228;rdet &#228;r 120.</li>\r\n<li><code>RetryInterval</code> : Varaktigheten mellan &#229;terf&#246;rs&#246;k. Standardv&#228;rdet &#228;r 1 sekund.</li>\r\n<li><code>Implementation</code> : Anger Adobe Analytics API-version. Giltiga v&#228;rden: 2.0. Standardv&#228;rdet &#228;r API-version 1.4.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Hive LLAP",
        "Documentation.Caption": null,
        "Documentation.Description": "Importera data från en Hive-LLAP",
        "Documentation.LongDescription": "\r\nReturnerar en lista med tabeller från Hive LLAP som anges av <code>databasen</code> på Hive LLAP-<code>servern</code> med hjälp av det valda <code>protokollet</code>. Om du vill kan du ange ett portnummer med servern, åtskilt med ett kolon. Thrift Transport Protocol är en uppräknad typ med värdena Standard, HTTP. Du kan ange en valfri <code>alternativ</code>parameter om du vill kontrollera följande alternativ:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: En varaktighet som anger hur lång väntetiden ska vara innan försöket att ansluta till servern avbryts. Standardvärdet är drivrutinsberoende.</li>\r\n        <li><code>CommandTimeout</code>: En varaktighet som anger hur länge frågan på serversidan tillåts köra innan den avbryts. Standardvärdet är drivrutinsberoende.</li>\r\n</ul>\r\n<code>Alternativ</code>parametern anges som [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta sammanfattningsdata mellan 2017-05-01 till 2017-06-15",
            "Code": "låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          resultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)   \r\n      i\r\n          resultat",
            "Result": "Funktionen kommer att returnera sammanfattningsdata mellan 2017-05-01 och 2017-06-15"
          },
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta sammanfattningsdata för april 2017.",
            "Code": "låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          resultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)   \r\n      i\r\n          resultat",
            "Result": "Funktionen kommer att returnera data mellan 2017-04-01 och 2017-04-30"
          },
          {
            "Description": "Om vi antar att idag är 2017-06-15, hämta sammanfattningsdata från april 2017 fram tills nu.",
            "Code": "låt    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Sammanfattningar\" ],\r\n          resultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)   \r\n      i\r\n          resultat",
            "Result": "Funktionen kommer att returnera data mellan 2017-04-01 och 2017-06-15"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "Ange organisations- och projektnamn.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps-tjänster",
        "Documentation.LongDescription": "Returnerar en tabell med OData-flöden som erbjuds av Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "Anslut till Dataverse-instansen (Dynamics 365 och PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "Slår ihop den angivna dimensionstabellen med kubens filterkontext och ändrar filterkontextens dimensionsgranularitet genom att expandera den angivna uppsättningen med dimensionsattribut.",
        "Documentation.LongDescription": "Slår ihop den angivna dimensionstabellen (<code>dimensionSelector</code>) med kubens (<code>cube</code>) filterkontext och ändrar filterkontextens dimensionsgranularitet genom att expandera den angivna uppsättningen (<code>attributeNames</code>) med dimensionsattribut. Dimensionsattributen läggs till i tabellvyn med kolumner namngivna <code>newColumnNames</code>, eller <code>attributeNames</code> om inget anges.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "Lägger till en kolumn i kuben som innehåller resultatet av måttet som tillämpats i radkontexten för varje rad.",
        "Documentation.LongDescription": "Lägger till en kolumn med namnet <code>column</code> i <code>cube</code> som innehåller resultatet av måttet (<code>measureSelector</code>) som tillämpats i radkontexten för varje rad. Måttillämpning påverkas av ändringar i dimensionsgranularitet och uppdelning. Måttvärden justeras efter att vissa kubåtgärder utförs.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "Ange Dynamics 365 Business Central-miljö och -företag.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Dynamics 365 Business Central-data. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "Ange Dynamics 365 Business Central-miljö och -företag.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Dynamics 365 Business Central-data. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "Ange Dynamics 365 Business Central-miljö och -företag.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Dynamics 365 Business Central-data. "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "Ange Dynamics 365 Business Central-miljö och -företag.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerar en tabell med relevanta Dynamics 365 Business Central-data. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "Returnerar innehållet i den aktuella Excel-arbetsboken.",
        "Documentation.LongDescription": "Returnerar innehållet i den aktuella Excel-arbetsboken. Den returnerar tabeller, namngivna områden och dynamiska matriser. Till skillnad från <code>Excel.Workbook</code> returneras inte blad.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Returnerar en innehållsförteckning från ett Microsoft Exchange-konto.",
        "Documentation.LongDescription": "Returnerar en tabell med innehållet från Microsoft Exchange-kontot <code>mailboxAddress</code>. Om <code>mailboxAddress</code> inte har angetts används standardkontot för de autentiseringsuppgifter som används.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Warehouse",
        "Documentation.Caption": "Warehouse",
        "Documentation.Description": "Importerar data från Warehouse",
        "Documentation.LongDescription": "Importerar data från Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Returnerar Google Analytics-konton.",
        "Documentation.LongDescription": "Returnerar Google Analytics-konton som är tillgängliga med de aktuella autentiseringsuppgifterna.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Importera data från en Google BigQuery-databas.",
        "Documentation.LongDescription": "\r\n      Returnerar en tabell med tillgängliga projekt i Google BigQuery. En valfri postparameter <code>options</code> kan anges för att styra följande alternativ:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: En varaktighet som styr väntetiden innan ett försök ska göras för att upprätta en anslutning till servern. Standardvärdet är värdet för ODBC-anslutningstidsgräns.</li>\r\n        <li><code>CommandTimeout</code>: En varaktighet som styr hur länge frågan på serversidan tillåts köra innan den avbryts.</li>\r\n        <li><code>BillingProject</code>: ID för faktureringsprojekt. Standardvärdet är det första tillgängliga projektet.</li>\r\n        <li><code>UseStorageApi</code>: Anger huruvida BigQuery Storage-API ska användas för stora resultatmängder. Standardvärdet är sant för användning av Storage-API. Ställ in det på falskt om du inte vill använda Storage-API</li>\r\n      </ul>\r\n    Postparametern anges som [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Lista tillgängliga projekt i Google BigQuery",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Lakehouse",
        "Documentation.Caption": "Importera data från ett Lakehouse",
        "Documentation.Description": "Importera data från ett Lakehouse",
        "Documentation.LongDescription": "Anslut till alla Lakehouses som du har åtkomst till och välj de entiteter som du vill använda"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "Returnerar en tabell med viktig MailChimp-data.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "Returnerar en tabell med viktig MailChimp-data.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med viktig MailChimp-data.",
            "Code": "MailChimp.Tables()",
            "Result": "En tabell med viktig MailChimp-data."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "Returnerar en tabell med huvudaktiviteter.",
        "Documentation.LongDescription": "Anropar Marketo REST API-slutpunkten på <code>url</code>/rest/v1/activities.json. Alla aktiviteter i listan <code>activityIds</code> som har inträffat sedan <code>startTime</code> returneras.",
        "Documentation.Examples": [
          {
            "Description": "Hämtar en tabell över webbplatsbesöksaktiviteter sedan den 1 november 2015",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "En tabell med information om alla webbplatsbesöksaktiviteter sedan den 1 november"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"välj * från PV_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Power BI dataflöden (legacy)",
        "Documentation.Caption": "Importera data från ett Power BI-dataflöde",
        "Documentation.LongDescription": "Anslut till alla Power BI-dataflöden som du har åtkomst till och välj de enheter som du vill använda."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Dataförråd",
        "Documentation.Caption": "Dataförråd",
        "Documentation.Description": "Importerar data från Dataförråd",
        "Documentation.LongDescription": "Importerar data från Dataförråd"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "Dataflöden",
        "Documentation.Caption": "Importera data från ett dataflöde",
        "Documentation.Description": "Importera data från ett dataflöde",
        "Documentation.LongDescription": "Anslut till alla dataflöden som du har åtkomst till och välj de enheter som du vill använda."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "Importera data från QuickBooks Online.",
        "Documentation.LongDescription": "\r\n      Returnerar en tabell som listar tillgängliga tabeller i QuickBooks Online. En valfri postparameter, <code>options</code>, kan anges för att kontrollera följande alternativ:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: En varaktighet som kontrollerar hur länge man ska vänta innan man överger ett försök att ansluta till servern.</li>\r\n        <li><code>CommandTimeout</code>: En varaktighet som kontrollerar hur länge som en fråga på serversidan ska få köras innan den avbryts.</li>\r\n      </ul>\r\n    Postparametern anges som [option1 = value1, option2 = value2...].\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "Returnerar objekten från Salesforce-kontot.",
        "Documentation.LongDescription": "Returnerar objekten för det Salesforce-konto som tillhandahållits i autentiseringsuppgifterna. Kontot ansluts genom den tillhandahållna miljön <code>loginUrl</code>. Om ingen miljö tillhandahålls ansluter kontot till produktionen (https://login.salesforce.com). Du kan tillhandahålla en valfri postparameter, <code>options</code>, om du vill ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Ett logiskt v&#228;rde (sant/falskt) som anger huruvida navigeringsegenskaper ska genereras f&#246;r returnerade v&#228;rden eller inte (standard &#228;r sant).</li>\r\n<li><code>ApiVersion</code> : Den Salesforce API-version som ska anv&#228;ndas f&#246;r den h&#228;r fr&#229;gan. Om n&#229;gon s&#229;dan inte anges s&#229; anv&#228;nds API-version 29.0 is.</li>\r\n<li><code>Timeout</code> : En varaktighet som styr hur l&#229;ng tid som ska g&#229; innan f&#246;rfr&#229;gan till servern avbryts. Standardv&#228;rdet &#228;r k&#228;llspecifikt.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "Returnerar rapporterna från Salesforce-kontot.",
        "Documentation.LongDescription": "Returnerar rapporterna för det Salesforce-konto som tillhandahållits i autentiseringsuppgifterna. Kontot ansluts genom den tillhandahållna miljön <code>loginUrl</code>. Om ingen miljö tillhandahålls ansluter kontot till produktionen (https://login.salesforce.com). Du kan tillhandahålla en valfri postparameter, <code>options</code>, om du vill ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Den Salesforce API-version som ska anv&#228;ndas f&#246;r den h&#228;r fr&#229;gan. Om n&#229;gon s&#229;dan inte anges s&#229; anv&#228;nds API-version 29.0 is.</li>\r\n<li><code>Timeout</code> : En varaktighet som styr hur l&#229;ng tid som ska g&#229; innan f&#246;rfr&#229;gan till servern avbryts. Standardv&#228;rdet &#228;r k&#228;llspecifikt.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "Returnerar InfoCubes och frågor i ett SAP Business Warehouse-system grupperat efter InfoArea.",
        "Documentation.LongDescription": "Returnerar en tabell med InfoCubes och frågor grupperade efter InfoArea från en SAP Business Warehouse-instans på servern <code>server</code> med systemnummer <code>systemNumberOrSystemId</code> och klient-ID <code>clientId</code>. Du kan ange en valfri postparameter, <code>optionsOrLogonGroup</code>, om du vill styra följande alternativ:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Returnerar en tabell med blad, rapporter, mappar och arbetsytor från Smartsheet-API:et",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Returnerar en kapslad tabell med tillgängliga blad, rapporter, mappar och arbetsytor från Smartsheet-API:et.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar blad, mappar, rapporter och arbetsytor på toppnivå i Smartsheet-hierarkin",
            "Code": "Smartsheet.Tables()",
            "Result": "En tabell med blad, mappar, rapporter och arbetsytor på toppnivå i Smartsheet-hierarkin"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "Returnerar en tabell över tillgängliga mått från SparkPost API v1",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "Den här funktionen kan användas för att hämta data från en viss Mått-slutpunkt för SparkPost API v1. När du uppdaterar de här tabellerna eller anropar SparkPost API:et med den här anslutningsappen så bör du tänka på att SparkPost API:et har en strikt hastighetsbegränsning. Om du ser statuskod 429 returnerad från SparkPost-servern så har du uppnått hastighetsgränsen och behöver vänta en stund innan du gör några fler anrop. När du väljer ett värde för parametern Antal dagar så bör du observera att API:et endast lagrar 6 månaders data.",
        "Documentation.Examples": [
          {
            "Description": "Hämtar levererbarhetsmått för count_sent och count_rejected för alla campaign_ids sammanställt för de senaste tre dagarna.",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "tabell"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "Anropar Stripe-API:et.",
        "Documentation.LongDescription": "Anropar Stripe-API:et på https://api.stripe.com/v1/<code>method</code>, med den alternativa posten <code>additionalParameters</code> överförd som extra parametrar och listan <code>ColumnNames</code> med förväntade kolumnnamn. Stripe-version 2015-10-16 används.",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en tabell med händelser skapade efter den 1 november 2015",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "En tabell med de angivna händelserna för det aktuella Stripe-kontot"
          },
          {
            "Description": "Returnerar en tabell med alla SKU:er",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "En tabell med alla SKU:er för det aktuella Stripe-kontot"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "Returnerar en tabell med tillgängliga Stripe-tabeller och funktioner.",
        "Documentation.LongDescription": "Returnerar en tabell med tillgängliga Stripe-tabeller och funktioner."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Synapse Analytics-arbetsyta",
        "Documentation.Caption": "Azure Synapse Analytics-arbetsyta",
        "Documentation.LongDescription": "PQ-anslutningsprogram för Azure Synapse Analytics arbetsyta",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "Lägger till en kolumn med angivet namn. Värdet beräknas med den angivna valfunktionen där varje rad används som indata.",
        "Documentation.LongDescription": "Lägger till en kolumn med namnet <code>newColumnName</code> i tabellen <code>table</code>. Värdena för kolumnen beräknas med den angivna valfunktionen <code>columnGenerator</code> där varje rad används som indata.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lägg till en talkolumn med namnet \"TotalPrice\" i tabellen, där varje värde är summan av kolumnerna [Pris] och [Frakt].",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "Lägger till en ny kolumn med representativa värden som uppnås genom att fuzzy-gruppera värden i den angivna kolumnen i tabellen.",
        "Documentation.LongDescription": "Lägger till en ny kolumn <code>newColumnName</code> i <code>table</code> med representativa värden för <code>columnName</code>. Representativa värden uppnås genom att en partiell matchning utförs av värdena i <code>columnName</code> för varje rad.\r\n    <p>En valfri uppsättning av <code>options</code> kan användas för att ange hur nyckelkolumnerna ska jämföras. Alternativen är:\r\n    <ul>\r\n<li><code>Culture</code> : G&#246;r att poster kan grupperas tillsammans baserat p&#229; kulturspecifika regler. Det kan vara vilket giltigt kulturnamn som helst. Kulturalternativet ja-JP grupperar till exempel poster baserat p&#229; den japanska kulturen. Standardv&#228;rdet &#228;r &quot;&quot;, vilket grupperar utifr&#229;n den invarianta engelska kulturen.</li>\r\n<li><code>IgnoreCase</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att du kan utf&#246;ra icke-skiftl&#228;gesk&#228;nsliga grupperingar. N&#228;r det &#228;r sant grupperas till exempel Druvor tillsammans med druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>IgnoreSpace</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att du kan kombinera textdelar f&#246;r att hitta grupperingar. N&#228;r det &#228;r sant grupperas till exempel Dru vor tillsammans med Druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>SimilarityColumnName</code> : Ett namn p&#229; kolumnen som visar likheten mellan ett indatav&#228;rde och det representativa v&#228;rdet f&#246;r den inmatningen. Standardv&#228;rdet &#228;r null vilket inneb&#228;r att ingen ny kolumn f&#246;r likheter kommer att l&#228;ggas till.</li>\r\n<li><code>Threshold</code> : Ett tal mellan 0,00 och 1,00 som anger likhetspo&#228;ngen d&#228;r tv&#229; v&#228;rden ska grupperas.\r\n    &quot;Vindruvor&quot; och &quot;Vindruor&quot; (som saknar &quot;v&quot;) grupperas bara tillsammans om det h&#228;r alternativet &#228;r inst&#228;llt p&#229; mindre &#228;n 0,90.\r\n    Ett tr&#246;skelv&#228;rde p&#229; 1,00 till&#229;ter bara exakta matchningar.\r\n    (Observera att en fuzzy &quot;exakt matchning&quot; kan ignorera skillnader som skiftl&#228;ge, ordordning och skiljetecken.)\r\n    Standardv&#228;rdet &#228;r 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabell d&#228;r poster kan grupperas baserat p&#229; anpassade v&#228;rdemappningar. Den m&#229;ste inneh&#229;lla kolumnerna Fr&#229;n och Till. Druvor grupperas till exempel med Russin om en omvandlingstabell har angetts d&#228;r Fr&#229;n-kolumnen inneh&#229;ller Druvor och Till-kolumnen inneh&#229;ller Russin. Observera att omvandlingen till&#228;mpas p&#229; alla f&#246;rekomster av texten i omvandlingstabellen. Med ovanst&#229;ende omvandlingstabell grupperas &#228;ven Druvor &#228;r s&#246;ta, med Russin &#228;r s&#246;ta.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Hitta representativa värden för medarbetarnas platsinformation.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "Skapar en koppling mellan tabeller för angivna kolumner och genererar kopplingsresultatet i en ny kolumn.",
        "Documentation.LongDescription": "Kopplar raderna i <code>table1</code> med raderna i <code>table2</code> baserat på likheten mellan värdena i nyckelkolumnerna som valts av <code>key1</code> (för <code>table1</code>) och <code>key2</code> (för <code>table2</code>). Resultatet anges i kolumnen med namnet <code>newColumnName</code>.\r\nDen här funktionen fungerar ungefär som Table.Join med JoinKind-typen LeftOuter förutom att kopplingsresultatet visas i kapslat format i stället för i platt format.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lägg till en kopplingskolumn i ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) med namnet \"price/stock\" från tabellen ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) som är kopplad via [saleID].",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "Lägger till en nyckel för angiven tabelltyp.",
        "Documentation.LongDescription": "Lägg till en nyckel i <code>table</code>, där <code>columns</code> är en del av kolumnnamnen som definierar nyckeln och <code>isPrimary</code> anger om nyckeln är primär.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lägg till en primärnyckel med en kolumn i en tabell.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "Lägger till en kolumn med rangordningen för en eller flera andra kolumner.",
        "Documentation.LongDescription": "Lägger till en kolumn med namnet <code>newColumnName</code> till <code>table</code> med rangordningen av en eller flera andra kolumner som beskrivs av <code>comparisonCriteria</code>.\r\nAlternativet RankKind i <code>options</code> kan användas av avancerade användare för att välja en mer specifik rankningsmetod.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Lägg till en kolumn med namnet \" RevenueRank\" till tabellen som rangordnar kolumnen \"Intäkter\" från högsta till lägsta.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "Aggregerar en kolumn med tabeller i flera kolumner i den övergripande tabellen.",
        "Documentation.LongDescription": "Aggregerar tabeller i <code>table</code>[<code>column</code>] i flera kolumner som innehåller aggregeringsvärden för tabellerna. <code>aggregations</code> används för att ange kolumnerna som innehåller tabellerna som ska aggregeras, aggregeringsfunktionerna som ska användas i tabellerna för att generera värdena och namnen på aggregeringskolumnerna som ska skapas.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Aggregera tabellkolumner i <code>[t]</code> i tabellen <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> i summan av <code>[t.a]</code>, det minsta och största <code>[t.b]</code>-värdet samt antalet värden i <code>[t.a]</code>.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "Bevarar den ursprungliga förskjutningen och växlar sedan mellan att använda och hoppa över efterföljande rader.",
        "Documentation.LongDescription": "Bevarar den ursprungliga förskjutningen och växlar sedan mellan att använda och hoppa över efterföljande rader.\r\n    <ul>\r\n       <li><code>table</code>: Indatatabellen.</li>\r\n       <li><code>offset</code>: Antalet rader som ska bevaras innan iterationer startas.</li>\r\n       <li><code>skip</code>: Antalet rader som ska tas bort i varje iteration.</li>\r\n       <li><code>take</code>: Antalet rader som ska bevaras i varje iteration.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Skapa en tabell från tabellen som, med början från den första raden, hoppar över 1 värde och sedan bevarar 1 värde.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "Kombinerar de angivna kolumnerna till en ny kolumn som använder den angivna kombinationsfunktionen.",
        "Documentation.LongDescription": "Kombinerar de angivna kolumnerna till en ny kolumn som använder den angivna kombinationsfunktionen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kombinera efter namnen i en ny kolumn, avgränsade med kommatecken.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "Kombinerar de angivna kolumnerna till en ny postvärdeskolumn där varje post innehåller fältnamn och värden som motsvarar kolumnnamnen och värdena för de kolumner som kombinerats.",
        "Documentation.LongDescription": "Kombinerar de angivna kolumnerna i <code>table</code> till en ny postvärdeskolumn med namnet <code>newColumnName</code> där varje post innehåller fältnamn och värden som motsvarar kolumnnamnen och värdena för de kolumner som kombinerats. Om en post har angetts för <code>options</code> kan följande alternativ anges:\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: När den anges som text, ska det angivna kolumnnamnet betraktas som postens visningnamn. Det här får inte vara en av kolumnerna i själva posten.</li>\r\n     <li> <code>TypeName</code>: När det anges som text tillhandahålls ett logiskt typnamn för den resulterande koden som kan användas under datainläsningen för att styra inläsningsmiljöns funktionssätt.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "Duplicerar en kolumn med det angivna namnet. Värdena och typen kopieras från källkolumnen.",
        "Documentation.LongDescription": "Duplicera kolumnen med namnet <code>columnName</code> till tabellen <code>table</code>. Värdena och typen för kolumnen <code>newColumnName</code> kopieras från kolumnen <code>columnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Duplicera kolumnen \"a\" till en kolumn med namnet \"copied column\" i tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "Expanderar en kolumn med poster till kolumner med varje värde.",
        "Documentation.LongDescription": "Baserat på <code>column</code> med poster i indataposten <code>table</code> skapas en tabell med en kolumn för varje fält i posten. <code>newColumnNames</code> kan anges för att säkerställa att kolumnerna i den nya tabellen är unika.\r\n    <ul>\r\n        <li><code>table</code>: Den ursprungliga tabellen med den postkolumn som ska expanderas. </li>\r\n        <li><code>column</code>: Kolumnen som ska expanderas.</li>\r\n        <li><code>fieldNames</code>: Listan med fält som ska expanderas till kolumner i tabellen.</li>\r\n        <li><code>newColumnNames</code>: Listan med kolumnnamn som ska få de nya kolumnerna. De nya kolumnnamnen kan inte duplicera en kolumn i den nya tabellen.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Expandera kolumnen [a] i tabellen <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> till 3 kolumner: \"aa\", \"bb\" och \"cc\".",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "Expanderar en kolumn med poster eller en kolumn med tabeller till flera kolumner i den övergripande tabellen.",
        "Documentation.LongDescription": "Expanderar tabeller i <code>table</code>[<code>column</code>] till flera rader och kolumner. <code>columnNames</code> används för att välja de kolumner som ska expanderas från den inre tabellen. Använd <code>newColumnNames</code> för att undvika konflikter mellan befintliga och nya kolumner.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Expandera tabellkolumner i <code>[a]</code> i tabellen <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> till 3 kolumner: <code>[t.a]</code>, <code>[t.b]</code> och <code>[t.c]</code>.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "Grupperar rader i tabellen baserat på fuzzy-matchning av nycklar.",
        "Documentation.LongDescription": "Grupperar raderna i <code>table</code> genom att partiellt matcha värden i den angivna kolumnen, <code>key</code>, för varje rad.\r\n    För varje grupp skapas en post som innehåller nyckelkolumnerna (och deras värden) tillsammans med eventuella sammanställda kolumner angivna av <code>aggregatedColumns</code>.\r\n    Den här funktionen garanterar inte att raderna returneras i en fast ordning.\r\n    <p>En valfri uppsättning <code>options</code> kan användas för att ange hur nyckelkolumnerna ska jämföras. Alternativen är:\r\n    <ul>\r\n<li><code>Culture</code> : G&#246;r att poster kan grupperas tillsammans baserat p&#229; kulturspecifika regler. Det kan vara vilket giltigt kulturnamn som helst. Kulturalternativet ja-JP grupperar till exempel poster baserat p&#229; den japanska kulturen. Standardv&#228;rdet &#228;r &quot;&quot;, vilket grupperar utifr&#229;n den invarianta engelska kulturen.</li>\r\n<li><code>IgnoreCase</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att du kan utf&#246;ra icke-skiftl&#228;gesk&#228;nsliga grupperingar. N&#228;r det &#228;r sant grupperas till exempel Druvor tillsammans med druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>IgnoreSpace</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att du kan kombinera textdelar f&#246;r att hitta grupperingar. N&#228;r det &#228;r sant grupperas till exempel Dru vor tillsammans med Druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>SimilarityColumnName</code> : Ett namn p&#229; kolumnen som visar likheten mellan ett indatav&#228;rde och det representativa v&#228;rdet f&#246;r den inmatningen. Standardv&#228;rdet &#228;r null vilket inneb&#228;r att ingen ny kolumn f&#246;r likheter kommer att l&#228;ggas till.</li>\r\n<li><code>Threshold</code> : Ett tal mellan 0,00 och 1,00 som anger likhetspo&#228;ngen d&#228;r tv&#229; v&#228;rden ska grupperas.\r\n    &quot;Vindruvor&quot; och &quot;Vindruor&quot; (som saknar &quot;v&quot;) grupperas bara tillsammans om det h&#228;r alternativet &#228;r inst&#228;llt p&#229; mindre &#228;n 0,90.\r\n    Ett tr&#246;skelv&#228;rde p&#229; 1,00 till&#229;ter bara exakta matchningar.\r\n    (Observera att en fuzzy &quot;exakt matchning&quot; kan ignorera skillnader som skiftl&#228;ge, ordordning och skiljetecken.)\r\n    Standardv&#228;rdet &#228;r 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabell d&#228;r poster kan grupperas baserat p&#229; anpassade v&#228;rdemappningar. Den m&#229;ste inneh&#229;lla kolumnerna Fr&#229;n och Till. Druvor grupperas till exempel med Russin om en omvandlingstabell har angetts d&#228;r Fr&#229;n-kolumnen inneh&#229;ller Druvor och Till-kolumnen inneh&#229;ller Russin. Observera att omvandlingen till&#228;mpas p&#229; alla f&#246;rekomster av texten i omvandlingstabellen. Med ovanst&#229;ende omvandlingstabell grupperas &#228;ven Druvor &#228;r s&#246;ta, med Russin &#228;r s&#246;ta.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gruppera tabellen för att lägga till en samlingskolumn [Count] som innehåller antalet anställda på varje plats (each Table.RowCount(_)).",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "Kopplar raderna från de två tabeller som fuzzy-matchats utifrån de angivna nycklarna.",
        "Documentation.LongDescription": "<p>Kopplar samman raderna i <code>table1</code> med raderna i <code>table2</code> baserat på en partiell matchning av värdena i de nyckelkolumner som valts av <code>key1</code> (för <code>table1</code>) och <code>key2</code> (för <code>table2</code>).</p>\r\n<p>Partiell matchning är en jämförelse som baseras på liknelser i texten snarare än på exakt likhet.</p>\r\n<p>Som standard utförs en inre koppling men även en valfri <code>joinKind</code> kan användas för att ange typen av koppling. Alternativen är:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>En valfri uppsättning <code>joinOptions</code> kan läggas till för att ange hur nyckelkolumnerna ska jämföras. Alternativen är:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Ett tal mellan 1 och 8 som anger antalet parallella tr&#229;dar som ska anv&#228;ndas f&#246;r partiell matchning. Standardv&#228;rdet &#228;r 1.</li>\r\n<li><code>Culture</code> : G&#246;r att poster kan matchas baserat p&#229; kulturspecifika regler. Det kan vara vilket giltigt kulturnamn som helst. Kulturalternativet ja-JP matchar till exempel poster baserat p&#229; den japanska kulturen. Standardv&#228;rdet &#228;r &quot;&quot;, vilket matchar utifr&#229;n den invarianta engelska kulturen.</li>\r\n<li><code>IgnoreCase</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att man kan utf&#246;ra icke-skiftl&#228;gesk&#228;nsliga matchningar. N&#228;r det &#228;r sant matchas till exempel Druvor med druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>IgnoreSpace</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att du kan kombinera textdelar f&#246;r att hitta matchningar. N&#228;r det &#228;r sant matchas till exempel Dru vor med Druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>NumberOfMatches</code> : Ett heltal som anger h&#246;gsta antal matchande rader som kan returneras f&#246;r varje indatarad. V&#228;rdet 1 returnerar exempelvis h&#246;gst en matchande rad f&#246;r varje indatarad. Om alternativet inte anges returneras alla matchande rader.</li>\r\n<li><code>SimilarityColumnName</code> : Ett namn p&#229; kolumnen som visar likheten mellan ett indatav&#228;rde och det representativa v&#228;rdet f&#246;r den inmatningen. Standardv&#228;rdet &#228;r null vilket inneb&#228;r att ingen ny kolumn f&#246;r likheter kommer att l&#228;ggas till.</li>\r\n<li><code>Threshold</code> : Ett tal mellan 0,00 och 1,00 som anger likhetspo&#228;ngen d&#228;r tv&#229; v&#228;rden ska grupperas.\r\n    &quot;Vindruvor&quot; och &quot;Vindruor&quot; (som saknar &quot;v&quot;) grupperas bara tillsammans om det h&#228;r alternativet &#228;r inst&#228;llt p&#229; mindre &#228;n 0,90.\r\n    Ett tr&#246;skelv&#228;rde p&#229; 1,00 till&#229;ter bara exakta matchningar.\r\n    (Observera att en fuzzy &quot;exakt matchning&quot; kan ignorera skillnader som skiftl&#228;ge, ordordning och skiljetecken.)\r\n    Standardv&#228;rdet &#228;r 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabell d&#228;r poster kan matchas baserat p&#229; anpassade v&#228;rdemappningar. Den m&#229;ste inneh&#229;lla kolumnerna Fr&#229;n och Till. Druvor matchas till exempel med Russin om en omvandlingstabell har angetts d&#228;r Fr&#229;n-kolumnen inneh&#229;ller Druvor och Till-kolumnen inneh&#229;ller Russin. Observera att omvandlingen till&#228;mpas p&#229; alla f&#246;rekomster av texten i omvandlingstabellen. Med ovanst&#229;ende omvandlingstabell matchas &#228;ven Druvor &#228;r s&#246;ta, med Russin &#228;r s&#246;ta.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Vänster inre fuzzy-koppling mellan två tabeller baserat på [FirstName]",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "Genomför en fuzzy-koppling mellan tabeller för angivna kolumner och genererar kopplingsresultatet i en ny kolumn.",
        "Documentation.LongDescription": "<p>Kopplar samman raderna i <code>table1</code> med raderna i <code>table2</code> baserat på en partiell matchning av värdena i de nyckelkolumner som valts av <code>key1</code> (för <code>table1</code>) och <code>key2</code> (för <code>table2</code>). Resultaten returneras i en ny kolumn med namnet <code>newColumnName</code>.</p>\r\n<p>Partiell matchning är en jämförelse som baseras på liknelser i en text snarare än på exakt likhet.</p>\r\n<p>Valfria <code>joinKind</code> anger typ av koppling som ska utföras. Som standard utförs en vänster yttre koppling om ingen <code>joinKind</code> anges. Alternativen är:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>En valfri uppsättning <code>joinOptions</code> kan läggas till för att ange hur nyckelkolumnerna ska jämföras. Alternativen är:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Ett tal mellan 1 och 8 som anger antalet parallella tr&#229;dar som ska anv&#228;ndas f&#246;r partiell matchning. Standardv&#228;rdet &#228;r 1.</li>\r\n<li><code>Culture</code> : G&#246;r att poster kan matchas baserat p&#229; kulturspecifika regler. Det kan vara vilket giltigt kulturnamn som helst. Kulturalternativet ja-JP matchar till exempel poster baserat p&#229; den japanska kulturen. Standardv&#228;rdet &#228;r &quot;&quot;, vilket matchar utifr&#229;n den invarianta engelska kulturen.</li>\r\n<li><code>IgnoreCase</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att man kan utf&#246;ra icke-skiftl&#228;gesk&#228;nsliga matchningar. N&#228;r det &#228;r sant matchas till exempel Druvor med druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>IgnoreSpace</code> : Ett logiskt v&#228;rde (sant/falskt) som g&#246;r att du kan kombinera textdelar f&#246;r att hitta matchningar. N&#228;r det &#228;r sant matchas till exempel Dru vor med Druvor. Standardv&#228;rdet &#228;r sant.</li>\r\n<li><code>NumberOfMatches</code> : Ett heltal som anger h&#246;gsta antal matchande rader som kan returneras f&#246;r varje indatarad. V&#228;rdet 1 returnerar exempelvis h&#246;gst en matchande rad f&#246;r varje indatarad. Om alternativet inte anges returneras alla matchande rader.</li>\r\n<li><code>SimilarityColumnName</code> : Ett namn p&#229; kolumnen som visar likheten mellan ett indatav&#228;rde och det representativa v&#228;rdet f&#246;r den inmatningen. Standardv&#228;rdet &#228;r null vilket inneb&#228;r att ingen ny kolumn f&#246;r likheter kommer att l&#228;ggas till.</li>\r\n<li><code>Threshold</code> : Ett tal mellan 0,00 och 1,00 som anger likhetspo&#228;ngen d&#228;r tv&#229; v&#228;rden ska grupperas.\r\n    &quot;Vindruvor&quot; och &quot;Vindruor&quot; (som saknar &quot;v&quot;) grupperas bara tillsammans om det h&#228;r alternativet &#228;r inst&#228;llt p&#229; mindre &#228;n 0,90.\r\n    Ett tr&#246;skelv&#228;rde p&#229; 1,00 till&#229;ter bara exakta matchningar.\r\n    (Observera att en fuzzy &quot;exakt matchning&quot; kan ignorera skillnader som skiftl&#228;ge, ordordning och skiljetecken.)\r\n    Standardv&#228;rdet &#228;r 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabell d&#228;r poster kan matchas baserat p&#229; anpassade v&#228;rdemappningar. Den m&#229;ste inneh&#229;lla kolumnerna Fr&#229;n och Till. Druvor matchas till exempel med Russin om en omvandlingstabell har angetts d&#228;r Fr&#229;n-kolumnen inneh&#229;ller Druvor och Till-kolumnen inneh&#229;ller Russin. Observera att omvandlingen till&#228;mpas p&#229; alla f&#246;rekomster av texten i omvandlingstabellen. Med ovanst&#229;ende omvandlingstabell matchas &#228;ven Druvor &#228;r s&#246;ta, med Russin &#228;r s&#246;ta.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Vänster inre fuzzy-koppling mellan två tabeller baserat på [FirstName]",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "Grupperar rader i tabellen som har samma nyckel.",
        "Documentation.LongDescription": "Grupperar raderna med <code>table</code> efter nyckelkolumnerna som definieras av <code>key</code>. <code>key</code> kan antingen vara ett enskilt kolumnnamn eller en lista över kolumnnamn.\r\n     För varje grupp skapas en post som innehåller nyckelkolumnerna (och deras värden) tillsammans med alla sammanställda kolumner som anges av <code>aggregatedColumns</code>.\r\n    Du kan också ange <code>groupKind</code> och <code>comparer</code>.<br>\r\n    <br>\r\n   Om data redan är sorterade efter nyckelkolumnerna kan en <code>groupKind</code> av GroupKind. local tillhandahållas. Detta kan förbättra gruppens prestanda i vissa fall,\r\n    eftersom alla rader med en viss uppsättning nyckelvärden antas vara sammanhängande.<br>\r\n    <br>\r\n    När du skickar ett<code>comparer</code>, tänk på att om det behandlar olika nycklar som likvärdiga kan en rad placeras i en grupp vars nycklar skiljer sig från varandra.<br>\r\n    <br>\r\n     Den här funktionen garanterar inte ordningen för de rader som returneras.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gruppera tabellen och lägg till en aggregeringskolumn [total] som innehåller summan av priserna (\"each List.Sum([price])\").",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "Infogar en lista med rader i tabellen vid angiven position.",
        "Documentation.LongDescription": "Returnerar en tabell med listan med rader, <code>rows</code>, infogad i <code>table</code> vid angiven position, <code>offset</code>. Varje kolumn i raden som ska infogas måste matcha tabellens kolumntyper.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Infoga raden i tabellen vid position 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Infoga två rader i tabellen vid position 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "Kopplar raderna från de två tabeller som matchar baserat på de angivna nycklarna.",
        "Documentation.LongDescription": "<p>Kopplar samman raderna i <code>table1</code> med raderna i <code>table2</code> baserat på likheten av värdena i de nyckelkolumner som valts av <code>key1</code> (för <code>table1</code>) och <code>key2</code> (för <code>table2</code>).</p>\r\n<p>Som standard utförs en inre koppling men även en valfri <code>joinKind</code> kan användas för att ange typen av koppling. Alternativen är:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>En valfri uppsättning <code>keyEqualityComparers</code> kan läggas till för att ange hur nyckelkolumnerna ska jämföras. Den här parametern är för närvarande endast avsedd för internt bruk.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Koppla två tabeller med en enda nyckelkolumn.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "Koppla samman två tabeller vars kolumnnamn är i konflikt, med hjälp av flera nyckelkolumner.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "Returnerar den eller de största raderna baserat på angivet villkor.",
        "Documentation.LongDescription": "Returnerar den eller de största raderna i <code>table</code> baserat på angivet <code>comparisonCriteria</code>.\r\n    När raderna har sorterats måste parametern <code>countOrCondition</code> användas om du vill filtrera resultatet ytterligare. Parametern <code>countOrCondition</code> kan ha olika form:\r\n    <ul>\r\n        <li> Om ett tal anges returneras en lista med upp till <code>countOrCondition</code> objekt i stigande ordning. </li>\r\n        <li> Om ett villkor anges returneras en lista med objekt som inledningsvis uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta raden med det största värdet i kolumnen [a] med villkoret [a] > 0 i tabellen. Raderna sorteras innan filtret tillämpas.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Hitta raden med det största värdet i kolumnen [a] med villkoret [b] > 0 i tabellen. Tänk på att raderna sorteras innan filtret tillämpas.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "Returnerar den eller de minsta raderna baserat på angivet villkor.",
        "Documentation.LongDescription": "Returnerar den eller de minsta raderna i <code>table</code> baserat på angivet <code>comparisonCriteria</code>. När raderna har sorterats måste parametern <code>countOrCondition</code> användas om du vill filtrera resultatet ytterligare. Parametern <code>countOrCondition</code> kan ha olika form:\r\n    <ul>\r\n        <li> Om ett tal anges returneras en lista med upp till <code>countOrCondition</code> objekt i stigande ordning. </li>\r\n        <li> Om ett villkor anges returneras en lista med objekt som inledningsvis uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta raden med det minsta värdet i kolumnen [a] med villkoret [a] < 3 i tabellen. Tänk på att raderna sorteras innan filtret tillämpas.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Hitta raden med det minsta värdet i kolumnen [a] med villkoret [b] < 0 i tabellen. Tänk på att raderna sorteras innan filtret tillämpas.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "Skapar en koppling mellan tabeller för angivna kolumner och genererar kopplingsresultatet i en ny kolumn.",
        "Documentation.LongDescription": "<p>Kopplar samman raderna i <code>table1</code> med raderna i <code>table2</code> baserat på likheten av värdena i de nyckelkolumner som valts av <code>key1</code> (för <code>table1</code>) och <code>key2</code> (för <code>table2</code>). Resultaten anges i kolumnen med namnet <code>newColumnName</code>.</p>\r\n<p>Det valfria <code>joinKind</code> anger typ av koppling som ska utföras. Som standard utförs en vänster yttre koppling om en <code>joinKind</code> inte anges.</p>\r\n<p>En valfri uppsättning av <code>keyEqualityComparers</code> kan läggas till för att ange hur nyckelkolumnerna ska jämföras. Funktionen är för närvarande endast avsedd för internt bruk.</p>  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Koppla två tabeller med en enda nyckelkolumn.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "Roterar data i attributkolumnen till en kolumnrubrik baserat på ett kolumnpar som representerar attribut-värde-par.",
        "Documentation.LongDescription": "Roterar data i attributkolumnen till en kolumnrubrik baserat på ett kolumnpar som representerar attribut-värde-par.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Använder värdena \"a\", \"b\" och \"c\" i attributkolumnen i tabellen <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> och pivoterar dem i en egen kolumn.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "Använder värdena \"a\", \"b\" och \"c\" i attributkolumnen i tabellen <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> och pivoterar dem i en egen kolumn. Attributet \"c\" för nyckeln \"x\" har flera associerade värden. Använd därför funktionen List.Max för att lösa konflikten.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "Ersätter angivet radintervall med den eller de angivna raderna.",
        "Documentation.LongDescription": "Ersätter angivet antal rader, <code>count</code>, i angivna indata, <code>table</code>, med angivet <code>rows</code>, med början efter <code>offset</code>. Parametern <code>rows</code> är en lista med poster.\r\n    <ul>\r\n       <li><code>table</code>: Tabellen där ersättningen utförs.</li>\r\n       <li><code>offset</code>: Antalet rader som ska hoppas över innan ersättningen görs.</li>\r\n       <li><code>count</code>: Antalet rader som ska ersättas.</li>\r\n       <li><code>rows</code>: Listan med radposter som ska infogas i <code>table</code> vid positionen som anges av <code>offset</code>.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Startar vid position 1, ersätter 3 rader.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "Ersätter ett värde med ett annat i de angivna kolumnerna.",
        "Documentation.LongDescription": "Ersätter <code>oldValue</code> med <code>newValue</code> i de angivna kolumnerna i <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ersätt texten \"hej då\" med \"värld\" i kolumn B, som bara matchar hela värdet.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "Ersätt texten \"din\" med \"eller\" i kolumn B, som matchar någon del av värdet.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "Anonymisera namnen på amerikanska anställda.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "Anonymisera alla kolumner med anställda i USA.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "Delar de angivna kolumnerna i en uppsättning ytterligare kolumner med hjälp av den angivna delningsfunktionen.",
        "Documentation.LongDescription": "Delar de angivna kolumnerna i en uppsättning ytterligare kolumner med hjälp av den angivna delningsfunktionen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Dela [Name]-kolumnen vid positionen för \"i\" i i två kolumner",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "Omvandlar en uppsättning kolumner i en tabell till attribut-värde-par.",
        "Documentation.LongDescription": "Omvandlar en uppsättning kolumner i en tabell till attribut-värde-par, som kombineras med resten av värdena på varje rad.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Använd kolumnerna \"a\", \"b\" och \"c\" i tabellen <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> och inaktivera pivoteringen av kolumnerna till attribut-värde-par.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "Omvandlar alla kolumner utom en angiven uppsättning till attribut-värde-par.",
        "Documentation.LongDescription": "Omvandlar alla kolumner utom en angiven uppsättning till attribut-värde-par, som kombineras med resten av värdena på varje rad.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Omvandlar alla kolumner utom en angiven uppsättning till attribut-värde-par, som kombineras med resten av värdena på varje rad.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Teams Personliga analyser",
        "Documentation.LongDescription": "<p>Med Teams-analysanslutningsappen får du djupare kunskap om din användning av Teams. Data är tillgängliga för både din personliga aktivitet i Teams och den aktivitet i Teams som du är medlem i.</p>\r\n<p>Data är tillgängliga 90 dagar bakåt. </p>\r\n<p> Mer information om vilka typer av data som är tillgängliga hittar du i följande hjälpdokumentation: </p>\r\n<ul>\r\n<li><b>Teams-användning:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Teams-användaraktivitet</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "Ange organisations- och projektnamn.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps-tjänster",
        "Documentation.LongDescription": "Returnerar en tabell med OData-flöden som erbjuds av Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "Returnerar ett binärformat som läser ett binärvärde.",
        "Documentation.LongDescription": "Returnerar ett binärformat som läser ett binärvärde. Om <code>length</code> anges innehåller binärvärdet så många byte. Om <code>length</code> inte anges innehåller binärvärdet resterande antal byte. <code>length</code> kan anges som ett tal eller som ett binärformat för längden som föregår binärdata.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "Returnerar ett logiskt värde baserat på en likhetskontroll av de två givna värdena.",
        "Documentation.LongDescription": "Returnerar ett <code>logical</code>-värde baserat på en likhetskontroll av de två givna värdena, <code>x</code> och <code>y</code>, med det tillhandahållna <code>comparer</code>.\r\n      <div>\r\n        <code>comparer</code>är en <code>Comparer</code> som används för att kontrollera jämförelsen.\r\n        En jämförelse är en funktion som accepterar två argument och returnerar -1, 0 eller 1 baserat på om det första värdet är mindre än, lika med,  eller större än den andra.\r\n        Jämförelsefunktioner kan användas för att tillhandahålla skiftlägesokänsliga eller kultur- och språkmedvetna jämförelser.\r\n      </div>\r\n      <div>\r\n        Följande inbyggda jämförelsefunktioner är tillgängliga i formelspråket:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Används för att genomföra en exakt ordningstalsjämförelse</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Används för att genomföra en exakt skiftlägesokänslig ordningstalsjämförelse</li>\r\n         <li><code>Comparer.FromCulture</code>: Används för att genomföra en kulturmedveten jämförelse</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Jämför \"1\" och \"A\" med den nationella inställningen \"sv-SE\" för att bestämma om värdena är lika.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "Returnerar aktuellt datum och tid i den lokala tidszonen. Det här värdet är fast och ändras inte i samband med efterföljande anrop.",
        "Documentation.LongDescription": "Returnerar ett <code>datetime</code>-värde för systemets aktuella datum och tid. Det här värdet är fast och ändras inte i samband med efterföljande anrop, till skillnad mot DateTime.LocalNow, som kan returnera olika värden när ett uttryck körs.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "Returnerar aktuellt datum och tid i den lokala tidszonen.",
        "Documentation.LongDescription": "Returnerar ett <code>datetime</code>-värde för systemets aktuella datum och tid.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "Returnerar aktuellt datum och tid i den lokala tidszonen. Det här värdet är fast och ändras inte i samband med efterföljande anrop.",
        "Documentation.LongDescription": "Returnerar ett <code>datetime</code>-värde för systemets aktuella datum och tid. Värdet som returneras innehåller information om tidszonen som representerar den lokala tidszonen. Det här värdet är fast och ändras inte i samband med efterföljande anrop, till skillnad mot DateTimeZone.LocalNow, som kan returnera olika värden när ett uttryck körs.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "Returnerar aktuellt datum och tid i UTC (GMT-tidszonen). Det här värdet är fast och ändras inte i samband med efterföljande anrop.",
        "Documentation.LongDescription": "Returnerar aktuellt datum och tid i UTC (GMT-tidszonen). Det här värdet är fast och ändras inte i samband med efterföljande anrop.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "Returnerar aktuellt datum och tid i den lokala tidszonen.",
        "Documentation.LongDescription": "Returnerar ett <code>datetimezone</code>-värde för systemets aktuella datum och tid.\r\n    Värdet som returneras innehåller tidszonsinformation som representerar den lokala tidszonen.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "Returnerar aktuellt datum och tid i UTC (GMT-tidszonen).",
        "Documentation.LongDescription": "Returnerar aktuellt datum och tid i UTC (GMT-tidszonen).",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Hämta det aktuella datumet och tiden i UTC.",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "Returnerar en täckande identifierare för den utvärdering som körs.",
        "Documentation.LongDescription": "Returnerar en täckande identifierare för den utvärdering som körs.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "Returnerar en täckande identifierare för att korrelera inkommande begäranden med utgående.",
        "Documentation.LongDescription": "Returnerar en täckande identifierare för att korrelera inkommande begäranden med utgående.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "Skriver en spårningspost, om spårning har aktiverats, och returnerar värdet.",
        "Documentation.LongDescription": "Skriver en spårningspost, <code>message</code>, om spårning har aktiverats, och returnerar <code>value</code>. Den valfria parametern <code>delayed</code> anger om utvärderingen av <code>value</code> ska fördröjas tills meddelandet spåras. <code>traceLevel</code> kan ha något av följande värden:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Spåra meddelandet innan du anropar funktionen Text.From och returnerar resultatet.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "Standard identitetsprovider för den aktuella värden.",
        "Documentation.LongDescription": "Standard identitetsprovider för den aktuella värden.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "Ackumulerar ett summary-värde från objekten i listan.",
        "Documentation.LongDescription": "Ackumulerar ett summary-värde från objekten i listan <code>list</code> med hjälp av <code>accumulator</code>.\r\n    En valfri seed-parameter, <code>seed</code>, kan användas.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Ackumulerar summary-värdet från objekten i listan {1, 2, 3, 4, 5} med hjälp av ((state, current) => state + current ).",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "Genererar en lista med datetimezone-värden baserat på ett ursprungligt värde, antal och inkrementellt duration-värde.",
        "Documentation.LongDescription": "Returnerar en lista med <code>datetimezone</code>-värden med storleken <code>count</code> med början från <code>start</code>. Den angivna ökningen, <code>step</code>, är ett <code>duration</code>-värde som läggs till för varje värde.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med 10 värden med början 5 minuter före nyårsdagen (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) och öka med 1 minut (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "Genererar en lista med datetime-värden baserat på ett ursprungligt värde, antal och inkrementellt duration-värde.",
        "Documentation.LongDescription": "Returnerar en lista med <code>datetime</code>-värden med storleken <code>count</code> med början från <code>start</code>. Den angivna ökningen, <code>step</code>, är ett <code>duration</code>-värde som läggs till för varje värde.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med 10 värden med början 5 minuter före nyårsdagen (#datetime(2011, 12, 31, 23, 55, 0)) och öka med 1 minut (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "Genererar en lista med date-värden baserat på ett ursprungligt värde, antal och inkrementellt duration-värde.",
        "Documentation.LongDescription": "Returnerar en lista med <code>date</code>-värden med storleken <code>count</code> med början från <code>start</code>. Den angivna ökningen, <code>step</code>, är ett <code>duration</code>-värde som läggs till för varje värde.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med 5 värden med början på nyårsafton (#date(2011, 12, 31)) och öka med 1 dag (#duration(1, 0, 0, 0)).",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "Genererar en lista med duration-värden baserat på ett ursprungligt värde, antal och inkrementellt duration-värde.",
        "Documentation.LongDescription": "Returnerar en lista med <code>count</code> <code>duration</code>-värden med början från <code>start</code> som ökar med <code>duration</code>-värdet <code>step</code>.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med 5 värden med början från 1 timma och öka i steg om en timma.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "Genererar en lista med värden.",
        "Documentation.LongDescription": "Genererar en lista med värden med hjälp av de angivna funktionerna. Funktionen <code>initial</code> genererar ett startförslagsvärde som sedan testas mot <code>condition</code>.\r\n Om kandidatvärdet godkänns returneras det som en del av den resulterande listan och nästa kandidatvärde genereras genom att det nyligen godkända värdet skickas till <code>next</code>.\r\n När ett kandidatvärde inte matchar <code>condition</code>stoppas listgenereringsprocessen.\r\n En valfri parameter, <code>selector</code>, kan också tillhandahållas för att transformera objekten i den resulterande listan.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista genom att börja vid tio, minska upprepade gånger med en och se till att varje objekt är större än noll.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "Generera en lista över poster som innehåller x och y, där x är värdet och y en lista. x ska vara mindre än 10 och representera antalet objekt i listan y. Returnera endast x-värdena när listan har genererats.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "Infogar värden i en lista vid angivet index.",
        "Documentation.LongDescription": "Returnerar en ny lista som genereras genom att värdena i <code>values</code> infogas i <code>list</code> vid <code>index</code>. Den första positionen i listan är vid index 0.\r\n      <ul>\r\n        <li><code>list</code>: Mållistan där värdena ska infogas.</li>\r\n        <li><code>index</code>: Indexet för mållistan (<code>list</code>) där värdena ska infogas. Den första positionen i listan är vid index 0.</li>\r\n        <li><code>values</code>: Listan med värden som ska infogas i <code>list</code>.</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Infoga listan ({3, 4}) i mållistan ({1, 2, 5}) vid index 2.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "Infoga en lista med en kapslad lista ({1, {1.1, 1.2}}) i en mållista ({2, 3, 4}) vid index 0.",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "Ersätter ett antal värden från angiven position med ersättningsvärdena.",
        "Documentation.LongDescription": "Ersätter <code>count</code> värden i <code>list</code> med listan <code>replaceWith</code> med början vid angiven position, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Ersätt {7, 8, 9} i listan {1, 2, 7, 8, 9, 5} med {3, 4}.",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "Söker i en lista efter angivet värde och ersätter det.",
        "Documentation.LongDescription": "Söker i en lista med värden, <code>list</code>, efter värdet <code>oldValue</code> och ersätter varje förekomst med ersättningsvärdet <code>newValue</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Ersätt alla \"a\"-värden i listan {\"a\", \"B\", \"a\", \"a\"} med \"A\".",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "Genererar en lista med time-värden baserat på ett ursprungligt värde, antal och inkrementellt duration-värde.",
        "Documentation.LongDescription": "Returnerar en lista med <code>time</code>-värden med storleken <code>count</code> med början från <code>start</code>. Den angivna ökningen, <code>step</code>, är ett <code>duration</code>-värde som läggs till för varje värde.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med 4 värden med början från klockan 12 (#time(12, 0, 0)) som ökar med en timme (#duration(0, 1, 0, 0)).",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "Returnerar en lista vars element omvandlas från indatalistan med hjälp av angivna funktioner.",
        "Documentation.LongDescription": "Returnerar en lista vars element projiceras från indatalistan.<br>\r\n    <br>\r\n    Funktionen <code>collectionTransform</code> omvandlar varje element till en mellanliggande lista och funktionen <code>resultTransform</code> tar emot originalelementet samt ett objekt från den mellanliggande listan för att skapa det slutliga resultatet.<br>\r\n    <br>\r\n    Funktionen <code>collectionTransform</code> har signaturen <code>(x as any) som lista => ...</code>,  där <code>x</code> är ett element i <code>list</code>.\r\n    Funktionen <code>resultTransform</code> projicerar resultatets form och har signaturen <code>(x som vilken som helst, y som någon) som alla => ... </code>, där <code>x</code> är ett element i <code>list</code> och <code>y</code> är ett element från listan som genereras genom att skicka <code>x</code> till <code>collectionTransform</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Platta ut en lista över människor och deras husdjur.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "Returnerar ett slumptal.",
        "Documentation.LongDescription": "Returnerar ett slumpmässigt värde mellan 0 och 1.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Hämta ett slumptal.",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "Lägger till ett fält i en post.",
        "Documentation.LongDescription": "Lägger till ett fält i en post, <code>record</code>, baserat på namnet på fältet <code>fieldName</code> och värdet <code>value</code>.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Lägg till fältet Address till posten.",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "Ersätter text i angivna indata.",
        "Documentation.LongDescription": "Ersätter texten <code>old</code> i ursprungliga <code>text</code> med texten <code>new</code>. Den här ersättningsfunktionen kan användas i <code>List.ReplaceValue</code> och <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Ersätt texten \"hE\" med \"He\" i strängen \"hEllo world\".",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "Ersätter värden i angivna indata.",
        "Documentation.LongDescription": "Ersätter värdet <code>old</code> i ursprungliga <code>value</code> med värdet <code>new</code>. Den här ersättningsfunktionen kan användas i <code>List.ReplaceValue</code> och <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Ersätt värdet 11 med värdet 10.",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Returnerar ett JSON-resultat från Smartsheet-API:et",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "Anropar Smartsheet 2.0 REST-API:et vid den angivna slutpunkten och returnerar resultaten som en JSON-post.",
        "Documentation.Examples": [
          {
            "Description": "Hämtar data från bladens slutpunkt för Smartsheet-API:et med ytterligare angivna argument",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "En tabell med bladinformation så som den returneras av Smartsheet-API:et"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.TestContents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "Returnerar en funktion som inte delar upp text och som returnerar sitt argument som en enda elementlista.",
        "Documentation.LongDescription": "Returnerar en funktion som inte delar upp text och som returnerar sitt argument som en enda elementlista.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text vid blanksteg.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text vid blanksteg.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata med blankstegstecken och behandla citattecken som andra tecken.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "Partitionerar tabellen i en lista med tabeller baserat på angivet antalet grupper och kolumner.",
        "Documentation.LongDescription": "Partitionerar <code>table</code> till en lista med <code>groups</code> tabeller, baserat på värdet för <code>column</code> och en <code>hash</code>-funktion.\r\n    Funktionen <code>hash</code> körs på värdet för raden <code>column</code> för att få fram ett hash-värde för raden. Hash-värdets modulo, <code>groups</code>, avgör i vilken av de returnerade tabellerna som raden placeras i.\r\n    <ul>\r\n       <li><code>table</code>: Tabellen som ska partitioneras.</li>\r\n       <li><code>column</code>: Kolumnen som hash-beräkningen ska köras på för att avgöra vilken returnerad tabell som raden finns i.</li>\r\n       <li><code>groups</code>: Antalet tabeller som indatatabellen ska partitioneras i.</li>\r\n       <li><code>hash</code>: Funktionen som körs för att få fram ett hash-värde.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Partitionera tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> i 2 tabeller för kolumnen [a] och använd kolumnernas värde som hash-funktionen.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "Returnerar delen av <code>text</code> mellan det angivna <code>startDelimiter</code> och <code>endDelimiter</code>.\r\n    En valfri numerisk <code>startIndex</code> indikerar vilken förekomst av <code>startDelimiter</code> som ska övervägas.\r\n    En valfri lista <code>startIndex</code> indikerar vilken förekomst av <code>startDelimiter</code> som ska övervägas, samt om indexering ska ske från starten eller slutet av indata.\r\n    <code>endIndex</code> är liknande, förutom att indexering görs relativt till <code>startIndex</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hämtar delen av \"111 (222) 333 (444)\" mellan den (första) öppna parentesen och den (första) stängda parentesen som kommer efter.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "Hämtar delen av \"111 (222) 333 (444)\" mellan den andra öppna parentesen och den (första) stängda parentesen som kommer efter.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "Hämtar delen av \"111 (222) 333 (444)\" mellan den andra öppna parentesen från slutet och den andra stängda parentesen som kommer efter.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "Infogar ett textvärde i ett annat vid en angiven position.",
        "Documentation.LongDescription": "Returnerar resultatet av att textvärdet <code>newText</code> infogas i textvärdet <code>text</code> vid position <code>offset</code>. Positioner börjar vid 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Infoga \"C\" mellan \"B\" och \"D\" i \"ABD\".",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "Returnerar en ny, slumpmässig GUID (globalt unik identifierare).",
        "Documentation.LongDescription": "Returnerar en ny, slumpmässig GUID (globalt unik identifierare).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "Ersätter alla förekomster av den angivna delsträngen i texten.",
        "Documentation.LongDescription": "Returnerar resultatet från ersättningen av alla förekomster av textvärdet <code>old</code> i textvärdet <code>text</code> med textvärdet <code>new</code>. Den här funktionen är skiftlägeskänslig.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Ersätt varje förekomst av \"the\" i en mening med \"a\".",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "Tar bort ett teckenintervall och infogar ett nytt värde vid en angiven position.",
        "Documentation.LongDescription": "Returnerar resultatet från borttagningen av ett antal tecken, <code>count</code>, från textvärdet <code>text</code> med början vid position <code>offset</code> och den efterföljande infogningen av textvärdet <code>newText</code> vid samma position i <code>text</code>.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Ersätt ett enskilt tecken vid position 2 i textvärdet \"ABGF\" med det nya textvärdet \"CDE\".",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "Lägger till en nyckel för angiven tabelltyp.",
        "Documentation.LongDescription": "Lägger till en nyckel för angiven tabelltyp.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "Returnerar en lista med identiteter som villkoret accepterar.",
        "Documentation.LongDescription": "<p>Med de angivna <code>identityProvider</code> så konverteras <code>condition</code> till listan över identiteter som <code>condition</code> returnerar <code>sant</code> för i alla auktoriseringssammanhang med <code>identityProvider</code> som identitetsprovider. Ett fel skapas om det inte går att konvertera <code>condition</code> till en lista med identiteter, till exempel om <code>condition</code> konsulterar andra attribut än användar- eller gruppidentiteter för att fatta ett beslut.</p>\r\n    <p>Observera att listan med identiteter representerar identiteterna som de visas i <code>condition</code> och ingen normalisering (t.ex. grupputökning) utförs på dem.</p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "Komprimerar ett binärt värde med hjälp av den givna komprimeringstypen.",
        "Documentation.LongDescription": "Komprimerar ett binärt värde med hjälp av den givna komprimeringstypen. Resultatet av det här anropet är en komprimerad kopia av indata. Komprimeringstyperna inkluderar:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Komprimerar det binära värdet.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "Dekomprimerar ett binärvärde genom att använda den angivna komprimeringstypen.",
        "Documentation.LongDescription": "Dekomprimerar ett binärt värde genom att använda den angivna komprimeringstypen. Resultatet av det här anropet är en dekomprimerad kopia av indata. Komprimeringstyper inkluderar:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Dekomprimerar binärvärdet.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "Returnerar en delmängd av binärvärdet med start vid en förskjutning.",
        "Documentation.LongDescription": "Returnerar en delmängd av binärvärdet med början vid förskjutningen <code>binary</code>. En valfri parameter, <code>offset</code>, anger maxlängden för delmängden.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Returnerar en delmängd av binärvärdet med start vid förskjutning 6.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "Returnerar en delmängd med längden 2 från förskjutningen 6 av binärvärdet.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "Delar upp den angivna binärfilen i en lista över binärfiler med hjälp av den angivna sidstorleken.",
        "Documentation.LongDescription": "Delar upp <code>binary</code> i en lista med binärfiler där det första elementet i utdatalistan är en binärfil som innehåller först <code>pageSize</code> byte från\r\n    källbinärfilen, nästa element i utdatalistan är en binärfil som innehåller följande <code>pageSize</code> byte från källbinärfilen osv.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "Skapar eller utvidgar en binär med användardefinierade hanterare för fråge- och åtgärdsåtgärder.",
        "Documentation.LongDescription": "<p>Returnerar en vy över <code>binary</code> där de funktioner som specificerats i <code>handlers</code> används i stället för en åtgärds standardbeteende när åtgärden tillämpas på vyn.</p>\r\n<p>Om <code>binary</code> anges, är alla hanteringsfunktioner valfria. Om <code>binary</code> inte anges krävs funktionerna <code>GetStream</code>. Om en hanterarfunktion inte är specificerad för en operation, tillämpas standardbeteendet för operationen på <code>binary</code> istället (förutom i fallet med <code>GetExpression</code>).</p>\r\n<p>Hanterarfunktioner måste returnera ett värde som semantiskt motsvarar resultatet av att tillämpa åtgärden på <code>binary</code> (eller den resulterande vyn när det gäller <code>GetExpression</code>).</p>\r\n<p>Om en hanterarfunktion meddelar ett fel tillämpas åtgärdens standardbeteende på vyn.</p>\r\n<p><code>Binary.View</code> kan användas för att implementera vikning på en datakälla – översättningen av M-frågor till källspecifika uppgifter (t.ex. för att skapa T-SQL-instruktioner från M-frågor).</p>\r\n<p>En mer fullständig beskrivning av <code>Binary.View</code> finns i den publicerade dokumentationen.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Skapa en grundläggande vy som inte kräver åtkomst till data för att fastställa längden.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "Returnerar ett binärformat med den byteordning som anges med en funktion.",
        "Documentation.LongDescription": "Returnerar ett binärformat med den byteordning som anges med <code>binaryFormat</code>. Standardbyteordningen är <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "Returnerar ett binärformat som väljer nästa binärformat baserat på ett värde som redan har lästs.",
        "Documentation.LongDescription": "Returnerar ett binärformat som väljer nästa binärformat baserat på ett värde som redan har lästs. Värdet i binärformat som genereras med den här funktionen används i faser:<ul>\r\n<li>Binärformatet som anges av parametern <code>binaryFormat</code> används för att läsa ett värde.</li>\r\n<li>Värdet skickas till den choice-funktion som anges av parametern <code>chooseFunction</code>.</li>\r\n<li>Choice-funktionen inspekterar värdet och returnerar ett andra binärformat.</li>\r\n<li>Det andra binärformatet används för att läsa ett andra värde.</li>\r\n<li>Om combine-funktionen anges skickas det första och andra värdet till combine-funktionen och det resulterande värdet returneras.</li>\r\n<li>Om combine-funktionen inte anges returneras det andra värdet.</li>\r\n<li>Det andra värdet returneras.</li>\r\n</ul>Den valfria parametern <code>type</code> anger typen av binärformat som returneras av choice-funktionen. <code>type any</code>, <code>type list</code> eller <code>type binary</code> kan anges. Om parametern <code>type</code> inte anges används <code>type any</code>. Om <code>type list</code> eller <code>type binary</code> används kanske systemet kan returnera ett strömmande <code>binary</code>- eller <code>list</code>-värde i stället för ett buffrat, vilket kan minska mängden minne som krävs för att läsa formatet.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "Läs en lista med byte där antalet element bestäms av den första byten.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "Läs en lista med byte där antalet element bestäms av den första byten, och bevara den första lästa byten.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "Läs en lista med byte där antalet element bestäms av den första byten med hjälp av en strömningslista.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "Returnerar ett binärformat som läser en grupp med objekt.",
        "Documentation.LongDescription": "Parametrarna är som följer:\r\n<ul>\r\n<li>Parametern <code>binaryFormat</code> anger binärformatet för nyckelvärdet.</li>\r\n<li>Parametern <code>group</code> ger information om gruppen med kända objekt.</li>\r\n<li>Den valfria parametern <code>extra</code> kan användas för att ange en funktion som returnerar ett värde i binärformat för oväntade nyckelvärden.  Om parametern <code>extra</code> inte anges returneras ett fel om det finns oväntade nyckelvärden.</li>\r\n</ul>\r\nParametern <code>group</code> anger en lista med objektdefinitioner.  Varje objektdefinition är en lista som innehåller mellan 3 och 5 värden enligt följande:\r\n<ul>\r\n<li>Nyckelvärde.  Värdet på den nyckel som hör till objektet.  Detta måste vara ett unikt värde i uppsättningen med objekt.</li>\r\n<li>Objektformat.  Binärformatet för objektets värde.  Detta gör att objekten kan ha olika format. </li>\r\n<li>Objektförekomst.  <code>BinaryOccurrence.Type</code>-värdet som anger hur många gånger objektet förväntas förekomma i gruppen.   Obligatoriska objekt som saknas genererar ett fel.  Obligatoriska eller valfria dubblettobjekt hanteras som oväntade nyckelvärden.</li>\r\n<li>Standardobjektvärde (valfritt).  Om standardobjektvärdet visas i objektdefinitionslistan och det inte är null, används det i stället för standardvärdet.  Standardvärdet för upprepade eller valfria objekt är null, och standardvärdet för upprepade värden är en tom lista { }.</li>\r\n<li>Objektvärdetransformering (valfritt).   Om funktionen för objektvärdetransformering finns med i objektdefinitionslistan och den inte är null, anropas funktionen för att transformera objektvärdet innan det returneras.  Transform-funktionen anropas bara om objektet förekommer i dina indata (den anropas aldrig med standardvärdet). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "Följande förutsätter ett nyckelvärde som är en enskild byte, med 4 förväntade objekt i gruppen som samtliga har en byte data som följer efter nyckeln. Objekten visas i indata på följande sätt:\r\n<ul>\r\n<li>Nyckel 1 är obligatorisk och visas med värdet 11.</li>\r\n<li>Nyckel 2 upprepas och visas två gånger med värdet 22 och resulterar i värdet { 22, 22 }.</li>\r\n<li>Nyckel 3 är valfri, visas inte och resulterar i ett null-värde.</li>\r\n<li>Nyckel 4 upprepas men visas inte och resulterar i värdet { }.</li>\r\n<li>Nyckel 5 är inte en del av gruppen, men visas en gång med värdet 55. Extra-funktionen anropas med nyckelvärdet 5 och returnerar formatet för det värdet (BinaryFormat.Byte). Värdet 55 läses och ignoreras.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "Följande exempel illustrerar objektvärdetransformeringen och standardobjektvärdet. Det upprepade objektet med nyckel 1 summerar listan med värden som läses med List.Sum. Det valfria objektet med nyckel 2 har standardvärdet 123 i stället för null.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "Returnerar ett binärformat som begränsar mängden data som kan läsas.",
        "Documentation.LongDescription": "Returnerar ett binärformat som begränsar mängden data som kan läsas. Både <code>BinaryFormat.List</code> och <code>BinaryFormat.Binary</code> kan användas för att läsa till slutet av data. <code>BinaryFormat.Length</code> kan användas för att begränsa antalet byte som läses. Parametern <code>binaryFormat</code> anger binärformatet som ska begränsas. Parametern <code>length</code> anger antalet byte som ska läsas. Parametern <code>length</code> kan antingen vara ett numeriskt värde eller ett binärformatvärde som anger formatet för längdvärdet som föregår det lästa värdet.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "Begränsa antalet lästa byte till 2 när en lista med byte läses.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Begränsa antalet byte som lästs vid läsning av en lista med byte till bytevärdet före listan.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "Returnerar ett binärformat som transformerar värdena som ett annat binärformat läser.",
        "Documentation.LongDescription": "Returnerar ett binärformat som transformerar värdena som ett annat binärformat läser. Parametern <code>binaryFormat</code> anger binärformatet som används för att läsa värdet. <code>function</code> anropas med det lästa värdet och returnerar det transformerade värdet.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "Läs en byte och addera en till den.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "Returnerar en jämförelsefunktion som använder ordningstalsregler för att jämföra värden.",
        "Documentation.LongDescription": "Returnerar en jämförelsefunktion som använder ordningstalsregler för att jämföra de angivna värdena <code>x</code> and <code>y</code>.<br>\r\n        <br>\r\n        En jämförelsefunktion accepterar två argument och returnerar -1, 0 eller 1 baserat på om det första värdet är mindre än, lika med,  eller större än den andra.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Jämför med ordningstalsregler om \"encyclopædia\" och \"encyclopaedia\" är ekvivalenta. Observera att dessa är ekvivalenta vid användning av <code>Comparer.FromCulture(\"en-US\")</code>. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "Returnerar en skiftlägeskänslig jämförelsefunktion som använder ordningstalsregler för att jämföra värden.",
        "Documentation.LongDescription": "Returnerar en skiftlägesokänslig jämförelsefunktion som använder ordningstalsregler för att jämföra de angivna värdena  <code>x</code> and <code>y</code>.<br>\r\n        <br>\r\n        En jämförelsefunktion accepterar två argument och returnerar -1, 0 eller 1 baserat på om det första värdet är mindre än, lika med,  eller större än den andra.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Använder skiftlägeskänsliga ordningstalsregler, jämför \"Abc\" med \"abc\". Observera att \"Abc\" är mindre än \"abc\" vid användning av <code>Comparer.Ordinal</code>. ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "Returnerar en egenskap för ett dimensionsattribut.",
        "Documentation.LongDescription": "Returnerar egenskapen <code>propertyName</code> för dimensionsattributet <code>attribute</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "Returnerar en egenskap för ett mått (cellegenskap).",
        "Documentation.LongDescription": "Returnerar egenskapen <code>propertyName</code> för dimensionsattributet <code>measure</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "Datakälla för SQL Databricks-fråga",
        "Documentation.LongDescription": "Definiera en Databricks-datakälla för körning av SQL-frågor"
      },
      "ReturnType": "Databricks SQL-fråga",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "Datakälla för SQL Databricks-fråga",
        "Documentation.LongDescription": "Definiera en Databricks-datakälla för körning av SQL-frågor"
      },
      "ReturnType": "Databricks SQL-fråga",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "Lägger till angivna dagar i datumet.",
        "Documentation.LongDescription": "Returnerar <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-resultatet när <code>numberOfDays</code> dagar har lagts till i <code>datetime</code>-värdet <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som dagar läggs till i.</li>\r\n      <li><code>numberOfDays</code>: Antalet dagar som ska läggas till.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lägg till 5 dagar i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som representerar den 14 maj 2011.",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "Lägger till angivna månader i datumet.",
        "Documentation.LongDescription": "Returnerar <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-resultatet när <code>numberOfMonths</code> månader har lagts till i <code>datetime</code>-värdet <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som månader läggs till i.</li>\r\n        <li><code>numberOfMonths</code>: Antalet månader som ska läggas till.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lägg till 5 månader i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som representerar den 14 maj 2011.",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "Lägg till 18 månader i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som representerar datumet och tiden motsvarande den 14 maj 2011 08:15:22.",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "Lägger till angivna kvartal i datumet.",
        "Documentation.LongDescription": "Returnerar <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-resultatet när <code>numberOfQuarters</code> kvartal har lagts till i <code>datetime</code>-värdet <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som kvartal läggs till i.</li>\r\n      <li><code>numberOfQuarters</code>: Antalet kvartal som ska läggas till.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lägg till 1 kvartal i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som representerar den 14 maj 2011.",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "Lägger till angivna veckor i datumet.",
        "Documentation.LongDescription": "Returnerar <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-resultatet när <code>numberOfWeeks</code> veckor har lagts till i <code>datetime</code>-värdet <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som veckor läggs till i.</li>\r\n      <li><code>numberOfWeeks</code>: Antalet veckor som ska läggas till.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lägg till 2 veckor i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som representerar den 14 maj 2011.",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "Lägger till angivna år i datumet.",
        "Documentation.LongDescription": "Returnerar <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-resultatet när <code>numberOfYears</code> läggs till i ett <code>datetime</code>-värde <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som år läggs till i.</li>\r\n        <li><code>numberOfYears</code>: Antalet år som ska läggas till.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lägg till 4 år i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som representerar den 14 maj 2011.",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "Lägg till 10 år i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet som representerar datumet och tiden motsvarande den 14 maj 2011 08:15:22.",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "Anger om det här datumet infaller under det nästkommande antalet dagar enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller den aktuella dagen.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästkommande antal dagar enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom aktuell dag.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>days</code>: Antalet dagar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om dagen efter aktuell systemtid infaller under de kommande två dagarna.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "Anger om det här datumet infaller under det nästkommande antalet månader enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller den aktuella månaden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa antal månader enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella månaden.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>months</code>: Antalet månader.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om månaden efter aktuell systemtid infaller under de kommande två månaderna.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "Anger om det här datumet infaller under det nästkommande antalet kvartal enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella kvartalet.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa antal kvartal enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under aktuellt kvartal.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>quarters</code>: Antal kvartal.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om kvartalet efter aktuell systemtid infaller under de kommande två kvartalen.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "Anger om det här datumet infaller under det nästkommande antalet veckor enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller den aktuella veckan.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa antalet veckor enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella veckan.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>weeks</code>: Antalet veckor.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om veckan efter aktuell systemtid infaller under de kommande två veckorna.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "Anger om det här datumet infaller under det nästkommande antalet år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella året.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under följande antal år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom det aktuella året.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>years</code>: Antalet år.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om året efter aktuell systemtid infaller under de kommande två åren.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "Anger om det här datumet infaller under det föregående antalet dagar, enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller den aktuella dagen.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under det föregående antalet dagar enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella dagen.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>days</code>: Antalet dagar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om dagen före aktuell systemtid infaller under de föregående två dagarna.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "Anger om det här datumet infaller under det föregående antalet månader enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella månaden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under det föregående antalet månader enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt när den skickas ett värde som infaller inom den aktuella månaden.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>months</code>: Antalet månader.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om månaden före aktuell systemtid infaller under de föregående två månaderna.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "Anger om det här datumet infaller under det föregående antalet kvartal enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom aktuellt kvartal.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under det föregående antalet kvartal enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt när den skickas ett värde som infaller inom det aktuella kvartalet.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>quarters</code>: Antal kvartal.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om kvartalet före aktuell systemtid infaller under de föregående två kvartalen.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "Anger om det här datumet infaller under det föregående antalet veckor enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella veckan.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under det föregående antalet veckor enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt när den skickas ett värde som infaller inom den aktuella veckan.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>weeks</code>: Antalet veckor.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om veckan före aktuell systemtid infaller under de föregående två veckorna.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "Anger om det här datumet infaller under det föregående antalet år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella året.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under det föregående antalet år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt när den skickas ett värde som infaller inom det aktuella året.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>years</code>: Antalet år.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om året före aktuell systemtid infaller under de föregående två åren.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "Lägger till tidszonsinformation i datetime-värdet.",
        "Documentation.LongDescription": "Lägger till tidszonsinformation i det <code>dateTime</code>-värdet. Tidszonsinformationen innehåller <code>timezoneHours</code> och eventuellt <code>timezoneMinutes</code>, som anger önskad förskjutning från UTC-tid.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Ange tidszonen till UTC+7:30 (7 timmar och 30 minuter efter UTC).",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "Indikerar om denna datetime infaller under nästa antalet timmar enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella timmen.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under de närmast följande timmarna enligt systemets datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom aktuell timme.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>hours</code>: Antalet timmar.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om timman efter den aktuella systemtiden motsvarar de närmast följande två timmarna.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "Indikerar om denna datetime infaller under nästa antal minuter enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella minuten.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under de närmaste minuterna, enligt systemets datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom aktuell minut.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>minutes</code>: Antalet minuter.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om minuten efter den aktuella systemtiden infaller inom de närmaste två minuterna.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "Indikerar om denna datetime infaller under nästa antalet sekunder enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella sekunden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under de nästa sekunderna enligt systemets datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under aktuell sekund.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>seconds</code>: Antalet sekunder.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om sekunden efter den aktuella systemtiden infaller inom de närmast följande två sekunderna.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "Indikerar om denna datetime infaller under det föregående antalet timmar enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella timmen.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under de närmast föregående timmarna enligt systemets datum och tid. Observera att den här funktionen returnerar falskt när den skickas ett värde som infaller under den aktuella timmen.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>hours</code>: Antalet timmar.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om timman före den aktuella systemtiden motsvarar de närmast föregående timmarna.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "Indikerar om denna datetime infaller under det föregående antalet minuter enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella minuten.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under de föregående minuterna enligt systemets datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella minuten.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>minutes</code>: Antalet minuter.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om minuten före den aktuella systemtiden motsvarar de närmast föregående två minuterna.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "Indikerar om denna datetime infaller under det föregående antalet sekunderna enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella sekunden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under de föregående antalet sekunder enligt systemets datum och tid. Observera att den här funktionen returnerar falskt när den skickas ett värde som infaller inom den aktuella sekunden.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      <li><code>seconds</code>: Antalet sekunder.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om sekunden före den aktuella systemtiden motsvarar de närmast föregående två sekunderna.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "Ändrar tidszonen för värdet.",
        "Documentation.LongDescription": "Ändrar tidszonsinformationen för datetimezone-värdet <code>dateTimeZone</code> till den nya tidszonsinformationen från <code>timezoneHours</code> och <code>timezoneMinutes</code> (valfri).\r\n    Om <code>dateTimeZone</code> inte har någon timezone-komponent genereras ett undantag.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Ändra tidszonsinformationen för #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) till 8 timmar.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "Ändra tidszonsinformationen för #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) till -30 minuter.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "Använder ett värde baserat på namnet i ett inbäddat kombinationsprogram (mashup).",
        "Documentation.LongDescription": "Använder ett värde baserat på namnet i ett inbäddat kombinationsprogram (mashup).",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "Skapar en funktion med en viss parametersignatur för en funktion som har ett enda listargument",
        "Documentation.LongDescription": "Ta den unära funktionen <code>function</code> och skapa en ny funktion med typen <code>functionType</code> som i sin tur skapar en lista av dess argument och skickar den till <code>function</code>.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Konverterar List.Sum till en tvåargumentsfunktion vars argument läggs ihop",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "Konverterar en funktion som tar en lista till en tvåargumentsfunktion",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "Anropar angiven funktion",
        "Documentation.LongDescription": "Anropar angiven funktion baserat på den angivna listan med argument och returnerar resultatet.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Anropar Record.FieldNames med ett argument [A=1,B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "Anropar den givna funktionen efter det att den angivna varaktigheten har löpt ut.",
        "Documentation.LongDescription": "Returnerar resultatet av anropandet av <code>function</code> efter det att varaktigheten <code>delay</code> har löpt ut.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "Skapar en skalärfunktion ovanpå en vektorfunktion vilket batchbearbetar flera anrop.",
        "Documentation.LongDescription": "<p>Returnerar en skalär funktion av typen <code>scalarFunctionType</code> som anropar <code>vectorFunction</code> med en enda rad med argument och returnerar sin enda utdata. Dessutom när skalärfunktionen upprepade gånger används för varje rad i en tabell med indata, till exempel i Table.AddColumn, kommer istället <code>vectorFunction</code> att användas en gång för alla indata.</p>\r\n<p><code>vectorFunction</code> skickas en tabell vars kolumner i namn och position matchar parametrarna för <code>scalarFunctionType</code>. Varje rad i den här tabellen innehåller argument för ett anrop till skalärfunktionen med de kolumner som motsvarar parametrarna för <code>scalarFunctionType</code>.</p>\r\n<p><code>vectorFunction</code> måste returnera en lista med samma längd som indatatabellen vars objekt vid varje position måste vara samma resultat som utvärderar skalärfunktionen på indataraden för samma position.</p>\r\n<p>Indatatabellen förväntas strömmas in så <code>vectorFunction</code> förväntas strömma sina utdata allteftersom indata kommer in och bara arbeta med ett segment indata åt gången. <code>vectorFunction</code> får specifikt inte räkna upp dess indatatabell mer än en gång.</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "Skapar en post som motsvarar en geografisk punkt utifrån delar.",
        "Documentation.LongDescription": "Skapar en post som motsvarar en geografisk punkt utifrån dess beståndsdelar som longitud, latitud och, om det finns, höjd (Z) och mått (M). En valfri spatial referensidentifierare (SRID) kan anges om värdet är något annat än standardvärdet (4326).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "Skapar en post som motsvarar en geometrisk punkt utifrån delar.",
        "Documentation.LongDescription": "Skapar en post som motsvarar en geometrisk punkt utifrån dess beståndsdelar som X-koordinat, Y-koordinat och om det finns, Z-koordinat och mått (M). En valfri spatial referensidentifierare (SRID) kan anges om värdet är något annat än standardvärdet (0).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "Skapar en identitet.",
        "Documentation.LongDescription": "Skapar en identitet.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "Fastställer om en identitet är medlem i en identitetssamling.",
        "Documentation.LongDescription": "Fastställer om en identitet är medlem i en identitetssamling.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "Returnerar en lista som består av alla förskjutna element i en lista.",
        "Documentation.LongDescription": "Returnerar en lista som består av alla förskjutna element i en lista. Växlar mellan att använda och hoppa över värden från listan <code>list</code> beroende på parametrarna.\r\n    <ul>\r\n    <li><code>count</code>: Anger antalet värden som hoppas över varje gång.</li>\r\n    <li><code>repeatInterval</code>: Ett valfritt upprepningsintervall som anger hur många värden som läggs till mellan de överhoppade värdena.</li>\r\n    <li><code>offset</code>: En valfri offset-parameter som kan användas för att hoppa över värdena vid den ursprungliga förskjutningen.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från {1..10} som hoppar över det första numret.",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "Skapa en lista från {1..10} som hoppar över vartannat nummer.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "Skapa en lista från {1..10} som börjar vid 1 och hoppar över vartannat nummer.",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "Skapa en lista från {1..10} som börjar vid 1, hoppar över ett värde, bevarar två värden o.s.v.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "Anger om listan innehåller värdet.",
        "Documentation.LongDescription": "Anger om listan <code>list</code> innehåller värdet <code>value</code>. \r\n    Returnerar sant om värdet finns i listan. Annars returneras falskt. Ett valfritt ekvationskriterievärde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Ta reda på om listan {1, 2, 3, 4, 5} innehåller 3.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "Ta reda på om listan {1, 2, 3, 4, 5} innehåller 6.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "Anger om en lista innehåller alla värdena i en annan lista.",
        "Documentation.LongDescription": "Anger om listan <code>list</code> innehåller alla värdena i en annan lista, <code>values</code>.\r\n    Returnerar true om värdet finns i listan. Annars returneras false. Ett valfritt ekvationsvillkorsvärde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Ta reda på om listan {1, 2, 3, 4, 5} innehåller 3 och 4.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "Ta reda på om listan {1, 2, 3, 4, 5} innehåller 5 och 6.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "Anger om en lista innehåller något av värdena i en annan lista.",
        "Documentation.LongDescription": "Anger om listan <code>list</code> innehåller något av värdena i en annan lista, <code>values</code>.\r\n        Returnerar true om värdet finns i listan. Annars returneras false. Ett valfritt ekvationsvillkorsvärde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Ta reda på om listan {1, 2, 3, 4, 5} innehåller 3 eller 9.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "Ta reda på om listan {1, 2, 3, 4, 5} innehåller 6 eller 7.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "Returnerar kovariansen mellan de två listorna med tal.",
        "Documentation.LongDescription": "Returnerar kovariansen mellan två listor, <code>numberList1</code> och <code>numberList2</code>. <code>numberList1</code> och <code>numberList2</code> måste innehålla samma antal <code>number</code>-värden.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Beräkna kovariansen mellan två listor.",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "Returnerar skillnaden mellan de två angivna listorna.",
        "Documentation.LongDescription": "Returnerar objekten i listan <code>list1</code> som inte finns med i listan <code>list2</code>. Dubblettvärden stöds.\r\n    Ett valfritt ekvationsvillkorsvärde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta de objekt i listan {1, 2, 3, 4, 5} som inte finns med i {4, 5, 3}.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "Hitta de objekt i listan {1, 2} som inte finns med i {1, 2, 3}.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "Returnerar en lista med värden (inklusive postfält) som innehåller den angivna texten.",
        "Documentation.LongDescription": "Returnerar en lista med värden från listan <code>list</code> som innehöll värdet <code>text</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta de textvärden i listan {\"a\", \"b\", \"ab\"} som matchar \"a\". ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "Returnerar den första uppsättningen objekt i listan genom att ange hur många objekt som ska returneras eller ett kvalificeringsvillkor.",
        "Documentation.LongDescription": " <ul>\r\n  <li>Om ett tal anges returneras så många objekt. </li>\r\n  <li>Om ett villkor anges returneras alla objekt som inledningsvis uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta de första värdena i listan {3, 4, 5, -1, 7, 8, 2} som är större än 0.",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "Returnerar true om alla värden i listan uppfyller condition-funktionen.",
        "Documentation.LongDescription": "Returnerar <code>true</code> om alla värden i listan <code>list</code> uppfyller condition-funktionen, <code>condition</code>. Annars returneras <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om alla värden i listan {11, 12, 13} är större än 10.",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om alla värden i listan {1, 2, 3} är större än 10.",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "Returnerar true om något av värdena uppfyller condition-funktionen.",
        "Documentation.LongDescription": "Returnerar <code>true</code> om något av värdena i listan <code>list</code> uppfyller condition-funktionen, <code>condition</code>. Annars returneras <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om något av värdena i listan {9, 10, 11} är större än 10.",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om något av värdena i listan {1, 2, 3} är större än 10.",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "Returnerar de största värdena i listan. Antalet värden som ska returneras eller filtreringsvillkoret måste anges.",
        "Documentation.LongDescription": "Returnerar de största värdena i listan <code>list</code>.\r\n    När raderna har sorterats kan valfria parametrar anges för att filtrera resultatet ytterligare. Den valfria parametern <code>countOrCondition</code>, anger antalet värden som ska returneras eller ett filtreringsvillkor. Den valfria parametern <code>comparisonCriteria</code>, anger hur värdena i listan ska jämföras.\r\n <ul>\r\n        <li> <code>list</code>: Listan med värden.</li>\r\n        <li> <code>countOrCondition</code>: Om ett tal anges returneras en lista med upp till <code>countOrCondition</code> objekt i stigande ordning. Om ett villkor anges returneras en lista med objekt som inledningsvis uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Valfritt]</i> Ett valfritt <code>comparisonCriteria</code>-värde kan anges för att fastställa hur objekten i listan ska jämföras. Om den här parametern är null används standardjämförelsefunktionen. \r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "Returnerar de minsta värdena i listan. Antalet värden som ska returneras eller filtreringsvillkoret kan anges.",
        "Documentation.LongDescription": "Returnerar de minsta värdena i listan: <code>list</code>.\r\n    Parametern, <code>countOrCondition</code>, anger antalet värden som ska returneras eller ett filtreringsvillkor. Den valfria parametern, <code>comparisonCriteria</code>, anger hur värdena i listan ska jämföras.\r\n <ul>\r\n        <li> <code>list</code>: Listan med värden.</li>\r\n        <li> <code>countOrCondition</code>: Om ett tal anges returneras en lista med upp till <code>countOrCondition</code> objekt i stigande ordning. Om ett villkor anges returneras en lista med objekt som inledningsvis uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. Om den här parametern är null returneras det enskilt minsta värdet i listan.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Valfritt]</i> Ett valfritt <code>comparisonCriteria</code>-värde kan anges för att fastställa hur objekten i listan ska jämföras. Om den här parametern är null används standardjämförelsefunktionen. \r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta de 5 minsta värdena i listan <code>{3, 4, 5, -1, 7, 8, 2}</code>.",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "Returnerar en lista med tal baserat på ett ursprungligt värde, antal och ett valfritt ökningsvärde.",
        "Documentation.LongDescription": "Returnerar en lista med tal baserat på ett ursprungligt värde, antal och ett valfritt ökningsvärde. Standardökningsvärdet är 1.\r\n<ul>\r\n   <li><code>start</code>: Det ursprungliga värdet i listan.</li>\r\n   <li><code>count</code>: Antalet värden som ska skapas.</li>\r\n   <li><code>increment</code>: <i>[Valfritt]</i> Värdet som du vill öka med. Om inget anges ökas värdena med 1.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Generera en lista med 10 efterföljande tal som börjar med 1.",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "Generera en lista med 10 tal som börjar med 1, med en ökning på 2 för varje efterföljande tal.",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "Returnerar en eller flera percentiler som motsvarar de givna sannolikheterna.",
        "Documentation.LongDescription": "Returnerar en eller flera exempelpercentiler i listan <code>list</code>. Om värdet <code>percentiles</code> är ett tal mellan 0,0 och 1,0 betraktas det som en percentil och resultatet blir\r\n    ett enstaka värde som motsvarar den sannolikheten. Om värdet <code>percentiles</code> är en lista över tal med värden mellan 0,0 och 1,0 blir resultatet en lista över percentiler\r\n    som motsvarar den angivna sannolikheten. Avancerade användare kan använda alternativet PercentileMode i <code>options</code> för att välja en mer specifik interpoleringsmetod, men detta rekommenderas i de flesta fall inte.\r\n    Fördefinierade symboler <code>PercentileMode.ExcelInc</code> och <code>PercentileMode.ExcelExc</code> matchar de interpoleringsmetoder som används av Excel-funktionerna\r\n    <code>PERCENTIL.INK</code> och <code>PERCENTIL.EXK</code>. Standardfunktionssättet matchar <code>PercentileMode.ExcelInc</code>. Symbolerna\r\n    <code>PercentileMode.SqlCont</code> och <code>PercentileMode.SqlDisc</code> matchar SQL Server-funktionssättet för <code>PERCENTILE_CONT</code> respektive\r\n    <code>PERCENTILE_DISC</code>.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta den första kvartilen i listan <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Hitta kvartilerna i listan <code>{5, 3, 1, 7, 9}</code> med en interpoleringsmetod som matchar Excels <code>PERCENTIL.EXK</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "Returnerar förskjutningen eller förskjutningarna för ett värde i en lista.",
        "Documentation.LongDescription": "Returnerar förskjutningen där värdet <code>value</code> förekommer i listan <code>list</code>. Returnerar -1 om värdet inte hittas.\r\n    En valfri förekomstparameter (<code>occurrence</code>) kan anges.\r\n<ul>\r\n   <li><code>occurrence</code>: Det högsta antalet förekomster som ska rapporteras.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Hitta positionen i listan {1, 2, 3} där värdet 3 förekommer.",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "Returnerar den första förskjutningen för ett värde i en lista.",
        "Documentation.LongDescription": "Returnerar förskjutningen i listan <code>list</code> för den första förekomsten av ett värde i listan <code>values</code>. Returnerar -1 om ingen förekomst hittas.\r\n    En valfri förekomstparameter (<code>occurrence</code>) kan anges.\r\n<ul>\r\n   <li><code>occurrence</code>: Det högsta antalet förekomster som kan returneras.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Hitta den första positionen i listan {1, 2, 3} där värdet 2 eller 3 förekommer.",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "Returnerar en delmängd av listan med början från en förskjutning.",
        "Documentation.LongDescription": "Returnerar en delmängd av listan med början från förskjutningen <code>list</code>. En valfri parameter, <code>offset</code>, anger det högsta antalet objekt i delmängden.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta delmängden med början vid förskjutningen 6 i listan med talen 1 till och med 10.",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "Hitta delmängden med längden 2 från förskjutningen 6, från listan med talen 1 till och med 10.",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "Tar bort objekt från list1 som finns i listan.",
        "Documentation.LongDescription": "Tar bort alla förekomster av de angivna värdena i <code>list2</code> från <code>list1</code>. Om värdena i <code>list2</code> inte finns i <code>list1</code> returneras den ursprungliga listan.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Ta bort objekten i listan {2, 4, 6} från listan {1, 2, 3, 4, 2, 5, 5}.",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "Tar bort alla förekomster av indatavärdena.",
        "Documentation.LongDescription": "Tar bort alla förekomster av de angivna värdena i <code>list2</code> från listan <code>list1</code>. Om värdena i <code>list2</code> inte finns i <code>list1</code> returneras den ursprungliga listan.\r\n    Ett valfritt ekvationsvillkorsvärde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från {1, 2, 3, 4, 5, 5} utan {1, 5}.",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "Tar bort ett antal värden med början vid den angivna positionen.",
        "Documentation.LongDescription": "Tar bort <code>count</code> värden i <code>list</code> med början vid den angivna positionen, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Ta bort 3 värden i listan {1, 2, 3, 4, -6, -2, -1, 5} med början vid index 4.",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "Returnerar en lista som är antalet repetitioner av den ursprungliga listan.",
        "Documentation.LongDescription": "Returnerar en lista som är <code>count</code> repetitioner av den ursprungliga listan, <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista där {1, 2} upprepas 3 gånger.",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "Tillämpar varje ersättning av { old, new }.",
        "Documentation.LongDescription": "Utför angivna ersättningar för listan <code>list</code>. En ersättningsåtgärd, <code>replacements</code>, består av en lista med två värden, det gamla värdet och det nya värdet, som anges i en lista.\r\n    Ett valfritt ekvationsvillkorsvärde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från {1, 2, 3, 4, 5} genom att ersätta värdet 5 med -5 och värdet 1 med -1.",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "Returnerar en lista med värden som matchar villkoret.",
        "Documentation.LongDescription": "Returnerar en lista med värden från listan <code>list</code> som matchar urvalsvillkoret <code>selection</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Sök efter de värden i listan {1, -3, 4, 9, -2} som är större än 0.",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "Delar upp den angivna listan i en lista med listor med hjälp av den angivna sidstorleken.",
        "Documentation.LongDescription": "Delar upp <code>list</code> i en lista med listor där det första elementet i utdatalistan är en lista som innehåller först <code>pageSize</code> element från\r\n    källistan, nästa element i utdatalistan är en lista som innehåller följande <code>pageSize</code> element från källistan osv.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "Returnerar en ny lista med värden som beräknats från den här listan.",
        "Documentation.LongDescription": "Returnerar en ny lista med värden genom att köra transform-funktionen <code>transform</code> på listan, <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Addera 1 till varje värde i listan {1, 2}.",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "Returnerar arctangens för divisionen av de två talen.",
        "Documentation.LongDescription": "Returnerar arctangens för divisionen av de två talen, <code>y</code> och <code>x</code>. Divisionen skapas som <code>y</code>/<code>x</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "Returnerar resultatet av en bitvis \"And\"-åtgärd mellan de två indatavärdena.",
        "Documentation.LongDescription": "Returnerar resultatet av en bitvis \"And\"-åtgärd mellan <code>number1</code> och <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "Returnerar resultatet av en bitvis \"Or\"-åtgärd mellan de två indatavärdena.",
        "Documentation.LongDescription": "Returnerar resultatet av en bitvis \"Or\"-åtgärd mellan <code>number1</code> och <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "Skiftar bitarna till vänster.",
        "Documentation.LongDescription": "Returnerar resultatet från ett bitvis skifte till vänster för <code>number1</code> med angivet antal bitar, <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "Skiftar bitarna till höger.",
        "Documentation.LongDescription": "Returnerar resultatet från ett bitvis skifte till höger för <code>number1</code> med angivet antal bitar, <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "Returnerar resultatet av en bitvis \"XOR\"-åtgärd (Exclusive-OR) mellan de två indatavärdena.",
        "Documentation.LongDescription": "Returnerar resultatet av en bitvis \"XOR\"-åtgärd (Exclusive-OR) mellan <code>number1</code> och <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "Returnerar antalet unika kombinationer.",
        "Documentation.LongDescription": "Returnerar antalet unika kombinationer från en lista med objekt, <code>setSize</code>, med angiven kombinationsstorlek, <code>combinationSize</code>.\r\n<ul>\r\n    <li><code>setSize</code>: Antalet objekt i listan.</li>\r\n    <li><code>combinationSize</code>: Antalet objekt i varje kombination.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta antalet kombinationer från sammanlagt 5 objekt när varje kombination är en grupp med 3.",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "Dividerar två tal och returnerar heltalsdelen av resultatet.",
        "Documentation.LongDescription": "Returnerar heltalsdelen av resultatet från divisionen av ett tal, <code>number1</code>, med ett annat tal, <code>number2</code>.\r\n    Om <code>number1</code> eller <code>number2</code> är null returnerar <code>Number.IntegerDivide</code> null.\r\n      <ul>\r\n        <li><code>number1</code>: Täljaren.</li>\r\n        <li><code>number2</code>: Nämnaren.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Dividera 6 med 4.",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "Dividera 8,3 med 3.",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "En heltalsdivision dividerar två tal och returnerar resten.",
        "Documentation.LongDescription": "Returnerar resten från heltalsdivisionen av <code>number</code> med <code>divisor</code>.\r\n    Om <code>number</code> eller <code>divisor</code> är null returnerar <code>Number.Mod</code> null.\r\n      <ul>\r\n        <li><code>number</code>: Täljaren.</li>\r\n        <li><code>divisor</code>: Nämnaren.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta resten när 5 divideras med 3.",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "Returnerar antalet permutationer.",
        "Documentation.LongDescription": "Returnerar antalet permutationer som kan genereras från ett antal objekt, <code>setSize</code>, med en angiven permutationsstorlek, <code>permutationSize</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta antalet permutationer från sammanlagt 5 objekt i grupper med 3.",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "Upphöjer ett tal till angivet tal.",
        "Documentation.LongDescription": "Returnerar resultatet från att <code>number</code> upphöjs till <code>power</code>.\r\n    Om <code>number</code> eller <code>power</code> är null returnerar <code>Number.Power</code> null.\r\n      <ul>\r\n        <li><code>number</code>: Basen.</li>\r\n        <li><code>power</code>: Exponenten.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta värdet 5 upphöjt till 3 (5 i kubik).",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "Returnerar ett slumptal mellan två tal.",
        "Documentation.LongDescription": "Returnerar ett slumptal mellan <code>bottom</code> och <code>top</code>.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Hämta ett slumptal mellan 1 och 5.",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "Returnerar värdet för det angivna fältet i en post.",
        "Documentation.LongDescription": "Returnerar värdet för angivet <code>field</code> i <code>record</code>. Om fältet inte hittas genereras ett undantag.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta värdet för fältet CustomerID i posten.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "Returnerar värdet på det angivna fältet i en post eller standardvärdet om fältet inte hittas.",
        "Documentation.LongDescription": "Returnerar värdet för det angivna fältet <code>field</code> i posten <code>record</code>. Om fältet inte hittas returneras den valfria <code>defaultValue</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta värdet för fältet Phone i posten, eller returnera null om det inte finns.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "Hitta värdet för fältet Phone i posten, eller returnera standardvärdet om det inte finns.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "Returnerar en post baserat på listan med fältvärden och en uppsättning fält.",
        "Documentation.LongDescription": "Returnerar en post baserat på <code>list</code> med fältvärden och en uppsättning fält. <code>fields</code> kan anges antingen med en lista med textvärden eller med en posttyp. Ett fel genereras om fälten inte är unika.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Skapa en post från en lista med fältvärden och en lista med fältnamn.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Skapa en post från en lista med fältvärden och en posttyp.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "Anger om posten innehåller angivna fält.",
        "Documentation.LongDescription": "Anger om posten <code>record</code> innehåller fälten som anges i <code>fields</code> genom att returnera ett logiskt värde (true eller false).\r\n    Flera fältvärden kan anges med hjälp av en lista.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om posten innehåller fältet CustomerID.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om posten innehåller fälten CustomerID och Address.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "Tar bort det eller de angivna fälten från indataposten.",
        "Documentation.LongDescription": "Returnerar en post som tar bort alla fält som anges i listan <code>fields</code> från indataposten <code>record</code>. Om det angivna fältet inte finns genereras ett undantag.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort fältet Price från posten.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "Ta bort fälten Price och Item från posten.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "Tillämpar namnbyten från en lista i formatet { old, new }.",
        "Documentation.LongDescription": "Returnerar en post efter namnbyte av fälten i indataposten <code>record</code> med de nya fältnamnen som anges i listan <code>renames</code>. För flera namnbyten kan en kapslad lista användas ({ {old1, new1}, {old2, new2} }.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Byt namn på fältet UnitPrice till Price från posten.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "Byt namn på fälten UnitPrice till Price och OrderNum till OrderID från posten.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "Ändrar ordning på det eller de angivna fälten till den nya ordningen.",
        "Documentation.LongDescription": "Returnerar en post efter omordning av fälten i <code>record</code> med den fältordning som anges i listan <code>fieldOrder</code>. Fältvärden bevaras och fält som inte finns i <code>fieldOrder</code> lämnas på den ursprungliga positionen.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Ändra ordning på fälten i posten.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "Returnerar en post som bara innehåller de angivna fälten.",
        "Documentation.LongDescription": "Returnerar en post som bara innehåller fälten som anges i listan <code>fields</code> från indataposten <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Välj fälten Item och Price i posten.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "Returnerar en post när angivna transformeringar har tillämpats.",
        "Documentation.LongDescription": "Returnerar en post när transformeringarna som anges i listan <code>transformOperations</code> har tillämpats på <code>record</code>.\r\n    Ett eller flera fält kan transformeras samtidigt.\r\n      <div>När det gäller ett enskilt fält som transformeras förväntas <code>transformOperations</code> vara en lista med två objekt. Det första objektet i <code>transformOperations</code> anger ett fältnamn och det andra objektet i <code>transformOperations</code> anger funktionen som ska användas för transformeringen. Till exempel: <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>När det gäller flera fält som transformeras förväntas <code>transformOperations</code> vara en lista med listor, där varje inre lista är ett par bestående av fältnamn och transformeringsåtgärd. Till exempel: <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Konverterar fältet \"Price\" till ett tal.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "Konverterar OrderID- och Price-fälten till nummer.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text enligt en övergång från en typ av tecken till en annan. Parametrarna {0} och {1} kan antingen vara en lista med tecken eller en funktion som tar ett tecken och returnerar sant/falskt.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text enligt en övergång från en typ av tecken till en annan. Parametrarna <code>before</code> och <code>after</code> kan antingen vara en lista med tecken eller en funktion som tar ett tecken och returnerar sant/falskt.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata när en versal eller gemen följs av en siffra.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "Konverterar den angivna SQL-frågan till M-kod. Den här funktionen är endast avsedd för intern användning.",
        "Documentation.LongDescription": "Konverterar den angivna <code>sql</code> frågan till M-kod, med tillgängliga identifierare som definieras av <code>environment</code>. Den här funktionen är endast avsedd för intern användning.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "Returnerar en angiven kolumn med data från tabellen som en lista.",
        "Documentation.LongDescription": "Returnerar kolumnen med data som anges av <code>column</code> från tabellen <code>table</code> som en lista.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta data i kolumnen [Name] från tabellen.",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "Returnerar en lista med namnen på de kolumner som matchar de angivna typerna.",
        "Documentation.LongDescription": "Returnerar en lista med namnen på de kolumner från tabellen <code>table</code> som matchar de angivna typerna i <code>listOfTypes</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Returnera namnen på kolumnerna av typen Number.Type från tabellen.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "Anger om den angivna posten visas som en rad i tabellen.",
        "Documentation.LongDescription": "Anger om den angivna posten, <code>row</code>, visas som en rad i <code>table</code>.\r\n    En valfri parameter, <code>equationCriteria</code>, kan anges för att hantera jämförelsen mellan raderna i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om tabellen innehåller raden.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om tabellen innehåller raden.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "Kontrollera om tabellen innehåller raden genom att bara jämföra kolumnen [Name].",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "Anger om alla angivna poster visas som rader i tabellen.",
        "Documentation.LongDescription": "Anger om alla angivna poster i listan med poster, <code>rows</code>, visas som rader i <code>table</code>.\r\n    En valfri parameter, <code>equationCriteria</code>, kan anges för att hantera jämförelsen mellan raderna i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om tabellen innehåller alla rader genom att bara jämföra kolumnen [CustomerID].",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om tabellen innehåller alla raderna.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "Anger om någon av de angivna posterna visas som rader i tabellen.",
        "Documentation.LongDescription": "Anger om någon av de angivna posterna i listan med poster, <code>rows</code>, visas som rader i <code>table</code>.\r\n    En valfri parameter, <code>equationCriteria</code>, kan anges för att hantera jämförelsen mellan raderna i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> innehåller raderna <code>[a = 1, b = 2]</code> eller <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> innehåller raderna <code>[a = 1, b = 3]</code> eller <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "Kontrollera om tabellen <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> innehåller raderna <code>[a = 1, b = 3]</code> eller <code>[a = 3, b = 5]</code> genom att bara jämföra kolumnen [a].",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "Anger om tabellen innehåller den eller de angivna kolumnerna.",
        "Documentation.LongDescription": "Anger om <code>table</code> innehåller den eller de angivna kolumnerna, <code>columns</code>. Returnerar <code>true</code> om tabellen innehåller kolumnen eller kolumnerna. Annars returneras <code>false</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om tabellen innehåller kolumnen [Name].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om tabellen innehåller kolumnerna [Name] och [PhoneNumber].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "Anger om alla raderna i tabellen uppfyller det angivna villkoret.",
        "Documentation.LongDescription": "Anger om alla raderna i <code>table</code> matchar angivet <code>condition</code>. Returnerar <code>true</code> om alla raderna matchar. Annars returneras <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om alla radvärden i kolumnen [a] är jämna i tabellen.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om alla radvärden är [a = 1, b = 2] i tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "Anger om någon av raderna i tabellen uppfyller det angivna villkoret.",
        "Documentation.LongDescription": "Anger om någon av raderna i <code>table</code> matchar angivet <code>condition</code>. Returnerar <code>true</code> om någon av raderna matchar. Annars returneras <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om något av radvärdena i kolumnen [a] är jämnt i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "Kontrollera om något av radvärdena är [a = 1, b = 2] i tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "Returnerar den största raden eller standardvärdet baserat på angivet villkor.",
        "Documentation.LongDescription": "Returnerar den största raden i <code>table</code> baserat på angivet <code>comparisonCriteria</code>. Om tabellen är tom returneras det valfria värdet <code>default</code>. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta raden med det största värdet i kolumnen [a] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "Hitta raden med det största värdet i kolumnen [a] i tabellen <code>({})</code>. Returnera -1 om den är tom.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "Returnerar den minsta raden eller ett standardvärde baserat på angivet villkor.",
        "Documentation.LongDescription": "Returnerar den minsta raden i <code>table</code> baserat på angivet <code>comparisonCriteria</code>. Om tabellen är tom returneras det valfria värdet <code>default</code>.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta raden med det minsta värdet i kolumnen [a] i tabellen.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "Hitta raden med det minsta värdet i kolumnen [a] i tabellen. Returnera -1 om den är tom.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "Returnerar positionen eller positionerna för raden i tabellen.",
        "Documentation.LongDescription": "Returnerar radpositionen för den första förekomsten av <code>row</code> i angiven <code>table</code>. Returnerar -1 om ingen förekomst hittas.\r\n    <ul>\r\n       <li><code>table</code>: Indatatabellen.</li>\r\n       <li><code>row</code>: Raden i tabellen som positionen ska hittas för.</li>\r\n       <li><code>occurrence</code>: <i>[Valfritt]</i> Anger vilka förekomster av raden som ska returneras.</li>\r\n       <li><code>equationCriteria</code>: <i>[Valfritt]</i> Kontrollerar jämförelsen mellan tabellraderna.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Hitta positionen för den första förekomsten av [a = 2, b = 4] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "Hitta positionen för den andra förekomsten av [a = 2, b = 4] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "Hitta positionen för alla förekomster av [a = 2, b = 4] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "Returnerar positionen eller positionerna för någon av de angivna raderna i tabellen.",
        "Documentation.LongDescription": "Returnerar radernas positioner från <code>table</code> i den första förekomsten av listan för <code>rows</code>. Returnerar -1 om ingen förekomst hittas.\r\n    <ul>\r\n    <li><code>table</code>: Indatatabellen.</li>\r\n       <li><code>rows</code>:  Listan med rader i tabellen som positionerna ska hittas för.</li>\r\n       <li><code>occurrence</code>: <i>[Valfritt]</i> Anger vilka förekomster av raden som ska returneras.</li>\r\n       <li><code>equationCriteria</code>: <i>[Valfritt]</i> Kontrollerar jämförelsen mellan tabellraderna.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Hitta positionen för den första förekomsten av [a = 2, b = 4] eller [a = 6, b = 8] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "Hitta positionen för alla förekomster av [a = 2, b = 4] eller [a = 6, b = 8] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "Delar upp den angivna tabellen i en lista över tabeller med hjälp av den angivna sidstorleken.",
        "Documentation.LongDescription": "Delar upp <code>table</code> i en lista med tabeller där det första elementet i listan är en tabell som innehåller de första <code>pageSize</code> raderna från\r\n    källtabellen, nästa element i listan är en tabell med de följande <code>pageSize</code> raderna från källtabellen osv.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Dela upp en tabell med fem poster i tabeller med två poster vardera.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "Returnerar en lista som innehåller det första antal rader som anges och de återstående raderna.",
        "Documentation.LongDescription": "Returnerar en lista som innehåller två tabeller: en tabell med de första N raderna i <code>table</code> (som anges av <code>count</code>) och en tabell som innehåller de återstående raderna i <code>table</code>.\r\n\r\nOm tabellerna i den resulterande listan räknas upp en gång och i ordning räknar funktionen upp <code>table</code> bara en gång.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Returnera de första två raderna i tabellen och resten av raderna i tabellen.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "Transformerar raderna i tabellen med hjälp av den angivna transformeringsfunktionen.",
        "Documentation.LongDescription": "Skapar en <code>lista</code> genom att tillämpa <code>transform</code> på varje rad i <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Omvandla raderna i en tabell till en lista med tal.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "Omvandla raderna i en numerisk tabell till textposter.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "Returnerar delen av <code>text</code> efter det angivna <code>delimiter</code>.\r\n    En valfri numerisk <code>index</code> indikerar vilken förekomst av <code>delimiter</code> som ska övervägas.\r\n    En valfri lista <code>index</code> indikerar vilken förekomst av <code>delimiter</code> som ska övervägas, samt om indexering skall göras från starten eller slutet på indata.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hämtar delen av \"111-222-333\" efter det (första) bindestrecket.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "Hämtar delen av \"111-222-333\" efter det andra bindestrecket.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "Hämtar delen av \"111-222-333\" efter det andra bindestrecket från slutet.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "Returnerar tecknet vid angiven position.",
        "Documentation.LongDescription": "Returnerar tecknet i textvärdet, <code>text</code> vid position <code>index</code>. Det första tecknet i texten finns vid position 0.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hitta tecknet vid position 4 i strängen \"Hello, World\".",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "Returnerar delen av <code>text</code> innan det angivna <code>delimiter</code>.\r\n    En valfri numerisk <code>index</code> indikerar vilken förekomst av <code>delimiter</code> som ska övervägas.\r\n    En valfri lista <code>index</code> indikerar vilken förekomst av <code>delimiter</code> som ska övervägas, samt om indexering skall göras från starten eller slutet av indata.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hämtar delen av \"111-222-333\" före det (första) bindestrecket.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "Hämtar delen av \"111-222-333\" före det andra bindestrecket.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "Hämtar delen av \"111-222-333\" före det andra bindestrecket från slutet.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "Returnerar huruvida texten innehåller delsträngen.",
        "Documentation.LongDescription": "Identifierar om <code>text</code> innehåller värdet <code>substring</code>. Returnerar true om värdet hittas. Den här funktionen stöder inte jokertecken eller vanliga uttryck.\r\n      <br>\r\n      <br>\r\n Det valfria argumentet <code>comparer</code> kan användas för att ange skiftlägesokänsliga jämförelser eller kultur- och språkmedvetna jämförelser.\r\n     Följande inbyggda jämförelseverktyg är tillgängliga på formelspråket:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Används för att utföra en skiftlägeskänslig ordningstalsjämförelse</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>:  Används för att utföra en skiftlägesokänslig ordningstalsjämförelse</li>\r\n         <li><code>Comparer.FromCulture</code>: Används för att utföra en kulturmedveten jämförelse</li>\r\n        </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om texten \"Hello World\" innehåller \"Hello\".",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om texten \"Hello World\" innehåller \"hello\".",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Ta reda på om texten \"Hello World\" innehåller \"hello\" med hjälp av en skiftlägesokänslig jämförelse.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "Returnerar de sista tecknen i texten.",
        "Documentation.LongDescription": "Returnerar ett <code>text</code>-värde som är de sista <code>count</code> tecknen i <code>text</code>-värdet <code>text</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hämta de sista 5 tecknen i texten \"Hello, World\".",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "Anger om texten slutar med det angivna värdet.",
        "Documentation.LongDescription": "Indikerar om den givna texten, <code>text</code>, slutar med det angivna värdet, <code>substring</code>. Indikationen är skiftlägeskänslig.\r\n\r\n      <div>\r\n         <code>comparer</code> är en <code>Comparer</code> som används för att kontrollera jämförelsen. Jämförelsefunktioner kan användas för att tillhandahålla skiftlägesokänsliga eller kultur- och språkmedvetna jämförelser.\r\n      </div>\r\n      <div>\r\n        Följande inbyggda jämförelsefunktioner finns tillgängliga i formelspråket:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Används för att genomföra en exakt ordningstalsjämförelse</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Används för att genomföra en exakt skiftlägesokänslig ordningstalsjämförelse</li>\r\n        <li><code>Comparer.FromCulture</code>: Används för att genomföra en kulturmedveten jämförelse</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om \"Hello, World\" slutar med \"world\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "Kontrollera om \"Hello, World\" slutar med \"World\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "Returnerar formaterad text från en formatsträng och argument.",
        "Documentation.LongDescription": "Returnerar formaterad text som har skapats genom att tillämpa <code>arguments</code> från en lista eller post till en formatsträng <code>formatString</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Formatera en lista med tal.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "Formatera olika datatyper från en post enligt kulturen Amerikansk engelska.",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "Returnerar delsträngen upp till en viss längd.",
        "Documentation.LongDescription": "Returnerar <code>count</code> tecken, eller genom slutet av <code>text</code>, vid förskjutningen <code>start</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Sök efter delsträngen från texten \"Hej allihop\" som startar vid index 6 och sträcker sig över 5 tecken.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "Sök efter delsträngen från texten \"Hej allihop\" som startar vid index 6 och hela vägen mot slutet.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "Returnerar text med en angiven längd genom att fylla ut slutet av den angivna texten.",
        "Documentation.LongDescription": "Returnerar ett <code>text</code>-värde som fylls ut till längden <code>count</code> genom att blanksteg infogas i slutet av textvärdet <code>text</code>.\r\n    Ett valfritt tecken, <code>character</code>, kan användas för att ange utfyllnadstecknet. Standardtecknet för utfyllnad är blanksteg.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Fyll ut slutet av ett textvärde så att det är 10 tecken långt.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "Fyll ut slutet av ett textvärde med \"|\" så att det är 10 tecken långt.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "Returnerar text med en angiven längd genom att fylla ut början av den angivna texten.",
        "Documentation.LongDescription": "Returnerar ett <code>text</code>-värde som fylls ut till längden <code>count</code> genom att blanksteg infogas i början av textvärdet <code>text</code>.\r\n    Ett valfritt tecken, <code>character</code>, kan användas för att ange utfyllnadstecknet. Standardtecknet för utfyllnad är blanksteg.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Fyll ut början av ett textvärde så att det är 10 tecken långt.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "Fyll ut början av ett textvärde med \"|\" så att det är 10 tecken långt.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "Returnerar den första positionen för värdet (-1 om inget hittas).",
        "Documentation.LongDescription": "Returnerar positionen för den specificerade förekomsten av textvärdet <code>substring</code> som påträffades i <code>text</code>.\r\n    Du kan använda den valfria parametern <code>occurrence</code> för att ange vilken förekomstposition som ska returneras (första förekomsten är standard).\r\n    Returnerar -1 om <code>substring</code> inte påträffas.\r\n\r\n      <div>\r\n        <code>comparer</code> är en <code>Comparer</code> som används för att styra jämförelsen. Jämförelsefunktioner kan användas för att tillhandahålla skiftlägesokänsliga eller kultur- och språkmedvetna jämförelser.\r\n      </div>\r\n      <div>\r\n        Följande inbyggda jämförelsefunktioner är tillgängliga i formelspråket:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Används för att genomföra en exakt ordningstalsjämförelse</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Används för att genomföra en exakt skiftlägesokänslig ordningstalsjämförelse</li>\r\n        <li> <code>Comparer.FromCulture</code>: Används för att genomföra en kulturmedveten jämförelse</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Hämta positionen för den första förekomsten av \"World\" i texten \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "Hämta positionen för den sista förekomsten av \"World\" i \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "Returnerar den första positionen i textvärdet för något tecken i listan (-1 om inget hittas).",
        "Documentation.LongDescription": "Returnerar den första positionen för ett tecken i listan <code>characters</code> som finns i <code>text</code>.\n    En valfri parameter <code>occurrence</code> kan användas för att ange vilken förekomstposition som ska returneras.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Hitta den första positionen för \"W\" eller \"H\" i texten \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "Hitta alla positioner för \"W\" eller \"H\" i texten \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "Returnerar delsträngen vid en förskjutning.",
        "Documentation.LongDescription": "Returnerar delsträngen från texten <code>text</code> vid förskjutningen <code>offset</code>.\r\n    En valfri parameter, <code>count</code>, kan tas med för att ange hur många tecken som ska returneras. Returnerar ett fel om det inte finns tillräckligt med tecken.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hitta delsträngen från texten \"Hello World\" med början vid index 6.",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "Hitta delsträngen från texten \"Hello World Hello\" med början vid index 6 och med en längd på 5 tecken.",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "Tar bort alla förekomster av det angivna tecknet eller listan med tecken från indatatextvärdet.",
        "Documentation.LongDescription": "Returnerar en kopia av textvärdet <code>text</code> där alla tecken från <code>removeChars</code> har tagits bort.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Ta bort tecknen \",\" och \";\" från textvärdet.",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "Tar bort ett antal tecken med början vid den angivna förskjutningen",
        "Documentation.LongDescription": "Returnerar en kopia av textvärdet <code>text</code> där alla tecken från position <code>offset</code> har tagits bort.\r\n    En valfri parameter, <code>count</code>, kan användas för att ange antalet tecken som ska tas bort. Standardvärdet för <code>count</code> är 1. Positionsvärden börjar på 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Ta bort 1 tecken från textvärdet \"ABEFC\" vid position 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "Ta bort två tecken från textvärdet \"ABEFC\" med början vid position 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "Returnerar ett textvärde bestående av indatatexten som upprepas angivet antal gånger.",
        "Documentation.LongDescription": "Returnerar ett textvärde bestående av indatatexten <code>text</code> som upprepas <code>count</code> gånger.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Upprepa texten \"a\" fem gånger.",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "Upprepa texten \"helloworld\" tre gånger.",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "Markerar alla förekomster av det givna tecknet eller listan med tecken från indatatextvärdet.",
        "Documentation.LongDescription": "Returnerar en kopia av textvärdet <code>text</code> där alla tecken som inte finns i <code>selectChars</code> har tagits bort.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Markera alla tecken mellan a till z från textvärdet.",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "Delar upp texten i en lista med textvärden baserat på en angiven avgränsare.",
        "Documentation.LongDescription": "Returnerar en lista med textvärden som resulterar från uppdelningen av ett textvärde, <code>text</code>, baserat på den angivna avgränsaren, <code>separator</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från det \"|\"-avgränsade textvärdet \"Name|Address|PhoneNumber\".",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "Returnerar en lista med textvärden som delas upp baserat på något av tecknen i avgränsaren.",
        "Documentation.LongDescription": "Returnerar en lista med textvärden som resulterar från uppdelningen av ett textvärde, <code>text</code>, baserat på något tecken i den angivna avgränsaren, <code>separators</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från textvärdet \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\".",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "Returnerar början av texten.",
        "Documentation.LongDescription": "Returnerar de första <code>count</code> tecknen i <code>text</code> som ett textvärde.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hämta de 5 första tecknen i \"Hello, World\".",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "Anger om texten börjar med ett angivet värde.",
        "Documentation.LongDescription": "Returnerar sant om textvärdet <code>text</code> inleds med textvärdet <code>substring</code>.\r\n      <ul>\r\n        <li><code>text</code>: <i></i> Ett <code>text</code>-värde som det ska sökas efter</li>\r\n        <li><code>substring</code>: <i></i> Ett <code>text</code>-värde som är den delsträng som ska sökas efter i <code>substring</code></li>\r\n        <li><code>comparer</code>: <i>[Valfritt]</i> En <code>Comparer</code> som används för att kontrollera jämförelsen. <code>Comparer.OrdinalIgnoreCase</code> kan till exempel användas för att genomföra skiftlägesokänsliga sökningar</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> är en <code>Comparer</code> som används för att kontrollera jämförelsen. Jämförelsefunktioner kan användas för att tillhandahålla skiftlägesokänsliga eller kultur- och språkmedvetna jämförelser.\r\n      </div>\r\n      <div>\r\n        Följande inbyggda jämförelsefunktioner är tillgängliga i formelspråket\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Används för att genomföra en exakt ordningstalsjämförelse</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Används för att genomföra en exakt skiftlägesokänslig ordningstalsjämförelse</li>\r\n        <li><code>Comparer.FromCulture</code>: Används för att genomföra en kulturmedveten jämförelse</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om texten \"Hello, World\" börjar med texten \"hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Kontrollera om texten \"Hello, World\" börjar med texten \"Hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "Returnerar en typ som representerar funktioner med särskilda parameter- och returtypsbegränsningar.",
        "Documentation.LongDescription": "Skapar en <code>function type</code> från <code>signature</code>, en post med <code>ReturnType</code> och <code>Parameters</code>, och <code>min</code>, det minsta antalet argument som krävs för att anropa funktionen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Skapar typen för en funktion som tar en talparameter med namnet X och returnerar ett tal.",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "Returnerar en typ som representerar poster med särskilda typbegränsningar på fält.",
        "Documentation.LongDescription": "Returnerar en typ som representerar poster med särskilda typbegränsningar på fält.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Generera en tabelltyp dynamiskt.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "Anger om ett värde av den första typen alltid är kompatibelt med den andra typen.",
        "Documentation.LongDescription": "Anger om ett värde för <code>type1</code> alltid är kompatibelt med <code>type2</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om ett värde av typen nummer alltid kan behandlas som typen any.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om ett värde av typen any alltid kan behandlas som typen nummer.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "Ersätter en typs fasetter.",
        "Documentation.LongDescription": "Ersätter fasetterna för <code>type</code> med fasetterna som finns i posten <code>facets</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "Returnerar en ny tabelltyp där alla nycklar ersatts med den angivna listan med nycklar.",
        "Documentation.LongDescription": "Returnerar en ny tabelltyp med alla nycklar ersatta med den angivna listan med nycklar.<br>\r\n    <br>\r\n    Varje nyckel definieras med hjälp av en post i följande format:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: en lista över kolumnnamnen som definierar nyckeln\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> om nyckeln är tabellens primärnyckel; annars <code>false</code>\r\n      </li>\r\n    </ul>\r\n    Den angivna listan över nycklar verifieras för att säkerställa att högst en primärnyckel har definierats och att alla nyckelkolumnnamn finns i tabelltypen.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Ersätt nyckelinformationen för en tabelltyp.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "Rensa nyckelinformationen som tidigare definierats för en tabelltyp.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "Returnerar typen för en kolumn i en tabell.",
        "Documentation.LongDescription": "Returnerar typen för kolumnen <code>column</code> i tabelltypen <code>tableType</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "Returnerar en absolut URI som är en kombination av bas-URI:n och den relativa URI:n i angivna indata.",
        "Documentation.LongDescription": "Returnerar en absolut URI som är en kombination av <code>baseUri</code> och <code>relativeUri</code> i angivna indata.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "Returnerar summan av de två värdena.",
        "Documentation.LongDescription": "Returnerar summan av <code>value1</code> och <code>value2</code>. En valfri <code>precision</code>-parameter kan anges. <code>Precision.Double</code> används som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "Returnerar värdet om det är kompatibelt med den angivna typen.",
        "Documentation.LongDescription": "Returnerar värdet om det är kompatibelt med den angivna typen. Detta motsvarar operatorn \"som\" i M, med undantaget att den kan acceptera referenser för identifieringstyp som Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Typkonvertera ett nummer till ett nummer.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "Försök att typkonvertera ett textvärde till ett nummer.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "Returnerar -1, 0 eller 1 baserat på om det första textvärdet är mindre än, lika med eller större än det andra.",
        "Documentation.LongDescription": "Returnerar -1, 0 eller 1 baserat på om det första textvärdet är mindre än, lika med eller större än det andra.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "Returnerar resultatet av att det första värdet divideras med det andra.",
        "Documentation.LongDescription": "Returnerar resultatet av att dividera <code>value1</code> med <code>value2</code>. En valfri <code>precision</code>-parameter kan anges. <code>Precision.Double</code> används som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "Kontrollerar om två värden är lika.",
        "Documentation.LongDescription": "Returnerar true om värdet <code>value1</code> är lika med värdet <code>value2</code>. Annars returneras false.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "Anger om ett värde är kompatibelt med den angivna typen.",
        "Documentation.LongDescription": "Anger om ett värde är kompatibelt med den angivna typen. Detta motsvarar operatorn \"är\" i M, med undantaget att den kan acceptera referenser för identifieringstyp som Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Jämför två sätt att avgöra om ett nummer är kompatibelt med typen nummer.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "Returnerar produkten av de två värdena.",
        "Documentation.LongDescription": "Returnerar produkten från multiplikationen av <code>value1</code> med <code>value2</code>. En valfri <code>precision</code>-parameter kan anges. <code>Precision.Double</code> används som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "Utvärderar en fråga i förhållande till ett mål.",
        "Documentation.LongDescription": "<p>Utvärderar <code>query</code> mot <code>target</code> med de parametrar som angetts i <code>parameters</code> och som använder de alternativ som har angetts i <code>options</code>.</p>\r\n<p>Frågans utdata definieras av <code>target</code>.</p>\r\n<p><code>target</code> tillhandahåller kontexten för den åtgärd som beskrivs av <code>query</code>.</p>\r\n<p><code>query</code>beskriver den fråga som ska köras mot <code>target</code>. <code>query</code> uttrycks på ett sätt som är specifikt för <code>target</code> (t.ex. en T-SQL-instruktion).</p>\r\n<p>Det valfria <code>parameters</code>-värdet kan innehålla antingen en lista eller en post enligt vad som passar bäst för att tillhandahålla det parametervärde som förväntas av <code>query</code>.</p>\r\n<p>Den valfria l <code>options</code>-posten kan innehålla alternativ som påverkar utvärderingsbeteendet för <code>query</code> mot <code>target</code>. Dessa alternativ är specifika för <code>target</code>.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "Kontrollerar om två värden är lika.",
        "Documentation.LongDescription": "Returnerar null om något av argumenten (<code>value1</code>, <code>value2</code>) är null. Annars motsvarar detta Value.Equals.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "Ersätter metadatainformationen i angivna indata.",
        "Documentation.LongDescription": "Ersätter metadatainformationen i angivna indata.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "Ersätter värdets typ.",
        "Documentation.LongDescription": "Ersätter <code>value</code>-typen med den angivna <code>type</code>.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Ersätt standardtypen för en post med en mer specifik typ.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "Returnerar skillnaden mellan de två värdena.",
        "Documentation.LongDescription": "Returnerar skillnaden mellan <code>value1</code> och <code>value2</code>. En valfri <code>precision</code>-parameter kan anges. <code>Precision.Double</code> används som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "Skapar en åtgärd som, när den körs, returnerar resultatet av en HTTP-förfrågan som ett binärvärde.",
        "Documentation.LongDescription": "Skapar en åtgärd som när den körs returnerar resultaten av att utföra en <code>method</code> -begäran mot <code>url</code> med HTTP som ett binärvärde.\r\n    En valfri postparameter, <code>options</code>, kan anges för att specificera ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>Query</code> : L&#228;gg automatiskt till fr&#229;geparametrar i webbadressen utan att beh&#246;va t&#228;nka p&#229; undantagstecken.</li>\r\n<li><code>ApiKeyName</code> : Om m&#229;lwebbplatsen inneh&#229;ller en notering om en API-nyckel, kan den h&#228;r parametern anv&#228;ndas f&#246;r att ange namnet (inte v&#228;rdet) f&#246;r den nyckelparameter som m&#229;ste anv&#228;ndas i webbadressen. Det faktiska nyckelv&#228;rdet anges i autentiseringsuppgiften.</li>\r\n<li><code>Headers</code> : Om du anger v&#228;rdet som en post, l&#228;ggs ytterligare sidhuvuden till i en HTTP-f&#246;rfr&#229;gan.</li>\r\n<li><code>Timeout</code> : Om du anger det h&#228;r v&#228;rdet som en varaktighet, &#228;ndras tidsgr&#228;nsen f&#246;r en HTTP-f&#246;rfr&#229;gan. Standardv&#228;rdet &#228;r 100 sekunder.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Om v&#228;rdet anges som en lista, undantas HTTP-sidhuvudnycklarna fr&#229;n att tas med i ber&#228;kningen f&#246;r cachelagring av data.</li>\r\n<li><code>IsRetry</code> : Om det logiska v&#228;rdet anges till SANT ignoreras eventuella svar i cachen n&#228;r data h&#228;mtas.</li>\r\n<li><code>ManualStatusHandling</code> : Om v&#228;rdet anges som en lista, f&#246;rhindras eventuell inbyggd hantering av HTTP-f&#246;rfr&#229;gningar vars svar inneh&#229;ller n&#229;gon av de h&#228;r statuskoderna.</li>\r\n<li><code>RelativePath</code> : Om du anger v&#228;rdet som text, l&#228;ggs det till i slutet av den grundl&#228;ggande webbadressen innan f&#246;rfr&#229;gan st&#228;lls.</li>\r\n<li><code>Content</code> : Om du &#228;ndrar v&#228;rdet blir inneh&#229;llet br&#246;dtexten i HTTP-f&#246;rfr&#229;gan.</li>\r\n</ul>\r\n\r\n    <br>\r\n    Observera att denna funktion är inaktiverad i flesta sammanhang. Överväg att använda Web.Contents istället.\r\n    ",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "Utför en GET-begäran mot Bing.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "Ange URL:en till den Azure Enterprise REST API-slutpunkt som är associerad till din registrering",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Returnerar det binära resultatet för anropet till den URL som tillhandahållits för Azure Enterprise API:et.",
        "Documentation.Examples": [
          {
            "Description": "Returnera resultatet för en specifik rapport genom att använda funktionen AzureEnterprise.Contents.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "Tabell"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "Returnerar innehållet i den angivna blobben från Azure Storage-valvet.",
        "Documentation.LongDescription": "Returnerar innehållet i blobben på URL:en <code>url</code> från ett Azure Storage-valv. <code>options</code> kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>BlockSize</code> : Antal byte som ska l&#228;sas innan de v&#228;ntar p&#229; datakonsumenten. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>RequestSize</code> : Antal byte som ska f&#246;rs&#246;ka l&#228;sas i en enskild HTTP-beg&#228;ran till servern. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-alternativet st&#246;der snabbare nedladdning av data genom att ange antalet beg&#228;randen som ska g&#246;ras parallellt till pris av minnesanv&#228;ndning. Minnet som kr&#228;vs &#228;r (ConcurrentRequest * RequestSize). Standardv&#228;rdet &#228;r 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "Returnerar den angivna filens innehåll från ett Azure Data Lake Storage-filsystem.",
        "Documentation.LongDescription": "Returnerar innehållet i filen på URL:en <code>url</code> från ett Azure Data Lake Storage-filsystem. <code>options</code> kan anges för att styra följande alternativ:\r\n    <ul>\r\n<li><code>BlockSize</code> : Antal byte som ska l&#228;sas innan de v&#228;ntar p&#229; datakonsumenten. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>RequestSize</code> : Antal byte som ska f&#246;rs&#246;ka l&#228;sas i en enskild HTTP-beg&#228;ran till servern. Standardv&#228;rdet &#228;r 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-alternativet st&#246;der snabbare nedladdning av data genom att ange antalet beg&#228;randen som ska g&#246;ras parallellt till pris av minnesanv&#228;ndning. Minnet som kr&#228;vs &#228;r (ConcurrentRequest * RequestSize). Standardv&#228;rdet &#228;r 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "Returnerar binärfilens ungefärliga längd.",
        "Documentation.LongDescription": "Returnerar den ungefärliga längden på <code>binary</code>eller ett fel om datakällan inte stöder en ungefärlig längd.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Hämta den ungefärliga längden på binärvärdet.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "Buffrar binärvärdet i minne.",
        "Documentation.LongDescription": "Buffrar binärvärdet i minne. Resultatet av detta anrop är ett stabilt binärvärde, vilket betyder att det har en deterministisk längd och byteordning.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Skapa en stabil version av binärvärdet.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "Kombinerar en lista med binärvärden till ett enda binärvärde.",
        "Documentation.LongDescription": "Kombinerar en lista med binärvärden till ett enda binärvärde.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "Skapar ett binärvärde från det angivna värdet",
        "Documentation.LongDescription": "Returnerar ett <code>binary</code>-värde från angiven <code>value</code>. Om <code>value</code> är <code>null</code> returnerar <code>Binary.From</code> <code>null</code>. Om <code>value</code> är <code>binary</code> returneras <code>value</code>. Värden av följande typer kan konverteras till ett <code>binary</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>binary</code>-värde från textrepresentationen. Mer information finns under <code>Binary.FromText</code>.</li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Hämta <code>binary</code>-värdet för <code>\"1011\"</code>.",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "Konverterar en lista med tal till ett binärvärde.",
        "Documentation.LongDescription": "Konverterar en lista med tal till ett binärvärde.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "Avkodar data från ett textformat till binärformat.",
        "Documentation.LongDescription": "Returnerar resultatet från konverteringen av textvärdet <code>text</code> till ett binärvärde (lista med <code>number</code>). <code>encoding</code> kan användas för att ange kodningen som ska användas i textvärdet.\r\n      Följande <code>BinaryEncoding</code>-värden kan användas för <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64-kodning</li>\r\n        <li><code>BinaryEncoding.Hex</code>: Hexadecimal kodning</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Avkoda \"1011\" till binärformat.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "Avkoda \"1011\" till binärformat med hexadecimal kodning.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "Läser den binära dataströmmen och försöker identifiera information om dataströmmens innehållstyp och format.",
        "Documentation.LongDescription": "Returnerar en post med fältet Content.Type som innehåller den härledda MIME-typen.\r\n    Om den härledda innehållstypen är text/*, och en kodningsteckentabell identifieras returnerar dessutom fältet Content.Encoding som innehåller kodning av dataströmmen.\r\n    Om den härledda innehållstypen är text/csv och formatet är avgränsat, så returnerar fältet Csv.PotentialDelimiter som innehåller en tabell för analys av potentiella avgränsare.\r\n    Om den härledda innehållstypen är text/csv och formatet är fast bredd, returnerar fältet Csv.PotentialPositions som innehåller en lista för analys av potentiella kolumnpositioner för fast bredd.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "Returnerar antalet tecken.",
        "Documentation.LongDescription": "Returnerar antalet tecken.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "Konverterar ett binärvärde till en lista med tal.",
        "Documentation.LongDescription": "Konverterar ett binärvärde till en lista med tal.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "Kodar binärdata till ett textformat.",
        "Documentation.LongDescription": "Returnerar resultatet från konverteringen av en binärlista med tal <code>binary</code> till ett textvärde. Alternativt kan <code>encoding</code> anges för att indikera kodningen som ska användas i textvärdet som genereras\r\n      Följande <code>BinaryEncoding</code>-värden kan användas för <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64-kodning</li>\r\n        <li><code>BinaryEncoding.Hex</code>: Hexadecimal kodning</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "Skapar en ändrad felpost som inte utlöser en återställning när den genereras av en hanterare som definierats i en vy (via Binary.View).",
        "Documentation.LongDescription": "Skapar en ändrad felpost från <code>errorRecord</code> som inte utlöser en återställning när den genereras av en hanterare som definierats i en vy (via Binary.View).",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "Skapar en funktion som kan fångas upp av en hanterare som har definierats i en vy (via Binary.View).",
        "Documentation.LongDescription": "<p>Skapar en visningsfunktion utifrån <code>function</code>som kan hanteras i en vy som har skapats av <code>Binary.View</code>.</p>\r\n<p> Du kan använda <code>OnInvoke</code>-hanteraren av <code>Binary.View</code> för att definiera en hanterare för visningsfunktionen.</p>\r\n<p>Som fallet är med hanterarna för de inbyggda åtgärderna, så används <code>function</code> över vyn om ingen <code>OnInvoke</code>-hanterare har angetts, om den inte hanterar visningsfunktionen eller om ett fel har utlösts av hanteraren.</p>\r\n<p>Mer information finns under den publicerade Power Query anpassade anslutningsdokumentationen för en mer fullständig beskrivning av <code>Binary.View</code> och custom view functions.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "Ett binärformat som läser ett 64-bitars heltal med tecken som kodats med 7-bitars kodning med variabel längd.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 64-bitars heltal med tecken som kodats med 7-bitars kodning med variabel längd.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "Ett binärformat som läser ett 64-bitars heltal utan tecken som kodats med 7-bitars kodning med variabel längd.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 64-bitars heltal utan tecken som kodats med 7-bitars kodning med variabel längd.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "Ett binärformat som läser ett 8-bitars heltal utan tecken.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 8-bitars heltal utan tecken.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "Ett binärformat som läser ett .NET 16-bytes decimalvärde.",
        "Documentation.LongDescription": "Ett binärformat som läser ett .NET 16-bytes decimalvärde.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "Ett binärformat som läser ett 8-bytes IEEE-flyttal med dubbel precision.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 8-bytes IEEE-flyttal med dubbel precision.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "Returnerar ett binärformat som läser en sekvens med objekt och returnerar en lista.",
        "Documentation.LongDescription": "Returnerar ett binärformat som läser en sekvens med objekt och returnerar en <code>lista</code>. Parametern <code>binaryFormat</code> anger binärformatet för varje objekt. Det går att fastställa antalet objekt som läses på tre sätt: <ul><li>Om <code>countOrCondition</code> inte anges läser binärformatet tills det inte finns fler objekt.</li><li>Om <code>countOrCondition</code> är ett tal läser binärformatet så många objekt.</li><li>Om <code>countOrCondition</code> är en funktion anropas den funktionen för varje läst objekt. Funktionen returnerar true för att fortsätta och false för att sluta läsa objekt. Det sista objektet tas med i listan.</li><li>Om <code>countOrCondition</code> är ett binärformat förväntas uppräkningen av objekt föregå listan, och det angivna formatet används för att läsa antalet.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "Läs byte till slutet av data.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Läs två byte.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Läs byte tills bytevärdet är större än eller lika med två.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "Ett binärformat som läser noll byte och returnerar null.",
        "Documentation.LongDescription": "Ett binärformat som läser noll byte och returnerar null.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "Returnerar ett binärformat som läser en post.",
        "Documentation.LongDescription": "Returnerar ett binärformat som läser en post. Parametern <code>record</code> anger formatet för posten. Fälten i posten kan ha olika binärformat. Om ett fält innehåller ett värde som inte är ett värde i binärformat läses inga data för det fältet och fältvärdet skickas som ett eko till resultatet.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "Läs en post som innehåller ett 16-bitars heltal och ett 32-bitars heltal.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "Ett binärformat som läser ett 16-bitars heltal med tecken.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 16-bitars heltal med tecken.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "Ett binärformat som läser ett 32-bitars heltal med tecken.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 32-bitars heltal med tecken.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "Ett binärformat som läser ett 64-bitars heltal med tecken.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 64-bitars heltal med tecken.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "Ett binärformat som läser ett 4-bytes IEEE-flyttal med enkel precision.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 4-bytes IEEE-flyttal med enkel precision.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "Returnerar ett binärformat som läser ett textvärde.",
        "Documentation.LongDescription": "Returnerar ett binärformat som läser ett textvärde. <code>length</code> anger hur många byte som ska avkodas eller binärformatet för längden som föregår texten. Det valfria värdet <code>encoding</code> anger textens kodning. Om <code>encoding</code> inte anges fastställs kodningen baserat på Unicode-byteordningsmärken. Om det inte finns några byteordningsmärken används <code>TextEncoding.Utf8</code>.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "Avkoda två byte som ASCII-text.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "Avkoda ASCII-text där längden på texten i byte visas före texten som en byte.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "Ett binärformat som läser ett 16-bitars heltal utan tecken.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 16-bitars heltal utan tecken.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "Ett binärformat som läser ett 32-bitars heltal utan tecken.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 32-bitars heltal utan tecken.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "Ett binärformat som läser ett 64-bitars heltal utan tecken.",
        "Documentation.LongDescription": "Ett binärformat som läser ett 64-bitars heltal utan tecken.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "Skapar ett 8-bitars heltal av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett 8-bitars <code>number</code>-heltalsvärde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code>. <code>Byte. Från </code> returnerar <code>null</code>.Om det givna <code>value</code> är ett <code>number</code> inom intervallet för en 8-bitars heltal utan decimaldel, returneras <code>value</code>. Om talet har en decimaldel avrundas det med det angivna avrundningsläget. Standardavrundningsläget är <code>RoundingMode.ToEven</code>. Om <code>value</code> är av någon annan typ konverteras den först till en <code>number</code> med <code>Number.FromText</code>. Mer information om tillgängliga avrundningslägen finns i <code>Number.Round</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta 8-bitars <code>number</code>-heltalsvärdet för <code>\"4\"</code>.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hämta 8-bitars <code>number</code>-heltalsvärdet för <code>\"4.5\"</code> genom att använda <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "Konverterar ett tal till ett texttecken.",
        "Documentation.LongDescription": "Returnerar teckenmotsvarigheten för tal.<br>\r\n    <br>\r\n    Den angivna <code>number</code> ska vara en 21-bitars Unicode-kodpunkt.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Konvertera ett tal till motsvarande teckenvärde.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "Konvertera ett tecken till ett tal och tillbaka igen.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "Konvertera den hexadecimala kodpunkten för uttryckssymbolen \"leende ansikte\" till motsvarande UTF-16-surrogatpar.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "Konverterar ett tecken till ett talvärde.",
        "Documentation.LongDescription": "Returnerar talmotsvarigheten för <code>character</code>.<br>\r\n    <br>\r\n    Resultatet blir den 21-bitars Unicode-kodpunkt som representeras av det angivna tecknet eller surrogatparet.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Konvertera ett tecken till motsvarande talvärde.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "Konvertera UTF-16-surrogatparet för uttryckssymbolen \"leende ansikte\" till dess motsvarande hexadecimala kodpunkt.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "Returnerar en funktion som kombinerar en lista med text med den angivna avgränsare.",
        "Documentation.LongDescription": "Returnerar en funktion som kombinerar en lista med textvärden till ett enskilt textvärde med angiven avgränsare.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombinera en lista med textvärden med en semikolonavgränsare.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "Kombinera texten i två kolumner med kommaavgränsare och CSV-citattecken.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "Returnerar en funktion som kombinerar en lista med text med hjälp av en sekvens med avgränsare.",
        "Documentation.LongDescription": "Returnerar en funktion som kombinerar en lista med textvärden till ett enda textvärde med hjälp av en sekvens med avgränsare.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombinera en lista med textvärden med hjälp av en sekvens med avgränsare.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "Returnerar en funktion som kombinerar en lista med text med angivna längder.",
        "Documentation.LongDescription": "Returnerar en funktion som kombinerar en lista med textvärden till ett enda textvärde med de angivna längderna.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombinera en lista med textvärden genom att extrahera det angivna antalet tecken från varje indatavärde.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "Kombinera en lista med textvärden genom att extrahera det angivna antalet tecken efter att resultatet först fyllts i i förväg med malltexten.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "Returnerar en funktion som kombinerar en lista med text med de angivna utdatapositionerna.",
        "Documentation.LongDescription": "Returnerar en funktion som kombinerar en lista med textvärden till ett enda textvärde med de angivna utdatapositionerna.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombinera en lista med textvärden genom att placera dem i utdata vid de angivna positionerna.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "Returnerar en funktion som kombinerar en lista med text med de angivna positionerna och längderna.",
        "Documentation.LongDescription": "Returnerar en funktion som kombinerar en lista med textvärden till ett enda textvärde med de angivna utdatapositionerna och längderna. En null-längd anger att hela textvärdet ska inkluderas.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombinera en lista med textvärden med de angivna utdatapositionerna och längderna.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "Returnerar en jämförelsefunktion baserat på den angivna kulturen och skiftlägeskänsligheten.",
        "Documentation.LongDescription": "Returnerar en jämförelsefunktion som använder <code>culture</code> och skiftlägeskänsligheten som anges av <code>ignoreCase</code> för att utföra jämförelser.<br>\r\n      <br>\r\n      En jämförelsefunktion accepterar två argument och returnerar -1, 0 eller 1 baserat på om det första värdet är mindre än, lika med eller större än det andra.<br>\r\n      <br>\r\n      Standardvärdet för <code>ignoreCase</code> är falskt. <code>culture</code> ska vara en av de nationella inställningar som stöds av .NET Framework (t.ex. en-US).\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Jämför \"a\" och \"A\" med den nationella inställningen \"sv-SE\" för att fastställa om värdena är lika.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "Jämför \"a\" och \"A\" med den nationella inställningen \"sv-SE\" ignorerande skiftläget för att fastställa om värdena är lika.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "Returnerar det unika medlems-ID:t från medlemmarnas egenskapsvärden.",
        "Documentation.LongDescription": "Returnerar det unika medlems-ID:t från en medlems egenskapsvärde. <code>attribute</code>. Returnerar null för alla övriga värden.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "Returnerar nyckeln för en egenskap.",
        "Documentation.LongDescription": "Returnerar nyckeln för egenskapen <code>property</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "Returnerar ett valutavärde från det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>currency</code>-värde från det givna <code>value</code>.Om det givna <code>value</code> är <code>null</code> returnerar <code>Currency.From</code> <code>null</code>.  Om det givna <code>value</code> är <code>number</code> inom valutaintervallet, så avrundas decimaldelen av <code>value</code> till fyra decimaler och returneras. Om <code>value</code> är av en annan typ, konverteras den först till en <code>number</code> med <code>Number.FromText</code>. Giltigt intervall för valuta är <code>-922,337,203,685,477.5808</code> till <code>922,337,203,685,477.5807</code>. Mer information om tillgängliga avrundningslägen finns i <code>Number.Round</code>. Standardläget är <code>RoundingMode.ToEven</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta <code>currency</code>-värdet för <code>\"1.23455\"</code>.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "Hämta <code>currency</code>-värdet för <code>\"1.23455\"</code> genom att använda <code>RoundingMode.Down</code>.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "Returnerar dagkomponenten.",
        "Documentation.LongDescription": "Returnerar dagkomponenten i ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.\r\n      <ul>\r\n        <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som dagkomponenten extraheras från.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta dagkomponenten i ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som representerar datumet och tiden motsvarande den 14 maj 2011 17:00:00.",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "Returnerar ett tal (från 0 till 6) som indikerar det tillhandahållna värdets veckodag.",
        "Documentation.LongDescription": "Returnerar ett tal (från 0 till 6) som anger den veckodag som upptas av den tillhandahållna <code>dateTime</code>.\r\n  <ul>\r\n        <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.</li>\r\n        <li><code>firstDayOfWeek</code>: Ett <code>Day</code>-värde som anger vilken dag som ska hanteras som första dag i veckan. Tillåtna värden är Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday eller Day.Saturday. Om inget anges används ett kulturberoende stansdardvärde.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta den veckodag som representeras av måndag 21 februari 2011 och hantera söndag som första dag i veckan.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "Hämta den veckodag som representeras av måndag 21 februari 2011 och hantera måndag som första dag i veckan.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "Returnerar namnet på veckodagen.",
        "Documentation.LongDescription": "Returnerar veckonamnet för angivet <code>date</code>. En valfri <code>culture</code> kan även anges (till exempel \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta namnet på veckodagen.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "Returnerar ett tal mellan 1 och 366 som representerar dagen på året.",
        "Documentation.LongDescription": "Returnerar ett tal som representerar dagen på året i angivet <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dagen på året den 1 mars 2011.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "Returnerar ett tal från 28 till 31 som anger antalet dagar i månaden.",
        "Documentation.LongDescription": "Returnerar antalet dagar i månaden i <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värdet <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som antalet dagar i månaden returneras för.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Antalet dagar i december månad representerat av <code>#date(2011, 12, 01)></code>.",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "Returnerar slutet på dagen.",
        "Documentation.LongDescription": "Returnerar slutet av dagen som representeras av <code>dateTime</code>. Tidszonsinformation bevaras.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som dagens slut beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta dagens slut för den 14 maj 2011 17:00:00.",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "Hämta dagens slut för den 17 maj 2011 17:00:00 -7:00.",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "Returnerar slutet på månaden.",
        "Documentation.LongDescription": "Returnerar  slutet av månaden som innehåller <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som månadens slut beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta månadens slut för den 14 maj 2011.",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "Hämta månadens slut för den 17 maj 2011 17:00:00 -7:00.",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "Returnerar slutet på kvartalet.",
        "Documentation.LongDescription": "Returnerar  slutet av kvartalet som innehåller <code>dateTime</code>. Tidszonsinformation bevaras.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som kvartalets slut beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta kvartalets slut för den 10 oktober 2011 08:00.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "Returnerar slutet på veckan.",
        "Documentation.LongDescription": "Returnerar slutet av veckan som innehåller <code>dateTime</code>.\r\nFunktionen använder ett valfritt <code>Day</code>, <code>firstDayOfWeek</code>, som anges som den första dagen i veckan för den här relativa beräkningen. Standardvärdet är <code>Day.Sunday</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som veckans sista dag beräknas från.</li>\r\n        <li><code>firstDayOfWeek</code>: <i>[Valfritt]</i> Ett <code>Day.Type</code>-värde som representerar den första dagen i veckan. Möjliga värden är <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> och <code>Day.Saturday.</code>. Standardvärdet är <code>Day.Sunday</code>.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta veckans slut för den 14 maj 2011.",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "Hämta veckans slut för den 17 maj 2011 17:00:00 -7:00, där söndag är den första dagen i veckan.",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "Returnerar slutet på året.",
        "Documentation.LongDescription": "Returnerar årets slut som innehåller <code>dateTime</code>, inklusive fraktionella sekunder. Informationen om tidszonen bevaras.\r\n      <ul>\r\n        <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som årets slut beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta årets slut för den 14 maj 2011 17:00:00.",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "Hämta timmens slut för den 17 maj 2011 17:00:00 -7:00.",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "Skapar ett datumvärde från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>date</code>-värde från angiven <code>value</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").\r\nOm <code>value</code> är <code>null</code> returnerar <code>Date.From</code> <code>null</code>. Om <code>value</code> är <code>date</code> returneras <code>value</code>. Värden av följande typer kan konverteras till ett <code>date</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>date</code>-värde från textrepresentationen. Mer information finns under <code>Date.FromText</code>.</li>\r\n        <li><code>datetime</code>: Datumkomponenten för <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: Datumkomponenten för det lokala datetime-värdet som motsvarar <code>value</code>.</li>\r\n        <li><code>number</code>: Datumkomponenten för datetime-värdet motsvarande OLE-automationsdatumet uttryckt med <code>value</code>.</li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>43910</code> till ett <code>date</code>-värde.",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "Konvertera <code>#datetime(1899, 12, 30, 06, 45, 12)</code> till ett <code>date</code>-värde.",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "Skapar ett datum från lokala, universella och anpassade datumformat.",
        "Documentation.LongDescription": "Skapar ett <code>date</code> värde från en textrepresentation av <code>text</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Gå Mer information finns på https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar detta fält eller anger <code>null</code> kommer det att resultera i att datumet analyseras med bästa möjliga ansträngning.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: i <code>\"en-US\"</code> <code>\"MMM\"</code> är <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, while in <code>\"ru-RU\"</code> <code>\"MMM\"</code> is <code>\"ннв\", \"фев\", \"мар\", ...</code>. När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omitteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>2010-12-31</code> till ett <code>datum</code>-värde.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "Konvertera med ett anpassat format och den tyska kulturen.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "Hitta datumet i den gregorianska kalendern som motsvarar början av 1400 i Hijri-kalendern.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "Anger om det här datumet infaller aktuell dag, baserat på systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Anger om det angivna datetime-värdet <code>dateTime</code> infaller aktuell dag, baserat på systemets aktuella datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om den aktuella systemtiden infaller under den aktuella dagen.",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "Anger om det här datumet infaller under den aktuella månaden, baserat på systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Anger om det angivna datetime-värdet <code>dateTime</code> infaller under den aktuella månaden, baserat på systemets aktuella datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om den aktuella systemtiden infaller under den aktuella månaden.",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "Anger om det här datumet infaller under det aktuella kvartalet, baserat på systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Anger om det angivna datetime-värdet <code>dateTime</code> infaller under det aktuella kvartalet, baserat på systemets aktuella datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om den aktuella systemtiden infaller under det aktuella kvartalet.",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "Anger om det här datumet infaller under den aktuella veckan, baserat på systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Anger om det angivna datetime-värdet <code>dateTime</code> infaller under den aktuella veckan, baserat på systemets aktuella datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om den aktuella systemtiden infaller under den aktuella veckan.",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "Anger om det här datumet infaller under det aktuella året, baserat på systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Anger om det angivna datetime-värdet <code>dateTime</code> infaller under det aktuella året, baserat på systemets aktuella datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om den aktuella systemtiden infaller under det aktuella året.",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "Anger om det här datumet infaller under nästa dag enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella dagen.",
        "Documentation.LongDescription": "Indikerar om det angivna datetime-värde <code>dateTime</code> infaller under nästa dag enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt när den skickas ett värde som inträffar under den aktuella dagen.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>-, eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om dagen efter den aktuella systemtiden infaller nästa dag.",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "Anger om det här datumet infaller under nästa månad enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella månaden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa månad enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella månaden.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om månaden efter den aktuella systemtiden infaller nästa månad.",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "Anger om det här datumet infaller under nästa kvartal enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella kvartalet.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa kvartal enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar false om den skickas ett värde som infaller under aktuellt kvartal.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om kvartalet efter den aktuella systemtiden infaller nästa kvartal.",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "Anger om det här datumet infaller under nästa vecka enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella veckan.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa vecka enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar false om den skickas ett värde som infaller den aktuella veckan.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om veckan efter den aktuella systemtiden infaller nästa vecka.",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "Anger om det här datumet infaller under nästa år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella året.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom det aktuella.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om året efter den aktuella systemtiden infaller nästa år.",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "Anger om det här datumet infaller under föregående dag systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella dagen.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under föregående dag enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar false om den skickas ett värde som infaller den aktuella dagen.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om dagen före den aktuella systemtiden infaller föregående dag.",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "Anger om det här datumet infaller under den föregående månaden enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller den aktuella månaden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under den föregående månaden enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella månaden.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datum</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om månaden före den aktuella systemtiden infaller föregående månad.",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "Anger om det här datumet infaller under det föregående kvartalet enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella kvartalet.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under det föregående kvartalet enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella kvartalet.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om kvartalet före den aktuella systemtiden infaller föregående kvartal.",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "Anger om det här datumet infaller under föregående vecka enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella veckan.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under föregående vecka enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella veckan.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om veckan före den aktuella systemtiden infaller föregående vecka.",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "Anger om det här datumet infaller under föregående år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella året.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under föregående år enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under det aktuella året.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om året före den aktuella systemtiden infaller föregående år.",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "Anger om det här datumet infaller under det aktuella året och på eller före dagens datum, baserat på systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Anger om det angivna datetime-värdet <code>dateTime</code> infaller under det aktuella året och på eller före dagens datum, baserat på systemets aktuella datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om den aktuella systemtiden infaller på ett datum hittills i år.",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "Anger om det här datumet infaller under ett skottår.",
        "Documentation.LongDescription": "Anger om det givna datetime-värdet <code>dateTime</code> infaller under ett skottår.\r\n <ul>\r\n        <li><code>dateTime</code>: Ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om år 2012, representerat av <code>#date(2012, 01, 01)</code>, är ett skottår.",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "Returnerar månadskomponenten.",
        "Documentation.LongDescription": "Returnerar månadskomponenten för angivet <code>datetime</code>-värde, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta månaden i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "Returnerar namnet på månadskomponenten.",
        "Documentation.LongDescription": "Returnerar namnet på månadskomponenten för den angivna <code>date</code>. En valfri <code>culture</code> kan även anges (till exempel \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta namnet på månaden.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "Returnerar ett tal som anger vilket kvartal på året som datumet infaller under.",
        "Documentation.LongDescription": "Returnerar ett tal från 1 till 4 som anger vilket kvartal på året som datumet <code>dateTime</code> infaller under. <code>dateTime</code> kan vara ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta det kvartal under året som datumet #date(2011, 12, 31) infaller under.",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "Returnerar början på dagen.",
        "Documentation.LongDescription": "Returnerar början på dagen som representeras av <code>dateTime</code>.\r\n    <code>dateTime</code> måste vara ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta dagens början för den 10 oktober 2011 08:00.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "Returnerar början på månaden.",
        "Documentation.LongDescription": "Returnerar början på den månad som innehåller <code>dateTime</code>.\r\n    <code>dateTime</code> måste vara ett <code>date</code>- eller <code>datetime-</code> värde.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta månadens början för den 10 oktober 2011 08:10:32.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "Returnerar början på kvartalet.",
        "Documentation.LongDescription": "Returnerar början på kvartalet som innehåller <code>dateTime</code>.\r\n      <code>dateTime</code> måste vara ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta kvartalets början för den 10 oktober 2011 08:00.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "Returnerar veckans början.",
        "Documentation.LongDescription": "Returnerar början på veckan som innehåller <code>dateTime</code>.\r\n      <code>dateTime</code> måste vara ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta veckans början för tisdagen den 11 oktober 2011.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "Hitta veckans början för tisdagen den 11 oktober 2011 med måndag som början på veckan.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "Returnerar början på året.",
        "Documentation.LongDescription": "Returnerar början på året som innehåller <code>dateTime</code>.\r\n      <code>dateTime</code> måste vara ett <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta årets början för den 10 oktober 2011 08:10:32.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "Returnerar en post som innehåller delarna i datumvärdet.",
        "Documentation.LongDescription": "Returnerar en post som innehåller delarna i det angivna datumvärdet <code>date</code>.\r\n <ul>\r\n        <li><code>date</code>: Ett <code>date</code>-värde som posten med värdets delar ska beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#date(2011, 12, 31)</code>-värdet till en post som innehåller delar från datumvärdet.",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "Returnerar en textrepresentation av datumvärdet.",
        "Documentation.LongDescription": "Returnerar en textrepresentation av <code>date</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. <code>culture</code> används endast för äldre arbetsflöden. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Mer information finns på https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar det här fältet eller anger <code>1 null-</code> formateras datumet med standardvärdet som definieras i <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: i <code>\"en-US\"</code> <code>\"MMM\"</code> är <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, while in <code>\"ru-RU\"</code> <code>\"MMM\"</code> is <code>\"ннв\", \"фев\", \"мар\", ...</code>. När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omiteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> och <code>culture</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#datum(2010, 12, 31)</code> till ett <code>text</code> värde. <i>Resultatresultatet kan variera beroende på aktuell kultur.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "Konvertera med ett anpassat format och den tyska kulturen.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "Hitta året i Hijri-kalendern som motsvarar den 1 januari 2000 i den gregorianska kalendern.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "Returnerar ett tal från 1 till 6 som anger vilken vecka i månaden som datumet infaller under.",
        "Documentation.LongDescription": "Returnerar ett tal från 1 till 6 som anger vilken vecka i månaden som datumet <code>dateTime</code> infaller i.\r\n <ul>\r\n        <li><code>dateTime</code>: Ett <code>datetime</code>-värde från vilken vecka-i-månaden fastställs.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera vilken vecka som den 15 mars infaller under år 2011.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "Returnerar ett tal från 1 till 54 som anger vilken vecka på året som datumet infaller under.",
        "Documentation.LongDescription": "Returnerar en siffra från 1 till 54 som anger vilken vecka på året som datumet <code>dateTime</code> infaller.\r\n <ul>\r\n        <li><code>dateTime</code>: Ett <code>datetime</code>-värde som veckan på året fastställs för.</li>\r\n        <li><code>firstDayOfWeek</code>: Ett valfritt <code>Day.Type</code>-värde som anger vilken dag som anses som början av en ny vecka (till exempel <code>Day.Sunday</code>). Om inget har angetts så används det kultuirberoende standardvärdet.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bestäm vilken vecka på året som innehåller den 27 mars 2011.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "Bestäm vilken vecka på året som innehåller den 27 mars 2011, med måndag som början på veckan.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "Returnerar årskomponenten.",
        "Documentation.LongDescription": "Returnerar årskomponenten för angivet <code>datetime</code>-värde, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta året i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "Returnerar date-komponenten för angivet date-, datetime- eller datetimezone-värde.",
        "Documentation.LongDescription": "Returnerar date-komponenten för <code>dateTime</code>, för angivet <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Hitta datumvärdet för #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "Skapar ett datetime-värde från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>datetime</code>-värde från angiven <code>value</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").\r\nOm <code>value</code> är <code>null</code> returnerar <code>DateTime.From</code> <code>null</code>. Om <code>value</code> är <code>datetime</code> returneras <code>value</code>. Värden av följande typer kan konverteras till ett <code>datetime</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>datetime</code>-värde från textrepresentationen. Mer information finns under <code>DateTime.FromText</code>.</li>\r\n        <li><code>date</code>: Ett <code>datetime</code>-värde med <code>value</code> som datumkomponent och <code>12:00:00 AM</code> som tidskomponent.</li>\r\n        <li><code>datetimezone</code>: Det lokala <code>datetime</code>-värdet som motsvarar <code>value</code>.</li>\r\n        <li><code>time</code>: Ett <code>datetime</code>-värde med datumvärdet för OLE-automationsdatumet <code>0</code> som datumkomponent och <code>value</code> som tidskomponent.</li>\r\n        <li><code>number</code>: Ett <code>datetime</code>-värde som motsvarar OLE-automationsdatumet uttryckt med <code>value</code>. </li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#time(06, 45, 12)</code> till ett <code>datetime</code>-värde.",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "Konvertera <code>#date(1975, 4, 4)</code> till ett <code>datetime</code>-värde.",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "Skapar ett datetime-värde från ett 64 bitars tal av typen long.",
        "Documentation.LongDescription": "Skapar ett <code>datetime</code>-värde från <code>fileTime</code>-värdet och konverterar det till den lokala tidszonen. Filetime-värdet är ett Windows-filtidsvärde som representerar antalet intervall om 100 nanosekunder som har förflutit sedan midnatt den 1 januari 1601 e. Kr. (C.E.) Coordinated Universal Time (UTC).\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>129876402529842245</code> till ett datetime-värde.",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "Skapar ett datetimezone-värde från lokala och universella datetime-format.",
        "Documentation.LongDescription": "Skapar ett <code>datetime</code> värde från en textrepresentation av <code>text</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Gå Mer information finns på https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar detta fält eller anger <code>null</code> kommer det att resultera i att datumet analyseras med bästa möjliga ansträngning.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: i <code>\"en-US\"</code> <code>\"MMM\"</code> är <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, while in <code>\"ru-RU\"</code> <code>\"MMM\"</code> is <code>\"ннв\", \"фев\", \"мар\", ...</code>. När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omitteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>\"2010-12-31T01:30:00\"</code> till ett datetime-värde.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "Konvertera <code>\"2010-12-31T01:30:00.121212\"</code> till ett datetime-värde.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "Konvertera <code>\"2010-12-31T01:30:00\"</code> till ett datetime-värde.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "Konvertera <code>\"20101231T013000\"</code> till ett datetime-värde.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "Indikerar om denna datetime inträffar under den aktuella timman, så som den anges av systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Indikerar om det givna datetime-värdet <code>dateTime</code> inträffar under den aktuella timman så som den anges av systemets datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om den aktuella systemtiden motsvarar den aktuella timman.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "Indikerar om denna datetime inträffar under den aktuella minuten, så som den anges av systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Indikerar om det givna datetime-värdet <code>dateTime</code> inträffar under den aktuella minuten så som den anges av systemets datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om den aktuella systemtiden motsvarar den aktuella minuten.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "Indikerar om denna datetime inträffar under den aktuella sekunden, så som den anges av systemets aktuella datum och tid.",
        "Documentation.LongDescription": "Indikerar om det givna datetime-värdet <code>dateTime</code> inträffar under den aktuella sekunden så som den anges av systemets datum och tid.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om den aktuella systemtiden motsvarar den aktuella sekunden.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "Indikerar om denna datetime infaller under nästa timme enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella timmen.",
        "Documentation.LongDescription": "Indikerar om det angivna datetime-värde <code>dateTime</code> infaller under nästa timme enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar false när den skickas ett värde som infaller den aktuella timmen.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om timman efter den aktuella systemtiden motsvarar nästa timma.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "Indikerar om denna datetime infaller under nästa minut enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella minuten.",
        "Documentation.LongDescription": "Indikerar om det angivna datetime-värdet <code>dateTime</code> infaller under nästa minut enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella minuten.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om minuten efter den aktuella systemtiden motsvarar nästa minut.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "Indikerar om denna datetime infaller under nästa sekund enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella sekunden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under nästa sekund enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar false om den skickas ett värde som infaller inom den aktuella sekunden.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om sekunden efter den aktuella systemtiden infaller inom nästa sekund.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "Indikerar om denna datetime infaller under den föregående timmen enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella timmen.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under föregående timme enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar false om den skickas ett värde som infaller under den aktuella timmen.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om timman före den aktuella systemtiden motsvarar föregående timma.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "Indikerar om denna datetime infaller under föregående minut enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella minuten.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under föregående minut enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller under den aktuella minuten.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om minuten före den aktuella systemtiden motsvarar föregående minut.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "Indikerar om denna datetime infaller under den föregående sekunden enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella sekunden.",
        "Documentation.LongDescription": "Indikerar om angivet datetime-värde <code>dateTime</code> infaller under den föregående sekunden enligt systemets aktuella datum och tid. Observera att den här funktionen returnerar falskt om den skickas ett värde som infaller inom den aktuella sekunden.\r\n      <ul>\r\n      <li><code>dateTime</code>: Ett <code>datetime</code>- eller <code>datetimezone</code>-värde som ska utvärderas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Fastställer om sekunden före den aktuella systemtiden motsvarar föregående sekund.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "Returnerar time-delen av angivet datetime-värde.",
        "Documentation.LongDescription": "Returnerar time-delen av angivet datetime-värde, <code>dateTime</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Hitta tidsvärdet i #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "Returnerar en post som innehåller delarna i datetime-värdet.",
        "Documentation.LongDescription": "Returnerar en post som innehåller delarna i det angivna datetime-värdet <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: Ett <code>datetime</code>-värde som posten med värdets delar ska beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#datetime(2011, 12, 31, 11, 56, 2)</code>-värdet till en post som innehåller datum- och tidsvärden.",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "Returnerar en textrepresentation av datetime-värdet.",
        "Documentation.LongDescription": "Returnerar en textrepresentation av <code>dateTime</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. <code>culture</code> används endast för äldre arbetsflöden. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Mer information finns på https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar det här fältet eller anger <code>1 null-</code> formateras datumet med standardvärdet som definieras i <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: i <code>\"en-US\"</code> <code>\"MMM\"</code> är <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, while in <code>\"ru-RU\"</code> <code>\"MMM\"</code> is <code>\"ннв\", \"фев\", \"мар\", ...</code>. När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omiteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> och <code>culture</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#datetime(2010, 12, 31, 01, 30, 25)</code> till ett <code>text</code> värde. <i>Resultatresultatet kan variera beroende på aktuell kultur.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "Konvertera med ett anpassat format och den tyska kulturen.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "Konvertera med iso 8601-mönstret.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "Skapar ett datetimezone-värde från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>datetimezone</code>-värde från angiven <code>value</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").\r\nOm <code>value</code> är <code>null</code> returnerar <code>DateTimeZone.From</code> <code>null</code>. Om <code>value</code> är <code>datetimezone</code> returneras <code>value</code>. Värden av följande typer kan konverteras till ett <code>datetimezone</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>datetimezone</code>-värde från textrepresentationen. Mer information finns under <code>DateTimeZone.FromText</code>.</li>\r\n        <li><code>date</code>: Ett <code>datetimezone</code>-värde med <code>value</code> som datumkomponent, <code>12:00:00 AM</code> som tidskomponent och förskjutningen enligt den lokala tidszonen.</li>\r\n        <li><code>datetime</code>: Ett <code>datetimezone</code>-värde med <code>value</code> som datetime och förskjutningen enligt den lokala tidszonen.</li>\r\n        <li><code>time</code>: Ett <code>datetimezone</code>-värde med datumvärdet motsvarande OLE-automationsdatumet <code>0</code> som datumkomponent, <code>value</code> som tidskomponent och förskjutningen enligt den lokala tidszonen.</li>\r\n        <li><code>number</code>: Ett <code>datetimezone</code>-värde med datetime-värdet motsvarande OLE-automationsdatumet uttryckt med <code>value</code> och förskjutningen enligt den lokala tidszonen.</li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>\"2020-10-30T01:30:00-08:00\"</code> till ett <code>datetimezone</code>-värde.",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "Skapar ett datetimezone-värde från ett 64 bitars tal av typen long.",
        "Documentation.LongDescription": "Skapar ett <code>datetimezone</code>-värde från <code>fileTime</code>-värdet och konverterar det till den lokala tidszonen. Filetime-värdet är ett Windows-filtidsvärde som representerar antalet intervall om 100 nanosekunder som har förflutit sedan midnatt den 1 januari 1601 e. Kr. (C.E.) Coordinated Universal Time (UTC).\r\n",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>129876402529842245</code> till ett datetimezone-värde.",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "Skapar en datetimezone från lokala, universella och anpassade datetimezone-format.",
        "Documentation.LongDescription": "Skapar ett <code>datetimezone</code> värde från en textrepresentation av <code>text</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Gå Mer information finns på https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar detta fält eller anger <code>null</code> kommer det att resultera i att datumet analyseras med bästa möjliga ansträngning.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: i <code>\"en-US\"</code> <code>\"MMM\"</code> är <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, while in <code>\"ru-RU\"</code> <code>\"MMM\"</code> is <code>\"ннв\", \"фев\", \"мар\", ...</code>. När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omitteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>\"2010-12-31T01:30:00-08:00\"</code> till ett <code>datetimezone</code>-värde.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "Konvertera med ett anpassat format och den tyska kulturen.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "Konvertera med ISO 8601.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "Tar bort informationen om tidszonen från datetimezone-värdet.",
        "Documentation.LongDescription": "Returnerar ett #datetime-värde från <code>dateTimeZone</code> där informationen om tidszonen har tagits bort.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Ta bort informationen om tidszonen från värdet #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0).",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "Konverterar timezone-komponenten till den lokala tidszonen.",
        "Documentation.LongDescription": "Ändrar tidszonsinformationen för datetimezone-värdet <code>dateTimeZone</code> till den lokala tidszonen.\r\n    Om <code>dateTimeZone</code> inte har någon timezone-komponent läggs informationen om den lokala tidszonen till.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Ändra tidszonsinformationen för #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) till den lokala tidszonen (PST förutsätts).",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "Returnerar en post som innehåller delarna i datetimezone-värdet.",
        "Documentation.LongDescription": "Returnerar en post som innehåller delarna i det angivna datetimezone-värdet <code>dateTimeZone</code>.\r\n <ul>\r\n        <li><code>dateTimeZone</code>: Ett <code>datetimezone</code>-värde som posten med värdets delar ska beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code>-värdet till en post som innehåller datum-, tids- och zonvärden.",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "Returnerar en textrepresentation av datetimezone-värdet.",
        "Documentation.LongDescription": "Returnerar en textrepresentation av <code>dateTimeZone</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. <code>culture</code> används endast för äldre arbetsflöden. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Mer information finns på https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar det här fältet eller anger <code>1 null-</code> formateras datumet med standardvärdet som definieras i <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: i <code>\"en-US\"</code> <code>\"MMM\"</code> är <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, while in <code>\"ru-RU\"</code> <code>\"MMM\"</code> is <code>\"ннв\", \"фев\", \"мар\", ...</code>. När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omiteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> och <code>culture</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> till ett <code>text</code> värde. <i>Resultatresultatet kan variera beroende på aktuell kultur.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "Konvertera med ett anpassat format och den tyska kulturen.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "Konvertera med iso 8601-mönstret.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "Konverterar timezone-komponenten till UTC-tidszonen.",
        "Documentation.LongDescription": "Ändrar tidszonsinformationen för datetime-värdet <code>dateTimeZone</code> till UTC-tidszonen.\r\n    Om <code>dateTimeZone</code> inte har någon timezone-komponent läggs informationen om UTC-tidszonen till.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Ändra tidszonsinformationen för #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) till UTC-tidszonen.",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "Ändrar tidszonen för värdet.",
        "Documentation.LongDescription": "Ändrar tidszonen för värdet.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "Ändrar tidszonen för värdet.",
        "Documentation.LongDescription": "Ändrar tidszonen för värdet.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "Skapar en decimal av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett decimal <code>number</code>-värde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code> <code>Decimal.Från</code> returnerar <code>null</code>.  Om det givna <code>value</code> är <code>number</code> inom intervallet för Decimal, returneras <code>value</code>. I annat fall returneras ett fel. Om <code>value</code> konverteras den först till en <code>number</code> med <code>Number.FromText</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta Decimal <code>number</code>-värdet för <code>\"4.5\"</code>.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "Returnerar innehållet i Delta Lake-tabellen.",
        "Documentation.LongDescription": "Returnerar innehållet i Delta Lake-tabellen.",
        "Documentation.Category": "Öppnar data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "Skapar en Double av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett Double <code>number</code>-värde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code> returnerar <code>Double.From</code> <code>null</code>.  Om det givna <code>value</code> är <code>number</code> inom intervallet för Double, returneras <code>value</code>. I annat fall returneras ett fel. Om <code>value</code> konverteras den först till en <code>number</code> med <code>Number.FromText</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta Double <code>number</code>-värdet för <code>\"4\"</code>.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "Returnerar dagarnas del av en varaktighet.",
        "Documentation.LongDescription": "Returnerar dagarnas del av <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrahera antalet dagar mellan två datum.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "Skapar en varaktighet från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>duration</code>-värde från angiven <code>value</code>. Om <code>value</code> är <code>null</code> returnerar <code>Duration.From</code> <code>null</code>. Om <code>value</code> är <code>duration</code> returneras <code>value</code>. Värden av följande typer kan konverteras till ett <code>duration</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>duration</code>-värde från förfluten tid i textformat (d.h:m:s). Mer information finns under <code>Duration.FromText</code>.</li>\r\n        <li><code>number</code>: Ett <code>duration</code>-värde som motsvarar antalet hela och fraktionella dagar uttryckt med <code>value</code>.</li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>2.525</code> till ett <code>duration</code>-värde.",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "Returnerar ett varaktighetsvärde från förfluten tid i textformat (d.h:m:s).",
        "Documentation.LongDescription": "Returnerar ett varaktighetsvärde från den angivna texten, <code>text</code>. Följande format kan parsas av den här funktionen:\r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (Alla intervall är inkluderande)<br>\r\n        ddd: Antal dagar.<br>\r\n        hh: Antal timmar, mellan 0 och 23.<br>\r\n        mm: Antal minuter, mellan 0 och 59.<br>\r\n        ss: Antal sekunder, mellan 0 och 59.<br>\r\n        ff: Delar av sekunder, mellan 0 och 9999999.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>\"2.05:55:20\"</code> till ett <code>duration</code>-värde.",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "Returnerar timmarnas del av en varaktighet.",
        "Documentation.LongDescription": "Returnerar timmarnas del av <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrahera timmar från ett varaktighetsvärde.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "Returnerar minuternas del av en varaktighet.",
        "Documentation.LongDescription": "Returnerar minuternas del av <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrahera minuter från ett varaktighetsvärde.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "Returnerar sekundernas del av en varaktighet.",
        "Documentation.LongDescription": "Returnerar sekundernas del av <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrahera sekunderna från ett varaktighetsvärde.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "Returnerar en post som innehåller delarna i varaktigheten.",
        "Documentation.LongDescription": "Returnerar en post som innehåller delarna i varaktighetsvärdet <code>duration</code>.\r\n  <ul>\r\n        <li><code>duration</code>: Ett <code>duration</code>-värde som posten skapas från.</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#duration(2, 5, 55, 20)</code> till en post med dess delar: dagar, timmar, minuter och sekunder (om tillämpligt).",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "Returnerar texten i formatet \"d.h:m:s\".",
        "Documentation.LongDescription": "Returnerar en textrepresentation i formatet dag.timme:minuter:sekunder för det givna varaktighetsvärdet <code>duration</code>.\r\n <ul>\r\n        <li><code>duration</code>: En <code>varaktighet</code> som textrepresentationen beräknas från.</li>\r\n  <li><code>format</code>: <i>[Valfritt]</i> Inaktuellt, utlöser ett fel om inte null</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#duration(2, 5, 55, 20)</code> till ett textvärde.",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "Returnerar totalt antal dagar som varaktigheten omfattar.",
        "Documentation.LongDescription": "Returnerar det totala antalet dagar som omfattas av <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Hitta det totala antalet dagar som omfattas av ett varaktighetsvärde.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "Returnerar totalt antal timmar som varaktigheten omfattar.",
        "Documentation.LongDescription": "Returnerar det totala antalet timmar som omfattas av <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Hitta det totala antalet timmar som omfattas av ett varaktighetsvärde.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "Returnerar totalt antal minuter som varaktigheten omfattar.",
        "Documentation.LongDescription": "Returnerar det totala antalet minuter som omfattas av <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Hitta det totala antalet minuter som omfattas av ett varaktighetsvärde.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "Returnerar totalt antal sekunder som varaktigheten omfattar.",
        "Documentation.LongDescription": "Returnerar det totala antalet sekunder som <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Hitta det totala antalet sekunder som omfattas av ett varaktighetsvärde.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "Returnerar en felpost från angivna textvärden för orsak, meddelande och detaljinformation.",
        "Documentation.LongDescription": "Returnerar en felpost från angivna textvärden för orsak, meddelande och detaljinformation.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "Returnerar M-källkodrepresentationen för ett konstantvärde.",
        "Documentation.LongDescription": "Returnerar M-källkodrepresentationen för ett konstantvärde.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Hämta M-källkodsrepresentationen för ett nummervärde.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "Hämta M-källkodsrepresentationen för ett datumvärde.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "Hämta M-källkodsrepresentationen för ett textvärde.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "Returnerar resultatet från utvärderingen av ett M-uttrycket.",
        "Documentation.LongDescription": "Returnerar resultatet från utvärderingen av ett M-uttryck <code>document</code>, med de tillgängliga identifierare som kan refereras till definierade av <code>environment</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Utvärdera en enkel summa.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "Utvärdera en mer komplex summa.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "Utvärdera sammanlänkningen av ett textvärde med en identifierare.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "Returnerar M-källkodsrepresentationen för en identifierare.",
        "Documentation.LongDescription": "Returnerar M-källkodsrepresentationen för en identifierare <code>name</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Hämta M-källkodsrepresentationen för en identifierare.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "Hämta M-källkodsrepresentationen för en identifierare som innehåller ett blanksteg.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "Returnerar innehållet i den angivna filen i binärformat.",
        "Documentation.LongDescription": "Returnerar filens innehåll, <code>path</code>, som binärt. Parametern <code>options</code> är för närvarande endast avsedd för internt bruk.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "Returnerar om en viss funktion anses vara en datakälla eller inte.",
        "Documentation.LongDescription": "Returnerar om en <code>function</code> anses vara en datakälla eller inte.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Översätter text som motsvarar ett geografiskt värde i WKT-format (well-known text) till en strukturerad post.",
        "Documentation.LongDescription": "Översätter text som motsvarar ett geografiskt värde i WKT-format (well-known text) till en strukturerad post. WKT är ett standardformat som definieras av OGC (Open Geospatial Consortium) och är det vanliga serialiseringsformatet som används av databaser, till exempel SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "Översätter ett värde för strukturerad geografisk punkt till WKT-motsvarighet (well-known text).",
        "Documentation.LongDescription": "Översätter en strukturerad geografisk punkt till dess WKT-motsvarighet (well-known text) enligt definitionen i OGC (Open Geospatial Consortium), det serialiseringsformat som används av många databaser, däribland SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Översätter text som motsvarar ett geometriskt värde i WKT-format (well-known text) till en strukturerad post.",
        "Documentation.LongDescription": "Översätter text som motsvarar ett geometriskt värde i WKT-format (well-known text) till en strukturerad post. WKT är ett standardformat som definieras av OGC (Open Geospatial Consortium) och är det vanliga serialiseringsformatet som används av databaser, till exempel SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "Översätter ett värde för strukturerad geometrisk punkt till WKT-motsvarighet (well-known text).",
        "Documentation.LongDescription": "Översätter en strukturerad geometrisk punkt till dess WKT-motsvarighet (well-known text) enligt definitionen i OGC (Open Geospatial Consortium), det serialiseringsformat som används av många databaser, däribland SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "Returnerar ett GUID-värde från det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>Guid.Type</code>-värde från angivna <code>value</code>. Om det angivna <code>value</code> är <code>null</code>, så returnerar<code>Guid.From</code> <code>null</code>. En kontroll utförs för att avgöra om det angivna <code>value</code> har ett acceptabelt format. Acceptabla format anges i exemplen.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "GUID-värdet kan anges som 32 sammanhängande hexadecimala siffror.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID-värdet kan anges som 32 hexadecimaltal avgränsade med bindestreck i block i mönstret 8-4-4-4-12.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID-värdet kan anges som 32 hexadecimaltal avgränsade med bindestreck och omgivna av klammerparenteser.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID-värdet kan anges som 32 hexadecimaltal avgränsade med bindestreck och omgivna av parenteser.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "Skapar ett 16-bitars heltal av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett 16-bitars <code>number</code>-heltalsvärde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code> returnerar <code>Int16.From</code> <code>null</code>. Om det givna <code>value</code> är <code>number</code> inom intervallet för 16-bitars heltal utan decimaldel, returneras <code>value</code>. Om talet har en decimaldel avrundas det med det angivna avrundningsläget. Standardavrundningsläget är <code>RoundingMode.ToEven</code>. Om det givna <code>value</code> är av någon annan typ kontrollerar du under <code>Number.FromText</code> om hur du konverterar det till <code>number</code>-värde. Mer information om tillgängliga avrundningslägen finns i <code>Number.Round</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta 16-bitars <code>number</code>-heltalsvärdet för <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hämta 16-bitars <code>number</code>-heltalsvärdet för <code>\"4.5\"</code> genom att använda <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "Skapar ett 32-bitars heltal av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett 32-bitars <code>number</code>-heltalsvärde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code> returnerar <code>Int32.From</code> <code>null</code>.  Om det givna <code>value</code> är <code>number</code> inom intervallet för 32-bitars heltal utan decimaldel, returneras <code>value</code>. Om talet har en decimaldel avrundas det med det angivna avrundningsläget. Standardavrundningsläget är <code>RoundingMode.ToEven</code>. Om det givna <code>value</code> är av någon annan typ kontrollerar du under <code>Number.FromText</code> om hur du konverterar det till <code>number</code>-värde. Mer information om tillgängliga avrundningslägen finns i <code>Number.Round</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta 32-bitars <code>number</code>-heltalsvärdet för <code>\"4\"</code>.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hämta 32-bitars <code>number</code>-heltalsvärdet för <code>\"4.5\"</code> genom att använda <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "Skapar ett 64-bitars heltal av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett 64-bitars <code>number</code>-heltalsvärde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code>, returnerar <code>Int64.From</code> <code>null</code>. Om det givna <code>value</code> är <code>number</code> inom intervallet för 64-bitars heltal utan decimaldel, returneras <code>value</code>. Om talet har en decimaldel avrundas det med det angivna avrundningsläget. Standardavrundningsläget är <code>RoundingMode.ToEven</code>. Om det givna <code>value</code> är av någon annan typ, använder du <code>Number.FromText</code> för att konvertera det till ett <code>number</code>-värde. Mer information om tillgängliga avrundningslägen finns i <code>Number.Round</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Ta fram ett 64-bitars <code>number</code>-heltalsvärde för <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hämta 64-bitars <code>number</code>-heltalsvärdet för <code>\"4.5\"</code> genom att använda <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "Skapar ett signerat 8-bitars heltal av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett signerat 8-bitars <code>number</code>-heltalsvärde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code> returnerar <code>Int8.Från</code>returneras <code>null</code>.  Om det givna <code>value</code> är <code>number</code> inom intervallet för ett signerat 8-bitars heltal utan decimaldel, returneras <code>value</code>. Om talet har en decimaldel avrundas det med det angivna avrundningsläget. Standardavrundningsläget är <code>RoundingMode.ToEven</code>. Om <code>value</code> är av någon annan typ kontrollerar du under <code>Number.FromText</code> om hur du konverterar det till <code>number</code>-värde. Mer information om tillgängliga avrundningslägen finns i <code>Number.Round</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta det signerade 8-bitars <code>number</code>-heltalsvärdet för <code>\"4\"</code>.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hämta det signerade 8-bitars <code>number</code>-heltalsvärdet för <code>\"4.5\"</code> genom att använda <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "Returnerar det abstrakta syntaxträdet (AST) för en funktions brödtext.",
        "Documentation.LongDescription": "<p>Returnerar abstrakt syntaxträd (AST) för brödtexten för <code>function</code>, normaliserad till ett <i>objektuttryck</i>:\r\n<ul>\r\n  <li>Funktionen måste vara ett 1-argumentslambda.</li>\r\n  <li>Alla referenser till funktionsparametrarna ersätts med <code>ItemExpression.Item</code>.</li>\r\n  <li>AST förenklas till att innehålla enbart noder av typerna:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Ett fel utlöses om ett raduttrycks-AST inte kan returneras för brödtexten för <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returnerar AST för brödtexten till funktionen <code>each _ <> null</code>",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "Returnerar innehållet i JSON-dokumentet.",
        "Documentation.LongDescription": "Returnerar innehållet i JSON-dokumentet.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "Producerar en JSON-representation av ett givet värde.",
        "Documentation.LongDescription": "<p>Producerar en JSON-representation av ett givet värde <code>value</code> med en textkodning specificerad av <code>encoding</code>. Om <code>encoding</code> utesluts används UTF8. Värden representeras enligt följande:</p>\r\n <ul>\r\n        <li>Null, text och logiska värden representeras som motsvarande JSON-typer</li>\r\n        <li>Siffror representeras som siffror i JSON, med undantag för att <code>#infinity</code>, <code>-#infinity</code> och <code>#nan</code> konverteras till null</li>\r\n        <li>Listor representeras som JSON-matriser</li>\r\n        <li>Poster representeras som JSON-objekt</li>\r\n        <li>Tabeller representeras som en matris av objekt</li>\r\n        <li>Datum, tider, datetimes, datetimezones och varaktigheter representeras som ISO-8601-text</li>\r\n        <li>Binära värden representeras som Base-64-kodad text</li>\r\n        <li>Typer och funktioner resulterar i fel</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Konverterar ett komplext värde till JSON.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "Konverterar ett binärvärde till en lista med textvärden uppdelade vid radbrytningar. Om en citatstil anges kan radbrytningar visas inom citattecken. Om includeLineSeparators är true tas radbrytningstecknen med i texten.",
        "Documentation.LongDescription": "Konverterar ett binärvärde till en lista med textvärden uppdelade vid radbrytningar. Om en citatstil anges kan radbrytningar visas inom citattecken. Om includeLineSeparators är true tas radbrytningstecknen med i texten.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "Konverterar ett textvärde till en lista med textvärden separerade med radbrytningar. Om includeLineSeparators är true tas radbrytningstecknen med i texten.",
        "Documentation.LongDescription": "Konverterar ett textvärde till en lista med textvärden separerade med radbrytningar. Om includeLineSeparators är sann, innebär det att radbrytningstecknen ingår i texten.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (standard) Inga citattecken behövs.</li>\r\n            <li><code>QuoteStyle.Csv:</code> Citattecken används enligt csv. Dubbla citattecken används för att avgränsa sådana regioner, och ett par dubbla citattecken används för att indikera ett enskilt dubbelt citattecken i en sådan region. </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "Konverterar en lista med text till ett binärvärde med angiven kodning och lineSeparator. Angiven lineSeparator läggs till för varje rad. Om den inte anges används retur- och radmatningstecknen.",
        "Documentation.LongDescription": "Konverterar en lista med text till ett binärvärde med angiven kodning och lineSeparator. Angiven lineSeparator läggs till för varje rad. Om den inte anges används retur- och radmatningstecknen.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "Konverterar en lista med text till en enskild text. Angiven lineSeparator läggs till för varje rad. Om den inte anges används retur- och radmatningstecknen.",
        "Documentation.LongDescription": "Konverterar en lista med text till en enskild text. Angiven lineSeparator läggs till för varje rad. Om den inte anges används retur- och radmatningstecknen.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "Returnerar true om alla uttryck utvärderas som true.",
        "Documentation.LongDescription": "Returnerar true om alla uttryck i listan <code>list</code> utvärderas som true.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om alla uttrycken i listan {true, true, 2 > 0} utvärderas som true.",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om alla uttrycken i listan {true, true, 2 < 0} utvärderas som true.",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "Returnerar true om ett uttryck utvärderas som true.",
        "Documentation.LongDescription": "Returnerar true om något av uttrycken i listan <code>list</code> utvärderas som true.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om något av uttrycken i listan {true, false, 2 > 0} utvärderas som true.",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om något av uttrycken i listan {2 = 0, false, 2 < 0} utvärderas som true.",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "Returnerar medelvärdet av värdena. Kan användas med number-, date-, datetime-, datetimezone- och duration-värden.",
        "Documentation.LongDescription": "Returnerar medelvärdet för objekten i listan, <code>list</code>. Resultatet returneras med samma datatype som värdena i listan. Kan endast användas med number-, date-, time-, datetime-, datetimezone- och duration-värden.\r\n    Om listan är tom returneras null.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Hitta medelvärdet för listan med tal, <code>{3, 4, 6}</code>.",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "Hitta medelvärdet för datumvärdena 1 januari 2011, 2 januari 2011 och 3 januari 2011.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "Buffrar en lista.",
        "Documentation.LongDescription": "Buffrar listan <code>list</code> i minnet. Resultatet från det här anropet är en stabil lista.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Skapa en stabil kopia av listan {1..10}.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "Returnerar en enskild lista genom att kombinera flera listor.",
        "Documentation.LongDescription": "Använder en lista med listor, <code>lists</code>, och slår ihop dem till en enda ny lista.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Kombinera de två enkla listorna {1, 2} och {3, 4}.",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "Kombinera de två listorna, {1, 2} och {3, {4, 5}}, av vilka den ena innehåller en kapslad lista.",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "Returnerar antalet objekt i listan.",
        "Documentation.LongDescription": "Returnerar antalet objekt i listan <code>list</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Hitta antalet värden i listan {1, 2, 3}.",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "Returnerar en lista med värden med borttagna dubbletter.",
        "Documentation.LongDescription": "Returnerar en lista som innehåller alla värdena i listan <code>list</code> med borttagna dubbletter. Om listan är tom är resultatet en tom lista.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Ta bort dubbletter från listan {1, 1, 2, 3, 3, 3}.",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "Returnerar det första värdet i listan eller det angivna standardvärdet om listan är tom.",
        "Documentation.LongDescription": "Returnerar det första objektet i listan <code>list</code>, eller det valfria standardvärdet <code>defaultValue</code> om listan är tom.\r\n    Om listan är tom och inget standardvärde anges returnerar funktionen <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta det första värdet i listan {1, 2, 3}.",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "Hitta det första värdet i listan {}. Returnera -1 om listan är tom.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "Returnerar skärningen för listvärdena i indata.",
        "Documentation.LongDescription": "Returnerar skärningen för listvärdena i indatalistan <code>lists</code>. En valfri parameter, <code>equationCriteria</code>, kan användas.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta skärningen för listorna {1..5}, {2..6}, {3..7}.",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "Anger om det finns dubbletter i listan.",
        "Documentation.LongDescription": "Returnerar ett logiskt värde om det finns dubbletter i listan <code>list</code>; <code>true</code> om listan är distinkt, <code>false</code> om det finns dubblettvärden. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om listan {1, 2, 3} är distinkt (d.v.s. inga dubbletter).",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om listan {1, 2, 3, 3} är distinkt (d.v.s. inga dubbletter).",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "Returnerar true om listan är tom.",
        "Documentation.LongDescription": "Returnerar <code>true</code> om listan, <code>list</code>, inte innehåller några värden (längd 0). Om listan innehåller värden (längd > 0) returneras <code>false</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om listan {} är tom.",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om listan {1, 2} är tom.",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "Returnerar det sista värdet i listan eller det angivna standardvärdet om listan är tom.",
        "Documentation.LongDescription": "Returnerar det sista objektet i listan <code>list</code>, eller det valfria standardvärdet <code>defaultValue</code> om listan är tom.\r\n    Om listan är tom och inget standardvärde anges returnerar funktionen <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta det sista värdet i listan {1, 2, 3}.",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "Hitta det sista värdet i listan {} eller -1 om listan är tom.",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "Returnerar det sista värdet i listan. Kan valfritt ange hur många värden som ska returneras eller ett kvalificeringsvillkor.",
        "Documentation.LongDescription": "Returnerar det sista objektet i listan <code>list</code>. Om listan är tom genereras ett undantag.\r\nDen här funktionen använder en valfri parameter, <code>countOrCondition</code>, för att samla flera objekt eller filtrera objekt. <code>countOrCondition</code> kan anges på tre sätt:\r\n <ul>\r\n  <li>Om ett tal anges returneras så många objekt. </li>\r\n  <li>Om ett villkor anges returneras alla objekt som inledningsvis uppfyller villkoret, med början i listans slut. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. </li>\r\n  <li>Om den här parametern är null returneras det sista objektet i listan.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta det sista värdet i listan {3, 4, 5, -1, 7, 8, 2}.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "Hitta de sista värdena i listan {3, 4, 5, -1, 7, 8, 2} som är större än 0.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "Returnerar det största värdet eller standardvärdet för en tom lista.",
        "Documentation.LongDescription": "Returnerar det största objektet i listan <code>list</code>, eller det valfria standardvärdet <code>default</code> om listan är tom.\r\n    Ett valfritt comparisonCriteria-värde, <code>comparisonCriteria</code>, kan anges för att fastställa hur objekten i listan ska jämföras. Om den här parametern är null används standardjämförelsefunktionen.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta det största värdet i listan {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "Hitta det största värdet i listan {} eller returnera -1 om listan är tom. ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "Returnerar medianvärdet i listan.",
        "Documentation.LongDescription": "Returnerar medianobjektet i listan <code>list</code>. Den här funktionen returnerar <code>null</code> om listan inte innehåller några värden som inte är <code>null</code>.\r\n    Om det finns ett jämnt antal objekt, väljer funktionen det mindre av de två medianobjekten, såvida listan inte helt\r\n    består av enbart datumtider, varaktigheter, siffror eller tider, i så fall returnerar den medelvärdet för de två objekten.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta medianvärdet i listan <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "Returnerar det minsta värdet eller standardvärdet för en tom lista.",
        "Documentation.LongDescription": "Returnerar det minsta objektet i listan <code>list</code>, eller det valfria standardvärdet <code>default</code> om listan är tom.\r\n    Ett valfritt comparisonCriteria-värde, <code>comparisonCriteria</code>, kan anges för att fastställa hur objekten i listan ska jämföras. Om den här parametern är null används standardjämförelsefunktionen.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Hitta det minsta värdet i listan {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "Hitta det minsta värdet i listan {} eller returnera -1 om listan är tom. ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "Returnerar det vanligast förekommande värdet i listan.",
        "Documentation.LongDescription": "Returnerar objektet som förekommer oftast i listan, <code>list</code>. Om listan är tom genereras ett undantag. Om flera objekt förekommer med samma maxfrekvens väljs det sista.\r\n    Ett valfritt <code>comparisonCriteria</code>-värde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Hitta det objekt som förekommer oftast i listan, <code>{\"A\", 1, 2, 3, 3, 4, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "Hitta det objekt som förekommer oftast i listan, <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "Returnerar en lista med de vanligast förekommande värdena i listan.",
        "Documentation.LongDescription": "Returnerar objektet som förekommer oftast i listan, <code>list</code>. Om listan är tom genereras ett undantag. Om flera objekt förekommer med samma maxfrekvens väljs det sista.\r\n    Ett valfritt <code>comparisonCriteria</code>-värde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Hitta de objekt som förekommer oftast i listan, <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "Returnerar antalet objekt i listan som inte är noll.",
        "Documentation.LongDescription": "Returnerar antalet objekt i listan <code>list</code> som inte är noll.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "Returnerar en lista med förskjutningar för aktuella indata.",
        "Documentation.LongDescription": "Returnerar en lista med förskjutningar för indatalistan <code>list</code>.\r\n    När du använder List.Transform för att ändra en lista, kan listan med positioner användas för att ge transformeringen åtkomst till positionen.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta förskjutningarna för värden i listan {1, 2, 3, 4, null, 5}.",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "Returnerar produkten av talen i listan.",
        "Documentation.LongDescription": "Returnerar produkten av talen i listan, <code>numbersList</code>, som inte är null. Returnerar null om det inte finns några värden som inte är null i listan.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Hitta produkten av talen i listan <code>{1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "Returnerar en lista med slumptal.",
        "Documentation.LongDescription": "Returnerar en lista med slumptal mellan 0 och 1, baserat på antalet värden som ska genereras och ett valfritt startvärde.\r\n<ul>\r\n   <li><code>count</code>: Antalet slumpvärden som ska genereras.</li>\r\n   <li><code>seed</code>:  <i>[Valfritt]</i> Ett numeriskt värde som används som startvärde för slumptalsgeneratorn. Om inget anges genereras en unik lista med slumptal varje gång du anropar funktionen. Om du anger startvärdet med ett tal genererar varje anrop till funktionen samma lista med slumptal.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med 3 slumptal.",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "Skapa en lista med 3 slumptal och ange ett startvärde.",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "Returnerar en lista som hoppar över angivet antal element i början av listan.",
        "Documentation.LongDescription": "Returnerar en lista som tar bort det första elementet i listan <code>list</code>. Om <code>list</code> är en tom lista returneras en tom lista.\r\nDen här funktionen använder en valfri parameter, <code>countOrCondition</code>, för att ge stöd för att ta bort flera värden som du ser nedan.\r\n <ul>\r\n <li>Om ett tal anges tas upp till så många objekt bort. </li>\r\n <li>Om ett villkor anges börjar listan som returneras med det första elementet i <code>list</code> som uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. </li>\r\n <li>Om den här parametern är null används standardbeteendet. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från {1, 2, 3, 4, 5} utan de första 3 talen.",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Skapa en lista från {5, 4, 2, 6, 1} som börjar med ett tal som är mindre än 3.",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "Returnerar en lista som tar bort angivet antal element från slutet av listan.",
        "Documentation.LongDescription": "Returnerar en lista som tar bort de sista <code>countOrCondition</code> elementen från slutet av listan <code>list</code>. Om <code>list</code> har färre än <code>countOrCondition</code> element returneras en tom lista.\r\n <ul>\r\n <li>Om ett tal anges tas upp till så många objekt bort. </li>\r\n <li>Om ett villkor anges slutar listan som returneras med det första nedersta elementet i <code>list</code> som uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. </li>\r\n <li>Om den här parametern är null tas endast ett objekt bort. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från {1, 2, 3, 4, 5} utan de sista 3 talen.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Skapa en lista från {5, 4, 2, 6, 4} som slutar med ett tal som är mindre än 3.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "Tar bort alla null-värden från den angivna listan.",
        "Documentation.LongDescription": "Tar bort alla förekomster av null-värden i <code>list</code>. Om det inte finns några null-värden i listan returneras den ursprungliga listan.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Ta bort null-värden från listan {1, 2, 3, null, 4, 5, null, 6}.",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "Byt till omvänd ordning med värden i listan.",
        "Documentation.LongDescription": "Returnerar en lista med värdena i listan <code>list</code> i omvänd ordning.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från {1..10} i omvänd ordning.",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "Returnerar det enstaka listobjektet för en lista med längden ett. Annars genereras ett undantag.",
        "Documentation.LongDescription": "Om det bara finns ett objekt i listan returnerar <code>list</code> det objektet.\r\n    Om det finns mer än ett objekt eller om listan är tom, genererar funktionen ett undantag.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Sök efter det enskilda värdet i listan {1}.",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "Sök efter det enskilda värdet i listan {1, 2, 3}.",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "Returnerar det enstaka listobjektet för en lista med längden ett och standardvärdet för en tom lista.",
        "Documentation.LongDescription": "Om det bara finns ett objekt i listan, returnerar <code>list</code> det objektet.\r\n    Om listan är tom returnerar funktionen null såvida inte en valfri <code>default</code> har angetts. Om det finns mer än ett objekt i listan returnerar funktionen ett fel.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Sök efter det enskilda värdet i listan {1}.",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "Sök efter det enskilda värdet i listan {}.",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "Sök efter det enskilda värdet i listan {}. Returnera -1 om listan är tom.",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "Returnerar en lista som hoppar över angivet antal element i början av listan.",
        "Documentation.LongDescription": "Returnerar en lista som hoppar över det första elementet i listan <code>list</code>. Om <code>list</code> är en tom lista returneras en tom lista.\r\nDen här funktionen använder en valfri parameter, <code>countOrCondition</code>, för att ge stöd för att hoppa över flera värden som du ser nedan.\r\n <ul>\r\n <li>Om ett tal anges hoppas så många objekt över. </li>\r\n <li>Om ett villkor anges börjar listan som returneras med det första elementet i <code>list</code> som uppfyller villkoret. Om ett objekt inte uppfyller villkoret utvärderas inga fler objekt. </li>\r\n <li>Om den här parametern är null används standardbeteendet. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista från {1, 2, 3, 4, 5} utan de första 3 talen.",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Skapa en lista från {5, 4, 2, 6, 1} som börjar med ett tal som är mindre än 3.",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "Sorterar en lista med data enligt angivna villkor.",
        "Documentation.LongDescription": "Sorterar en lista med data, <code>list</code>, enligt angivna valfria villkor.\r\n    En valfri parameter, <code>comparisonCriteria</code>, kan anges som jämförelsevillkor. Följande värden kan användas:\r\n    <ul>\r\n    <li> Om du vill styra ordningen kan jämförelsevillkoret vara ett ordningsuppräkningsvärde. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> Om du vill beräkna en nyckel som ska användas för sortering kan en funktion med 1 argument användas. </li>\r\n    <li> Om du både vill välja en nyckel och styra ordningen kan jämförelsevillkoret vara en lista som innehåller nyckeln och ordningen (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> Om du vill ha full kontroll över jämförelsen kan en funktion med 2 argument användas. Funktionen tillsänds två objekt från listan (valfria två objekt i valfri ordning).Funktionen bör returnera ett av följande värden: \r\n        <ul>\r\n            <li> <code>-1</code>: Det första objektet är mindre än det andra.</li>\r\n            <li> <code>0</code>: Objekten är likvärdiga.</li>\r\n            <li> <code>1</code>: Det första objektet är större än det andra.</li>\r\n        </ul>\r\n        Value.Compare är en metod som kan användas för att delegera den här logiken. </li>\r\n    </ul>.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Sortera listan {2, 3, 1}.",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Sortera listan {2, 3, 1} i fallande ordning.",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "Sortera listan {2, 3, 1} i fallande ordning med hjälp av Value.Compare-metoden.",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "Returnerar en sampelbaserad uppskattning av standardavvikelsen.",
        "Documentation.LongDescription": "Returnerar en sampelbaserad uppskattning av standardavvikelsen för värden i listan <code>numbersList</code>.\r\n    Om <code>numbersList</code> är en lista med tal returneras ett tal.\r\n    Ett undantag genereras för en tom lista eller en lista med objekt som inte har typen <code>number</code>.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Hitta standardavvikelsen för tal 1 till och med 5.",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "Returnerar summan av objekten i listan.",
        "Documentation.LongDescription": "Returnerar summan av värdena i listan, <code>list</code>, som inte är null. Returnerar null om det inte finns några värden som inte är null i listan.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "Hitta summan av talen i listan <code>{1, 2, 3}</code>.",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "Returnerar unionen av listvärdena i dina indata.",
        "Documentation.LongDescription": "Tar en lista med listor, <code>lists</code>, förenar objekten i de individuella listorna och returnerar dem i utdatalistan. Listan som returneras innehåller alla objekt i alla indatalistor.\r\n    Den här åtgärden bevarar traditionell dubblettsemantik och dubblettvärden matchas som en del av föreningen.\r\n    Ett valfritt ekvationsvillkorsvärde, <code>equationCriteria</code>, kan anges för att hantera likhetstestning. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Skapa en union av listan {1..5}, {2..6}, {3..7}.",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "Returnerar en lista med listor genom att kombinera objekt på samma plats i flera listor.",
        "Documentation.LongDescription": "Tar en lista med listor, <code>lists</code> och returnerar en lista med listor som kombinerar objekt på samma plats.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Zippar de två enkla listorna {1, 2} och {3, 4}.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Zippar de två enkla listorna med olika längd {1, 2} och {3}.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "Skapar ett logiskt värde från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>logical</code>-värde från angiven <code>value</code>. Om <code>value</code> är <code>null</code> returnerar <code>Logical.From</code> <code>null</code>. Om <code>value</code> är <code>logical</code> returneras <code>value</code>. Värden av följande typer kan konverteras till ett <code>logical</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>logical</code>-värde från textvärdet, antingen <code>\"true\"</code> eller <code>\"false\"</code>. Mer information finns under <code>Logical.FromText</code>.</li>\r\n        <li><code>number</code>: <code>false</code> om <code>value</code> är lika med <code>0</code>, annars <code>true</code>.</li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>2</code> till ett <code>logical</code>-värde.",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "Skapar ett logiskt värde från textvärdena \"true\" och \"false\".",
        "Documentation.LongDescription": "Skapar ett logiskt värde från textvärdet <code>text</code>, antingen \"true\" eller \"false\". Om <code>text</code> innehåller en annan sträng genereras ett undantag. Textvärdet <code>text</code> är skiftlägeskänsligt.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Skapa ett logiskt värde från textsträngen \"true\".",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "Skapa ett logiskt värde från textsträngen \"a\".",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "Returnerar texten \"true\" eller \"false\" baserat på ett logiskt värde.",
        "Documentation.LongDescription": "Skapar ett textvärde från det logiska värdet <code>logicalValue</code>, antingen <code>true</code> eller <code>false</code>. Om <code>logicalValue</code> inte är ett logiskt värde genereras ett undantag.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Skapa ett textvärde från det logiska värdet <code>true</code>.",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "Returnerar det absoluta värdet för talet.",
        "Documentation.LongDescription": "Returnerar det absoluta värdet för <code>number</code>. Om <code>number</code> är null returnerar <code>Number.Abs</code> null.\r\n    <ul>\r\n        <li><code>number</code>: Ett <code>number</code> som det absoluta värdet ska beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Det absoluta värdet för -3.",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "Returnerar arccosinus för talet.",
        "Documentation.LongDescription": "Returnerar arccosinus för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "Returnerar arcsinus för talet.",
        "Documentation.LongDescription": "Returnerar arcsinus för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "Returnerar arctangens för talet.",
        "Documentation.LongDescription": "Returnerar arctangens för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "Returnerar en byte där varje bit är motsatsen till indatavärdet.",
        "Documentation.LongDescription": "Returnerar resultatet av en bitvis \"Not\"-åtgärd för <code>number</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "Returnerar cosinus för talet.",
        "Documentation.LongDescription": "Returnerar cosinus för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Hitta cosinus för vinkeln 0.",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "Returnerar hyperboliskt cosinus för talet.",
        "Documentation.LongDescription": "Returnerar hyperboliskt cosinus för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "Upphöjer e med angivet tal.",
        "Documentation.LongDescription": "Returnerar resultatet från att e upphöjs till <code>number</code> (exponentialfunktion).\r\n      <ul>\r\n        <li><code>number</code>: Ett <code>number</code> som exponentialfunktionen ska beräknas från. Om <code>number</code> är null returnerar <code>Number.Exp</code> null. </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Upphöj e till 3.",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "Returnerar fakulteten av talet.",
        "Documentation.LongDescription": "Returnerar fakulteten av talet <code>number</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta fakulteten av 10.",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "Skapar ett tal från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>number</code>-värde från angiven <code>value</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").\r\nOm <code>value</code> är <code>null</code> returnerar <code>Number.From</code> <code>null</code>. Om <code>value</code> är <code>number</code> returneras <code>value</code>. Värden med följande typer kan konverteras till ett <code>number</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>number</code>-värde från textrepresentationen. Vanliga textformat hanteras (\"15\", \"3,423.10\", \"5.0E-10\"). Mer information finns under <code>Number.FromText</code>.</li>\r\n        <li><code>logical</code>: 1 för <code>true</code>, 0 för <code>false</code>.</li>   \r\n        <li><code>datetime</code>: Ett flyttal med dubbel precision som innehåller motsvarigheten till ett OLE-automationsdatum.</li>\r\n        <li><code>datetimezone</code>: Ett flyttal med dubbel precision som innehåller ett OLE-automationsdatum för det lokala datumet och tiden, <code>value</code>.</li>\r\n        <li><code>date</code>: Ett flyttal med dubbel precision som innehåller motsvarigheten till ett OLE-automationsdatum.</li>\r\n        <li><code>time</code>:  Uttrycks i fraktionella dagar.</li>\r\n        <li><code>duration</code>: Uttrycks i hela och fraktionella dagar.</li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta <code>number</code>-värdet för <code>\"4\"</code>.",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hämta <code>number</code>-värdet för <code>#datetime(2020, 3, 20, 6, 0, 0)</code>.",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "Hämta <code>tal</code>värdet för <code>\"12,3 %\"</code>.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "Skapar tal från vanliga textformat (\"15\", \"3,423.10\", \"5.0E-10\").",
        "Documentation.LongDescription": "Returnerar ett <code>number</code>-värde från det angivna textvärdet, <code>text</code>.\r\n <ul>\r\n  <li><code>text</code>: Textrepresentationen av ett numeriskt värde. Representationen måste ha ett vanligt talformat, till exempel ”15”, ”3,423.10” eller ”5.0E-10”.</li>\r\n  <li><code>culture</code>: Valfri kultur som styr hur <code>text</code> ska tolkas (till exempel ”en-US”).</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta det numeriska värdet för <code>\"4\"</code>.",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hämta det numeriska värdet för <code>\"5.0e-10\"</code>.",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "Anger om värdet är jämnt.",
        "Documentation.LongDescription": "Anger om värdet, <code>number</code>, är jämnt genom att returnera <code>true</code> om det är jämnt och annars <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om 625 är ett jämnt tal.",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "Kontrollera om 82 är ett jämnt tal.",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "Anger om värdet är NaN (inte ett tal).",
        "Documentation.LongDescription": "Anger om värdet är NaN (inte ett tal). Returnerar <code>true</code> om <code>number</code> är <code>Number.IsNaN</code> och annars <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om 0 dividerat med 0 är NaN.",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om 1 dividerat med 0 är NaN.",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "Anger om värdet är udda.",
        "Documentation.LongDescription": "Anger om värdet är udda. Returnerar <code>true</code> om <code>number</code> är ett udda tal och annars <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om 625 är ett udda tal.",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om 82 är ett udda tal.",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "Returnerar den naturliga logaritmen för talet.",
        "Documentation.LongDescription": "Returnerar den naturliga logaritmen för ett tal, <code>number</code>. Om <code>number</code> är null returnerar <code>Number.Ln</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hämta den naturliga logaritmen för 15.",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "Returnerar logaritmen för talet till angiven bas (standard är e).",
        "Documentation.LongDescription": "Returnerar logaritmen för ett tal, <code>number</code>, med den angivna <code>base</code>-basen. Om <code>base</code> inte anges är standardvärdet Number.E.\r\n    Om <code>number</code> är null returnerar <code>Number.Log</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hämta 10-logaritmen av 2.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "Hämta e-logaritmen av 2.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "Returnerar 10-logaritmen för talet.",
        "Documentation.LongDescription": "Returnerar 10-logaritmen för ett tal, <code>number</code>. Om <code>number</code> är null så returnerar <code>Number.Log10</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hämta 10-logaritmen av 2.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "Returnerar det avrundade talet. Antalet siffror och avrundningsläget kan anges.",
        "Documentation.LongDescription": "Returnerar resultatet av avrundning av <code>number</code> till närmsta tal. Om <code>number</code> är null, <code>Number. Round</code> returneras null. <br>\r\n      <br>\r\n      Som standard avrundas <code>number</code> till närmsta heltal och bindningarna bryts genom avrundning till närmaste jämna tal (med <code>att RoundingMode.ToEven</code>, även känt som \"banker's rounding\"). <br>\r\n      <br>\r\n      Dessa standardvärden kan dock åsidosättas via följande valfria parametrar. \r\n      <ul>\r\n        <li><code>digits</code>: Orsakar att <code>number</code> avrundas till det angivna antalet decimaler. </li>\r\n        <li><code>roundingMode</code>: Åsidosätter standardbeteendet för återkoppling när <code>number</code> är på mitt punkten mellan två möjliga avrundade värden\r\n(Mer information finns under <code>RoundingMode.Type</code> för möjliga värden).</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Avrunda 1,234 till närmaste heltal.",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "Avrunda 1,56 till närmaste heltal.",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "Avrunda 1,2345 till två decimaler.",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "Avrunda 1,2345 till tre decimaler (avrunda uppåt).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "Avrunda 1,2345 till tre decimaler (avrunda nedåt).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "Returnerar resultatet från avrundningen av positiva tal uppåt och negativa tal nedåt. Antalet siffror kan specificeras.",
        "Documentation.LongDescription": "Returnerar resultatet från att <code>number</code> avrundas baserat på talets tecken. Den här funktionen avrundar positiva tal uppåt och negativa tal nedåt.\r\n    Om <code>digits</code> anges avrundas <code>number</code> till <code>digits</code> decimaltal.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Avrundar talet -1,2 bort från noll.",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "Avrundar talet 1,2 bort från noll.",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "Avrunda talet -1 234 till två decimaler från noll.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "Returnerar föregående största heltal. Antalet decimaltal kan specificeras.",
        "Documentation.LongDescription": "Returnerar resultatet från att <code>number</code> avrundas nedåt till föregående största heltal. Om <code>number</code> är null returnerar den här funktionen null.\r\n\r\n    Om <code>digits</code> anges avrundas <code>number</code> till det angivna antalet decimaltal.\r\n ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Avrunda 1,234 nedåt till närmaste heltal.",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "Avrunda 1,999 nedåt till närmaste heltal.",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "Avrunda 1 999 nedåt till två decimaler.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "Returnerar resultatet från avrundningen av positiva tal nedåt och negativa tal uppåt. Antalet siffror kan specificeras.",
        "Documentation.LongDescription": "Returnerar resultatet från att <code>number</code> avrundas baserat på talets tecken. Den här funktionen avrundar positiva tal nedåt och negativa tal uppåt.\r\n    Om <code>digits</code> anges avrundas <code>number</code> till <code>digits</code> decimaltal.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Avrundar talet -1,2 mot noll.",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "Avrundar talet 1,2 mot noll.",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "Avrunda talet -1 234 till två decimaler mot noll.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "Returnerar nästa största heltal. Antalet siffror kan specificeras.",
        "Documentation.LongDescription": "Returnerar resultatet av avrundning <code>number</code> upp till nästa högsta heltal. Om <code>number</code> är null returnerar den här funktionen null.\r\n Om <code>digits</code> anges avrundas <code>number</code> till det angivna antalet decimaler.\r\n",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Avrunda 1,234 uppåt till närmaste heltal.",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "Avrunda 1,999 uppåt till närmaste heltal.",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "Avrunda 1 234 uppåt till två decimaler.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "Returnerar 1 om talet är positivt, -1 om det är negativt och 0 om det är noll.",
        "Documentation.LongDescription": "Returnerar 1 om <code>number</code> är ett positivt tal, -1 om det är ett negativt tal och 0 om det är noll.\r\n    Om <code>number</code> är null returnerar <code>Number.Sign</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Avgör tecknet för 182.",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "Avgör tecknet för -182.",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "Avgör tecknet för 0.",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "Returnerar sinus för talet.",
        "Documentation.LongDescription": "Returnerar sinus för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Hitta sinus för vinkeln 0.",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "Returnerar hyperboliskt sinus för talet.",
        "Documentation.LongDescription": "Returnerar hyperboliskt sinus för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "Returnerar kvadratroten ur talet.",
        "Documentation.LongDescription": "Returnerar kvadratroten ur <code>number</code>.\r\n    Om <code>number</code> är null returnerar <code>Number.Sqrt</code> null. Om det är ett negativt värde returneras <code>Number.NaN</code> (inte ett tal).",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta kvadratroten ur 625.",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "Hitta kvadratroten ur 85.",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "Returnerar tangens för talet.",
        "Documentation.LongDescription": "Returnerar tangens för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Hitta tangens för vinkeln 1.",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "Returnerar hyperbolisk tangens för talet.",
        "Documentation.LongDescription": "Returnerar hyperbolisk tangens för <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "Konverterar det angivna talet till text.",
        "Documentation.LongDescription": "Konverterar det numeriska värdet <code>number</code> till ett textvärde enligt det format som anges av <code>format</code>.<br>\r\n    <br>\r\n    Formatet är ett textvärde som anger hur talet ska konverteras. Mer information om formatvärden som stöds finns i https://go.microsoft.com/fwlink/?linkid=2241210 och https://go.microsoft.com/fwlink/?linkid=2240884.<br>\r\n    <br>\r\n    En valfri <code>culture</code> kan också anges (till exempel \"en-US\") för att styra det kulturberoende beteendet för <code>format</code>.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Konvertera ett tal till text utan att ange något format.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "Konvertera ett tal till exponentiellt format.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "Konvertera ett tal till procentformat med endast en decimal.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "Returnerar en tabell med OData-feeds från en OData-tjänst.",
        "Documentation.LongDescription": "Returnerar en tabell med OData-flöden som erbjuds av en OData-tjänst från en URI <code>serviceUri</code>, rubriker <code>headers</code>. Ett booleskt värde som anger om samtidiga anslutningar eller en valfri postparameter, <code>options</code>, kan specificeras för att styra följande alternativ:\r\n    <ul>\r\n    <li><code>Query</code>: Lägg programmässigt till frågeparametrar till URL:en utan att behöva oroa dig om undantagstecken. </li>\r\n    <li> <code>Headers</code>: Om du anger det här värdet som en post förses en HTTP-begäran med ytterligare rubriker.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: Om du anger det här värdet som en lista utesluts dessa HTTP-rubriknycklar från att ingå i beräkningen av cachedata.</li>\r\n    <li> <code>ApiKeyName</code>: Om målwebbplatsen har en uppgift om en API-nyckel kan den här parametern användas för att specificera namnet (inte värdet) för den nyckelparameter som måste användas i URL:en. Det faktiska nyckelvärdet tillhandahålls i autentiseringsuppgifterna.</li>\r\n    <li> <code>Timeout</code>: Om du anger det här värdet som en varaktighet, ändras tidsgränsen för en HTTP-begäran. Standardvärdet är 600 sekunder.</li>\r\n    <li> <code>EnableBatch</code>: Ett logiskt alternativ (true/false) som anger om generering av en OData $batch-begäran ska tillåtas om MaxUriLength överskrids (standardvärdet är false).</li>\r\n    <li> <code>MaxUriLength</code>: Ett tal som indikerar maxlängden för en tillåten URI som skickas till en OData-tjänst. Om den överskrids och EnableBatch är true, görs begäran till en OData $batch-slutpunkt. I annat fall misslyckas den (standardvärdet är 2048).</li>\r\n    <li> <code>Concurrent</code>: Ett logiskt alternativ (true/false). När det är satt till true, görs förfrågningar till tjänsten samtidigt. När det är satt till false görs förfrågningarna sekventiellt. Om alternativet inte specificeras bestäms värdet av tjänstens AsynchronousRequestsSupported-kommentar. Om tjänsten inte anger om AsynchronousRequestsSupported stöds eller inte görs förfrågningarna sekventiellt.</li>\r\n    <li> <code>ODataVersion</code>: Ett tal (3 eller 4) som anger vilken version av OData-protokollet som ska användas för den här OData-tjänsten. Om det inte anges begärs alla versioner som stöds. Tjänstversionen fastställs av det OData-versionshuvud som returneras av tjänsten.</li>\r\n    <li> <code>FunctionOverloads</code> : Ett logiskt alternativ (true/false). När det ges värdet true listas överbelastade funktionsimporter i navigatorn som separata poster. När det ges värdet false listas överbelastade funktionsimporter som en unionsfunktion i navigatorn. Standardvärde för V3: false. Standardvärde för V4: true.</li>\r\n    <li> <code>MoreColumns</code> : Ett logiskt alternativ (true/false). När det ges värdet true läggs en \"More Columns\"-kolumn till i varje entitetsflöde som innehåller öppna typer och polymorfiska typer. Den innehåller de fält som inte deklareras i bastypen. När det ges värdet false syns inte det här fältet. Standard är false. </li>\r\n    <li> <code>IncludeAnnotations</code>: En kommateckenavgränsad lista över namnrymdskvalificerade termnamn eller mönster som inkluderar med \"*\" som ett jokertecken. Ingen av anteckningarna inkluderas som standard.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code>: En kommateckenavgränsad lista över namnrymdskvalificerade termnamn eller mönster att inkludera i metadatadokumentsförfrågningar med \"*\" som ett jokertecken. Inkluderar som standard samma anteckningar som IncludeAnnotations.</li>\r\n    <li> <code>OmitValues</code> : Låter OData-tjänsten undvika att skriva ut vissa värden i svar. Om bekräftat så härleder vi de värdena från de utelämnade fälten. Alternativ inkluderar:\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code> : Låter OData-tjänsten utelämna nullvärden.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Implementation</code>: Specificerar implementeringen av den OData-anslutare som ska användas. Giltiga värden är 2.0 eller null.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Anslut till TripPin OData-tjänsten.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "Returnerar resultatet av försök att härleda SQL-funktioner för en ODBC-drivrutin.",
        "Documentation.LongDescription": "Returnerar resultatet av ett försök att härleda SQL-funktioner med anslutningssträngen <code>connectionString</code> med ODBC. <code>connectionString</code> kan vara text eller en post med egenskapsvärdespar. Egenskapsvärden kan vara antingen text eller siffror.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returnera de härledda SQL-funktionerna för en anslutningssträng.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "Returnerar innehållet i Parquet-dokumentet som en tabell.",
        "Documentation.LongDescription": "Returnerar innehållet i Parquet-dokumentet som en tabell. Alternativen är:\n    <ul>\n    <li> <code>TypeMapping</code>: Ett textvärde som styr standardtypmappningen vid läsning och skrivning av filer. Standardvärdet är null och försöker bevara så mycket återgivning som möjligt för den ursprungliga typen. Värdet \"Sql\" ger resultat som är mest kompatibla med Sql Server.</li>\n    </ul>",
        "Documentation.Category": "Öppnar data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Öppnar data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "Returnerar ett prosenttal av det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>percentage</code>-värde från det angivna <code>value</code>. Om det angivna <code>value</code> är <code>null</code>, returnerar <code>Percentage.From</code> <code>null</code>. Om det angivna <code>value</code> är <code>text</code> med efterföljande procenttecken, returneras det konverterade decimaltalet. För andra förekomster, konverteras värdet till en <code>number</code> med <code>Number.From</code>. En valfri <code>culture</code> kan också tillhandahållas (till exempel \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta <code>prosent</code>värdet för <code>\"12,3 %\"</code>.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "Returnerar en post med dataramar från RData-filen.",
        "Documentation.LongDescription": "Returnerar en post med dataramar från RData-filen.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "Kombinerar posterna i den angivna listan.",
        "Documentation.LongDescription": "Kombinerar posterna i angiven <code>records</code>. Om <code>records</code> innehåller värden utan poster returneras ett fel.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Skapa en kombinerad post från posterna.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "Returnerar antalet fält i posten.",
        "Documentation.LongDescription": "Returnerar antalet fält i posten <code>record</code>.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Hitta antalet fält i posten.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "Returnerar namnen på fälten.",
        "Documentation.LongDescription": "Returnerar namnen på fälten i posten <code>record</code> som text.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta namnen på fälten i posten.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "Returnerar en lista med fältvärdena.",
        "Documentation.LongDescription": "Returnerar en lista med fältvärdena i posten <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Hitta fältvärdena i posten.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "Skapar en post från en tabell i formatet {[Name = name, Value = value]}.",
        "Documentation.LongDescription": "Returnerar en post från en tabell med poster, <code>table</code>, som innehåller fältnamn och värdenamn, <code>{[Name = name, Value = value]}</code>. Ett undantag genereras om fältnamnen inte är unika.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Skapa en post från tabellen i formatet Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}).",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "Returnerar en lista med värden som innehåller fältvärdena från indataposten.",
        "Documentation.LongDescription": "Returnerar en lista med värden som innehåller fältvärdena från indataposten <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Extrahera fältvärdena från en post.",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "Returnerar ett abstrakt syntaxträd (AST) som representerar åtkomst till en kolumn i ett raduttryck.",
        "Documentation.LongDescription": "Returnerar ett abstrakt syntaxträd (AST) som representerar åtkomst till kolumn <code>columnName</code> av raden i ett raduttryck.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Skapar ett AST-uttryck som representerar åtkomst till kolumnen CustomerName.",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "Returnerar det abstrakta syntaxträdet (AST) för en funktions brödtext.",
        "Documentation.LongDescription": "<p>Returnerar abstrakt syntaxträd (AST) för brödtexten för <code>function</code>, normaliserad till ett <i>raduttryck</i>:\r\n<ul>\r\n  <li>Funktionen måste vara ett 1-argumentslambda.</li>\r\n  <li>Alla referenser till funktionsparametrarna ersätts med <code>RowExpression.Row</code>.</li>\r\n  <li>Alla referenser till kolumner ersätts med <code>RowExpression.Column(<i>columnName</i>)</code>.</li>\r\n  <li>AST förenklas till att innehålla enbart noder av typerna:\r\n   <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Ett fel utlöses om ett raduttrycks-AST inte kan returneras för brödtexten för <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returnerar AST för brödtexten till funktionen <code>each [CustomerID] = \"ALFKI\"</code>",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "Skapar en Single av det givna värdet.",
        "Documentation.LongDescription": "Returnerar ett enkelt <code>number</code>-värde från det givna <code>value</code>. Om det givna <code>value</code> är <code>null</code> returnerar <code>Enkelt.From</code> <code>null</code>.  Om det givna <code>value</code> är <code>number</code> inom intervallet för enkelt, returneras <code>value</code>. I annat fall returneras ett fel. Om <code>value</code> konverteras den först till en <code>number</code> med <code>Number.FromText</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hämta Single <code>number</code>-värdet för <code>\"1.5\"</code>.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "Returnerar en tabell med data från en Smartsheet-indexslutpunkt.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "Anropar Smartsheet 2.0 REST-API:et vid den angivna slutpunkten och transformerar dataelementet till en tabell.",
        "Documentation.Examples": [
          {
            "Description": "Hämtar en tabell med användarinformation från Smartsheet-API:et",
            "Code": "Smartsheet.Content(\"users\")",
            "Result": "En tabell med användarinformation så som den returneras av Smartsheet-API:et"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text vid någon av de angivna avgränsarna.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text vid någon av de angivna avgränsarna.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata med kommatecken eller semikolon, ignorera citattecken och avgränsare med citattecken och börja från starten av indata.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "Dela indata med kommatecken eller semikolon, ignorera citattecken och avgränsare med citattecken och börja från slutet av indata.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text baserat på angiven avgränsare.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text baserat på angiven avgränsare.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata med kommatecken och ignorera citattecken.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text vid varje angiven avgränsare i följd.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text vid varje angiven avgränsare i följd.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata med kommatecken och sedan semikolon, med början från början av indata.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "Dela indata med kommatecken, sedan semikolon, behandla citattecken som andra tecken och börja från slutet av indata.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text baserat på varje angiven längd.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text baserat på varje angiven längd.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata i de två första tecknen följt av nästa tre, med början från början av indata.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "Dela upp indata i de första tre tecknen följt av nästa två, med början från slutet av indata.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text vid varje angiven position.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text vid varje angiven position.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata vid de angivna positionerna med början från starten av indata.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "Dela indata vid de angivna positionerna, med början från slutet av indata.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text baserat på angivna förskjutningar och längder.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text enligt angivna förskjutningar och längder. En null-längd anger att alla återstående indata ska inkluderas.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata med angiven position och längdpar, med början från början av indata. Observera att intervallen i det här exemplet överlappar varandra.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "Dela indata med angiven position och längdpar, med början från slutet av indata.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "Dela indata i ett postnummer med fast längd följt av ett ortnamn med variabel längd.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "Returnerar en funktion som delar upp text i en lista med text upprepade gånger efter angiven längd.",
        "Documentation.LongDescription": "Returnerar en funktion som delar upp text i en lista med text upprepade gånger efter angiven längd.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Dela indata upprepade gånger i segment med tre tecken, med början från början av indata.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "Dela indata upprepade gånger i segment med tre tecken, med början från slutet av indata.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "Returnerar det ungefärliga antalet rader i tabellen.",
        "Documentation.LongDescription": "Returnerar det ungefärliga antalet rader i <code>table</code>, eller ett fel om datakällan inte stöder uppskattning.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Uppskatta antalet distinkta kombinationer av ort och delstat i en stor tabell, som kan användas som kardinalitetsuppskattning för kolumnerna. Kardinalitetsuppskattningar är tillräckligt viktiga för att olika datakällor (till exempel SQL Server) ska ha stöd för just den här uppskattningen, ofta med hjälp av en algoritm som kallas HyperLogLog.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "Returnerar antalet kolumner i tabellen.",
        "Documentation.LongDescription": "Returnerar antalet kolumner i tabellen <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Hitta antalet kolumner i tabellen.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "Returnerar kolumnnamnen som en lista.",
        "Documentation.LongDescription": "Returnerar kolumnnamnen i tabellen <code>table</code> som en lista med text.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta kolumnnamnen för tabellen.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "Returnerar den första raden eller ett angivet standardvärde.",
        "Documentation.LongDescription": "Returnerar den första raden i <code>table</code> eller ett valfritt standardvärde, <code>default</code> om tabellen är tom.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta den första raden i tabellen.",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Hitta den första raden i tabellen <code>({})</code> eller returnera [a = 0, b = 0] om den är tom.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "Returnerar den första kolumnen i den första raden i en tabell eller ett angivet standardvärde.",
        "Documentation.LongDescription": "Returnerar den första kolumnen i den första raden i tabellen <code>table</code> eller ett angivet standardvärde.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "Anger om tabellen bara innehåller distinkta rader (inga dubbletter).",
        "Documentation.LongDescription": "Anger om <code>table</code> bara innehåller distinkta rader (inga dubbletter). Returnerar <code>true</code> om raderna är distinkta. Annars returneras <code>false</code>.\r\n    En valfri parameter, <code>comparisonCriteria</code>, anger vilka kolumner i tabellen som testas för duplicering. Om <code>comparisonCriteria</code> inte anges testas alla kolumner.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om tabellen är distinkt.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "Kontrollera om tabellen är distinkt i kolumnen.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "Anger om tabellen innehåller några rader.",
        "Documentation.LongDescription": "Anger om <code>table</code> innehåller några rader. Returnerar <code>true</code> om det inte finns några rader (tabellen är tom, med andra ord). Annars returneras <code>false</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera om tabellen är tom.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "Kontrollera om tabellen <code>({})</code> är tom.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "Returnerar nycklarna för den angivna tabellen.",
        "Documentation.LongDescription": "Returnerar nycklarna för den angivna tabellen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Hämta listan över nycklar för en tabell.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "Returnerar den sista raden eller ett angivet standardvärde.",
        "Documentation.LongDescription": "Returnerar den sista raden i <code>table</code> eller ett valfritt standardvärde, <code>default</code> om tabellen är tom.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hitta den sista raden i tabellen.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "Hitta den sista raden i tabellen <code>({})</code> eller returnera [a = 0, b = 0] om den är tom.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "Returnerar antalet rader i tabellen.",
        "Documentation.LongDescription": "Returnerar antalet rader i <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Hitta antalet rader i tabellen.",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "Returnerar den enstaka raden i tabellen.",
        "Documentation.LongDescription": "Returnerar den enstaka raden i <code>table</code> med en rad. Om <code>table</code> har mer än en rad genereras ett undantag.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Returnera den enskilda raden i tabellen.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "Skapar en lista med kapslade listor med kolumnvärden från en tabell.",
        "Documentation.LongDescription": "Skapar en lista med kapslade listor från tabellen, <code>table</code>. Varje listpost är en inre lista som innehåller kolumnvärdena.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med kolumnvärdena från tabellen.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "Konverterar en tabell till en listan genom att tillämpa angiven kombinationsfunktion på varje rad med värden i tabellen.",
        "Documentation.LongDescription": "Konverterar en tabell till en listan genom att tillämpa angiven kombinationsfunktion på varje rad med värden i tabellen.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Kombinera texten på varje rad med ett komma.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "Konverterar en tabell till en lista med poster.",
        "Documentation.LongDescription": "Konverterar en tabell, <code>table</code>, till en lista med poster.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Konvertera tabellen till en lista med poster.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "Skapar en lista med kapslade med radvärden från en tabell.",
        "Documentation.LongDescription": "Skapar en lista med kapslade listor från tabellen, <code>table</code>. Varje listpost är en inre lista som innehåller radvärdena.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med radvärdena från tabellen.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "Skapar en ändrad felpost som inte utlöser en återställning när den genereras av en hanterare som definierats i en vy (via Table.View).",
        "Documentation.LongDescription": "Skapar en ändrad felpost från <code>errorRecord</code> som inte utlöser en återställning när den genereras av en hanterare som definierats i en vy (via Table.View).",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "Skapar en funktion som kan fångas upp av en hanterare som har definierats i en vy (via Table.View).",
        "Documentation.LongDescription": "<p>Skapar en visningsfunktion utifrån <code>function</code>som kan hanteras i en vy som har skapats av <code>Table.View</code>.</p>\r\n<p> Du kan använda <code>OnInvoke</code>-hanteraren av <code>Table.View</code> för att definiera en hanterare för visningsfunktionen.</p>\r\n<p>Som fallet är med hanterarna för de inbyggda åtgärderna, så används <code>function</code> över vyn om ingen <code>OnInvoke</code>-hanterare har angetts, om den inte hanterar visningsfunktionen eller om ett fel har utlösts av hanteraren.</p>\r\n<p>Mer information finns under den publicerade Power Query anpassade anslutningsdokumentationen för en mer fullständig beskrivning av <code>Table.View</code> och custom view functions.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "Returnerar textvärdet med alla kontrolltecken borttagna.",
        "Documentation.LongDescription": "Returnerar ett textvärde med alla kontrolltecken för <code>text</code> borttagna.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort radmatningar och andra kontrolltecken från ett textvärde.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "Sammanfogar en lista med textvärden till ett textvärde.",
        "Documentation.LongDescription": "Returnerar resultatet av att kombinera listan med textvärden, <code>texts</code>, till ett enda textvärde. Alla <code>null</code> värden som finns i <code>texts</code> ignoreras. \n\rDu kan ange en valfri <code>separator</code> som används i den slutliga kombinerade texten.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Kombinera textvärdena \"Seattle\" och \"WA\".",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "Kombinera textvärdena \"Seattle\" och \"WA\" avgränsade med ett komma eller ett blanksteg.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "Kombinera värdena \"Seattle\", <code>null</code> och \"WA\", avgränsade med kommatecken och blanksteg. (Observera att <code>null</code> ignoreras.)",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "Skapar ett textvärde från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar textrepresentationen av <code>value</code>. <code>value</code> kan vara ett <code>number</code>-, <code>date</code>-, <code>time</code>-, <code>datetime</code>-, <code>datetimezone</code>-, <code>logical</code>-, <code>duration</code>- eller <code>binary</code>-värde.\r\n    Om det angivna värdet är null returnerar <code>Text.From</code> null. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Skapa ett textvärde från talet 3.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "Avkodar data från ett binärformat till textformat.",
        "Documentation.LongDescription": "Avkodar data, <code>binary</code>, från ett binärvärde till ett textvärde med typen <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "Härleder den detaljerade nummertypen (Int64.Type, Double.Type, osv.) för ett tal som är kodat i text.",
        "Documentation.LongDescription": "Härleder den detaljerade taltypen (Int64.Type, Double.Type, osv.) för <code>text</code>. Ett fel uppstår om <code>text</code> inte är ett tal. En valfri <code>culture</code> kan även anges (till exempel \"en-US\").",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "Returnerar antalet tecken.",
        "Documentation.LongDescription": "Returnerar antalet tecken i texten <code>text</code>.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollera hur många tecken det finns i texten \"Hello World\".",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "Konverterar alla tecken till gemener.",
        "Documentation.LongDescription": "Returnerar resultatet av att konvertera alla tecken i <code>text</code> till gemener. En valfri <code>culture</code> kan även anges (till exempel \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hämta \"AbCd\" med gemener.",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "Inleder varje ord med versal.",
        "Documentation.LongDescription": "Returnerar resultatet då varje ord i textvärdet <code>text</code> inleds med versal. Alla andra bokstäver utom den första i orden visas med gemener. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Använd <code>Text.Proper</code> i en enkel mening.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "Kastar om det angivna <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Skriv texten ”123” omvänt.",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "Kodar text till ett binärformat.",
        "Documentation.LongDescription": "Kodar det angivna textvärdet, <code>text</code>, till ett binärvärde med angiven <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "Returnerar en lista med teckenvärden från det angivna textvärdet.",
        "Documentation.LongDescription": "Returnerar en lista med teckenvärden från det angivna textvärdet <code>text</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Skapa en lista med teckenvärden från texten \"Hello World\".",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "Tar bort alla inledande och avslutande blanksteg.",
        "Documentation.LongDescription": "Returnerar resultatet från borttagningen av alla inledande och avslutande blanksteg från textvärdet <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort inledande och avslutande blanksteg från \"     a b c d    \".",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "Tar bort alla avslutande blanksteg.",
        "Documentation.LongDescription": "Returnerar resultatet från borttagningen av alla avslutande blanksteg från textvärdet <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort avslutande blanksteg från \"     a b c d    \".",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "Tar bort alla inledande blanksteg.",
        "Documentation.LongDescription": "Returnerar resultatet från borttagningen av alla inledande blanksteg från textvärdet <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Ta bort inledande blanksteg från \"     a b c d    \".",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "Konverterar alla tecken till versaler.",
        "Documentation.LongDescription": "Returnerar resultatet av att konvertera alla tecken i <code>text</code> till versaler. En valfri <code>culture</code> kan även anges (till exempel \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hämta \"aBcD\" med versaler.",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "Returnerar timmens slut.",
        "Documentation.LongDescription": "Returnerar slutet av timmen som representeras av <code>dateTime</code>, inklusive fraktionella sekunder. Informationen om tidszonen bevaras.\r\n      <ul>\r\n        <li><code>dateTime</code>: Ett <code>time</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde som årets slut beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hämta timmens slut för den 14 maj 2011 17:00:00.",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "Hämta timmens slut för den 17 maj 2011 17:00:00 -7:00.",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "Skapar en tid från det angivna värdet.",
        "Documentation.LongDescription": "Returnerar ett <code>time</code>-värde från angiven <code>value</code>. En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").\r\nOm <code>value</code> är <code>null</code>, returnerar <code>Time.From</code> <code>null</code>. Om <code>value</code> är <code>time</code>, returneras <code>value</code>. Värden av följande typer kan konverteras till ett <code>time</code>-värde:\r\n      <ul>\r\n        <li><code>text</code>: Ett <code>time</code>-värde från textrepresentationen. Mer information finns under <code>Time.FromText</code>.</li>\r\n        <li><code>datetime</code>: Tidskomponenten för <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: Tidskomponenten för det lokala datetime-värdet som motsvarar <code>value</code>.</li>\r\n        <li><code>number</code>: Ett <code>time</code>-värde som motsvarar antalet hela och fraktionella dagar uttryckt med <code>value</code>. Om <code>value</code> är negativt eller större än eller lika med 1 returneras ett fel.</li>\r\n      </ul>\r\nOm <code>value</code> hör till en annan typ returneras ett fel.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>0.7575</code> till ett <code>time</code>-värde.",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "Konvertera <code>#datetime(1899, 12, 30, 06, 45, 12)</code> till ett <code>time</code>-värde.",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "Skapar en tid från lokala och universella och anpassade tidsformat.",
        "Documentation.LongDescription": "Skapar ett <code>time</code> värde från en textrepresentation av <code>text</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Gå till https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar detta fält eller anger <code>null</code> kommer det att resultera i att tiden analyseras med bästa möjliga ansträngning.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: I <code>\"en-US\"</code> <code>\"tt\"</code> <code>\"AM\" eller \"PM\"</code>, i <code>\"ar-EG\"</code> <code>\"tt\"</code> är <code>\"ص\" eller \"Wb\"</code>. När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omitteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>\"10:12:31am\"</code> till ett tidsvärde.",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "Konvertera <code>\"1012\"</code> till ett tidsvärde.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "Konvertera <code>\"10\"</code> till ett tidsvärde.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "Returnerar timkomponenten.",
        "Documentation.LongDescription": "Returnerar timkomponenten för angivet <code>time</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Hitta timmen i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "Returnerar minutkomponenten.",
        "Documentation.LongDescription": "Returnerar minutkomponenten för angivet <code>time</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Hitta minuten i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "Returnerar sekundkomponenten.",
        "Documentation.LongDescription": "Returnerar sekundkomponenten för angivet <code>time</code>-, <code>datetime</code>- eller <code>datetimezone</code>-värde, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Hitta sekundvärdet från ett datum- och tidsvärde.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "Returnerar början på timmen.",
        "Documentation.LongDescription": "Returnerar början på timmen som representeras av <code>dateTime</code>.\r\n    <code>dateTime</code> måste vara ett <code>date</code>-, <code>time</code>- eller <code>datetimezone</code>-värde.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hitta timmens början för den 10 oktober 2011 08:10:32.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "Returnerar en post som innehåller delarna i time-värdet.",
        "Documentation.LongDescription": "Returnerar en post som innehåller delarna i det angivna tidsvärdet <code>time</code>.\r\n <ul>\r\n        <li><code>time</code>: Ett <code>time</code>-värde som posten med värdets delar ska beräknas från.</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#time(11, 56, 2)</code>-värdet till en post som innehåller tidsvärden.",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "Returnerar en textrepresentation av tidsvärdet.",
        "Documentation.LongDescription": "Returnerar en textrepresentation av <code>time</code>. En valfri <code>post</code> parameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. <code>culture</code> används endast för äldre arbetsflöden. Den <code>posten</code> kan innehålla följande fält: \r\n<ul>\r\n   <li><code>Format-</code>: Ett <code>textvärde</code> som anger vilket format som ska användas. Mer information finns på https://go.microsoft.com/fwlink/?linkid=2180104 och https://go.microsoft.com/fwlink/?linkid=2180105. Om du utelämnar det här fältet eller anger <code>1 null-</code> formateras datumet med standardvärdet som definieras i <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Om <code>Format</code> inte är null styr <code>Culture</code> vissa formatspecificerare. Exempel: I <code>\"en-US\"</code> <code>\"tt\"</code> <code>\"AM\" eller \"PM\"</code>, i <code>\"ar-EG\"</code> <code>\"tt\"</code> är <code>\"ص\" eller \"Wb\"</code> När <code>Format</code> är <code>null</code> styr <code>Culture</code> standardformatet som ska användas. När <code>Culture</code> är <code>null</code> eller omitteras används <code>Culture.Nuvarande</code>.</li>\r\n</ul>\r\nOm du vill stödja äldre arbetsflöden kan <code>options</code> och <code>culture</code> också vara textvärden. Detta har samma beteende som om <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konvertera <code>#tid(01, 30, 25)</code> till ett <code>text</code> värde. <i>Resultatresultatet kan variera beroende på aktuell kultur.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "Konvertera med ett anpassat format och den tyska kulturen.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "Konvertera med standardtidsformat.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "Returnerar en stängd version av den givna posttypen (eller samma typ, om den redan är stängd).",
        "Documentation.LongDescription": "Returnerar en stängd version av den givna <code>record</code> <code>type</code> (eller samma typ, om den redan är stängd).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Skapa en stängd version av <code>type [ A = number,…]</code>.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "Returnerar en typs fasetter.",
        "Documentation.LongDescription": "Returnerar en post som innehåller fasetterna för <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "Returnerar en post med fältvärden satta till namnet på en funktionstyps parametrar, och deras värden satta till sina motsvarande typer.",
        "Documentation.LongDescription": "Returnerar en post med fältvärden satta till namnet på parametrarna för <code>type</code>, och deras värden satta till sina motsvarande typer.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Hitta typen av parametrar till funktionen <code>(x as number, y as text)</code>.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "Returnerar ett nummer som indikerar det minsta antal parametrar som krävs för att anropa den här typen av funktion.",
        "Documentation.LongDescription": "Returnerar ett nummer som indikerar det minsta antal parametrar som krävs för att anropa inmatningen <code>type</code> av funktionen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Hitta antalet nödvändiga parametrar för funktionen <code>(x as number, optional y as text)</code>.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "Returnerar en typ som returnerats av en funktionstyp.",
        "Documentation.LongDescription": "Returnerar en typ som returnerats av en funktion <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Hitta returtypen för <code>() as any)</code>.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "Returnerar sant om en typ är en nullbar typ; i annat fall returneras falskt.",
        "Documentation.LongDescription": "Returnerar <code>true</code> om typen är en <code>nullable</code> typ; i annat fall returneras <code>false</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Bestäm om <code>number</code> är nullbar.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "Bestäm om <code>type nullable number</code> är nullbar.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "Returnerar om en posttyp är öppen.",
        "Documentation.LongDescription": "Returnerar en <code>logical</code> som indikerar om posten <code>type</code> är öppen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Fastställ om posten <code>type [ A = number, ... ]</code> är öppen.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "Returnerar en objekttyp från en listtyp.",
        "Documentation.LongDescription": "Returnerar en objekttyp från en lista <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Hitta objekttypen i listan <code>{number}</code>.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "Returnerar den ej nullbara typen från en typ.",
        "Documentation.LongDescription": "Returnerar den ej <code>nullable</code> typen från <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Returnerar den ej nullbara typen för <code>type nullable number</code>.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "Returnerar en öppen version av den givna posttypen (eller samma typ, om den redan är stängd).",
        "Documentation.LongDescription": "Returnerar en öppen version av den givna <code>record</code> <code>type</code> (eller samma typ, om den redan är öppen).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Skapa en öppen version av <code>type [ A = number,…]</code>.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "Returnerar en post som beskriver en posttyps fält där varje fält för den returnerade posttypen har ett motsvarande namn och värde.",
        "Documentation.LongDescription": "Returnerar en post som beskriver fälten för en post <code>type</code>. Varje fält av den returnerade posttypen har ett motsvarande namn och ett värde, i formen av en post <code>[ Type = type, Optional = logical ]</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Hitta namnet och värdet för posten <code>[ A = number, optional B = any]</code>.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "Returnerar den eventuellt tomma listan med nycklar för den angivna tabelltypen.",
        "Documentation.LongDescription": "Returnerar den eventuellt tomma listan med nycklar för den angivna tabelltypen.<br>\r\n    <br>\r\n    Varje nyckel definieras med hjälp av en post i följande format:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: en lista över kolumnnamnen som definierar nyckeln\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> om nyckeln är tabellens primärnyckel; annars <code>false</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Returnera nyckelinformationen för en tabelltyp.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "Skickar tillbaka radtypen i tabelltypen.",
        "Documentation.LongDescription": "Skickar tillbaka radtypen för den angivna tabelltypen. Resultatet är alltid en posttyp.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Skicka tillbaka information om radtyp för en enkel tabell.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "Returnerar unionen för en typlista.",
        "Documentation.LongDescription": "Returnerar unionen av typerna i <code>types</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "Assemblera en post till en URI-frågesträng.",
        "Documentation.LongDescription": "Assemblera posten <code>query</code> till en URI-frågesträng, med undantagstecken vid behov.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Koda en frågesträng som innehåller specialtecken.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "Kodar specialtecken enligt RFC 3986.",
        "Documentation.LongDescription": "Kodar specialtecken i indata <code>data</code> enligt reglerna i RFC 3986.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Kodar specialtecken i \"+money$\".",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "Returnerar delarna av den absoluta URI:n i angivna indata som en post.",
        "Documentation.LongDescription": "Returnerar delarna av <code>absoluteUri</code> i angivna indata som en post, som innehåller värden som Scheme, Host, Port, Path, Query, Fragment, UserName och Password.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Hitta delarna i den absoluta URI:n \"www.adventure-works.com\".",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "Avkoda en procentkodad sträng.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "Ange URL för din Azure DevOps Analytics Service.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS. AccountContents",
        "Documentation.Name": "VSTS. AccountContents",
        "Documentation.LongDescription": "Returnerar det innehåll som har hämtas från Azure DevOps Analytics Service-URL:en som ett binärt värde. Funktionen använder olika autentiseringsuppgifter för olika organisationer."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "Ange URL för din Azure DevOps Analytics Service.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Returnerar det innehåll som har laddats ner från Azure DevOps Analytics Service-URL:en som ett binärt värde. Funktionen använder globala autentiseringsuppgifter för alla åtkomliga organisationer."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "Uttrycker alternativa frågeplaner.",
        "Documentation.LongDescription": "Uttrycker alternativa frågeplaner inom ett frågeplansuttryck som uppnås via Value.Expression(Value.Optimize(...)). Inte avsett för annan användning.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "Returnerar ett abstrakt syntaxträd (AST) som representerar värdets uttryck.",
        "Documentation.LongDescription": "Returnerar ett abstrakt syntaxträd (AST) som representerar värdets uttryck",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "Skapar ett starkt typifierat värde från en textrepresentation.",
        "Documentation.LongDescription": "Avkodar ett värde från en textrepresentation, <code>text</code>, och tolkar det som ett värde av en lämplig typ.\r\n    <code>Value.FromText</code> tar ett textvärde och returnerar ett tal, ett logiskt värde, ett nullvärde, ett datetime-värde, ett varaktighetsvärde eller ett textvärde. Det tomma textvärdet tolkas som ett null-värde.\r\n    En valfri <code>culture</code> kan även anges (till exempel, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "Returnerar en post som innehåller metadata för angivna indata.",
        "Documentation.LongDescription": "Returnerar en post som innehåller metadata för angivna indata.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "Signalerar att Value.Expression ska returnera det optimerade uttrycket av ett värde.",
        "Documentation.LongDescription": "När det används i Value.Expression och om <code>value</code> representerar en fråga som kan optimeras, visar den här funktionen att det optimerade uttrycket ska returneras. I annat fall skickas <code>value</code> igenom utan effekt.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "Tar bort metadata i angivna indata.",
        "Documentation.LongDescription": "Tar bort metadata i angivna indata.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "Returnerar typen för det angivna värdet.",
        "Documentation.LongDescription": "Returnerar typen för det angivna värdet.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.LongDescription": "Funktionen är endast avsedd för internt bruk.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "Returnerar HTML-koden för den angivna URL:en enligt en webbläsare.",
        "Documentation.LongDescription": "Returnerar HTML-koden för den angivna <code>url</code>enligt en webbläsare. En valfri postparameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n <ul>\r\n <li><code>ApiKeyName</code>: Om målwebbplatsen innehåller en notering om en API-nyckel, kan den här parametern användas för att ange namnet (inte värdet) för den nyckelparameter som måste användas i webbadressen. Det faktiska nyckelvärdet anges i autentiseringsuppgiften..</li>\r\n        <li><code>WaitFor</code>: Anger ett villkor att vänta på innan HTML laddas ned, förutom att vänta på att sidan ska läsas in (vilket alltid görs). Kan vara en post som innehåller timeout- och/eller selector-fält. Om endast en timeout anges väntar funktionen den angivna tiden innan HTML-koden laddas ned. Om både en väljare och timeout har angetts och tidsgränsen förflutit innan väljaren finns på sidan, utlöses ett fel. Om en väljare anges utan timeout tillämpas en standardtidsgräns på 30 sekunder.</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Öppnar data",
        "Documentation.Examples": [
          {
            "Description": "Returnerar HTML för https://microsoft.com.",
            "Code": "Web.BrowserContents(”https://microsoft.com”)",
            "Result": "<!DOCTYPE html><html xmlns=..."
          },
          {
            "Description": "Returnerar HTML för https://microsoft.com efter att ha väntat på en CSS-väljare att visas.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "<!DOCTYPE html><html xmlns=..."
          },
          {
            "Description": "Returnerar HTML för https://microsoft.com efter att ha väntat i tio sekunder.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "<!DOCTYPE html><html xmlns=..."
          },
          {
            "Description": "Returnerar HTML för https://microsoft.com efter att ha väntat i upp till tio sekunder på att en CSS-väljare ska visas.",
            "Code": "Web.BrowserContents(”https://microsoft.com”, [WaitFor = [Selector = ”div.ready”, Timeout = #duration(0,0,0,10)]])",
            "Result": "<!DOCTYPE html><html xmlns=..."
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "Returnerar innehållet som laddats ned från URL:en som binär.",
        "Documentation.LongDescription": "Returnerar innehållet som hämtats från <code>url</code> som binärt. En valfri postparameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>Query</code> : L&#228;gg automatiskt till fr&#229;geparametrar i webbadressen utan att beh&#246;va t&#228;nka p&#229; undantagstecken.</li>\r\n<li><code>ApiKeyName</code> : Om m&#229;lwebbplatsen inneh&#229;ller en notering om en API-nyckel, kan den h&#228;r parametern anv&#228;ndas f&#246;r att ange namnet (inte v&#228;rdet) f&#246;r den nyckelparameter som m&#229;ste anv&#228;ndas i webbadressen. Det faktiska nyckelv&#228;rdet anges i autentiseringsuppgiften.</li>\r\n<li><code>Headers</code> : Om du anger v&#228;rdet som en post, l&#228;ggs ytterligare sidhuvuden till i en HTTP-f&#246;rfr&#229;gan.</li>\r\n<li><code>Timeout</code> : Om du anger det h&#228;r v&#228;rdet som en varaktighet, &#228;ndras tidsgr&#228;nsen f&#246;r en HTTP-f&#246;rfr&#229;gan. Standardv&#228;rdet &#228;r 100 sekunder.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Om v&#228;rdet anges som en lista, undantas HTTP-sidhuvudnycklarna fr&#229;n att tas med i ber&#228;kningen f&#246;r cachelagring av data.</li>\r\n<li><code>IsRetry</code> : Om det logiska v&#228;rdet anges till SANT ignoreras eventuella svar i cachen n&#228;r data h&#228;mtas.</li>\r\n<li><code>ManualStatusHandling</code> : Om v&#228;rdet anges som en lista, f&#246;rhindras eventuell inbyggd hantering av HTTP-f&#246;rfr&#229;gningar vars svar inneh&#229;ller n&#229;gon av de h&#228;r statuskoderna.</li>\r\n<li><code>RelativePath</code> : Om du anger v&#228;rdet som text, l&#228;ggs det till i slutet av den grundl&#228;ggande webbadressen innan f&#246;rfr&#229;gan st&#228;lls.</li>\r\n<li><code>Content</code> : Om du anger v&#228;rdet &#228;ndras webbf&#246;rfr&#229;gan fr&#229;n GET-f&#246;rfr&#229;gan till POST-f&#246;rfr&#229;gan med alternativets v&#228;rde som inneh&#229;ll i POST-f&#246;rfr&#229;gan.</li>\r\n</ul>\r\n\r\n    HTTP-begäran görs antingen som GET (när inget innehåll har angetts) eller POST (när det finns innehåll). POST-begäranden kan endast göras anonymt.\r\n    <br>\r\n    Huvudena i HTTP-svaret är tillgängliga som metadata i binärresultatet. Utanför en anpassad dataanslutningskontext är endast en delmängd av svarshuvuden tillgängliga (av säkerhetsskäl).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Hämta innehållet i <code>\"https://bing.com/search?q=Power+Query\"</code> med hjälp av alternative RelativePath och Query. Alternativen kan användas för att dynamiskt fråga en statisk baswebbadress.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "Utför en POST-åtgärd mot en webbadress och skicka en binär JSON-nyttolast och parsa svaret som JSON.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "Anslut till en säker URL som accepterar en autentiseringsnyckel som en del av frågesträngen. I stället för att hårdkoda den hemliga nyckeln i M (vilket skulle utgöra en säkerhetsrisk), \r\n    nyckeln kan tillhandahållas på ett säkert sätt genom att ange dess namn (inte dess värde) i M, välja webb-API-autentisering och ange nyckelvärdet som en del av webb-API-autentiseringsuppgifterna.\r\n    När det används på det här sättet genererar följande exempel en begäran till <code>\"https://contoso.com/api/customers/get?api_key=******\"</code>.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "Returnerar HTTP-huvuden som hämtats från URL:en som ett postvärde.",
        "Documentation.LongDescription": "Returnerar rubrikerna som laddats ned från <code>url</code> som en post. En valfri postparameter, <code>options</code>, kan tillhandahållas för att ange ytterligare egenskaper. Posten kan innehålla följande fält:\r\n    <ul>\r\n<li><code>Query</code> : L&#228;gg automatiskt till fr&#229;geparametrar i webbadressen utan att beh&#246;va t&#228;nka p&#229; undantagstecken.</li>\r\n<li><code>ApiKeyName</code> : Om m&#229;lwebbplatsen inneh&#229;ller en notering om en API-nyckel, kan den h&#228;r parametern anv&#228;ndas f&#246;r att ange namnet (inte v&#228;rdet) f&#246;r den nyckelparameter som m&#229;ste anv&#228;ndas i webbadressen. Det faktiska nyckelv&#228;rdet anges i autentiseringsuppgiften.</li>\r\n<li><code>Headers</code> : Om du anger v&#228;rdet som en post, l&#228;ggs ytterligare sidhuvuden till i en HTTP-f&#246;rfr&#229;gan.</li>\r\n<li><code>Timeout</code> : Om du anger det h&#228;r v&#228;rdet som en varaktighet, &#228;ndras tidsgr&#228;nsen f&#246;r en HTTP-f&#246;rfr&#229;gan. Standardv&#228;rdet &#228;r 100 sekunder.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Om v&#228;rdet anges som en lista, undantas HTTP-sidhuvudnycklarna fr&#229;n att tas med i ber&#228;kningen f&#246;r cachelagring av data.</li>\r\n<li><code>IsRetry</code> : Om det logiska v&#228;rdet anges till SANT ignoreras eventuella svar i cachen n&#228;r data h&#228;mtas.</li>\r\n<li><code>ManualStatusHandling</code> : Om v&#228;rdet anges som en lista, f&#246;rhindras eventuell inbyggd hantering av HTTP-f&#246;rfr&#229;gningar vars svar inneh&#229;ller n&#229;gon av de h&#228;r statuskoderna.</li>\r\n<li><code>RelativePath</code> : Om du anger v&#228;rdet som text, l&#228;ggs det till i slutet av den grundl&#228;ggande webbadressen innan f&#246;rfr&#229;gan st&#228;lls.</li>\r\n</ul>\r\n\r\n    HTTP-begäran görs med HEAD-metoden. Utanför en anpassad dataanslutningskontext är endast en delmängd av svarshuvuden tillgängliga (av säkerhetsskäl).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Hämta HTTP-huvudena för <code>\"https://bing.com/search?q=Power+Query\"</code> med alternativen RelativePath och Query.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "Auktoriseringskontexten mot vilken ett villkor för åtkomstkontrollpost (ACE) utvärderas.",
        "Documentation.LongDescription": "Auktoriseringskontexten mot vilken ett villkor för åtkomstkontrollpost (ACE) utvärderas.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "En tabell med åtkomstkontrollposter (ACE:er).",
        "Documentation.LongDescription": "En ordnad tabell med åtkomstkontrollinlägg (ACE:er) som representerar auktoriseringsregler. Varje rad utvärderas mot den aktuella auktoriseringskontexten (i ordning) och den första raden för vilken uttrycket <code>Villkor</code> returnerar sant fastställer vilken regel som gäller. Kolumnen <code>Åtgärd</code> representerar den typ av åtgärd som regeln gäller för. Kolumnen <code>AccessControlKind</code> fastställer om åtkomst ska tillåtas eller nekas för åtgärden.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "Anger typen av åtkomstkontroll.",
        "Documentation.LongDescription": "Anger typen av åtkomstkontroll.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "Typen som representerar alla värden.",
        "Documentation.LongDescription": "Typen som representerar alla värden.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "Typen som representerar alla binärvärden.",
        "Documentation.LongDescription": "Typen som representerar alla binärvärden.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "Anger typen av binär kodning.",
        "Documentation.LongDescription": "Anger typen av binär kodning.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "Anger hur många gånger objektet förväntas förekomma i gruppen.",
        "Documentation.LongDescription": "Anger hur många gånger objektet förväntas förekomma i gruppen.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "Beskriver vilken typ av buffring som ska utföras.",
        "Documentation.LongDescription": "Beskriver vilken typ av buffring som ska utföras.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "Typen som representerar alla byte.",
        "Documentation.LongDescription": "Typen som representerar alla byte.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "Anger byteordningen.",
        "Documentation.LongDescription": "Anger byteordningen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "Typen som representerar alla tecken.",
        "Documentation.LongDescription": "Typen som representerar alla tecken.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "Anger typen av komprimering.",
        "Documentation.LongDescription": "Anger typen av komprimering.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Anger betydelsen av citattecken i Csv-dokument.",
        "Documentation.LongDescription": "Anger betydelsen av citattecken i Csv-dokument.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "Den typ som representerar valutavärde.",
        "Documentation.LongDescription": "Den typ som representerar valutavärde.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "Typen som representerar alla datumvärden.",
        "Documentation.LongDescription": "Typen som representerar alla datumvärden.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "Typen som representerar alla datum- och tidsvärden utan en associerad tidszon.",
        "Documentation.LongDescription": "Typen som representerar alla datum- och tidsvärden utan en associerad tidszon.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "Typen som representerar alla datum- och tidsvärden i relation till en tidszon.",
        "Documentation.LongDescription": "Typen som representerar alla datum- och tidsvärden i relation till en tidszon.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "Anger veckodag.",
        "Documentation.LongDescription": "Anger veckodag.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "Den typ som representerar fixdecimaltal.",
        "Documentation.LongDescription": "Den typ som representerar fixdecimaltal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "Den typ som representerar flyttal med dubbel precision.",
        "Documentation.LongDescription": "Den typ som representerar flyttal med dubbel precision.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "Typen som representerar alla varaktighetsvärden",
        "Documentation.LongDescription": "Typen som representerar alla varaktighetsvärden",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "Anger den förväntade åtgärden för extra värden i en rad som innehåller fler kolumner än förväntat.",
        "Documentation.LongDescription": "Anger den förväntade åtgärden för extra värden i en rad som innehåller fler kolumner än förväntat.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "Typen som representerar alla funktioner.",
        "Documentation.LongDescription": "Typen som representerar alla funktioner.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "Anger typen av gruppering.",
        "Documentation.LongDescription": "Flera lokala grupper kan skapas med samma nyckelvärde men bara en enda global grupp skapas för ett visst nyckelvärde.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "Den typ som representerar ett GUID-värde.",
        "Documentation.LongDescription": "Den typ som representerar ett GUID-värde.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "En identitet representerar en användare, grupp, enhet eller annan identifierbar sak.",
        "Documentation.LongDescription": "En identitet representerar en användare, grupp, enhet eller annan identifierbar sak.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "Definierar en omfattning i vilken identiteter skapas och jämförs.",
        "Documentation.LongDescription": "Definierar en omfattning i vilken identiteter skapas och jämförs.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "Den typ som representerar ett signerat 16-bitars heltal.",
        "Documentation.LongDescription": "Den typ som representerar ett signerat 16-bitars heltal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "Den typ som representerar ett signerat 32-bitars heltal.",
        "Documentation.LongDescription": "Den typ som representerar ett signerat 32-bitars heltal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "Den typ som representerar ett signerat 64-bitars heltal.",
        "Documentation.LongDescription": "Den typ som representerar ett signerat 64-bitars heltal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "Den typ som representerar ett signerat 8-bitars heltal.",
        "Documentation.LongDescription": "Den typ som representerar ett signerat 8-bitars heltal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "Anger den JOIN-algoritm som ska användas i JOIN-åtgärden.",
        "Documentation.LongDescription": "Anger den JOIN-algoritm som ska användas i JOIN-åtgärden.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "Anger typen av JOIN-åtgärd.",
        "Documentation.LongDescription": "Anger typen av JOIN-åtgärd.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "Anger den vänstar eller den högra tabellen i en koppling.",
        "Documentation.LongDescription": "Anger den vänstar eller den högra tabellen i en koppling.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "Beskriver den typ av begränsningssats som stöds av den SQL-dialekt som används av den här datakällan.",
        "Documentation.LongDescription": "Beskriver den typ av begränsningssats som stöds av den SQL-dialekt som används av den här datakällan.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "Typen som representerar alla listor.",
        "Documentation.LongDescription": "Typen som representerar alla listor.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "Typen som representerar alla logiska värden.",
        "Documentation.LongDescription": "Typen som representerar alla logiska värden.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "Anger den förväntade åtgärden för saknade värden i en rad som innehåller färre kolumner än förväntat.",
        "Documentation.LongDescription": "Anger den förväntade åtgärden för saknade värden i en rad som innehåller färre kolumner än förväntat.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "Typen som representerar null.",
        "Documentation.LongDescription": "Typen som representerar null.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "Typen som representerar alla tal.",
        "Documentation.LongDescription": "Typen som representerar alla tal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "Anger de varianter av värden som en OData-tjänst kan utelämna.",
        "Documentation.LongDescription": "Anger de varianter av värden som en OData-tjänst kan utelämna.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "Anger förekomsten av ett element i en sekvens.",
        "Documentation.LongDescription": "Anger förekomsten av ett element i en sekvens.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "Anger sorteringsriktningen.",
        "Documentation.LongDescription": "Anger sorteringsriktningen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "Den typ som motsvarar ett textlösenord.",
        "Documentation.LongDescription": "Den typ som motsvarar ett textlösenord.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "Typen som representerar prosentvärde.",
        "Documentation.LongDescription": "Typen som representerar prosentvärde.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "Anger typ av percentilläge.",
        "Documentation.LongDescription": "Anger typ av percentilläge.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "Anger jämförelseprecisionen.",
        "Documentation.LongDescription": "Anger jämförelseprecisionen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "Anger citatstil.",
        "Documentation.LongDescription": "Anger citatstil.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "Anger typ av rangordning.",
        "Documentation.LongDescription": "Anger typ av rangordning.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "Typen som representerar alla poster.",
        "Documentation.LongDescription": "Typen som representerar alla poster.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "Indikerar om indexering ska göras från starten eller slutet av indata.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "Anger avrundningsriktning när det väger jämnt mellan de möjliga talen att avrunda till.",
        "Documentation.LongDescription": "Anger avrundningsriktning när det väger jämnt mellan de möjliga talen att avrunda till.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "Giltiga alternativ för SAP Business Warehouse-körningsläge.",
        "Documentation.LongDescription": "Giltiga alternativ för SAP Business Warehouse-körningsläge.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "Giltiga alternativ för SAP Hana-distributionsalternativ.",
        "Documentation.LongDescription": "Giltiga alternativ för SAP Hana-distributionsalternativ.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "En intervalloperator för SAP HANA-indataparametrar.",
        "Documentation.LongDescription": "En intervalloperator för SAP HANA-indataparametrar.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "Den typ som representerar flyttal med enkel precision.",
        "Documentation.LongDescription": "Den typ som representerar flyttal med enkel precision.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "Det protokoll som ska användas vid anslutning en Spark-instans.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "Typen som representerar alla tabeller.",
        "Documentation.LongDescription": "Typen som representerar alla tabeller.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "Typen som representerar alla textvärden.",
        "Documentation.LongDescription": "Typen som representerar alla textvärden.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "Anger textkodningstyp.",
        "Documentation.LongDescription": "Anger textkodningstyp.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "Typen som representerar alla tidsvärden.",
        "Documentation.LongDescription": "Typen som representerar alla tidsvärden.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "Anger spårningsnivån.",
        "Documentation.LongDescription": "Anger spårningsnivån.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "Typen som representerar alla typer.",
        "Documentation.LongDescription": "Typen som representerar alla typer.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "Typen som motsvarar en text-URI.",
        "Documentation.LongDescription": "Typen som motsvarar en text-URI.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "Anger en HTTP-metod.",
        "Documentation.LongDescription": "Anger en HTTP-metod.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
