{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "Returnerer en strukturel repræsentation af en Access-database.",
        "Documentation.LongDescription": "Returnerer en strukturel repræsentation af en Access-database, <code>database</code>. Du kan angive en valgfri postparameter, <code>options</code>, der styrer følgende indstillinger:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er false).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n</ul>\r\n\r\n    Postparameteren er angivet som f.eks. [option1 = value1, option2 = value2...].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "Returnerer Analysis Services-databaser på en bestemt vært.",
        "Documentation.LongDescription": "Returnerer databaser på en Analysis Services-forekomst, <code>server</code>. Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : En logisk v&#230;rdi, der angiver, om de typer, der er angivet i den flerdimensionelle model eller tabelmodellen, skal bruges til typerne af tilf&#248;jede m&#229;lingskolonner. N&#229;r typen &quot;number&quot; er angivet til false, bruges den til alle m&#229;lingskolonner. Standardv&#230;rdien for denne indstilling er false.</li>\r\n<li><code>Culture</code> : Et kulturnavn, der angiver datakulturen. Dette svarer til egenskaben for forbindelsesstrengen &#39;landestandard-id&#39;.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>SubQueries</code> : Et tal (0, 1 eller 2), der angiver v&#230;rdien for egenskaben &quot;SubQueries&quot; i forbindelsesstrengen. Dette styrer funktionsm&#229;den for beregnede medlemmer i under-select-dels&#230;tninger eller delkuber. (Standardv&#230;rdien er 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "AtScale-kuber",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "Import/DirectQuery-kubedata fra en AtScale.",
        "Documentation.LongDescription": "\r\nReturnerer kubedata fra AtScale på serveren <code>server</code>. Der kan angives en valgfri parameterpost, <code>indstillinger</code>, til at styre følgende indstillinger:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: en logisk værdi, der angiver, om typerne angivet i MDX- eller tabelmodellen skal bruges til typerne i de tilføjede målingskolonner. Når den er indstillet til false, bruges typen \"tal\" for alle målingenskolonner. Standardværdien for denne indstilling er false.</li>\r\n        <li><code>CommandTimeout</code>: en varighed (i sekunder), som styrer, hvor længe forespørgslen på serversiden kan køre, før den annulleres. Standardværdien afhænger af driveren. </li>\r\n        <li><code>ConnectionTimeout</code>: en varighed (i sekunder), som styrer, hvor længe der går, før et forsøg på at oprette en forbindelse til serveren afbrydes. Standardværdien afhænger af driveren. </li>\r\n\r\n</ul>\r\nPostparameteret angives som [option1 = value1, option2 = value2...].",
        "Documentation.Examples": {
          "Description": "Vis kubedata i en AtScale-kube.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Importerer data fra Azure Data Explorer (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Indhold",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Importerer data fra din forekomst af Azure Data Explorer (Kusto)",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med Storm-hændelsesoplysninger",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "En tabel med Storm-hændelser fra databasen \"Prøver\" i klyngen \"Hjælp\""
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "Indtast din Azure DevOps Analytics-tjenestewebadresse.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS. AccountContents",
        "Documentation.Name": "VSTS. AccountContents",
        "Documentation.LongDescription": "Returnerer det indhold, der downloades fra Azure DevOps Analytics-tjenestenwebadresse, som en binær værdi. Denne funktion bruger forskellige legitimationsoplysninger til forskellige organisationer."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Services Feed",
        "Documentation.DisplayName": "Azure DevOps Services Feed",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Returnerer en tabel med OData-feeds fra Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "Angiv URL-adressen til slutpunktet for den Azure Enterprise REST-API, der er knyttet til tilmeldingen",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Returnerer en liste over tilgængelige rapporter over måneder fra Azure Enterprise-API'en",
        "Documentation.Name": "Importér data fra Azure Enterprise",
        "Documentation.Examples": [
          {
            "Description": "Anvend funktionen AzureEnterprise.Tables, og naviger til en bestemt værdi for at hente resultaterne.",
            "Code": "lad\r\n    Kilde = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Indhold = Kilde{[Key=\"Contents\"]}[Data]\r\nin\r\n    Indhold",
            "Result": "Tabel"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "Se https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli for eksempler på startforespørgsler.",
        "Documentation.Examples": [
          {
            "Description": "Returner en tabel med forespørgselsresultater fra brugerforespørgslen \"ressourcer\"",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Vis tabellerne på en liste i en Azure Spark-instans.",
        "Documentation.LongDescription": "Vis tabellerne på en liste i en Azure Spark-instans.",
        "Documentation.Examples": [
          {
            "Description": "Vis tabellerne på en liste i en Azure Spark-instans.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "Returnerer en navigationstabel, der indeholder de objektbeholdere, som blev fundet i den angivne konto, fra en samling legitimationsoplysninger i Azure storage.",
        "Documentation.LongDescription": "Returnerer en navigationstabel, der indeholder en række for hver beholder, som blev fundet i konto-webadressen <code>account</code>, fra en Azure-opbevaringsboks. De enkelte rækker indeholder et link til beholderblobbene. <code>options</code> kan specificeres for at kontrollere følgende muligheder:\r\n    <ul>\r\n<li><code>BlockSize</code> : Det antal byte der skal l&#230;ses, f&#248;r der ventes p&#229; dataforbruger. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>RequestSize</code> : Det antal byte der skal fors&#248;ges indl&#230;st i en enkelt HTTP-anmodning til serveren. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Indstillingen ConcurrentRequests underst&#248;tter hurtigere download af data ved at angive det antal anmodninger, der skal foretages parallelt ved hukommelsesudnyttelse. Den kr&#230;vede hukommelse er (ConcurrentRequest * RequestSize). Standardv&#230;rdien er 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Returnerer en navigationstabel, der indeholder de dokumenter, som blev fundet i den angivne objektbeholder og dens undermapper fra Azure Data Lake Storage.",
        "Documentation.LongDescription": "Returnerer en navigationstabel, der indeholder de dokumenter, som blev fundet i den angivne beholder og dens undermapper på kontoens URL-adresse <code>endpoint</code>, fra et Azure-datapuljesystem. <code>options</code> kan angives for at styre følgende muligheder:\r\nn    <ul>\r\n<li><code>BlockSize</code> : Det antal byte der skal l&#230;ses, f&#248;r der ventes p&#229; dataforbruger. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>RequestSize</code> : Det antal byte der skal fors&#248;ges indl&#230;st i en enkelt HTTP-anmodning til serveren. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Indstillingen ConcurrentRequests underst&#248;tter hurtigere download af data ved at angive det antal anmodninger, der skal foretages parallelt ved hukommelsesudnyttelse. Den kr&#230;vede hukommelse er (ConcurrentRequest * RequestSize). Standardv&#230;rdien er 16.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (sand/falsk) der bestemmer om filerne returneres i en tr&#230;-lignende mappevisning eller som en simpel liste. Standardv&#230;rdien er Falsk.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "Returnerer en navigationstabel, der indeholder de tabeller, der blev fundet i den angivne konto, fra en samling af legitimationsoplysninger i Azure storage.",
        "Documentation.LongDescription": "Returnerer en navigationstabel, der indeholder en række for hver tabel, der blev fundet på kontoens URL-adresse, <code>account</code>, fra en Azure-lagerboks. Hver række indeholder et link til Azure-tabellen. Der kan angives en valgfri postparameter, <code>options</code>, for at specificere yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>Timeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien er kildespecifik.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Indsigt i Azure-tidsserier"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight på AKS Trino"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "Denne funktion er ikke tilgængelig, fordi den kræver .NET 4.5.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (ældre)",
        "Documentation.Caption": "Common Data Service (ældre)",
        "Documentation.LongDescription": "Opret forbindelse til din Common Data Service-forekomst (Dynamics 365 og PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "Returnerer indholdet af CSV-dokumentet som en tabel.",
        "Documentation.LongDescription": "Returnerer indholdet af csv-dokumentet som en tabel.\r\n    <ul>\r\n     <li>\r\n        <code>columns</code> kan være null, antallet af kolonner, en liste over kolonnenavne, en tabeltype eller en post med indstillinger.\r\n        </li>\r\n        <li>\r\n        <code>delimiter</code> kan være et enkelt tegn eller en liste over tegn eller værdien <code>\"\"</code>, som indikerer, at rækker skal deles op af gentagne mellemrum. Standard: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        Se <code>ExtraValues.Type</code> for de understøttede værdier for <code>extraValues</code>.\r\n        </li>\r\n        <li>\r\n        <code>encoding</code> angiver tekstens kodningstype.\r\n        </li>\r\n    </ul>\r\n\r\n        Hvis en post er angivet for <code>columns</code> (og <code>delimiter</code>, <code>extraValues</code> og <code>encoding</code> er null), kan følgende felter for posten angives:\r\n    <ul>\r\n     <li>\r\n        <code>Afgrænser</code>: Kolonneafgrænser. Standard: <code>\",\"</code>.\r\n        </li>\r\n        <li>\r\n        <code>Kolonner</code>: Kan være null, antallet af kolonner, en liste over kolonnenavne eller en tabeltype. Hvis antallet af kolonner er lavere end tallet i inputtet, ignoreres de ekstra kolonner. Hvis antallet af kolonner er højere end antallet i inputtet, er de ekstra kolonner null. Hvis intet er angivet, afgøres antallet af kolonner af inputtet.\r\n        </li>\r\n    <li>\r\n        <code>Kodning</code>: Filens tekstkodning. Standard: 65001 (UTF-8).\r\n        </li>\r\n     <li>\r\n        <code>CsvStyle</code>: Angiver, hvordan citater behandles.\r\n        <ul>\r\n        <li>\r\n         <code>CsvStyle.QuoteAfterDelimiter</code> (standard): Citater i et felt er kun væsentlige umiddelbart efter afgrænseren.\r\n          </li>\r\n          <li>\r\n          <code>CsvStyle.QuoteAlways</code>: Citater i et felt er altid væsentlige, uanset hvor de vises.\r\n          </li>\r\n          </ul>\r\n          </li>\r\n          <li>\r\n          <code>QuoteStyle</code>: Angiver, hvordan citerede linjeskift håndteres.\r\n          <ul>\r\n          <li>\r\n           <code>QuoteStyle.None</code> (standard): Alle linjeskift behandles som slutningen af den aktuelle række, selv når de forekommer inden for en citeret værdi.\r\n          </li>\r\n          <li>\r\n           <code>QuoteStyle.Csv</code>: Citerede linjeskift behandles som del af dataene, ikke som afslutningen på den aktuelle række.\r\n          </li>\r\n          </ul>\r\n          </li>\r\n          </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Behandl CSV-tekst med kolonneoverskrifter",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "Returnerer en tabel, der indeholder sættet af tilgængelige dimensioner.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder sættet af tilgængelige dimensioner i <code>cube</code>. De enkelte dimensioner er en tabel, der indeholder et sæt dimensionsattributter, og de enkelte dimensionsattributter vises som en kolonne i dimensionstabellen. Dimensioner kan udvides i kuben ved hjælp af Cube.AddAndExpandDimensionColumn. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "Returnerer et indlejret træ med tabeller, der repræsenterer det viste mappehierarki for objekterne (f.eks. dimensioner og målinger).",
        "Documentation.LongDescription": "Returnerer et indlejret træ med tabeller, der repræsenterer det viste mappehierarki for objekterne (f.eks. dimensioner og målinger), som er tilgængelige til brug i <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "Returnerer en tabel, der indeholder sættet med tilgængelige målegenskaber, som udvides i kuben.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder sættet med tilgængelige målingsegenskaber, som udvides i kuben.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "Returnerer en tabel, der indeholder sættet af tilgængelige målinger.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder sættet af tilgængelige målinger i <code>cube</code>. \r\n    De enkelte målinger vises som en funktion. Målinger kan anvendes på kuben ved hjælp af Cube.AddMeasureColumn.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "Returnerer en tabel, der indeholder det sæt parametre, der kan anvendes til kuben.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder det sæt parametre, der kan anvendes til <code>cube</code>. Hver parameter er en funktion, der kan kaldes for at anvende <code>cube</code> med parameteren og dens argumenter.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "Returnerer en tabel, der indeholder sættet med tilgængelige dimensionsegenskaber, som udvides i kuben.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder sættet med tilgængelige dimensionsegenskaber, som udvides i kuben.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Angiv URL-adressen til din Azure Data Lake Storage Gen1-konto.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver mappe og fil, der blev fundet på <code>URL-adressen</code> fra Azure Data Lake Storage Gen1. Hver række indeholder egenskaberne for mappen eller filen og et link til indholdet."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Angiv URL-adressen til din Azure Data Lake Storage-konto.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver fil, som blev fundet på <code>URL-adressen</code> fra Azure Data Lake Storage Gen1. Hver række indeholder egenskaberne for filen og et link til indholdet."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL-API)",
        "Documentation.Description": "Angiv URL-adressen for en Azure Cosmos DB-konto.",
        "Documentation.LongDescription": "Returnerer en tabel med Azure Cosmos DB-databaser på <code>url</code>. Hvis <code>database</code> er angivet, returneres der en tabel med samlinger i stedet. Hvis feltet <code>Query</code> angives i posten <code>options</code>, returneres resultaterne af den forespørgsel, der køres på den angivne database og/eller samling."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV370",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV370(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "Indtast URL-adressen til dit Dynamics 365 Business Central (lokal) OData-tjenesteslutpunkt.",
        "Documentation.DisplayName": "Dynamics 365 Business Central (lokal)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (lokal)",
        "Documentation.LongDescription": "Returnerer en tabel med relevante data fra Dynamics 365 Business Central."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "Indtast URL-adressen til dit Dynamics NAV OData-tjenesteslutpunkt.",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "Returnerer en tabel med relevante data til Dynamics NAV. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Returnerer kuberne i en Essbase-forekomst grupperet efter Essbase-server.",
        "Documentation.LongDescription": "Returnerer en tabel med kuber grupperet efter Essbase-server fra en Essbase-forekomst ved APS-server <code>url</code>. Et valgfrit optagelsesparameter, <code>options</code>, kan angives til at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Returnerer indholdet af Excel-projektmappen.",
        "Documentation.LongDescription": "Returnerer indholdet af Excel-projektmappen.\r\n    <ul>\r\n     <li> <code>useHeaders</code> kan være null, og en logisk værdi (true/false) angiver, om den første række i hver returneret tabel skal behandles som en overskrift eller en indstillingspost. (Se nedenfor for at få flere oplysninger om posten indstillinger). Standard: falsk.</li>\r\n     <li> <code>delayTypes</code> kan være null eller en logisk værdi (true/false), der angiver, om kolonnerne i de enkelte returnerede tabeller skal forblive uspecificeret. Standard: false.</li>\r\n    </ul>\r\n\r\n    Hvis der er angivet en post for <code>useHeaders</code> (og <code>delayTypes</code> er null), kan følgende postfelter angives:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: kan være null eller en logisk værdi (true/false), der angiver, om den første række i hver returneret tabel skal behandles som en overskrift. Standard: false.</li>\r\n     <li> <code>DelayTypes</code>: kan være null eller en logisk værdi (true/false), der angiver, om kolonnerne i de enkelte returnerede tabeller skal forblive uden type. Standard: false.</li>\r\n     <li> <code>InferSheetDimensions</code>: kan være null eller en logisk værdi (true/false), der angiver, om det område i et regneark, der indeholder data, skal udledes ved at læse selve regnearket i stedet for ved at læse metadata om dimensionerne fra filen. Dette kan være nyttigt i tilfælde, hvor metadata om dimensionerne er forkerte. Bemærk, at denne indstilling kun understøttes for åbne XML Excel-filer, ikke for ældre Excel-filer. Standard: false.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returner indholdet af Ark1 fra en Excel-projektmappe.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "Returnerer en tabel, der indeholder egenskaberne og indholdet i de filer og mapper, der blev fundet i den angivne mappe.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver mappe og fil, der blev fundet i mappen <code>path</code>. De enkelte rækker indeholder egenskaber for mappen eller filen og et link til indholdet. Parameteren <code>options</code> er i øjeblikket kun beregnet til intern brug.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "Returnerer en tabel, der indeholder egenskaberne for og indholdet i de filer, der blev fundet i den angivne mappe og de angivne undermapper.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver fil, der findes i mappen <code>path</code> og alle dens undermapper. De enkelte rækker indeholder egenskaber for filen og et link til indholdet. Parameteren <code>options</code> er i øjeblikket kun beregnet til intern brug.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Importér data fra en Google BigQuery-database ved hjælp af Azure AD",
        "Documentation.LongDescription": "\r\n      Returnerer en tabel med en oversigt over de tilgængelige projekter i Google BigQuery ved hjælp af Azure AD til <code>Fakturering af projekt-id</code> . Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende indstillinger: \r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: En varighed, der styrer, hvor længe der skal ventes, før et forsøg på at oprette forbindelse til serveren afbrydes. Standardværdien er timeoutværdi for ODBC-forbindelse.</li>\r\n        <li><code>CommandTimeout</code>: En varighed, der styrer, hvor længe forespørgslen på serversiden må køre, før den annulleres.</li>\r\n        <li><code>UseStorageApi</code>:  Angiver, om BigQuery Storage API skal bruges til store resultatsæt. Standardværdien er sand, hvis du vil bruge Storage API. Angiv til falsk, hvis du vil ikke bruge Storage API</li>\r\n        <li><code>AudienceUri</code>: Dette er målgruppe-URI'en, som ODBC-driveren kan bruge til sine anmodninger om tokenudveksling. Dette felt skal være en fuldt kvalificeret URI (dvs. //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/aad-provider), hvor pool_id er et globalt entydigt navn til at identificere arbejdsstyrkepuljen.</li>\r\n      </ul>\r\n    Postparameteren er angivet som [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Vis de tilgængelige projekter i Google BigQuery ved hjælp af Azure AD",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Google Ark",
        "Documentation.Caption": "Google Ark",
        "Documentation.Description": "Importerer data fra GoogleSheets",
        "Documentation.LongDescription": "Importerer data fra GoogleSheets"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "Returnerer en navigationstabel, der indeholder de objektbeholdere, som blev fundet i den angivne konto, fra en samling legitimationsoplysninger i Azure storage.",
        "Documentation.LongDescription": "Returnerer en navigationstabel, der indeholder en række for hver objektbeholder, som blev fundet i konto-URL-adressen <code>account</code>, fra en samling legitimationsoplysninger i Azure storage. De enkelte rækker indeholder et link til beholderblobbene.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "Returnerer en navigationstabel, der indeholder de objektbeholdere, som blev fundet i den angivne konto, fra en samling legitimationsoplysninger i Azure storage.",
        "Documentation.LongDescription": "Returnerer en navigationstabel, der indeholder en række for hver objektbeholder, som blev fundet i konto-URL-adressen <code>account</code>, fra en samling legitimationsoplysninger i Azure storage. De enkelte rækker indeholder et link til beholderblobbene.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "Returnerer en tabel, der indeholder egenskaberne for og indholdet i de filer og mapper, der blev fundet i den angivne mappe fra et Hadoop-filsystem.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver mappe og fil, der blev fundet i mappe-URL-adressen <code>url</code> fra et Hadoop-filsystem. De enkelte rækker indeholder egenskaber for mappen eller filen og et link til indholdet.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "Returnerer en tabel, der indeholder egenskaberne for og indholdet i de filer, der blev fundet i den angivne mappe og de angivne undermapper fra et Hadoop-filsystem.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver fil, der blev fundet i mappe-URL-adressen <code>url</code> og undermapperne fra et Hadoop-filsystem. De enkelte rækker indeholder egenskaber for filen og et link til indholdet.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Importér data fra en Impala-klynge",
        "Documentation.LongDescription": "Importér data fra en Impala-klynge <code>server</code>. Hvis der ikke er angivet en port, anvendes standardporten 21050.",
        "Documentation.Examples": [
          {
            "Description": "Vis en oversigt over tabellerne i en Impala-klynge.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Importerer data fra Azure Data Explorer (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Importerer data fra din forekomst af Azure Data Explorer (Kusto)",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med Storm-hændelsesoplysninger",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "En tabel med Storm-hændelser fra databasen \"Prøver\" i klyngen \"Hjælp\""
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "LinkedIn Sales Navigator",
        "Documentation.LongDescription": "LinkedIn Sales Navigator",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "Returnerer en tabel med data fra et MailChimp-slutpunkt.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "Foretager et kald til MailChimp-API'en og returnerer det resulterende datasæt som en tabel. Alle resultaterne gennemgås automatisk. Du kan evt. anvende en entityName-parameter til API-slutpunkter, når rodslutpunktet og det primære entityName i JSON-svaret ikke stemmer overens.",
        "Documentation.Examples": [
          {
            "Description": "Udtrækker en datatabel fra slutpunktet for MailChimp-API'ens liste.",
            "Code": "MailChimp.Collection(\"lister\")",
            "Result": "En tabel med listedata."
          },
          {
            "Description": "Udtrækker en datatabel fra slutpunktet for MailChimp-API'ens kampagnemapper.",
            "Code": "MailChimp.Collection(\"kampagnemapper\", \"mapper\")",
            "Result": "En tabel med data fra kampagnemapper."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "Returnerer ubehandlede svarresultater fra slutpunktet for en MailChimp-API.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "Foretager et kald til MailChimp-API'en og returnerer et ubehandlet svar.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer rå data fra slutpunktet for MailChimp-API'ens rapporter/klikdetaljer for en bestemt kampagne.",
            "Code": "MailChimp.Instance(\"rapporter/{campaign_id}/klikdetaljer\")",
            "Result": "Rå data med klikdetaljer fra den angivne kampagne."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy til Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "Levér avancerede forespørgselsfunktioner.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "Levér avancerede forespørgselsfunktioner.",
        "Documentation.Examples": [
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent oversigtsdata fra 1-5-2017 til 15-6-2017",
            "Code": "\r\n      Lad    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [numberOfMonth = 1],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultatet\r\n    ",
            "Result": "Funktionen returnerer oversigtsdata fra 1-5-2017 til 15-6-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent oversigtsdata for april 2017.",
            "Code": "\r\n      Lad    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\"],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters) i resultatet   \r\n      i     \r\n          resultatet\r\n    ",
            "Result": "Funktionen returnerer data mellem 1-4-2017 og 30-4-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent oversigtsdata fra april 2017 til nu.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Sammendrag\"],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultatet\r\n    ",
            "Result": "Funktionen returnerer data mellem 1-4-2017 og 15-6-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent oversigtsdata fra december sidste år til februar dette år",
            "Code": "\r\n      Lad    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Sammendrag\"],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters)\r\n      i     \r\n          resultatet\r\n    ",
            "Result": "Funktionen returnerer data mellem 1-12-2016 og 28-2-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent marketplace-gebyrer for de seneste 18 måneder",
            "Code": "\r\n      Lad    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\"],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultatet\r\n    ",
            "Result": "Funktionen returnerer data mellem 1-12-2015 og 15-6-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent detailgebyrer for juni 2017 og maj 2017",
            "Code": "\r\n      Lad    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\"],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters)   \r\n      i     \r\n          resultatet\r\n    ",
            "Result": "Funktionen returnerer data mellem 1-5-2017 og 15-6-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 3-7-2017, hentes detailgebyrer for juli 2016",
            "Code": "\r\n      Lad  \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\"],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters)    \r\n      i     \r\n          resultatet\r\n    ",
            "Result": "Funktionen returnerer data mellem 1-7-2016 og 31-7-2016"
          },
          {
            "Description": "Idet det antages, at dags dato er 13-7-2017, hent saldooversigter for de seneste 10 måneder plus 13 dage i denne måned",
            "Code": "\r\n      lad  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [dataType = \"Summaries\", numberOfMonth = 10],\r\n          result = MicrosoftAzureConsumptionInsights.Contents (enrollmentNumber, optionalParameters)    \r\n      i     \r\n          resultat\r\n    ",
            "Result": "Funktionen returnerer data mellem 1-9-2016 og 13-7-2017"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Microsoft Azure Consumption Insights",
        "Documentation.Description": "Microsoft Azure Consumption Insights",
        "Documentation.DisplayName": "Microsoft Azure Consumption Insights",
        "Documentation.LongDescription": "Microsoft Azure Consumption Insights",
        "Documentation.Name": "Microsoft Azure Consumption Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "Returnerer en tabel med SQL-tabeller og -visninger fra ODBC-data kilden. ",
        "Documentation.LongDescription": "Returnerer en tabel med SQL-tabeller og -visninger fra den ODBC-datakilde, der er angivet af forbindelsesstrengen <code>connectionString</code>. <code>connectionString</code> kan være tekst eller en post med egenskabsværdipar. Egenskabsværdier kan enten være tekst eller tal. Der kan angives et valgfrit postparameter, <code>options</code>, til angivelse af yderligere egenskaber. Denne post kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien er 15 sekunder.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : En logisk v&#230;rdi (true/false), der bestemmer, om der skal fremstilles SQL Server-kompatible forbindelsesstrengindstillinger til Windows-godkendelse. Standardv&#230;rdien er true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returner SQL-tabellerne og -visningerne fra den angivne forbindelsesstreng.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "Returnerer en tabel med SQL-tabeller og visninger fra OLE DB-datakilden.",
        "Documentation.LongDescription": "Returnerer en tabel med SQL-tabeller og visninger fra den OLE DB-datakilde, der er angivet i forbindelsesstrengen <code>connectionString</code>. <code>connectionString</code> kan være tekst eller en post med egenskabsværdipar. Egenskabsværdier kan enten være en tekst eller et tal. Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er true).</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : En logisk v&#230;rdi (true/false), der bestemmer, om der skal fremstilles SQL Server-kompatible forbindelsesstrengindstillinger til Windows-godkendelse. Standardv&#230;rdien er true.</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Returnerer en tabel over SQL-tabeller og visninger fra Oracle Database.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller og visninger fra Oracle Database på serveren <code>server</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon. Den valgfrie postparameter, <code>options</code>, kan angives for at styre følgende egenskaber:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "Returnerer de tabeller, der findes i en PDF-fil.",
        "Documentation.LongDescription": "Returnerer tabeller fundet i <code>pdf</code>. Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>Implementation</code> : Den version af algoritmen, der skal bruges til at identificere tabeller. Gamle versioner er kun tilg&#230;ngelige til bagudkompatibilitet, s&#229; gamle foresp&#248;rgsler forhindres i at blive brudt af algoritmeopdateringer. Den nyeste version b&#248;r altid give de bedste resultater. Gyldige v&#230;rdier er &quot;1,3&quot;, &quot;1,2&quot;, &quot;1,1&quot; eller nul.</li>\r\n<li><code>StartPage</code> : Angiver den f&#248;rste side i udsnittet af sider, der skal unders&#248;ges. Som standard: 1.</li>\r\n<li><code>EndPage</code> : Angiver den sidste side i udsnittet af sider, der skal unders&#248;ges. Standard: den sidste side i dokumentet.</li>\r\n<li><code>MultiPageTables</code> : Kontrollerer, om ensartede tabeller p&#229; flere sider i tr&#230;k automatisk samles til en enkelt tabel. Som standard: true.</li>\r\n<li><code>EnforceBorderLines</code> : Angiver, om kantlinjer altid gennemtvinges som cellegr&#230;nser (hvis det er true) eller bare er &#233;n faktor blandt mange andre, som bestemmer cellegr&#230;nser (hvis det er false). Som standard: false.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Tilgår data",
        "Documentation.Examples": [
          {
            "Description": "Returnerer tabellerne i eksempel.pdf.",
            "Code": "Pdf.Tables(File.Contents (\"c:\\eksempel.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "Angiv URL-adressen på din Planview Projectplace-konto.",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "Returnerer en tabel med relevante Planview Projectplace-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "Þŷŧђõп şĉŗϊþŧ",
        "Documentation.Description": "∑×éćϋţę§ Þутћòи §сříφť άиð гёťϋŗŋş δãτą ƒřámęş",
        "Documentation.Examples": {
          "Description": "∑×éćϋţę§ Þутћòи §сříφť άиð гёťϋŗŋş δãτą ƒřámęş",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "Я şċгįφŧ",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "Returnerer en tabel, hvor de enkelte rækker er et feltnavn og en værdi for inputposten.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder kolonnerne <code>Name</code> og <code>Value</code> med en række for de enkelte felter i <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Returner tabellen fra posten.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "Returnerer pakkerne i en SAP HANA-database.",
        "Documentation.LongDescription": "Returnerer en tabel over multidimensionelle pakker fra SAP HANA-databasen <code>server</code>. Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>Distribution</code> : En SapHanaDistribution, der angiver v&#230;rdien for egenskaben &quot;Distribution&quot; i forbindelsesstrengen. S&#230;tningsrouting er en metode til at evaluere den korrekte servicenode i et distribueret system, inden s&#230;tningen udf&#248;res. Standardv&#230;rdien er SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : Angiver, hvilken implementering af SAP HANA-forbindelsen der bruges.</li>\r\n<li><code>EnableColumnBinding</code> : Binder variabler til kolonnerne i et SAP HANA-resultats&#230;t, n&#229;r der hentes data. Kan muligvis forbedre ydeevnen p&#229; grund af en lidt h&#248;jere udnyttelse af hukommelsen. Standardv&#230;rdien er falsk.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien er 15 sekunder.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "Returnerer en tabel, der indeholder indhold fra et SharePoint-websted.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver mappe og hvert dokument, der blev fundet på det angivne SharePoint-websted, <code>url</code>. Hver række indeholder egenskaber for mappen eller filen og et link til indholdet. <code>options</code> kan angives for at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Et tal (14 eller 15) eller teksten &quot;Auto&quot;, der angiver, hvilken SharePoint API-version der skal anvendes til dette websted. Hvis den ikke er angivet, anvendes API-version 14. N&#229;r Auto er angivet, registreres serverversionen automatisk, hvis det er muligt, ellers anvendes version 14 som standard. Ikke-engelske SharePoint-websteder kr&#230;ver mindst version 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "Returnerer en tabel, der indeholder dokumenter fra et SharePoint-websted.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hvert dokument, der blev fundet på det angivne SharePoint-websted, <code>url</code>, og undermapper. Hver række indeholder egenskaber for mappen eller filen og et link til indholdet. <code>options</code> kan angives for at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Et tal (14 eller 15) eller teksten &quot;Auto&quot;, der angiver, hvilken SharePoint API-version der skal anvendes til dette websted. Hvis den ikke er angivet, anvendes API-version 14. N&#229;r Auto er angivet, registreres serverversionen automatisk, hvis det er muligt, ellers anvendes version 14 som standard. Ikke-engelske SharePoint-websteder kr&#230;ver mindst version 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "Returnerer en tabel, der indeholder indhold fra en SharePoint-liste",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hvert listeelement, der blev fundet på den angivne SharePoint-liste, <code>url</code>. Hver række indeholder egenskaber for listen. <code>options</code> kan angives for at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Et tal (14 eller 15) eller teksten &quot;Auto&quot;, der angiver, hvilken SharePoint API-version der skal anvendes til dette websted. Hvis den ikke er angivet, anvendes API-version 14. N&#229;r Auto er angivet, registreres serverversionen automatisk, hvis det er muligt, ellers anvendes version 14 som standard. Ikke-engelske SharePoint-websteder kr&#230;ver mindst version 15.</li>\r\n<li><code>Implementation</code> : Valgfri. Angiver, hvilken version af SharePoint-connectoren der skal bruges. Accepterede v&#230;rdier er &quot;2.0&quot; eller null. Hvis v&#230;rdien er &quot;2.0&quot;, bruges 2.0-implementeringen af SharePoint-connectoren. Hvis v&#230;rdien er null, bruges den oprindelige implementering af SharePoint-connectoren.</li>\r\n<li><code>ViewMode</code> : Valgfri. Denne indstilling er kun gyldig for implementering 2.0. Accepterede v&#230;rdier er &quot;Alle&quot; og &quot;Standard&quot;. Hvis der ikke er angivet en v&#230;rdi, angives v&#230;rdien til &quot;Alle&quot;. N&#229;r &quot;Alle&quot; er angivet, indeholder visningen alle brugerdefinerede og systemdefinerede kolonner. N&#229;r &quot;Standard&quot; er angivet, svarer visningen til det, brugeren ser, n&#229;r vedkommende kigger p&#229; listen online i den visning, som brugeren har angivet som standard i sine indstillinger. Hvis brugeren redigerer standardvisningen for at tilf&#248;je eller fjerne enten brugerdefinerede eller systemdefinerede kolonner eller ved at oprette en ny visning og angive den som standard, overf&#248;res disse &#230;ndringer via connectoren.</li>\r\n<li><code>DisableAppendNoteColumns</code> : Forhindrer forbindelsen i at bruge et separat slutpunkt til notekolonner.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "Returnerer en tabel fra indholdet på en angivet URL-adresse, der er formateret i overensstemmelse med SODA 2.0-API'en.",
        "Documentation.LongDescription": "Returnerer en tabel fra indholdet på en angivet URL-adresse <code>url</code>, der er formateret i overensstemmelse med SODA 2.0-API'en. URL-adressen skal pege på en gyldig SODA-kompatibel kilde, der slutter med filtypenavnet .csv.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "Denne funktion kan bruges til at kalde et af de \"Lister\"-slutpunkter, der tilbydes af SparkPost API-v1. Når der foretages kald til API'EN SparkPost ved hjælp af denne funktion, skal du huske, at API'EN SparkPost har en bundet hastighedsgrænse. Hvis du kan se en 429 statuskode, der returneres fra serveren SparkPost, har du nået grænsen.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med en enkelt kolonne, der er udfyldt med data fra et af slutpunkterne for SparkPost API v1 \"Lister\" (se flere oplysninger i dokumentationen).",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "Hent de indbyggede tabeller, der eksponeres af SparkPost connector med data, der aggregeres over en brugerangivet antal dage. Ved opdatering af disse tabeller eller ved opkald til API'EN SparkPost ved hjælp af denne connector skal du være opmærksom på, at API'EN SparkPost har en bundet grænse for API-overførselshastigheden. Hvis du kan se en 429 statuskode, der returneres fra SparkPost-serveren, har du nået grænsen for overførselshastighed og skal vente et øjeblik, før du foretager flere opkald. Når du vælger en værdi for antallet af dage parameter, skal du være opmærksom på, at API'EN kun gemmer 6 måneders data."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "Returnerer en tabel med databaser på en SQL Server.",
        "Documentation.LongDescription": "Returnerer en tabel med databaser på den angivne SQL-server, <code>server</code>. Der kan angives en valgfri postparameter, <code>options</code>, for at kontrollere følgende indstillinger:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Et tal, der angiver v&#230;rdien for dels&#230;tningen i &quot;maxdop&quot;-foresp&#248;rgslen i den genererede SQL-foresp&#248;rgsel.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n<li><code>MultiSubnetFailover</code> : En logisk v&#230;rdi (true/false), der angiver v&#230;rdien af egenskaben &quot;MultiSubnetFailover&quot; i forbindelsesstrengen (standard er false).</li>\r\n<li><code>UnsafeTypeConversions</code> : En logisk v&#230;rdi (sand/falsk), som, hvis sand, fors&#248;ger at folde typekonverteringer, som kan mislykkes, og som medf&#248;rer, at hele foresp&#248;rgslen mislykkes. Anbefales ikke til generel brug.</li>\r\n<li><code>ContextInfo</code> : En bin&#230;r v&#230;rdi, der bruges til at angive CONTEXT_INFO, f&#248;r hver kommando k&#248;res.</li>\r\n<li><code>OmitSRID</code> : En logisk v&#230;rdi (sand/falsk), som, hvis sand, udelader SRID, n&#229;r der dannes Well-Known Text fra geometri- og geografityper.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : En logisk v&#230;rdi (sand/falsk), som, hvis sand, tillader foresp&#248;rgselsdelegering p&#229; tv&#230;rs af databaser p&#229; den samme server. Standardv&#230;rdien er falsk.</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...].\r\n    <br>\r\n    Indstilling af kørsel af en SQL-forespørgsel på serveren understøttes ikke. <code>Sql.Database</code> skal bruges i stedet til at køre en SQL-forespørgsel.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "Foretager et kald til Stripe API'en, med mulighed for at begrænse antallet af API-kald.",
        "Documentation.LongDescription": "Foretager et opkald til Stripe-API'en på https://api.stripe.com/v1/<code>metode</code>, hvor den valgfri post <code>forespørgsel</code> er godkendt som yderligere parametre og den valgfri <code>pageLimit</code> udgør grænsen for antallet af API-forespørgsler. De nyeste data returneres først. Hvis <code>pageLimit</code> ikke er angivet, returneres alle data. Stripe-version 2015-10-16 anvendes.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer alle gebyrdata",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "En tabel med alle gebyrdata for den aktuelle Stripe-konto"
          },
          {
            "Description": "Returnerer én side med gebyrdata",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "En tabel med de nyeste gebyrdata for den aktuelle Stripe-konto"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "Bufferlagrer en tabel i hukommelsen, så den ikke modtager eksterne ændringer under evaluering.",
        "Documentation.LongDescription": "Bufferlagrer en tabel i hukommelsen, så den isoleres fra eksterne ændringer under evaluering.\r\n    Bufferlagringen er flad. Det gennemtvinger evaluering af skalarcelleværdier, men bevarer ikke-skalarværdier (poster, lister, tabeller osv.), som de er.\r\n    <br>\r\n    <br>\r\n    Bemærk, at brug af denne funktion muligvis eller måske ikke får dine forespørgsler til at køre hurtigere. I nogle tilfælde kan det få dine forespørgsler til at køre langsommere på grund af den tilføjede \r\n    omkostninger ved at læse alle dataene og gemme dem i hukommelsen samt det faktum, at bufferlagring forhindrer downstreamfoldning. Hvis dataene ikke behøver at være\r\n   bufferlagrede, men du blot ønsker at forhindre downstream foldning, skal du i stedet bruge <code>Table.StopFolding</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Indlæs alle rækkerne i en SQL-tabel i hukommelsen, så downstreamhandlinger ikke længere kan forespørge SQL-serveren.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "Returnerer en tabel, der er resultatet af at flette en liste over tabeller.",
        "Documentation.LongDescription": "Returnerer en tabel, som er resultatet af an flettet liste med tabeller, <code>tables</code>. Den nye tabel har en rækkestruktur, der er defineret ved hjælp af <code>columns</code> eller af en foreningsmængde af inputtyperne, hvis <code>columns</code> ikke er angivet.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Flet de tre tabeller sammen.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Flet tre tabeller med forskellige strukturer.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Flet to tabeller og projektet til den angivne type.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "Sænk kolonneoverskrifterne til første række med værdier.",
        "Documentation.LongDescription": "Sænker kolonneoverskrifterne (dvs. kolonnenavne) til første række med værdier. Standardkolonnenavnene er \"Column1\", \"Column2\" osv.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Sænk første række med værdier i tabellen.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "Fjerner dublerede rækker fra tabellen.",
        "Documentation.LongDescription": "Fjerner dublerede rækker fra tabellen.\r\n    En valgfri parameter, <code>equationCriteria</code>, angiver, hvilke kolonner i tabellen der testes for duplikering. Hvis <code>equationCriteria</code>    ikke er angivet, testes alle kolonner.<br>\r\n    <br>\r\n    Da Power Query nogle gange aflaster visse handlinger til backend-datakilder (kaldet \"foldning\") og optimerer nogle gange også forespørgsler ved \r\n    at springe handlinger over, der ikke er strengt nødvendige,  generelt er der ingen garanti for, hvilken specifik dublet der bevares.\r\n    Du kan f.eks. ikke antage, at den første række med et entydigt sæt kolonneværdier bevares, og at rækker længere nede i tabellen fjernes.\r\n    Hvis du vil have, at fjernelsen af dubletter skal fungere forudsigeligt, skal du først bufferlagre tabellen ved hjælp af <code>Table.Buffer</code>.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Fjern de dublerede rækker fra tabellen.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "Fjern de dublerede rækker fra kolonnen [b] i tabellen <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code>.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "Opretter en tabel ud fra en liste med kolonner og angivne værdier.",
        "Documentation.LongDescription": "Opretter en tabel af typen <code>columns</code> ud fra en liste <code>lists</code>, der indeholder indlejrede lister med kolonnenavne og værdier.\r\n    Hvis nogen af kolonnerne har flere værdier end andre, udfyldes de manglende værdier med standardværdien 'null', hvis kolonnen må være null.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returner en tabel fra en liste over kundenavne i en liste. Hver værdi i kundelisteelementet bliver en rækkeværdi, og hver liste bliver en kolonne.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Opret en tabel ud fra en angivet liste over kolonner og en liste over kolonnenavne.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Opret en tabel med et andet antal kolonner pr. række. Den manglende rækkeværdi er null.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "Konverterer en liste til en tabel ved at anvende den angivne opdelingsfunktion på hvert element på listen.",
        "Documentation.LongDescription": "Konverterer en liste, <code>list</code>, til en tabel ved at anvende den valgfrie opdelingsfunktion, <code>splitter</code>, på hvert element på listen. Det antages som standard, at listen er en liste over tekstværdier, der opdeles med kommaer. Den valgfrie <code>columns</code> kan være antallet af kolonner, en liste over kolonner eller en tabeltype. De valgfrie <code>default</code> og <code>extraValues</code> kan også angives.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Opret en tabel ud fra en liste ved hjælp af standardopdelingsfunktionen.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "Opret en tabel ud fra en liste ved hjælp af en brugerdefineret opdelingsfunktion.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "Opret en tabel ud fra listen ved hjælp af opdelingsfunktionen Record.FieldValues.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "Konverterer en liste over poster til en tabel.",
        "Documentation.LongDescription": "Konverterer <code>records</code>, en liste over poster, til en tabel.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Opret en tabel ud fra poster ved at bruge navne på postfelter som kolonnenavne.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Opret en tabel ud fra poster med angivne kolonner, og vælg talkolonnerne.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "Opretter en tabel ud fra en liste over rækkeværdier og valgfri kolonner.",
        "Documentation.LongDescription": "Opretter en tabel ud fra listen <code>rows</code>, hvor de enkelte elementer på listen er en indre liste, der indeholder kolonneværdier for en enkelt række. Der kan angives en valgfri liste over kolonnenavne, en tabeltype eller et antal kolonner for <code>columns</code>.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med kolonnen [CustomerID] med værdierne {1, 2}, kolonnen [Name] med værdierne {\"Bob\", \"Jim\"} og kolonnen [Phone] med værdierne {\"123-4567\", \"987-6543\"}.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Returnerer en tabel med kolonnen [CustomerID] med værdierne {1, 2}, kolonnen [Name] med værdierne {\"Bob\", \"Jim\"} og kolonnen [Phone] med værdierne {\"123-4567\", \"987-6543\"}, hvor [CustomerID] er nummertype, og [Name] og [Phone] er teksttyper.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "Opretter en tabel med en kolonne ud fra den eller de angivne værdier.",
        "Documentation.LongDescription": "Opretter en tabel med en kolonne, der indeholder den angivne værdi eller liste over værdier, <code>value</code>. Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende indstillinger:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code>: det kolonnenavn, der bruges, når der oprettes en tabel ud fra en liste eller skalaværdi.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Opret en tabel ud fra værdien 1.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "Opret en tabel ud fra listen.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "Opret en tabel ud fra værdien 1 med et brugerdefineret kolonnenavn.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "Returnerer oplysninger om, hvordan en tabel er partitioneret.",
        "Documentation.LongDescription": "Returnerer oplysninger om, hvordan en tabel er partitioneret.  Der returneres en tabel, hvor de enkelte kolonner er en partitionskolonne i den oprindelige tabel, og hvor de enkelte rækker svarer til en partition i den oprindelige tabel.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "Returnerer en profil for en tabels kolonner.",
        "Documentation.LongDescription": "<p>Returnerer en profil for kolonnerne i <code>table</code>.</p>\r\n<p>Følgende oplysninger returneres for hver kolonne (når relevant):\r\n<ul>\r\n  <li>minimum</li>\r\n  <li>maksimum</li>\r\n  <li>gennemsnit</li>\r\n  <li>standardafvigelse</li>\r\n  <li>antal</li>\r\n  <li>null antal</li>\r\n  <li>distinkt antal</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "Hæver første række med værdier til de nye kolonneoverskrifter (f.eks. kolonnenavne).",
        "Documentation.LongDescription": "Hæver den første række af værdier til de nye kolonneoverskrifter (f.eks. kolonnenavne). Som standard hæves kun tekst- og talværdier til overskrifter. Gyldige indstillinger:\r\n    <div>\r\n      <code>PromoteAllScalars</code>: Hvis de er angivet til <code>sand</code>, hæves alle skalarværdier i første række til overskrifter ved hjælp af <code>Kultur</code>, og hvis den er angivet (ellers benyttes aktuelle landestandard for dokument).\r\n    For værdier, der ikke kan konverteres til tekst, anvendes et standardkolonnenavn.\r\n    </div>\r\n    <div>\r\n    <code>Kultur</code>: Et kulturnavn, der angiver kulturen for dataene.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Hæv første række med værdier i tabellen.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "Hæv alle skalarer i tabellens første række til overskrifter.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "Returnerer en tabel, hvor det første antal rækker springes over.",
        "Documentation.LongDescription": "Returnerer en tabel, der ikke indeholder det første angivne antal rækker, <code>countOrCondition</code>, i tabellen <code>table</code>.\r\n    Det antal rækker, der fjernes, afhænger af den valgfrie parameter <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Hvis <code>countOrCondition</code> udelades, er det kun første række, der fjernes. </li>\r\n    <li> Hvis <code>countOrCondition</code> er et tal, fjernes der så mange rækker (med start fra toppen). </li>\r\n    <li> Hvis <code>countOrCondition</code> er en betingelse, fjernes de rækker, der overholder betingelsen, indtil en række ikke overholder betingelsen.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Fjern den første række i tabellen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Fjern de første to rækker i tabellen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Fjern de første to rækker i tabellen, hvor [CustomerID] <=2.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "Returnerer en tabel, hvor de sidste N rækker er fjernet.",
        "Documentation.LongDescription": "Returnerer en tabel, der ikke indeholder de sidste <code>countOrCondition</code> rækker i tabellen <code>table</code>.\r\n        Det antal rækker, der fjernes, afhænger af den valgfrie parameter <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Hvis <code>countOrCondition</code> udelades, er det kun sidste række, der fjernes. </li>\r\n    <li> Hvis <code>countOrCondition</code> er et tal, fjernes der så mange rækker (med start fra bunden). </li>\r\n    <li> Hvis <code>countOrCondition</code> er en betingelse, fjernes de rækker, der overholder betingelsen, indtil en række ikke overholder betingelsen.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Fjern den sidste række i tabellen.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Fjern de sidste to rækker i tabellen, hvor [CustomerID] > 2.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "Returnerer en tabel, hvor rækkerne er fjernet fra den inputtabel, der indeholder en fejl i mindst en af cellerne. Hvis der er angivet en kolonneliste, er det kun cellerne i de angivne kolonner, der undersøges for fejl.",
        "Documentation.LongDescription": "Returnerer en tabel, hvor rækkerne er fjernet fra den inputtabel, der indeholder en fejl i mindst en af cellerne. Hvis der er angivet en kolonneliste, er det kun cellerne i de angivne kolonner, der undersøges for fejl.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Fjern fejlværdien fra første række.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "Returnerer en tabel med rækkerne i omvendt rækkefølge.",
        "Documentation.LongDescription": "Returnerer en tabel med rækkerne fra inputtet <code>table</code> i omvendt rækkefølge.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Vend om på rækkefølgen af rækkerne i tabellen.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "Returnerer en tabel, der indeholder en beskrivelse af kolonnerne (f.eks. skemaet) for den angivne tabel.",
        "Documentation.LongDescription": "<p>Returnerer en tabel, der beskriver kolonnerne for <code>table</code>.</p>\r\n<p>Hver række i tabellen beskriver egenskaberne for en kolonne for <code>table</code>:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>Kolonnenavn</b></td>\r\n    <td><b>Beskrivelse</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Name</code></td>\r\n    <td>Navnet på kolonnen.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Position</code></td>\r\n    <td>Den 0-baserede position for kolonnen i <code>table</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>Navnet på kolonnetypen.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Type</code></td>\r\n    <td>Typen af kolonne.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>On kolonnen kan indeholde <code>null</code> værdier.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>Den numeriske base (f.eks. base-2 eller base-10) for felterne <code>NumericPrecision</code> og <code>NumericScale</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>Præcisionen af en numerisk kolonne i den base, der er angivet af <code>NumericPrecisionBase</code>. Dette er det maksimale antal cifre, der kan vises for en værdi af denne type (herunder brøkcifre).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>Skalaen for en numerisk kolonne i den base, der er angivet af <code>NumericPrecisionBase</code>. Dette er antallet af cifre i brøkdelen af en værdi af denne type. En værdi for <code>0</code> angiver en fast skala uden brøkcifre. En værdie for <code>null</code> angiver, at skalaen ikke er kendt (enten fordi den er flydende eller ikke er defineret).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>Det maksimale antal brøkcifre, der understøttes i sekunddelen af en dato- eller klokkeslætsværdi.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>Det maksimale antal tegn, der tillades i en kolonne af typen <code>text</code>, eller det maksimal antal byte, der tillades i en kolonne af typen <code>binary</code> column.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>Angiver, om denne kolonne kan variere i længde (op til <code>MaxLength</code>) eller om den har en fast størrelse.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>Navnet på kolonnens type i kildens oprindelige typesystem (f.eks. <code>nvarchar</code> for SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>Standardudtryk for en værdi for denne kolonne på kildens oprindelige udtrykssprog (f.eks. <code>42</code> eller <code>newid()</code> for SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Description</code></td>\r\n    <td>Beskrivelse af kolonne.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "Returnerer en tabel med kun de rækker fra inputtabellen, der indeholder en fejl i mindst en af cellerne. Hvis der er angivet en kolonneliste, er det kun cellerne i de angivne kolonner, der undersøges for fejl.",
        "Documentation.LongDescription": "Returnerer en tabel med kun de rækker fra inputtabellen, der indeholder en fejl i mindst en af cellerne. Hvis der er angivet en kolonneliste, er det kun cellerne i de angivne kolonner, der undersøges for fejl.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Vælg navne på kunder, hvor der er fejl i deres rækker.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "Returnerer en tabel, hvor det første antal rækker springes over.",
        "Documentation.LongDescription": "Returnerer en tabel, der ikke indeholder det første angivne antal rækker, <code>countOrCondition</code>, i tabellen <code>table</code>.\r\n    Det antal rækker, der springes over, afhænger af den valgfrie parameter <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Hvis <code>countOrCondition</code> udelades, er det kun første række, der springes over. </li>\r\n    <li> Hvis <code>countOrCondition</code> er et tal, springes der så mange rækker over (med start fra toppen). </li>\r\n    <li> Hvis <code>countOrCondition</code> er en betingelse, springes de rækker over, der overholder betingelsen, indtil en række ikke overholder betingelsen.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Spring den første række i tabellen over.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Spring de første to rækker i tabellen over.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Spring de første to rækker i tabellen over, hvor [Price] > 25.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "Forhindrer, at der køres downstream-handlinger mod den oprindelige datakilde.",
        "Documentation.LongDescription": "Forhindrer, at der køres downstream-handlinger mod den oprindelige datakilde i <code>table</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Henter data fra en SQL-tabel på en måde, der forhindrer, at downstream-handlinger køres som en forespørgsel på SQL-serveren.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "Ændrer kolonner til rækker og rækker til kolonner.",
        "Documentation.LongDescription": "Ændrer kolonner til rækker og rækker til kolonner.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Skift rækkerne i tabellen med navne/værdi-par til kolonner.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "Henter relationerne i et tabelsæt.",
        "Documentation.LongDescription": "Henter relationerne i et tabelsæt. Sættet <code>tables</code> is formodes at have en struktur, der ligner den i en navigationstabel. Den kolonne, der er defineret af <code>dataColumn</code>, indeholder de faktiske datatabeller.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "Returnerer en tabel over SQL-tabeller og visninger fra Teradata-databasen.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller og visninger fra Teradata-databasen på serveren <code>server</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon. Den valgfrie postparameter, <code>options</code>, kan angives for at styre følgende egenskaber:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Indsigt i Azure-tidsserier"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "Angiv antallet af måneder, som der skal hentes historiske Twilio-data for.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "Returnerer en tabel med relevante Twilio-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "Returner en tabel med en beskrivelse af kolonnerne (dvs. skemaet) i den angivne tabeltype.",
        "Documentation.LongDescription": "<p>Returner en tabel, der beskriver kolonnerne i <code>tableType</code>.</p>\r\n<p>Reference til dokumentationen for <code>Table.Schema</code> for at få en beskrivelse af den resulterende tabel.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Services Feed",
        "Documentation.DisplayName": "Azure DevOps Services Feed",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Returnerer en tabel med OData-feeds fra Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Opret forbindelse til Viva Insights-data",
        "Documentation.LongDescription": "Importér ugentlige målepunkter og attributdata fra Workplace Analytics.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med synlige attributter og pr. uge-målepunkter for hver målt medarbejder i partitionen.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "Returnerer indholdet i HTML-dokumentet delt op i konstituentstrukturer samt en repræsentation af hele dokumentet og dokumentets tekst, efter at koder er fjernet.",
        "Documentation.LongDescription": "Returnerer indholdet i HTML-dokumentet delt op i konstituentstrukturer samt en repræsentation af hele dokumentet og dokumentets tekst, efter at koder er fjernet.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "Returnerer en tabel med en oversigt over Webtrends-målepunkter.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Foretager et kald til Webtrends KeyMetrics-slutpunktet og returnerer alle data som en tabel.",
        "Documentation.Examples": [
          {
            "Description": "Udtrækker en tabel med en oversigt over målepunkter for lejer 98765 inden for de seneste 30 dage",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "En tabel med en oversigt over målepunkter"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "Angiv det profil-id, der er knyttet til din Webtrends-konto.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "Returnerer en tabel med relevante Webtrends-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Opret forbindelse til Viva Insights-data",
        "Documentation.LongDescription": "Importér ugentlige målepunkter og attributdata fra Workplace Analytics.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med synlige attributter og pr. uge-målepunkter for hver målt medarbejder i partitionen.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "Returnerer indholdet af XML-dokumentet som en hierarkisk tabel.",
        "Documentation.LongDescription": "Returnerer indholdet af XML-dokumentet som en hierarkisk tabel.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "Returnerer indholdet af XML-dokumentet som en indlejret samling flade tabeller.",
        "Documentation.LongDescription": "Returnerer indholdet af XML-dokumentet som en indlejret samling flade tabeller.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Hent indholdet af en lokal xml-fil.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "Angiv URL-adressen for din Zendesk-konto.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "Returnerer en tabel med relevante Zendesk-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "Returnerer skemasamlingen for en ADO.NET-datakilde.",
        "Documentation.LongDescription": "Returnerer skemasamlingen for ADO.NET-datakilden med providernavnet <code>providerName</code> og forbindelsesstrengen <code>connectionString</code>. <code>connectionString</code> kan være tekst eller en post med parvise egenskabsværdier. Egenskabsværdier kan være enten tekst eller tal. Der kan angives en valgfri postparameter, <code>options</code>, til angivelse af yderligere egenskaber. Denne post kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : En logisk v&#230;rdi (true/false), der bestemmer, om der skal fremstilles SQL Server-kompatible forbindelsesstrengindstillinger til Windows-godkendelse. Standardv&#230;rdien er true.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (beta)",
        "Documentation.Description": "Importér data fra en Amazon Redshift-database.",
        "Documentation.LongDescription": "Returnerer en tabel, der viser tabellerne på Amazon Redshift-klyngen <code>server</code> i databasen <code>database</code>.  En valgfri registreringsparameter, <code>indstillinger</code>, kan angives for at kontrollere følgende indstillinger:\r\n<ul>\r\n<li><code>Udbydernavn</code>: En tekstværdi, der skal bruges som udbydernavn for forbindelsen. Dette bruges, når du bruger Microsoft Authentication.</li>\r\n<li><code>Batch-størrelse</code>: Antallet af rækker, der hentes i et enkelt opkald til serveren.</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Returnerer en tabel med flerdimensionelle kuber eller tabelmodeller fra Analysis Services-databasen.",
        "Documentation.LongDescription": "Returnerer en tabel med flerdimensionelle kuber eller tabelmodeller fra Analysis Services-databasen <code>database</code> på serveren <code>server</code>. Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>Query</code> : En integreret MDX-foresp&#248;rgsel, der anvendes til hentning af data.</li>\r\n<li><code>TypedMeasureColumns</code> : En logisk v&#230;rdi, der angiver, om de typer, der er angivet i den flerdimensionelle model eller tabelmodellen, skal bruges til typerne af tilf&#248;jede m&#229;lingskolonner. N&#229;r typen &quot;number&quot; er angivet til false, bruges den til alle m&#229;lingskolonner. Standardv&#230;rdien for denne indstilling er false.</li>\r\n<li><code>Culture</code> : Et kulturnavn, der angiver datakulturen. Dette svarer til egenskaben for forbindelsesstrengen &#39;landestandard-id&#39;.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>SubQueries</code> : Et tal (0, 1 eller 2), der angiver v&#230;rdien for egenskaben &quot;SubQueries&quot; i forbindelsesstrengen. Dette styrer funktionsm&#229;den for beregnede medlemmer i under-select-dels&#230;tninger eller delkuber. (Standardv&#230;rdien er 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Returnerer en tabelliste over tabeller i den angivne Spark-klynge.",
        "Documentation.LongDescription": "Returnerer en tabelliste over tabeller i Spark-klyngen <code>host</code> ved hjælp af <code>protocol</code>. Gyldige protokoller er:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabelliste over tabeller i den angivne Spark-klynge.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Angiv organisation og projektnavne.",
        "Documentation.DisplayName": "VSTS. AnalyticsViews",
        "Documentation.Caption": "VSTS. AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (kun tavler)",
        "Documentation.LongDescription": "Returnerer en tabel med Analytics-visninger fra Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "HDInsight Interactive Query",
        "Documentation.Caption": null,
        "Documentation.Description": "Importer data fra HDInsight Interactive Query",
        "Documentation.LongDescription": "\r\nReturnerer en liste over tabeller fra HDInsight Interactive Query angivet af <code>databasen</code> på HDInsight Interactive Query-<code>serveren</code>. Du kan vælge at angive et valgfrit portnummer med serveren adskilt af et kolon. Du kan angive et valgfrit parameter for <code>indstillinger</code> for at styre følgende egenskaber:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: En varighed, som kontrollerer ventetiden, før et forsøg på at oprette forbindelse til serveren afbrydes. Standardværdien afhænger af driveren.</li>\r\n        <li><code>CommandTimeout</code>: En varighed, som kontrollerer, hvor længe forespørgslen kan køre på serveren, før den annulleres. Standardværdien afhænger af driveren.</li>\r\n</ul>\r\nEt valgfrit parameter for <code>indstillinger</code> angives som [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "Returnerer en tabel med kolonner, der er knyttet til attributterne for en enhed i Common Data Model, herunder datatyper.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "Returnerer en tabel med kolonner, der er knyttet til attributterne for en enhed i Common Data Model, herunder datatyper. Kolonner fra enhedsdefinitionen tilføjes, hvis de ikke er tilknyttet, og alle ikke-tilknyttede kolonner bliver fjernet.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "CloudBluePSA",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "Returnerer en kube efter at have anvendt en parameter for den.",
        "Documentation.LongDescription": "Returnerer en kube efter at have anvendt <code>parameter</code> med <code>arguments</code> for <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "Ændrer filterkontekstens dimensionelle granularitet for kuben ved at skjule de attributter, der er knyttet til de angivne kolonner.",
        "Documentation.LongDescription": "Ændrer filterkontekstens dimensionelle granularitet for <code>cube</code> ved at skjule de attributter, der er knyttet til de angivne kolonner <code>columnNames</code>. Kolonnerne fjernes også fra kubens tabelvisning.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Erstatter det sæt dimensioner, der returneres af Cube.Dimensions.",
        "Documentation.LongDescription": "Erstatter det sæt dimensioner, der returneres af <code>Cube.Dimensions</code>.\r\n Denne funktion kan f.eks. bruges til at føje en id-kolonne til en dimensionsattribut, så datakilden kan gruppere på id'et i stedet for den viste værdi.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "Anvender en liste over kubefunktioner.",
        "Documentation.LongDescription": "Anvender listen over kubefunktioner, <code>transforms</code>, på <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "Returnerer en tabel over de SQL-tabeller og -visninger, der er tilgængelige i en Db2-database.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller og visninger, der er tilgængelige i en Db2-database på serveren <code>server</code> i den forekomst af databasen, der hedder <code>database</code>. Porten kan valgfrit angives med serveren, hvor de er adskilt af et kolon. En valgfri postparameter, <code>options</code>, kan angives for at styre følgende valgmuligheder:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n<li><code>Implementation</code> : Angiver, hvilken implementering af den interne databaseprovider der skal bruges. Gyldige v&#230;rdier: &quot;IBM&quot; og &quot;Microsoft&quot;.</li>\r\n<li><code>BinaryCodePage</code> : Et tal for CCSID&#39;et (Coded Character Set Identifier) til afkodning af bin&#230;re Db2 FOR BIT-data til tegnstrenge. G&#230;lder for Implementation = “Microsoft”. Angiv 0 for at deaktivere konvertering (standard). Angiv til 1 for at konvertere p&#229; baggrund af databasekodning. Angiv et andet CCSID-tal for at konvertere til programkodning.</li>\r\n<li><code>PackageCollection</code> : Angiver en strengev&#230;rdi for pakkesamling (standardv&#230;rdien er &quot;NULLID&quot;) for at muligg&#248;re anvendelsen af delte pakker, der kr&#230;ves for at behandle SQL-s&#230;tninger. G&#230;lder for Implementation = &quot;Microsoft&quot;.</li>\r\n<li><code>UseDb2ConnectGateway</code> : Angiver, om forbindelsen oprettes via en Db2 Connect-gateway. G&#230;lder for implementering = &quot;Microsoft&quot;.</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"vælg ...\"] for eksempel.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Henter et datasæt fra Data.World"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV370",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV370(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "Returnerer en tabel, der indeholder egenskaberne for og indholdet i de blobs, der blev fundet i den angivne beholder i en samling af legitimationsoplysninger i Azure storage.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder en række for hver blobfil, der blev fundet på beholderens URL-adresse, <code>account</code>, i en samling af legitimationsoplysninger i Azure storage. De enkelte rækker indeholder egenskaber for filen og et link til filens indhold.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "Returnerer en tabel, der indeholder resultaterne af at køre de angivne CSS-vælgere i forhold til den angivne HTML.",
        "Documentation.LongDescription": "Returnerer en tabel, der indeholder resultaterne af de angivne CSS-vælgere mod den leverede <code>html</code>. Det valgfri postparameter <code>options</code> kan benyttes til at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Tilgår data",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel fra en html-tekstværdiprøve.",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Karina</div><span>Manager</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "Udtrækker alle HREF'er fra en html-tekst-eksempelværdi.",
            "Code": "Html.Table (\"<a href=\"\"/test.html\"\">Test</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "Returnerer en tabel med SQL-tabeller og visninger, der er tilgængelige i en Informix-database.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller og visninger, der er tilgængelige i en Informix-database på serveren <code>server</code> i den forekomst af databasen, der hedder <code>database</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon. En valgfri postparameter, <code>options</code>, kan angives for at styre følgende egenskaber:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "Returnerer en tabel med oplysninger om kundeemner.",
        "Documentation.LongDescription": "Foretager et kald til Marketo REST API-slutpunktet på <code>url</code>/rest/v1/leads.json. Alle kundeemner på listen <code>leadIds</code> returneres.",
        "Documentation.Examples": [
          {
            "Description": "Udtrækker oplysninger om tre kundeemner",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "En tabel med oplysninger om de angivne kundeemner"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "Angiv URL-adressen for det Marketo REST API-slutpunkt, der er knyttet til din konto.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "Returnerer en tabel med relevante Marketo-data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "Returnerer en tabel over SQL-tabeller, visninger og lagrede skalafunktionner, der findes i en MySQL-database.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller, visninger og lagrede skalafunktioner, der er tilgængelige i en MySQL-database på serveren <code>server</code> i den forekomst af databasen, der hedder <code>database</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon. Den valgfrie postparameter, <code>options</code>, kan angives for at styre følgende egenskaber:\r\n    <ul>\r\n<li><code>Encoding</code> : En TextEncoding-v&#230;rdi, som angiver det tegns&#230;t, der bruges til at kode alle foresp&#248;rgsler, der sendes til serveren (som standard null).</li>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>TreatTinyAsBoolean</code> : En logisk v&#230;rdi (true/false), der afg&#248;r, om tinyint-kolonner p&#229; serveren skal gennemtvinges som logiske v&#230;rdier. Standardv&#230;rdien er true.</li>\r\n<li><code>OldGuids</code> : En logisk v&#230;rdi (true/false), der angiver, om char(36)-kolonner (hvis false) eller binary(16)-kolonner (hvis true) behandles som GUID&#39;er. Standardv&#230;rdien er false.</li>\r\n<li><code>ReturnSingleDatabase</code> : En logisk v&#230;rdi (true/false), der angiver, om samtlige tabeller i alle databaser skal returneres (hvis false), eller om der skal returneres tabeller og visninger for den angivne database (hvis true). Standardv&#230;rdien er false.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "Importér data fra en IBM Netezza-database.",
        "Documentation.LongDescription": "\r\nReturnerer en tabel over Netezza-tabeller, -visninger og -lagrede funktioner fra Netezza Server-databasen <code>database</code> på serveren <code>server</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon. En valgfri postparameter, <code>options</code>, kan angives for at styre følgende egenskaber:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: En logisk værdi (true/false), der angiver, om der skal genereres navigationsegenskaber på de returnerede værdier (standard er true)</li>\r\n        <li><code>HierarchicalNavigation</code>: En logisk værdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false)</li>\r\n        <li><code>ConnectionTimeout</code>: En varighed, der styrer, hvor længe der skal ventes, før forsøget på at oprette forbindelse til serveren opgives. Standardværdien er afhængig af driveren.</li>\r\n        <li><code>CommandTimeout</code>: En varighed der styrer, hvor længe forespørgslen på serversiden må køre, før den annulleres. Standardværdien er afhængig af driveren.</li>\r\n<li><code>NormalizeDatabaseName</code>: En logisk værdig (true/false), der angiver, hvorvidt databasenavnet skal nomaliseres til store bogstaver eller fortolkes bogstaveligt (standard er true).</li>\r\n</ul>\r\nPostparameteren er angivet som [option1 = value1, option2 = value2...].",
        "Documentation.Examples": [
          {
            "Description": "Angiv tabellerne i et IBM Netezza-projekt.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "Returnerer resultatet for kørsel af en oprindelig forespørgsel på en ODBC-datakilde.",
        "Documentation.LongDescription": "Returnerer resultatet for kørsel af <code>query</code> med forbindelsesstrengen <code>connectionString</code> ved hjælp af ODBC. <code>connectionString</code> kan være tekst eller en post med egenskabsværdipar. Egenskabsværdier kan enten være en tekst eller et tal. Der kan angives et valgfrit postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien er 15 sekunder.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : En logisk v&#230;rdi (true/false), der bestemmer, om der skal fremstilles SQL Server-kompatible forbindelsesstrengindstillinger til Windows-godkendelse. Standardv&#230;rdien er true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returner resultatet af at køre en simpel forespørgsel mod den angivne forbindelsesstreng.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "Returnerer resultatet for kørsel af en oprindelig forespørgsel på en OLE DB-datakilde.",
        "Documentation.LongDescription": "Returnerer resultatet for kørsel af <code>query</code> med forbindelsesstrengen <code>connectionString</code> ved hjælp af OLE DB. <code>connectionString</code> kan være tekst eller en post med egenskabsværdipar. Egenskabsværdier kan enten være en tekst eller et tal. Der kan angives et valgfrit postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : En logisk v&#230;rdi (true/false), der bestemmer, om der skal fremstilles SQL Server-kompatible forbindelsesstrengindstillinger til Windows-godkendelse. Standardv&#230;rdien er true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "Returnerer en tabel over SQL-tabeller og visninger, der findes i en PostgreSWL-database.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller og visninger, der er tilgængelige i en PostgreSQL-database på serveren <code>server</code> i den forekomst af databasen, der hedder <code>database</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon. Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende egenskaber:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Importér data fra et Snowflake Computing-datalager.",
        "Documentation.LongDescription": "Returnerer en tabel med en oversigt over tabellerne i Snowflake Computing-<code>datalageret</code>, der befinder sig på <code>server</code>. Du kan eventuelt angive en postparameter, <code>indstillinger</code>, til at styre følgende indstillinger:\r\n<ul>\r\n<li><code>Role</code>: en tekstværdi, der bruges som forbindelsens rollenavn.</li>\r\n<li><code>CreateNavigationProperties</code>: en logisk (sand/falsk) værdi, der bestemmer, om navigationsegenskaber skal genereres for de returnerede værdier (standardindstilling: sand)</li>\r\n<li><code>ConnectionTimeout</code>: Det antal sekunder, der skal ventes på netværkssvar fra Snowflake.</li>\r\n<li><code>CommandTimeout</code>: Det antal sekunder, der skal ventes på, at en forespørgsel udføres.</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Vis en oversigt over tabellerne i et Snowflake-datalager.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Returnerer en tabelliste over tabeller i den angivne Spark-klynge.",
        "Documentation.LongDescription": "Returnerer en tabelliste over tabeller i Spark-klyngen <code>host</code> ved hjælp af <code>protocol</code>. Gyldige protokoller er:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Vis tabellerne på en liste i en Azure Spark-instans.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "Returnerer en tabel over SQL-tabeller, visninger og lagrede funktioner fra SQL Server-databasen.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller, visninger og lagrede funktioner fra SQL Server-databasen <code>database</code> på serveren <code>server</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon eller et komma. Den valgfrie postparameter, <code>options</code>, kan angives for at styre følgende egenskaber:\r\n    <ul>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Et tal, der angiver v&#230;rdien for dels&#230;tningen i &quot;maxdop&quot;-foresp&#248;rgslen i den genererede SQL-foresp&#248;rgsel.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n<li><code>MultiSubnetFailover</code> : En logisk v&#230;rdi (true/false), der angiver v&#230;rdien af egenskaben &quot;MultiSubnetFailover&quot; i forbindelsesstrengen (standard er false).</li>\r\n<li><code>UnsafeTypeConversions</code> : En logisk v&#230;rdi (sand/falsk), som, hvis sand, fors&#248;ger at folde typekonverteringer, som kan mislykkes, og som medf&#248;rer, at hele foresp&#248;rgslen mislykkes. Anbefales ikke til generel brug.</li>\r\n<li><code>ContextInfo</code> : En bin&#230;r v&#230;rdi, der bruges til at angive CONTEXT_INFO, f&#248;r hver kommando k&#248;res.</li>\r\n<li><code>OmitSRID</code> : En logisk v&#230;rdi (sand/falsk), som, hvis sand, udelader SRID, n&#229;r der dannes Well-Known Text fra geometri- og geografityper.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : En logisk v&#230;rdi (sand/falsk), som, hvis sand, tillader foresp&#248;rgselsdelegering p&#229; tv&#230;rs af databaser p&#229; den samme server. Standardv&#230;rdien er falsk.</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Returnerer en tabel over SQL-tabeller og visninger, der findes i en Sybase-database.",
        "Documentation.LongDescription": "Returnerer en tabel over SQL-tabeller og visninger, der er tilgængelige i en Sybase-database på serveren <code>server</code> i den forekomst af databasen, der hedder <code>database</code>. Porten kan eventuelt være angivet med serveren, adskilt af et kolon. Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende egenskaber:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : En funktion, der anvendes til at oprette navne til navigationsegenskaber.</li>\r\n<li><code>Query</code> : En integreret SQL-foresp&#248;rgsel, der anvendes til hentning af data. Hvis foresp&#248;rgslen genererer flere resultats&#230;t, returneres kun det f&#248;rste.</li>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>ConnectionTimeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien afh&#230;nger af driveren.</li>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n</ul>\r\n\r\n    Postparameteren angives f.eks. som [option1 = value1, option2 = value2...] eller [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "Tilføjer en kolonne med eksplicitte placeringsværdier.",
        "Documentation.LongDescription": "Føjer en kolonne med navnet <code>newColumnName</code> til <code>table</code> med eksplicitte placeringsværdier.\r\n    En valgfri værdi, <code>initialValue</code>, den indledende indeksværdi. En valgfri værdi, <code>increment</code>, angiver, hvor meget de enkelte indeksværdier skal øges med.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Føj en indekskolonne med navnet \"Index\" til tabellen.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "Føj en indekskolonne med navnet \"index\", som starter ved værdien 10 og forøges med 5, til tabellen.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "Når du har en kolonne med lister i en tabel, skal du oprette en kopi af en række for hver værdi på listen.",
        "Documentation.LongDescription": "Når du har en <code>table</code>, hvor en <code>column</code> er en liste over værdier, opdeles listen i en række for hver værdi. Værdier i andre kolonner dubleres i alle nye rækker, der oprettes.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Opdel listekolonnen [Name] i tabellen.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "Overfører værdien af en tidligere celle til cellerne med null-værdier nedenfor i kolonnen.",
        "Documentation.LongDescription": "Returnerer en tabel fra den angivne <code>table</code>, hvor værdien af en tidligere celle overføres til cellerne med null-værdier nedenfor i den angivne <code>columns</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Returner en tabel med null-værdier i kolonnen [Place] udfyldt med værdien oven over dem fra tabellen.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "Overfører værdien i en celle til cellerne med null-værdier ovenfor i kolonnen.",
        "Documentation.LongDescription": "Returnerer en tabel fra den angivne <code>table</code>, hvor værdien af den næste celle overføres til cellerne med null-værdier ovenfor i den angivne <code>columns</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Returner en tabel med null-værdier i kolonnen [Column2] udfyldt med værdien under dem fra tabellen.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "Returnerer alle de rækker, der indeholder den angivne tekst i tabellen.",
        "Documentation.LongDescription": "Returnerer de rækker i tabellen <code>table</code>, der indeholder teksten <code>text</code>. Hvis teksten ikke blev fundet, returneres der en tom tabel.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find de rækker i tabellen, der indeholder \"Bob\".",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "Returnerer det første antal angivne rækker.",
        "Documentation.LongDescription": "Returnerer den eller de første rækker i tabellen <code>table</code>, afhængigt af værdien i <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Hvis <code>countOrCondition</code> er et tal, returneres der så mange rækker (med start fra toppen). </li>\r\n    <li> Hvis <code>countOrCondition</code> er en betingelse, returneres de rækker, der overholder betingelsen, indtil en række ikke overholder betingelsen.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find de første to rækker i tabellen.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Find de første to rækker, hvor [a] > 0 i tabellen.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "Returnerer en tabel, der er resultatet af at samle et sæt partitionerede tabeller.",
        "Documentation.LongDescription": "Returnerer en tabel, der er resultatet af at kombinere et sæt partitionerede tabeller, <code>partitions</code>. <code>partitionColumn</code> er navnet på den kolonne, der skal tilføjes. Kolonnetypen er som standard <code>any</code>, men den kan angives af <code>partitionColumnType</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find elementtypen på listen <code>{number}</code>.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "Returnerer det sidst angivne antal rækker.",
        "Documentation.LongDescription": "Returnerer den eller de sidste rækker fra tabellen <code>table</code>, afhængigt af værdien i <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Hvis <code>countOrCondition</code> er et tal, returneres der så mange rækker med start fra positionen (slut - <code>countOrCondition</code>). </li>\r\n    <li> Hvis <code>countOrCondition</code> er en betingelse, returneres de rækker, der overholder betingelsen, i stigende rækkefølge, indtil en række ikke overholder betingelsen.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find de sidste to rækker i tabellen.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Find de sidste rækker, hvor [a] > 0 i tabellen.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "Returnerer en tabel, hvor alle kolonnerne indledes med den angivne tekst.",
        "Documentation.LongDescription": "Returnerer en tabel, hvor alle kolonnenavne fra den angivne <code>table</code> indledes med den angivne tekst <code>prefix</code>, plus et punktum i formatet <code>prefix</code><code>.ColumnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Indleder kolonnerne med \"MyTable\" i tabellen.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "Returnerer de rækker, der starter med den angivne forskydning.",
        "Documentation.LongDescription": "Returnerer rækkerne fra <code>table</code>, der starter med den angivne <code>offset</code>. En valgfri parameter, <code>count</code>, angiver, hvor mange rækker der skal returneres. Alle rækkerne efter forskydningen returneres som standard.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Returnerer alle rækker i tabellen med start ved forskydning 1.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Returnerer den eneste række i tabellen med start ved forskydning 1.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "Fjerner de angivne kolonner.",
        "Documentation.LongDescription": "Fjerner den angivne <code>columns</code> fra den udleverede <code>table</code> . \n\rHvis den angivne kolonne ikke findes, udløses der en fejl, medmindre den valgfri parameter <code>missingField</code> angiver en alternativ funktionsmåde (f.eks. <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Fjern kolonnen [Phone] fra tabellen.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Prøv at fjerne en ikke-eksisterende kolonne fra tabellen.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "Fjerner alle forekomster af de angivne rækker fra tabellen.",
        "Documentation.LongDescription": "Fjerner alle forekomster af den angivne <code>rows</code> fra <code>table</code>.\r\n    Der kan angives en valgfri parameter <code>equationCriteria</code> for at styre sammenligningen mellem rækkerne i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Fjern de rækker, hvor [a = 1], fra tabellen <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code>.",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "Fjerner det angivne antal rækker.",
        "Documentation.LongDescription": "Fjerner <code>count</code> af rækkerne fra starten af <code>table</code> med start ved den angivne <code>offset</code>. Standardantallet 1 bruges, hvis parameteren <code>count</code> ikke er angivet. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Fjern den første række fra tabellen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Fjern den første række ved position 1 fra tabellen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Fjern to rækker med start ved position 1 fra tabellen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "Anvender nye navne i formatet {old, new}.",
        "Documentation.LongDescription": "Udfører de angivne omdøbninger på kolonnerne i tabellen <code>table</code>. En erstatningshandling <code>renames</code> består af en liste med to værdier, det gamle kolonnenavn og det nye kolonnenavn, som findes på en liste.\r\n    Hvis kolonnen ikke findes, udløses der en undtagelse, medmindre den valgfrie parameter <code>missingField</code> angiver et alternativ (f.eks. <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Erstat kolonnenavnet \"CustomerNum\" med \"CustomerID\" i tabellen.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Erstat kolonnenavnet \"CustomerNum\" med \"CustomerID\" og \"PhoneNum\" med \"Phone\" i tabellen.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Erstat kolonnenavnet \"NewCol\" med \"NewColumn\" i tabellen, og ignorer det, hvis kolonnen ikke findes.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "Returnerer en tabel med kolonnerne i den angivne rækkefølge.",
        "Documentation.LongDescription": "Returnerer en tabel fra inputtet <code>table</code> med kolonnerne i den rækkefølge, der er angivet af <code>columnOrder</code>. Rækkefølgen ændres ikke for kolonner, der ikke er angivet på listen.\r\n     Hvis kolonnen ikke findes, udløses der en undtagelse, medmindre den valgfrie parameter <code>missingField</code> angiver et alternativ (f.eks. <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Skift rækkefølgen af kolonnerne [Phone] og [Name] i tabellen.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Skift rækkefølgen af kolonnerne [Phone] og [Address], eller brug \"MissingField.Ignore\" i tabellen. Dette ændrer ikke tabellen, fordi kolonnen [Address] findes ikke.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "Gentag rækkerne i tabellerne et angivet antal gange.",
        "Documentation.LongDescription": "Returnerer en tabel med rækkerne fra inputtet <code>table</code> gentaget de angivne <code>count</code> gange.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Gentag rækkerne i tabellen to gange.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "Erstatter fejlværdierne i de angivne kolonner med den tilsvarende angivne værdi.",
        "Documentation.LongDescription": "Erstatter fejlværdierne i de angivne kolonner i <code>table</code> med de nye værdier på listen <code>errorReplacement</code>. Formatet for listen er {{column1, value1}, …}. Der må kun være én erstatningsværdi pr. kolonne. Hvis kolonnen angives flere gange, medfører det en fejl.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Erstat fejlværdien med teksten \"world\" i tabellen.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "Erstat fejlværdien i kolonne A med teksten \"hello\" og i kolonne B med teksten \"world\" i tabellen.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "Erstatter nøglerne til den angivne tabel.",
        "Documentation.LongDescription": "Erstatter nøglerne til den angivne tabel.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Erstat de eksisterende nøgler til en tabel.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "Erstatter alle de angivne rækker med den eller de leverede rækker.",
        "Documentation.LongDescription": "Erstatter alle de angivne rækker i <code>table</code> med de leverede. De rækker, der skal erstattes, og erstatningerne er angivet i <code>replacements</code> i formatet {old, new}.\r\n    Der kan angives en valgfri parameter af typen <code>equationCriteria</code> for at styre sammenligningen mellem rækkerne i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Erstat rækkerne [a = 1, b = 2] og [a = 2, b = 3] med [a = -1, b = -2],[a = -2, b = -3] i tabellen.",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "Returnerer en tabel med kun de angivne kolonner.",
        "Documentation.LongDescription": "Returnerer <code>table</code> med kun de angivne <code>columns</code>.\r\n    <ul>\r\n       <li><code>table</code>: Den angivne tabel.</li>\r\n       <li><code>columns</code>: Den liste over kolonner fra tabellen <code>table</code>, der skal returneres. Kolonner i den returnerede tabel er i den rækkefølge, der er vist i <code>columns</code>.</li>\r\n       <li><code>missingField</code>: <i>(Valgfrit)</i> Hvad skal du gøre, hvis kolonnen ikke findes.  Eksempel:: <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Inkluder kun kolonnen [Navn].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "Inkluder kun kolonnerne [Kunde-id] og [Navn].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Hvis den inkluderede kolonne ikke findes, er standardresultatet en fejl.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "Hvis den inkluderede kolonne ikke findes, opretter indstillingen <code>MissingField.UseNull</code> en kolonne med null-værdier.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "Vælg de rækker, der overholder betingelsesfunktionen.",
        "Documentation.LongDescription": "Returnerer en tabel med rækker fra <code>table</code>, der stemmer overens med den valgte <code>condition</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Vælg de rækker i tabellen, hvor værdierne i kolonnen [Kunde-id] er større end 2.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Vælg de rækker i tabellen, hvor navnene ikke indeholder et \"B\".",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "Sorterer tabellen ved hjælp af et eller flere kolonnenavne og sammenligningskriterier.",
        "Documentation.LongDescription": "Sorterer <code>table</code> ved hjælp af listen over en eller flere kolonnenavne og den valgfrie <code>comparisonCriteria</code> i formatet { { col1, comparisonCriteria }, {col2} }.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Sortér tabellen på kolonnen \"OrderID\".",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "Sortér tabellen på kolonnen \"OrderID\" i faldende rækkefølge.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "Sortér tabellen på kolonnen \"CustomerID\" og derefter \"OrderID\", hvor \"CustomerID\" er i faldende rækkefølge.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "Transformerer kolonnenavne ved hjælp af den angivne funktion.",
        "Documentation.LongDescription": "Transformerer kolonnenavne ved hjælp af den angivne <code>nameGenerator</code>-funktion. Gyldige indstillinger:\r\n    <div>\r\n      <code>MaxLength</code> angiver den maksimale længde på nye kolonnenavne. Hvis den angivne funktion resulterer i et længere kolonnenavn, skal navnet afkortes.\r\n    </div>\r\n    <div>\r\n      <code>Comparer</code> bruges til at styre sammenligningen, når de nye kolonnenavne oprettes. Sammenligningsfunktioner kan bruges til at udføre sammenligninger, hvor der ikke skelnes mellem store og små bogstaver, eller udføre kulturelle- og landemæssige sammenligninger.\r\n    </div>\r\n    <div>\r\n      Følgende sammenligningsfunktioner er indbyggede og tilgængelige på formelsproget:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: Bruges til at udføre en præcis sammenligning ud fra ordenstal</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: Bruges til at udføre en præcis sammenligning ud fra ordenstal, hvor der ikke skelnes mellem små og store bogstaver</li>\r\n      <li> <code>Comparer.FromCulture</code>: Bruges til at udføre en sammenligning ud fra kultur</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Fjern tegnet <code>#(tab)</code> fra kolonnenavne",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "Transformerer kolonnenavne for at generere navne på seks tegn, hvor der ikke skelnes mellem små og store bogstaver.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "Anvender typetransformationer i formatet { column, type } ved hjælp af den angivne kultur.",
        "Documentation.LongDescription": "Returnerer en tabel fra inputtet <code>table</code> ved at anvende transformationshandlingen på de kolonner, der er angivet i parameteren <code>typeTransformations</code> (hvor formatet er { column name, type name}), ved hjælp af den angivne kultur i den valgfrie parameter <code>culture</code> (f.eks. \"en-US\").\r\n    Hvis kolonnen ikke findes, udløses der en undtagelse.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Transformér talværdierne i kolonnen [a] til tekstværdier ud fra tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "Transformerer værdierne i en eller flere kolonner.",
        "Documentation.LongDescription": "Transformerer <code>table</code> ved at anvende hver kolonnehandling, der er angivet i <code>transformOperations</code> (hvor formatet er { column name, transformation } eller { column name, transformation, new column type }).\r\n    Hvis der er angivet en <code>defaultTransformation</code>, anvendes den på alle kolonner, der ikke er angivet i <code>transformOperations</code>.\r\n    Hvis en kolonne, der er angivet i <code>transformOperations</code>, ikke findes, udløses der en undtagelse, medmindre den valgfri parameter <code>missingField</code> angiver et alternativ (f.eks. <code>MissingField.UseNull</code> eller <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Konvertér tekstværdierne i kolonnen [A] til talværdier og talværdierne i kolonne [B] til tekstværdier.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "Konvertér talværdierne i den manglende kolonne [X] til tekstværdier, og ignorer kolonner, der ikke findes.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "Konvertér talværdierne i den manglende kolonne [X] til tekstværdier, og benyt som standard null for kolonner, der ikke findes.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "Øg talværdierne i kolonne [B] gradvist, konvertér dem til tekstværdier, og konvertér alle andre kolonner til tal.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "Opretter eller udvider en tabel med brugerdefinerede handlere for forespørgsler og handlinger.",
        "Documentation.LongDescription": "<p>Returnerer en visning af <code>table</code>, hvor de funktioner, der er angivet i <code>handlers</code>, anvendes i stedet for standardadfærden for en handling, når handlingen anvendes til visningen</p>\r\n<p>Hvis <code>table</code> er angivet, er alle handlerfunktioner valgfrie. Hvis <code>table</code> ikke er angivet, er handlerfunktionerne <code>GetType</code> og <code>GetRows</code> påkrævet. Hvis en handlerfunktion ikke er angivet for en handling, anvendes standardadfærden for handlingen i stedet til <code>table</code> (undtagen i tilfælde af <code>GetExpression</code>).</p>\r\n<p>Handlerfunktioner skal returnere en værdi, der semantisk svarer til resultatet af at anvende handlingen på <code>table</code> (eller den resulterende visning i tilfælde af <code>GetExpression</code>).</p>\r\n<p>Hvis en handlerfunktion opløfter en fejl anvendes standardadfærden for handlingen til visningen.</p>\r\n<p><code>Table.View</code> kan bruges til at implementere foldning for en datakilde – oversættelsen af M-forespørgsler til kildespecifikke forespørgsler (f.eks. til at oprette T-SQL-sætninger fra M-forespørgsler).</p>\r\n<p>Se den publicerede dokumentation til Power Query brugerdefinerede connector for at få en mere komplet beskrivelse af <code>Table.View</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Opret en grundlæggende visning, der ikke kræver adgang til rækkerne for at bestemme typen eller rækkeantallet.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Angiv organisation og projektnavne.",
        "Documentation.DisplayName": "VSTS. AnalyticsViews",
        "Documentation.Caption": "VSTS. AnalyticsViews",
        "Documentation.Name": "Azure-DevOps (kun tavler)",
        "Documentation.LongDescription": "Returnerer en tabel med Analytics-visninger fra Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Importér data fra Vertica",
        "Documentation.LongDescription": "Returnerer en tabel over skemaer, der er tilgængelige på den server, som er angivet af parameteren <code>server</code>, i den database, som er angivet af parameteren <code>database</code>.\r\nDu kan angive den valgfri parameter <code>options</code> for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n<ul>\r\n    <li> <code>ConnectionTimeout</code>: En varighed, der bestemmer, hvor lang tid der skal ventes, før et forsøg på at oprette forbindelse til serveren opgives. Standardværdien er driverafhængig.</li>\r\n    <li><code>CommandTimeout</code>: En varighed, der bestemmer, hvor længe forespørgslen på serversiden får lov til at køre, før den annulleres. Standardværdien er driverafhængig.</li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "Vis tabellerne i Vertica"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "Returnerer en tabel med rapportindhold fra Webtrends.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "Foretager et kald til det angivne slutpunkt for Webtrends-rapportering og returnerer alle data som en tabel.",
        "Documentation.Examples": [
          {
            "Description": "Foretager et kald til slutpunktet for data i Webtrends-besøgsrapporten inden for de seneste 30 dage",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "En tabel med besøgsdata"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "Returnerer en liste over Active Directory-domæner i samme område som det angivne domæne eller for den aktuelle maskines domæne, hvis der ikke er angivet noget.",
        "Documentation.LongDescription": "Returnerer en liste over Active Directory-domæner i samme område som det angivne domæne eller for den aktuelle maskines domæne, hvis der ikke er angivet noget.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "Returnerer resultatet for kørsel af en oprindelig forespørgsel på en ADO.NET-datakilde.",
        "Documentation.LongDescription": "Returnerer resultatet for kørsel af <code>query</code> med forbindelsesstrengen <code>connectionString</code> ved hjælp af ADO.NET-provideren <code>providerName</code>. <code>connectionString</code> kan være tekst eller en post med egenskabsværdipar. Egenskabsværdier kan enten være en tekst eller et tal. Der kan angives en valgfri postparameter, <code>options</code>, til angivelse af yderligere egenskaber. Denne post kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : En varighed, som styrer, hvor l&#230;nge foresp&#248;rgslen p&#229; serversiden m&#229; k&#248;re, f&#248;r den annulleres. Standardv&#230;rdien er ti minutter.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : En logisk v&#230;rdi (true/false), der bestemmer, om der skal fremstilles SQL Server-kompatible forbindelsesstrengindstillinger til Windows-godkendelse. Standardv&#230;rdien er true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "Returnerer rapportpakkerne i Adobe Analytics.",
        "Documentation.LongDescription": "Returnerer en tabel over multidimensionelle pakker fra Adobe Analytics. Der kan angives en valgfri postparameter, <code>options</code>, til at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : En logisk v&#230;rdi (true/false), der angiver, om tabellerne skal vises grupperet efter skemanavne (standard er false).</li>\r\n<li><code>MaxRetryCount</code> : Det antal fors&#248;g, der skal udf&#248;res, n&#229;r der foresp&#248;rges efter resultatet af foresp&#248;rgslen. Standardv&#230;rdien er 120.</li>\r\n<li><code>RetryInterval</code> : Varigheden af tidsintervallet mellem nye fors&#248;g. Standardv&#230;rdien er 1 sekund.</li>\r\n<li><code>Implementation</code> : Angiver Adobe Analytics API-version. Gyldige v&#230;rdier er: &quot;2.0&quot;. Standard bruger API-version 1.4.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Hive LLAP",
        "Documentation.Caption": null,
        "Documentation.Description": "Importer data fra en Hive LLAP",
        "Documentation.LongDescription": "\r\nReturnerer en liste over tabeller fra Hive LLAP angivet af <code>databasen</code> på Hive LLAP<code>-serveren</code> ved brug af den valgte <code>protokol</code>. Du kan vælge at angive et portnummer sammen med serveren adskilt af et kolon. Thrift Transport-protokollen er en specificeret type med værdierne \"Standard\", \"HTTP\". Du kan vælge at angive en parameter for følgende <code>indstillinger</code>:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: En varighed, som kontrollerer ventetiden, før et forsøg på at oprette forbindelse til serveren afbrydes. Standardværdien afhænger af driveren.</li>\r\n        <li><code>CommandTimeout</code>: En varighed, som kontrollerer, hvor længe forespørgslen kan køre på serveren, før den annulleres. Standardværdien afhænger af driveren.</li>\r\n</ul>\r\nEn parameter for <code>indstillinger</code> angives som [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent oversigtsdata fra 1-5-2017 til 15-6-2017",
            "Code": "lad    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          resultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      i\r\n          resultat",
            "Result": "Funktionen returnerer oversigtsdata fra 1-5-2017 til 15-6-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent oversigtsdata for april 2017.",
            "Code": "lad    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          resultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      i\r\n          resultat",
            "Result": "Funktionen returnerer data mellem 1-4-2017 og 30-4-2017"
          },
          {
            "Description": "Idet det antages, at dags dato er 15-6-2017, hent oversigtsdata fra april 2017 til nu.",
            "Code": "lad    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          resultat = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      i\r\n          resultat",
            "Result": "Funktionen returnerer data mellem 1-4-2017 og 15-6-2017"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "Angiv organisation og projektnavne.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Returnerer en tabel med OData-feeds fra Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "Opret forbindelse til din Dataverse-forekomst (Dynamics 365 og PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "Fletter den angivne dimensionstabel sammen med kubens filterkontekst og ændrer den dimensionelle granularitet for filterkonteksten ved at udvide det angivne sæt dimensionsattributter.",
        "Documentation.LongDescription": "Fletter den angivne dimensionstabel, <code>dimensionSelector</code>, sammen med kubens, <code>cube</code>, filterkontekst og ændrer den dimensionelle granularitet ved at udvide det angivne sæt, <code>attributeNames</code>, dimensionsattributter. Dimensionsattributterne føjes til tabelvisningen med kolonner, der kaldes <code>newColumnNames</code> eller <code>attributeNames</code>, hvis det ikke er angivet.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "Føjer en kolonne til den kube, der indeholder resultaterne af den måling, som anvendes i de enkelte rækkers rækkekontekst.",
        "Documentation.LongDescription": "Føjer en kolonne med navnet <code>column</code> til den <code>cube</code>, der indeholder resultaterne af den måling <code>measureSelector</code>, som anvendes i de enkelte rækkers rækkekontekst. Anvendelse af måling påvirkes af ændringer af dimensionens granularitet og udsnit. Målingsværdier justeres, når der er udført visse kubehandlinger.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "Indtast din Dynamics 365 Business Central-miljø og -virksomhed.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerer en tabel med relevante data fra Dynamics 365 Business Central."
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "Indtast din Dynamics 365 Business Central-miljø og -virksomhed.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerer en tabel med relevante data fra Dynamics 365 Business Central."
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "Indtast din Dynamics 365 Business Central-miljø og -virksomhed.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerer en tabel med relevante data fra Dynamics 365 Business Central."
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "Indtast din Dynamics 365 Business Central-miljø og -virksomhed.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Returnerer en tabel med relevante data fra Dynamics 365 Business Central."
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "Returnerer indholdet af den aktuelle Excel-projektmappe.",
        "Documentation.LongDescription": "Returnerer indholdet af den aktuelle Excel-projektmappe. Den returnerer tabeller, navngivne områder og dynamiske matrixer. I modsætning til <code>Excel.Workbook</code> returnerer den ikke ark.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Returnerer en tabel med indhold fra en Microsoft Exchange-konto.",
        "Documentation.LongDescription": "Returnerer en tabel med indhold fra Microsoft Exchange-kontoen <code>mailboxAddress</code>. Hvis <code>mailboxAddress</code> ikke er angivet, anvendes standardkontoen for legitimationsoplysningerne.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Datalager",
        "Documentation.Caption": "Datalager",
        "Documentation.Description": "Importerer data fra datalageret",
        "Documentation.LongDescription": "Importerer data fra datalageret"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Returnerer Google Analytics-konti.",
        "Documentation.LongDescription": "Returnerer Google Analytics-konti, der kan opnås adgang til vha. de aktuelle legitimationsoplysninger.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Importér data fra en Google BigQuery-database.",
        "Documentation.LongDescription": "\r\n      Returnerer en tabel, der viser de tilgængelige projekter i Google BigQuery. Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende indstillinger:\r\n      <ul>\r\n      <li><code>ConnectionTimeout</code>: En varighed, der styrer, hvor længe der skal ventes, før et forsøg på at oprette forbindelse til serveren afbrydes. Standardværdien er timeoutværdi for ODBC-forbindelse.</li>\r\n <li><code>CommandTimeout</code>: En varighed, der styrer, hvor længe forespørgslen på serversiden må køre, før den annulleres.</li>\r\n <li><code>BillingProject</code>:  Faktureringsprojekt-id. Standardværdien er det første tilgængelige projekt.</li>\r\n <li><code>UseStorageApi</code>: Angiver, om BigQuery Storage API skal bruges til store resultatsæt. Standardværdien er sand, hvis du vil bruge Storage API. Angiv til falsk, hvis du ikke vil bruge Storage API</li>\r\n </ul>\r\n Postparameteren er angivet som [option1 = value1, option2 = value2...].\r\n",
        "Documentation.Examples": [
          {
            "Description": "Vis de tilgængelige projekter i Google BigQuery",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Lakehouse",
        "Documentation.Caption": "Importér data fra et Lakehouse",
        "Documentation.Description": "Importér data fra et Lakehouse",
        "Documentation.LongDescription": "Opret forbindelse til alle de Lakehouses, du har adgang til, og vælg de enheder, du vil bruge"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "Returnerer en tabel med de vigtigste MailChimp-data.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "Returnerer en tabel med de vigtigste MailChimp-data.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med de vigtigste MailChimp-data.",
            "Code": "MailChimp.Tables()",
            "Result": "En tabel med vigtige MailChimp-data."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "Returnerer en tabel, der viser kundeemners aktiviteter.",
        "Documentation.LongDescription": "Foretager et kald til Marketo REST API-slutpunktet på <code>url</code>/rest/v1/activities.json. Alle aktiviteter på listen <code>activityIds</code>, der er sket siden den <code>startTime</code>, returneres.",
        "Documentation.Examples": [
          {
            "Description": "Opretter en tabel med \"websidebesøg\"-aktiviteter siden den 1. november 2015",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "En tabel med alle \"websidebesøg\"-aktiviteter siden den 1. november 2015"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"select * fra PV_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Power BI-dataflows (ældre)",
        "Documentation.Caption": "Importér data fra et Power BI-dataflow",
        "Documentation.LongDescription": "Opret forbindelse til alle de Power BI-dataflows, du har adgang til, og vælg de enheder, du vil bruge."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Datacentre",
        "Documentation.Caption": "Datacentre",
        "Documentation.Description": "Importerer data fra Datamarts",
        "Documentation.LongDescription": "Importerer data fra Datamarts"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "Dataflows",
        "Documentation.Caption": "Importér data fra et dataflow",
        "Documentation.Description": "Importér data fra et dataflow",
        "Documentation.LongDescription": "Opret forbindelse til alle de dataflow, du har adgang til, og vælg de enheder, du vil bruge"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "Importér data fra QuickBooks Online.",
        "Documentation.LongDescription": "\r\n        Returnerer en tabel med de tilgængelige tabeller i QuickBooks Online. Der kan angives en valgfri postparameter, <code>options</code>, for at styre følgende indstillinger:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: En varighed, der styrer, hvor længe der skal ventes, før forsøget på at oprette forbindelse til serveren opgives.</li>\r\n        <li><code>CommandTimeout</code>: En varighed, der bestemmer, hvor længe forespørgslen får lov til at køre på serversiden, før den annulleres.</li>\r\n        </ul>\r\n    Postparameteren angives som [parameter1 = værdi1, parameter2 = værdi2...].\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "Returnerer objekter fra Salesforce-kontoen.",
        "Documentation.LongDescription": "Returnerer objekterne på den Salesforce-konto, der er angivet i legitimationsoplysningerne. Kontoen forbindes via det angivne miljø <code>loginUrl</code>. Hvis der ikke er angivet et miljø, forbindes kontoen med produktionen (https://login.salesforce.com). Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : En logisk v&#230;rdi (true/false), der angiver, om der skal genereres navigationsegenskaber p&#229; de returnerede v&#230;rdier (standard er false).</li>\r\n<li><code>ApiVersion</code> : Den Salesforce API-version, der skal anvendes til foresp&#248;rgslen. N&#229;r versionen ikke er angivet, anvendes API version 29.0.</li>\r\n<li><code>Timeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien er kildespecifik.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "Returnerer rapporterne fra Salesforce-kontoen.",
        "Documentation.LongDescription": "Returnerer rapporterne på den Salesforce-konto, der er angivet i legitimationsoplysningerne. Kontoen forbindes via det angivne miljø <code>loginUrl</code>. Hvis der ikke er angivet et miljø, forbindes kontoen med produktionen (https://login.salesforce.com). Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Den Salesforce API-version, der skal anvendes til foresp&#248;rgslen. N&#229;r versionen ikke er angivet, anvendes API version 29.0.</li>\r\n<li><code>Timeout</code> : En varighed, som styrer, hvor l&#230;nge der skal ventes, f&#248;r fors&#248;get p&#229; at oprette forbindelse til serveren opgives. Standardv&#230;rdien er kildespecifik.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "Returnerer InfoCubes og forespørgsler i et SAP Business Warehouse-system, der er grupperet af InfoArea.",
        "Documentation.LongDescription": "Returnerer en tabel for InfoCubes og forespørgsler, der er grupperet af InfoArea, fra en SAP Business Warehouse-forekomst på serveren <code>server</code> med systemnummeret <code>systemNumberOrSystemId</code> og klient-id'et <code>clientId</code>. Der kan angives en valgfri postparameter, <code>optionsOrLogonGroup</code>, for at kontrollere følgende indstillinger:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Returnerer en tabel med ark, rapporter, mapper og arbejdsområder fra Smartsheet-API'en",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Returnerer en indlejret tabel med tilgængelige ark, rapporter, mapper og arbejdsområder fra Smartsheet-API'en.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer ark, mapper, rapporter og arbejdsområder, der er tilgængelige på øverste niveau i Smartsheet-hierarkiet",
            "Code": "Smartsheet.Tables()",
            "Result": "En tabel med mapper, rapporter og arbejdsområder fra det øverste niveau i Smartsheet-hierarkiet"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "Returnerer en tabel over tilgængelige målepunkter fra version 1 af SparkPost-API'en",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "Denne funktion kan bruges til at hente data fra et bestemt \"Metrik\"-slutpunkt i SparkPost API-v1. Ved at opdatere disse tabeller eller ved at foretage kald til API'EN SparkPost ved hjælp af denne connector, skal du huske, API'EN SparkPost har en bundet grænse for API-overførselshastighed. Hvis du kan se en 429 statuskode, der returneres fra SparkPost-serveren, har du nået grænsen for overførselshastighed og skal vente et øjeblik, før du foretager flere kald. Når du vælger en værdi for parameteren Antal dage, skal du være opmærksom på, at API'EN kun gemmer 6 måneder data.",
        "Documentation.Examples": [
          {
            "Description": "Henter leveringsmetrikværdier for antallet af sendte og afviste kampagne-ide'er over de seneste tre dage. ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "tabel"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "Foretager et kald til Stripe-API'en.",
        "Documentation.LongDescription": "Foretager et opkald til Stripe-API'en på https://api.stripe.com/v1/<code>metode</code>, hvor posten <code>additionalParameters</code> er godkendt som yderligere parametre og listen <code>ColumnNames</code> viser de forventede kolonnenavne. Stripe-version 2015-10-16 anvendes.",
        "Documentation.Examples": [
          {
            "Description": "Returnerer en tabel med hændelser, der er oprettet efter den 1. november 2015",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "En tabel med de angivne hændelser for den aktuelle Stripe-konto"
          },
          {
            "Description": "Returnerer en tabel med alle varenumre",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "En tabel med alle varenumre for den aktuelle Stripe-konto"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "Returnerer en tabel med de tilgængelige Stripe-tabeller og -funktioner.",
        "Documentation.LongDescription": "Returnerer en tabel med de tilgængelige Stripe-tabeller og -funktioner."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Synapse-arbejdsområde",
        "Documentation.Caption": "Azure Synapse-arbejdsområde",
        "Documentation.LongDescription": "PQ Connector til Azure Synapse-arbejdsområde",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "Tilføjer en kolonne med det angivne navn. Værdien beregnes ved hjælp af den angivne udvælgelsesfunktion, og alle rækker bruges som input.",
        "Documentation.LongDescription": "Føjer en kolonne med navnet <code>newColumnName</code> til tabellen <code>table</code>. Værdierne for kolonnen beregnes ved hjælp af den angivne udvælgelsesfunktion <code>columnGenerator</code>, og alle rækker bruges som input.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Føj en talkolonne med navnet \"TotalPrice\" til tabellen, hvor hver værdi er summen af kolonnerne [Price] og [Shipping].",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "Tilføjer en ny kolonne med repræsentative værdier, der er fremstillet af fuzzy-grupperingsværdier i den angivne kolonne i tabellen.",
        "Documentation.LongDescription": "Tilføjer en ny kolonne <code>newColumnName</code> til <code>table</code> med repræsentative værdier for <code>columnName</code>. Repræsentanterne hentes sammen med fuzzily-matchende værdier i <code>columnName</code> for hver række.\r\n    <p>Der kan inkluderes et valgfrit sæt af <code>options</code> for at angive, hvordan nøglekolonnerne skal sammenlignes. Indstillingerne omfatter: \r\n    <ul>\r\n<li><code>Culture</code> : G&#248;r det muligt at gruppere poster baseret p&#229; kulturspecifikke regler. Det kan v&#230;re et vilk&#229;rligt gyldigt kulturnavn. En kulturindstilling af typen &quot;ja-JP&quot; grupperer for eksempel p&#229; basis af den japanske kultur. Standardv&#230;rdien er &quot;&quot;, hvilket grupperer baseret p&#229; den engelske (invariable) kultur.</li>\r\n<li><code>IgnoreCase</code> : En logisk v&#230;rdi (sand/falsk), der tillader skelnen mellem store og sm&#229; bogstaver. Hvis v&#230;rdien er sand, bliver &quot;druer&quot; grupperet med &quot;druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>IgnoreSpace</code> : En logisk v&#230;rdi (sand/falsk), der g&#248;r det muligt at kombinere tekstdele for at finde grupper. Hvis true, bliver &quot;Dru er &quot; grupperet med &quot;druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>SimilarityColumnName</code> : Et navn p&#229; kolonnen, der viser ligheden mellem en inputv&#230;rdi og den repr&#230;sentative v&#230;rdi for inputtet. Standardv&#230;rdien er null, hvilket betyder, at der ikke tilf&#248;jes en ny kolonne for ligheder.</li>\r\n<li><code>Threshold</code> : Et tal mellem 0,00 og 1,00, der angiver den lighedsscore, hvor to v&#230;rdier grupperes.\r\n    For eksempel er &quot;druer&quot; og &quot;drer&quot; (manglende &quot;u&quot;) kun grupperes sammen, hvis denne indstilling er angivet til mindre end 0,90.\r\n    En gr&#230;nsev&#230;rdi p&#229; 1,00 tillader kun eksakte match.\r\n    (Bem&#230;rk, at et fuzzy &quot;eksakt match&quot; kan ignorere forskelle som f.eks. store og sm&#229; bogstaver, ordr&#230;kkef&#248;lge og tegns&#230;tning.)\r\n    Standardv&#230;rdien er 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabel, der tillader gruppering af poster baseret p&#229; brugerdefinerede v&#230;rditilknytninger. Den skal indeholde kolonnerne &quot;fra&quot; og &quot;til&quot;. For eksempel bliver &quot;Druer&quot; grupperet med &quot;Rosiner&quot;, hvis der findes en transformationstabel med kolonnen &quot;fra&quot;, som indeholder &quot;Druer&quot;, og kolonnen &quot;til&quot;, der indeholder &quot;Rosiner&quot;. Bem&#230;rk, at transformationen bliver anvendt p&#229; alle forekomster af teksten i transformationstabellen. Med ovenst&#229;ende transformationstabel bliver &quot;Druer er s&#248;de&quot; ogs&#229; grupperet med &quot;Rosiner er s&#248;de&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Find de repræsentative værdier for medarbejderens placering.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "Udfører en joinforbindelse mellem tabeller på angivne kolonner og opretter joinresultatet i en ny kolonne.",
        "Documentation.LongDescription": "Joinforbinder rækkerne i <code>table1</code> med rækkerne i <code>table2</code> på baggrund af ligheden mellem værdier i de nøglekolonner, der er valgt af <code>key1</code> (for <code>table1</code>) og <code>key2</code> (for <code>table2</code>). Resultaterne angives i den kolonne, der hedder <code>newColumnName</code>.\r\nDenne funktion fungerer på samme måde som Table.Join, hvor JoinKind er angivet til LeftOuter, med den undtagelse at joinresultaterne vises indlejret og ikke i en flad struktur.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Føj en joinforbundet kolonne til ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) med navnet \"price/stock\" fra tabellen ({[saleID = 1, price = 20], [saleID = 2, price = 10]}), der er joinforbundet på [saleID].",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "Føjer en nøgle til en tabel.",
        "Documentation.LongDescription": "Føjer en nøgle til <code>table</code>, hvor <code>columns</code> er listen over kolonnenavne, der definerer nøglen, og <code>isPrimary</code> angiver, om nøglen er primær.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Føj en primær nøgle med en enkelt kolonne til en tabel.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "Tilføjer en kolonne med rangeringen af en eller flere andre kolonner.",
        "Documentation.LongDescription": "Føjer en kolonne med navnet <code>newColumnName</code> til <code>table</code> med rangeringen af en eller flere andre kolonner, der er beskrevet af <code>comparisonCriteria</code>.\r\nRankKind-indstillingen i <code>options</code> kan bruges af avancerede brugere til at vælge en mere specifik rangeringsmetode.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Føj en kolonne med navnet \"RevenueRank\" til tabellen, der rangerer kolonnen \"Omsætning\" fra højeste til laveste.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "Aggregerer en kolonne i tabeller i flere kolonner i den tabel, der indeholder dem.",
        "Documentation.LongDescription": "Aggregerer tabeller i <code>table</code> [<code>column</code>] i flere kolonner, der indeholder aggregerede værdier for tabellerne. <code>aggregations</code> bruges til at angive de kolonner, der indeholder de tabeller, som skal aggregeres, den aggregeringsfunktion, der skal anvendes på tabellerne for at oprette deres værdier, og navnene på de aggregeringskolonner, der skal oprettes.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Aggreger tabelkolonner i <code>[t]</code> i tabellen <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> til summen <code>[t.a]</code>, minimum og maksimum for <code>[t.b]</code> og antallet af værdier i <code>[t.a]</code>.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "Bevarer den første forskydning og skifter derefter mellem at hente og springe følgende rækker over.",
        "Documentation.LongDescription": "Bevarer den første forskydning og skifter derefter mellem at hente og springe følgende rækker over.\r\n    <ul>\r\n       <li><code>table</code>: Inputtabellen.</li>\r\n       <li><code>offset</code>: Det antal rækker, der skal bevares, før gentagelser startes.</li>\r\n       <li><code>skip</code>: Det antal rækker, der skal fjernes i hver gentagelse.</li>\r\n       <li><code>take</code>: Det antal rækker, der skal bevares i hver gentagelse.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Opret en tabel ud fra tabellen, som med start ved første række springer én værdi over og derefter bevarer én værdi.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "Samler de angivne kolonner i en ny kolonne ved hjælp af den angivne samlefunktion.",
        "Documentation.LongDescription": "Samler de angivne kolonner i en ny kolonne ved hjælp af den angivne samlefunktion.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kombiner sidste og første navn til en ny kolonne adskilt af et komma.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "Kombinerer de angivne kolonner i en ny postvurderet kolonne, hvor de enkelte poster har feltnavne og værdier, der svarer til kolonnenavnene og værdierne for de kolonner, der blev kombineret.",
        "Documentation.LongDescription": "Kombinerer de angivne kolonner i <code>table</code> til en ny post specifik kolonne med navnet <code>newColumnName</code>, hvor hver post har feltnavne og -værdier, der svarer til kolonnenavnene og -værdierne for de kolonner, der var kombineret. Hvis der er angivet en post for <code>options</code>, kan følgende indstillinger angives: \r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: Når det angives som tekst, indikerer det, at det angivne kolonnenavn skal behandles som postens viste navn. Dette behøver ikke være en af kolonnerne i selve posten. </li>\r\n     <li> <code>TypeName</code>: Når det angives som tekst, giver det et logisk typenavn for den oprettede post, som kan bruges under dataindlæsning til at øge funktionsmåden af indlæsningsmiljøet. </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "Dublerer en kolonne med det angivne navn. Værdier og type kopieres fra kildekolonnen.",
        "Documentation.LongDescription": "Dubler kolonnen med navnet <code>columnName</code> til tabellen <code>table</code>. Værdierne og typen for kolonnen <code>newColumnName</code> kopieres fra kolonnen <code>columnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Dubler kolonnen \"a\" til en kolonne med navnet \"copied column\" i tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "Udvider en kolonne over poster i kolonner med de enkelte værdier.",
        "Documentation.LongDescription": "Med <code>column</code> over poster i inputtet <code>table</code> oprettes en tabel med en kolonne for de enkelte felter i posten. Du kan vælge at angive <code>newColumnNames</code> for at sikre entydige navne for kolonnerne i den nye tabel.\r\n    <ul>\r\n        <li><code>table</code>: Den oprindelige tabel med den postkolonne, der skal udvides. </li>\r\n        <li><code>column</code>: Den kolonne, der skal udvides.</li>\r\n        <li><code>fieldNames</code>: Den feltliste, der skal udvides i kolonner i tabellen.</li>\r\n        <li><code>newColumnNames</code>: Den liste over kolonnenavne, der skal overføres til de nye kolonner. De nye kolonnenavne kan ikke kopiere nogen kolonner i den nye tabel.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Udvid kolonnen [a] i tabellen <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> i tre kolonner \"aa\", \"bb\" og \"cc\".",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "Aggregerer en kolonne med poster eller en kolonne med tabeller i flere kolonner i den tabel, der indeholder dem.",
        "Documentation.LongDescription": "Udvider tabeller i <code>table</code> [<code>column</code>] i flere rækker og kolonner. <code>columnNames</code> bruges til at markere de kolonner, der skal udvides fra den indre tabel. Angiv <code>newColumnNames</code> for at undgå konflikter mellem eksisterende kolonner og nye kolonner.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Udvid tabelkolonner i <code>[a]</code> i tabellen <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> i tre kolonner <code>[t.a]</code>, <code>[t.b]</code> og <code>[t.c]</code>.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "Grupperer rækker i tabellen ud fra fuzzy matching af nøgler.",
        "Documentation.LongDescription": "Grupperer rækkerne for <code>table</code> efter fuzzily matchende værdier i den angivne kolonne, <code>key</code>, for hver række.\r\n    For hver gruppe oprettes en post, der indeholder nøglekolonnerne (og deres værdier) sammen med alle akkumulerede kolonner, som er angivet af <code>aggregatedColumns</code>.\r\n    Denne funktion kan ikke garantere returnering af en fast rækkefølge af rækker.\r\n    <p>Der kan inkluderes et valgfrit sæt af <code>options</code> for at angive, hvordan nøglekolonnerne skal sammenlignes. Indstillingerne omfatter: \r\n    <ul>\r\n<li><code>Culture</code> : G&#248;r det muligt at gruppere poster baseret p&#229; kulturspecifikke regler. Det kan v&#230;re et vilk&#229;rligt gyldigt kulturnavn. En kulturindstilling af typen &quot;ja-JP&quot; grupperer for eksempel p&#229; basis af den japanske kultur. Standardv&#230;rdien er &quot;&quot;, hvilket grupperer baseret p&#229; den engelske (invariable) kultur.</li>\r\n<li><code>IgnoreCase</code> : En logisk v&#230;rdi (sand/falsk), der tillader skelnen mellem store og sm&#229; bogstaver. Hvis v&#230;rdien er sand, bliver &quot;druer&quot; grupperet med &quot;druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>IgnoreSpace</code> : En logisk v&#230;rdi (sand/falsk), der g&#248;r det muligt at kombinere tekstdele for at finde grupper. Hvis true, bliver &quot;Dru er &quot; grupperet med &quot;druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>SimilarityColumnName</code> : Et navn p&#229; kolonnen, der viser ligheden mellem en inputv&#230;rdi og den repr&#230;sentative v&#230;rdi for inputtet. Standardv&#230;rdien er null, hvilket betyder, at der ikke tilf&#248;jes en ny kolonne for ligheder.</li>\r\n<li><code>Threshold</code> : Et tal mellem 0,00 og 1,00, der angiver den lighedsscore, hvor to v&#230;rdier grupperes.\r\n    For eksempel er &quot;druer&quot; og &quot;drer&quot; (manglende &quot;u&quot;) kun grupperes sammen, hvis denne indstilling er angivet til mindre end 0,90.\r\n    En gr&#230;nsev&#230;rdi p&#229; 1,00 tillader kun eksakte match.\r\n    (Bem&#230;rk, at et fuzzy &quot;eksakt match&quot; kan ignorere forskelle som f.eks. store og sm&#229; bogstaver, ordr&#230;kkef&#248;lge og tegns&#230;tning.)\r\n    Standardv&#230;rdien er 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabel, der tillader gruppering af poster baseret p&#229; brugerdefinerede v&#230;rditilknytninger. Den skal indeholde kolonnerne &quot;fra&quot; og &quot;til&quot;. For eksempel bliver &quot;Druer&quot; grupperet med &quot;Rosiner&quot;, hvis der findes en transformationstabel med kolonnen &quot;fra&quot;, som indeholder &quot;Druer&quot;, og kolonnen &quot;til&quot;, der indeholder &quot;Rosiner&quot;. Bem&#230;rk, at transformationen bliver anvendt p&#229; alle forekomster af teksten i transformationstabellen. Med ovenst&#229;ende transformationstabel bliver &quot;Druer er s&#248;de&quot; ogs&#229; grupperet med &quot;Rosiner er s&#248;de&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gruppér tabellen ved at tilføje en aggregeringskolonne [Count], der indeholder antallet af medarbejdere på hver placering (\"hver Table.RowCount(_))\").",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "Joinforbinder rækkerne fra de to tabeller, der fuzzy-matcher, på baggrund af de angivne nøgler.",
        "Documentation.LongDescription": "<p>Forbinder rækkerne i <code>table1</code> med rækkerne i <code>table2</code> på baggrund af fuzzy-matching af de nøglekolonner, der er valgt af <code>key1</code> (for <code>table1</code>) og <code>key2</code> (for <code>table2</code>).</p>\r\n<p>Fuzzy-matching er en sammenligning baseret på tekstens enshed snarere end lighed.</p>\r\n<p>Der oprettes som standard en indre forbindelse, men der kan inkluderes en valgfri <code>joinKind</code> for at angive typen af forbindelse. Indstillinger omfatter:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Et valgfrit sæt af <code>joinOptions</code> kan inkluderes for at angive, hvordan nøglekolonnerne skal sammenlignes. Indstillingerne omfatter:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Et tal mellem 1 og 8, der angiver det antal parallelle tr&#229;de, som skal bruges til fuzzymatching. Standardv&#230;rdien er 1.</li>\r\n<li><code>Culture</code> : Tillader identiske poster baseret p&#229; kulturspecifikke regler. Det kan v&#230;re et vilk&#229;rligt gyldigt kulturnavn. For eksempel matcher en Culture-indstilling p&#229; &quot;ja-JP&quot; poster baseret p&#229; den japanske kultur. Standardv&#230;rdien er &quot;&quot;, som matcher baseret p&#229; den engelske invariable kultur.</li>\r\n<li><code>IgnoreCase</code> : En logisk v&#230;rdi (sand/falsk), der tillader forskels s&#248;gning efter store og sm&#229; bogstaver. Hvis v&#230;rdien er sand, matches &quot;Druer&quot; med &quot;druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>IgnoreSpace</code> : En logisk v&#230;rdi (sand/falsk), der g&#248;r det muligt at kombinere tekstdele for at finde forekomster. Hvis true, matches &quot;Dru er&quot; med &quot;Druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>NumberOfMatches</code> : Et heltal, der angiver det maksimale antal matchende r&#230;kker, der kan returneres for hver inputr&#230;kke. For eksempel returnerer en v&#230;rdi p&#229; 1 h&#248;jst &#233;n tilsvarende r&#230;kke for hver inputr&#230;kke. Hvis denne indstilling ikke er angivet, returneres alle matchende r&#230;kker.</li>\r\n<li><code>SimilarityColumnName</code> : Et navn p&#229; kolonnen, der viser ligheden mellem en inputv&#230;rdi og den repr&#230;sentative v&#230;rdi for inputtet. Standardv&#230;rdien er null, hvilket betyder, at der ikke tilf&#248;jes en ny kolonne for ligheder.</li>\r\n<li><code>Threshold</code> : Et tal mellem 0,00 og 1,00, der angiver den lighedsscore, som to v&#230;rdier matches med.\r\n    For eksempel er &quot;druer&quot; og &quot;drer&quot; (manglende &quot;u&quot;) kun ens, hvis denne indstilling er angivet til mindre end 0,90.\r\n    En gr&#230;nsev&#230;rdi p&#229; 1,00 tillader kun eksakte match.\r\n    (Bem&#230;rk, at et fuzzy &quot;eksakt match&quot; kan ignorere forskelle som f.eks. store og sm&#229; bogstaver, ordr&#230;kkef&#248;lge og tegns&#230;tning.)\r\n    Standardv&#230;rdien er 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabel, der tillader matchende poster baseret p&#229; brugerdefinerede v&#230;rditilknytninger. Den skal indeholde kolonnerne &quot;Fra&quot; og &quot;Til&quot;. For eksempel bliver &quot;Druer&quot; matchet med &quot;Rosiner&quot;, hvis der findes en transformationstabel med kolonnen &quot;Fra&quot;, som indeholder &quot;Druer&quot;, og kolonnen &quot;Til&quot;, der indeholder &quot;Rosiner&quot;. Bem&#230;rk, at transformationen bliver anvendt p&#229; alle forekomster af teksten i transformationstabellen. Med ovenst&#229;ende transformationstabel bliver &quot;Druer er s&#248;de&quot;, ogs&#229; matchet med &quot;Rosiner er s&#248;de&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Venstre indre fuzzy-joinforbindelse af to tabeller baseret på [FirstName]",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "Udfører en fuzzy-joinforbindelse mellem tabeller på angivne kolonner og opretter joinresultatet i en ny kolonne.",
        "Documentation.LongDescription": "<p>Joinforbinder rækkerne i <code>table1</code> med rækkerne i <code>table2</code> på baggrund af fuzzy-matching af værdierne i de nøglekolonner, der er valgt af <code>key1</code> (for <code>table1</code>) og <code>key2</code> (for <code>table2</code>). Resultaterne returneres i en ny kolonne, der hedder <code>newColumnName</code>.</p>\r\n<p>Fuzzy-matching er en sammenligning, som er baseret på tekstens enshed i stedet for tekstens lighed.</p>\r\n<p>Den valgfrie værdi <code>joinKind</code> angiver typen af joinforbindelse, der skal udføres. Der udføres som standard en venstre ydre joinforbindelse, hvis der ikke er angivet en <code>joinKind</code>. Valgmulighederne omfatter:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Et valgfrit sæt af <code>joinOptions</code> kan inkluderes for at angive, hvordan nøglekolonnerne skal sammenlignes. Valgmulighederne omfatter:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Et tal mellem 1 og 8, der angiver det antal parallelle tr&#229;de, som skal bruges til fuzzymatching. Standardv&#230;rdien er 1.</li>\r\n<li><code>Culture</code> : Tillader identiske poster baseret p&#229; kulturspecifikke regler. Det kan v&#230;re et vilk&#229;rligt gyldigt kulturnavn. For eksempel matcher en Culture-indstilling p&#229; &quot;ja-JP&quot; poster baseret p&#229; den japanske kultur. Standardv&#230;rdien er &quot;&quot;, som matcher baseret p&#229; den engelske invariable kultur.</li>\r\n<li><code>IgnoreCase</code> : En logisk v&#230;rdi (sand/falsk), der tillader forskels s&#248;gning efter store og sm&#229; bogstaver. Hvis v&#230;rdien er sand, matches &quot;Druer&quot; med &quot;druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>IgnoreSpace</code> : En logisk v&#230;rdi (sand/falsk), der g&#248;r det muligt at kombinere tekstdele for at finde forekomster. Hvis true, matches &quot;Dru er&quot; med &quot;Druer&quot;. Standardv&#230;rdien er sand.</li>\r\n<li><code>NumberOfMatches</code> : Et heltal, der angiver det maksimale antal matchende r&#230;kker, der kan returneres for hver inputr&#230;kke. For eksempel returnerer en v&#230;rdi p&#229; 1 h&#248;jst &#233;n tilsvarende r&#230;kke for hver inputr&#230;kke. Hvis denne indstilling ikke er angivet, returneres alle matchende r&#230;kker.</li>\r\n<li><code>SimilarityColumnName</code> : Et navn p&#229; kolonnen, der viser ligheden mellem en inputv&#230;rdi og den repr&#230;sentative v&#230;rdi for inputtet. Standardv&#230;rdien er null, hvilket betyder, at der ikke tilf&#248;jes en ny kolonne for ligheder.</li>\r\n<li><code>Threshold</code> : Et tal mellem 0,00 og 1,00, der angiver den lighedsscore, som to v&#230;rdier matches med.\r\n    For eksempel er &quot;druer&quot; og &quot;drer&quot; (manglende &quot;u&quot;) kun ens, hvis denne indstilling er angivet til mindre end 0,90.\r\n    En gr&#230;nsev&#230;rdi p&#229; 1,00 tillader kun eksakte match.\r\n    (Bem&#230;rk, at et fuzzy &quot;eksakt match&quot; kan ignorere forskelle som f.eks. store og sm&#229; bogstaver, ordr&#230;kkef&#248;lge og tegns&#230;tning.)\r\n    Standardv&#230;rdien er 0,80.</li>\r\n<li><code>TransformationTable</code> : En tabel, der tillader matchende poster baseret p&#229; brugerdefinerede v&#230;rditilknytninger. Den skal indeholde kolonnerne &quot;Fra&quot; og &quot;Til&quot;. For eksempel bliver &quot;Druer&quot; matchet med &quot;Rosiner&quot;, hvis der findes en transformationstabel med kolonnen &quot;Fra&quot;, som indeholder &quot;Druer&quot;, og kolonnen &quot;Til&quot;, der indeholder &quot;Rosiner&quot;. Bem&#230;rk, at transformationen bliver anvendt p&#229; alle forekomster af teksten i transformationstabellen. Med ovenst&#229;ende transformationstabel bliver &quot;Druer er s&#248;de&quot;, ogs&#229; matchet med &quot;Rosiner er s&#248;de&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Venstre indre fuzzy-joinforbindelse af to tabeller baseret på [FirstName]",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "Grupperer rækker i tabellen, der indeholder samme nøgle.",
        "Documentation.LongDescription": "Grupperer rækkerne i <code>table</code> efter de nøglekolonner, der er defineret af <code>key</code>. <code>key</code> kan enten være et enkelt kolonnenavn eller en liste af kolonnenavne.\r\n For hver gruppe oprettes en post, der indeholder nøglekolonnerne (og deres værdier) sammen med de aggregerede kolonner, som er angivet af <code>aggregatedColumns</code>.\r\n   Valgfrit kan angives <code>groupKind</code> og <code>comparer</code>. <br>\r\n    <br>\r\n    Hvis data allerede er sorteret efter nøglekolonnerne, kan der angives en <code>groupKind</code> af GroupKind. Lokal kan angives. Dette kan forbedre ydeevne ved gruppering i visse tilfælde,\r\n    eftersom alle rækker med et bestemt sæt nøgleværdier antages at være sammenhængende.<br>\r\n    <br>\r\n    Ved overførsel af en <code>comparer</code>, skal du være opmærksom på, at en række kan placeres i en gruppe, hvis nøgler er anderledes end dens egne.<br>\r\n    <br>\r\n    Denne funktion garanterer ikke rækkefølgen af de rækker, den returnerer.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gruppér tabellen ved at tilføje en aggregeringskolonne [total], som indeholder summen af priser (\"each List.Sum([price])\").",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "Indsætter en liste over rækker i tabellen på den angivne position.",
        "Documentation.LongDescription": "Returnerer en tabel med listen over rækker, <code>rows</code>, indsat i <code>table</code> på den angivne placering, <code>offset</code>. Hver kolonne i rækken, der skal indsættes, skal svare til kolonnetyperne i tabellen.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Indsæt rækken i tabellen ved position 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Indsæt to rækker i tabellen ved position 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "Joinforbinder rækkerne fra de to tabeller, der matcher, på baggrund af de angivne nøgler.",
        "Documentation.LongDescription": "<p>Joinforbinder rækkerne i <code>table1</code> med rækkerne i <code>table2</code> på baggrund af ligheden mellem værdier i de nøglekolonner, der er valgt af <code>key1</code> (for <code>table1</code>) og <code>key2</code> (for <code>table2</code>).</p>\r\n<p>Der oprettes som standard en indre joinforbindelse, men der kan inkluderes en valgfri <code>joinKind</code> for at angive typen af joinforbindelse. Indstillinger omfatter:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Et valgfrit sæt af <code>keyEqualityComparers</code> kan inkluderes for at angive, hvordan nøglekolonnerne skal sammenlignes. Denne parameter er i øjeblikket kun tiltænkt intern brug.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Forbind to tabeller ved hjælp af en enkelt nøglekolonne.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "Joinforbind to tabeller med kolonnenavne, der er i konflikt, ved hjælp af flere nøglekolonner.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "Returnerer den eller de største rækker ved hjælp af de angivne kriterier.",
        "Documentation.LongDescription": "Returnerer den eller de største rækker i <code>table</code> med den angivne <code>comparisonCriteria</code>.\r\n    Når rækkerne er sorteret, skal parameteren <code>countOrCondition</code> angives for at filtrere resultatet yderligere. Bemærk, at sorteringsalgoritmen ikke kan garantere et fast sorteret resultat. Parameteren <code>countOrCondition</code> kan anvendes på flere måder:\r\n    <ul>\r\n        <li> Hvis der er angivet et tal, returneres der en liste på op til <code>countOrCondition</code> elementer i stigende rækkefølge. </li>\r\n        <li> Hvis der er angivet en betingelse, returneres der en liste over elementer, der i starten opfylder betingelsen. Når et element ikke opfylder betingelsen, tages der ikke flere elementer med i betragtning. </li> \r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find rækken med den største værdi i kolonnen [a] med betingelsen [a] > 0 i tabellen. Rækkerne sorteres, før filteret anvendes.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Find rækken med den største værdi i kolonnen [a] med betingelsen [b] > 0 i tabellen. Rækkerne sorteres, før filteret anvendes.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "Returnerer den eller de mindste rækker ved hjælp af de angivne kriterier.",
        "Documentation.LongDescription": "Returnerer den eller de mindste rækker i <code>table</code> med den angivne <code>comparisonCriteria</code>. Når rækkerne er sorteret, skal parameteren <code>countOrCondition</code> angives for at filtrere resultatet yderligere. Bemærk, at sorteringsalgoritmen ikke kan garantere et fast sorteret resultat. Parameteren <code>countOrCondition</code> kan anvendes på flere måder:\r\n    <ul>\r\n        <li> Hvis der er angivet et tal, returneres der en liste på op til <code>countOrCondition</code> elementer i stigende rækkefølge. </li>\r\n        <li> Hvis der er angivet en betingelse, returneres der en liste over elementer, der i starten opfylder betingelsen. Når et element ikke opfylder betingelsen, tages der ikke flere elementer med i betragtning. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find rækken med den mindste værdi i kolonnen [a] med betingelsen [a] < 3 i tabellen. Rækkerne sorteres, før filteret anvendes.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Find rækken med den mindste værdi i kolonnen [a] med betingelsen [b] < 0 i tabellen. Rækkerne sorteres, før filteret anvendes.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "Udfører en joinforbindelse mellem tabeller på angivne kolonner og opretter joinresultatet i en ny kolonne.",
        "Documentation.LongDescription": "<p>Joinforbinder rækkerne i <code>table1</code> med rækkerne i <code>table2</code> på baggrund af ligheden mellem værdier i de nøglekolonner, der er valgt af <code>key1</code> (for <code>table1</code>) og <code>key2</code> (for <code>table2</code>). Resultaterne angives i den kolonne, der hedder <code>newColumnName</code>.</p>\r\n<p>Den valgfrie værdi <code>joinKind</code> angiver typen af joinforbindelse, der skal udføres. Der udføres som standard en venstre ydre joinforbindelse, hvis der ikke er angivet en <code>joinKind</code>.</p>\r\n<p>Et valgfrit sæt af <code>keyEqualityComparers</code> kan inkluderes for at angive, hvordan nøglekolonnerne skal sammenlignes. Denne funktion er i øjeblikket kun tiltænkt intern brug.</p>  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Forbind to tabeller ved hjælp af en enkelt nøglekolonne.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "Hvis der er et kolonnepar, der repræsenterer attribut/værdi-par, roteres dataene i attributkolonnen til en kolonneoverskrift.",
        "Documentation.LongDescription": "Hvis der er et kolonnepar, der repræsenterer attribut/værdi-par, roteres dataene i attributkolonnen til en kolonneoverskrift.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Tager værdierne \"a\", \"b\" og \"c\" i attributkolonnen i tabellen <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> og pivoterer dem til deres egen kolonne.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "Tager værdierne \"a\", \"b\" og \"c\" i attributkolonnen i tabellen <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> og pivoterer dem til deres egen kolonne.  Attributten \"c\" for nøglen \"x\" har flere værdier tilknyttet, så brug funktionen List.Max til at løse konflikten.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "Erstatter det angivne rækkeområde med den eller de leverede rækker.",
        "Documentation.LongDescription": "Erstatter et angivet antal rækker, <code>count</code>, i inputtet <code>table</code> med de angivne <code>rows</code>, med start ved <code>offset</code>. Parameteren <code>rows</code> er en liste over poster.\r\n    <ul>\r\n       <li><code>table</code>: Den tabel, hvor erstatningen udføres.</li>\r\n       <li><code>offset</code>: Det antal rækker, der skal springes over, før erstatningen udføres.</li>\r\n       <li><code>count</code>: Det antal rækker, der skal erstattes.</li>\r\n       <li><code>rows</code>: Den liste over rækker, der skal indsættes i <code>table</code> på den position, der er angivet af <code>offset</code>.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Erstat tre rækker med start ved position 1.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "Erstatter én værdi med en anden i de angivne kolonner.",
        "Documentation.LongDescription": "Erstatter <code>oldValue</code> med <code>newValue</code> i de angivne kolonner i <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Erstat teksten \"farvel\" med \"verden\" i kolonne B, der kun matcher hele værdien.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "Erstat teksten \"din\" med \"eller\" i kolonne B, så den svarer til en hvilken som helst del af værdien.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "Anonymiser navnene på de amerikanske medarbejdere.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "Anonymiser alle kolonner med de amerikanske medarbejdere.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "Opdeler de angivne kolonner i et sæt yderligere kolonner ved hjælp af den angivne opdelingsfunktion.",
        "Documentation.LongDescription": "Opdeler de angivne kolonner i et sæt yderligere kolonner ved hjælp af den angivne opdelingsfunktion.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Opdel kolonnen [Navn] ved position \"i\" i to kolonner",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "Oversætter et sæt kolonner i en tabel til attribut/værdi-par.",
        "Documentation.LongDescription": "Oversætter et sæt kolonner i en tabel til attribut/værdi-par kombineret med de øvrige værdier i de enkelte rækker.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Tag kolonnerne \"a\", \"b\" og \"c\" i tabellen <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code>, og depivoter dem til attribut/værdi-par.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "Oversætter alle kolonner undtagen et angivet sæt til par med attributter/værdier.",
        "Documentation.LongDescription": "Oversætter alle kolonner undtagen et angivet sæt til par med attributter/værdier kombineret med resten af værdierne på de enkelte rækker.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Oversætter alle kolonner undtagen et angivet sæt til par med attributter/værdier kombineret med resten af værdierne på de enkelte rækker.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Teams Personal Analytics",
        "Documentation.LongDescription": "<p>Teams Analytics-forbindelseskomponenten gør det muligt for dig at få indsigt i din brug af Teams. Der er tilgængelige data til både din personlige aktivitet i Teams og aktiviteten i Teams, som du er medlem af.</p>\r\n<p>Data er tilgængelige for de sidste 90 dage. </p>\r\n<p> Oplysninger om de tilgængelige typer data finder du i følgende hjælp-dokumentation: </p>\r\n<ul>\r\n<li><b>Teams-brug:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Teams-brugeraktivitet:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "Angiv organisation og projektnavne.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Returnerer en tabel med OData-feeds fra Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "Returnerer et binært format, der læser en binær værdi.",
        "Documentation.LongDescription": "Returnerer et binært format, der læser en binær værdi.  Hvis <code>length</code> er angivet, indeholder den binære værdi dette antal byte.  Hvis <code>length</code> ikke er angivet, indeholder den binære værdi de resterende byte.    <code>length</code> kan angives som enten et tal eller som et binært format af den længde, der står foran de binære data.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "Returnerer en logisk værdi på baggrund af lighedskontrollen af de to angivne værdier.",
        "Documentation.LongDescription": "Returnerer en <code>logisk</code> værdi baseret på lighedskontrol af de to angivne værdier, <code>x</code> og <code>y</code>, ved hjælp af den angivne <code>comparer</code>.\r\n      <div>\r\n        <code>comparer</code> er en <code>Comparer</code> som bruges til at styre sammenligningen.\r\n        En sammenligningsfunktion er en funktion, der accepterer to argumenter og returnerer -1, 0 eller 1 baseret på, om den første værdi er mindre end, lig med  eller større end sekundet.\r\n        Sammenligninger kan bruges til at skelne mellem store og små bogstaver eller kultur- og landestandardafhængige sammenligninger.\r\n        </div>\r\n        <div>\r\n        Følgende indbyggede sammenligningsfunktioner er tilgængelige på formelsproget:\r\n        </div>\r\n        <ul>\r\n        <li><code>Comparer.Ordinal</code>:  Bruges til at udføre en nøjagtig sammenligning af ordenstal</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Bruges til at udføre en nøjagtig sammenligning, hvor der ikke skelnes mellem store og små bogstaver </li>\r\n        <li> <code>Comparer.FromCulture</code>: Bruges til at udføre en kulturorienteret sammenligning</li>\r\n        </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Sammenlign \"1\" og \"A\" ved hjælp af landestandarden \"en-US\" for at se, om værdierne er de samme.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i den lokale tidszone. Denne værdi er fast og ændres ikke ved efterfølgende opkald.",
        "Documentation.LongDescription": "Returnerer en værdi for <code>datetime</code>, der er angivet til den aktuelle dato og det aktuelle klokkeslæt i systemet. Denne værdi er fast og ændres ikke ved efterfølgende opkald i modsætning til DateTime.LocalNow, som kan returnere forskellige værdier i løbet af kørslen af et udtryk.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i den lokale tidszone.",
        "Documentation.LongDescription": "Returnerer en værdi for <code>datetime</code>, der er angivet til den aktuelle dato og det aktuelle klokkeslæt i systemet.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i den lokale tidszone. Denne værdi er fast og ændres ikke ved efterfølgende opkald.",
        "Documentation.LongDescription": "Returnerer en værdi for <code>datetime</code>, der er angivet til den aktuelle dato og det aktuelle klokkeslæt i systemet. Den returnerede værdi indeholder oplysninger om tidszone, der repræsenterer den lokale tidszone. Denne værdi er fast og ændres ikke ved efterfølgende opkald i modsætning til DateTimeZone.LocalNow, som kan returnere forskellige værdier i løbet af kørslen af et udtryk.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i UTC (GMT-tidszonen). Denne værdi er fast og ændres ikke ved efterfølgende opkald.",
        "Documentation.LongDescription": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i UTC (GMT-tidszonen). Denne værdi er fast og ændres ikke ved efterfølgende opkald.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i den lokale tidszone.",
        "Documentation.LongDescription": "Returnerer en værdi for <code>datetimezone</code>, der er angivet til den aktuelle dato og det aktuelle klokkeslæt i systemet. \r\n    Den returnerede værdi indeholder oplysninger om tidszone, der repræsenterer den lokale tidszone.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i UTC (GMT-tidszonen).",
        "Documentation.LongDescription": "Returnerer den aktuelle dato og det aktuelle klokkeslæt i UTC (GMT-tidszonen).",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Hent den aktuelle dato og det aktuelle klokkeslæt i UTC.",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "Returnerer et uigennemsigtigt id for den evaluering, der kører i øjeblikket.",
        "Documentation.LongDescription": "Returnerer et uigennemsigtigt id for den evaluering, der kører i øjeblikket.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "Returnerer en uigennemsigtig identifikator for at korrelere indgående anmodninger med udgående anmodninger.",
        "Documentation.LongDescription": "Returnerer en uigennemsigtig identifikator for at korrelere indgående anmodninger med udgående anmodninger.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "Skriver en sporingspost (hvis sporing er aktiveret) og returnerer værdien.",
        "Documentation.LongDescription": "Skriver en sporing <code>message</code>, hvis sporing er aktiveret, og returnerer <code>value</code>. En valgfri parameter, <code>delayed</code>, angiver, om evalueringen af <code>value</code> skal udsættes, til meddelelsen er sporet. <code>traceLevel</code> kan anvende én af følgende værdier:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Spor meddelelsen, før funktionen Text.From aktiveres, og returner resultatet.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "Udbyder af standardidentitet for den aktuelle vært.",
        "Documentation.LongDescription": "Udbyder af standardidentitet for den aktuelle vært.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "Akkumulerer en opsamlingsværdi fra elementer på listen.",
        "Documentation.LongDescription": "Akkumulerer en opsamlingsværdi fra elementerne på listen <code>list</code> ved hjælp af <code>accumulator</code>.\r\n    Du kan angive en valgfri seed-parameter, <code>seed</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Akkumulerer opsamlingsværdien fra elementerne på listen {1, 2, 3, 4, 5} ved hjælp af ((state, current) => state + current ).",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "Opretter en liste over værdier af typen datetimezone med en indledende værdi for værdi, antal og stigende varighed.",
        "Documentation.LongDescription": "Returnerer en liste over værdier af typen <code>datetimezone</code> i størrelsen <code>count</code> og med start ved <code>start</code>. Den angivne stigning, <code>step</code>, er en værdi af typen <code>duration</code>, der lægges til alle værdier.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over 10 værdier med start ved 5 minutter før nytårsdag (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) med en stigning på 1 minut (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "Opretter en liste over værdier af typen datetime med en indledende værdi for værdi, antal og stigende varighed.",
        "Documentation.LongDescription": "Returnerer en liste over værdier af typen <code>datetime</code> i størrelsen <code>count</code> og med start ved <code>start</code>. Den angivne stigning, <code>step</code>, er en værdi af typen <code>duration</code>, der lægges til alle værdier.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over 10 værdier med start ved 5 minutter før nytårsdag (#datetime(2011, 12, 31, 23, 55, 0)) med en stigning på 1 minut (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "Opretter en liste over værdier af typen date med en indledende værdi for værdi, antal og stigende varighed.",
        "Documentation.LongDescription": "Returnerer en liste over værdier af typen <code>date</code> i størrelsen <code>count</code> og med start ved <code>start</code>. Den angivne stigning, <code>step</code>, er en værdi af typen <code>duration</code>, der lægges til alle værdier.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over 5 værdier med start ved nytårsaften (#date(2011, 12, 31)) med en stigning på 1 dag (#duration(1, 0, 0, 0)).",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "Opretter en liste over værdier af typen duration med en indledende værdi for værdi, antal og stigende varighed.",
        "Documentation.LongDescription": "Returnerer en liste over værdier af typen <code>count</code> <code>duration</code> med start ved <code>start</code> og med en stigning på den angivne <code>duration</code> <code>step</code>.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over 5 værdier med start ved 1 time og med en stigning på en time.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "Opretter en liste over værdier.",
        "Documentation.LongDescription": "Opretter en liste over værdier ved hjælp af de angivne funktioner. Funktionen <code>initial</code> genererer en start kandidatværdi, som derefter testes mod <code>condition</code>.\r\n    Hvis kandidatværdien godkendes, returneres den som en del af resultatlisten, og den næste kandidatværdi genereres ved at overføre den nyligt godkendte værdi til <code>next</code>.\r\n    Når en kandidatværdi ikke matcher <code>condition</code>, stopper oprettelsesprocessen for listen.\r\n    Der kan også angives en valgfri parameter, <code>selector</code>, for at transformere elementerne på resultatlisten.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ved at starte ved ti og gentagne gange trække én fra og sikre, at hvert element er større end nul.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "Opret en liste over poster, der indeholder x og y, hvor x er en værdi, og y er en liste. x skal være mindre end 10 og repræsentere antallet af elementer på liste y. Når listen er oprettet, skal der kun returneres x-værdier.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "Indsætter værdier på en liste ved det angivne indeks.",
        "Documentation.LongDescription": "Returnerer en ny liste, der er oprettet ved at indsætte værdierne fra <code>values</code> i <code>list</code> ved <code>index</code>. Den første position på listen er ved indeks 0.\r\n      <ul>\r\n        <li><code>list</code>: Den destinationsliste, hvor værdier skal indsættes.</li>\r\n        <li><code>index</code>: Indeks for destinationslisten (<code>list</code>), hvor værdierne skal indsættes. Den første position på listen er ved indeks 0.</li>\r\n        <li><code>values</code>: Den liste over værdier, som skal indsættes i <code>list</code>.</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Indsæt listen ({3, 4}) i destinationslisten ({1, 2, 5}) ved indeks 2.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "Indsæt en liste med en indlejret liste ({1, {1.1, 1.2}}) i en destinationsliste ({2, 3, 4}) ved indeks 0.",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "Erstatter antallet af talte værdier med start ved positionen med erstatningsværdierne.",
        "Documentation.LongDescription": "Erstatter <code>count</code> værdier i <code>list</code> med listen <code>replaceWith</code> med start ved den angivne position, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Erstat {7, 8, 9} på listen {1, 2, 7, 8, 9, 5} med {3, 4}.",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "Søger på en liste efter den angivne værdi og erstatter den.",
        "Documentation.LongDescription": "Søger på en liste med værdier, <code>list</code>, efter værdien <code>oldValue</code> og erstatter hver forekomst med erstatningsværdien <code>newValue</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Erstat alle \"a\"-værdier på listen {\"a\", \"B\", \"a\", \"a\"} med \"A\".",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "Opretter en liste over værdier af typen time med en indledende værdi for værdi, antal og stigende varighed.",
        "Documentation.LongDescription": "Returnerer en liste over værdier af typen <code>time</code> i størrelsen <code>count</code> og med start ved <code>start</code>. Den angivne stigning, <code>step</code>, er en værdi af typen <code>duration</code>, der lægges til alle værdier.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over 4 værdier med start ved middag (#time(12, 0, 0)) og med en stigning på én time (#duration(0, 1, 0, 0)).",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "Returnerer en liste, hvis elementer er transformeret fra inputlisten ved hjælp af de angivne funktioner.",
        "Documentation.LongDescription": "Returnerer en liste, hvis elementer projiceres fra inputlisten.<br>\r\n    <br>\r\n    Funktionen <code>collectionTransform</code>    transformerer hvert element til en mellemliggende liste, og funktionen <code>resultTransform</code>    modtager det oprindelige element samt et element fra den mellemliggende liste for at konstruere det endelige resultat.<br>\r\n    <br>\r\n    Funktionen <code>collectionTransform</code>    har signaturen <code>(x as any) som liste => ... </code>, hvor <code>x</code> er et element i <code>list</code>.\r\n    Funktionen <code>resultTransform</code>    projicerer resultatets form og har signaturen <code>(x as any, y as any) som enhver => ... </code>, hvor <code>x</code> er et element i <code>list</code>    og <code>y</code> er et element fra den liste, der genereres ved at overføre <code>x</code> til <code>collectionTransform</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Fladgør en liste over personer og deres kæledyr.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "Returnerer et tilfældigt tal.",
        "Documentation.LongDescription": "Returnerer et vilkårligt tal mellem 0 og 1.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Hent et tilfældigt tal.",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "Føjer et felt til en post.",
        "Documentation.LongDescription": "Føjer et felt til en post <code>record</code> med navnet på feltet <code>fieldName</code> og værdien <code>value</code>.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Føj feltet Adresse til posten].",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "Erstatter tekst i det angivne input.",
        "Documentation.LongDescription": "Erstatter teksten <code>old</code> i den oprindelige <code>text</code> med teksten <code>new</code>. Denne erstatningsfunktion kan bruges i <code>List.ReplaceValue</code> og <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Erstat teksten \"hE\" med \"He\" i strengen \"hEllo world\".",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "Erstatter værdier i det angivne input.",
        "Documentation.LongDescription": "Erstatter værdien <code>old</code> i den oprindelige <code>value</code> med værdien <code>new</code>. Denne erstatningsfunktion kan bruges i <code>List.ReplaceValue</code> og <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Erstat værdien 11 med værdien 10.",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Returner et JSON-resultat fra Smartsheet-API'en",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "Foretager et kald til Smartsheet 2.0 REST-API'en på det angivne slutpunkt og returnerer resultaterne som en JSON-post.",
        "Documentation.Examples": [
          {
            "Description": "Udtrækker data fra slutpunktet for arkets Smartsheet-API og med yderligere angivne argumenter",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "En tabel med arkoplysninger som returneret af Smartsheet-API'en"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.ContentsV110",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "RangeStart": "datetime",
        "RangeEnd": "datetime"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "Returnerer en funktion, der ikke udfører opdeling, og returnerer argumenterne som en enkelt elementliste.",
        "Documentation.LongDescription": "Returnerer en funktion, der ikke udfører opdeling, og returnerer argumenterne som en enkelt elementliste.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved mellemrum.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved mellemrum.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input med hvidt mellemrum, hvor anførselstegn behandles som ethvert andet tegn.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "Partitionér tabellen til en liste over tabeller baseret på antallet af grupper og den angivne kolonne.",
        "Documentation.LongDescription": "Partitionér <code>table</code> til en liste over <code>groups</code> antal tabeller baseret på værdien i <code>column</code> og en funktion af typen <code>hash</code>.\r\n    Funktionen <code>hash</code> anvendes på værdien i rækken <code>column</code> for at få en hashværdi for rækken. Hashværdiens modulus <code>groups</code> bestemmer, hvilken af de returnerede tabeller rækken placeres i.\r\n    <ul>\r\n       <li><code>table</code>: Den tabel, der skal partitioneres.</li>\r\n       <li><code>column</code>: Den kolonne, der skal indeholde en hashværdi, for at afgøre, hvilken returneret tabel rækken placeres i.</li>\r\n       <li><code>groups</code>: Antallet af tabeller, som inputtabellen partitioneres til.</li>\r\n       <li><code>hash</code>: Den funktion, der anvendes for at opnå en hashværdi.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Partitionér tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> til to tabeller i kolonne [a] ved at bruge værdien i kolonnerne som hashfunktion.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "Returnerer andelen af <code>text</code> mellem den angivne <code>startDelimiter</code> og <code>endDelimiter</code>.\r\n    En valgfri numerisk værdi, <code>startIndex</code>, angiver, hvilken forekomst af <code>startDelimiter</code> der skal tages i betragtning.\r\n    En valgfri liste, <code>startIndex</code>, angiver, hvilken forekomst af <code>startDelimiter</code> der skal tages i betragtning, samt om indeksering skal foretages fra starten eller slutningen af inputtet.\r\n    <code>endIndex</code> er tilsvarende, bortset fra, at indekseringen foretages i forhold til <code>startIndex</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hent andelen af \"111 (222) 333 (444)\" mellem den første (åbne) parentes og den (første) lukkede parentes, der følger efter.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "Hent andelen af \"111 (222) 333 (444)\" mellem den anden åbne parentes og den første lukkede parentes, der følger efter.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "Hent andelen af \"111 (222) 333 (444)\" mellem den anden åbne parentes regnet fra slutningen og den første lukkede parentes, der følger efter.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "Indsætter én tekstværdi i en anden på en angivet position.",
        "Documentation.LongDescription": "Returnerer resultatet af at indsætte tekstværdien <code>newText</code> i tekstværdien <code>text</code> på position <code>offset</code>. Positioner starter ved tallet 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Indsæt \"C\" mellem \"B\" og \"D\" i \"ABD\".",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "Returnerer et nyt tilfældigt GUID (Globally Unique Identifier).",
        "Documentation.LongDescription": "Returnerer et nyt tilfældigt GUID (Globally Unique Identifier).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "Erstatter alle forekomster af den angivne understreng i teksten.",
        "Documentation.LongDescription": "Returnerer resultatet af at erstatte alle forekomster af tekstværdien <code>old</code> i tekstværdien <code>text</code> med værdien <code>new</code>. Denne funktion skelner mellem store og små bogstaver.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Erstat alle forekomster af \"the\" i en sætning med \"a\".",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "Fjerner et tegnområde og indsætter en ny værdi ved en angivet position.",
        "Documentation.LongDescription": "Returnerer resultatet af at fjerne et antal tegn, <code>count</code>, fra tekstværdien <code>text</code> med start ved position <code>offset</code> og indsætter derefter tekstværdien <code>newText</code> på samme position i <code>text</code>.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Erstat et enkelt tegn ved position 2 i tekstværdien \"ABGF\" med den nye tekstværdi \"CDE\".",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "Føjer en nøgle til den angivne tabeltype.",
        "Documentation.LongDescription": "Føjer en nøgle til den angivne tabeltype.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "Returnerer en liste over identiteter, som betingelsen accepterer.",
        "Documentation.LongDescription": "<p>Brug af den/det angivne <code>identityProvider</code> konverterer <code>condition</code> til listen over identiteter, som <code>condition</code> ville returnere <code>true</code> i alle autorisationskontekster med <code>identityProvider</code> som identitetsudbyderen. Der opstår en fejl, hvis det ikke er muligt at konvertere <code>condition</code> til en liste over identiteter, f.eks. hvis <code>condition</code> konsulterer andre attributter bruger- eller gruppeidentiteter til at træffe en afgørelse.</p>\r\n    <p>Bemærk, at listen over identiteter repræsenterer identiteterne, som de vises i <code>condition</code>, og der udføres ingen normalisering (f.eks gruppeudvidelse) af dem.</p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "Komprimerer en binær værdi ved hjælp af en angivet komprimeringstype.",
        "Documentation.LongDescription": "Komprimerer en binær værdi ved hjælp af en angivet komprimeringstype. Resultatet af dette kald er en komprimeret kopi af inputtet. Der kan være følgende komprimeringstyper:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Komprimer den binære værdi.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "Dekomprimerer en binær værdi ved hjælp af en angivet komprimeringstype.",
        "Documentation.LongDescription": "Dekomprimerer en binær værdi ved hjælp af en angivet komprimeringstype.  Resultatet af dette kald er en dekomprimeret kopi af inputtet. Der kan være følgende komprimeringstyper:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Dekomprimer den binære værdi.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "Returnerer et undersæt af den binære værdi med start ved en forskydning.",
        "Documentation.LongDescription": "Returnerer et undersæt af den binære værdi med start ved forskydningen <code>binary</code>. En valgfri parameter, <code>offset</code>, angiver den maksimale længde i undersættet.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Returnerer et undersæt af den binære værdi med start ved forskydning 6.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "Returnerer et undersæt med længde 2 fra forskydning 6 af den binære værdi.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "Opdeler den angivne binære fil til en liste over binære filer ved hjælp af den angivne sidestørrelse.",
        "Documentation.LongDescription": "Opdeler <code>binary</code> til en liste over binære filer, hvor det første element på outputlisten er en binær fil, der indeholder de første <code>pageSize</code> byte fra\r\n den binære kilde, det næste element på outputlisten er en binær fil, der indeholder den næste <code>pageSize</code> byte fra den binære kilde osv.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "Opretter eller udvider en binær med brugerdefinerede handlere for forespørgsler og handlinger.",
        "Documentation.LongDescription": "<p>Returnerer en visning af <code>binary</code>, hvor funktionerne, der er angivet i<code>handlers</code>, bruges i stedet for standardadfærden for en handling, når handlingen anvendes på visningen.</p>\r\n<p>Hvis <code>binary</code> er angivet, er alle handlerfunktioner valgfrie. Hvis <code>binary</code> ikke er angivet, er handlerfunktionen <code>GetStream</code> påkrævet. Hvis en handlerfunktion ikke er angivet for en handling, anvendes standardadfærden for handlingen på <code>binary</code> i stedet (undtagen i tilfælde af <code>GetExpression</code>).</p>\r\n<p>Handlerfunktioner skal returnere en værdi, der er semantisk ækvivalent med resultatet af at anvende handlingen imod <code>binary</code> (eller den resulterende opfattelse i tilfælde af <code>GetExpression</code>).</p>\r\n<p>Hvis en handlerfunktion giver en fejl, anvendes standardadfærden for handlingen på visningen.</p>\r\n<p><code>Binary.View</code> kan bruges til at implementere foldning til en datakilde – oversættelsen af M-forespørgsler til kildespecifikke handlinger (for eksempel for at downloade en sektion af en fil).</p>\r\n<p>Se den publicerede dokumentation til Power Query brugerdefinerede connector for en mere komplet beskrivelse af <code>Binary.View</code>.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Opret en grundlæggende visning, der ikke kræver adgang til dataene for at bestemme længden.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "Returnerer et binært format med den byterækkefølge, der er angivet af en funktion.",
        "Documentation.LongDescription": "Returnerer et binært format med den byterækkefølge, der er angivet af <code>binaryFormat</code>.  Standardbyterækkefølgen er <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "Returnerer et binært format, der vælger det næste binære format baseret på en værdi, der allerede er læst.",
        "Documentation.LongDescription": "Returnerer et binært format, der vælger det næste binære format baseret på en værdi, der allerede er læst.  Den binære formatværdi, der frembringes af denne funktion, fungerer i faser:<ul>\r\n<li>Det binære format, der er angivet af parameteren <code>binaryFormat</code>, bruges til at læse en værdi.</li>\r\n<li>Den værdi, der overføres til valgfunktionen, som er angivet af parameteren <code>chooseFunction</code>.</li>\r\n<li>Valgfunktionen inspicerer værdien og returnerer et andet binært format.</li>\r\n<li>Det andet binære format bruges til at læse en anden værdi.</li>\r\n<li>Hvis kombinationsfunktionen er angivet, overføres den første og anden værdi til kombinationsfunktionen, og resultatværdien returneres.</li>\r\n<li>Hvis kombinationsfunktionen ikke er angivet, returneres den anden værdi.</li>\r\n<li>Den anden værdi returneres.</li>\r\n</ul>Den valgfrie parameter <code>type</code> angiver den type binært format, der returneres af valgfunktionen.  Der kan angives enten <code>type any</code>, <code>type list</code> eller <code>type binary</code>.  Hvis parameteren <code>type</code> ikke er angivet, bruges <code>type any</code>.   Hvis <code>type list</code> eller <code>type binary</code> bruges, kan systemet returnere en streaming <code>binary</code>- eller <code>list</code>-værdi i stedet for en værdi, der er gemt i bufferen, hvilket kan reducere den mængde hukommelse, der er nødvendig for at læse formatet.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "Læs en liste over byte, hvor antallet af elementer bestemmes af den første byte.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "Læs en liste over byte, hvor antallet af elementer bestemmes af den første byte, og bevar den først læste byte.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "Læs en liste over byte, hvor antallet af elementer bestemmes af den første byte vha. en streamingliste.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "Returnerer et binært format, der læser en gruppe elementer.",
        "Documentation.LongDescription": "Parametrene er som følger:\r\n<ul>\r\n<li>Parameteren <code>binaryFormat</code> angiver det binære format for nøgleværdien.</li>\r\n<li>Parameteren <code>group</code> giver oplysninger om gruppen af kendte elementer.</li>\r\n<li>Den valgfrie parameter <code>extra</code> kan bruges til at angive en funktion, der returnerer en binær formatværdi for værdien, efterfulgt af enhver nøgle, der var uventet.  Hvis parameteren <code>extra</code> ikke angives, vises der en fejl, hvis der er uventede nøgleværdier.</li>\r\n</ul>\r\nParameteren <code>group</code> angiver en liste over elementdefinitioner.  Hver elementdefinition er en liste, der indeholder 3-5 værdier, som følger:\r\n<ul>\r\n<li>Nøgleværdi.  Værdien af den nøgle, der svarer til elementet.  Den skal være entydig inden for elementsættet.</li>\r\n<li>Elementformat.  Det binære format, der svarer til værdien af elementet.  På den måde kan hvert element have sit eget format. </li>\r\n<li>Elementforekomst.  <code>BinaryOccurence. Type</code>Forekomstværdien for hvor ofte elementet forventes at blive vist i gruppen.   Påkrævede elementer, der ikke findes, udløser en fejl.  Påkrævede eller valgfrie dubletværdier håndteres som uventede nøgleværdier.</li>\r\n<li>Standardværdi for element (valgfrit).  Hvis standardelementværdien optræder på listen over elementdefinitioner, og den ikke er null, bliver den brugt i stedet for standarden.  Standarden for gentagne eller valgfrie elementer er null, og standarden for gentagne værdier er en tom liste { }.</li>\r\n<li>Transformation af elementværdi (valgfrit).   Hvis funktionen til transformation af elementværdien optræder på listen over elementdefinitioner, og den ikke er null, bliver den kaldt for at transformere elementværdien, inden den returneres.  Transformationsfunktionen kaldes kun, hvis elementet optræder i inputtet (den bliver aldrig kaldt med standardværdien). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "I det følgende forudsættes en nøgleværdi, der er en enkelt byte med 4 forventede elementer i gruppen, som alle har en byte med data efter nøglen.  Elementet optræder i inputtet, som følger:\r\n<ul>\r\n<li>Nøgle 1 er påkrævet og vises med værdien 11.</li>\r\n<li>Nøgle 2 gentages og vises to gange med værdien 22 og resulterer i værdien { 22, 22 }.</li>\r\n<li>Nøgle 3 er valgfri og vises ikke og resulterer i værdien null.</li>\r\n<li>Nøgle 4 gentages, men vises ikke og resulterer i værdien { }.</li>\r\n<li>Nøgle 5 er ikke en del af gruppen, men vises én gang med værdien 55.  Den ekstra funktion kaldes med nøgleværdien 5 og returnerer formatet svarende til denne værdi (BinaryFormat.Byte).  Værdien 55 læses og fjernes.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "Følgende eksempel illustrerer transformationen af elementværdien og standardelementværdien.   Det gentagne element med nøgle 1 opsummerer listen over værdier, der er læst med List.Sum.  Det valgfrie element med nøgle 2 har standardværdien 123 i stedet for null.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "Returnerer et binært format, der begrænser den mængde data, som kan læses.",
        "Documentation.LongDescription": "Returnerer et binært format, der begrænser den mængde data, som kan læses.  Både <code>BinaryFormat.List</code> og <code>BinaryFormat.Binary</code> kan bruges til at læse indtil slutningen af dataene.  <code>BinaryFormat.Length</code> kan bruges til at begrænse det antal byte, der læses.  Parameteren <code>binaryFormat</code> angiver det binære format, der skal begrænses.  Parameteren <code>length</code> angiver det mindste antal byte, der skal læses.  Parameteren <code>length</code> kan enten være en talværdi eller en binær formatværdi, der angiver formatet af den længdeværdi, der står foran den værdi, der læses.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "Begræns det antal byte, der læses, til 2 ved læsning af en liste over byte.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Begræns antallet af byte ved læsning af en liste over byte til den byteværdi, der står foran listen.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "Returnerer et binært format, der transformerer værdier, der er læst af et andet binært format.",
        "Documentation.LongDescription": "Returnerer et binært format, der transformerer værdier, der er læst af et andet binært format.  Parameteren <code>binaryFormat</code> angiver det binære format, som bruges til at læse værdien.  <code>function</code> kaldes med den læste værdi og returnerer den transformerede værdi.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "Læs en byte, og føj én til den.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "Returnerer en sammenligningsfunktion, som bruger regler for ordenstal til sammenligning af værdier.",
        "Documentation.LongDescription": "Returnerer en sammenligningsfunktion, der bruger ordensregler til at sammenligne de angivne værdier <code>x</code> og <code>y</code>.<br>\r\n      <br>\r\n      En sammenligningsfunktion accepterer to argumenter og returnerer -1, 0 eller 1 baseret på, om den første værdi er mindre end, lig med eller større end den anden.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Ved hjælp af regler for ordenstal skal du sammenligne \"encyclopædia\" med \"encyclopaedia\", for at se, om de er ækvivalenter. Bemærk, at de er ækvivalenter, når du bruger <code>Comparer.FromCulture(\"en-US\")</code>. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "Returnerer en sammenligningsfunktion, hvor der ikke skelnes mellem store og små bogstaver, og hvor der bruges regler for ordenstal til at sammenligne værdier.",
        "Documentation.LongDescription": "Returnerer en sammenligningsfunktion, hvor der ikke skelnes mellem store og små bogstaver, og som bruger ordenstalsregler til at sammenligne de angivne værdier <code>x</code> og <code>y</code>.<br>\r\n        <br>\r\n        En sammenligningsfunktion accepterer to argumenter og returnerer -1, 0 eller 1 baseret på, om den første værdi er mindre end, lig med eller større end sekundet.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Når der bruges regler for ordenstal, hvor der ikke skelnes mellem store og små bogstaver, kan \"Abc\" sammenlignes med \"abc\". Bemærk, at \"Abc\" er mindre end \"abc\", når koden <code>Comparer.Ordinal</code>. bruges ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "Returnerer en egenskab for en dimensionsattribut.",
        "Documentation.LongDescription": "Returnerer egenskaben <code>propertyName</code> for dimensionsattributten <code>attribute</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "Returnerer en målingsegenskab (celleegenskab).",
        "Documentation.LongDescription": "Returnerer egenskaben <code>propertyName</code> for målingen <code>measure</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL-forespørgselskilde",
        "Documentation.LongDescription": "Definer en Databricks-datakilde til kørsel af SQL-forespørgsler"
      },
      "ReturnType": "Databricks SQL-forespørgsel",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL-forespørgselskilde",
        "Documentation.LongDescription": "Definer en Databricks-datakilde til kørsel af SQL-forespørgsler"
      },
      "ReturnType": "Databricks SQL-forespørgsel",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "Tilføjer de angivne dage efter datoen.",
        "Documentation.LongDescription": "Returnerer resultaterne for <code>date</code>, <code>datetime</code> eller <code>datetimezone</code> efter at have føjet <code>numberOfDays</code> dage til værdien af typen <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: Den værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som dage føjes til.</li>\r\n      <li><code>numberOfDays</code>: Det antal dage, der skal tilføjes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Føj 5 dage til værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen 14-05-2011.",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "Tilføjer de angivne måneder efter datoen.",
        "Documentation.LongDescription": "Returnerer resultaterne for <code>date</code>, <code>datetime</code> eller <code>datetimezone</code> efter at have føjet <code>numberOfMonths</code> måneder til værdien af typen <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Den værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som måneder føjes til.</li>\r\n        <li><code>numberOfMonths</code>: Det antal måneder, der skal tilføjes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Føj 5 måneder til værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen 14-05-2011.",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "Føj 18 måneder til værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen og klokkeslættet 14-05-2011, 08:15:22.",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "Tilføjer de angivne kvartaler efter datoen.",
        "Documentation.LongDescription": "Returnerer resultaterne for <code>date</code>, <code>datetime</code> eller <code>datetimezone</code> efter at have føjet <code>numberOfQuarters</code> kvartaler til værdien af typen <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: Den værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som kvartaler føjes til.</li>\r\n      <li><code>numberOfQuarters</code>: Det antal kvartaler, der skal tilføjes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Føj 1 kvartal til værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen 14-05-2011.",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "Tilføjer de angivne uger efter datoen.",
        "Documentation.LongDescription": "Returnerer resultaterne for <code>date</code>, <code>datetime</code> eller <code>datetimezone</code> efter at have føjet <code>numberOfWeeks</code> uger til værdien af typen <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: Den værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som uger føjes til.</li>\r\n      <li><code>numberOfWeeks</code>: Det antal uger, der skal tilføjes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Føj 2 uger til værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen 14-05-2011.",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "Tilføjer de angivne år efter datoen.",
        "Documentation.LongDescription": "Returnerer resultaterne for <code>date</code>, <code>datetime</code> eller <code>datetimezone</code> efter at have føjet <code>numberOfYears</code> til værdien af typen <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Den værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som år føjes til.</li>\r\n        <li><code>numberOfYears</code>: Det antal år, der skal tilføjes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Føj 4 år til værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen 14-05-2011.",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "Føj 10 år til værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen og klokkeslættet 14-05-2011, 08:15:22.",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det næste antal dage, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle dag.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal dage, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for den aktuelle dag.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>days</code>: Antallet af dage.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om dagen efter det aktuelle systemklokkeslæt ligger i de næste to dage.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det næste antal måneder, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet aktuelle dato og tid på systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle måned.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal måneder, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle måned.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>months</code>: Antallet af måneder.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om måneden efter det aktuelle systemklokkeslæt ligger i de næste to måneder.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det næste antal kvartaler, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle kvartal.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal kvartaler, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle kvartal.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>quarters</code>: Antallet af kvartaler.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om kvartalet efter det aktuelle systemklokkeslæt ligger i de næste to kvartaler.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det næste antal uger, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle uge.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal uger, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle uge.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>weeks</code>: Antallet af uger.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om ugen efter det aktuelle systemklokkeslæt ligger i de næste to uger.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det næste antal år, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle år.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal år, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle år.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>years</code>: Antallet af år.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om året efter det aktuelle systemklokkeslæt ligger i de næste to år.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af det forrige antal dage, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle dag.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det forrige antal dage i forhold til den aktuelle dato og det aktuelle klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle dag.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>days</code>: Antallet af dage.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om dagen før det aktuelle systemklokkeslæt ligger på de forrige to dage.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af det forrige antal måneder, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for den aktuelle måned.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det forrige antal måneder, fastlagt i forhold aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle måned.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>months</code>: Antallet af måneder.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om måneden før det aktuelle systemklokkeslæt ligger i de forrige to måneder.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af det forrige antal kvartaler, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle kvartal.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af det forrige antal kvartaler, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle kvartal.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>quarters</code>: Antallet af kvartaler.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om kvartalet før det aktuelle systemklokkeslæt ligger i de forrige to kvartaler.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det forrige antal uger, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle uge.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det forrige antal uger, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer værdien False, når den modtager en værdi, der indtræffer i løbet af den aktuelle uge. \r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>weeks</code>: Antallet af uger.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om ugen før det aktuelle systemklokkeslæt ligger i de forrige to uger.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af det forrige antal år, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle år.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af det forrige antal år, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>years</code>: Antallet af år.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om året før det aktuelle systemklokkeslæt ligger i de forrige to år.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "Føjer tidszoneoplysninger til datetime-værdien.",
        "Documentation.LongDescription": "Føjer tidszoneoplysninger til værdien <code>dateTime</code>. Tidszoneoplysningerne omfatter <code>timezoneHours</code> og eventuelt <code>timezoneMinutes</code>, som angiver den ønskede forskydning fra UTC-tid.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Angiv tidszonen til UTC+7:30 (7 timer og 30 minutter efter UTC).",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "Angiver, om denne datetime optræder i løbet af det næste antal timer, fastlagt i forhold til den aktuelle dato og tid i systemet. Bemærk, at denne funktion returnerer false, når den modtager en værdi, der opstår inden for den aktuelle time.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal timer, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle time.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, som skal evalueres.</li>\r\n      <li><code>hours</code>: Antallet af timer.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om timen efter den aktuelle systemtid er i de næste to timer.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "Angiver, om denne datetime indtræffer i løbet af det næste antal minutter, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle minut.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal minutter, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle minut.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>minutes</code>: Antallet af minutter.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om minuttet efter den aktuelle systemtid er i de næste to minutter.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "Angiver, om denne datetime er i løbet af det næste antal sekunder, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle sekund.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste antal sekunder, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet det aktuelle sekund.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>seconds</code>: Antallet af sekunder.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om sekundet efter den aktuelle systemtid er i de næste to sekunder.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "Angiver, om denne datetime er indtruffet i løbet af det forrige antal timer, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når der sendes en værdi, der indtræffer i løbet af den aktuelle time.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af det forrige antal timer, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle time.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, som skal evalueres.</li>\r\n      <li><code>hours</code>: Antallet af timer.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om timen før den aktuelle systemtid er i de forrige to timer.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "Angiver, om denne datetime er indtruffet i løbet af det forrige antal minutter, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle minut.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det forrige antal minutter, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for det aktuelle minut.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>minutes</code>: Antallet af minutter.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om minuttet før den aktuelle systemtid er i de forrige to minutter.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "Angiver, om denne datetime er indtruffet i løbet af det forrige antal sekunder, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle sekund.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af det forrige antal sekunder, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle sekund.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      <li><code>seconds</code>: Antallet af sekunder.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om sekundet før den aktuelle systemtid er i de forrige to sekunder.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "Ændrer tidszonen i værdien.",
        "Documentation.LongDescription": "Ændrer tidszoneoplysninger i værdien af typen datetimezone, <code>dateTimeZone</code>, til de nye tidszoneoplysninger, der leveres af <code>timezoneHours</code> og eventuelt af <code>timezoneMinutes</code>.\r\n    Hvis <code>dateTimeZone</code> ikke har en tidszonekomponent, udløses der en undtagelse.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Skift tidszoneoplysninger for #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) til 8 timer.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "Skift tidszoneoplysninger for #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) til -30 minutter.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "Får adgang til en værdi efter navn i et integreret miks.",
        "Documentation.LongDescription": "Får adgang til en værdi efter navn i et integreret miks.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "Opretter en funktion med en bestemt parametersignatur oven på en funktion, der tager et enkelt listeargument",
        "Documentation.LongDescription": "Tager en unær funktion <code>function</code> og opretter en ny funktion med typen <code>functionType</code>, der opretter en liste ud fra argumenterne og overfører den til <code>function</code>.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Konverterer List.Sum til en funktion med to argumenter, hvis argumenter lægges sammen",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "Konverterer en funktion, der tager en liste, til en funktion med to argumenter",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "Udløser den angivne funktion",
        "Documentation.LongDescription": "Udløser den angivne funktion ved hjælp af den angivne liste over argumenter og returnerer resultatet.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Udløser Record.FieldNames med ét argument [A=1,B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "Starter den givne funktion, når den angivne varighed overskrides.",
        "Documentation.LongDescription": "Returnerer resultatet af start af <code>function</code>, når varigheden <code>delay</code> overskrides.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "Opretter en skalarfunktion oven på en vektorfunktion, så flere aktiveringer batchkøres.",
        "Documentation.LongDescription": "<p>Returnerer en skalarfunktion af typen <code>scalarFunctionType</code>, der kalder <code>vectorFunction</code> med en enkelt række argumenter og returnerer sit enkelte output. Og når skalarfunktion gentagne gange anvendes for hver række i en tabel med input, f.eks Table.AddColumn, anvendes <code>vectorFunction</code> i stedet på én gang for alle input. </p>\r\n<p><code>vectorFunction</code> vil blive overført til en tabel, hvor kolonnernes navn og placering matcher parametrene i <code>scalarFunctionType</code>. Hver række i denne tabel indeholder argumenterne til ét kald til skalarfunktionen med de kolonner, der svarer til parametrene for <code>scalarFunctionType</code>. </p>\r\n<p><code>vectorFunction</code> skal returnere en liste med samme længde som inputtabellen, hvis element på hver position skal være det samme resultat som evalueringen af skalarfunktionen i inputrækken på samme placering. </p>\r\n<p>Inputtabellen forventes at blive streamet ind, så <code>vectorFunction</code> forventes at streame outputtet, når der kommer input ind, og skal kun arbejde med én portion af inputtet ad gangen. <code>vectorFunction</code> må især ikke optælle sin inputtabel mere end én gang.</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "Opretter en post, der repræsenterer et geografisk punkt fra dele.",
        "Documentation.LongDescription": "Opretter en poststruktur, der repræsenterer et geografisk punkt fra dets bestanddele, såsom længdegrad, breddegrad, og hvis den er til stede, elevation (Z) og måling (M). Der kan angives et valgfrit rumligt referencesystem-id (SRID), hvis det adskiller sig fra standardværdien (4326).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "Opretter en poststruktur, der repræsenterer et geometrisk punkt fra dele.",
        "Documentation.LongDescription": "Opretter en post, der repræsenterer et geometrisk punkt fra dets bestanddele, såsom X-koordinat, Y-koordinat, og hvis den er til stede, Z-koordinat (Z) og måling (M). Der kan angives et valgfrit rumligt referencesystem-id (SRID), hvis det adskiller sig fra standardværdien (0).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "Opretter en identitet.",
        "Documentation.LongDescription": "Opretter en identitet.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "Bestemmer, om en identitet er medlem af en identitetssamling.",
        "Documentation.LongDescription": "Bestemmer, om en identitet er medlem af en identitetssamling.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "Returnerer en liste, der består af alle forskydningselementer med ulige numre på en liste.",
        "Documentation.LongDescription": "Returnerer en liste, der består af alle forskydningselementer med ulige numre på en liste. Skifter mellem at hente og sende værdier fra listen <code>list</code>, afhængigt af parametrene.\r\n    <ul>\r\n    <li><code>count</code>: Angiver det antal værdier, der sendes hver gang.</li>\r\n    <li><code>repeatInterval</code>: Et valgfrit gentagelsesinterval, der angiver, hvor mange værdier der er lagt til mellem de sendte værdier.</li>\r\n    <li><code>offset</code>: En valgfri forskydningsparameter for at starte afsendelse af værdier ved den første forskydning.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste fra {1..10}, der sender det første tal.",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "Opret en liste fra {1..10}, der springer hvert andet tal over.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "Opret en liste fra {1..10}, der starter ved 1 og sender hvert andet tal.",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "Opret en liste fra {1..10}, der starter ved 1, springer over én værdi, beholder to værdier osv.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "Angiver, om listen indeholder værdien.",
        "Documentation.LongDescription": "Angiver, om listen <code>list</code> indeholder værdien <code>value</code>.\r\n    Returnerer true, hvis værdien blev fundet på listen. Ellers returneres false. Du kan angive en valgfri kriterieværdi for ligningen, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om listen {1, 2, 3, 4, 5} indeholder 3.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om listen {1, 2, 3, 4, 5} indeholder 6.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "Angiver, om en liste indeholder alle værdierne på en anden liste.",
        "Documentation.LongDescription": "Angiver, om listen <code>list</code> indeholder alle værdierne på en anden liste, <code>values</code>.\r\n    Returnerer true, hvis værdien blev fundet på listen. Ellers returneres false. Du kan angive en valgfri kriterieværdi for ligningen, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om listen {1, 2, 3, 4, 5} indeholder 3 og 4.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om listen {1, 2, 3, 4, 5} indeholder 5 og 6.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "Angiver, om en liste indeholder en af værdierne på en anden liste.",
        "Documentation.LongDescription": "Angiver, om listen <code>list</code> indeholder en af værdierne på en anden liste, <code>values</code>.\r\n        Returnerer true, hvis værdien blev fundet på listen. Ellers returneres false. Du kan angive en valgfri kriterieværdi for ligningen, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om listen {1, 2, 3, 4, 5} indeholder 3 eller 9.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om listen {1, 2, 3, 4, 5} indeholder 6 eller 7.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "Returnerer kovariancen mellem de to lister med tal.",
        "Documentation.LongDescription": "Returnerer kovariancen mellem to lister, <code>numberList1</code> og <code>numberList2</code>. <code>numberList1</code> og <code>numberList2</code> skal indeholde det samme antal værdier af typen <code>number</code>.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Beregn kovariancen mellem to lister.",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "Returnerer differencen mellem de to angivne lister.",
        "Documentation.LongDescription": "Returnerer de elementer på listen <code>list1</code>, der ikke vises på listen <code>list2</code>. Dublerede værdier understøttes. \r\n    Du kan angive en valgfri kriterieværdi for ligningen, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Find de elementer på listen {1, 2, 3, 4, 5}, der ikke vises i {4, 5, 3}.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "Find de elementer på listen {1, 2}, der ikke vises i {1, 2, 3}.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "Returnerer en liste over værdier (herunder postfelter), der indeholder den angivne tekst.",
        "Documentation.LongDescription": "Returnerer en liste over værdierne fra listen <code>list</code>, som indeholdt værdien <code>text</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find de tekstværdier på listen {\"a\", \"b\", \"ab\"}, der stemmer overens med \"a\". ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "Returnerer det første sæt elementer på listen ved at angive, hvor mange elementer der skal returneres, eller en kvalificerende betingelse.",
        "Documentation.LongDescription": " <ul>\r\n  <li>Hvis der er angivet et antal, returneres der elementer op til det angivne antal. </li>\r\n  <li>Hvis der er angivet en betingelse, returneres alle elementer, der i starten opfylder betingelsen. Når et element ikke opfylder betingelsen, tages der ikke flere elementer med i betragtning. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find de første værdier på listen {3, 4, 5, -1, 7, 8, 2}, der er større end 0.",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "Returnerer true, hvis betingelsesfunktionen er tilfreds med alle værdier på listen.",
        "Documentation.LongDescription": "Returnerer <code>true</code>, hvis betingelsesfunktionen <code>condition</code> er tilfreds med alle værdier på listen <code>list</code>. Ellers returneres <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om alle værdierne på listen {11, 12, 13} er større end 10.",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om alle værdierne på listen {1, 2, 3} er større end 10.",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "Returnerer true, hvis betingelsesfunktionen er tilfreds med en hvilken som helst værdi.",
        "Documentation.LongDescription": "Returnerer <code>true</code>, hvis betingelsesfunktionen <code>condition</code> er tilfreds med en hvilken som helst værdi på listen <code>list</code>. Ellers returneres <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om nogen af værdierne på listen {9, 10, 11} er større end 10.",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om nogen af værdierne på listen {1, 2, 3} er større end 10.",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "Returnerer den eller de maksimale værdier på listen. Antallet af værdier, der skal returneres, eller en filtreringsbetingelse skal angives.",
        "Documentation.LongDescription": "Returnerer den eller de maksimale værdier på listen, <code>list</code>.\r\n    Når rækkerne er sorteret, kan valgfrie parametre angives for yderligere at filtrere resultatet. Den valgfri parameter <code>countOrCondition</code> angiver antallet af værdier, der skal returneres, eller en filtreringsbetingelse. Den valgfri parameter <code>comparisonCriteria</code> angiver, hvordan man sammenligner værdier på listen.\r\n <ul>\r\n        <li> <code>list</code>: Listen med værdier.</li>\r\n        <li> <code>countOrCondition</code>: Hvis et nummer er angivet, returneres en liste med op til <code>countOrCondition</code> elementer i stigende rækkefølge. Hvis en betingelse er angivet, returneres en liste over elementer, der oprindeligt opfylder betingelsen. Når et element ikke opfylder betingelsen, tages der ikke flere elementer i betragtning.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Valgfri]</i> En valgfri <code>comparisonCriteria</code> værdi kan angives for at bestemme, hvordan elementerne på listen skal sammenlignes. Hvis denne parameter er nul, bruges standardsammenligningen.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "Returnerer den eller de mindste værdier på listen. Antallet af værdier, der skal returneres, eller en filtreringsbetingelse kan angives.",
        "Documentation.LongDescription": "Returnerer den eller de mindste værdier på listen, <code>list</code>.\r\n    Parameteren, <code>countOrCondition</code>, angiver antallet af værdier, der skal returneres, eller en filtreringsbetingelse. Den valgfri parameter, <code>comparisonCriteria</code>, angiver, hvordan man sammenligner værdier på listen.\r\n <ul>\r\n        <li> <code>list</code>: Listen med værdier.</li>\r\n        <li> <code>countOrCondition</code>: Hvis et nummer er angivet, returneres en liste med op til <code>countOrCondition</code> elementer i stigende rækkefølge. Hvis en betingelse er angivet, returneres en liste over elementer, der oprindeligt opfylder betingelsen. Når et element ikke opfylder betingelsen, tages der ikke flere elementer i betragtning. Hvis denne parameter er nul, returneres den mindste værdi på listen.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Valgfri]</i> En valgfri <code>comparisonCriteria</code> værdi kan angives til at bestemme, hvordan man sammenligner elementerne på listen. Hvis denne parameter er nul, bruges standardsammenligningen.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find de 5 mindste værdier på listen <code>{3, 4, 5, -1, 7, 8, 2}</code>.",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "Returnerer en liste over tal med en indledende værdi for værdi, antal og valgfri forøgelse.",
        "Documentation.LongDescription": "Returnerer en liste over tal med en indledende værdi for værdi, antal og valgfri forøgelse. Standardværdien for forøgelse er 1.\r\n<ul>\r\n   <li><code>start</code>: Den første værdi på listen.</li>\r\n   <li><code>count</code>: Det antal værdier, der skal oprettes.</li>\r\n   <li><code>increment</code>: <i>[Valgfrit]</i> Den værdi, der skal øges med. Hvis den udelades, øges værdier med 1.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over 10 tal efter hinanden, som starter med 1.",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "Opret en liste over 10 tal, der starter med 1 med en forøgelse på 2 for hvert efterfølgende tal.",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "Returnerer en eller flere eksempelpercentiler, der svarer til de angivne sandsynligheder.",
        "Documentation.LongDescription": "Returnerer en eller flere eksempelfraktiler for listen <code>list</code>. Hvis værdien <code>percentiles</code> er et tal mellem 0,0 og 1,0, behandles det som en fraktil, og resultatet bliver\r\n    en enkelt værdi, der svarer til sandsynligheden. Hvis værdien <code>percentiles</code> er en liste med tal med værdier mellem 0,0 og 1,0, vil resultatet være en liste over percentiler\r\n    svarende til inputsandsynligheden. Indstillingen PercentileMode i <code>options</code> kan bruges af erfarne brugere til at vælge en mere specifik interpolationsmetode, men det anbefales ikke til de fleste formål.\r\n    De foruddefinerede symboler <code>PercentileMode.ExcelInc</code> og <code>PercentileMode.ExcelExc</code> passer til de interpolationsmetoder, der bruges af Excel-funktionerne\r\n    <code>PERCENTILE.INC</code> og <code>PERCENTILE.EXC</code>. Standardfunktionsmåden svarer til <code>PercentileMode.ExcelInc</code>. Symbolerne\r\n    <code>PercentileMode.SqlCont</code> og <code>PercentileMode.SqlDisc</code> stemmer overens med SQL Server-adfærden for henholdsvis <code>PERCENTILE_CONT</code> og\r\n    <code>PERCENTILE_DISC</code>.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find den første kvartil på listen <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Find listens kvartiler <code> {5, 3, 1, 7, 9} </code> ved hjælp af en interpolationsmetode, der matcher Excels <code>PERCENTILE.EXC</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "Returnerer forskydningen for en værdi på en liste.",
        "Documentation.LongDescription": "Returnerer den forskydning, hvor værdien <code>value</code> vises på listen <code>list</code>. Returnerer -1, hvis værdien ikke vises.\r\n    Du kan angive en valgfri forekomstparameter, <code>occurrence</code>.\r\n<ul>\r\n   <li><code>occurrence</code>: Det højeste antal forekomster, der kan rapporteres.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Find den position på listen {1, 2, 3}, hvor værdien 3 vises.",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "Returnerer første forskydning for en værdi på en liste.",
        "Documentation.LongDescription": "Returnerer forskydningen på listen <code>list</code> for første forekomst af en værdi på en liste <code>values</code>. Returnerer -1, hvis der ikke blev fundet nogen forekomster.\r\n    Du kan angive en valgfri forekomstparameter, <code>occurrence</code>.\r\n<ul>\r\n   <li><code>occurrence</code>: Det højeste antal forekomster, der kan returneres.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Find den første position på listen {1, 2, 3}, hvor værdien 2 eller 3 vises.",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "Returnerer et undersæt af listen med start ved en forskydning.",
        "Documentation.LongDescription": "Returnerer et undersæt af listen med start ved forskydningen <code>list</code>. En valgfri parameter, <code>offset</code>, angiver det højeste antal elementer i undersættet.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find undersættet med start ved forskydning 6 på listen over tallene 1-10.",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "Find undersættet med længden 2 fra forskydning 6 på listen over tallene 1-10.",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "Fjerner elementer fra liste1, der findes på listen.",
        "Documentation.LongDescription": "Fjerner alle forekomster af de angivne værdier i <code>list2</code> fra <code>list1</code>. Hvis værdierne i <code>list2</code> ikke findes i <code>list1</code>, returneres den oprindelige liste.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Fjern elementerne på listen {2, 4, 6} fra listen {1, 2, 3, 4, 2, 5, 5}.",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "Fjerner alle forekomster af inputværdierne.",
        "Documentation.LongDescription": "Fjerner alle forekomster af de angivne værdier i <code>list2</code> fra listen <code>list1</code>. Hvis værdierne i <code>list2</code> ikke findes i <code>list1</code>, returneres den oprindelige liste.\r\n    Du kan angive en valgfri kriterieværdi for ligningen, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra {1, 2, 3, 4, 5, 5} uden {1, 5}.",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "Fjerner antallet af talte værdier med start ved den angivne position.",
        "Documentation.LongDescription": "Fjerner <code>count</code> værdier i <code>list</code> med start ved den angivne position, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Fjerner 3 værdier på listen {1, 2, 3, 4, -6, -2, -1, 5} med start ved indeks 4.",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "Returnerer en liste, der tæller gentagelser på den oprindelige liste.",
        "Documentation.LongDescription": "Returnerer en liste, der indeholder <code>count</code> gentagelser fra den oprindelige liste, <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste, hvor {1, 2} gentages 3 gange.",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "Anvender de enkelte erstatninger af { old, new }.",
        "Documentation.LongDescription": "Udfører de angivne erstatninger på listen <code>list</code>. En erstatningshandling <code>replacements</code> består af en liste med to værdier, den gamle værdi og den nye værdi, som findes på en liste.\r\n    Du kan angive en valgfri kriterieværdi for ligningen, <code>equationCriteria</code>, for at styre kvalitetstesten.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra {1, 2, 3, 4, 5}, hvor værdien 5 erstattes med -5, og værdien 1 erstattes med -1.",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "Returnerer en liste over værdier, der opfylder betingelsen.",
        "Documentation.LongDescription": "Returnerer en liste over værdier fra listen <code>list</code>, som opfylder den valgte betingelse <code>selection</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find de værdier på listen {1, -3, 4, 9, -2}, der er større end 0.",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "Opdeler den angivne liste til en liste med lister ved hjælp af den angivne sidestørrelse.",
        "Documentation.LongDescription": "Opdeler <code>list</code> til en liste med lister, hvor det første element på outputlisten er en liste, der indeholder de første <code>pageSize</code> elementer fra\r\n    kildelisten. Det næste element på outputlisten er en liste, der indeholder de næste <code>pageSize</code> elementer fra kildelisten osv.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "Returnerer en ny liste over de værdier, der er beregnet på listen.",
        "Documentation.LongDescription": "Returnerer en ny liste over værdier ved at anvende transformationsfunktionen <code>transform</code> på listen <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Føj 1 til de enkelte værdier på listen {1, 2}.",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "Returnerer arcus tangens til divisionen af de to tal.",
        "Documentation.LongDescription": "Returnerer arcus tangens til divisionen af de to tal, <code>y</code> og <code>x</code>. Divisionen oprettes som <code>y</code>/<code>x</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "Returnerer resultatet af at udføre en bitvis \"And\"-handling mellem de to input.",
        "Documentation.LongDescription": "Returnerer resultatet af at udføre en bitvis \"And\"-handling mellem <code>number1</code> og <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "Returnerer resultatet af at udføre en bitvis \"Or\"-handling mellem de to input.",
        "Documentation.LongDescription": "Returnerer resultatet af at udføre en bitvis \"Or\"-handling mellem <code>number1</code> og <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "Skifter bitsættet til venstre.",
        "Documentation.LongDescription": "Returnerer resultatet af at udføre et bitvis skift til venstre på <code>number1</code> med det angivne antal bit <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "Skifter bitsættet til højre.",
        "Documentation.LongDescription": "Returnerer resultatet af at udføre et bitvis skift til højre på <code>number1</code> med det angivne antal bit <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "Returnerer resultatet af at udføre en bitvis \"XOR\" (Exclusive-OR) mellem de to input.",
        "Documentation.LongDescription": "Returnerer resultatet af at udføre en bitvis \"XOR\" (Exclusive-OR) mellem <code>number1</code> og <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "Returnerer antallet af entydige kombinationer.",
        "Documentation.LongDescription": "Returnerer antallet af entydige kombinationer fra en liste over elementer, <code>setSize</code>, med den angivne kombinationsstørrelse, <code>combinationSize</code>.\r\n<ul>\r\n    <li><code>setSize</code>: Antallet af elementer på listen.</li>\r\n    <li><code>combinationSize</code>: Antallet af elementer i de enkelte kombinationer.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Find antallet af kombinationer fra i alt fem elementer, når de enkelte kombinationer er en gruppe på tre.",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "Dividerer to tal og returnerer heltalsdelen af resultatet.",
        "Documentation.LongDescription": "Returnerer heltalsdelen af resultatet efter at have divideret et tal, <code>number1</code>, med et andet tal, <code>number2</code>.\r\n    Hvis <code>number1</code> eller <code>number2</code> er null, returnerer <code>Number.IntegerDivide</code> null.\r\n      <ul>\r\n        <li><code>number1</code>: Dividenden.</li>\r\n        <li><code>number2</code>: Divisoren.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Divider 6 med 4.",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "Divider 8,3 med 3.",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "Heltallet dividerer to tal og returnerer resten.",
        "Documentation.LongDescription": "Returnerer den rest, der er tilbage efter at have divideret <code>number</code> med <code>divisor</code> for et heltal.\r\n    Hvis <code>number</code> eller <code>divisor</code> er null, returnerer <code>Number.Mod</code> null.\r\n      <ul>\r\n        <li><code>number</code>: Dividenden.</li>\r\n        <li><code>divisor</code>: Divisoren.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Find resten, når du dividerer 5 med 3.",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "Returnerer antallet af permutationer.",
        "Documentation.LongDescription": "Returnerer antallet af permutationer, der kan oprettes ud fra et antal elementer, <code>setSize</code>, med en angivet permutationsstørrelse, <code>permutationSize</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Find antallet af permutationer fra i alt fem elementer i grupper på tre.",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "Opløfter et tal til en angivet potens.",
        "Documentation.LongDescription": "Returnerer resultatet af at opløfte <code>number</code> til potensen <code>power</code>.\r\n    Hvis <code>number</code> eller <code>power</code> er null, returnerer <code>Number.Power</code> null.\r\n      <ul>\r\n        <li><code>number</code>: Grundtallet.</li>\r\n        <li><code>power</code>: Eksponenten.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Find værdien for 5 opløftet til potensen 3 (5 i tredje potens).",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "Returnerer et tilfældigt tal mellem de to tal.",
        "Documentation.LongDescription": "Returnerer et tilfældigt tal mellem <code>bottom</code> og <code>top</code>.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Hent et tilfældigt tal mellem 1 og 5.",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "Returnerer værdien for det angivne felt i en post.",
        "Documentation.LongDescription": "Returnerer værdien for det angivne felt <code>field</code> i posten <code>record</code>. Hvis feltet ikke blev fundet, udløses der en undtagelse.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find værdien for feltet \"CustomerID\" i posten.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "Returnerer værdien for det angivne felt i en post eller standardværdien, hvis feltet ikke blev fundet.",
        "Documentation.LongDescription": "Returnerer værdien for det angivne felt <code>field</code> i posten <code>record</code>. Hvis feltet ikke blev fundet, returneres den valgfrie værdi <code>defaultValue</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find værdien for feltet \"Phone\" i posten, eller returner null, hvis den ikke findes.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "Find værdien for feltet \"Phone\" i posten, eller returner standardværdien, hvis den ikke findes.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "Returnerer en post med en liste over feltværdier og et sæt felter.",
        "Documentation.LongDescription": "Returnerer en post med en <code>list</code> over feltværdier og et sæt felter.  <code>fields</code> kan enten angives ved en liste med tekstværdier eller en posttype.  Der udløses en fejl, hvis feltet ikke er entydigt.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Opret en post ud fra en liste over feltværdier og en liste over feltnavne.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Opret en post ud fra en liste over feltværdier og en posttype.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "Angiver, om posten indeholder angivne felter.",
        "Documentation.LongDescription": "Angiver, om posten <code>record</code> indeholder de felter, der er angivet i <code>fields</code>, ved at returnere en logisk værdi (true eller false).\r\n    Der kan angives flere feltværdier ved hjælp af en liste.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollér, om posten indeholder feltet \"CustomerID\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "Kontrollér, om posten indeholder feltet \"CustomerID\" og \"Address\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "Fjerner det eller de angivne felter fra inputposten.",
        "Documentation.LongDescription": "Returnerer en post, der fjerner alle de felter, som er angivet på listen <code>fields</code>, fra inputtet <code>record</code>. Hvis det angivne felt ikke findes, udløses der en undtagelse.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Fjern feltet \"Price\" fra posten.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "Fjern felterne \"Price\" og \"Item\" fra posten.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "Anvender nye navne fra en liste i formatet { old, new }.",
        "Documentation.LongDescription": "Returnerer en post efter at have omdøbt felter i inputtet <code>record</code> til de nye feltnavne, der er angivet på listen <code>renames</code>. Hvis flere felter skal omdøbes, kan der bruges en indlejret liste ({ {old1, new1}, {old2, new2} }.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Omdøb feltet \"UnitPrice\" til \"Price\" fra posten.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "Omdøb felterne \"UnitPrice\" til \"Price\" og \"OrderNum\" til \"OrderID\" fra posten.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "Omarrangerer det eller de angivne felter i den nye rækkefølge.",
        "Documentation.LongDescription": "Returnerer en post efter at have omarrangeret felterne i <code>record</code> i den feltrækkefølge, der er angivet på listen <code>fieldOrder</code>. Feltværdier bevares, og felter, der ikke er anført i <code>fieldOrder</code>, forbliver på deres oprindelige placering.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Omarranger nogle af felterne i posten.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "Returnerer en post, som kun indeholder de angivne felter.",
        "Documentation.LongDescription": "Returnerer en post, der kun indeholder de felter, som er angivet på listen <code>fields</code>, fra inputtet <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Vælg felterne \"Item\" og \"Price\" i posten.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "Returnerer en post efter at have anvendt de angivne transformationer.",
        "Documentation.LongDescription": "Returnerer en post efter at have anvendt de transformationer, der er angivet på listen <code>transformOperations</code>, på <code>record</code>.\r\n    Et eller flere felter kan transformeres på et givent tidspunkt. \r\n      <div>Hvis der transformeres et enkelt felt, forventes <code>transformOperations</code> at være en liste med to elementer. Det første element i <code>transformOperations</code> angiver et feltnavn, og det andet element i <code>transformOperations</code> angiver den funktion, der skal bruges til transformationen. Eksempel <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>Hvis flere felter transformeres, forventes <code>transformOperations</code> at være en liste over lister, hvor alle de indeholdte lister er et par bestående af feltnavn og en transformationshandling. Eksempel <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Konvertér feltet \"Pris\" til et tal.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "Konvertér felterne \"Ordre-id\" og \"Pris\" til tal.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste med tekst i overensstemmelse med en overgang fra én slags tegn til et andet. Parametrene {0} og {1} kan enten være en liste over tegn eller en funktion, som tager et tegn og returnerer true/false.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst på en liste med tekst i overensstemmelse med en overgang fra én slags tegn til et andet. Parametrene <code>before</code> og <code>after</code> kan enten være en liste over tegn eller en funktion, som tager et tegn og returnerer true/false.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input, når et stort eller lille bogstav efterfølges af et ciffer.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "Konverterer den angivne SQL-forespørgsel til M-kode. Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Konverterer den angivne <code>sql</code> forespørgsel til M-kode med de tilgængelige id'er, der er defineret af <code>environment</code>. Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "Returnerer en angivet kolonne med data fra tabellen som en liste.",
        "Documentation.LongDescription": "Returnerer den kolonne med data, der er angivet af <code>column</code>, fra tabellen <code>table</code> som en liste.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Find dataene fra kolonnen [Name] i tabellen.",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "Returnerer en liste med navnene på de kolonner, der stemmer overens med de angivne typer.",
        "Documentation.LongDescription": "Returnerer en liste med navnene på de kolonner i tabellen <code>table</code>, som stemmer overens med typerne, der er angivet i <code>listOfTypes</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Returnerer navnene på kolonner af typen Number.Type fra tabellen.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "Angiver, om den angivne post vises som en række i tabellen.",
        "Documentation.LongDescription": "Angiver, om den angivne post <code>row</code> vises som en række i tabellen <code>table</code>.\r\n    Der kan angives en valgfri parameter <code>equationCriteria</code> for at styre sammenligningen mellem rækkerne i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om tabellen indeholder rækken.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om tabellen indeholder rækken.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "Find ud af, om tabellen indeholder rækken ved kun at sammenligne kolonnen [Name].",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "Angiver, om alle de angivne poster vises som rækker i tabellen.",
        "Documentation.LongDescription": "Angiver, om alle de angivne poster på listen over poster <code>rows</code> vises som rækker i tabellen <code>table</code>.\r\n    Der kan angives en valgfri parameter <code>equationCriteria</code> for at styre sammenligningen mellem rækkerne i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om tabellen indeholder alle rækker ved kun at sammenligne kolonnen [CustomerID].",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om tabellen indeholder alle rækker.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "Angiver, om nogen af de angivne poster vises som rækker i tabellen.",
        "Documentation.LongDescription": "Angiver, om nogen af de angivne poster på listen over poster <code>rows</code> vises som rækker i tabellen <code>table</code>.\r\n    Der kan angives en valgfri parameter <code>equationCriteria</code> for at styre sammenligningen mellem rækkerne i tabellen.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> indeholder rækkerne <code>[a = 1, b = 2]</code> eller <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> indeholder rækkerne <code>[a = 1, b = 3]</code> eller <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "Find ud af, om tabellen <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> indeholder rækkerne <code>[a = 1, b = 3]</code> eller <code>[a = 3, b = 5]</code>, og sammenlign kun kolonne [a].",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "Angiver, om tabellen indeholder den eller de angivne kolonner.",
        "Documentation.LongDescription": "Angiver, om tabellen <code>table</code> indeholder den eller de angivne kolonne(r), <code>columns</code>. Returnerer <code>true</code>, hvis tabellen indeholder den eller de angivne kolonne(r). Ellers returneres <code>false</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om tabellen indeholder kolonnen [Name].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om tabellen indeholder kolonnerne [Name] og [PhoneNumber].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "Angiver, om alle rækkerne i tabellen opfylder den angivne betingelse.",
        "Documentation.LongDescription": "Angiver, om alle rækkerne i tabellen <code>table</code> svarer til den angivne <code>condition</code>. Returnerer <code>true</code>, hvis alle rækkerne matcher. Ellers returneres <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om alle rækkeværdierne i kolonne [a] også er i tabellen.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om alle rækkeværdierne er [a = 1, b = 2] i tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "Angiver, om nogen af rækkerne i tabellen opfylder den angivne betingelse.",
        "Documentation.LongDescription": "Angiver, om nogen af rækkerne i tabellen <code>table</code> svarer til den angivne <code>condition</code>. Returnerer <code>true</code>, hvis nogen af rækkerne matcher. Ellers returneres <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om nogen af rækkeværdierne i kolonne [a] findes i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "Find ud af, om nogen af rækkeværdierne er [a = 1, b = 2] i tabellen <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "Returnerer den største række eller standardværdien ved hjælp af de angivne kriterier.",
        "Documentation.LongDescription": "Returnerer den største række i <code>table</code> med den angivne <code>comparisonCriteria</code>. Hvis tabellen er tom, returneres den valgfrie værdi <code>default</code>. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find rækken med den største værdi i kolonnen [a] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "Find rækken med den største værdi i kolonnen [a] i tabellen <code>({})</code>. Returner -1, hvis tabellen er tom.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "Returnerer den mindste række eller en standardværdi ved hjælp af de angivne kriterier.",
        "Documentation.LongDescription": "Returnerer den mindste række i <code>table</code> med den angivne <code>comparisonCriteria</code>. Hvis tabellen er tom, returneres den valgfrie værdi <code>default</code>.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find rækken med den mindste værdi i kolonnen [a] i tabellen.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "Find rækken med den mindste værdi i kolonnen [a] i tabellen. Returner -1, hvis tabellen er tom.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "Returnerer den eller de angivne positioner for rækken i tabellen.",
        "Documentation.LongDescription": "Returnerer rækkepositionen af den første forekomst af <code>row</code> i den angivne <code>table</code>. Returnerer -1, hvis der ikke blev fundet nogen forekomster.\r\n    <ul>\r\n       <li><code>table</code>: Inputtabellen.</li>\r\n       <li><code>row</code>: Den række i tabellen, der skal findes en position for.</li>\r\n       <li><code>occurrence</code>: <i>[Valgfrit]</i> Angiver, hvilke forekomster af rækken der skal returneres.</li>\r\n       <li><code>equationCriteria</code>: <i>[Valgfrit]</i> Styrer sammenligningen mellem tabelrækkerne.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find positionen af den første forekomst af [a = 2, b = 4] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "Find positionen af den anden forekomst af [a = 2, b = 4] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "Find positionen af alle forekomster af [a = 2, b = 4] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "Returnerer den eller de angivne positioner for alle de angivne rækker i tabellen.",
        "Documentation.LongDescription": "Returnerer rækkens eller rækkernes position fra <code>table</code> af den første forekomst af listen i <code>rows</code>. Returnerer -1, hvis der ikke blev fundet nogen forekomster.\r\n    <ul>\r\n    <li><code>table</code>: Inputtabellen.</li>\r\n       <li><code>rows</code>: Den liste over rækker i tabellen, der skal findes positioner for.</li>\r\n       <li><code>occurrence</code>: <i>[Valgfrit]</i> Angiver, hvilke forekomster af rækken der skal returneres.</li>\r\n       <li><code>equationCriteria</code>: <i>[Valgfrit]</i> Styrer sammenligningen mellem tabelrækkerne.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find positionen af den første forekomst af [a = 2, b = 4] eller [a = 6, b = 8] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "Find positionen af alle forekomster af [a = 2, b = 4] eller [a = 6, b = 8] i tabellen <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "Opdeler den angivne tabel til en liste med tabeller ved hjælp af den angivne sidestørrelse.",
        "Documentation.LongDescription": "Opdeler <code>table</code> til en liste med tabeller, hvor det første element på listen er en tabel, der indeholder de første <code>pageSize</code> rækker fra\r\n    kildetabellen. Det næste element på listen er en tabel, der indeholder de næste <code>pageSize</code> rækker fra kildetabellen osv.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Opdel en tabel med fem poster til tabeller med to poster hver.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "Returnerer en liste, der indeholder de første antal angivne rækker og de resterende rækker.",
        "Documentation.LongDescription": "Returnerer en liste, der indeholder to tabeller: en tabel med de første N rækker af <code>table</code> (som angivet af <code>count</code>) og en tabel, der indeholder de resterende rækker af <code>table</code>.\r\n\r\nHvis tabellerne på den viste liste optælles nøjagtigt én gang og i rækkefølge, optæller funktionen <code>table</code> én gang.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Returner de første to rækker i tabellen og de resterende rækker i tabellen.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "Transformerer rækkerne i tabellen ved hjælp af den angivne transformationsfunktion.",
        "Documentation.LongDescription": "Opretter en <code>liste</code> ved at anvende handlingen <code>transform</code> på hver række i <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Transformér rækkerne i en tabel til en liste med tal.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "Transformér rækkerne i en numerisk tabel til tekstposter.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "Returnerer andelen af <code>text</code> efter den angivne <code>delimiter</code>.\r\n    En valgfri numerisk værdi, <code>index</code>, angiver, hvilken forekomst af <code>delimiter</code> der skal tages i betragtning.\r\n    En valgfri liste, <code>index</code>, angiver, hvilken forekomst af <code>delimiter</code> der skal tages i betragtning, samt om indeksering skal foretages fra starten eller slutningen af inputtet.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hent andelen af \"111-222-333\" efter den første bindestreg.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "Hent andelen af \"111-222-333\" efter den anden bindestreg.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "Hent andelen af \"111-222-333\" efter den anden bindestreg regnet fra slutningen.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "Returnerer tegnene ved den angivne position.",
        "Documentation.LongDescription": "Returnerer tegnet i tekstværdien, <code>text</code>, ved positionen <code>index</code>. Det første tegn i teksten er ved position 0.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Find tegnet ved position 4 i strengen \"Hello, World\".",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "Returnerer andelen af <code>text</code> før den angivne <code>delimiter</code>.\r\n    En valgfri numerisk værdi, <code>index</code>, angiver, hvilken forekomst af <code>delimiter</code> der skal tages i betragtning.\r\n    En valgfri liste, <code>index</code>, angiver, hvilken forekomst af <code>delimiter</code> der skal tages i betragtning, samt om indeksering skal foretages fra starten eller slutningen af inputtet.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hent andelen af \"111-222-333\" før den første bindestreg.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "Hent andelen af \"111-222-333\" før den anden bindestreg.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "Hent andelen af \"111-222-333\" før den anden bindestreg regnet fra slutningen.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "Returnerer, om teksten indeholder understrengen.",
        "Documentation.LongDescription": "Registrerer, om <code>text</code> indeholder værdien <code>substring</code>. Returnerer sand, hvis værdien findes. Denne funktion understøtter ikke jokertegn eller regulære udtryk.\r\n      <br>\r\n      <br>\r\n      Det valgfrie argument <code>comparer</code> kan bruges til at angive sammenligninger, hvor der ikke skelnes mellem store og små bogstaver, eller kulturelle- og landemæssige sammenligninger.\r\n      Følgende indbyggede sammenligningsfunktioner er tilgængelige på formelsproget:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Bruges til at foretage en sammenligning af ordenstal med forskel på store og små bogstaver</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Bruges til at udføre en sammenligning af ordenstal, hvor der ikke skelnes mellem store og små bogstaver</li>\r\n        <li> <code>Comparer.FromCulture</code>: Bruges til at udføre en kulturafhængig sammenligning</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om teksten \"Hello World\" indeholder \"Hello\".",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om teksten \"Hello World\" indeholder \"hello\".",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Find ud af, om teksten \"Hello World\" indeholder \"hello\", ved hjælp af en sammenligningsfunktionen, hvor der ikke skelnes mellem store og små bogstaver.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "Returnerer de sidste tegn i teksten.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>text</code>, der er det sidste <code>count</code>-tegn i værdien <code>text</code> <code>text</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hent de sidste fem tegn i teksten \"Hello, World\".",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "Angiver, om teksten slutter med den angivne værdi.",
        "Documentation.LongDescription": "Angiver, om den angivne tekst, <code>text</code>, slutter med den angivne værdi, <code>substring</code>. I resultatet skelnes der mellem store og små bogstaver.\r\n\r\n      <div>\r\n        <code>comparer</code> er en kode af typen <code>Comparer</code>, dvs. en sammenligningsfunktion, som bruges til at styre sammenligningen. Sammenligningsfunktioner kan bruges til at udføre sammenligninger, hvor der ikke skelnes mellem store og små bogstaver, eller udføre kulturelle- og landemæssige sammenligninger.\r\n      </div>\r\n      <div>\r\n        Følgende indbyggede sammenligningsfunktioner er tilgængelige på formelsproget:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Bruges til at udføre en nøjagtig sammenligning af ordenstal</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Bruges til at udføre en nøjagtig sammenligning af ordenstal, hvor der ikke skelnes mellem store og små bogstaver</li>\r\n        <li> <code>Comparer.FromCulture</code>: Bruges til at udføre en kulturel sammenligning</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollér, om \"Hello, World\" slutter på \"world\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "Kontrollér, om \"Hello, World\" slutter på \"World\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "Returnerer formateret tekst fra en formatstreng og argumenter.",
        "Documentation.LongDescription": "Returnerer formateret tekst, der er oprettet ved at anvende <code>arguments</code> fra en liste eller post på formatstreng <code>formatString</code>. Der kan også gives angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Formatér en liste med tal.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "Formatér forskellige datatyper fra en post i henhold til engelsk kultur i USA.",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "Returnerer delstrengen op til en specifik længde.",
        "Documentation.LongDescription": "Returns <code>count</code> tegn, eller indtil enden på <code>text</code>; ved forskydningen <code>start</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Find delstrengen fra teksten \"Hello World\", der starter ved indeks 6 og strækker sig over fem tegn.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "Find delstrengen fra teksten \"Hello World\", der starter ved indeks 6 og fortsætter til enden.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "Returnerer teksten i en angivet længde ved at udfylde slutningen af den angivne tekst.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>text</code>, der er udfyldt til længden <code>count</code>, ved at indsætte mellemrum i slutningen af tekstværdien <code>text</code>.\r\n    Der kan bruges et valgfrit tegn <code>character</code> til at angive det tegn, der skal bruges til udfyldning. Standardtegnet for udfyldning er et mellemrum.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Udfyld slutningen af en tekstværdi, så den indeholder 10 tegn.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "Udfyld slutningen af en tekstværdi med \"|\", så den indeholder 10 tegn.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "Returnerer teksten i en angivet længde ved at udfylde starten af den angivne tekst.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>text</code>, der er udfyldt til længden <code>count</code>, ved at indsætte mellemrum i starten af tekstværdien <code>text</code>.\r\n    Der kan bruges et valgfrit tegn <code>character</code> til at angive det tegn, der skal bruges til udfyldning. Standardtegnet for udfyldning er et mellemrum.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Udfyld starten af en tekstværdi, så den indeholder 10 tegn.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "Udfyld starten af en tekstværdi med \"|\", så den indeholder 10 tegn.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "Returnerer den første position for værdien (-1, hvis den ikke blev fundet).",
        "Documentation.LongDescription": "Returnerer placeringen af den angivne forekomst af tekstværdien <code>substring</code>, som blev fundet i <code>text</code>.\r\n   Der kan bruges en valgfri parameter <code>occurrence</code> til at angive, hvilken placering af forekomsten skal returneres (første forekomst som standard).\r\n    Returnerer -1, hvis <code>substring</code> ikke blev fundet.\r\n\r\n      <div>\r\n        <code>comparer</code> er en kode af typen <code>Comparer</code>, som bruges til at styre sammenligningen. Sammenligningsfunktioner kan bruges til at udføre sammenligninger, hvor der ikke skelnes mellem store og små bogstaver, eller udføre kulturelle- og landemæssige sammenligninger.\r\n      </div>\r\n      <div>\r\n        Følgende indbyggede sammenligningsfunktioner er tilgængelige på formelsproget:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>:  Bruges til at udføre en nøjagtig sammenligning af ordenstal</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Bruges til at udføre en nøjagtig sammenligning af ordenstal, hvor der ikke skelnes mellem store og små bogstaver</li>\r\n        <li><code>Comparer.FromCulture</code>: Bruges til at udføre en kulturel sammenligning</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find positionen af den første forekomst af \"World\" i teksten \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "Find positionen af den sidste forekomst af \"World\" i \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "Returnerer den første position i tekstværdien for et af de viste tegn (-1, hvis den ikke blev fundet).",
        "Documentation.LongDescription": "Returnerer den første position af et vilkårligt tegn på listen <code>characters</code>, der findes i <code>text</code>.\n    En valgfri parameter <code>occurrence</code> kan bruges til at angive, hvilken position for forekomsten, der skal returneres.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find den første position for \"W\" eller \"H\" i teksten \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "Find alle positionerne for \"W\" eller \"H\" i teksten \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "Returnerer et undersæt, der blev fundet ved en forskydning.",
        "Documentation.LongDescription": "Returnerer understrengen fra teksten <code>text</code>, der blev fundet ved forskydningen <code>offset</code>.\r\n    Der kan inkluderes en valgfri parameter, <code>count</code>, for at angive, hvor mange tegn der skal returneres. Hvis der ikke er tegn nok, genereres der en fejl.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Find understrengen fra teksten \"Hello World\" med start ved indeks 6.",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "Find understrengen fra teksten \"Hello World Hello\" med start ved indeks 6, og som indeholder 5 tegn.",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "Fjerner alle forekomster af det angivne tegn eller den angivne liste over tegn fra inputtekstværdien.",
        "Documentation.LongDescription": "Returnerer en kopi af tekstværdien <code>text</code>, hvor alle tegn fra <code>removeChars</code> er fjernet.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Fjern tegnene , og ; fra tekstværdien.",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "Fjerner et antal tegn med start ved den angivne forskydning.",
        "Documentation.LongDescription": "Returnerer en kopi af tekstværdien <code>text</code>, hvor alle tegn fra position <code>offset</code> er fjernet.\r\n    Der kan bruges en valgfri parameter, <code>count</code>, til at angive antallet af tegn, der skal fjernes. Standardværdien for <code>count</code> er 1. Positionsværdier starter ved 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Fjern 1 tegn fra tekstværdien \"ABEFC\" ved position 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "Fjern 2 tegn fra tekstværdien \"ABEFC\" med start ved position 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "Returnerer en tekstværdi, der består af inputteksten gentaget et angivet antal gange.",
        "Documentation.LongDescription": "Returnerer en tekstværdi, der består af inputteksten <code>text</code> gentaget <code>count</code> gange.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Gentag teksten \"a\" fem gange.",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "Gentag teksten \"helloworld\" tre gange.",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "Markerer alle forekomster af det angivne tegn eller den angivne tegnliste fra inputtekstværdien.",
        "Documentation.LongDescription": "Returnerer en kopi af tekstværdien <code>text</code>, hvor alle tegn, som ikke er indeholdt i <code>selectChars</code>, er fjernet.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Vælg alle tegn i området fra 'a' til 'å' fra tekstværdien.",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "Opdeler tekst i en liste over tekstværdier ved hjælp af en angivet afgrænser.",
        "Documentation.LongDescription": "Returnerer en liste over tekstværdier som et resultat af at opdele en tekstværdi <code>text</code> ved hjælp af den angivne afgrænser, <code>separator</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra tekstværdien \"Name|Address|PhoneNumber\" med afgrænseren \"|\".",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "Returnerer en liste over tekstværdier, hvor tegnene er opdelt ved hjælp af afgrænseren.",
        "Documentation.LongDescription": "Returnerer en liste over tekstværdier som et resultat af at opdele en tekstværdi <code>text</code> ved hjælp af et hvilket som helst tegn i den angivne afgrænser, <code>separators</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra tekstværdien \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\".",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "Returnerer starten af teksten.",
        "Documentation.LongDescription": "Returnerer de første <code>count</code> tegn af <code>text</code> som en tekstværdi.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hent de første fem tegn i \"Hello, World\".",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "Angiver, om teksten starter med en angivet værdi.",
        "Documentation.LongDescription": "Returnerer sand, hvis tekstværdien <code>text</code> starter med tekstværdien <code>substring</code>.\r\n      <ul>\r\n        <li><code>text</code>: <i></i> En værdi af typen <code>text</code>, der skal søges i</li>\r\n        <li><code>substring</code>: <i></i> En værdi af typen <code>text</code>, som er den understreng, der søges efter i <code>substring</code></li>\r\n        <li><code>comparer</code>: <i>[Valgfrit]</i> En kode af typen <code>Comparer</code> bruges til at styre sammenligningen. <code>Comparer.OrdinalIgnoreCase</code> kan for eksempel bruges til at udføre søgninger, hvor der ikke skelnes mellem store og små bogstaver</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> er en kode af typen <code>Comparer</code>, dvs. en sammenligningsfunktion, som bruges til at styre sammenligningen. Sammenligningsfunktioner kan bruges til at udføre sammenligninger, hvor der ikke skelnes mellem store og små bogstaver, eller udføre kulturelle- og landemæssige sammenligninger.\r\n      </div>\r\n      <div>\r\n        Følgende indbyggede sammenligningsfunktioner er tilgængelige på formelsproget:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Bruges til at udføre en nøjagtig sammenligning af ordenstal</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Bruges til at udføre en nøjagtig sammenligning af ordenstal, hvor der ikke skelnes mellem store og små bogstaver</li>\r\n        <li> <code>Comparer.FromCulture</code>: Bruges til at udføre en kulturel sammenligning</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Kontrollér, om teksten \"Hello, World\" starter med teksten \"hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Kontrollér, om teksten \"Hello, World\" starter med teksten \"Hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "Returnerer en type, der repræsenterer funktioner med definerede begrænsninger for parameter og returtype.",
        "Documentation.LongDescription": "Opretter en <code>function type</code> ud fra <code>signature</code>, en post med <code>ReturnType</code> og <code>Parameters</code> og <code>min</code>, som er minimumantallet af argumenter, der kræves for at aktivere funktionen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Opretter typen for en funktion, der tager et talparameter ved navn X og returnerer et tal.",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "Returnerer en type, der repræsenterer poster med definerede typebegrænsninger for felter.",
        "Documentation.LongDescription": "Returnerer en type, der repræsenterer poster med definerede typebegrænsninger for felter.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Opret en tabeltype dynamisk.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "Bestemmer, om en værdi af den første type altid er kompatibel med den anden type.",
        "Documentation.LongDescription": "Bestemmer, om en værdi af <code>type1</code> altid er kompatibel med <code>type2</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om en værdi af typetal kun kan behandles som en hvilken som helst-type.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "Bestem, om en værdi af en hvilken som helst-type kun kan behandles som typetal.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "Erstatter facetterne for en type.",
        "Documentation.LongDescription": "Erstatter facetterne for <code>type</code> med de facetter, der findes i posten <code>facets</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "Returnerer en ny tabeltype, hvor alle nøgler er erstattet af den angivne liste over nøgler.",
        "Documentation.LongDescription": "Returnerer en ny tabeltype, hvor alle nøgler er erstattet af den angivne liste over nøgler.<br>\r\n    <br>\r\n    Hver nøgle defineres ved hjælp af en post i følgende format:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: en liste over de kolonnenavne, der definerer nøglen\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> hvis nøglen er tabellens primære nøgle; ellers <code>falsk</code>\r\n      </li>\r\n    </ul>\r\n    Den angivne liste over nøgler valideres for at sikre, at der ikke er defineret mere end én primær nøgle, og at alle nøglekolonnenavne findes i tabeltypen.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Erstat nøgleoplysningerne vedrørende en tabeltype.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "Ryd de nøgleoplysninger, der tidligere er defineret på en tabeltype.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "Returnerer typen af en kolonne i en tabel.",
        "Documentation.LongDescription": "Returnerer typen af kolonnen <code>column</code> i tabeltypen <code>tableType</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "Returnerer en absolut URI, der er en kombination af udgangs-URI'en for input og den relative URI.",
        "Documentation.LongDescription": "Returnerer en absolut URI, der er en kombination af <code>baseUri</code> for input og <code>relativeUri</code>.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "Returnerer summen af de to værdier.",
        "Documentation.LongDescription": "Returnerer summen af <code>value1</code> og <code>value2</code>. Der kan angives en valgfri parameter, <code>precision</code>. <code>Precision.Double</code> bruges som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "Returnerer værdien, hvis den er kompatibel med den angivne type.",
        "Documentation.LongDescription": "Returnerer værdien, hvis den er kompatibel med den angivne type. Dette svarer til operatoren \"as\" i M med undtagelse af, at det kan acceptere referencer for identifikator-type, f. eks. Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Konvertér et tal til et tal.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "Forsøg på at konvertere en tekstværdi til et tal.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "Returnerer -1, 0 eller 1 baseret på, om den første værdi er mindre end, lig med eller større end den anden.",
        "Documentation.LongDescription": "Returnerer -1, 0 eller 1 baseret på, om den første værdi er mindre end, lig med eller større end den anden.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "Returnerer resultatet af at dividere første værdi med den anden.",
        "Documentation.LongDescription": "Returnerer resultatet af at dividere <code>value1</code> med <code>value2</code>. Der kan angives en valgfri parameter, <code>precision</code>. <code>Precision.Double</code> bruges som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "Returnerer, om de to værdier er ens.",
        "Documentation.LongDescription": "Returnerer true, hvis værdien <code>value1</code> er lig med værdien <code>value2</code>. Ellers returneres false.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "Bestemmer, om en værdi er kompatibel med den angivne type.",
        "Documentation.LongDescription": "Bestemmer, om en værdi er kompatibel med den angivne type. Dette svarer til operatoren \"is\" i M med undtagelse af, at det kan acceptere referencer for identifikator-type, f. eks. Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Sammenlign to måder at bestemme, om et tal er kompatibelt med typetal.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "Returnerer produktet af de to værdier.",
        "Documentation.LongDescription": "Returnerer produktet af multiplicering af <code>value1</code> med <code>value2</code>. Der kan angives en valgfri parameter, <code>precision</code>. <code>Precision.Double</code> bruges som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "Evaluerer en forespørgsel på en destination.",
        "Documentation.LongDescription": "<p>Evaluerer <code>query</code> mod <code>target</code> ved hjælp af de parametre, der er angivet i <code>parameters</code> og de indstillinger, der er angivet i <code>options</code>.</p>\r\n<p>Resultatet af forespørgslen defineres af <code>target</code>.</p>\r\n<p><code>target</code> angiver konteksten for den aktivitet, der beskrives af <code>query</code>.</p>\r\n<p><code>query</code> beskriver den forespørgsel, der skal køres på <code>target</code>. <code>query</code> udtrykkes på en måde, der er specifik for <code>target</code> (f.eks. en T-SQL-sætning).</p>\r\n<p>Den valgfri værdi <code>parameters</code> kan (hvis det er relevant) indeholde enten en liste eller en post med de parameterværdier, der forventes af <code>query</code>.</p>\r\n<p>Den valgfri post <code>options</code> kan indeholde indstillinger, der påvirker den måde, hvorpå <code>query</code> evalueres mod <code>target</code>. Disse indstillinger er specifikke for <code>target</code>.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "Returnerer, om de to værdier er ens.",
        "Documentation.LongDescription": "Returnerer null, hvis argumentet '<code>value1</code>' eller '<code>value2</code>' er null. Ellers returneres Value.Equals-ækvivalenten.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "Erstatter oplysningerne om inputtets metadata.",
        "Documentation.LongDescription": "Erstatter oplysningerne om inputtets metadata.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "Erstatter værdiens type.",
        "Documentation.LongDescription": "Erstatter <code>value</code>s type med den angivne <code>type</code>.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Erstat standardtypen for en post med en mere specifik type.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "Returnerer differencen mellem de to værdier.",
        "Documentation.LongDescription": "Returnerer differencen mellem <code>value1</code> og <code>value2</code>. Der kan angives en valgfri parameter, <code>precision</code>. <code>Precision.Double</code> bruges som standard.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "Opretter en handling, som, når den udføres, returnerer resultaterne af en udført HTTP-forespørgsel som en binær værdi.",
        "Documentation.LongDescription": "Opretter en handling, der, når den udføres, returnerer resultaterne af at udføre en <code>method</code> anmodning mod <code>url</code> ved hjælp af HTTP som en binær værdi.\r\n Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n <ul>\r\n<li><code>Query</code> : F&#248;j foresp&#248;rgselsparametre til URL-adressen via programmering uden at skulle bekymre dig om udslip.</li>\r\n<li><code>ApiKeyName</code> : Hvis destinationswebstedet har et begreb for en API-n&#248;gle, kan denne parameter bruges til at angive navnet (ikke v&#230;rdien) for den n&#248;gleparameter, der skal bruges i URL-adressen. Den faktiske n&#248;glev&#230;rdi angives i legitimationsoplysningerne.</li>\r\n<li><code>Headers</code> : Hvis denne v&#230;rdi angives som en post, leveres der yderligere overskrifter til en HTTP-anmodning.</li>\r\n<li><code>Timeout</code> : Hvis du angiver denne v&#230;rdi som en varighed, &#230;ndres timeout for en HTTP-anmodning. Standardv&#230;rdien er 100 sekunder.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Hvis denne v&#230;rdi angives som en liste, udelades disse HTTP-overskriftsn&#248;gler i beregningen af cachelagringsdata.</li>\r\n<li><code>IsRetry</code> : Hvis du angiver denne logiske v&#230;rdi som true, ignoreres alle eksisterende svar i cachen, n&#229;r data hentes.</li>\r\n<li><code>ManualStatusHandling</code> : Hvis du angiver denne v&#230;rdi som en liste, forhindres eventuel indbygget h&#229;ndtering af HTTP-anmodninger, hvis svar har &#233;n af disse statuskoder.</li>\r\n<li><code>RelativePath</code> : Hvis du angiver denne v&#230;rdi som tekst, f&#248;jes den til basis-URL-adressen, f&#248;r anmodningen foretages.</li>\r\n<li><code>Content</code> : Hvis du angiver denne v&#230;rdi, bliver dens indhold gjort til br&#248;dteksten i HTTP-anmodningen.</li>\r\n</ul>\r\n\r\n    <br>\r\n Bemærk, at denne funktion er deaktiveret i de fleste kontekster. Overvej at bruge Web.Contents eller Web.Headers i stedet.\r\n",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "Udfør en GET-anmodning mod Bing.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "Angiv URL-adressen til slutpunktet for den Azure Enterprise REST-API, der er knyttet til tilmeldingen",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Returnerer de binære resultater af kaldet til den URL-adresse, der er angivet til Azure Enterprise-API'en.",
        "Documentation.Examples": [
          {
            "Description": "Anvend funktionen AzureEnterprise.Contents til at returnere resultaterne af en specifik rapport.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "Tabel"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "Returnerer indholdet af den angivne blob fra en samling legitimationsoplysninger i Azure storage.",
        "Documentation.LongDescription": "Returnerer indholdet af BLOB på URL-adressen, <code>url</code>, fra en Azure-opbevaringsboks. Der kan angives <code>options</code> for at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>BlockSize</code> : Det antal byte der skal l&#230;ses, f&#248;r der ventes p&#229; dataforbruger. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>RequestSize</code> : Det antal byte der skal fors&#248;ges indl&#230;st i en enkelt HTTP-anmodning til serveren. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Indstillingen ConcurrentRequests underst&#248;tter hurtigere download af data ved at angive det antal anmodninger, der skal foretages parallelt ved hukommelsesudnyttelse. Den kr&#230;vede hukommelse er (ConcurrentRequest * RequestSize). Standardv&#230;rdien er 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "Returnerer indholdet af den angivne fil fra et Azure Data Lake Storage-filsystem.",
        "Documentation.LongDescription": "Returnerer indholdet af filen på URL-adressen, <code>url</code>, fra et Azure-datapuljesystem. Der kan angives <code>options</code> for at styre følgende indstillinger:\r\n    <ul>\r\n<li><code>BlockSize</code> : Det antal byte der skal l&#230;ses, f&#248;r der ventes p&#229; dataforbruger. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>RequestSize</code> : Det antal byte der skal fors&#248;ges indl&#230;st i en enkelt HTTP-anmodning til serveren. Standardv&#230;rdien er 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Indstillingen ConcurrentRequests underst&#248;tter hurtigere download af data ved at angive det antal anmodninger, der skal foretages parallelt ved hukommelsesudnyttelse. Den kr&#230;vede hukommelse er (ConcurrentRequest * RequestSize). Standardv&#230;rdien er 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "Returnerer den omtrentlige længde af den binære fil.",
        "Documentation.LongDescription": "Returnerer den omtrentlige længde af <code>binary</code>eller en fejl, hvis datakilden ikke understøtter en omtrentlig længde.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Hent den omtrentlige længde af den binære værdi.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "Bufferlagrer den binære værdi i hukommelsen.",
        "Documentation.LongDescription": "Bufferlagrer den binære værdi i hukommelsen. Resultatet af dette kald er en stabil binær værdi, hvilket betyder, at den vil have en deterministisk længde og byterækkefølge.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Opret en stabil version af den binære værdi.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "Kombinerer en liste over binære til en enkelt binær.",
        "Documentation.LongDescription": "Kombinerer en liste over binære til en enkelt binær.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "Opretter en binær ud fra den angivne værdi",
        "Documentation.LongDescription": "Returnerer en <code>binary</code> værdi fra den angivne <code>value</code>.  Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Binary.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>binary</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en <code>binary</code> værdi:\r\n        <ul>\r\n        <li><code>text</code>: En <code>binary</code> værdi fra tekstrepræsentationen. Se <code>Binary.FromText</code> for details.</li>\r\n </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Hent <code>\"1011\"</code> for værdien <code>binary</code>.",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "Konverterer en liste med tal til en binær værdi.",
        "Documentation.LongDescription": "Konverterer en liste med tal til en binær værdi.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "Afkoder data fra en tekstformular til binær.",
        "Documentation.LongDescription": "Returnerer resultatet af at konvertere tekstværdien <code>text</code> til en binær (liste over <code>number</code>-værdier). <code>encoding</code> kan specificeres for at angive den kodning, der bruges i tekstværdien.\r\n      Følgende <code>BinaryEncoding</code>-værdier kan bruges til <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64-kodning</li>\r\n        <li><code>BinaryEncoding.Hex</code>: Hex-kodning</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Afkod \"1011\" til binær.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "Afkod \"1011\" til binær med Hex-kodning.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "Læser den binære stream og forsøger at bestemme indholdstype og formatoplysninger for stream.",
        "Documentation.LongDescription": "Returnerer en post med feltet Content.Type, som indeholder den angivne MIME-type. \r\n    Hvis den angivne indholdstype er tekst/*, og der registreres en kodningsside, returneres desuden feltet Content.Encoding, der indeholder streamens kodning.\r\n    Hvis den angivne indholdstype er tekst/csv, og formatet er afgrænset, returneres desuden feltet Csv.PotentialDelimiter, der indeholder en tabel til analyse af potentielle afgrænsere.\r\n    Hvis den angivne indholdstype er tekst/csv, og formatet er med fast bredde, returneres desuden feltet Csv.PotentialPositions, der indeholder en liste til analyse af potentielle kolonneplaceringer med fast bredde.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "Returnerer antallet af tegn.",
        "Documentation.LongDescription": "Returnerer antallet af tegn.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "Konverterer en binær værdi til en liste over tal.",
        "Documentation.LongDescription": "Konverterer en binær værdi til en liste over tal.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "Afkoder binære data til en tekstformular.",
        "Documentation.LongDescription": "Returnerer resultatet af at konvertere en binær liste over tal <code>binary</code> til en tekstværdi. Du kan vælge at specificere <code>encoding</code> for at angive den kodning, der skal bruges i tekstværdien\r\n      Følgende <code>BinaryEncoding</code>-værdier kan bruges til <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64-kodning</li>\r\n        <li><code>BinaryEncoding.Hex</code>: Hex-kodning</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "Opretter en ændret fejlpost, som ikke udløser en fallback, når den kastes af en handler, der er defineret på en visning (via Binary.View).",
        "Documentation.LongDescription": "Opretter en ændret fejlpost fra <code>errorRecord</code>, som ikke udløser en fallback, når den kastes af en handler, der er defineret på en visning (via Binary.View).",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "Opretter en funktion, der kan opfanges af en handler, som er defineret på en visning (via Binary.View).",
        "Documentation.LongDescription": "<p>Opretter en visningsfunktion baseret på <code>function</code>, der kan håndteres i en visning, der er oprettet af <code>Binary.View</code>.</p>\r\n<p>Den <code>OnInvoke</code> handler for <code>Binary.View</code> kan bruges til at definere en handler for visningsfunktionen.</p>\r\n<p>Ligesom med handlerne til indbyggede handlinger, hvis der ikke er angivet nogen <code>OnInvoke</code> handler, eller hvis den ikke håndterer visningsfunktionen, eller hvis der udløses en fejl af handleren, anvendes <code>function</code> i toppen af visningen.</p>\r\n<p>Se den publicerede Power Query-dokumentation til brugerdefinerede connectors for en mere komplet beskrivelse af <code>Binary.View</code> og brugerdefinerede visningsfunktioner.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "Et binært format, der læser et 64-bit heltal med fortegn, som er kodet ved hjælp af en 7-bit kodning med variabel længde.",
        "Documentation.LongDescription": "Et binært format, der læser et 64-bit heltal med fortegn, som er kodet ved hjælp af en 7-bit kodning med variabel længde.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "Et binært format, der læser et 64-bit heltal uden fortegn, som er kodet ved hjælp af en 7-bit kodning med variabel længde.",
        "Documentation.LongDescription": "Et binært format, der læser et 64-bit heltal uden fortegn, som er kodet ved hjælp af en 7-bit kodning med variabel længde.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "Et binært format, der læser et 8-bit heltal uden fortegn.",
        "Documentation.LongDescription": "Et binært format, der læser et 8-bit heltal uden fortegn.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "Et binært format, der læser en .NET-baseret 16-byte decimalværdi.",
        "Documentation.LongDescription": "Et binært format, der læser en .NET-baseret 16-byte decimalværdi.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "Et binært format, der læser et 8-byte IEEE-dobbeltpræcisions reelt tal.",
        "Documentation.LongDescription": "Et binært format, der læser et 8-byte IEEE-dobbeltpræcisions reelt tal.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "Returnerer et binært format, der læser en sekvens af elementer og returnerer en liste.",
        "Documentation.LongDescription": "Returnerer et binært format, der læser en sekvens af elementer og returnerer en <code>liste</code>.  <code>binaryFormat</code>Parameteren angiver det binære format for hvert element.  Der er tre metoder til at bestemme antallet af læste elementer: <ul><li>Hvis <code>countOrCondition</code> ikke er angivet, læser det binære format, indtil der ikke er flere elementer.</li><li>Hvis <code>countOrCondition</code> er et tal, læser det binære format dette antal elementer.</li><li>Hvis <code>countOrCondition</code> er en funktion, aktiveres denne funktion for hvert læst element.  Funktionen returnerer SAND for at fortsætte og FALSK for at stoppe læsning af elementer.  Det sidste element inkluderes på listen.</li><li>Hvis <code>countOrCondition</code> er et binært format, forventes antallet af elementer at stå foran listen, og det angivne format bruges til at læse antallet.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "Læste byte indtil slutningen af dataene.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Læs to byte.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Læs byte, indtil byteværdien er større end eller lig med to.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "Et binært format, der læser nul byte og returnerer null.",
        "Documentation.LongDescription": "Et binært format, der læser nul byte og returnerer null.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "Returnerer et binært format, der læser en post.",
        "Documentation.LongDescription": "Returnerer et binært format, der læser en post.  Parameteren <code>record</code> angiver det binære format for posten.  Hvert felt i posten kan have sit eget binære format.  Hvis et felt indeholder en værdi, der ikke er en binær formatværdi, læses der ingen data for feltet, og feltværdien angives som ekko til resultatet.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "Læs en post, der indeholder ét 16-bit heltal og ét 32-bit heltal.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "Et binært format, der læser et 16-bit heltal med fortegn.",
        "Documentation.LongDescription": "Et binært format, der læser et 16-bit heltal med fortegn.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "Et binært format, der læser et 32-bit heltal med fortegn.",
        "Documentation.LongDescription": "Et binært format, der læser et 32-bit heltal med fortegn.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "Et binært format, der læser et 64-bit heltal med fortegn.",
        "Documentation.LongDescription": "Et binært format, der læser et 64-bit heltal med fortegn.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "Et binært format, der læser et 4-byte IEEE-enkeltpræcisions reelt tal.",
        "Documentation.LongDescription": "Et binært format, der læser et 4-byte IEEE-enkeltpræcisions reelt tal.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "Returnerer et binært format, der læser en tekstværdi.",
        "Documentation.LongDescription": "Returnerer et binært format, der læser en tekstværdi.  <code>length</code> angiver antallet af byte, der skal afkodes, eller det binære format af den længde, der står foran teksten.  Den valgfrie værdi <code>encoding</code> angiver kodningen af teksten.  Hvis <code>encoding</code> ikke er angivet, bestemmes kodningen ud fra de Unicode-baserede byterækkefølgemærker.  Hvis der ikke findes nogen byterækkefølgemærker, bruges <code>TextEncoding.Utf8</code>.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "Afkod to byte som ASCII-tekst.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "Afkod ASCII-tekst, hvor længden af teksten i byte står foran teksten som en byte.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "Et binært format, der læser et 16-bit heltal uden fortegn.",
        "Documentation.LongDescription": "Et binært format, der læser et 16-bit heltal uden fortegn.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "Et binært format, der læser et 32-bit heltal uden fortegn.",
        "Documentation.LongDescription": "Et binært format, der læser et 32-bit heltal uden fortegn.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "Et binært format, der læser et 64-bit heltal uden fortegn.",
        "Documentation.LongDescription": "Et binært format, der læser et 64-bit heltal uden fortegn.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "Opretter et 8-bit heltal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer et 8-bit heltal <code>number</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Byte.From</code> <code>null</code>. Hvis den angivne <code>value</code> er en <code>number</code> inden for intervallet af et 8-bit heltal uden en brøkdel, returneres <code>value</code>. Hvis det har en brøkdel, afrundes tallet med den angivne afrundingstilstand. Standardafrundingstilstanden er <code>RoundingMode.ToEven</code>. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Se <code>Number.Round</code> for de tilgængelige afrundingstilstande. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hent 8-bit heltalsværdien af typen <code>number</code> for <code>\"4\"</code>.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hent 8-bit heltalsværdien af typen <code>number</code> for <code>\"4.5\"</code> ved hjælp af <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "Konverterer et tal til et teksttegn.",
        "Documentation.LongDescription": "Returnerer tegnækvivalenten til tallet.<br>\r\n    <br>\r\n    Den angivne <code>number</code> skal være et 21-bit Unicode-kodepunkt.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Konvertér et tal til dets tilsvarende tegnværdi.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "Konvertér et tegn til et tal og tilbage igen.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "Konvertér det heksadecimale kodepunkt for humørikonet \"grinende ansigt\" til det tilsvarende surrogatpar UTF-16.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "Konverterer et tegn til en talværdi.",
        "Documentation.LongDescription": "Returnerer tilsvarende tal for <code>character</code>.<br>\r\n    <br>\r\n    Resultatet er det 21-bit Unicode-kodepunkt, der repræsenteres af det angivne tegn eller erstatningspar.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Konvertér et tegn til den tilsvarende talværdi.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "Konvertér surrogatparret UTF-16 for humørikonet \"grinende ansigt\" til det tilsvarende heksadecimale kodepunkt.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "Returnerer en funktion, der kombinerer en liste over tekstværdier ved hjælp af den angivne afgrænser.",
        "Documentation.LongDescription": "Returnerer en funktion, der kombinerer en liste over tekstværdier til en enkelt tekstværdi ved hjælp af den angivne afgrænser.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombiner en liste over tekstværdier ved hjælp af et semikolonafgrænser.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "Kombiner teksten i to kolonner ved hjælp af en kommaseparator og citationstegn i CSV-stil.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "Returnerer en funktion, der kombinerer en liste over tekst ved hjælp af en sekvens af afgrænsere.",
        "Documentation.LongDescription": "Returnerer en funktion, der kombinerer en liste over tekstværdier til en enkelt tekstværdi ved hjælp af en sekvens af afgrænsere.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombiner en liste over tekstværdier ved hjælp af en sekvens af afgrænsere.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "Returnerer en funktion, der kombinerer en liste over tekst til en enkelt tekst ved hjælp af de angivne længder.",
        "Documentation.LongDescription": "Returnerer en funktion, der kombinerer en liste over tekstværdier til en enkelt tekstværdi ved hjælp af de angivne længder.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombiner en liste over tekstværdier ved at udtrække det angivne antal tegn fra hver inputværdi.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "Kombiner en liste over tekstværdier ved at udtrække de angivne antal tegn, når du først har udfyldt resultatet med skabelonteksten.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "Returnerer en funktion, der kombinerer en liste over tekst til en enkelt tekst ved hjælp af de angivne positioner.",
        "Documentation.LongDescription": "Returnerer en funktion, der kombinerer en liste over tekstværdier til en enkelt tekstværdi ved hjælp af de angivne output-postioner.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombiner en liste over tekstværdier ved at placere dem i outputtet på de angivne positioner.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "Returnerer en funktion, der kombinerer en liste over tekst ved hjælp af de angivne positioner og længder.",
        "Documentation.LongDescription": "Returnerer en funktion, der kombinerer en liste over tekstværdier til en enkelt tekstværdi ved hjælp af den angivne afgrænser. En nullængde angiver, at hele tekstværdien skal inkluderes.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Kombiner en liste over tekstværdier ved hjælp af de angivne output-positioner og -længder.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "Returnerer en sammenligningsfunktion baseret på den angivne kultur og forskel på store og små bogstaver.",
        "Documentation.LongDescription": "Returnerer en sammenligningsfunktion, der bruger <code>culture</code> og den forskel på store og små bogstaver, der er angivet af <code>ignoreCase</code> til at udføre sammenligninger.<br>\r\n      <br>\r\n      En sammenligningsfunktion accepterer to argumenter og returnerer -1, 0 eller 1 baseret på, om den første værdi er mindre end, lig med  eller større end den anden<br>\r\n      <br>\r\n      Standardværdien for <code>ignoreCase</code> er false. <code>culture</code> skal være en af de landestandarder, der understøttes af .NET Framework (f.eks. \"en-US\").\r\n     ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Sammenlign \"a\" og \"A\" ved hjælp af landestandarden \"en-US\" for at se, om værdierne er de samme.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "Sammenlign \"a\" og \"A\" ved hjælp af landestandarden \"en-US\", hvor der ikke skelnes mellem store og små bogstaver, for at se, om værdierne er de samme.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "Returnerer det entydige medlems-id fra værdien for medlemsegenskaben.",
        "Documentation.LongDescription": "Returnerer det entydige medlems-id fra værdien for en medlemsegenskab. <code>attribute</code>. Returnerer null for alle andre værdier.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "Returnerer nøglen for en egenskab.",
        "Documentation.LongDescription": "Returnerer nøglen for egenskaben <code>property</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "Returnerer en valutaværdi for den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>currency</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Currency.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>number</code> inden for valutaområdet, afrundes en brøkdel af <code>value</code> til 4 decimaler og returneres. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Det gyldige interval for valuta er <code>-922.337.203.685.477,5808</code> til <code>922.337.203.685.477,5807</code>. Se <code>Number.Round</code> for de tilgængelige afrundingstilstande. Standarden er <code>RoundingMode.ToEven</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hent <code>currency</code>-værdien af <code>\"1.23455\"</code>.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "Hent værdien <code>currency</code> på <code>\"1.23455\"</code> ved hjælp af <code>RoundingMode.Down</code>.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "Returnerer dagskomponenten.",
        "Documentation.LongDescription": "Returnerer dagskomponenten for en værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som dagskomponenten er hentet fra.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent dagskomponenten for en værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som repræsenterer datoen og klokkeslættet 14-05-2011, 17:00:00.",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "Returnerer et tal (fra 0 til 6), som angiver ugedagen for den angivne værdi.",
        "Documentation.LongDescription": "Returnerer et tal (fra 0 til 6), som angiver ugedagen for den angivne <code>dateTime</code>.\r\n  <ul>\r\n        <li><code>dateTime</code>: En <code>date</code>-, <code>datetime</code>-, eller <code>datetimezone</code>-værdi.</li>\r\n        <li><code>firstDayOfWeek</code>: En <code>Day</code>-værdi, som angiver den dag, der skal opfattes som den første dag i ugen. Tilladte værdier er Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday eller Day.Saturday. Hvis denne ikke angives, vil en kulturafhængig standard blive anvendt.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Se den ugedag, der er repræsenteret af mandag den 21. februar 2011, hvis søndag behandles som den første dag i ugen.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "Se den ugedag, der er repræsenteret af mandag den 21. februar 2011, hvor mandag behandles som den første dag i ugen.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "Returnerer navnet på ugedagen.",
        "Documentation.LongDescription": "Returnerer ugedagens navn for den angivne <code>date</code>. Der kan også angives en valgfri <code>culture</code> (f. eks. \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent navnet på ugedagen.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "Returnerer et tal fra 1-366, som angiver dagen i året.",
        "Documentation.LongDescription": "Returnerer et tal, der repræsenterer året i den angivne værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Året dags den 1. marts 2011.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "Returnerer et tal fra 28-31, som angiver antallet af dage i måneden.",
        "Documentation.LongDescription": "Returnerer antallet af dage i måneden i værdien af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som antallet af dage i måneden returneres for.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Antallet af dage i december måned repræsenteret ved <code>#date(2011, 12, 01)></code>.",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "Returnerer slutningen af dagen.",
        "Documentation.LongDescription": "Returnerer slutningen af den dag, der repræsenteres af <code>dateTime</code>. Oplysningerom tidszone bevares.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code> hvorfra slutningen af dagen beregnes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent dagens slutning for 14-05-2011, 17:00:00.",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "Hent dagens slutning for 17-05-2011, 17:00:00-7:00.",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "Returnerer slutningen af måneden.",
        "Documentation.LongDescription": "Returnerer slutningen af den måned, der indeholder <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som slutningen af måneden beregnes ud fra</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent månedens slutning for 14-05-2011.",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "Hent månedens slutning for 17-05-2011, 17:00:00-7:00.",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "Returnerer slutningen af kvartalet.",
        "Documentation.LongDescription": "Returnerer slutningen af det kvartal, der indeholder <code>dateTime</code>. Oplysninger om tidszone bevares.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som slutningen af kvartalet beregnes ud fra.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find slutningen af kvartalet for 10. oktober 2011, 8:00.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "Returnerer slutningen af ugen.",
        "Documentation.LongDescription": "Returnerer slutningen af den uge, der indeholder <code>dateTime</code>.\r\n      Denne funktion bruger en valgfri <code>Day</code>, <code>firstDayOfWeek</code>, til at angive som den første dag i ugen for denne relative beregning. Standardværdien er <code>Day.Sunday</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, som den sidste dag i ugen beregnes ud fra</li>\r\n      <li><code>firstDayOfWeek</code>:      <i>[Valgfri]</i> En <code>Day.Type</code> værdi, der repræsenterer den første dag i ugen. Mulige værdier er <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> og <code>Day.Saturday.</code> . Standardværdien er <code>Day.Sunday</code>.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent ugens slutning for 14-05-2011.",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "Hent ugens slutning for 17-05-2011, 17:00:00-7:00, hvor søndag er den første dag i ugen.",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "Returnerer slutningen af året.",
        "Documentation.LongDescription": "Returnerer slutningen af det år, der indeholder <code>dateTime</code>, herunder brøkdele af sekunder. oplysninger om tidszone bevares.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code> som årets slutning beregnes ud fra.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent årets slutning for 14-05-2011, 17:00:00.",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "Hent timens slutning for 17-05-2011, 17:00:00-7:00.",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "Opretter en dato ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>date</code> ud fra den angivne <code>value</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").\r\nHvis den angivne <code>value</code> er <code>null</code>, vil <code>Date.From</code> returnere <code>null</code>. Hvis den angivne <code>value</code> er <code>date</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en værdi af typen <code>date</code>:\r\n      <ul>\r\n        <li><code>text</code>: En værdi af typen <code>date</code> fra en tekstrepræsentation. Se <code>Date.FromText</code> for at få flere oplysninger.</li>\r\n        <li><code>datetime</code>: Datokomponenten for <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: Datokomponenten for den lokale datetime-ækvivalens for <code>value</code>.</li>\r\n        <li><code>number</code>: Datokomponenten for datetime-ækvivalensen for OLE Automation-datoen udtrykt ved <code>value</code>.</li>\r\n      </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>43910</code> til en værdi af typen <code>date</code>.",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "Konvertér <code>#datetime(1899, 12, 30, 06, 45, 12)</code> til en værdi af typen <code>date</code>.",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "Opretter en dato fra lokale, universelle og brugerdefinerede datoformater.",
        "Documentation.LongDescription": "Opretter en værdi af typen <code>datoværdi</code> ud fra en tekstrepræsentation, <code>text</code>. En valgfri <code>record</code> parameter <code>options</code> kan leveres for at specificere yderligere egenskaber. <code>The record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>tekstværdi</code> angiver det format, der skal bruges. Gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105 for at få flere oplysninger. Udeladelse af dette felt eller angivelse af <code>null</code> vil resultere i parsing af datoen efter bedste evne.</li>\r\n   <li><code>Culture</code> : Når <code>Format</code> ikke er null, kontrollerer <code>Culture</code> nogle formatspecifikationer. For eksempel i <code>\"en-US\"</code> er <code>\"MMM\"</code> <code>\"januar\", \"februar\", \"marts\", ...</code>, mens i <code>\"ru-RU\"</code> er <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code>. Når <code>Format</code> er <code>null</code>, kontrollerer <code>Culture</code> standardformatet, der skal bruges. Når <code>Culture</code> er <code>null</code> eller udeladt, bruges <code>Culture Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser, kan <code>options</code> også være en tekstværdi. Dette har den samme funktionsmåde som hvis <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>\"2010-12-31\"</code> til en værdi af typen <code>date</code>.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "Konverter ved hjælp af et brugerdefineret format og den tyske kultur.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "Find datoen i den gregorianske kalender, der svarer til begyndelsen af 1400 i hijri-kalenderen.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af den aktuelle dag i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af den aktuelle dag i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om det aktuelle systemklokkeslæt ligger på den aktuelle dag.",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af den aktuelle måned i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af den aktuelle måned i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om det aktuelle systemklokkeslæt ligger i den aktuelle måned.",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det aktuelle kvartal i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det aktuelle kvartal i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om det aktuelle systemklokkeslæt ligger i det aktuelle kvartal.",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af den aktuelle uge i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af den aktuelle uge i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om det aktuelle systemklokkeslæt ligger i den aktuelle uge.",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det aktuelle år i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det aktuelle år i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om det aktuelle systemklokkeslæt ligger i det aktuelle år.",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af den næste dag, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle dag.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer den næste dag, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle dag.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>, <code>datetime</code>, or <code>datetimezone</code> værdi, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om dagen efter det aktuelle systemklokkeslæt ligger på den næste dag.",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af den næste måned, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle måned.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer den næste måned, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle måned.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>date</code>, <code>datetime</code>, or <code>datetimezone</code> værdi, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om måneden efter det aktuelle systemklokkeslæt ligger i den næste måned.",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet næste kvartal, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle kvartal.",
        "Documentation.LongDescription": ",Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste kvartal, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle kvartal.\r\n      <ul> <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om kvartalet efter det aktuelle systemklokkeslæt ligger i det næste kvartal.",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af den næste uge, fastlagt i forhold til aktuel dato og aktuelt klokkesæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle uge.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af den næste uge, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle uge.\r\n      <ul> <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om ugen efter det aktuelle systemklokkeslæt ligger i den næste uge.",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det næste år, fastlagt i forhold til aktuel dato og aktuelt klokkesæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle år.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste år, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle år.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om året efter det aktuelle systemklokkeslæt ligger i det næste år.",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af den forrige dag, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle dag.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af den forrige dag, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle dag.\r\n      <ul> <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om dagen før det aktuelle systemklokkeslæt ligger på den forrige dag.",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af den forrige måned, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle måned.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af den forrige måned, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle måned.\r\n      <ul> <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om måneden før det aktuelle systemklokkeslæt ligger i den forrige måned.",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i det forrige kvartal, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for det aktuelle kvartal.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> optræder i løbet af det forrige kvartal, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle kvartal.\r\n      <ul> <li><code>dateTime</code>: En <code>dato-</code>, <code>datetime-</code> eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om kvartalet før det aktuelle systemklokkeslæt ligger i det forrige kvartal.",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af den forrige uge, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for den aktuelle uge.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af den forrige uge, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for den aktuelle uge.\r\n      <ul> <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om ugen før det aktuelle systemklokkeslæt ligger i den forrige uge.",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "Angiver, om denne dato er indtruffet i løbet af det forrige år, fastlagt i forhold til aktuel dato og aktuelt klokkesæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle år.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af det forrige år, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for det aktuelle år.\r\n      <ul> <li><code>dateTime</code>: En <code>dato</code>-, <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om året før det aktuelle systemklokkeslæt ligger i det forrige år.",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "Angiver, om denne dato indtræffer i løbet af det aktuelle år og er på eller før den aktuelle dag i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det aktuelle år og er på eller før den aktuelle dag i forhold til den aktuelle dag og det aktuelle klokkeslæt i systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om det aktuelle systemklokkeslæt ligger i år til dato.",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "Angiver, om denne dato ligger i et skudår.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> ligger i et skudår.\r\n <ul>\r\n        <li><code>dateTime</code>: En værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, om året 2012, som repræsenteres ved <code>#date(2012, 01, 01)</code>, er et skudår.",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "Returnerer månedskomponenten.",
        "Documentation.LongDescription": "Returnerer månedskomponenten for den angivne værdi af typen <code>datetime</code>, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find måneden i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "Returnerer navnet på månedskomponenten.",
        "Documentation.LongDescription": "Returnerer navnet på månedskomponenten for den angivne <code>date</code>. Der kan også angives en valgfri <code>culture</code> (f. eks. \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent navnet på måneden.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "Returnerer et tal, der angiver, hvilket kvartal i året datoen ligger i.",
        "Documentation.LongDescription": "Returnerer et tal fra 1-4, der angiver, hvilket kvartal i året datoen <code>dateTime</code> ligger i. <code>dateTime</code> kan være en værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Se, hvilket kvartal i året datoen #date(2011, 12, 31) ligger i.",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "Returnerer starten af dagen.",
        "Documentation.LongDescription": "Returnerer starten på den dag, der repræsenteres af <code>dateTime</code>.\r\n    <code>dateTime</code> skal være en værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find starten dagen for 10. oktober 2011 klokken 08:00.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "Returnerer starten af måneden.",
        "Documentation.LongDescription": "Returnerer starten på den måned, der indeholder <code>dateTime</code>.\r\n    <code>dateTime</code> skal være en værdi af typen <code>date</code> eller <code>datetime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find starten af måneden for 10. oktober 2011, 8:10:32.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "Returnerer starten af kvartalet.",
        "Documentation.LongDescription": "Returnerer starten af det kvartal, der indeholder <code>dateTime</code>.\r\n    <code>dateTime</code> skal være en værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find slutningen af kvartalet for 10. oktober 2011, klokken 08:00.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "Returnerer ugens start.",
        "Documentation.LongDescription": "Returnerer starten af ugen, der indeholder <code>dateTime</code>.\r\n    <code>dateTime</code> skal være en værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find ugens start for tirsdag den 11. oktober 2011.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "Find ugens start for tirsdag den 11. oktober 2011, ved at bruge mandag som ugens start.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "Returnerer starten af året.",
        "Documentation.LongDescription": "Returnerer starten af året, der indeholder <code>dateTime</code>.\r\n    <code>dateTime</code> skal være en værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find årets start for 10. oktober 2011, klokken 8:10:32.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "Returnerer en post, der indeholder delene fra datoværdien.",
        "Documentation.LongDescription": "Returnerer en post, der indeholder delene fra en bestemt datoværdi, <code>date</code>.\r\n <ul>\r\n        <li><code>date</code>: En værdi af typen <code>date</code>, som delenes post skal beregnes ud fra.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konvertér værdien af typen <code>#date(2011, 12, 31)</code> til en post, der indeholder delene fra datoværdien.",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "Returnerer en tekstrepræsentation for datoværdien.",
        "Documentation.LongDescription": "Returnerer en tekstrepræsentation af <code>date</code>. Der kan angives en valgfri <code>record</code> parameter <code>options</code> for at angive yderligere egenskaber. <code>culture</code> bruges kun til ældre arbejdsprocesser. <code>The record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>tekstværdi</code>, der angiver det format, der skal bruges. Du kan få flere oplysninger ved at gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105. Hvis du udelader dette felt eller angiver <code>null</code> vil det resultere i formatering af datoen ved hjælp af den standard, der er defineret af <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Når <code>Format</code> ikke er null, styrer <code>Culture</code> nogle formatangivelser. For eksempel i <code>\"en-US\"</code> <code>\"MMM\"</code> er <code>\"januar\", \"februar\", \"marts\", ... </code>, mens du er i <code>\"ru-RU\"</code> er <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ... </code>. Når <code>Format</code> er <code>null</code>, styrer <code>Culture</code> det standardformat, der skal bruges. Når <code>Culture</code> er <code>null</code> eller udelades, bruges <code>Culture.Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser, kan <code>options</code> og <code>culture</code> også være tekstværdier. Dette har samme funktionsmåde, som hvis <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Konverter <code>#date(2010, 12, 31)</code> til en værdi af typen <code>text</code>. <i>Resultatoutput kan variere afhængigt af den aktuelle kultur.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "Konverter ved hjælp af et brugerdefineret format og den tyske kultur.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "Find året i den hijri-kalenderen, der svarer til den 1. januar 2000 i den gregoriansk kalender.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "Returnerer et tal fra 1 til 6, der angiver, hvilken uge i måneden denne dato ligger i.",
        "Documentation.LongDescription": "Returnerer et tal fra 1 til 6, der angiver, hvilken uge i året datoen <code>dateTime</code> ligger i.\r\n <ul>\r\n        <li><code>dateTime</code>: En <code>datetime</code>-værdi, for hvilken ugen i måneden bestemmes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, hvilken uge den 15. marts falder i i2011.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "Returnerer et tal fra 1-54, der angiver, hvilken uge i året denne dato ligger i.",
        "Documentation.LongDescription": "Returnerer et tal fra 1-54, der angiver den uge i året, som datoen, <code>dateTime</code>, falder i.\r\n <ul> <li><code>dateTime</code>: En <code>datetime</code>-værdi som bestemmer ugen i året. </li> <li><code>firstDayOfWeek</code>: En valgfri <code>Day.Type</code>-værdi, der angiver, hvilken dag der betragtes som startpunkt for en ny uge (f.eks <code>Day.Sunday</code>). Hvis dette ikke angives, bruges en kulturafhængig standard.\r\n        \r\n        </li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Afgør, hvilken uge den 27. marts falder i i 2011.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "Afgør, hvilken uge 27. marts falder i i 2011, ved hjælp af mandag som starten på ugen.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "Returnerer årskomponenten.",
        "Documentation.LongDescription": "Returnerer årskomponenten for den angivne værdi af typen <code>datetime</code>, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find året i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "Returnerer datokomponenten for den angivne værdi for dato, dato/klokkeslæt og dato/tidszone.",
        "Documentation.LongDescription": "Returnerer datokomponenten for <code>dateTime</code>, den angivne værdi af typen <code>date</code>, <code>datetime</code> eller <code>datetimezone</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Find datoværdien for #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "Opretter en dato og et klokkeslæt ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>datetime</code> ud fra den angivne <code>value</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").\r\nHvis den angivne <code>value</code> er <code>null</code>, vil <code>DateTime.From</code> returnere <code>null</code>. Hvis den angivne <code>value</code> er <code>datetime</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en værdi af typen <code>datetime</code>:\r\n      <ul>\r\n        <li><code>text</code>: En værdi af typen <code>datetime</code> fra en tekstrepræsentation. Se <code>DateTime.FromText</code> for at få flere oplysninger.</li>\r\n        <li><code>date</code>: En værdi af typen <code>datetime</code> med <code>value</code> som datokomponent og <code>12:00:00 AM</code> som tidskomponent.</li>\r\n        <li><code>datetimezone</code>: Den lokale <code>datetime</code>-ækvivalens for <code>value</code>.</li>\r\n        <li><code>time</code>: En <code>datetime</code> med datoækvivalensen for OLE Automation-datoen <code>0</code> som datokomponent og <code>value</code> som klokkeslætskomponent.</li>\r\n        <li><code>number</code>: En <code>datetime</code>-ækvivalens for OLE Automation-datoen udtrykt ved <code>value</code>. </li>\r\n      </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>#time(06, 45, 12)</code> til en værdi af typen <code>datetime</code>.",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "Konvertér <code>#date(1975, 4, 4)</code> til en værdi af typen <code>datetime</code>.",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "Opretter en dato og et klokkeslæt ud fra et 64-bit langt tal.",
        "Documentation.LongDescription": "Opretter en værdi for <code>datetime</code> ud fra <code>fileTime</code>-værdien og konverterer den til den lokale tidszone. filetime er en værdi for filklokkeslæt i Windows, der repræsenterer det antal intervaller med 100 nanosekunder, der er gået siden 24:00 midnat, d. 1. januar 1601 A.D. (C.E.) Coordinated Universal Time (UTC).\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>129876402529842245</code> til en værdi af typen datetime.",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "Opretter en datetimezone ud fra lokale og universelle datetime-formater.",
        "Documentation.LongDescription": "Opretter en værdi af typen <code>datetimezone</code> ud fra en tekstrepræsentation, <code>text</code>. En valgfri <code>record</code> parameter <code>options</code> kan leveres for at specificere yderligere egenskaber. <code>The record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>tekstværdi</code> angiver det format, der skal bruges. Gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105 for at få flere oplysninger. Udeladelse af dette felt eller angivelse af <code>null</code> vil resultere i parsing af datoen efter bedste evne.</li>\r\n   <li><code>Culture</code> : Når <code>Format</code> ikke er null, kontrollerer <code>Culture</code> nogle formatspecifikationer. For eksempel i <code>\"en-US\"</code> er <code>\"MMM\"</code> <code>\"januar\", \"februar\", \"marts\", ...</code>, mens i <code>\"ru-RU\"</code> er <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code>. Når <code>Format</code> er <code>null</code>, kontrollerer <code>Culture</code> standardformatet, der skal bruges. Når <code>Culture</code> er <code>null</code> eller udeladt, bruges <code>Culture Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser, kan <code>options</code> også være en tekstværdi. Dette har den samme funktionsmåde som hvis <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>\"2010-12-31T01:30:00\"</code> til en værdi af typen datetime.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "Konvertér <code>\"2010-12-31T01:30:00.121212\"</code> til en værdi af typen datetime.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "Konvertér <code>\"2010-12-31T01:30:00\"</code> til en værdi af typen datetime.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "Konvertér <code>\"20101231T013000\"</code> til en værdi af typen datetime.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "Angiver, om denne datetime optræder i løbet af den aktuelle time, sådan som det er bestemt af den aktuelle dato og tid på systemet.",
        "Documentation.LongDescription": "Angiver, om den angivne værdi af typen datetime <code>dateTime</code> optræder i løbet af den aktuelle time, sådan som det er bestemt af den aktuelle dato og tid på systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi for koden <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om den aktuelle systemtid er i den aktuelle time.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "Angiver, om denne datetime optræder i løbet af det aktuelle minut, sådan som det er bestemt af den aktuelle dato og tid på systemet.",
        "Documentation.LongDescription": "Angiver, om den angivne værdi af typen datetime <code>dateTime</code> optræder i løbet af det aktuelle minut, sådan som det er bestemt af den aktuelle dato og tid på systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi af typen <code>datetime</code> eller <code>datetimezone</code>, som skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, hvis den aktuelle systemtid er i det aktuelle minut.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "Angiver, om denne datetime optræder i løbet af det aktuelle sekund, sådan som det er bestemt af den aktuelle dato og tid på systemet.",
        "Documentation.LongDescription": "Angiver, om den angivne værdi af typen datetime <code>dateTime</code> optræder i løbet af det aktuelle sekund, sådan som det er bestemt af den aktuelle dato og tid på systemet.\r\n      <ul>\r\n      <li><code>dateTime</code>: En værdi for koden <code>datetime</code> eller <code>datetimezone</code>, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om den aktuelle systemtid er i det aktuelle sekund.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "Angiver, om denne datetime indtræffer i løbet af den næste time, fastlagt i forhold til den aktuelle dato og tid i systemet. Bemærk, at denne funktion returnerer False, når der sendes en værdi, der indtræffer i løbet af den aktuelle time.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af den næste time, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle time.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>, or <code>datetimezone</code> værdi, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om timen efter den aktuelle systemtid er i den næste time.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "Angiver, om denne datetime indtræffer i løbet af det næste minut, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle minut.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste minut, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle minut.\r\n      <ul>\r\n      <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om minuttet efter den aktuelle systemtid er i det næste minut.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "Angiver, om denne datetime indtræffer i løbet af det næste sekund, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle sekund.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> indtræffer i løbet af det næste sekund, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle sekund.\r\n      <ul> <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om sekundet efter den aktuelle systemtid er i det næste sekund.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "Angiver, om denne datetime er indtruffet i løbet af den forrige time, fastlagt i forhold til den aktuelle dato og tid i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af den aktuelle time.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af den forrige time, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for den aktuelle time.\r\n      <ul> <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om timen før den aktuelle systemtid er i den forrige time.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "Angiver, om denne datetime er indtruffet i løbet af det forrige minut, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for det aktuelle minut.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af det forrige minut, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer inden for det aktuelle minut.\r\n      <ul> <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om minuttet før den aktuelle systemtid er i det forrige minut.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "Angiver, om denne datetime er indtruffet i løbet af det forrige sekund, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer False, når den modtager en værdi, der indtræffer i løbet af det aktuelle sekund.",
        "Documentation.LongDescription": "Angiver, om den anførte datetime-værdi <code>dateTime</code> er indtruffet i løbet af det forrige sekund, fastlagt i forhold til aktuel dato og aktuelt klokkeslæt i systemet. Bemærk, at denne funktion returnerer false, når den modtager en værdi, der indtræffer i løbet af det aktuelle sekund.\r\n      <ul> <li><code>dateTime</code>: En <code>datetime</code>- eller <code>datetimezone</code>-værdi, der skal evalueres.\r\n      </li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om sekundet før den aktuelle systemtid er i det forrige sekund.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "Returnerer klokkeslætsdelen for den angivne værdi af typen datetime.",
        "Documentation.LongDescription": "Returnerer klokkeslætsdelen for den angivne værdi af typen datetime, <code>dateTime</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Find klokkeslætsværdien for #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "Returnerer en post, der indeholder delene fra værdien af typen datetime.",
        "Documentation.LongDescription": "Returnerer en post, der indeholder delene fra en bestemt værdi af typen datetime, <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: En værdi af typen <code>datetime</code>, som delenes post skal beregnes ud fra.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konvertér værdien af typen <code>#datetime(2011, 12, 31, 11, 56, 2)</code> til en post, der indeholder værdier af typen Date og Time.",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "Returnerer en tekstrepræsentation for værdien af typen datetime.",
        "Documentation.LongDescription": "Returnerer en tekstrepræsentation af <code>dateTime</code>. Der kan angives en valgfri <code>record</code> parameter <code>options</code> for at angive yderligere egenskaber. <code>culture</code> bruges kun til ældre arbejdsprocesser. <code>The record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>tekstværdi</code>, der angiver det format, der skal bruges. Du kan få flere oplysninger ved at gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105. Hvis du udelader dette felt eller angiver <code>null</code> vil det resultere i formatering af datoen ved hjælp af den standard, der er defineret af <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Når <code>Format</code> ikke er null, styrer <code>Culture</code> nogle formatangivelser. For eksempel i <code>\"en-US\"</code> <code>\"MMM\"</code> er <code>\"januar\", \"februar\", \"marts\", ... </code>, mens du er i <code>\"ru-RU\"</code> er <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ... </code>. Når <code>Format</code> er <code>null</code>, styrer <code>Culture</code> det standardformat, der skal bruges. Når <code>Culture</code> er <code>null</code> eller udelades, bruges <code>Culture.Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser, kan <code>options</code> og <code>culture</code> også være tekstværdier. Dette har samme funktionsmåde, som hvis <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Konverter <code>#datetime(2010, 12, 31, 01, 30, 25)</code> til en værdi af typen <code>text</code>. <i>Resultatoutput kan variere afhængigt af den aktuelle kultur.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "Konverter ved hjælp af et brugerdefineret format og den tyske kultur.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "Konverter ved hjælp af ISO 8601-mønsteret.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "Opretter en datetimezone ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>datetimezone</code> fra den angivne <code>value</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").\r\nHvis den angivne <code>value</code> er <code>null</code>, returnerer <code>DateTimeZone.From</code> <code>null</code>. Hvis den angivne <code>value</code> er <code>datetimezone</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en <code>datetimezone</code> værdi:\r\n      <ul>\r\n      <li><code>text</code>: En <code>datetimezone</code> værdi fra tekstrepræsentation. Se <code>DateTimeZone.FromText</code> for oplysninger..</li>\r\n      <li><code>date</code>: En <code>datetimezone</code> med <code>value</code> som datokomponenten,<code>12:00:00</code> som tidskomponenten og forskydningen, der svarer til den lokale tidszone.</li>\r\n        <li><code>datetime</code>: En <code>datetimezone</code> med <code>value</code> som datetime og den forskydning, der svarer til den lokale tidszone.</li>\r\n      <li><code>time</code>: En <code>datetimezone</code> med den dato, der svarer til OLE Automation-datoen for <code>0</code> som datokomponenten, <code>value</code> som tidskomponenten og den forskydning, der svarer til den lokale tidszone.</li>\r\n      <li><code>number</code>: En <code>datetimezone</code> med den datetime, der svarer til OLE Automation-datoen udtrykt i <code>value</code> og den forskydning, der svarer til den lokale tidszone.</li>\r\n      </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>\"2020-10-30T01:30:00-08:00\"</code> til en værdi af typen <code>datetimezone</code>.",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "Opretter en datetimezone ud fra et 64-bit langt tal.",
        "Documentation.LongDescription": "Opretter en værdi for <code>datetimezone</code> ud fra <code>fileTime</code>-værdien og konverterer den til den lokale tidszone. Værdien filetime er en værdi for filklokkeslæt i Windows, der repræsenterer det antal intervaller á 100 nanosekunder, der er gået siden 24:00 midnat, d. 1. januar 1601 A.D. (C.E.) Coordinated Universal Time (UTC).\r\n    ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>129876402529842245</code> til en værdi af typen datetimezone.",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "Opretter en datetimezone fra lokale, universelle og brugerdefinerede datetimezone-formater.",
        "Documentation.LongDescription": "Opretter en værdi af typen <code>datetimezone</code> ud fra en tekstrepræsentation, <code>text</code>. En valgfri <code>record</code> parameter <code>options</code> kan leveres for at specificere yderligere egenskaber. <code>The record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>tekstværdi</code> angiver det format, der skal bruges. Gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105 for at få flere oplysninger. Hvis du udelader dette felt eller angiver <code>null</code> vil resultere i parsing af datoen efter bedste evne.</li>\r\n   <li><code>Culture</code> : Når <code>Format</code> ikke er null, kontrollerer <code>Culture</code> nogle formatspecifikationer. For eksempel i <code>\"en-US\"</code> er <code>\"MMM\"</code> <code>\"januar\", \"februar\", \"marts\", ...</code>, mens i <code>\"ru-RU\"</code> er <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code>. Når <code>Format</code> er <code>null</code>, kontrollerer <code>Culture</code> standardformatet, der skal bruges. Når <code>Culture</code> er <code>null</code> eller udeladt, bruges <code>Culture Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser, kan <code>options</code> også være en tekstværdi. Dette har den samme funktionsmåde som hvis <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>\"2010-12-31T01:30:00-08:00\"</code> til en værdi af typen <code>datetimezone</code>.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "Konverter ved hjælp af et brugerdefineret format og den tyske kultur.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "Konvertér ved hjælp af ISO 8601.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "Fjerner tidszoneoplysninger fra den angivne værdi for datetimezone.",
        "Documentation.LongDescription": "Returnerer en værdi af typen #datetime fra <code>dateTimeZone</code>, hvor tidszoneoplysningerne er fjernet.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Fjern tidszoneoplysninger fra den angivne værdi for #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0).",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "Konverterer tidszonekomponenten til den lokale tidszone.",
        "Documentation.LongDescription": "Ændrer tidszoneoplysninger for værdien af typen datetimezone, <code>dateTimeZone</code>, til de lokale tidszoneoplysninger.\r\n    Hvis <code>dateTimeZone</code> ikke har en tidszonekomponent, tilføjes de lokale tidszoneoplysninger.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Skift tidszoneoplysninger for #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) til den lokale tidszone (der anvender PST).",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "Returnerer en post, der indeholder delene fra værdien af typen datetimezone.",
        "Documentation.LongDescription": "Returnerer en post, der indeholder delene fra en bestemt værdi af typen datetimezone, <code>dateTimeZone</code>.\r\n <ul>\r\n        <li><code>dateTimeZone</code>: En værdi af typen <code>datetimezone</code>, som delenes post skal beregnes ud fra.</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konvertér værdien af typen <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> til en post, der indeholder værdier af typen Date, Time og Zone.",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "Returnerer en tekstrepræsentation for værdien af typen datetimezone.",
        "Documentation.LongDescription": "Returnerer en tekstrepræsentation af <code>dateTimeZone</code>. Der kan angives en valgfri <code>record</code> parameter <code>options</code> for at angive yderligere egenskaber. <code>culture</code> bruges kun til ældre arbejdsprocesser. <code>The record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>tekstværdi</code>, der angiver det format, der skal bruges. Du kan få flere oplysninger ved at gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105. Hvis du udelader dette felt eller angiver <code>null</code> vil det resultere i formatering af datoen ved hjælp af den standard, der er defineret af <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Når <code>Format</code> ikke er null, styrer <code>Culture</code> nogle formatangivelser. For eksempel i <code>\"en-US\"</code> <code>\"MMM\"</code> er <code>\"januar\", \"februar\", \"marts\", ... </code>, mens du er i <code>\"ru-RU\"</code> er <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ... </code>. Når <code>Format</code> er <code>null</code>, styrer <code>Culture</code> det standardformat, der skal bruges. Når <code>Culture</code> er <code>null</code> eller udelades, bruges <code>Culture.Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser, kan <code>options</code> og <code>culture</code> også være tekstværdier. Dette har samme funktionsmåde, som hvis <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Konverter <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> til en værdi af typen <code>text</code>. <i>Resultatoutput kan variere afhængigt af den aktuelle kultur.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "Konverter ved hjælp af et brugerdefineret format og den tyske kultur.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "Konverter ved hjælp af ISO 8601-mønsteret.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "Konverterer tidszonekomponenten til UTC-tidszonen.",
        "Documentation.LongDescription": "Ændrer tidszoneoplysninger for værdien af typen datetime, <code>dateTimeZone</code>, til UTC-tidszoneoplysningerne.\r\n    Hvis <code>dateTimeZone</code> ikke har en tidszonekomponent, tilføjes UTC-tidszoneoplysningerne.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Skift tidszoneoplysninger for #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) til UTC-tidszonen.",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "Ændrer tidszonen i værdien.",
        "Documentation.LongDescription": "Ændrer tidszonen i værdien.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "Ændrer tidszonen i værdien.",
        "Documentation.LongDescription": "Ændrer tidszonen i værdien.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "Opretter en decimal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en decimalværdi <code>nummer</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Decimal.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>number</code> inden for decimalintervallet, returneres <code>value</code>, ellers returneres der en fejl. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Få decimalværdien af typen <code>number</code> for <code>\"4.5\"</code>.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "Returnerer indholdet af tabellen Delta Lake.",
        "Documentation.LongDescription": "Returnerer indholdet af tabellen Delta Lake.",
        "Documentation.Category": "Tilgår data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "Opretter et dobbeltpræcisions flydende tal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen Double <code>number</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Double.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>number</code> inden for området double, returneres <code>value</code>, ellers returneres der en fejl. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Få dobbeltpræcisions flydende tallet af typen <code>number</code> for <code>\"4\"</code>.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "Returnerer dagsdelen af en varighed.",
        "Documentation.LongDescription": "Returnerer dagsdelen af <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Udtræk antallet af dage mellem to datoer.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "Opretter en varighed ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>duration</code> ud fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, vil <code>Duration.From</code> returnere <code>null</code>. Hvis den angivne <code>value</code> er <code>duration</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en værdi af typen <code>duration</code>:\r\n      <ul>\r\n        <li><code>text</code>: En værdi af typen <code>duration</code> fra tekstformlen for forløbet tid (d.h:m:s). Se <code>Duration.FromText</code> for at få flere oplysninger.</li>\r\n        <li><code>number</code>: En ækvivalens af typen <code>duration</code> til antallet af hele eller dele af dage udtrykt ved <code>value</code>.</li>\r\n      </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>2.525</code> til en værdi af typen <code>duration</code>.",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "Returnerer en varighedsværdi ud fra tekstformlen for forløbet tid (d.h:m:s).",
        "Documentation.LongDescription": "Returnerer en varighedsværdi ud fra den angivne tekst, <code>text</code>. Følgende formater kan fortolkes ved hjælp af denne funktion: \r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (alle intervaller er inklusive)<br>\r\n        ddd: Antal dage.<br>\r\n        hh: Antal timer, mellem 0 og 23.<br>\r\n        mm: Antal minutter, mellem 0 og 59.<br>\r\n        ss: Antal sekunder, mellem 0 og 59.<br>\r\n        ff: Brøkdele af sekunder, mellem 0 og 9999999.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>\"2.05:55:20\"</code> til en værdi af typen <code>duration</code>.",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "Returnerer timedelen af en varighed.",
        "Documentation.LongDescription": "Returnerer timedelen af <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Udtræk timerne fra en varighedsværdi.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "Returnerer minutdelen af en varighed.",
        "Documentation.LongDescription": "Returnerer minutdelen af <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Udtræk minutterne fra en varighedsværdi.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "Returnerer sekunddelen af en varighed.",
        "Documentation.LongDescription": "Returnerer sekunddelen af <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Udtræk sekunderne fra en varighedsværdi.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "Returnerer en post, der indeholder delene af varigheden.",
        "Documentation.LongDescription": "Returnerer en post, der indeholder delene af varighedsværdien, <code>duration</code>.\r\n  <ul>\r\n        <li><code>duration</code>: En værdi af typen <code>duration</code>, som posten er oprettet ud fra.</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>#duration(2, 5, 55, 20)</code> til en post af delene, herunder dage, timer, minutter og evt. sekunder.",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "Returnerer teksten i formatet \"d.h:m:s\".",
        "Documentation.LongDescription": "Returnerer en tekstrepræsentation i formatet \"dag.time:mins:sek\" for den givne varighedsværdi, <code>duration</code>.\r\n <ul>\r\n        <li><code>duration</code>: A <code>varighed</code> hvorfra tekstrepræsentationen beregnes.</li>\r\n  <li><code>format</code>: <i>[Optional]</i> Frarådes, vil udløse en fejl, hvis den ikke er null</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>#duration(2, 5, 55, 20)</code> til en tekstværdi.",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "Returnerer det samlede antal dage, denne varighed strækker sig over.",
        "Documentation.LongDescription": "Returnerer det samlede antal dage spændt over <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Find det samlede antal dage spændt over en varighedsværdi.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "Returnerer det samlede antal timer, denne varighed strækker sig over.",
        "Documentation.LongDescription": "Returnerer det samlede antal timer spændt over <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Find det samlede antal timer spændt over en varighedsværdi.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "Returnerer det samlede antal minutter, denne varighed strækker sig over.",
        "Documentation.LongDescription": "Returnerer det samlede antal minutter spændt over <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Find det samlede antal minutter spændt over en varighedsværdi.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "Returnerer det samlede antal sekunder, denne varighed strækker sig over.",
        "Documentation.LongDescription": "Returnerer det samlede antal sekunder spændt over <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Find det samlede antal sekunder spændt over en varighedsværdi.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "Returnerer en fejlpost fra de angivne tekstværdier for årsag, meddelelse og oplysninger.",
        "Documentation.LongDescription": "Returnerer en fejlpost fra de angivne tekstværdier for årsag, meddelelse og oplysninger.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "Returnerer M-kildekoderepræsentationen for en konstant værdi.",
        "Documentation.LongDescription": "Returnerer M-kildekoderepræsentationen for en konstant værdi.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Download M-kildekoderepræsentationen af en talværdi.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "Download M-kildekoderepræsentationen af en datoværdi.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "Download M-kildekoderepræsentationen af en tekstværdi.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "Returnerer resultatet af evalueringen af et M-udtryk.",
        "Documentation.LongDescription": "Returnerer resultatet af evalueringen af et M-udtryk <code>document</code>, med de tilgængelige identifikatorer, der kan refereres til, som er defineret af <code>environment</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Evaluer en enkel sum.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "Evaluer en mere kompleks sum.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "Evaluer sammenkædningen af en tekstværdi med en identifikator.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "Returnerer M-kildekoderepræsentationen for en identifikator.",
        "Documentation.LongDescription": "Returnerer M-kildekoderepræsentationen for en identifikator <code>name</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Download M-kildekoderepræsentationen af en identifikator.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "Download M-kildekoderepræsentationen af en identifikator, der indeholder et mellemrum.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "Returnerer indholdet af den angivne fil som binært.",
        "Documentation.LongDescription": "Returnerer indholdet af filen, <code>path</code>, som binært. Parameteren <code>options</code> er i øjeblikket kun beregnet til intern brug.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "Returnerer, om en bestemt funktion betragtes som en datakilde.",
        "Documentation.LongDescription": "Returnerer, om <code>function</code> betragtes som en datakilde.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Oversætter tekst, der repræsenterer en geografisk værdi i formatet Well-Known Text (WKT), til en struktureret post.",
        "Documentation.LongDescription": "Oversætter tekst, der repræsenterer en geografisk værdi i formatet Well-Known Text (WKT), til en struktureret post. WKT er et standardformat, der er defineret af Open Geospatial Consortium (OGC), og som er den typiske serialiseringsfunktionen, der bruges af databaser, herunder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "Oversætter en struktureret geografisk punktværdi til den formatet Well-Known Text (WKT).",
        "Documentation.LongDescription": "Oversætter en struktureret geografisk punktværdi til formatet Well-Known Text (WKT) som defineret af Open Geospatial Consortium (OGC), også det serialiseringsfunktionen, der bruges af mange databaser, herunder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Oversætter tekst, der repræsenterer en geometrisk værdi i formatet Well-Known Text (WKT), til en struktureret post.",
        "Documentation.LongDescription": "Oversætter tekst, der repræsenterer en geometrisk værdi i formatet Well-Known Text (WKT), til en struktureret post. WKT er et standardformat, der er defineret af Open Geospatial Consortium (OGC), og som er den typiske serialiseringsfunktionen, der bruges af databaser, herunder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "Oversætter en struktureret geometrisk punktværdi til formatet Well-Known Text (WKT).",
        "Documentation.LongDescription": "Oversætter en struktureret geometrisk punktværdi til formatet Well-Known Text (WKT) som defineret af Open Geospatial Consortium (OGC), også det serialiseringsfunktionen, der bruges af mange databaser, herunder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "Returnerer en GUID-værdi ud fra den givne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>Guid.Type</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Guid.From</code> <code>null</code>.  Der udføres en kontrol for at afgøre, om den angivne <code>value</code> er i et acceptabelt format. Acceptable formater angivet i eksemplerne.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "GUID'et kan leveres som 32 sammenhængende hexadecimale cifre.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID'et kan leveres som 32 hexadecimale cifre adskilt af bindestreger i blokke med 8-4-4-4-12.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID'et kan leveres som 32 hexadecimale cifre adskilt af bindestreger og stå i klammeparenteser.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID'et kan leveres som 32 hexadecimale cifre adskilt af bindestreger og omsluttet af parenteser.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "Opretter et 16-bit heltal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer et 16-bit heltalsværdi <code>number</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Int16.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>number</code> inden for intervallet 16-bit heltal med fortegn uden en brøkdel, returneres <code>value</code>. Hvis det har en brøkdel, afrundes tallet med den angivne afrundingstilstand. Standardafrundingstilstanden er <code>RoundingMode.ToEven</code>. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Se <code>Number.Round</code> for de tilgængelige afrundingstilstande. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Få 16-bit heltalsværdien af typen <code>number</code> for <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Få 16-bit heltalsværdien af typen <code>number</code> for <code>\"4,5\"</code> ved hjælp af <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "Opretter et 32-bit heltal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer et 32-bit heltalsværdi <code>number</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Int32.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>number</code> inden for intervallet 32-bit heltal uden en brøkdel, returneres <code>value</code>. Hvis det har en brøkdel, afrundes tallet med den angivne afrundingstilstand. Standardafrundingstilstanden er <code>RoundingMode.ToEven</code>. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Se <code>Number.Round</code> for de tilgængelige afrundingstilstande. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Få 32-bit heltalsværdien af typen <code>number</code> for <code>\"4\"</code>.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Få 32-bit heltalsværdien af typen <code>number</code> for <code>\"4.5\"</code> ved hjælp af <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "Opretter et 64-bit heltal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer et 64-bit heltalværdi <code>number</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Int64.From</code> <code>null</code>. Hvis den angivne <code>value</code> er <code>number</code> inden for intervallet 64-bit heltal med fortegn uden en brøkdel, returneres <code>value</code>. Hvis det har en brøkdel, afrundes tallet med den angivne afrundingstilstand. Standardafrundingstilstanden er <code>RoundingMode.ToEven</code>. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Se <code>Number.Round</code> for de tilgængelige afrundingstilstande. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hent 64-bit <code>number</code>-heltalsværdien <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hent heltalsværdien <code>number</code> på 64-bit på <code>\"4.5\"</code> ved hjælp af <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "Opretter et 8-bit heltal med fortegn ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer et 8-bit heltalsværdi <code>number</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Int8.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>number</code> inden for intervallet 8-bit heltal med fortegn uden en brøkdel, returneres <code>value</code>. Hvis det har en brøkdel, afrundes tallet med den angivne afrundingstilstand. Standardafrundingstilstanden er <code>RoundingMode.ToEven</code>. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Se <code>Number.Round</code> for de tilgængelige afrundingstilstande. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Få 8-bit heltalsværdien med fortegn af typen <code>number</code> for <code>\"4\"</code>.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Få 8-bit heltalsværdien med fortegn af typen <code>number</code> <code>\"4.5\"</code> ved hjælp af <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "Returnerer det abstrakte syntakstræ (AST) for en funktions brødtekst.",
        "Documentation.LongDescription": "<p>Returnerer det abstrakte syntakstræ (AST) for brødteksten i <code>function</code>, normaliseret til et <i>elementudtryk</i>:\r\n<ul>\r\n  <li>Funktionen skal være et 1-argument lambda.</li>\r\n  <li>Alle referencer til funktionsparameteren erstattes med <code>ItemExpression.Item</code>.</li>\r\n  <li>AST forenkles, så den kun indeholder noder af følgende typer::\r\n    <ul>\r\n      <li><code>Konstant</code></li>\r\n      <li><code>Aktivering</code></li>\r\n      <li><code>Monadisk</code></li>\r\n      <li><code>Binær</code></li>\r\n      <li><code>Hvis</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Der udløses en fejl, hvis et elementudtryk AST ikke kan returneres for brødteksten <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returnerer AST for selve funktionen <code>each _ <> null</code>",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "Returnerer indholdet af JSON-dokumentet.",
        "Documentation.LongDescription": "Returnerer indholdet af JSON-dokumentet.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "Producerer en JSON-repræsentation af en bestemt værdi",
        "Documentation.LongDescription": "<p>Opretter en JSON- repræsentation af en given værdi <code>value</code> med en tekstkodning angivet med <code>encoding</code>. Hvis <code>encoding</code> er udeladt, benyttes UTF8 i stedet. Værdier er repræsenteret som følger:</p>\r\n <ul>\r\n        <li>Null-værdier, tekstværdier og logiske værdier repræsenteres som de tilsvarende JSON-typer</li>\r\n        <li>Tal repræsenteres som tal i JSON, med undtagelse af <code>#infinity</code>, <code>-#infinity</code> og <code>#nan</code>, der konverteres til null</li>\r\n        <li>Lister repræsenteres som JSON-matrixer</li>\r\n        <li>Poster repræsenteres som JSON-objekter</li>\r\n        <li>Tabeller repræsenteres som en matrix med objekter</li>\r\n        <li>Datoer, tidspunkter, dato/klokkeslæt, dato/tidszoner og varigheder repræsenteres som ISO-8601-tekst</li>\r\n        <li>Binære værdier repræsenteres som base-64-kodet tekst</li>\r\n        <li>Typer og funktioner producerer en fejl</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Konvertér en kompleks værdi til JSON.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "Konverterer en binær værdi til en liste over tekstværdier, der opdeles med linjeskift. Hvis der er angivet et anførselsformat, vises linjeskift måske i anførselstegn. Hvis includeLineSeparators er true, er linjeskifttegnene inkluderet i teksten.",
        "Documentation.LongDescription": "Konverterer en binær værdi til en liste over tekstværdier, der opdeles med linjeskift. Hvis der er angivet et anførselsformat, vises linjeskift måske i anførselstegn. Hvis includeLineSeparators er true, er linjeskifttegnene inkluderet i teksten.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "Konverterer en tekstværdi til en liste over tekstværdier, der opdeles med linjeskift. Hvis includeLineSeparators er true, er linjeskifttegnet inkluderet i teksten.",
        "Documentation.LongDescription": "Konverterer en tekstværdi til en liste over tekstværdier opdelt på linjeskift. Hvis includeLineSeparators er true, så er linjeskift inkluderet i teksten.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (standard ) Ingen anførselsstil er påkrævet.</li>\r\n            <li><code>QuoteStyle.Csv:</code> Anførsel er pr Csv. En dobbelt anførselstegn bruges til at afgrænse disse områder, og et par dobbelte anførselsstegn bruges til at angive en enkelt dobbelt anførselstegn inden for en sådan region. </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "Konverterer en liste med tekst til en binær værdi ved hjælp af den angivne kodning og lineSeparator. Den angivne lineSeparator tilføjes på hver linje.  Hvis den ikke er angivet, bruges tegnene for vognretur og linjeskift.",
        "Documentation.LongDescription": "Konverterer en liste med tekst til en binær værdi ved hjælp af den angivne kodning og lineSeparator. Den angivne lineSeparator tilføjes på hver linje.  Hvis den ikke er angivet, bruges tegnene for vognretur og linjeskift.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "Konverterer en liste med tekst til en enkelt tekst.  Den angivne lineSeparator tilføjes på hver linje.  Hvis den ikke er angivet, bruges tegnene for vognretur og linjeskift.",
        "Documentation.LongDescription": "Konverterer en liste med tekst til en enkelt tekst.  Den angivne lineSeparator tilføjes på hver linje.  Hvis den ikke er angivet, bruges tegnene for vognretur og linjeskift.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "Returnerer true, hvis alle udtryk er true.",
        "Documentation.LongDescription": "Returnerer true, hvis alle udtryk på listen <code>list</code> er true.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om alle udtryk på listen {true, true, 2 > 0} er true.",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om alle udtryk på listen {true, true, 2 < 0} er true.",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "Returnerer true, hvis et udtryk er true.",
        "Documentation.LongDescription": "Returnerer true, hvis et udtryk på listen <code>list</code> er true.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om et af udtrykkene på listen {true, false, 2 > 0} er true.",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om et af udtrykkene på listen {2 = 0, false, 2 < 0} er true.",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "Returnerer gennemsnittet af værdierne. Fungerer med værdier af typen number, date, datetime, datetimezone og duration.",
        "Documentation.LongDescription": "Returnerer gennemsnitsværdien for elementerne på listen <code>list</code>. Resultatet vises med samme datatype som værdierne på listen. Fungerer kun med værdier af typen number, date, time, datetime, datetimezone og duration.\r\n    Hvis listen er tom, returneres null.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Find gennemsnittet af listen over tal, <code>{3, 4, 6}</code>.",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "Find gennemsnittet af datoværdierne 1. januar 2011, 2. januar 2011 og 3. januar 2011.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "Gemmer en liste i buffer.",
        "Documentation.LongDescription": "Bufferlagrer listen <code>list</code> i hukommelsen. Resultatet af dette kald er en stabil liste.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Opret en stabil kopi af listen {1..10}.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "Returnerer en enkelt liste ved at kombinere flere lister.",
        "Documentation.LongDescription": "Tager en liste over lister, <code>lists</code>, og fletter dem sammen til en enkelt ny liste.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Kombiner de to enkle lister {1, 2} og {3, 4}.",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "Kombiner de to lister, {1, 2} og {3, {4, 5}}, hvoraf den ene indeholder en indlejret liste.",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "Returnerer antallet af elementer på listen.",
        "Documentation.LongDescription": "Returnerer antallet af elementer på listen <code>list</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Find antallet af værdier på listen {1, 2, 3}.",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "Returnerer en liste over værdier, hvor dublerede værdier er fjernet.",
        "Documentation.LongDescription": "Returnerer en liste, som indeholder alle værdier på listen <code>list</code>, hvor dublerede værdier er fjernet. Hvis listen er tom, er resultatet en tom liste.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Fjern de dublerede værdier fra listen {1, 1, 2, 3, 3, 3}.",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "Returnerer den første værdi på listen eller den angivne standard, hvis listen er tom.",
        "Documentation.LongDescription": "Returnerer det første element på listen <code>list</code> eller den valgfrie standardværdi, <code>defaultValue</code>, hvis listen er tom.\r\n    Hvis listen er tom, og der ikke er angivet en standardværdi, returnerer funktionen <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find den første værdi på listen {1, 2, 3}.",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "Find den første værdi på listen {}. Hvis listen er tom, returneres -1.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "Returnerer skæringspunktet for de listeværdier, der blev fundet i inputtet.",
        "Documentation.LongDescription": "Returnerer skæringspunktet for de listeværdier, der blev fundet på inputlisten <code>lists</code>. Du kan angive en valgfri parameter, <code>equationCriteria</code>.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Find skæringspunktet for listerne {1..5}, {2..6}, {3..7}.",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "Angiver, om listen indeholder dublerede værdier.",
        "Documentation.LongDescription": "Returnerer en logisk værdi, der angiver, om der er dublerede værdier på listen <code>list</code>: <code>true</code>, hvis listen er entydig, og <code>false</code>, hvis der er dublerede værdier. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om listen {1, 2, 3} er entydig, dvs. ingen dubletværdier.",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om listen {1, 2, 3, 3} er entydig, dvs. ingen dubletværdier.",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "Returnerer true, hvis listen er tom.",
        "Documentation.LongDescription": "Returnerer <code>true</code>, hvis listen <code>list</code> ikke indeholder værdier (længden er 0). Hvis listen indeholder værdier (længde > 0), returneres <code>false</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om listen {} er tom.",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om listen {1, 2} er tom.",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "Returnerer den sidste værdi på listen eller den angivne standard, hvis listen er tom.",
        "Documentation.LongDescription": "Returnerer det sidste element på listen <code>list</code> eller den valgfrie standardværdi, <code>defaultValue</code>, hvis listen er tom.\r\n    Hvis listen er tom, og der ikke er angivet en standardværdi, returnerer funktionen <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find den sidste værdi på listen {1, 2, 3}.",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "Find den sidste værdi på listen {} eller -1, hvis listen er tom.",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "Returnerer den sidste værdi på listen.  Du kan evt. angive, hvor mange værdier der skal returneres, eller en kvalificerende betingelse.",
        "Documentation.LongDescription": "Returnerer det sidste element på listen <code>list</code>. Hvis listen er tom, udløses der en undtagelse.\r\n Denne funktion bruger en valgfri parameter, <code>countOrCondition</code>, for at understøtte indsamling af flere elementer eller filtrering af elementer. <code>countOrCondition</code> kan angives på tre måder:\r\n <ul>\r\n  <li>Hvis der er angivet et antal, returneres der elementer op til det angivne antal. </li>\r\n  <li>Hvis der er angivet en betingelse, returneres alle elementer, der i starten opfylder betingelsen, med start i slutningen af listen. Når et element ikke opfylder betingelsen, tages der ikke flere elementer med i betragtning. </li>\r\n  <li>Hvis denne parameter er null, returneres det sidste element på listen.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find den sidste værdi på listen {3, 4, 5, -1, 7, 8, 2}.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "Find de sidste værdier på listen {3, 4, 5, -1, 7, 8, 2}, der er større end 0.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "Returnerer den største værdi eller standardværdien, hvis listen er tom.",
        "Documentation.LongDescription": "Returnerer den største værdi på listen <code>list</code> eller den valgfrie standardværdi <code>default</code>, hvis listen er tom. \r\n    Du kan angive en valgfri værdi af typen comparisonCriteria, <code>comparisonCriteria</code>, for at bestemme, hvordan elementerne på listen skal sammenlignes. Hvis denne parameter er null, bruges standardfunktionen til sammenligning.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find den største værdi på listen {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "Find den største værdi på listen {}, eller returner -1, hvis listen er tom. ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "Returnerer medianværdien på listen.",
        "Documentation.LongDescription": "Returnerer medianelementet på listen <code>list</code>. Denne funktion returnerer <code>null</code>, hvis listen ikke indeholder værdier, som ikke er <code>null</code>. \r\n    Hvis der er et lige antal elementer, vælger funktionen det mindste af de to medianelementer, medmindre listen\r\n    udelukkende består af dato/klokkeslæt, varigheder, tal eller klokkeslæt, i hvilket tilfælde den returnerer gennemsnittet af de to elementer.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find medianelementet på listen <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "Returnerer den mindste værdi eller standardværdien, hvis listen er tom.",
        "Documentation.LongDescription": "Returnerer det mindste element på listen <code>list</code> eller den valgfrie standardværdi <code>default</code>, hvis listen er tom. \r\n    Du kan angive en valgfri værdi af typen comparisonCriteria, <code>comparisonCriteria</code>, for at bestemme, hvordan elementerne på listen skal sammenlignes. Hvis denne parameter er null, bruges standardfunktionen til sammenligning.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Find den mindste værdi på listen {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "Find den mindste værdi på listen {}, eller returner -1, hvis listen er tom. ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "Returnerer den hyppigste værdi på listen.",
        "Documentation.LongDescription": "Returnerer det element, der vises mest hyppigt på listen, <code>list</code>. Hvis listen er tom, udløses der en undtagelse. Hvis der vises flere elementer med samme maksimumhyppighed, vælges den sidste.\r\n    Du kan angive en valgfri værdi af typen <code>comparisonCriteria</code>, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Find det element, der vises mest hyppigt på listen, <code>{\"A\", 1, 2, 3, 3, 4, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "Find det element, der vises mest hyppigt på listen, <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "Returnerer en liste over de hyppigste værdier på listen.",
        "Documentation.LongDescription": "Returnerer det element, der vises mest hyppigt på listen, <code>list</code>. Hvis listen er tom, udløses der en undtagelse. Hvis der vises flere elementer med samme maksimumhyppighed, vælges den sidste.\r\n    Du kan angive en valgfri værdi af typen <code>comparisonCriteria</code>, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Find de elementer, der vises mest hyppigt på listen, <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "Returnerer antallet af elementer på listen, der ikke er null.",
        "Documentation.LongDescription": "Returnerer antallet af elementer på listen <code>list</code>, der ikke er null.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "Returnerer en liste over forskydninger for inputtet.",
        "Documentation.LongDescription": "Returnerer en liste over forskydninger for inputlisten <code>list</code>.\r\n    Når du bruger List.Transform til at ændre en liste, kan listen over positioner bruges til at give transformationens adgang til positionen.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find forskydningerne for værdier på listen {1, 2, 3, 4, null, 5}.",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "Returnerer produktet af tallene på listen.",
        "Documentation.LongDescription": "Returnerer produktet af de tal, der ikke er null, på listen, <code>numbersList</code>. Returnerer null, hvis der ikke er tal, som ikke er null, på listen.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Find produktet af tallene på listen <code>{1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "Returnerer en liste over tilfældige tal.",
        "Documentation.LongDescription": "Returnerer en liste over tilfældige tal mellem 0 og 1 med det antal værdier, der skal genereres, og en valgfri seed-værdi.\r\n<ul>\r\n   <li><code>count</code>: Det antal tilfældige værdier, der skal genereres.</li>\r\n   <li><code>seed</code>:  <i>[Valgfrit]</i> En numerisk værdi, der bruges som basistal for generatoren af tilfældige tal.  Hvis den udelades, genereres der en entydig liste over tilfældige tal, hver gang du kalder funktionen.  Hvis du angiver basisværdien med et tal, genererer alle kald til funktionen den samme liste over tilfældige tal.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over 3 tilfældige tal.",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "Opret en liste over 3 tilfældige tal, hvor du angiver basisværdien.",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "Returnerer en liste, der springer det angivne antal elementer over i starten af listen.",
        "Documentation.LongDescription": "Returnerer en liste, der fjerner første element på listen <code>list</code>. Hvis <code>list</code> er en tom liste, returneres der en tom liste.\r\nDenne funktion kræver en valgfri parameter, <code>countOrCondition</code>, for at understøtte fjernelse af flere værdier som angivet nedenfor.\r\n <ul>\r\n <li>Hvis der er angivet et tal, fjernes op til dette antal elementer. </li>\r\n <li>Hvis der er angivet en betingelse, fjernes alle efterfølgende matchende elementer i starten af <code>list</code>.</li>\r\n <li>Hvis denne parameter er null, observeres standardfunktionsmåden. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra {1, 2, 3, 4, 5} uden de første 3 tal.",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Opret en liste ud fra {5, 4, 2, 6, 1}, der starter med et tal, der er mindre end 3.",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "Returnerer en liste, der fjerner det angivne antal elementer fra slutningen af listen.",
        "Documentation.LongDescription": "Returnerer en liste, der fjerner de sidste <code>countOrCondition</code> elementer fra slutningen af listen <code>list</code>. Hvis <code>list</code> har mindre end <code>countOrCondition</code> elementer, returneres en tom liste.\r\n <ul>\r\n <li>Hvis der er angivet et tal, fjernes op til dette antal elementer. </li>\r\n <li>Hvis der er angivet en betingelse, fjernes alle efterfølgende matchende elementer i slutningen af <code>list</code> .</li>\r\n <li>Hvis denne parameter er null, fjernes kun ét element. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra {1, 2, 3, 4, 5} uden de sidste 3 tal.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Opret en liste ud fra {5, 4, 2, 6, 4}, der slutter med et tal, der er mindre end 3.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "Fjerner alle værdier fra den angivne liste, som ikke er null.",
        "Documentation.LongDescription": "Fjerner alle forekomster af de værdier, der ikke er null, i <code>list</code>. Hvis der ikke findes værdier, som ikke er null, på listen, returneres den oprindelige liste.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Fjern de værdier, som ikke er null, fra listen {1, 2, 3, null, 4, 5, null, 6}.",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "Vender om på rækkefølgen af værdier på listen.",
        "Documentation.LongDescription": "Returnerer en liste over værdierne på listen <code>list</code> i omvendt rækkefølge.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra {1..10} i omvendt rækkefølge.",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "Returnerer ét listeelement for en liste med længden én. Ellers udløses der en undtagelse.",
        "Documentation.LongDescription": "Hvis der kun er ét element på listen <code>list</code>, returneres dette element.\r\n    Hvis der er mere end ét element, eller listen er tom, udløser funktionen en undtagelse.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find den eneste værdi på listen {1}.",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "Find den eneste værdi på listen {1, 2, 3}.",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "Returnerer ét listeelement for en liste med længden én og standardværdien for en tom liste.",
        "Documentation.LongDescription": "Hvis der kun er ét element på listen <code>list</code>, returneres dette element.\r\n    Hvis listen er tom, returnerer funktionen en null-værdi, medmindre der er angivet en valgfri <code>default</code>. Hvis der er mere end ét element på listen, returnerer funktionen en fejl.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find den eneste værdi på listen {1}.",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "Find den eneste værdi på listen {}.",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "Find den eneste værdi på listen {}. Hvis listen er tom, returneres -1.",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "Returnerer en liste, der springer det angivne antal elementer over i starten af listen.",
        "Documentation.LongDescription": "Returnerer en liste, der springer første element på listen <code>list</code>over. Hvis <code>list</code> er en tom liste, returneres der en tom liste.\r\nDenne funktion kræver en valgfri parameter, <code>countOrCondition</code>, for at understøtte, at flere værdier springes over, som angivet nedenfor.\r\n <ul>\r\n <li>Hvis der er angivet et tal, springes op til dette antal elementer over. </li>\r\n <li>Hvis der er angivet en betingelse, springes alle efterfølgende matchende elementer over i starten af <code>list</code>.</li>\r\n <li>Hvis denne parameter er null, observeres standardfunktionsmåden. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste ud fra {1, 2, 3, 4, 5} uden de første 3 tal.",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Opret en liste ud fra {5, 4, 2, 6, 1}, der starter med et tal, der er mindre end 3.",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "Sorterer en liste over data i overensstemmelse med de angivne kriterier.",
        "Documentation.LongDescription": "Sorterer en liste over data, <code>list</code>, i overensstemmelse med de angivne valgfrie kriterier.\r\n    Du kan angive en valgfri parameter, <code>comparisonCriteria</code>, som sammenligningskriterie. Den kan tage følgende værdier:\r\n    <ul>\r\n    <li> Hvis du vil styre rækkefølgen, kan sammenligningskriteriet være en værdi af typen Order enum. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> Hvis du vil beregne en nøgle, der skal bruges til sortering, kan der bruges en funktion med ét argument. </li>\r\n    <li> Hvis du både vil vælge en nøgle og styre rækkefølgen, kan sammenligningskriteriet være en liste, der indeholder nøglen og rækkefølgen (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> Hvis du vil styre sammenligningen fuldstændig, kan der bruges en funktion med to argumenter. Denne funktion overføres til to elementer fra listen (to vilkårlige elementer i en hvilken som helst rækkefølge). Funktionen skal returnere en af følgende værdier:\r\n        <ul>\r\n            <li> <code>-1</code>: Det første element er mindre end det andet element.</li>\r\n            <li> <code>0</code>: Elementerne er ens.</li>\r\n            <li> <code>1</code>: Det første element er større end det andet element.</li>\r\n        </ul>\r\n        Value.Compare er en metode, der kan bruges til at delegere denne logik. </li>\r\n    </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Sortér listen {2, 3, 1}.",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Sortér listen {2, 3, 1} i faldende rækkefølge.",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "Sortér listen {2, 3, 1} i faldende rækkefølge ved hjælp af metoden Value.Compare.",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "Returnerer et estimat, der er baseret på et eksempel, af standardafvigelsen.",
        "Documentation.LongDescription": "Returnerer et estimat, der er baseret på et eksempel, af værdierne på listen <code>numbersList</code>.\r\n    Hvis <code>numbersList</code> er en liste over tal, returneres der et tal. \r\n    Der udløses en undtagelse for en tom liste eller for en liste over elementer, der ikke er af typen <code>number</code>.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Find standardafvigelsen for tallene 1-5.",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "Returnerer summen af elementerne på listen.",
        "Documentation.LongDescription": "Returnerer summen af de værdier, der ikke er null, på listen, <code>list</code>.  Returnerer null, hvis der ikke er tal, som ikke er null, på listen.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "Find summen af tallene på listen <code>{1, 2, 3}</code>.",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "Returnerer foreningen for de listeværdier, der blev fundet i inputtet.",
        "Documentation.LongDescription": "Anvender en liste over lister <code>lists</code>, opretter foreninger for elementer på de enkelte lister og returnerer dem på outputlisten. Den returnerede liste indeholder derfor alle elementer på en hvilken som helst inputliste.\r\n    Denne handling bevarer den traditionelle multimængdesemantik, så dublerede værdier sammenlignes som led i foreningen. \r\n    Du kan angive en valgfri kriterieværdi for ligningen, <code>equationCriteria</code>, for at styre kvalitetstesten. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Opret en forening for listen {1..5}, {2..6}, {3..7}.",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "Returnerer en liste over lister ved at kombinere elementer på samme position i flere lister.",
        "Documentation.LongDescription": "Tager en liste over lister, <code>lists</code>, og returnerer en liste over lister, der kombinerer elementer på samme position.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Zipper de to enkle lister {1, 2} og {3, 4}.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Zipper de to enkle lister med forskellige længder {1, 2} og {3}.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "Opretter en logisk værdi ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>logical</code> ud fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, vil <code>Logical.From</code> returnere <code>null</code>. Hvis den angivne <code>value</code> er <code>logical</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en værdi af typen <code>logical</code>:\r\n      <ul>\r\n        <li><code>text</code>: En værdi af typen <code>logical</code> fra tekstværdien, enten <code>\"true\"</code> eller <code>\"false\"</code>. Se <code>Logical.FromText</code> for at få flere oplysninger.</li>\r\n        <li><code>number</code>: <code>false</code>, hvis <code>value</code> er lig med <code>0</code>. Ellers <code>true</code>.</li>\r\n      </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>2</code> til en værdi af typen <code>logical</code>.",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "Opretter en logisk værdi ud fra tekstværdien \"true\" og \"false\".",
        "Documentation.LongDescription": "Opretter en logisk værdi ud fra tekstværdien <code>text</code>, \"true\" eller \"false\". Hvis <code>text</code> indeholder en anden streng, udløses der en undtagelse. Der skelnes mellem store og små bogstaver i tekstværdien <code>text</code>.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Opret en logisk værdi ud fra tekststrengen \"true\".",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "Opret en logisk værdi ud fra tekststrengen \"a\".",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "Returnerer den logiske tekstværdi \"true\" eller \"false\".",
        "Documentation.LongDescription": "Opretter en tekstværdi ud fra den logiske værdi <code>logicalValue</code>, enten <code>true</code> eller <code>false</code>. Hvis <code>logicalValue</code> ikke er en logisk værdi, udløses der en undtagelse.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Opret en tekstværdi ud fra det logiske <code>true</code>.",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "Returnerer den absolutte værdi af tallet.",
        "Documentation.LongDescription": "Returnerer den absolutte værdi af <code>number</code>. Hvis <code>number</code> er null, returnerer <code>Number.Abs</code> null.\r\n    <ul>\r\n        <li><code>number</code>: En værdi af typen <code>number</code>, som den absolutte værdi skal beregnes for.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Den absolutte værdi -3.",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "Returnerer arcus cosinus til tallet.",
        "Documentation.LongDescription": "Returnerer arcus cosinus til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "Returnerer arcus sinus til tallet.",
        "Documentation.LongDescription": "Returnerer arcus sinus til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "Returnerer arcus tangens til tallet.",
        "Documentation.LongDescription": "Returnerer arcus tangens til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "Returnerer en byte, hvor de enkelte bit er det modsatte af inputtet.",
        "Documentation.LongDescription": "Returnerer resultatet af at udføre en bitvis \"Not\"-handling for <code>number</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "Returnerer cosinus til tallet.",
        "Documentation.LongDescription": "Returnerer cosinus til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Find cosinus af vinklen 0.",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "Returnerer den hyperbolske cosinus til tallet.",
        "Documentation.LongDescription": "Returnerer den hyperbolske cosinus til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "Opløfter e til en angivet potens.",
        "Documentation.LongDescription": "Returnerer resultatet af at opløfte e til potensen <code>number</code> (eksponentiel funktion).\r\n      <ul>\r\n        <li><code>number</code>: En værdi af typen <code>number</code>, som den eksponentielle funktion skal beregnes for. Hvis <code>number</code> er null, returnerer <code>Number.Exp</code> null. </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Opløft e til potensen 3.",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "Returnerer tallets fakultet.",
        "Documentation.LongDescription": "Returnerer tallets fakultet <code>number</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Find fakultetet 10.",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "Opretter et tal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>number</code> ud fra den angivne <code>value</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").\r\nHvis den angivne <code>value</code> er <code>null</code>, vil <code>Number.From</code> returnere <code>null</code>. Hvis den angivne <code>value</code> er <code>number</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en værdi af typen <code>number</code>:\r\n      <ul>\r\n        <li><code>text</code>: En værdi af typen <code>number</code> fra en tekstrepræsentation. Almindelige tekstformater håndteres (15\", \"3,423.10\", \"5.0E-10\"). Se <code>Number.FromText</code> for at få flere oplysninger.</li>\r\n        <li><code>logical</code>: 1 for <code>true</code>, 0 for <code>false</code>.</li>\r\n        <li><code>datetime</code>: Et reelt tal med dobbeltpræcision, der indeholder en OLE Automation-datoækvivalens.</li>\r\n        <li><code>datetimezone</code>: Et reelt tal med dobbeltpræcision, der indeholder en OLE Automation-datoækvivalens for den lokale dato og det lokale klokkeslæt, <code>value</code>.</li>\r\n        <li><code>date</code>: Et reelt tal med dobbeltpræcision, der indeholder en OLE Automation-datoækvivalens.</li>\r\n        <li><code>time</code>:  Udtrykt i brøkdage.</li>\r\n        <li><code>duration</code>: Udtrykt i hele dage og brøkdage.</li>\r\n      </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hent <code>\"4\"</code> for værdien <code>number</code>.",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hent <code>#datetime(2020, 3, 20, 6, 0, 0)</code> for værdien <code>number</code>.",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "Hent <code>tal</code>værdien af <code>\"12.3%\"</code>.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "Opretter tal ud fra almindelige tekstformater (15\", \"3,423.10\", \"5.0E-10\").",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>number</code> ud fra den angivne tekstværdi, <code>text</code>.\r\n <ul>\r\n  <li><code>text</code>: Tekstrepræsentationen for en talværdi. Repræsentationen skal være i et almindelige talformat, som f.eks. \"15\", \"3,423.10\", \"5.0E-10\".</li>\r\n  <li><code>culture</code>: En valgfri kultur, der styrer, hvordan <code>text</code> fortolkes (f.eks. \"en-US\").</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hent talværdien <code>\"4\"</code>.",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hent talværdien <code>\"5.0e-10\"</code>.",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "Angiver, om værdien er et lige tal.",
        "Documentation.LongDescription": "Angiver, om værdien, <code>number</code>, er et lige tal, ved at returnere <code>true</code>, hvis det er et lige tal. Ellers returneres <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollér, om 625 er et lige tal.",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "Kontrollér, om 82 er et lige tal.",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "Angiver, om værdien er NaN (ikke et tal).",
        "Documentation.LongDescription": "Angiver, om værdien er NaN (ikke et tal). Returnerer <code>true</code>, hvis <code>number</code> er identisk med <code>Number.IsNaN</code>. Ellers returneres <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollér, om 0 divideret med 0 er NaN.",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "Kontrollér, om 1 divideret med 0 er NaN.",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "Angiver, om værdien er et ulige tal.",
        "Documentation.LongDescription": "Angiver, om værdien er et ulige tal. Returnerer <code>true</code>, hvis <code>number</code> er et ulige tal. Ellers returneres <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Kontrollér, om 625 er et ulige tal.",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "Kontrollér, om 82 er et ulige tal.",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "Returnerer tallets naturlige logaritme.",
        "Documentation.LongDescription": "Returnerer et tals naturlige logaritme, <code>number</code>. Hvis <code>number</code> er null, returnerer <code>Number.Ln</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hent den naturlige logaritme for 15.",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "Returnerer logaritmen for tallet til det grundtal, du angiver (standard er e).",
        "Documentation.LongDescription": "Returnerer logaritmen for et tal, <code>number</code>, til det angivne grundtal <code>base</code>. Hvis <code>base</code> ikke er angivet, er standardværdien Number.E.\r\n    Hvis <code>number</code> er null, returnerer <code>Number.Log</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hent logaritmen med grundtallet 10 for 2.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "Hent logaritmen med grundtallet e for 2.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "Returnerer logaritmen med grundtallet 10 for tallet.",
        "Documentation.LongDescription": "Returnerer logaritmen med grundtallet 10 for et tal, <code>number</code>. Hvis <code>number</code> er null, returnerer <code>Number.Log10</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hent logaritmen med grundtallet 10 for 2.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "Returnerer det afrundede tal. Antallet af cifre og afrundingstilstand kan angives.",
        "Documentation.LongDescription": "Returnerer resultatet af afrunding <code>number</code> til det nærmeste tal. Hvis <code>number</code> er null, <code>Number.Round</code> returnerer null.<br>\r\n<br>\r\n      Som standard afrundes <code>number</code> til det nærmeste heltal, og bindinger brydes ved at afrunde til det nærmeste lige tal (ved hjælp af <code>RoundingMode.ToEven</code>, også kendt som \"bankers afrunding\").<br>\r\n      <br>\r\n      Disse standarder kan dog tilsidesættes via følgende valgfrie parametre.\r\n      <ul>\r\n        <li><code>digits</code>: Medfører, at <code>number</code> afrundes til det angivne antal decimaler.</li>\r\n        <li><code>roundingMode</code>: Tilsidesætter standardbrydningsadfærden, når <code>number</code> er midtpunktet mellem to potentielle afrundede værdier\r\n      (se <code>RoundingMode.Type</code> for mulige værdier).</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Afrunder 1,234 til det nærmeste heltal.",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "Afrunder 1,56 til det nærmeste heltal.",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "Afrund 1,2345 til to decimaler.",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "Afrund 1,2345 til tre decimaler (rund op).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "Afrund 1,2345 til tre decimaler (rund ned).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "Returnerer resultatet af at runde positive tal op og negative tal ned. Antallet af cifre kan angives.",
        "Documentation.LongDescription": "Returnerer resultatet af at afrunde <code>number</code> på baggrund af tallets fortegn. Denne funktion runder positive tal op og negative tal ned.\r\n    Hvis <code>digits</code> er angivet, afrundes <code>number</code> til <code>digits</code> antallet af decimaltal.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Rund tallet -1,2 væk fra nul.",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "Rund tallet 1,2 væk fra nul.",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "Afrund tallet -1,234 til to decimaltal væk fra nul.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "Returnerer det forrige højeste tal. Antallet af cifre kan angives.",
        "Documentation.LongDescription": "Returnerer resultatet af at runde <code>number</code> ned til det forrige højeste heltal. Hvis <code>number</code> er null, returnerer denne funktion null.\r\n\r\n    Hvis der angives <code>digits</code>, afrundes <code>number</code> til det angivne antal decimaltal.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Rund 1,234 ned til et heltal.",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "Rund 1,999 ned til et heltal.",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "Rund 1,999 ned til to decimaler.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "Returnerer resultatet af at runde positive tal ned og negative tal op. Antallet af cifre kan angives.",
        "Documentation.LongDescription": "Returnerer resultatet af at afrunde <code>number</code> på baggrund af tallets fortegn. Denne funktion runder positive tal ned og negative tal op.\r\n    Hvis <code>digits</code> er angivet, afrundes <code>number</code> til <code>digits</code> antallet af decimaltal.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Rund tallet -1,2 ned mod nul.",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "Rund tallet 1,2 ned mod nul.",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "Afrund tallet -1,234 til to decimaler mod nul.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "Returnerer det næste højeste tal. Antallet af cifre kan angives.",
        "Documentation.LongDescription": "Returnerer resultatet af at runde <code>number</code> op til det næste højeste heltal. Hvis <code>number</code> er null, returnerer denne funktion null.\r\n    Hvis der angives <code>digits</code>, afrundes <code>number</code> til det angivne antal decimaltal.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Rund 1,234 op til et heltal.",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "Rund 1,999 op til et heltal.",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "Rund 1,234 op til to decimaler.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "Returnerer 1, hvis tallet er positivt, -1, hvis det er negativt, og 0, hvis det er nul.",
        "Documentation.LongDescription": "Returnerer 1, hvis <code>number</code> er et positivt tal, -1, hvis det er et negativt tal, og 0, hvis det er nul.\r\n    Hvis <code>number</code> er null, returnerer <code>Number.Sign</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Afgør fortegnet for 182.",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "Afgør fortegnet for -182.",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "Afgør fortegnet for 0.",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "Returnerer sinus til tallet.",
        "Documentation.LongDescription": "Returnerer sinus til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Find sinus af vinklen 0.",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "Returnerer den hyperbolske sinus til tallet.",
        "Documentation.LongDescription": "Returnerer den hyperbolske sinus til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "Returnerer kvadratroden af tallet.",
        "Documentation.LongDescription": "Returnerer kvadratroden af <code>number</code>. \r\n    Hvis <code>number</code> er null, returnerer <code>Number.Sqrt</code> null. Hvis det er en negativ værdi, returneres <code>Number.NaN</code> (ikke et tal).",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Find kvadratroden af 625.",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "Find kvadratroden af 85.",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "Returnerer tangensen til tallet.",
        "Documentation.LongDescription": "Returnerer tangensen til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Find tangensen af vinklen 1.",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "Returnerer den hyperbolske tangens til tallet.",
        "Documentation.LongDescription": "Returnerer den hyperbolske tangens til <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "Konverterer det angivne tal til tekst.",
        "Documentation.LongDescription": "Konverterer den numeriske værdi <code>number</code> til en tekstværdi i overensstemmelse med det format, der er angivet af <code>format</code>.<br>\r\n    <br>\r\n    Formatet er en tekstværdi, der angiver, hvordan tallet skal konverteres. Du kan få flere oplysninger om de understøttede formatværdier på https://go.microsoft.com/fwlink/?linkid=2241210 and https://go.microsoft.com/fwlink/?linkid=2240884.<br>\r\n    <br>\r\n    Der kan også angives en valgfri <code>culture</code> (f.eks. \"da-DK\") for at styre den kulturafhængige adfærd af  <code>format</code>.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Konvertér et tal til tekst uden at angive et format.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "Konvertér et tal til eksponentielt format.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "Konvertér et tal til procentformat med kun én decimalplads.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "Returnerer en tabel over OData-feeds, der tilbydes af en OData-tjeneste.",
        "Documentation.LongDescription": "Returnerer en tabel med OData-feeds, der tilbydes af en OData-tjeneste fra en URI <code>serviceUri</code>, overskrifter <code>headers</code>. En boolesk værdi, der angiver, om der skal bruges samtidige forbindelser eller en valgfri postparameter, <code>options</code>, kan angives for at kontrollere følgende muligheder:\r\n    <ul>\r\n    <li><code>Query</code>: Føj forespørgselsparametre til URL'en ved hjælp af programmering uden at skulle bekymre dig om at undslippe. </li>\r\n    <li> <code>Headers</code> : Angivelse af denne værdi som en post vil levere yderligere headers til en HTTP-anmodning.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: Angivelse af denne værdi som en liste vil udelukke disse HTTP-hovednøgler fra at være en del af beregningen til cachelagring af data.</li>\r\n    <li> <code>ApiKeyName</code> : Hvis målwebstedet ligner en API-nøgle, kan denne parameter bruges til at angive navnet (ikke værdien) på den nøgleparameter, der skal bruges i URL-adressen. Den faktiske nøgleværdi er angivet i legitimationsoplysningerne.</li>\r\n    <li> <code>Timeout</code> : Angivelse af denne værdi som en varighed, vil ændre timeout for en HTTP-anmodning. Standardværdien er 600 sekunder.</li>\r\n    <li> <code>EnableBatch</code> : En logisk (sand/falsk), der angiver, om der skal tillades generering af en OData $batch-anmodning, hvis MaxUriLength overskrides (standard er falsk).</li>\r\n    <li> <code>MaxUriLength</code> : Et tal, der angiver den maksimale længde af en tilladt uri sendt til en OData-tjeneste. Hvis det overskrides, og EnableBatch er sandt, vil anmodningen blive sendt til et OData $batch-slutpunkt, ellers vil det mislykkes (standard er 2048).</li>\r\n    <li> <code>Concurrent</code> : En logisk (sand/falsk), når den er sat til sand, vil anmodninger til tjenesten blive lavet samtidigt. Når den er indstillet til falsk, vil anmodninger blive foretaget sekventielt. Når den ikke er angivet, vil værdien blive bestemt af tjenestens AsynchronousRequestsSupported-annotation. Hvis tjenesten ikke angiver, om AsynchronousRequestsSupported er understøttet, vil anmodninger blive foretaget sekventielt.</li>\r\n    <li> <code>ODataVersion</code> : Et nummer (3 eller 4), der angiver den OData-protokolversion, der skal bruges til denne OData-tjeneste. Når det ikke er angivet, vil alle understøttede versioner blive anmodet om. Tjenesteversionen bestemmes af OData-versionsoverskriften, der returneres af tjenesten.</li>\r\n    <li> <code>FunctionOverloads</code> : En logisk (sand/falsk), når den er sat til sand, vil overbelastninger af funktionsimport blive opført i navigatoren som separate poster. Når den er sat til falsk, vil overbelastninger af funktionsimport blive opført som én unionsfunktion i navigatoren. Standardværdi for V3: falsk. Standardværdi for V4: sand.</li>\r\n    <li> <code>MoreColumns</code> : En logisk (sand/falsk), når den er indstillet til sand, tilføjer en \"Flere kolonner\"-kolonne til hver enhedsfeed, der indeholder åbne typer og polymorfe typer. Dette vil indeholde de felter, der ikke er erklæret i basistypen. Når falsk, er dette felt ikke til stede. Standard er falsk.</li>\r\n    <li> <code>IncludeAnnotations</code> : En kommasepareret liste over navneområde, kvalificerede navne på udtryk eller mønstre, der skal inkluderes med \"*\" som et jokertegn. Som standard er ingen af annoteringerne inkluderet.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code> : En kommasepareret liste over navneområde-kvalificerede navne eller mønstre, der skal inkluderes i anmodninger for metadokumenter, med \"*\" som et jokertegn. Indeholder som standard de samme annoteringer som IncludeAnnotations.</li>\r\n    <li> <code>OmitValues</code> : Tillader OData-tjenesten at udskrive visse værdier i svar. Hvis det bekræftes af tjenesten, vil vi udlede disse værdier fra de udeladte felter. Valgmuligheder omfatter:\r\n      <ul>\r\n    <li><code>ODataOmitValues.Nulls</code> : Tillader OData-tjenesten at udelade null-værdier.</li>\r\n    </ul>\r\n    </li>\r\n    <li> <code>Implementation</code> : Angiver implementeringen af OData-connectoren, der skal bruges. Gyldige værdier er \"2.0\" or null.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Opret forbindelse til TripPin OData-tjenesten.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "Returnerer resultatet af forsøget på at indføre SQL-funktioner til en ODBC-driver.",
        "Documentation.LongDescription": "Returnerer resultatet af forsøget på at udlede SQL-egenskaber med forbindelsesstrengen <code>connectionString</code> ved hjælp af ODBC. <code>connectionString</code> kan være tekst eller en post med egenskabsværdipar. Egenskabsværdier kan enten være en tekst eller et tal.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Returner de afledte SQL-funktioner for en forbindelsesstreng.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "Returnerer indholdet af Parquet-dokumentet som en tabel.",
        "Documentation.LongDescription": "Returnerer indholdet af Parquet-dokumentet som en tabel. Indstillingerne omfatter:\n    <ul>\n    <li> <code>TypeMapping</code> : En tekstværdi, der styrer standardtype-tilknytningen, når du læser og skriver filer. Standardværdien er null og forsøger at bevare så meget pålidelighed som muligt for den oprindelige type. Værdien \"Sql\" giver de resultater, der er mest kompatible med Sql Server.</li>\n    </ul>",
        "Documentation.Category": "Tilgår data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Tilgår data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "Returnerer en procentværdi af den givne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>procent</code> fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Percentage.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>text</code> med et efterstillet procentsymbol, returneres det konverterede decimaltal. Ellers konverteres værdien til en <code>number</code> ved hjælp af <code>Number.From</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Få <code>percentage</code>-værdien af <code>\"12.3%\"</code>.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "Returnerer en post for datarammer fra RData-filen.",
        "Documentation.LongDescription": "Returnerer en post for datarammer fra RData-filen.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "Kombinerer posterne på den angivne liste.",
        "Documentation.LongDescription": "Kombinerer posterne på den angivne <code>records</code>. Hvis <code>records</code> indeholder værdier, der ikke er poster, returneres der en fejl.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Opret en kombineret post ud fra posterne.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "Returnerer antallet af felter i posten.",
        "Documentation.LongDescription": "Returnerer antallet af felter i posten <code>record</code>.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Find antallet af felter i posten.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "Returnerer navnene på felterne.",
        "Documentation.LongDescription": "Returnerer navnene på felterne i posten <code>record</code> som tekst.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find navnene på felterne i posten.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "Returnerer en liste over feltværdier.",
        "Documentation.LongDescription": "Returnerer en liste over feltværdier i posten <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Find feltværdierne i posten.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "Opretter en post ud fra en tabel i formatet {[Name = name, Value = value]}.",
        "Documentation.LongDescription": "Returnerer en post fra en tabel med poster <code>table</code>, der indeholder feltnavne og værdinavne <code>{[Name = name, Value = value]}</code>. Der udløses en undtagelse, hvis feltnavnene ikke er entydige.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Opret en post ud fra tabellen i formen Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}).",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "Returnerer en liste over værdier, der indeholder feltværdierne fra inputposten.",
        "Documentation.LongDescription": "Returnerer en liste over værdier, der indeholder feltværdierne fra inputtet <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Udtræk feltværdierne fra en post.",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "Returnerer et abstrakt syntakstræ (AST), der repræsenterer adgang til en kolonne i et rækkeudtryk.",
        "Documentation.LongDescription": "Returnerer et abstrakt syntakstræ (AST), der repræsenterer adgang til kolonne <code>columnName</code> af rækken i et rækkeudtryk.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Opretter en AST, der repræsenterer adgang til kolonnen \"CustomerName\".",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "Returnerer det abstrakte syntakstræ (AST) for en funktions brødtekst.",
        "Documentation.LongDescription": "<p>Returnerer det abstrakte syntakstræ (AST) for brødteksten i <code>function</code>, normaliseret til et <i>rækkeudtryk</i>:\r\n<ul>\r\n  <li>Funktionen skal være et 1-argument lambda.</li>\r\n  <li>Alle referencer til funktionsparameteren erstattes med <code>RowExpression.Row</code>.</li>\r\n  <li>Alle referencer til kolonner erstattes med <code>RowExpression.Column(<i>columnName</i>)</code>.</li>\r\n  <li>AST forenkles, så den kun indeholder noder af følgende typer\r\n    <ul>\r\n      <li><code>Konstant</code></li>\r\n      <li><code>Aktivering</code></li>\r\n      <li><code>Monadisk</code></li>\r\n      <li><code>Binær</code></li>\r\n      <li><code>hvis</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Der udløses en fejl, hvis et rækkeudtryk AST ikke kan returneres for brødteksten i <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Returnerer AST for selve funktionen <code>each [CustomerID] = \"ALFKI\"</code>",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "Opretter et enkeltpræcisions flydende tal ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en enkelt <code>number</code> værdi fra den angivne <code>value</code>. Hvis den angivne <code>value</code> er <code>null</code>, returnerer <code>Single.From</code> <code>null</code>.  Hvis den angivne <code>value</code> er <code>number</code> inden for intervallet single, returneres <code>value</code>, ellers returneres der en fejl. Hvis <code>value</code> er af en anden type, konverteres den først til en <code>number</code> ved hjælp af <code>Number.FromText</code>. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Få et enkeltpræcisions flydende tal af typen <code>number</code> for <code>\"1.5\"</code>.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "Returnerer en tabel med data fra slutpunktet i et Smartsheet-indeks.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "Foretager et kald til Smartsheet 2.0 REST-API'en på det angivne slutpunkt og omdanner det returnerede dataelement til en tabel.",
        "Documentation.Examples": [
          {
            "Description": "Udtrækker en tabel med brugeroplysninger fra Smartsheet-API'en",
            "Code": "Smartsheet.Content(\"brugere\")",
            "Result": "En tabel med brugeroplysninger som returneret af Smartsheet-API'en"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne afgrænsere.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne afgrænsere.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input med komma eller semikolon, ignorer anførselstegn og citerede afgrænsere, og start fra begyndelsen af inputtet.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "Opdel input med komma eller semikolon, ignorer anførselstegn og citerede afgrænsere, og start fra slutningen af inputtet.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste i overensstemmelse med den angivne afgrænser.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst på en liste i overensstemmelse med den angivne afgrænser.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input med komma, ignorer citerede kommaer.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne afgrænsere i rækkefølge.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne afgrænsere i rækkefølge.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input med komma, derefter semikolon, startende fra begyndelsen af input.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "Opdel input med komma, derefter semikolon, hvor anførselstegn behandles som ethvert andet tegn, og start fra slutningen af input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne længder.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne længder.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input i de første to tegn efterfulgt af de næste tre, startende fra begyndelsen af input.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "Opdel input i de første tre tegn efterfulgt af de næste to, startende fra slutningen af input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne placeringer.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst på en liste med tekst ved alle de angivne placeringer.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input på de angivne positioner, startende fra begyndelsen af input.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "Opdel input på de angivne positioner, startende fra slutningen af input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "Returnerer en funktion, der opdeler tekst på en liste i overensstemmelse med de angivne forskydninger og længder.",
        "Documentation.LongDescription": "Returnerer en funktion, der opdeler tekst i en tekstliste i henhold til de angivne forskydninger og længder. En nullængde angiver, at alle resterende input skal inkluderes.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel input efter de angivne positions- og længdepar, startende fra begyndelsen af input. Bemærk, at intervallerne i dette eksempel overlapper hinanden.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "Opdel input med de angivne positions- og længdepar, startende fra slutningen af input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "Opdel inputtet i et postnummer med fast længde efterfulgt af et bynavn med variabel længde.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "Returnerer en funktion, der gentager opdeling af tekst på en liste efter den angivne længde.",
        "Documentation.LongDescription": "Returnerer en funktion, der gentager opdeling af tekst på en liste efter den angivne længde.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Opdel gentagne gange input i segmenter af tre tegn, startende fra begyndelsen af input.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "Opdel gentagne gange input i segmenter af tre tegn, startende fra slutningen af input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "Returnerer det omtrentlige antal af rækker i tabellen.",
        "Documentation.LongDescription": "Returnerer det omtrentlige antal rækker i <code>table</code>, eller en fejl, hvis datakilden ikke understøtter tilnærmelsen.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Estimer antallet af forskellige kombinationer af by og stat i en stor tabel, som kan bruges som et kardinalitetsestimat for kolonnerne. Kardinalitetsestimater er vigtige nok til, at forskellige datakilder (såsom SQL Server) understøtter denne særlige tilnærmelse, ofte ved hjælp af en algoritme kaldet HyperLogLog.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "Returnerer antallet af kolonner i tabellen.",
        "Documentation.LongDescription": "Returnerer antallet af kolonner i tabellen <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Find antallet af kolonner i tabellen.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "Returnerer kolonnenavnene som en liste.",
        "Documentation.LongDescription": "Returnerer kolonnenavnene i tabellen <code>table</code> som en liste med tekst.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Find kolonnenavnene i tabellen.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "Returnerer den første række eller en angivet standardværdi.",
        "Documentation.LongDescription": "Returnerer den første række i <code>table</code> eller en valgfri standardværdi, <code>default</code>, hvis tabellen er tom.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find den første række i tabellen.",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Find den første række i tabellen <code>({})</code>, eller returner [a = 0, b = 0], hvis tabellen er tom.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "Returnerer den første kolonne i den første række for tabellen eller en angivet standardværdi.",
        "Documentation.LongDescription": "Returnerer den første kolonne i den første række for tabellen <code>table</code> eller en angivet standardværdi.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "Angiver, om tabellen kun indeholder entydige rækker (ingen dubletter).",
        "Documentation.LongDescription": "Angiver, om <code>table</code> kun indeholder entydige rækker (ingen dubletter). Returnerer <code>true</code>, hvis rækkerne er entydige. Ellers returneres <code>false</code>.\r\n    En valgfri parameter, <code>comparisonCriteria</code>, angiver, hvilke kolonner i tabellen der skal undersøges for dubletter. Hvis <code>comparisonCriteria</code> ikke er angivet, undersøges alle kolonner.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om tabellen er entydig.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "Find ud af, om tabellen er entydig i kolonnen.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "Angiver, om tabellen indeholder rækker.",
        "Documentation.LongDescription": "Angiver, om <code>table</code> indeholder rækker. Returnerer <code>true</code>, hvis der ikke er nogen rækker (dvs. tabellen er tom). Ellers returneres <code>false</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om tabellen er tom.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "Find ud af, om tabellen <code>({})</code> er tom.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "Returnerer nøglerne til den angivne tabel.",
        "Documentation.LongDescription": "Returnerer nøglerne til den angivne tabel.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Hent listen over nøgler til en tabel.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "Returnerer den sidste række eller en angivet standardværdi.",
        "Documentation.LongDescription": "Returnerer den sidste række i <code>table</code> eller en valgfri standardværdi, <code>default</code>, hvis tabellen er tom.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find den sidste række i tabellen.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "Find den sidste række i tabellen <code>({})</code>, eller returner [a = 0, b = 0], hvis tabellen er tom.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "Returnerer antallet af rækker i tabellen.",
        "Documentation.LongDescription": "Returnerer antallet af rækker i <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Find antallet af rækker i tabellen.",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "Returnerer den eneste række i tabellen.",
        "Documentation.LongDescription": "Returnerer den eneste række i den ene række <code>table</code>. Hvis <code>table</code> indeholder mere end én række, udløses der en undtagelse.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Find den ene række i tabellen.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "Opretter en liste over indlejrede lister over kolonneværdier fra en tabel.",
        "Documentation.LongDescription": "Opretter en liste over indlejrede lister ud fra tabellen <code>table</code>.  De enkelte listeelementer er en indre liste, der indeholder kolonneværdierne.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over kolonneværdier ud fra tabellen.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "Konverterer en tabel til en liste ved at anvende den angivne samlefunktion på hver række med værdier i tabellen.",
        "Documentation.LongDescription": "Konverterer en tabel til en liste ved at anvende den angivne samlefunktion på hver række med værdier i tabellen.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Kombiner teksten i de enkelte rækker med et komma.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "Konverterer en tabel til en liste over poster.",
        "Documentation.LongDescription": "Konverterer en tabel, <code>table</code>, til en liste over poster.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Konvertér tabellen til en liste over poster.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "Opretter en liste over indlejrede lister over rækkeværdier fra en tabel.",
        "Documentation.LongDescription": "Opretter en liste over indlejrede lister ud fra tabellen <code>table</code>.  De enkelte listeelementer er en indre liste, der indeholder rækkeværdierne.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over rækkeværdier ud fra tabellen.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "Opretter en ændret fejlpost, som ikke udløser en fallback, når den kastes af en handler, der er defineret på en visning (via Table.View).",
        "Documentation.LongDescription": "Opretter en ændret fejlpost fra <code>errorRecord</code>, som ikke udløser en fallback, når den kastes af en handler, der er defineret på en visning (via Table.View).",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "Opretter en funktion, der kan opfanges af en handler, som er defineret på en visning (via Table.View).",
        "Documentation.LongDescription": "<p>Opretter en visningsfunktion baseret på <code>function</code>, der kan håndteres i en visning, der er oprettet af <code>Table.View</code>.</p>\r\n<p>Den > <code>OnInvoke</code> handler for <code>Table.View</code> kan bruges til at definere en handler for visningsfunktionen.</p>\r\n<p>Ligesom med handlerne til indbyggede handlinger, hvis der ikke er angivet nogen <code>OnInvoke</code> handler, eller hvis den ikke håndterer visningsfunktionen, eller hvis der udløses en fejl af handleren, anvendes <code>function</code> i toppen af visningen.</p>\r\n<p>Se den publicerede Power Query-dokumentation til brugerdefinerede connectors for en mere komplet beskrivelse af <code>Table.View</code> og brugerdefinerede visningsfunktioner.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "Returnerer tekstværdien, hvor alle kontroltegn er fjernet.",
        "Documentation.LongDescription": "Returnerer en tekstværdi, hvor alle kontroltegnene <code>text</code> er fjernet.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Fjern linjeskift og andre kontroltegn fra en tekstværdi.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "Sammenkæder en liste over tekstværdier til en enkelt tekstværdi.",
        "Documentation.LongDescription": "Returnerer resultatet af at kombinere listen over tekstværdier <code>texts</code>til en enkelt tekstværdi. Alle værdier af typen <code>null</code>, der findes i <code>texts</code>, ignoreres. \n\rDer kan angives en valgfri <code>separator</code> , der bruges i den endelige kombinerede tekst.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Kombiner tekstværdierne \"Seattle\" og \"WA\".",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "Kombiner tekstværdierne \"Seattle\" og \"WA\", adskilt af et komma og et mellemrum.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "Kombiner værdierne \"Seattle\", <code>null</code> og \"WA\", adskilt af et komma og et mellemrum. Bemærk, at <code>null</code> ignoreres.",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "Opretter en tekstværdi ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer tekstrepræsentationen for <code>value</code>. <code>value</code> kan være en værdi af typen <code>number</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>datetimezone</code>, <code>logical</code>, <code>duration</code> eller <code>binary</code>.\r\n    Hvis den angivne værdi er null, returnerer <code>Text.From</code> null. Der kan også angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Opret en tekstværdi ud fra tallet 3.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "Afkoder data fra et binært format til tekst.",
        "Documentation.LongDescription": "Afkoder data, <code>binary</code>, fra en binær værdi til en tekstværdi ved hjælp af typen <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "Udleder den granulerede nummertype (Int64.Type, Double.Type osv.) for et nummer, der er kodet i tekst.",
        "Documentation.LongDescription": "Udleder den granulerede nummertype (Int64.Type, Double.Type osv.) for <code>text</code>. Der opstår en fejl, hvis <code>text</code> ikke er et tal. Der kan også angives en valgfri <code>culture</code> (f. eks. \"en-US\").",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "Returnerer antallet af tegn.",
        "Documentation.LongDescription": "Returnerer antallet af tegn i strengen <code>text</code>.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, hvor mange tegn der er i teksten \"Hello World\".",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "Konverterer alle tegn til små bogstaver.",
        "Documentation.LongDescription": "Returnerer resultatet af at konvertere alle tegn i <code>text</code> til små bogstaver. Der kan også angives en valgfri <code>culture</code> (f. eks. \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hent versionen af \"AbCd\" med små bogstaver.",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "Skriver første bogstav i alle ord med stort.",
        "Documentation.LongDescription": "Returnerer resultatet af kun at skrive første bogstav med stort i alle ord i tekstværdien <code>text</code>. Alle andre bogstaver returneres som små bogstaver. Der kan også gives angives en valgfri <code>culture</code> (f.eks. \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Brug <code>Text.Proper</code> på en simpel sætning.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "Tilbagefører den angivne <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Tilbagefør teksten \"123\".",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "Koder tekst til et binært format.",
        "Documentation.LongDescription": "Koder den angivne tekstværdi, <code>text</code>, til en binær værdi ved hjælp af den angivne <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "Returnerer en liste over tegnværdier fra den angivne tekstværdi.",
        "Documentation.LongDescription": "Returnerer en liste over tegnværdier fra den angivne tekstværdi <code>text</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Opret en liste over tegnværdier ud fra teksten \"Hello World\".",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "Fjerner alle foranstillede og efterstillede mellemrum.",
        "Documentation.LongDescription": "Returnerer resultatet af at fjerne alle foranstillede og efterstillede mellemrum fra tekstværdien <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Fjern foranstillede og efterstillede mellemrum fra \"     a b c d    \".",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "Fjerner alle efterstillede mellemrum.",
        "Documentation.LongDescription": "Returnerer resultatet af at fjerne alle efterstillede mellemrum fra tekstværdien <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Fjern efterstillede mellemrum fra \"     a b c d    \".",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "Fjerner alle foranstillede mellemrum.",
        "Documentation.LongDescription": "Returnerer resultatet af at fjerne alle foranstillede mellemrum fra tekstværdien <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Fjern foranstillede mellemrum fra \"     a b c d    \".",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "Konverterer alle tegn til store bogstaver.",
        "Documentation.LongDescription": "Returnerer resultatet af at konvertere alle tegn i <code>text</code> til store bogstaver. Der kan også angives en valgfri <code>culture</code> (f. eks. \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hent versionen af \"aBcD\" med store bogstaver.",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "Returnerer slutningen af timen.",
        "Documentation.LongDescription": "Returnerer slutningen af timen, der repræsenteres af <code>dateTime</code>, herunder brøkdele af sekunder. Oplysninger om tidszone bevares.\r\n <ul>\r\n <li><code>dateTime</code>: En værdi af typen <code>time</code>, <code>datetime</code> eller <code>datetimezone</code> som  slutning af timen beregnes ud fra.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hent timens slutning for 14-05-2011, 17:00:00.",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "Hent timens slutning for 17-05-2011, 17:00:00 -7:00.",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "Opretter et klokkeslæt ud fra den angivne værdi.",
        "Documentation.LongDescription": "Returnerer en værdi af typen <code>time</code> ud fra den angivne <code>value</code>. Der kan også gives angives en valgfri <code>culture</code> (f.eks. \"en-US\").\r\nHvis den angivne <code>value</code> er <code>null</code>, vil <code>Time.From</code> returnere <code>null</code>. Hvis den angivne <code>value</code> er <code>time</code>, returneres <code>value</code>. Værdier af følgende typer kan konverteres til en værdi af typen <code>time</code>:\r\n      <ul>\r\n        <li><code>text</code>: En værdi af typen <code>time</code> fra en tekstrepræsentation. Se <code>Time.FromText</code> for at få flere oplysninger.</li>\r\n        <li><code>datetime</code>: Klokkeslætskomponent for <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: Klokkeslætskomponenten for den lokale datetime-ækvivalens for <code>value</code>.</li>\r\n        <li><code>number</code>: En ækvivalens af typen <code>time</code> til antallet af brøkdage udtrykt ved <code>value</code>. Hvis <code>value</code> er negativ eller større end eller lig med 1, returneres der en fejl.</li>\r\n      </ul>\r\nHvis <code>value</code> er af en anden type, returneres der en fejl.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>0.7575</code> til en værdi af typen <code>time</code>.",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "Konvertér <code>#datetime(1899, 12, 30, 06, 45, 12)</code> til en værdi af typen <code>time</code>.",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "Opretter et klokkeslæt ud fra lokale og universelle samt brugerdefinerede klokkeslætsformater.",
        "Documentation.LongDescription": "Opretter en værdi af typen <code>time</code> ud fra en tekstrepræsentation <code>text</code>. Der kan angives en valgfri <code>record</code> parameter, <code>options</code>, for at angive yderligere egenskaber. <code>record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>text</code>, der angiver det format, der skal bruges. Du kan få flere oplysninger ved at gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105. Hvis du udelader dette felt eller angiver <code>null</code> vil det resultere i, at tiden opdeles bedst muligt.</li>\r\n   <li><code>Culture</code>: Når <code>Format</code> ikke er null, <code>Culture</code> styrer nogle formatangivelser. I <code>\"en-US\"</code> <code>\"tt\"</code> <code>\"AM\" eller \"PM\"</code> i <code>\"ar-EG\"</code> <code>\"tt\"</code> er <code>\"ص\" eller \"م\"</code>. Når <code>Format</code> er <code>null</code>, styrer <code>Culture</code> det standardformat, der skal bruges. Når <code>Culture</code> <code>null</code> eller udelades, bruges <code>Culture.Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser kan <code>options</code> også være en tekstværdi. Dette har samme funktionsmåde, som hvis <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konvertér <code>\"10:12:31am\"</code> til en klokkeslætsværdi.",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "Konvertér <code>\"1012\"</code> til en værdi af typen Time.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "Konvertér <code>\"10\"</code> til en værdi af typen Time.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "Returnerer timekomponenten.",
        "Documentation.LongDescription": "Returnerer timekomponenten af den angivne værdi af typen <code>time</code>, <code>datetime</code> eller <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Find timen i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "Returnerer minutkomponeten.",
        "Documentation.LongDescription": "Returnerer minutkomponenten af den angivne værdi af typen <code>time</code>, <code>datetime</code> eller <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Find minuttet i #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "Returnerer sekundkomponenten.",
        "Documentation.LongDescription": "Returnerer sekundkomponenten af den angivne værdi af typen <code>time</code>, <code>datetime</code> eller <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Find sekundværdien i en dato/klokkeslæt-værdi.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "Returnerer starten af timen.",
        "Documentation.LongDescription": "Returnerer starten af timen, der repræsenteres af <code>dateTime</code>.\r\n    <code>dateTime</code> skal være en værdi af typen <code>time</code>, <code>datetime</code> eller <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Find starten af tidspunktet for 10. oktober 2011, klokken 8:10:32.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "Returnerer en post, der indeholder delene fra klokkeslætsværdien.",
        "Documentation.LongDescription": "Returnerer en post, der indeholder delene fra en bestemt klokkeslætsværdi, <code>time</code>.\r\n <ul>\r\n        <li><code>time</code>: En værdi af typen <code>time</code>, som delenes post skal beregnes ud fra.</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konvertér værdien af typen <code>#time(11, 56, 2)</code> til en post, der indeholder klokkeslætsværdier.",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "Returnerer en tekstrepræsentation for klokkeslætsværdien.",
        "Documentation.LongDescription": "Returnerer en tekstrepræsentation af <code>time</code>. Der kan angives en valgfri <code>record</code> parameter, <code>options</code>, for at angive yderligere egenskaber. <code>culture</code> bruges kun til ældre arbejdsprocesser. <code>The record</code> kan indeholde følgende felter:\r\n<ul>\r\n   <li><code>Format</code>: En <code>tekstværdi</code>, som angiver det format, der skal bruges. Du kan få flere oplysninger ved at gå til https://go.microsoft.com/fwlink/?linkid=2180104 og https://go.microsoft.com/fwlink/?linkid=2180105. Hvis du udelader dette felt eller angiver <code>null</code> medfører det, at datoen formateres ved hjælp af den standard, der er defineret af <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Når <code>Format</code> ikke er null,  <code>Culture</code> styrer nogle formatangivelser. For eksempel i <code>\"en-US\"</code> <code>\"tt\"</code> er <code>\"AM\" eller \"PM\"</code> i <code>\"ar-EG\"</code> <code>\"tt\"</code> er <code>\"ص\" eller \"م\"</code>. Når <code>Format</code> er <code>null</code>, styrer <code>Culture</code> det standardformat, der skal bruges. Når <code>Culture</code> <code>null</code> eller udelades, bruges <code>Culture.Current</code>.</li>\r\n</ul>\r\nHvis du vil understøtte ældre arbejdsprocesser, kan <code>options</code> og <code>culture</code> også være tekstværdier. Dette har samme funktionsmåde, som hvis <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Konverter <code>#time(01, 30, 25)</code> til en værdi af typen <code>text</code>. <i>Resultatoutput kan variere afhængigt af den aktuelle kultur.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "Konverter ved hjælp af et brugerdefineret format og den tyske kultur.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "Konvertér ved hjælp af standardformatet for klokkeslæt.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "Returnerer en lukket version af den angivne posttype (eller samme type, hvis den allerede er lukket).",
        "Documentation.LongDescription": "Returnerer en lukket version af den angivne <code>record</code> <code>type</code> (eller den samme type, hvis den allerede er lukket).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Opret en lukket version af <code>type [ A = number,…]</code>.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "Returnerer facetterne for en type.",
        "Documentation.LongDescription": "Returnerer en post, der indeholder facetterne for <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "Returnerer en post, hvor feltværdier er angivet til navnet på parametrene for en funktionstype, og deres værdier er angivet til deres tilsvarende typer.",
        "Documentation.LongDescription": "Returnerer en post, hvor feltværdierne er angivet til navnet på parametrene for <code>type</code>, og deres værdier er angivet til deres tilsvarende typer.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Find typerne af parametre for funktionen <code>(x as number, y as text)</code>.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "Returnerer et tal, der angiver minimumantallet af parametre, der kræves for at aktivere typen af funktion.",
        "Documentation.LongDescription": "Returnerer et tal, der angiver minimumantallet af parametre, der kræves for at aktivere inputtet <code>type</code> for funktionen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Find antallet af nødvendige parametre for funktionen <code>(x as number, optional y as text)</code>.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "Returnerer en type, der returneres af en funktionstype.",
        "Documentation.LongDescription": "Returnerer en type, der returneres af en funktion <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Find returneringstypen for <code>() as any)</code>.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "Returnerer true, hvis typen kan være null. Ellers returneres false.",
        "Documentation.LongDescription": "Returnerer <code>true</code>, hvis typen er <code>nullable</code>. Ellers returneres <code>false</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Bestem, om <code>number</code> kan være null.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "Bestem, om <code>type nullable number</code> kan være null.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "Returnerer, om en posttype er åben.",
        "Documentation.LongDescription": "Returnerer <code>logical</code>, der angiver, om en post <code>type</code> er åben.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Find ud af, om posten <code>type [ A = number, ...]</code> er åben.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "Returnerer en elementtype fra en listetype.",
        "Documentation.LongDescription": "Returnerer en elementtype fra en liste <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Find elementtypen på listen <code>{number}</code>.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "Returnerer typen, der ikke kan være null, fra en type.",
        "Documentation.LongDescription": "Returnerer typen, der ikke kan være <code>nullable</code>, fra <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Returner typen, der ikke kan være null, for <code>type nullable number</code>.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "Returnerer en åben version af den angivne posttype (eller samme type, hvis den allerede er åben).",
        "Documentation.LongDescription": "Returnerer en åben version af den angivne <code>record</code> <code>type</code> (eller den samme type, hvis den allerede er åben).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Opret en åben version af <code>type [ A = number]</code>.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "Returnerer en post, der beskriver felterne for en posttype, hvor de enkelte felter i den returnerede posttype har et tilsvarende navn og en værdi.",
        "Documentation.LongDescription": "Returnerer en post, der beskriver felterne for en post <code>type</code>. De enkelte felter for den returnerede posttype har et tilsvarende navn og en værdi i form af en post <code>[ Type = type, Optional = logical ]</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Find navnet på og værdien for posten <code>[ A = number, optional B = any]</code>.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "Returnerer den eventuelt tomme liste over nøgler for den angivne tabeltype.",
        "Documentation.LongDescription": "Returnerer den eventuelt tomme liste over nøgler for den angivne tabeltype.<br>\r\n    <br>\r\n    Hver nøgle defineres ved hjælp af en post i følgende format:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: en liste over de kolonnenavne, der definerer nøglen\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> hvis nøglen er tabellens primære nøgle; ellers <code>falsk</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Returner nøgleoplysningerne vedrørende en tabeltype.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "Returnerer rækketypen for tabeltypen.",
        "Documentation.LongDescription": "Returnerer rækketypen for den angivne tabeltype. Resultatet vil altid være en posttype.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Returner oplysninger om rækketype for en simpel tabel.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "Returnerer foreningen af en liste over typer.",
        "Documentation.LongDescription": "Returnerer foreningen af typerne i <code>types</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "Oversæt en post til en URI-forespørgselsstreng.",
        "Documentation.LongDescription": "Oversæt posten <code>query</code> til en URI-forespørgselsstreng, og angiv escapetegn efter behov.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Kod en forespørgselsstreng, der indeholder specialtegn.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "Koder specialtegn i overensstemmelse med RFC 3986.",
        "Documentation.LongDescription": "Koder specialtegn i inputtet <code>data</code> i henhold til reglerne i RFC 3986.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Kod specialtegnene i \"+money$\".",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "Returnerer delene i den absolutte URI for input som en post.",
        "Documentation.LongDescription": "Returnerer delene af <code>absoluteUri</code> for input som en post, der indeholder værdier, f.eks. Scheme, Host, Port, Path, Query, Fragment, UserName og Password.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Find delene i den absolutte URI for input \"www.adventure-works.com\".",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "Afkod en procentkodet streng.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "Indtast din Azure DevOps Analytics-tjenestewebadresse.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS. AccountContents",
        "Documentation.Name": "VSTS. AccountContents",
        "Documentation.LongDescription": "Returnerer det indhold, der downloades fra Azure DevOps Analytics-tjenestenwebadresse, som en binær værdi. Denne funktion bruger forskellige legitimationsoplysninger til forskellige organisationer."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "Indtast din Azure DevOps Analytics-tjenestewebadresse.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Returnerer det indhold, der downloades fra Azure DevOps Analytics-tjenestewebadresse, som en binær værdi. Denne funktion bruger globale legitimationsoplysninger til hele den tilgængelige organisation."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "Udtrykker alternative forespørgselsplaner.",
        "Documentation.LongDescription": "Udtrykker alternative forespørgselsplaner i et forespørgselsplanudtryk, der er opnået via Value.Expression(Value.Optimize(...)). Ikke beregnet til andre formål.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "Returnerer et abstrakt syntakstræ (AST), der repræsenterer værdiens udtryk.",
        "Documentation.LongDescription": "Returnerer et abstrakt syntakstræ (AST), der repræsenterer værdiens udtryk",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "Opretter en typesikker værdi ud fra en tekstrepræsentation.",
        "Documentation.LongDescription": "Afkoder en værdi ud fra en tekstrepræsentation, <code>text</code>, og fortolker den som en værdi med den rette type.\r\n    <code>Value.FromText</code> bruger en tekstværdi og returnerer et tal, en logisk værdi, en null-værdi, en dato/klokkeslætsværdi, en varighedsværdi eller en tekstværdi. En tom tekstværdi fortolkes som en null-værdi.\r\n    Der kan også angives en valgfri <code>culture</code> (f.ek.s \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "Returnerer en post, der indeholder inputtets metadata.",
        "Documentation.LongDescription": "Returnerer en post, der indeholder inputtets metadata.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "Signal Value.Expression, der skal returnere det optimerede udtryk for en værdi.",
        "Documentation.LongDescription": "Når det bruges i Value.Expression, hvis <code>value</code> repræsenterer en forespørgsel, der kan optimeres, indikerer denne funktion, at det optimerede udtryk skal returneres. Ellers vil <code>value</code> blive overført uden virkning.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "Tømmer inputtet for metadata.",
        "Documentation.LongDescription": "Tømmer inputtet for metadata.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "Returnerer typen af den angivne værdi.",
        "Documentation.LongDescription": "Returnerer typen af den angivne værdi.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.LongDescription": "Denne funktion er kun beregnet til intern brug.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "Returnerer HTML-koden for den angivne URL-adresse, sådan som den vises i en webbrowser.",
        "Documentation.LongDescription": "Returnerer HTML-koden for den angivne <code>url</code>, som vist af en webbrowser. Et valgfrit optagelsesparameter, <code>options</code>, kan angives for at vælge yderligere egenskaber. Posten kan indeholde følgende felter:\r \n     <ul>\r\n        <li><code>ApiKeyName</code>: Hvis målwebstedet har et begreb om en API-nøgle, kan denne parameter bruges til at angive navnet (ikke værdien) på nøgleparameteren, der skal bruges i URL-adressen. Den faktiske nøgleværdi angives i legitimationsoplysningerne.</li>\r\n     <li><code>WaitFor</code>: angiver en betingelse, der skal ventes på, før der downloades HTML, udover at der ventes på, at siden for at indlæse (hvilket altid sker). Kan være en post, der indeholder Timeout- og/eller Selector-felter. Hvis der kun er angivet en Timeout, venter funktionen det tidsrum, der er angivet, før der downloades HTML. Hvis der både er angivet en Selector og Timeout, og timeouten forløber, før der findes en Selector på siden, udløses der en fejl. Hvis der er angivet en Selector uden Timeout, anvendes en standard Timeout på 30 sekunder.</li>\r\n      </ul>\r\n    ",
        "Documentation.Category": "Tilgår data",
        "Documentation.Examples": [
          {
            "Description": "Returnerer HTML-koden for https://microsoft.com.",
            "Code": "Web.BrowserContents (\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Returnerer HTML-koden for https://microsoft.com efter at have ventet på en CSS-vælger.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Returnerer HTML-koden for https://microsoft.com efter at have ventet i ti sekunder.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Returnerer HTML-koden for https://microsoft.com efter at have ventet i op til ti sekunder på en CSS-vælger.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "Returnerer det indhold, der er downloadet fra URL-adressen, som binært.",
        "Documentation.LongDescription": "Returnerer det indhold, der er downloadet fra <code>url</code> som binært. Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n <ul>\r\n<li><code>Query</code> : F&#248;j foresp&#248;rgselsparametre til URL-adressen via programmering uden at skulle bekymre dig om udslip.</li>\r\n<li><code>ApiKeyName</code> : Hvis destinationswebstedet har et begreb for en API-n&#248;gle, kan denne parameter bruges til at angive navnet (ikke v&#230;rdien) for den n&#248;gleparameter, der skal bruges i URL-adressen. Den faktiske n&#248;glev&#230;rdi angives i legitimationsoplysningerne.</li>\r\n<li><code>Headers</code> : Hvis denne v&#230;rdi angives som en post, leveres der yderligere overskrifter til en HTTP-anmodning.</li>\r\n<li><code>Timeout</code> : Hvis du angiver denne v&#230;rdi som en varighed, &#230;ndres timeout for en HTTP-anmodning. Standardv&#230;rdien er 100 sekunder.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Hvis denne v&#230;rdi angives som en liste, udelades disse HTTP-overskriftsn&#248;gler i beregningen af cachelagringsdata.</li>\r\n<li><code>IsRetry</code> : Hvis du angiver denne logiske v&#230;rdi som true, ignoreres alle eksisterende svar i cachen, n&#229;r data hentes.</li>\r\n<li><code>ManualStatusHandling</code> : Hvis du angiver denne v&#230;rdi som en liste, forhindres eventuel indbygget h&#229;ndtering af HTTP-anmodninger, hvis svar har &#233;n af disse statuskoder.</li>\r\n<li><code>RelativePath</code> : Hvis du angiver denne v&#230;rdi som tekst, f&#248;jes den til basis-URL-adressen, f&#248;r anmodningen foretages.</li>\r\n<li><code>Content</code> : Hvis denne v&#230;rdi angives, &#230;ndres webanmodningen fra en GET til en POST ved hj&#230;lp af v&#230;rdien for indstillingen som indholdet i POST.</li>\r\n</ul>\r\n\r\n HTTP-anmodningen foretages enten som en GET (når der ikke er angivet noget indhold) eller et POST (når der er Indhold). POST-anmodninger kan kun foretages anonymt.\r\n <br>\r\n Overskrifterne i HTTP-svaret er tilgængelige som metadata på det binære resultat. Uden for en brugerdefineret dataforbindelseskontekst er kun et undersæt af svarheadere tilgængelige (af sikkerhedsmæssige årsager).\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Hent indholdet af <code>\"https://bing.com/search?q=Power+Query\"</code> ved hjælp af indstillinger RelativePath og forespørgsel. Disse indstillinger kan bruges til dynamisk forespørgsel på en statisk URL-basisadresse.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "Udfør et POST mod en webadresse, videregiver et binært JSON-nyttedata, og parser svaret som JSON.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "Opret forbindelse til en sikker URL-adresse, der accepterer en godkendelsesnøgle som en del af forespørgselsstrengen. I stedet for at fastlægge den hemmelige nøgle i M (hvilket ville udgøre en sikkerhedsrisiko) kan \r\n    nøglen leveres sikkert ved at angive dens navn (ikke dens værdi) i M, med at vælge Web API-godkendelse og angive nøgleværdien som en del af legitimationsoplysninger for Web API.\r\n    Når det bruges på denne måde, genererer følgende eksempel en anmodning til <code>\"https://contoso.com/api/customers/get?api_key=*****\"</code>.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "Returnerer de HTTP-headere, der er downloadet fra URL-adressen, som en postværdi.",
        "Documentation.LongDescription": "Returnerer de headere, der er downloadet fra <code>url</code> som en post. Der kan angives en valgfri postparameter, <code>options</code>, for at angive yderligere egenskaber. Posten kan indeholde følgende felter:\r\n <ul>\r\n<li><code>Query</code> : F&#248;j foresp&#248;rgselsparametre til URL-adressen via programmering uden at skulle bekymre dig om udslip.</li>\r\n<li><code>ApiKeyName</code> : Hvis destinationswebstedet har et begreb for en API-n&#248;gle, kan denne parameter bruges til at angive navnet (ikke v&#230;rdien) for den n&#248;gleparameter, der skal bruges i URL-adressen. Den faktiske n&#248;glev&#230;rdi angives i legitimationsoplysningerne.</li>\r\n<li><code>Headers</code> : Hvis denne v&#230;rdi angives som en post, leveres der yderligere overskrifter til en HTTP-anmodning.</li>\r\n<li><code>Timeout</code> : Hvis du angiver denne v&#230;rdi som en varighed, &#230;ndres timeout for en HTTP-anmodning. Standardv&#230;rdien er 100 sekunder.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Hvis denne v&#230;rdi angives som en liste, udelades disse HTTP-overskriftsn&#248;gler i beregningen af cachelagringsdata.</li>\r\n<li><code>IsRetry</code> : Hvis du angiver denne logiske v&#230;rdi som true, ignoreres alle eksisterende svar i cachen, n&#229;r data hentes.</li>\r\n<li><code>ManualStatusHandling</code> : Hvis du angiver denne v&#230;rdi som en liste, forhindres eventuel indbygget h&#229;ndtering af HTTP-anmodninger, hvis svar har &#233;n af disse statuskoder.</li>\r\n<li><code>RelativePath</code> : Hvis du angiver denne v&#230;rdi som tekst, f&#248;jes den til basis-URL-adressen, f&#248;r anmodningen foretages.</li>\r\n</ul>\r\n\r\n HTTP-anmodningen foretages med HEAD-metoden. Uden for en brugerdefineret dataforbindelseskontekst er kun et undersæt af svarheadere tilgængelige (af sikkerhedsmæssige årsager).\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Hent HTTP-headerne til <code>\"https://bing.com/search?q=Power+Query\"</code> ved hjælp af indstillingerne RelativePath og Query.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "Den autorisationskontekst, som en betingelse for en Access Control-post (ACE) evalueres ud fra.",
        "Documentation.LongDescription": "Den autorisationskontekst, som en betingelse for en Access Control-post (ACE) evalueres ud fra.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "En tabel med Access Control-poster (ACE'er).",
        "Documentation.LongDescription": "En sorteret tabel med Access Control-poster (ACE'er), der repræsenterer autorisationsregler. Hver række evalueres i forhold til den aktuelle autorisationskontekst (i rækkefølge), og den første række, som udtrykket <code>Condition</code> returnerer som \"true\", angiver, hvilken regel der gælder. Kolonnen <code>Action</code> repræsenterer den type af handling, som reglen gælder for. Kolonnen <code>AccessControlKind</code> bestemmer, om adgang skal tillades eller nægtes for handlingen.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "Angiver typen af adgangskontrol.",
        "Documentation.LongDescription": "Angiver typen af adgangskontrol.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "Den type, der repræsenterer alle værdier.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle værdier.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "Den type, der repræsenterer alle binære værdier.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle binære værdier.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "Angiver typen af binærkode.",
        "Documentation.LongDescription": "Angiver typen af binærkode.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "Angiver hvor mange gange elementet forventes at blive vist i gruppen.",
        "Documentation.LongDescription": "Angiver hvor mange gange elementet forventes at blive vist i gruppen.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "Beskriver typen af bufferlagring, der skal udføres.",
        "Documentation.LongDescription": "Beskriver typen af bufferlagring, der skal udføres.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "Den type, der repræsenterer alle byte.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle byte.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "Angiver byte rækkefølgen.",
        "Documentation.LongDescription": "Angiver byte rækkefølgen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "Den type, der repræsenterer alle tegn.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle tegn.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "Angiver komprimeringstypen.",
        "Documentation.LongDescription": "Angiver komprimeringstypen.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Angiver betydningen af anførselstegn i csv-dokumenter.",
        "Documentation.LongDescription": "Angiver betydningen af anførselstegn i csv-dokumenter.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "Den type, der afspejler valutaværdien.",
        "Documentation.LongDescription": "Den type, der afspejler valutaværdien.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "Den type, der repræsenterer alle datoværdier.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle datoværdier.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "Den type, der repræsenterer alle dato- og klokkeslætsværdier uden en tilknyttet tidszone.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle dato- og klokkeslætsværdier uden en tilknyttet tidszone.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "Den type, der repræsenterer alle dato- og klokkeslætsværdier, der er relateret til en tidszone.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle dato- og klokkeslætsværdier, der er relateret til en tidszone.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "Angiver en ugedag.",
        "Documentation.LongDescription": "Angiver en ugedag.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "Den type, der afspejler et fast decimaltal.",
        "Documentation.LongDescription": "Den type, der afspejler et fast decimaltal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "Den type, der afspejler dobbeltpræcisions flydende tal.",
        "Documentation.LongDescription": "Den type, der afspejler dobbeltpræcisions flydende tal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "Den type, der repræsenterer alle varighedsværdier",
        "Documentation.LongDescription": "Den type, der repræsenterer alle varighedsværdier",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "Angiver den forventede handling for ekstra værdier i en række, der indeholder flere kolonner end forventet.",
        "Documentation.LongDescription": "Angiver den forventede handling for ekstra værdier i en række, der indeholder flere kolonner end forventet.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "Den type, der repræsenterer alle funktioner.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle funktioner.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "Angiver type gruppering.",
        "Documentation.LongDescription": "Flere lokale grupper kan produceres med den samme nøgleværdi, men der produceres kun en enkelt global gruppe for en given nøgleværdi.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "Den type, der repræsenterer en GUID-værdi.",
        "Documentation.LongDescription": "Den type, der repræsenterer en GUID-værdi.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "En identitet repræsenterer en bruger, gruppe, enhed eller et andet identificerbart objekt.",
        "Documentation.LongDescription": "En identitet repræsenterer en bruger, gruppe, enhed eller et andet identificerbart objekt.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "Definerer et område, inden for hvilket identiteter oprettes og sammenlignes.",
        "Documentation.LongDescription": "Definerer et område, inden for hvilket identiteter oprettes og sammenlignes.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "Den type, der afspejler et 16-bit heltal med fortegn.",
        "Documentation.LongDescription": "Den type, der afspejler et 16-bit heltal med fortegn.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "Den type, der afspejler 32-bit heltal med fortegn.",
        "Documentation.LongDescription": "Den type, der afspejler 32-bit heltal med fortegn.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "Den type, der afspejler 64-bit heltal med fortegn.",
        "Documentation.LongDescription": "Den type, der afspejler 64-bit heltal med fortegn.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "Den type, der afspejler 8-bit heltal med fortegn.",
        "Documentation.LongDescription": "Den type, der afspejler 8-bit heltal med fortegn.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "Angiver sammenkædningens algoritme, der skal anvendes i join funktionen.",
        "Documentation.LongDescription": "Angiver sammenkædningens algoritme, der skal anvendes i join funktionen.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "Angiver typen af joinfunktion.",
        "Documentation.LongDescription": "Angiver typen af joinfunktion.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "Angiver den venstre eller højre tabel i en joinforbindelse.",
        "Documentation.LongDescription": "Angiver den venstre eller højre tabel i en joinforbindelse.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "Beskriver, hvilke typer LIMIT-delsætninger, der understøttes af den SQL-dialekt, der bruges af denne datakilde.",
        "Documentation.LongDescription": "Beskriver, hvilke typer LIMIT-delsætninger, der understøttes af den SQL-dialekt, der bruges af denne datakilde.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "Den type, der repræsenterer alle lister.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle lister.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "Den type, der repræsenterer alle logiske værdier.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle logiske værdier.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "Angiver den forventede handling for manglende værdier i en række, der indeholder færre kolonner end forventet.",
        "Documentation.LongDescription": "Angiver den forventede handling for manglende værdier i en række, der indeholder færre kolonner end forventet.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "Den type, der repræsenterer null.",
        "Documentation.LongDescription": "Den type, der repræsenterer null.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "Den type, der repræsenterer alle tal.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle tal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "Angiver de værdityper, en OData-tjeneste kan udelade.",
        "Documentation.LongDescription": "Angiver de værdityper, en OData-tjeneste kan udelade.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "Angiver forekomsten af et element i en sekvens.",
        "Documentation.LongDescription": "Angiver forekomsten af et element i en sekvens.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "Angiver sorteringsretningen.",
        "Documentation.LongDescription": "Angiver sorteringsretningen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "Den type, der repræsenterer en tekstadgangskode.",
        "Documentation.LongDescription": "Den type, der repræsenterer en tekstadgangskode.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "Den type, der repræsenterer procentværdien.",
        "Documentation.LongDescription": "Den type, der repræsenterer procentværdien.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "Angiver den percentile tilstandstype.",
        "Documentation.LongDescription": "Angiver den percentile tilstandstype.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "Angiver sammenligningspræcisionen.",
        "Documentation.LongDescription": "Angiver sammenligningspræcisionen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "Angiver anførselsesstilen.",
        "Documentation.LongDescription": "Angiver anførselsesstilen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "Angiver rangeringstypen.",
        "Documentation.LongDescription": "Angiver rangeringstypen.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "Den type, der repræsenterer alle poster.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle poster.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "Angiver, om indeksering skal foretages fra starten eller slutningen af inputtet.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "Angiver afrundingsretningen, når der er lighed mellem de mulige numre at afrunde til.",
        "Documentation.LongDescription": "Angiver afrundingsretningen, når der er lighed mellem de mulige numre at afrunde til.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "Gyldige indstillinger for udførelsestilstanden af SAP Business Warehouse.",
        "Documentation.LongDescription": "Gyldige indstillinger for udførelsestilstanden af SAP Business Warehouse.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "Gyldige indstillinger for distributionsindstillingen SAP HANA.",
        "Documentation.LongDescription": "Gyldige indstillinger for distributionsindstillingen SAP HANA.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "En områdeoperator for SAP HANA-områdeinputparametre.",
        "Documentation.LongDescription": "En områdeoperator for SAP HANA-områdeinputparametre.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "Den type, der afspejler enkeltpræcisions flydende tal.",
        "Documentation.LongDescription": "Den type, der afspejler enkeltpræcisions flydende tal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "Den protokol, der skal bruges ved oprettelse af forbindelse til en Spark-forekomst.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "Den type, der repræsenterer alle tabeller.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle tabeller.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "Den type, der repræsenterer alle tekstværdier.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle tekstværdier.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "Angiver teksten til kodningstypen.",
        "Documentation.LongDescription": "Angiver teksten til kodningstypen.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "Den type, der repræsenterer alle klokkeslætsværdier.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle klokkeslætsværdier.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "Angiver sporingsniveauet.",
        "Documentation.LongDescription": "Angiver sporingsniveauet.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "Den type, der repræsenterer alle typer.",
        "Documentation.LongDescription": "Den type, der repræsenterer alle typer.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "Den type, der repræsenterer en tekst-URI-adresse.",
        "Documentation.LongDescription": "Den type, der repræsenterer en tekst-URI-adresse.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "Angiver en HTTP-metode.",
        "Documentation.LongDescription": "Angiver en HTTP-metode.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
