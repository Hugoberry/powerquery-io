{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "Mengembalikan perwakilan struktur bagi pangkalan data Access.",
        "Documentation.LongDescription": "Mengembalikan perwakilan struktur bagi pangkalan data Access, <code>database</code>. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada hendak menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah false).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n</ul>\r\n\r\n    Sebagai contoh, parameter rekod ditentukan sebagai [option1 = value1, option2 = value2...].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "Kembalikan pangkalan data Perkhidmatan Analisis pada hos tertentu.",
        "Documentation.LongDescription": "Mengembalikan pangkalan data pada tika Analysis Services, <code>server</code>.  Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : Nilai logik yang menunjukkan sama ada jenis ditentukan dalam berbilang dimensi atau model jadual akan digunakan untuk jenis lajur ukuran yang ditambahkan. Apabila ditetapkan kepada false, jenis &quot;nombor&quot; akan digunakan untuk semua lajur ukuran. Nilai lalai untuk opsyen ini adalah false.</li>\r\n<li><code>Culture</code> : Nama budaya yang menentukan budaya untuk data. Ini berpadanan dengan sifat rentetan sambungan &#39;Pengecam tempatan&#39;.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>SubQueries</code> : Nombor (0, 1 atau 2) yang menetapkan nilai sifat &quot;SubQueries&quot; dalam rentetan sambungan. Ini mengawal kelakuan ahli yang dikira pada subpilihan atau subkiub. (Nilai lalai ialah 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "Kiub AtScale",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "Import/DirectQuery data kiub daripada AtScale.",
        "Documentation.LongDescription": "\r\nMengembalikan data kiub daripada AtScale pada pelayan <code>pelayan</code>. Parameter rekod pilihan, <code>opsyen</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: Nilai logik yang menunjukkan sama ada jenis yang ditentukan dalam model berbilang dimensi atau berjadual akan digunakan untuk jenis lajur ukuran yang ditambah. Apabila ditetapkan kepada palsu, jenis \"nombor\" akan digunakan untuk semua lajur ukuran. Nilai lalai untuk opsyen ini ialah palsu.</li>\r\n        <li><code>CommandTimeout</code>: Tempoh (dalam saat) yang mengawal tempoh pertanyaan pihak pelayan dibenarkan untuk dijalankan sebelum dibatalkan. Nilai lalai bergantung pada pemacu. </li>\r\n        <li><code>ConnectionTimeout</code>: Tempoh (dalam saat) yang mengawal tempoh menunggu sebelum meninggalkan percubaan untuk membuat sambungan ke pelayan. Nilai lalai bergantung pada pemacu. </li>\r\n\r\n</ul>\r\nParameter rekod ditentukan sebagai [option1 = value1, option2 = value2...].",
        "Documentation.Examples": {
          "Description": "Senaraikan data kiub dalam kiub AtScale.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Mengimport data daripada Azure Data Explorer (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Mengimport data daripada tika Azure Data Explorer (Kusto) anda",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual maklumat Peristiwa Ribut",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Jadual dengan Peristiwa Ribut daripada pangkalan data \"Sampel\" dalam gugusan \"bantuan\""
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "Masukkan Url Perkhidmatan Analitis Azure DevOps anda.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Mengembalikan kandungan yang dimuat turun daripada url Perkhidmatan Analitis Azure DevOps sebagai nilai perduaan. Fungsi ini menggunakan kelayakan yang berbeza untuk organisasi yang berbeza."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Suapan Azure DevOps Services",
        "Documentation.DisplayName": "Suapan Azure DevOps Services",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Mengembalikan jadual suapan OData yang ditawarkan oleh Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "Masukkan URL bagi titik akhir API REST Azure Enterprise yang dikaitkan dengan pendaftaran anda",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Mengembalikan senarai laporan dan bulan yang tersedia daripada API Azure Enterprise",
        "Documentation.Name": "Import data daripada Azure Enterprise",
        "Documentation.Examples": [
          {
            "Description": "Menggunakan fungsi AzureEnterprise.Tables dan menavigasi ke nilai tertentu untuk mendapatkan keputusan.",
            "Code": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents",
            "Result": "Jadual"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "See https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli for starter query samples.",
        "Documentation.Examples": [
          {
            "Description": "Return a table with query results of user query 'resources'",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Senarai jadual dalam tika Azure Spark.",
        "Documentation.LongDescription": "Senarai jadual dalam tika Azure Spark.",
        "Documentation.Examples": [
          {
            "Description": "Senarai jadual dalam tika Azure Spark.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "Mengembalikan jadual navigasi yang mengandungi bekas yang ditemui dalam akaun yang ditentukan daripada vault storan Azure.",
        "Documentation.LongDescription": "Mengembalikan jadual navigasi yang mengandungi baris untuk setiap bekas yang ditemui di URL akaun, <code>account</code>, daripada ruang simpan storan Azure. Setiap baris mengandungi pautan kepada blob bekas. <code>options</code> mungkin ditentukan untuk mengawal opsyen yang berikut:\r\n    <ul>\r\n<li><code>BlockSize</code> : Bilangan bait untuk dibaca sebelum menunggu pengguna data. Nilai lalai ialah 4 MB.</li>\r\n<li><code>RequestSize</code> : Bilangan bait untuk cuba membaca dalam permintaan HTTP tunggal kepada pelayan. Nilai lalai ialah 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Opsyen ConcurrentRequests menyokong muat turun data yang lebih cepat dengan menentukan bilangan permintaan yang dibuat secara selari, sehingga mengakibatkan penggunaan memori. Memori yang diperlukan (ConcurrentRequest * RequestSize). Nilai lalai ialah 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Mengembalikan jadual navigasi yang mengandungi dokumen yang ditemui dalam bekas yang ditentukan dan subfolder daripada Azure Data Lake Storage.",
        "Documentation.LongDescription": "Mengembalikan jadual navigasi yang mengandungi dokumen yang ditemui dalam bekas yang ditentukan dan subfoldernya di URL akaun, <code>endpoint</code>, daripada sistem fail Azure Data Lake Storage. <code>options</code> mungkin ditentukan untuk mengawal opsyen yang berikut:\r\n    <ul>\r\n<li><code>BlockSize</code> : Bilangan bait untuk dibaca sebelum menunggu pengguna data. Nilai lalai ialah 4 MB.</li>\r\n<li><code>RequestSize</code> : Bilangan bait untuk cuba membaca dalam permintaan HTTP tunggal kepada pelayan. Nilai lalai ialah 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Opsyen ConcurrentRequests menyokong muat turun data yang lebih cepat dengan menentukan bilangan permintaan yang dibuat secara selari, sehingga mengakibatkan penggunaan memori. Memori yang diperlukan (ConcurrentRequest * RequestSize). Nilai lalai ialah 16.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (benar/palsu) yang mengawal sama ada fail dikembalikan dalam pandangan direktori seperti pepohon atau dalam senarai rata. Nilai lalai ialah palsu.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "Mengembalikan jadual navigasi yang mengandungi jadual yang ditemui dalam akaun yang ditentukan daripada vault storan Azure.",
        "Documentation.LongDescription": "Mengembalikan jadual navigasi yang mengandungi baris untuk setiap jadual yang ditemui di URL akaun, <code>account</code>, daripada ruang simpan storan Azure. Setiap baris mengandungi pautan kepada jadual azure. Parameter rekod pilihan, <code>options</code>, mungkin diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan yang berikut:\r\n    <ul>\r\n<li><code>Timeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan permintaan kepada pelayan. Nilai lalai adalah khusus sumber.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Wawasan Siri Masa Azure"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight pada AKS Trino"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "Fungsi ini tidak tersedia kerana ia memerlukan .NET 4.5.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (Legasi)",
        "Documentation.Caption": "Common Data Service (Legasi)",
        "Documentation.LongDescription": "Sambung ke tika Common Data Service anda (Dynamics 365 dan PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "Mengembalikan kandungan dokumen CSV sebagai jadual.",
        "Documentation.LongDescription": "Mengembalikan kandungan dokumen CSV sebagai jadual.\r\n    <ul>\r\n      <li>\r\n        <code>columns</code> boleh menjadi nol, bilangan lajur, senarai nama lajur, jenis jadual, atau rekod opsyen.\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> boleh menjadi aksara tunggal, senarai aksara, atau nilai <code>\"\"</code>, yang menunjukkan baris perlu dipisahkan dengan aksara putih yang berturutan. Lalai: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        Rujuk <code>ExtraValues.Type</code> untuk nilai sokongan bagi <code>extraValues</code>.\r\n      </li>\r\n      <li>\r\n        <code>encoding</code> menentukan jenis pengekodan teks.\r\n      </li>\r\n    </ul>\r\n\r\n    Jika rekod ditentukan untuk <code>columns</code> (dan <code>delimiter</code>, <code>extraValues</code>, dan <code>encoding</code> adalah nol), medan rekod berikut mungkin diberikan:\r\n    <ul>\r\n      <li>\r\n        <code>Pembatas</code>: Pembatas lajur. Lalai: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Lajur</code>: Boleh menjadi nol, bilangan lajur, senarai nama lajur, atau jenis jadual. Jika bilangan lajur lebih rendah daripada bilangan yang ditemui dalam input, lajur tambahan akan diabaikan. Jika bilangan lajur lebih tinggi berbanding bilangan yang ditemui dalam input, lajur tambahan akan menjadi nol. Apabila tidak ditentukan, bilangan lajur akan ditentukan dengan perkara yang ditemui dalam input.\r\n      </li>\r\n      <li>\r\n        <code>Pengekodan</code>: Pengekodan teks bagi fail. Lalai: 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle</code>: Menentukan cara petikan dikendalikan.\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (default): Sebut harga dalam medan hanya ketara serta merta berikutan pembatas.\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: Sebut harga dalam medan sentiasa ketara, tanpa mengira tempat ia muncul.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code>: Menentukan cara garis pemisah yang dipetik dikendalikan.\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code> (default): Semua garis pemisah dianggap sebagai sebahagian daripada data, bukan sebagai penghujung baris semasa.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code>: Semua garis pemisah dianggap sebagai penghujung baris semasa, walaupun apabila ia berlaku di dalam nilai yang disebut.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Proses teks CSV dengan pengepala lajur",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi set dimensi yang tersedia.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi set dimensi yang tersedia dalam <code>cube</code>. Setiap dimensi ialah jadual yang mengandungi set atribut dimensi dan setiap atribut dimensi diwakili sebagai lajur dalam jadual dimensi. Dimensi boleh dikembangkan dalam kiub menggunakan Cube.AddAndExpandDimensionColumn. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "Mengembalikan pohon jadual tersarang yang mewakili hierarki folder paparan bagi objek (contohnya, dimensi dan ukuran).",
        "Documentation.LongDescription": "Mengembalikan pohon jadual tersarang yang mewakili hierarki folder paparan bagi objek (contohnya, dimensi dan ukuran) yang tersedia untuk digunakan dalam <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi set sifat ukuran tersedia yang dikembangkan dalam kiub.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi set sifat yang tersedia untuk dimensi yang dikembangkan dalam kiub.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi set ukuran yang tersedia.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi set ukuran yang tersedia dalam <code>cube</code>. \r\n    Setiap ukuran diwakili sebagai fungsi. Ukuran boleh digunakan pada kiub menggunakan Cube.AddMeasureColumn.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi set parameter yang boleh digunakan pada kuib.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi set parameter yang boleh digunakan pada <code>cube</code>. Setiap parameter merupakan fungsi yang boleh dimohon untuk mendapatkan <code>cube</code> yang berparameter dan argumennya dikenakan.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi set sifat yang tersedia untuk dimensi yang dikembangkan dalam kiub.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi set sifat yang tersedia untuk dimensi yang dikembangkan dalam kiub.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Masukkan URL akaun Azure Data Lake Storage Gen1 anda.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi baris untuk setiap folder dan fail yang ditemui di <code>url</code> daripada Azure Data Lake Storage Gen1. Setiap baris mengandungi sifat folder atau fail dan pautan kepada kandungannya."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Masukkan URL akaun Azure Data Lake Storage anda.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi baris untuk setiap fail yang ditemui di <code>url</code> daripada Azure Data Lake Storage Gen1. Setiap baris mengandungi sifat fail dan pautan kepada kandungannya."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL API)",
        "Documentation.Description": "Masukkan URL untuk akaun Azure Cosmos DB.",
        "Documentation.LongDescription": "Mengembalikan jadual pangkalan data Azure Cosmos DB di <code>url</code>. Jika <code>pangkalan data</code> ditentukan, jadual koleksi akan dikembalikan. Selain itu, jika medan <code>Pertanyaan</code> ditentukan dalam rekod <code>opsyen</code>, hasil pertanyaan yang dijalankan pada sama ada pangkalan data yang ditentukan dan/atau koleksi akan dikembalikan."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "Masukkan URL titik tamat perkhidmatan Odata Pusat Perniagaan Dynamics 365 (di premis) anda.",
        "Documentation.DisplayName": "Pusat Perniagaan Dynamics 365 (di premis)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Pusat Perniagaan Dynamics 365 (di premis)",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Pusat Perniagaan Dynamics 365 (di premis) yang berkaitan. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "Masukkan URL titik tamat perkhidmatan Odata NAV Dinamik anda.",
        "Documentation.DisplayName": "NAV Dinamik",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "NAV Dinamik",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data NAV Dinamik yang berkaitan. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Mengembalikan kiub dalam tika Essbase yang dikumpulkan oleh pelayan Essbase.",
        "Documentation.LongDescription": "Mengembalikan jadual kiub yang dikumpulkan oleh pelayan Essbase daripada tika Essbase di pelayan APS <code>url</code>. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Mengembalikan kandungan buku kerja Excel.",
        "Documentation.LongDescription": "Mengembalikan kandungan buku kerja Excel.\r\n    <ul>\r\n     <li> <code>useHeaders</code> boleh menjadi nol, nilai logik (benar/salah) yang menunjukkan sama ada baris pertama bagi setiap jadual yang dikembalikan perlu dianggap sebagai pengepala, atau rekod pilihan. Lalai: salah.</li>\r\n     <li> <code>delayTypes</code> boleh menjadi nilai nol atau logik (benar/salah) yang menunjukkan sama ada lajur bagi setiap jadual yang dikembalikan perlu dibiarkan tidak bertaip. Lalai: salah.</li>\r\n    </ul>\r\n\r\n    Jika laporan ditentukan untuk <code>useHeaders</code> (dan <code>delayTypes</code> adalah nol), medan rekod berikut mungkin diberikan:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: Boleh menjadi nilai nol atau logik (benar/salah) yang menunjukkan sama ada baris pertama bagi setiap jadual yang dikembalikan perlu dianggap sebagai pengepala. Lalai: salah.</li>\r\n     <li> <code>DelayTypes</code>: Boleh menjadi nilai nol atau logik (benar/salah) yang menunjukkan sama ada lajur bagi setiap jadual yang dikembalikan perlu dibiarkan tanpa ditaip. Lalai: salah.</li>\r\n     <li> <code>InferSheetDimensions</code>: Boleh menjadi nilai nol atau logik (benar/salah) yang menunjukkan sama ada kawasan helaian kerja yang mengandungi data perlu disimpulkan dengan membaca lembaran kerja itu sendiri, berbanding dengan membaca metadata dimensi daripada fail. Perkara ini berguna dalam kes yang mana metadata dimensi adalah tidak betul. Ambil perhatian bahawa pilihan ini hanya disokong untuk fail Open XML Excel, bukan untuk fail Excel legasi. Lalai: salah.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Kembalikan kandungan Lembaran1 daripada buku kerja Excel.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi sifat dan kandungan fail dan folder yang ditemui dalam folder yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi baris untuk setiap folder dan fail yang ditemui dalam <code>path</code> folder. Setiap baris mengandungi sifat folder atau fail dan pautan ke kandungannya. Parameter <code>options</code> bertujuan untuk kegunaan dalaman sahaja buat masa ini.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi sifat dan kandungan fail yang ditemui dalam folder dan subfolder yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi baris untuk setiap fail yang ditemui dalam <code>path</code> folder dan semua subfoldernya. Setiap baris mengandungi sifat fail dan pautan ke kandungannya. Parameter <code>options</code> bertujuan untuk kegunaan dalaman sahaja buat masa ini.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Import data daripada pangkalan data Google BigQuery menggunakan Azure AD",
        "Documentation.LongDescription": "\r\n      Mengembalikan jadual yang menyenaraikan projek yang tersedia dalam Google BigQuery menggunakan Azure AD untuk <code>ID Projek Pengebilan</code> . Parameter rekod pilihan, <code>pilihan</code>, boleh ditentukan untuk mengawal pilihan berikut:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Tempoh yang mengawal jangka masa bagi menunggu sebelum meninggalkan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai ialah nilai Tamat Masa Sambungan ODBC.</li>\r\n        <li><code>CommandTimeout</code>: Tempoh yang mengawal jangka masa pertanyaan bahagian pelayan dibenarkan untuk berjalan sebelum ia dibatalkan.</li>\r\n        <li><code>UseStorageApi</code>: Menentukan sama ada untuk menggunakan API Storan BigQuery untuk set keputusan yang besar. Nilai lalai adalah benar untuk menggunakan API Storan. Tetapkan kepada palsu supaya tidak menggunakan API Storan</li>\r\n        <li><code>AudienceUri</code>: Ini ialah URI khalayak yang pemacu ODBC boleh gunakan untuk permintaan pertukaran tokennya. Medan ini mestilah URI yang layak sepenuhnya (cth. //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/azuread) iaitu pool_id ialah nama yang unik secara global untuk mengenalpasti himpunan tenaga kerja.</li>\r\n      </ul>\r\n    Parameter rekod ditentukan sebagai [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Senaraikan projek yang tersedia dalam Google BigQuery menggunakan Azure AD",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Helaian Google",
        "Documentation.Caption": "Helaian Google",
        "Documentation.Description": "Mengimport data daripada Helaian Google",
        "Documentation.LongDescription": "Mengimport data daripada Helaian Google"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "Mengembalikan jadual navigasi yang mengandungi bekas yang ditemui dalam akaun yang ditentukan daripada vault storan Azure.",
        "Documentation.LongDescription": "Mengembalikan jadual navigasi yang mengandungi baris untuk setiap bekas yang ditemui di URL, <code>account</code>, daripada vault storan Azure. Setiap baris mengandungi pautan kepada blob bekas.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "Mengembalikan jadual navigasi yang mengandungi bekas yang ditemui dalam akaun yang ditentukan daripada vault storan Azure.",
        "Documentation.LongDescription": "Mengembalikan jadual navigasi yang mengandungi baris untuk setiap bekas yang ditemui di URL, <code>account</code>, daripada vault storan Azure. Setiap baris mengandungi pautan kepada blob bekas.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi sifat dan kandungan fail dan folder yang ditemui dalam folder yang ditentukan dari sistem fail Hadoop.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi baris untuk setiap folder dan fail yang ditemui di URL folder, <code>url</code> dari sistem fail Hadoop. Setiap baris mengandungi sifat bagi folder atau fail dan pautan kepada kandungannya.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi sifat dan kandungan fail yang ditemui dalam folder dan subfolder yang ditentukan dari sistem fail Hadoop.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi baris untuk setiap fail yang ditemui di URL folder, <code>url</code>, dan subfolder dari sistem fail Hadoop. Setiap baris mengandungi sifat bagi fail dan pautan kepada kandungannya.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Import data daripada kelompok Impala",
        "Documentation.LongDescription": "Import data daripada kelompok Impala <code>server</code>. Jika port tidak ditentukan, port lalai 21050 akan digunakan.",
        "Documentation.Examples": [
          {
            "Description": "Senaraikan jadual dalam kelompok Impala.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Mengimport data daripada Azure Data Explorer   (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Mengimport data daripada tika Azure Data Explorer (Kusto) anda",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual maklumat Peristiwa Ribut",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Jadual dengan Peristiwa Ribut daripada pangkalan data \"Sampel\" dalam gugusan \"bantuan\""
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "LinkedIn Sales Navigator",
        "Documentation.LongDescription": "LinkedIn Sales Navigator",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "Mengembalikan jadual dengan data daripada titik akhir MailChimp.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "Membuat panggilan ke API MailChimp dan mengembalikan set data yang terhasil sebagai jadual. Secara automatik menyelak-nyelak halaman semua keputusan. Parameter entityName pilihan boleh digunakan untuk titik akhir API yang titik akhir akar dan entityName utama dalam respons JSON tidak sepadan.",
        "Documentation.Examples": [
          {
            "Description": "Menarik jadual data daripada titik akhir senarai API MailChimp.",
            "Code": "MailChimp.Collection(\"lists\")",
            "Result": "Jadual dengan data senarai."
          },
          {
            "Description": "Menarik jadual data daripada titik akhir folder kempen API MailChimp.",
            "Code": "MailChimp.Collection(\"campaign-folders\", \"folders\")",
            "Result": "Jadual dengan data folder kempen."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "Mengembalikan respons mentah yang terhasil daripada titik akhir API MailChimp.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "Membuat panggilan ke API MailChimp dan mengembalikan respons mentah.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan data mentah daripada titik akhir API MailChimp laporan/butiran klik untuk kempen yang diberikan.",
            "Code": "MailChimp.Instance(\"reports/{campaign_id}/click-details\")",
            "Result": "Data butiran klik mentah daripada kempen yang diberikan."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy for Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "Berikan fungsi pertanyaan lanjutan.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "Berikan fungsi pertanyaan lanjutan.",
        "Documentation.Examples": [
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan data ringkasan antara 2017-5-1 hingga 2017-6-15",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 2017-5-1 hingga 2017-6-15"
          },
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan data ringkasan untuk April 2017.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 2017-4-1 dan 2017-4-30"
          },
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan data ringkasan dari April 2017 hingga sekarang.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 2017-4-1 dan 2017-6-15"
          },
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan data ringkasan dari Disember lalu hingga Februari ini ",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 2016-12-1 dan 2017-2-28"
          },
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan caj marketplace untuk 18 bulan lalu",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 2015-12-1 dan 2017-6-15"
          },
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan caj butiran untuk Jun 2017 dan Mei 2017",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 2017-5-1 dan 2017-6-15"
          },
          {
            "Description": "Katakanlah hari ini ialah 03-07-2017, dapatkan caj butiran untuk Julai 2016",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 01-07-2016 dan 31-07-2016"
          },
          {
            "Description": "Katakan hari ini ialah 2017-7-13, dapatkan ringkasan baki untuk 10 bulan lalu termasuk 13 hari bulan ini",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "Fungsi akan mengembalikan data antara 2016-9-1 dan 2017-7-13"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Cerapan Penggunaan Microsoft Azure",
        "Documentation.Description": "Cerapan Penggunaan Microsoft Azure",
        "Documentation.DisplayName": "Cerapan Penggunaan Microsoft Azure",
        "Documentation.LongDescription": "Cerapan Penggunaan Microsoft Azure",
        "Documentation.Name": "Cerapan Penggunaan Microsoft Azure"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "Kembali jadual daripada jadual SQL dan pandangan daripada sumber data ODBC. ",
        "Documentation.LongDescription": "Mengembalikan jadual daripada jadual SQL dan pandangan daripada sumber data ODBC yang ditentukan oleh rentetan sambungan <code>connectionString</code>. <code>connectionString</code> boleh dalam bentuk teks atau rekod pasangan nilai sifat. Nilai sifat boleh juga dalam bentuk teks atau nombor. Parameter rekod opsyenal, <code>options</code>, boleh disediakan untuk menentukan sifat tambahan yang tertentu. Rekod boleh mengandungi medan yang berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah 15 saat.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logik (benar/palsu) yang menentukan sama ada untuk menghasilkan pilihan rentetan sambungan yang serasi dengan SQL Server untuk pengesahan Windows. Nilai lalai ialah benar.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Kembalikan jadual dan pandangan SQL daripada rentetan sambungan yang diberikan.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "Kembalikan satu jadual bagi jadual dan pandangan SQL daripada sumber data OLE DB.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual dan paparan SQL daripada sumber data OLE DB yang ditentukan oleh rentetan sambungan <code>connectionString</code>. <code>connectionString</code> boleh berbentuk teks atau rekod bagi pasangan nilai sifat. Nilai sifat boleh berbentuk teks atau nombor. Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada hendak melihat jadual yang dikumpulkan mengikut nama skemanya (lalai adalah true).</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logik (benar/palsu) yang menentukan sama ada untuk menghasilkan pilihan rentetan sambungan yang serasi dengan SQL Server untuk pengesahan Windows. Nilai lalai ialah benar.</li>\r\n</ul>\r\n\r\n    Sebagai contoh, parameter rekod ditentukan sebagai [option1 = value1, option2 = value2...] atau [Query = \"select ...\"].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Mengembalikan jadual bagi jadual dan paparan SQL daripada Oracle Database.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual dan paparan SQL yang tersedia dalam Oracle Database pada pelayan <code>server</code>. Port boleh ditentukan secara pilihan dengan pelayan, diasingkan dengan titik bertindih. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "Mengembalikan apa-apa jadual yang ditemui dalam fail PDF.",
        "Documentation.LongDescription": "Mengembalikan sebarang jadual yang ditemui dalam <code>pdf</code>. Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n    <ul>\r\n<li><code>Implementation</code> : Versi algoritma yang digunakan apabila mengenal pasti jadual. Versi lama tersedia hanya untuk keserasian ke belakang, untuk menghalang pertanyaan lama daripada dijejaskan oleh kemas kini algoritma. Versi terbaharu sepatutnya sentiasa memberikan hasil terbaik. Nilai yang sah ialah &quot;1.3&quot;, &quot;1.2&quot;, &quot;1.1&quot;, atau nol.</li>\r\n<li><code>StartPage</code> : Menentukan halaman pertama dalam julat halaman untuk diperiksa. Lalai: 1.</li>\r\n<li><code>EndPage</code> : Menentukan halaman terakhir dalam julat halaman untuk diperiksa. Lalai: halaman terakhir bagi dokumen.</li>\r\n<li><code>MultiPageTables</code> : Mengawal sama ada jadual yang sama pada halaman berturutan akan secara automatik digabungkan ke dalam jadual tunggal. Lalai: benar.</li>\r\n<li><code>EnforceBorderLines</code> : Mengawal sama ada garis sempadan sentiasa dikuatkuasakan sebagai sempadan sel (apabila benar) atau hanya digunakan sebagai satu petunjuk antara banyak untuk menentukan sempadan sel (apabila palsu). Lalai: palsu.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Mencapai data",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual yang terkandung dalam sample.pdf.",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table ({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "Masukkan URL akaun Planview Projectplace anda.",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Planview Projectplace yang berkaitan."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "(Ργŧнøⁿ ŝςŕïφŧ)",
        "Documentation.Description": "(Е×ěćùτёş ÞУтћòņ §сřΐφţ ªлδ язтüгñŝ δąτά ƒřâмęš)",
        "Documentation.Examples": {
          "Description": "(Е×ěćùτёş ÞУтћòņ §сřΐφţ ªлδ язтüгñŝ δąτά ƒřâмęš)",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "(Γ śčřīþť)",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "Mengembalikan jadual dengan setiap baris menjadi nama medan dan nilai bagi rekod input.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi lajur <code>Name</code> dan <code>Value</code> dengan baris untuk setiap medan dalam <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual daripada rekod.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "Mengembalikan pakej dalam pangkalan data SAP HANA.",
        "Documentation.LongDescription": "Mengembalikan jadual pakej berbilang dimensi daripada pangkalan data SAP HANA <code>server</code>. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>Distribution</code> : SapHanaDistribution yang menetapkan nilai sifat &quot;Edaran&quot; dalam rentetan sambungan. Penghalaan pernyataan ialah kaedah menilai nod pelayan yang betul bagi sistem edaran sebelum pelaksanaan pernyataan. Nilai lalai ialah SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : Menentukan pelaksanaan sambungan SAP HANA yang hendak digunakan.</li>\r\n<li><code>EnableColumnBinding</code> : Mengikat pemboleh ubah pada lajur set hasil SAP HANA apabila mengambil data. Mungkin dapat meningkatkan prestasi dengan menggunakan memori yang lebih tinggi sedikit. Nilai lalai ialah palsu.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah 15 saat.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi kandungan daripada tapak SharePoint.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi satu baris bagi setiap folder dan dokumen yang ditemui pada tapak SharePoint yang ditentukan, <code>url</code>. Setiap baris mengandungi sifat bagi folder atau fail itu dan pautan kepada kandungannya. <code>options</code> boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Nombor (14 atau 15) atau teks &quot;Auto&quot; yang menentukan versi API SharePoint untuk digunakan bagi tapak ini. Apabila tidak ditentukan, versi API 14 digunakan. Apabila Auto ditentukan, versi pelayan akan secara automatik ditemui jika boleh, jika tidak, versi ditetapkan secara lalai kepada 14. Tapak SharePoint bukan Bahasa Inggeris memerlukan sekurang-kurangnya versi 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi dokumen daripada tapak SharePoint.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi satu baris bagi setiap dokumen yang ditemui pada tapak SharePoint yang ditentukan, <code>url</code> dan subfolder. Setiap baris mengandungi sifat bagi folder atau fail itu dan pautan kepada kandungannya. <code>options</code> boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Nombor (14 atau 15) atau teks &quot;Auto&quot; yang menentukan versi API SharePoint untuk digunakan bagi tapak ini. Apabila tidak ditentukan, versi API 14 digunakan. Apabila Auto ditentukan, versi pelayan akan secara automatik ditemui jika boleh, jika tidak, versi ditetapkan secara lalai kepada 14. Tapak SharePoint bukan Bahasa Inggeris memerlukan sekurang-kurangnya versi 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi kandungan daripada Senarai SharePoint.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi satu baris bagi setiap item Senarai yang ditemui pada senarai SharePoint yang ditentukan, <code>url</code>. Setiap baris mengandungi sifat Senarai itu. <code>options</code> boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Nombor (14 atau 15) atau teks &quot;Auto&quot; yang menentukan versi API SharePoint untuk digunakan bagi tapak ini. Apabila tidak ditentukan, versi API 14 digunakan. Apabila Auto ditentukan, versi pelayan akan secara automatik ditemui jika boleh, jika tidak, versi ditetapkan secara lalai kepada 14. Tapak SharePoint bukan Bahasa Inggeris memerlukan sekurang-kurangnya versi 15.</li>\r\n<li><code>Implementation</code> : Pilihan. Menentukan versi penyambung SharePoint yang hendak digunakan. Nilai yang diterima ialah &quot;2.0&quot; atau nol. Jika nilai ialah &quot;2.0&quot;, pelaksanaan 2.0 bagi penyambung SharePoint digunakan. Jika nilai adalah nol, pelaksanaan asal penyambung SharePoint digunakan.</li>\r\n<li><code>ViewMode</code> : Pilihan. Opsyen ini hanya sah untuk pelaksanaan 2.0. Nilai yang diterima ialah &quot;Semua&quot; dan &quot;Lalai&quot;. Jika tiada nilai ditentukan, nilai disetkan kepada &quot;Semua&quot;. Apabila &quot;Semua&quot; ditentukan, pandangan termasuk semua lajur yang dicipta pengguna dan takrifan sistem. Apabila &quot;Lalai&quot; ditentukan, pandangan akan sepadan dengan apa yang pengguna lihat apabila melihat senarai dalam talian dalam mana-mana pandangan yang pengguna setkan sebagai Lalai dalam seting mereka. Jika pengguna mengedit pandangan lalai mereka untuk menambah atau mengalih keluar sama ada lajur yang dicipta pengguna atau ditentukan sistem, atau dengan mencipta pandangan baru dan mengesetnya sebagai lalai, perubahan ini akan merambak melalui penyambung.</li>\r\n<li><code>DisableAppendNoteColumns</code> : Menghalang penyambung daripada menggunakan titik akhir berasingan untuk lajur nota.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "Mengembalikan jadual daripada kandungan pada URL yang ditentukan yang diformatkan menurut API SODA 2.0.",
        "Documentation.LongDescription": "Mengembalikan jadual daripada kandungan pada URL <code>url</code> yang ditentukan yang diformatkan menurut API SODA 2.0. URL mesti menuding kepada sumber mematuhi SODA yang sah yang berakhir dengan sambungan .csv.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "Fungsi ini boleh digunakan untuk memanggil mana-mana titik akhir \"Senarai\" yang ditawarkan oleh SparkPost API v1. Apabila membuat panggilan ke SparkPost API menggunakan fungsi ini, ingat bahawa SparkPost API mempunyai had kadar API yang ketat. Jika anda melihat kod status 429 dikembalikan daripada pelayan SparkPost, anda telah mencecah had kadar dan perlu menunggu sebentar sebelum membuat panggilan selanjutnya.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual dengan satu lajur tunggal yang diisi dengan data daripada salah satu titik akhir \"Senarai\" SparkPost API v1 (lihat dokumentasi SparkPost untuk butiran).",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "Mengambil jadual terbina dalam yang didedahkan oleh penyambung SparkPost dengan data yang diagregatkan selama bilangan hari yang ditentukan pengguna. Apabila menyegarkan semula jadual ini atau membuat panggilan ke SparkPost API menggunakan penyambung ini, ingat bahawa SparkPost API mempunyai had kadar API yang ketat. Jika anda melihat kod status 429 dikembalikan daripada pelayan SparkPost, anda telah mencecah had kadar dan perlu menunggu sebentar sebelum membuat panggilan selanjutnya. Apabila memilih nilai untuk parameter Bilangan hari, ambil perhatian bahawa API hanya menyimpan data bernilai 6 bulan."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "Mengembalikan jadual bagi pangkalan data pada Pelayan SQL.",
        "Documentation.LongDescription": "Mengembalikan jadual pangkalan data pada SQL server yang ditentukan, <code>server</code>. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal pilihan berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Nombor yang menetapkan nilai fasal pertanyaan &quot;maxdop&quot; dalam pertanyaan SQL yang dijana.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n<li><code>MultiSubnetFailover</code> : Logik (true/false) yang menetapkan nilai sifat &quot;MultiSubnetFailover&quot; dalam rentetan sambungan (lalai adalah false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Logik (benar/palsu) yang, jika benar, mencuba untuk menugaskan pertukaran jenis yang boleh gagal dan menyebabkan keseluruhan pertanyaan gagal. Tidak disyorkan untuk kegunaan umum.</li>\r\n<li><code>ContextInfo</code> : Nilai perduaan yang digunakan untuk mengeset CONTEXT_INFO sebelum menjalankan setiap perintah.</li>\r\n<li><code>OmitSRID</code> : Logik (benar/palsu) yang, jika benar, tidak memasukkan SRID apabila menghasilkan Well-Known Text daripada jenis geometri dan geografi.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Nilai logik (benar/palsu) yang, jika benar, membenarkan penugasan pertanyaan merentasi pangkalan data pada pelayan yang sama. Nilai lalai adalah palsu.</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...].\r\n    <br>\r\n    Tidak menyokong tetapan pertanyaan SQL untuk dijalankan pada pelayan. <code>Sql.Database</code> perlu digunakan sebagai ganti untuk menjalankan pertanyaan SQL.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "Buat panggilan kepada API Stripe, dengan opsyen ke had bilangan panggilan API yang dibuat.",
        "Documentation.LongDescription": "Buat panggilan kepada API Stripe di https://api.stripe.com/v1/<code>method</code>, dengan rekod opsyenal <code>query</code> yang dihantar sebagai parameter tambahan dan opsyenal <code>pageLimit</code> sebagai had pada bilangan permintaan API. Kebanyakan data terkini telah dikembalikan terdahulu. Jika <code>pageLimit</code> tidak ditentukan, semua data akan dikembalikan. Versi Stripe 2015-10-16 digunakan.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan semua perubahan data",
            "Code": "Stripe.Contents(\"perubahan\")",
            "Result": "Jadual dengan semua perubahan data bagi akaun Stripe semasa"
          },
          {
            "Description": "Mengembalikan satu halaman perubahan data",
            "Code": "Stripe.Contents(\"perubahan\", [], 1)",
            "Result": "Jadual dengan paling banyak perubahan data terkini bagi akaun Stripe semasa"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "Menimbal jadual dalam memori, mengasingkannya daripada perubahan luaran semasa penilaian.",
        "Documentation.LongDescription": "Menimbal jadual dalam memori, memisahkannya daripada perubahan luaran semasa penilaian.\r\n    Penimbalan adalah cetek. Ia memaksa penilaian sebarang nilai sel skalar, tetapi membiarkan nilai bukan skalar (rekod, senarai, jadual dan sebagainya) seperti adanya.\r\n    <br>\r\n    <br>\r\n    Ambil perhatian bahawa menggunakan fungsi ini mungkin atau mungkin tidak membuat pertanyaan anda berjalan lebih cepat. Dalam sesetengah kes, ia boleh menjadikan pertanyaan anda berfungsi dengan lebih perlahan disebabkan oleh pertambahan \r\n kos membaca semua data dan menyimpannya dalam memori, serta fakta bahawa penimbalan menghalang lipatan hiliran. Jika data tidak perlu \r\n    ditimbal tetapi anda hanya ingin menghalang lipatan hiliran, sebaliknya gunakan  <code>Table.StopFolding</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Muatkan semua baris jadual SQL ke dalam memori, supaya sebarang operasi hiliran tidak lagi dapat bertanya pelayan SQL.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "Mengembalikan jadual yang merupakan hasil daripada mencantumkan senarai jadual.",
        "Documentation.LongDescription": "Mengembalikan jadual yang merupakan hasil daripada menggabungkan senarai jadual, <code>tables</code>. Jadual yang terhasil akan mempunyai struktur jenis baris yang ditentukan oleh <code>columns</code> atau gabungan daripada jenis input jika <code>columns</code> tidak ditentukan.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan jadual berikut bersama.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Gabungkan tiga jadual dengan struktur yang berbeza.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Gabungkan dua jadual dan tayangkan ke jenis yang diberikan.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "Menurunkan pengepala lajur kepada baris pertama nilai.",
        "Documentation.LongDescription": "Menurunkan pengepala lajur (iaitu. nama lajur) ke nilai baris pertama. Nama lajur lalai ialah \"Lajur1\", \"Lajur2\" dan seterusnya.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Menurunkan baris nilai pertama dalam jadual.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "Mengalih keluar baris pendua daripada jadual.",
        "Documentation.LongDescription": "Mengalih keluar baris pendua daripada jadual.\r\n    Parameter pilihan, <code>equationCriteria</code>, menentukan lajur mana bagi jadual diuji untuk penduaan. Jika <code>equationCriteria</code> tidak ditentukan, semua lajur diuji.<br>\r\n    <br>\r\n    Kerana Power Query kadang kala menyahmuatkan operasi tertentu untuk sumber data bahagian belakang (dikenali sebagai \"lipatan\"), dan kadang kala mengoptimumkan pertanyaan mengikut \r\n    melangkau operasi yang tidak diperlukan dengan ketat, secara umum tiada jaminan yang pendua khusus akan dikekalkan.\r\n    Sebagai contoh, anda tidak boleh menganggap bahawa baris pertama dengan set unik nilai lajur akan kekal dan baris lebih jauh ke bawah dalam jadual akan dialih keluar.\r\n    Jika anda ingin pengalihan keluar pendua berkelakuan dengan ramalan, pertama sekali, timbalkan jadual menggunakan <code>Table.Buffer</code>.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar baris pendua daripada jadual.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "Alih keluar baris pendua daripada lajur [b] dalam jadual <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code>.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "Mencipta jadual daripada senarai lajur dan nilai yang ditentukan.",
        "Documentation.LongDescription": "Mencipta jadual daripada jenis <code>columns</code> daripada senarai <code>lists</code> yang mengandungi senarai tersarang dengan nama dan nilai lajur. \r\n    Jika beberapa lajur mempunyai nilai yang lebih banyak daripada yang lain, nilai yang tiada akan diisikan dengan nilai lalai, 'nol', jika jalur tidak dapat dinolkan.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual daripada senarai nama pelanggan dalam senarai. Setiap nilai dalam item senarai pelanggan menjadi nilai baris dan setiap senarai menjadi lajur.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Cipta jadual daripada senarai lajur yang ditentukan dan senarai nama lajur.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Mencipta jadual dengan bilangan lajur yang berbeza dalam setiap baris. Nilai baris yang tidak ditemui ialah nol.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "Menukarkan senarai kepada jadual dengan menggunakan fungsi pemisahan yang ditentukan pada setiap item dalam senarai.",
        "Documentation.LongDescription": "Menukarkan senarai, <code>list</code> kepada jadual dengan menggunakan fungsi pemisahan pilihan, <code>splitter</code>, pada setiap item dalam senarai. Secara lalai, senarai dianggap sebagai senarai nilai teks yang dipisahkan oleh koma. Pilihan <code>columns</code> mungkin beberapa lajur, senarai lajur atau TableType. Pilihan <code>default</code> dan <code>extraValues</code> juga mungkin ditentukan.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Cipta jadual daripada senarai menggunakan pemisah lalai.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "Cipta jadual daripada senarai menggunakan pemisah tersuai.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "Cipta jadual daripada senarai menggunakan pemisah Record.FieldValues.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "Menukarkan senarai rekod kepada jadual.",
        "Documentation.LongDescription": "Menukarkan <code>records</code>, senarai rekod kepada jadual.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Mencipta jadual daripada rekod, menggunakan nama medan rekod sebagai nama lajur.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Mencipta jadual daripada rekod dengan lajur yang dijeniskan dan pilih bilangan lajur.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "Mencipta jadual daripada senarai bagi nilai baris dan lajur pilihan",
        "Documentation.LongDescription": "Mencipta jadual daripada senarai <code>rows</code> yang setiap unsur senarai ialah senarai dalaman yang mengandungi nilai lajur untuk baris tunggal. Senarai pilihan nama lajur, jenis jadual atau bilangan lajur boleh diberikan untuk <code>columns</code>.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Mencipta jadual dengan lajur [CustomerID] dengan nilai {1, 2} dan lajur [Name] dengan nilai {\"Bob\", \"Jim\"} dan lajur [Phone] dengan nilai {\"123-4567\", \"987-6543\"}.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Mencipta jadual dengan lajur [CustomerID] dengan nilai {1, 2} dan lajur [Name] dengan nilai {\"Bob\", \"Jim\"} dan lajur [Phone] dengan nilai {\"123-4567\", \"987-6543\"}, yang mana [CustomerID] ialah jenis nombor manakala [Name] dan [Phone] ialah jenis teks.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "Mencipta jadual dengan lajur daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mencipta jadual dengan lajur yang mengandungi nilai yang diberikan atau senarai nilai, <code>value</code>. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal pilihan berikut:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : Nama lajur yang digunakan semasa membina jadual daripada senarai atau nilai skalar.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Cipta jadual daripada nilai 1.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "Mencipta jadual daripada senarai.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "Wujudkan jadual daripada nilai 1 dengan nama lajur tersuai.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "Mengembalikan maklumat mengenai cara jadual dipetakan.",
        "Documentation.LongDescription": "Mengembalikan maklumat mengenai cara jadual dipetakan.  Jadual dikembalikan yang mana setiap lajur ialah lajur pemetakan dalam jadual asal dan setiap baris sepadan dengan pemetakan dalam jadual asal.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "Mengembalikan profil lajur jadual.",
        "Documentation.LongDescription": "<p>Mengembalikan profil untuk lajur dalam <code>table</code>.</p>\r\n<p>Maklumat berikut dikembalikan untuk setiap lajur (jika berkenaan):\r\n<ul>\r\n  <li>minimum</li>\r\n  <li>maksimum</li>\r\n  <li>purata</li>\r\n  <li>sisihan standard</li>\r\n  <li>kiraan</li>\r\n  <li>kiraan nol</li>\r\n  <li>kiraan berbeza</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "Menaikkan aras baris pertama nilai sebagai pengepala lajur baharu (iaitu nama lajur).",
        "Documentation.LongDescription": "Menaikkan aras baris pertama nilai sebagai pengepala lajur baharu (iaitu nama lajur). Ikut lalai, hanya nilai teks atau nombor yang dinaikkan aras ke pengepala. Opsyen sah:\r\n    <div>\r\n      <code>PromoteAllScalars</code> : Jika ditetapkan kepada <code>benar</code>, semua nilai skalar dalam baris pertama dinaikkan aras ke pengepala menggunakan <code>Budaya</code>, jika ditentukan (atau penempatan dokumen semasa).\r\n    Untuk nilai yang tidak boleh ditukar kepada teks, nama lajur lalai akan digunakan.\r\n    </div>\r\n    <div>\r\n    <code>Budaya</code> : Satu nama budaya yang menentukan budaya untuk data.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Promosikan nilai baris pertama dalam jadual.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "Menaikkan aras semua skalar dalam baris pertama jadual ke pengepala.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "Mengembalikan jadual baris kiraan pertama dilangkau.",
        "Documentation.LongDescription": "Mengembalikan jadual yang tidak mengandungi bilangan baris pertama yang ditentukan <code>countOrCondition</code>, pada jadual <code>table</code>. \r\n    Bilangan baris yang dialih keluar bergantung pada parameter pilihan <code>countOrCondition</code>. \r\n    <ul>\r\n    <li> Jika <code>countOrCondition</code> dikecualikan hanya baris pertama dialih keluar. </li>\r\n    <li> Jika <code>countOrCondition</code> ialah nombor, baris sebanyak itu (bermula di atas) akan dialih keluar. </li>\r\n    <li> Jika <code>countOrCondition</code> ialah syarat, baris yang memenuhi syarat akan dialih keluar sehingga baris tidak memenuhi syarat.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluarkan baris pertama jadual.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Alih keluarkan dua baris pertama jadual.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Alih keluarkan baris pertama yang mana [CustomerID] <=2 pada jadual.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "Mengembalikan jadual dengan N baris terakhir telah dialih keluar.",
        "Documentation.LongDescription": "Mengembalikan jadual yang tidak mengandungi <code>countOrCondition</code> baris terakhir pada jadual <code>table</code>.\r\n        Bilangan baris yang dialih keluar bergantung pada parameter pilihan <code>countOrCondition</code>. \r\n    <ul>\r\n    <li> Jika <code>countOrCondition</code> dikecualikan hanya baris terakhir dialih keluar. </li>\r\n    <li> Jika <code>countOrCondition</code> ialah nombor, baris sebanyak itu (bermula di bawah) akan dialih keluar. </li>\r\n    <li> Jika <code>countOrCondition</code> ialah syarat, baris yang memenuhi syarat akan dialih keluar sehingga baris tidak memenuhi syarat.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluarkan baris terakhir jadual.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Alih keluarkan baris terakhir yang mana [CustomerID] > 2 pada jadual.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "Mengembalikan jadual dengan baris dialih keluar daripada jadual input yang mengandungi ralat dalam sekurang-kurangnya satu sel. Jika senarai lajur ditentukan, maka hanya sel dalam lajur yang ditentukan diperiksa untuk ralat.",
        "Documentation.LongDescription": "Mengembalikan jadual dengan baris dialih keluar daripada jadual input yang mengandungi ralat dalam sekurang-kurangnya satu sel. Jika senarai lajur ditentukan, maka hanya sel dalam lajur yang ditentukan diperiksa untuk ralat.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Mengalih keluar nilai ralat daripada baris pertama.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "Mengembalikan jadual dengan baris dalam tertib terbalik.",
        "Documentation.LongDescription": "Mengembalikan jadual dengan baris daripada input <code>table</code>, dalam tertib terbalik.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Terbalikkan baris dalam jadual.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi perihalan lajur (cth. skema) jadual yang ditentukan.",
        "Documentation.LongDescription": "<p>Mengembalikan jadual yang menerangkan lajur <code>table</code>.</p>\r\n<p>Setiap baris dalam jadual menerangkan sifat lajur <code>table</code>:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>Nama Lajur</b></td>\r\n    <td><b>Perihalan</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Name</code></td>\r\n    <td>Nama lajur.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Position</code></td>\r\n    <td>Kedudukan asas 0 bagi lajur dalam <code>table</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>Nama jenis lajur.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Kind</code></td>\r\n    <td>Golongan jenis lajur.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>Sama ada lajur boleh mengandungi nilai <code>null</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>Asas angka (contohnya, asas 2 atau asas 10) bagi medan <code>NumericPrecision</code> dan <code>NumericScale</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>Ketepatan lajur angka dalam asas yang ditentukan oleh <code>NumericPrecisionBase</code>. Ini ialah bilangan digit maksimum yang boleh diwakili oleh nilai bagi jenis ini (termasuk digit pecahan).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>Skala lajur angka dalam asas yang ditentukan oleh <code>NumericPrecisionBase</code>. Ini ialah bilangan digit dalam bahagian pecahan nilai bagi jenis ini. Nilai <code>0</code> menunjukkan skala tetap tanpa digit pecahan. Nilai <code>null</code> menunjukkan skala tidak diketahui (sama ada kerana ia terapung atau tidak ditentukan).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>Bilangan digit pecahan maksimum yang disokong dalam bahagian saat bagi nilai tarikh atau masa.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>Bilangan aksara maksimum yang dibenarkan dalam lajur <code>text</code>, atau bilangan bait maksimum yang dibenarkan dalam lajur <code>binary</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>Menunjukkan sama ada lajur ini boleh berbeza-beza dalam ukuran panjang (sehingga <code>MaxLength</code>) atau jika ia bersaiz tetap.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>Name jenis lajur dalam sistem jenis natif bagi sumber (contohnya, <code>nvarchar</code> untuk SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>Ungkapan lalai untuk nilai lajur ini dalam bahasa ungkapan natif sumber (contohnya, <code>42</code> atau <code>newid()</code> untuk SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Description</code></td>\r\n    <td>Perihalan lajur.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "Mengembalikan jadual dengan baris jadual input yang mengandungi ralat dalam sekurang-kurangnya satu sel sahaja. Jika senarai lajur ditentukan, maka hanya sel dalam lajur yang ditentukan diperiksa untuk ralat.",
        "Documentation.LongDescription": "Mengembalikan jadual dengan baris jadual input yang mengandungi ralat dalam sekurang-kurangnya satu sel sahaja. Jika senarai lajur ditentukan, maka hanya sel dalam lajur yang ditentukan diperiksa untuk ralat.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Pilih nama pelanggan dengan ralat dalam barisnya.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "Mengembalikan jadual baris kiraan pertama dilangkau.",
        "Documentation.LongDescription": "Mengembalikan jadual yang tidak mengandungi bilangan baris pertama yang ditentukan <code>countOrCondition</code>, pada jadual <code>table</code>. \r\n    Bilangan baris yang dilangkau bergantung pada parameter pilihan <code>countOrCondition</code>. \r\n    <ul>\r\n    <li> Jika <code>countOrCondition</code> dikecualikan hanya baris pertama dilangkau. </li>\r\n    <li> Jika <code>countOrCondition</code> ialah nombor, baris sebanyak itu (bermula di atas) akan dilangkau. </li>\r\n    <li> Jika <code>countOrCondition</code> ialah syarat, baris yang memenuhi syarat akan dilangkau sehingga baris tidak memenuhi syarat.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Langkau baris pertama jadual.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Langkau dua baris pertama jadual.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Langkau baris pertama yang mana [Price] > 25 pada jadual.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "Menghalang sebarang operasi hilir daripada dijalankan terhadap sumber asal data.",
        "Documentation.LongDescription": "Menghalang sebarang operasi hilir daripada dijalankan terhadap sumber asal data dalam <code>table</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Mengambil data daripada jadual SQL dengan cara yang menghalang sebarang operasi hiliran daripada berjalan sebagai pertanyaan pada pelayan SQL.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "Menjadikan lajur kepada baris dan baris kepada lajur.",
        "Documentation.LongDescription": "Menjadikan lajur kepada baris dan baris kepada lajur.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Jadikan baris jadual bagi pasangan nilai nama menjadi lajur.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "Dapatkan perhubungan di antara set jadual.",
        "Documentation.LongDescription": "Dapatkan hubungan di antara set jadual. Set <code>tables</code> dianggarkan mempunyai struktur yang sama dengan jadual navigasi. Lajur yang ditakrifkan oleh <code>dataColumn</code> mengandungi jadual data yang sebenar.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "Mengembalikan jadual bagi jadual dan paparan SQL daripada pangkalan data Teradata.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual dan paparan SQL yang tersedia dalam pangkalan data Teradata pada pelayan <code>server</code>. Port boleh ditentukan secara pilihan dengan pelayan, diasingkan oleh titik bertindih. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Wawasan Siri Masa Azure"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "Masukkan bilangan bulan bagi data Twilio sejarah yang hendak diambil.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Twilio yang berkaitan."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi perihalan lajur (iaitu skema) bagi jenis jadual yang ditentukan.",
        "Documentation.LongDescription": "<p>Mengembalikan jadual yang menerangkan lajur bagi <code>tableType</code>.</p>\r\n<p>Rujuk dokumentasi untuk <code>Table.Schema</code> untuk penerangan bagi jadual yang terhasil.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Suapan Azure DevOps Services",
        "Documentation.DisplayName": "Suapan Azure DevOps Services",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Mengembalikan jadual suapan OData yang ditawarkan oleh Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Sambung ke Data Cerapan Viva",
        "Documentation.LongDescription": "Import metrik mingguan dan data atribut daripada Analitis Tempat Kerja.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual dengan atribut yang kelihatan dan setiap metrik minggu untuk setiap pekerja yang diukur dalam petak.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "advancedParameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "Mengembalikan kandungan dokumen HTML yang dipecahkan menjadi struktur juzuknya, serta sebagai perwakilan dokumen penuh dan teksnya selepas mengalih keluar tag.",
        "Documentation.LongDescription": "Mengembalikan kandungan dokumen HTML yang dipecahkan menjadi struktur juzuknya, serta sebagai perwakilan dokumen penuh dan teksnya selepas mengalih keluar tag.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "Mengembalikan jadual dengan metrik kunci Webtrends.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Membuat panggilan ke titik tamat KeyMetrics Webtrends dan mengembalikan semua data sebagai jadual.",
        "Documentation.Examples": [
          {
            "Description": "Menarik jadual metrik kunci bagi penyewa 98765 dalam 30 hari lalu",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "Jadual metrik kunci"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "Masukkan ID Profil yang berkaitan dengan akaun Webtrends anda.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Webtrends yang berkaitan."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Sambung ke Data Cerapan Viva",
        "Documentation.LongDescription": "Import metrik mingguan dan data atribut daripada Analitis Tempat Kerja.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual dengan atribut yang kelihatan dan setiap metrik minggu untuk setiap pekerja yang diukur dalam petak.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "Mengembalikan kandungan dokumen XML sebagai jadual hierarki.",
        "Documentation.LongDescription": "Mengembalikan kandungan dokumen XML sebagai jadual hierarki.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "Mengembalikan kandungan dokumen XML sebagai koleksi jadual diratakan tersarang.",
        "Documentation.LongDescription": "Mengembalikan kandungan dokumen XML sebagai koleksi jadual diratakan tersarang.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Ambil kandungan fail xml setempat.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "Masukkan URL akaun Zendesk anda.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Zendesk yang berkaitan."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "Mengembalikan koleksi skema untuk sumber data ADO.NET.",
        "Documentation.LongDescription": "Mengembalikan koleksi skim untuk sumber data ADO.NET dengan nama penyedia <code>providerName</code> dengan rentetan sambungan <code>connectionString</code>. <code>connectionString</code> boleh dalam bentuk teks atau rekod pasangan nilai sifat. Nilai sifat boleh dalam bentuk teks atau nombor. Parameter rekod pilihan, <code>options</code>, boleh disediakan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan yang berikut:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logik (benar/palsu) yang menentukan sama ada untuk menghasilkan pilihan rentetan sambungan yang serasi dengan SQL Server untuk pengesahan Windows. Nilai lalai ialah benar.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (Beta)",
        "Documentation.Description": "Import data daripada pangkalan data Amazon Redshift.",
        "Documentation.LongDescription": "Mengembalikan jadual yang menyenaraikan jadual pada kelompok Amazon Redshift <code>server</code> dalam pangkalan data <code>database</code>.  Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n<ul>\r\n<li><code> NamaProvider</code>: Nilai teks untuk digunakan sebagai Nama Pembekal untuk sambungan. Ini digunakan apabila menggunakan Microsoft Authentication.</li>\r\n<li><code> Saiz Kelompok</code>: Bilangan baris yang diambil dalam satu panggilan ke pelayan.</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Mengembalikan jadual kiub berbilang dimensi atau model jadual daripada pangkalan data Analysis Services.",
        "Documentation.LongDescription": "Mengembalikan jadual kiub berbilang dimensi atau model jadual daripada pangkalan data Analysis Services <code>database</code> pada pelayan <code>server</code>. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>Query</code> : Pertanyaan MDX asal yang digunakan untuk mengambil data.</li>\r\n<li><code>TypedMeasureColumns</code> : Nilai logik yang menunjukkan sama ada jenis ditentukan dalam berbilang dimensi atau model jadual akan digunakan untuk jenis lajur ukuran yang ditambahkan. Apabila ditetapkan kepada false, jenis &quot;nombor&quot; akan digunakan untuk semua lajur ukuran. Nilai lalai untuk opsyen ini adalah false.</li>\r\n<li><code>Culture</code> : Nama budaya yang menentukan budaya untuk data. Ini berpadanan dengan sifat rentetan sambungan &#39;Pengecam tempatan&#39;.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>SubQueries</code> : Nombor (0, 1 atau 2) yang menetapkan nilai sifat &quot;SubQueries&quot; dalam rentetan sambungan. Ini mengawal kelakuan ahli yang dikira pada subpilihan atau subkiub. (Nilai lalai ialah 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Mengembalikan jadual yang menyenaraikan jadual pada gugusan Spark yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual yang menyenaraikan jadual pada gugusan Spark <code>hos</code> menggunakan <code>protokol</code>.  Protokol sah adalah:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual yang menyenaraikan jadual pada gugusan Spark yang ditentukan.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Masukkan nama organisasi dan projek.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (Papan sahaja)",
        "Documentation.LongDescription": "Mengembalikan jadual bagi pandangan Analitis yang ditawarkan oleh Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "HDInsight Interactive Query",
        "Documentation.Caption": null,
        "Documentation.Description": "Import data daripada HDInsight Interactive Query",
        "Documentation.LongDescription": "\r\nMengembalikan senarai jadual daripada HDInsight Interactive Query yang ditentukan oleh <code>database</code> pada <code>server</code> HDInsight Interactive Query. Nombor port boleh ditentukan dengan pelayan secara pilihan, dipisahkan oleh noktah bertindih. Parameter <code>options</code> pilihan boleh ditentukan untuk mengawal pilihan berikut:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: Tempoh yang mengawal jumlah masa yang diambil untuk menunggu sebelum meninggalkan percubaan membuat sambungan ke pelayan. Nilai lalai bergantung pada pemacu.</li>\r\n        <li><code>CommandTimeout</code>: Tempoh yang mengawal jumlah masa pertanyaan sebelah pelayan dibenarkan berjalan sebelum dibatalkan. Nilai lalai bergantung pada pemacu.</li>\r\n</ul>\r\nParameter <code>options</code> ditentukan sebagai [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "Mengembalikan jadual dengan lajur yang dipetakan kepada atribut entiti dalam Common Data Model, termasuk jenis data.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "Mengembalikan jadual dengan lajur yang dipetakan kepada atribut entiti dalam Common Data Model, termasuk jenis data. Lajur daripada definisi entiti akan ditambah jika tidak dipetakan dan sebarang lajur yang tidak dipetakan akan dialih keluar.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "Retrieve all pages of data",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "Mengembalikan kiub selepas menggunakan parameter padanya.",
        "Documentation.LongDescription": "Mengembalikan kiub selepas menggunakan <code>parameter</code> dengan <code>arguments</code> ke <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "Mengubah kebutiran dimensi bagi konteks penapis untuk kiub dengan meruntuhkan atribut yang dipetakan pada lajur yang ditentukan.",
        "Documentation.LongDescription": "Mengubah kebutiran dimensi bagi konteks penapis untuk <code>cube</code> dengan meruntuhkan atribut yang dipetakan pada lajur <code>columnNames</code> yang ditentukan. Lajur juga dialih keluar daripada pandangan jadual bagi kiub.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Menggantikan set dimensi yang dikembalikan oleh Cube.Dimensions.",
        "Documentation.LongDescription": "Menggantikan set dimensi yang dikembalikan oleh <code>Cube.Dimensions</code>.\r\n    Sebagai contoh, fungsi ini boleh digunakan untuk menambah lajur ID pada atribut dimensi, supaya sumber data boleh dikumpulkan pada ID dan bukannya pada nilai yang dipaparkan.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "Menggunakan senarai fungsi kiub.",
        "Documentation.LongDescription": "Menggunakan senarai fungsi kiub, <code>transforms</code> pada <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "Mengembalikan jadual bagi jadual dan pandangan SQL yang tersedia dalam pangkalan data Db2.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual dan pandangan SQL yang tersedia dalam pangkalan data Db2 pada pelayan <code>server</code> dalam tika pangkalan data bernama <code>database</code>. Port boleh ditentukan secara pilihan dengan pelayan, dipisahkan oleh tanda titik bertindih. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n<li><code>Implementation</code> : Menentukan pelaksanaan pembekal pangkalan data dalaman yang hendak digunakan. Nilai lalai ialah: &quot;IBM&quot; dan &quot;Microsoft&quot;.</li>\r\n<li><code>BinaryCodePage</code> : Nombor untuk CCSID (Pengecam Set Aksara Berkod) untuk menyahkodkan data perduaan Db2 FOR BIT kepada rentetan aksara. Digunakan pada Pelaksanaan = “Microsoft”. Tetapkan 0 untuk menyahdayakan penukaran (lalai). Tetapkan 1 untuk menukar berdasarkan pengekodan pangkalan data. Tetapkan nombor CCSID lain untuk menukar kepada pengekodan aplikasi.</li>\r\n<li><code>PackageCollection</code> : Menentukan nilai rentetan untuk koleksi pakej (lalai adalah &quot;NULLID&quot;) untuk mendayakan penggunaan pakej dikongsi yang diperlukan untuk memproses pernyataan SQL. Digunakan pada Pelaksanaan = &quot;Microsoft&quot;.</li>\r\n<li><code>UseDb2ConnectGateway</code> : Menentukan sama ada sambungan sedang dibuat melalui get laluan Db2 Connect. Digunakan untuk pelaksanaan = &quot;Microsoft&quot;.</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Mengambil set data daripada Data.World"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "ACR bagi Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "ACR bagi Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "Kembalikan jadual yang mengandungi sifat dan kandungan blob yang ditemui dalam bekas yang ditentukan daripada ruang simmpanan storan Azure.",
        "Documentation.LongDescription": "Kembalikan jadual yang mengandungi bari bagi setiap fail blob yang ditemui pada URL bekas, <code>account</code>, daripada ruang simpanan storan Azure. Setiap baris mengandungi sifat fail dan pautan kepada kandungannya.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "Mengembalikan jadual yang mengandungi hasil yang menjalankan pemilih CSS yang ditentukan terhadap HTML yang diberikan.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mengandungi keputusan pelaksanaan pemilih CSS yang ditentukan berbanding <code>html</code> yang disediakan. Parameter rekod pilihan, <code>options</code>, mungkin disediakan untuk menentukan sifat tambahan. Rekod tersebut boleh mengandungi medan yang berikut:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Mencapai data",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual daripada sampel nilai teks html.",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>Pengurus</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "Ekstrak semua hrefs daripada nilai teks html sampel.",
            "Code": "Html.Table(\"<a href=\"\"/test.html\"\">Ujian</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "Mengembalikan satu jadual SQL dan paparan yang terdapat di pangkalan data Informix.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual dan paparan SQL yang tersedia dalam pangkalan data Informix pada pelayan <code>server</code> dalam tika pangkalan data bernama <code>database</code>. Port boleh ditentukan secara pilihan dengan pelayan, diasingkan oleh titik bertindih. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "Mengembalikan jadual dengan butiran berita utama.",
        "Documentation.LongDescription": "Buat panggilan kepada titik akhir Marketo REST API di <code>url</code>/rest/v1/leads.json. Semua berita utama dalam senarai <code>leadIds</code> telah dikembalikan.",
        "Documentation.Examples": [
          {
            "Description": "Menarik butiran bagi tiga berita utama",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "Jadual dengan butiran bagi berita utama yang dibekalkan"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "Masukkan URL titik akhir Marketo REST API yang dikaitkan dengan akaun anda.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Marketo yang bersesuaian."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "Mengembalikan jadual bagi jadual, paparan dan fungsi skalar disimpan SQL yang tersedia dalam pangkalan data MySQL.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual, paparan dan fungsi skalar disimpan bagi SQL yang tersedia dalam pangkalan data MySQL pada pelayan <code>server</code> dalam tika pangkalan data bernama <code>database</code>. Port boleh ditentukan secara pilihan dengan pelayan, diasingkan oleh titik bertindih. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>Encoding</code> : Nilai TextEncoding yang menentukan set aksara yang digunakan untuk Kodkan semua pertanyaan yang dihantar kepada pelayan (lalai ialah nol).</li>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>TreatTinyAsBoolean</code> : Logik (true/false) yang menentukan sama ada untuk memaksa lajur tinyint pada pelayan sebagai nilai logik. Nilai lalai adalah true.</li>\r\n<li><code>OldGuids</code> : Logik (true/false) yang menetapkan sama ada lajur char(36) (jika false) atau lajur binary(16) (jika true) akan dikendalikan sebagai GUID. Nilai lalai adalah false.</li>\r\n<li><code>ReturnSingleDatabase</code> : Logik (true/false) yang menetapkan sama ada untuk mengembalikan semua jadual bagi semua pangkalan data (jika false) atau untuk mengembalikan jadual dan paparan pangkalan data yang ditentukan (jika true). Nilai lalai adalah false.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "Import data daripada pangkalan data IBM Netezza.",
        "Documentation.LongDescription": "\r\nMengembalikan jadual bagi jadual, pandangan dan fungsi Netteza yang disimpan daripada pangkalan data Pelayan Netezza <code>pangkalan data</code> pada pelayan <code>pelayan</code>. Port mungkin ditentukan secara pilihan dengan pelayan, dipisahkan dengan noktah bertindih. Parameter rekod pilihan, <code>opsyen</code>, boleh ditentukan untuk mengawal opsyen yang berikut:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: Logik (benar/palsu) yang menetapkan sama ada mahu menjana sifat navigasi pada nilai yang dikembalikan (lalai ialah benar)</li>\r\n        <li><code>HierarchicalNavigation</code>: Logik (benar/palsu) yang menetapkan sama ada mahu melihat jadual yang dikumpulkan mengikut nama skemanya (lalai ialah palsu)</li>\r\n        <li><code>ConnectionTimeout</code>: Tempoh yang mengawal jangka masa perlu menunggu sebelum meninggalkan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n        <li><code>CommandTimeout</code>: Tempoh yang mengawal jangka masa pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>NormalizeDatabaseName</code>: Logik (benar/palsu) yang menetapkan sama ada mahu menormalkan nama pangkalan data kepada huruf besar atau mentafsirnya secara literal (lalai ialah benar).</li>\r\n</ul>\r\nParameter rekod ditentukan sebagai [option1 = value1, option2 = value2...].",
        "Documentation.Examples": [
          {
            "Description": "Senaraikan jadual dalam projek IBM Netezza.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "Kembalikan hasil yang menjalankan pertanyaan asal pada sumber data ODBC.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menjalankan <code>query</code> dengan rentetan sambungan <code>connectionString</code> menggunakan ODBC. <code>connectionString</code> boleh dalam bentuk teks atau rekod pasangan nilai sifat. Nilai sifat boleh dalam bentuk teks atau nombor. Parameter rekod pilihan, <code>options</code>, boleh disediakan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan yang berikut:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah 15 saat.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logik (benar/palsu) yang menentukan sama ada untuk menghasilkan pilihan rentetan sambungan yang serasi dengan SQL Server untuk pengesahan Windows. Nilai lalai ialah benar.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Kembalikan hasil menjalankan pertanyaan ringkas terhadap rentetan sambungan yang disediakan.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "Kembalikan hasil yang menjalankan pertanyaan asal pada sumber data OLE DB.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menjalankan <code>query</code> dengan rentetan sambungan <code>connectionString</code> menggunakan OLE DB. <code>connectionString</code> boleh dalam bentuk teks atau rekod pasangan nilai sifat. Nilai sifat boleh dalam bentuk teks atau nombor. Parameter rekod pilihan, <code>options</code>, boleh disediakan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan yang berikut:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logik (benar/palsu) yang menentukan sama ada untuk menghasilkan pilihan rentetan sambungan yang serasi dengan SQL Server untuk pengesahan Windows. Nilai lalai ialah benar.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "Mengembalikan jadual bagi jadual dan paparan SQL yang tersedia dalam pangkalan data PostgreSQL.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual dan paparan SQL yang tersedia dalam pangkalan data PostgreSQL pada pelayan <code>server</code> dalam tika pangkalan data bernama <code>database</code>. Port boleh ditentukan secara pilihan dengan pelayan, diasingkan oleh titik bertindih. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Import data daripada gudang Snowflake Computing.",
        "Documentation.LongDescription": "Mengembalikan jadual yang menyenaraikan jadual dalam <code>gudang</code> Pengiraan Snowflake yang terletak di <code>pelayan</code>. Parameter rekod pilihan, <code>opsyen</code>, boleh ditentukan untuk mengawal opsyen yang berikut:\r\n<ul>\r\n<li><code> Peranan</code>: Nilai teks untuk digunakan sebagai nama Peranan untuk sambungan.</li>\r\n<li><code>CreateNavigationProperties</code>: Nilai logik (benar/palsu) yang menetapkan sama ada mahu menjana sifat navigasi pada nilai yang dikembalikan (lalai ialah benar)</li>\r\n<li><code>ConnectionTimeout</code>: Bilangan saat untuk menunggu respons rangkaian daripada Snowflake.</li>\r\n<li><code>CommandTimeout</code>: Bilangan saat untuk menunggu pertanyaan dilaksanakan.</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Menyenaraikan jadual dalam gudang Snowflake.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Mengembalikan jadual yang menyenaraikan jadual pada gugusan Spark yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual yang menyenaraikan jadual pada gugusan Spark <code>hos</code> menggunakan <code>protokol</code>.  Protokol sah adalah:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Senarai jadual dalam tika Azure Spark.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "Mengembalikan jadual bagi jadual, paparan dan fungsi disimpan SQL daripada pangkalan data pelayan SQL.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual, paparan dan fungsi disimpan bagi SQL daripada pangkalan data SQL Server <code>database</code> pada pelayan <code>server</code>. Port boleh ditentukan secara pilihan dengan pelayan, diasingkan oleh titik bertindih atau koma. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Nombor yang menetapkan nilai fasal pertanyaan &quot;maxdop&quot; dalam pertanyaan SQL yang dijana.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n<li><code>MultiSubnetFailover</code> : Logik (true/false) yang menetapkan nilai sifat &quot;MultiSubnetFailover&quot; dalam rentetan sambungan (lalai adalah false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Logik (benar/palsu) yang, jika benar, mencuba untuk menugaskan pertukaran jenis yang boleh gagal dan menyebabkan keseluruhan pertanyaan gagal. Tidak disyorkan untuk kegunaan umum.</li>\r\n<li><code>ContextInfo</code> : Nilai perduaan yang digunakan untuk mengeset CONTEXT_INFO sebelum menjalankan setiap perintah.</li>\r\n<li><code>OmitSRID</code> : Logik (benar/palsu) yang, jika benar, tidak memasukkan SRID apabila menghasilkan Well-Known Text daripada jenis geometri dan geografi.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Nilai logik (benar/palsu) yang, jika benar, membenarkan penugasan pertanyaan merentasi pangkalan data pada pelayan yang sama. Nilai lalai adalah palsu.</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Mengembalikan jadual bagi jadual dan paparan SQL yang tersedia dalam pangkalan data Sybase.",
        "Documentation.LongDescription": "Mengembalikan jadual bagi jadual dan paparan SQL yang tersedia dalam pangkalan data Sybase pada pelayan <code>server</code> dalam tika pangkalan data bernama <code>database</code>. Port boleh ditentukan secara pilihan dengan pelayan, diasingkan oleh titik bertindih. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada untuk menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Fungsi yang digunakan untuk mencipta nama bagi sifat navigasi.</li>\r\n<li><code>Query</code> : Pertanyaan SQL asal yang digunakan untuk mengambil data. Jika pertanyaan menghasilkan berbilang set keputusan, hanya yang pertama akan dikembalikan.</li>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>ConnectionTimeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan percubaan untuk membuat sambungan kepada pelayan. Nilai lalai adalah bergantung pemacu.</li>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n</ul>\r\n\r\n    Parameter rekod ditentukan sebagai, contohnya [option1 = value1, option2 = value2...] atau [Query = \"select …”].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "Menambah lajur dengan nilai kedudukan eksplisit.",
        "Documentation.LongDescription": "Menambah lajur bernama <code>newColumnName</code> pada <code>table</code> dengan nilai kedudukan eksplisit.\r\n    Nilai pilihan, <code>initialValue</code>, nilai indeks awal. Nilai pilihan, <code>increment</code>, menentukan jumlah yang perlu ditambah pada setiap nilai indeks.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Tambahkan lajur indeks yang bernama \"Index\" pada jadual.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "Tambahkan lajur indeks yang bernama \"index\", bermula pada nilai 10 dan menambah sebanyak 5, pada jadual.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "Diberi lajur senarai dalam jadual, cipta salinan baris untuk setiap nilai dalam senarainya.",
        "Documentation.LongDescription": "Diberi <code>table</code>, yang mana <code>column</code> ialah senarai nilai, memisahkan senarai menjadi baris bagi setiap nilai. Nilai dalam lajur lain diperduakan dalam setiap baris baru yang dicipta.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan lajur senarai [Name] dalam jadual.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "Menyebarkan nilai daripada sel sebelumnya kepada sel bernilai nol di bawah dalam lajur.",
        "Documentation.LongDescription": "Mengembalikan jadual daripada <code>table</code> yang ditentukan yang mana nilai sel sebelumnya disebarkan kepada sel bernilai nol di bawah dalam <code>columns</code> yang ditentukan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual dengan nilai nol dalam lajur [Place] diisi dengan nilai di atasnya daripada jadual.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "Menyebarkan nilai daripada sel kepada sel bernilai nol di atas dalam lajur.",
        "Documentation.LongDescription": "Mengembalikan jadual daripada <code>table</code> yang ditentukan yang mana nilai sel seterusnya disebarkan kepada sel bernilai nol di atas dalam <code>columns</code> yang ditentukan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual dengan nilai nol dalam lajur [Column2] diisi dengan nilai di bawah daripada jadual.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "Mengembalikan semua baris yang mengandungi teks yang ditentukan dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan baris dalam jadual <code>table</code> yang mengandungi teks <code>text</code>. Jika teks tidak ditemui, jadual kosong dikembalikan.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Cari baris dalam jadual yang mengandungi \"Bob\".",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "Mengembalikan baris kiraan pertama yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris pertama jadual <code>table</code>, bergantung pada nilai <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Jika <code>countOrCondition</code> ialah nombor, baris sebanyak itu (bermula di atas) akan dikembalikan. </li>\r\n    <li> Jika <code>countOrCondition</code> ialah syarat, baris yang memenuhi syarat akan dikembalikan sehingga baris tidak memenuhi syarat.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Cari dua baris pertama jadual .",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Cari dua baris pertama yang mana [a] > 0 dalam jadual.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "Mengembalikan jadual yang merupakan hasil daripada menggabungkan satu set jadual pemetakan.",
        "Documentation.LongDescription": "Kembalikan jadual yang merupakan hasil pengabungan set jadual yang dipetakkan, <code>partitions</code>. <code>partitionColumn</code> ialah nama lajur yang ditambah. Jenis lajur lalai untuk <code>any</code>, tetapi boleh ditentukan oleh <code>partitionColumnType</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Cari jenis item daripada senarai <code>{number}</code>.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "Mengembalikan bilangan baris yang ditentukan terakhir.",
        "Documentation.LongDescription": "Mengembalikan baris terakhir daripada jadual, <code>table</code> bergantung pada nilai <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Jika <code>countOrCondition</code> ialah nombor, baris sebanyak akan dikembalikan bermula dari kedudukan (tamat - <code>countOrCondition</code>). </li>\r\n    <li> Jika <code>countOrCondition</code> ialah syarat, baris yang memenuhi syarat akan dikembalikan dalam kedudukan menaik sehingga baris tidak memenuhi syarat.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Cari dua baris terakhir pada jadual.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Cari dua baris terakhir yang mana [a] > 0 dalam jadual.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "Mengembalikan jadual yang mana semua lajur telah ditambah awalan dengan teks yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual yang mana semua nama lajur daripada <code>table</code> yang disediakan telah ditambah awalan dengan teks yang ditentukan, <code>prefix</code>, tambah tempoh dalam bentuk <code>prefix</code><code>.ColumnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Tambah awalan pada lajur dengan \"MyTable\" dalam jadual.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "Mengembalikan baris yang bermula pada ofset yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris daripada <code>table</code> bermula pada <code>offset</code> yang ditentukan. Parameter pilihan, <code>count</code>, yang menentukan bilangan baris untuk dikembalikan. Secara lalai, semua baris selepas ofset dikembalikan.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan semua baris yang bermula pada ofset 1 dalam jadual.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Mengembalikan satu baris yang bermula pada ofset 1 dalam jadual.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "Mengalih keluar lajur yang ditentukan.",
        "Documentation.LongDescription": "Mengalih keluar <code>columns</code> daripada <code>table</code> yang diberikan.\r\n    Jika lajur yang ditentukan tidak wujud, ralat dibangkitkan melainkan parameter pilihan <code>missingField</code> menentukan tingkah laku alternatif (contohnya, <code>MissingField.UseNull</code> atau <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluarkan lajur [Phone] daripada jadual.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Cuba alih keluar lajur yang tidak wujud daripada jadual.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "Mengalih keluar semua tika bagi baris yang ditentukan daripada jadual.",
        "Documentation.LongDescription": "Mengalih keluar semua tika bagi <code>rows</code> yang ditentukan daripada <code>table</code>.\r\n    Parameter pilihan <code>equationCriteria</code>, mungkin ditentukan untuk mengawal perbandingan antara baris pada jadual.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar sebarang baris yang mana [a = 1] daripada jadual <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code>.",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "Mengalih keluar bilangan baris yang ditentukan.",
        "Documentation.LongDescription": "Mengalih keluar <code>count</code> baris daripada permulaan <code>table</code>, bermula pada <code>offset</code> yang ditentukan. Kiraan lalai 1 yang digunakan dalam parameter <code>count</code> tidak diberi. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluarkan baris pertama daripada jadual.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Alih keluarkan baris pada kedudukan 1 daripada jadual.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Alih keluarkan dua baris yang bermula pada kedudukan 1 daripada jadual.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "Menggunakan nama semula bentuk {old, new}.",
        "Documentation.LongDescription": "Melaksanakan nama semua yang ditentukan pada lajur dalam jadual <code>table</code>. Operasi penggantian <code>renames</code> terdiri daripada senarai dengan dua nilai, nama lajur lama dan nama lajur baru, diberi dalam senarai.\r\n    Jika lajur tidak wujud, pengecualian dikembalikan melainkan parameter pilihan <code>missingField</code> menentukan alternatif (cth. <code>MissingField.UseNull</code> atau <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Gantikan nama lajur \"CustomerNum\" dengan \"CustomerID\" dalam jadual.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Gantikan nama lajur \"CustomerNum\" dengan \"CustomerID\" dan \"PhoneNum\" dengan \"Phone\" dalam jadual.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Gantikan nama lajur \"NewCol\" dengan \"NewColumn\" dalam jadual dan abaikan jika lajur itu tidak wujud.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "Mengembalikan jadual dengan lajur dalam tertib yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan lajur daripada input <code>table</code>, dengan lajur dalam tertib yang ditentukan oleh <code>columnOrder</code>. Lajur yang tidak ditentukan dalam senarai tidak akan disusun semula.\r\n     Jika lajur tidak wujud, pengecualian dikembalikan melainkan parameter pilihan <code>missingField</code> menentukan alternatif (cth. <code>MissingField.UseNull</code> atau <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Tukar tertib lajur [Phone] dan [Name] dalam jadual.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Tukar tertib lajur [Phone] dan [Address] atau gunakan \"MissingField.Ignore\" dalam jadual. Ia tidak mengubah jadual kerana lajur [Address] tidak wujud.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "Mengulangi baris jadual untuk bilangan kali yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual dengan baris daripada input <code>table</code> diulangi bilangan kali <code>count</code> yang ditentukan.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Ulang baris dalam jadual dua kali.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "Gantikan nilai ralat dalam lajur yang ditentukan dengan nilai ditentukan yang berkaitan.",
        "Documentation.LongDescription": "Gantikan nilai ralat dalam lajur yang ditentukan daripada <code>table</code> dengan nilai baharu dalam senarai <code>errorReplacement</code>. Format senarai ialah {{column1, value1}, …}. Mungkin hanya terdapat satu nilai gantian setiap lajur, tentukan lajur lebih daripada sekali akan menyebabkan ralat.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gantikan nilai ralat dengan teks \"world\" dalam jadual.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "Gantikan nilai ralat dalam lajur A dengan teks \"hello\" dan dalam lajur B dengan teks \"world\" dalam jadual.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "Menggantikan kunci bagi jadual yang ditentukan.",
        "Documentation.LongDescription": "Menggantikan kunci bagi jadual yang ditentukan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gantikan kunci jadual yang sedia ada.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "Menggantikan semua baris yang ditentukan dengan baris yang diberi.",
        "Documentation.LongDescription": "Menggantikan semua baris yang ditentukan dalam <code>table</code> dengan yang diberi. Baris untuk digantikan dan penggantian ditentukan dalam <code>replacements</code>, menggunakan pemformatan {old, new}.\r\n    Parameter pilihan <code>equationCriteria</code>, mungkin ditentukan untuk mengawal perbandingan antara baris pada jadual.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Gantikan baris [a = 1, b = 2] dan [a = 2, b = 3] dengan [a = -1, b = -2],[a = -2, b = -3] dalam jadual.",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "Mengembalikan jadual dengan lajur yang ditentukan sahaja.",
        "Documentation.LongDescription": "Mengembalikan <code>table</code> dengan <code>columns</code> yang ditentukan sahaja.\r\n    <ul>\r\n       <li><code>table</code>: Jadual yang diberikan.</li>\r\n       <li><code>columns</code>: Senarai lajur daripada jadual <code>table</code> untuk dikembalikan. Lajur dalam jadual yang dikembalikan adalah dalam tertib yang disenaraikan dalam <code>columns</code>.</li>\r\n       <li><code>missingField</code>: <i>(Pilihan)</i> Apa yang perlu dilakukan jika lajur tidak wujud.  Contoh: <code>MissingField.UseNull</code> atau <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Hanya termasuk lajur [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "Hanya termasuk lajur [CustomerID] dan [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Jika lajur yang disertakan tidak wujud, hasil lalai adalah ralat.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "Jika lajur yang disertakan tidak wujud, opsyen <code>MissingField.UseNull</code> mencipta lajur nilai nol.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "Pilih baris yang memenuhi fungsi syarat.",
        "Documentation.LongDescription": "Mengembalikan jadual baris daripada <code>table</code>, yang sepadan dengan pilihan <code>condition</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Pilih baris dalam jadual yang nilainya dalam lajur [CustomerID] lebih besar daripada 2.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Pilih lajur dalam jadual yang namanya tidak mengandungi \"B\".",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "Isih jadual menggunakan satu atau lebih nama lajur dan kriteria perbandingan.",
        "Documentation.LongDescription": "Isih <code>table</code> menggunakan senarai satu atau lebih nama lajur dan <code>comparisonCriteria</code> pilihan dalam bentuk { { col1, comparisonCriteria }, {col2} }.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Isihkan jadual pada lajur \"OrderID\".",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "Isihkan jadual pada lajur \"OrderID\" dalam tertib menurun.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "Isihkan jadual pada lajur \"CustomerID\" dan kemudian \"OrderID\" dengan \"CustomerID\" berada dalam tertib menurun.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "Transformasi nama lajur dengan menggunakan fungsi yang ditentukan.",
        "Documentation.LongDescription": "Mengubah nama lajur menggunakan fungsi <code>nameGenerator</code> yang ditentukan. Opsyen yang sah:\r\n    <div>\r\n      <code>MaxLength</code> menentukan panjang maksimum nama lajur yang baharu. Jika fungsi yang ditentukan menghasilkan nama lajur yang lebih panjang, nama yang panjang akan dipangkas.\r\n    </div>\r\n    <div>\r\n      <code>Comparer</code> digunakan untuk mengawal perbandingan semasa menjana nama lajur yang baharu. Pembanding boleh digunakan untuk memberikan perbandingan tidak sensitif huruf atau perbandingan sedar budaya dan tempatan.\r\n    </div>\r\n    <div>\r\n      Pembanding terbina dalam berikut tersedia dalam bahasa formula:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: Digunakan untuk melaksanakan perbandingan ordinal yang tepat</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: Digunakan untuk melaksanakan perbandingan tidak sensitif huruf ordinal yang tepat</li>\r\n      <li> <code>Comparer.FromCulture</code>: Digunakan untuk melaksanakan perbandingan sedar budaya</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar aksara <code>#(tab)</code> daripada nama lajur",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "Mengubah nama lajur untuk menjana nama yang tidak peka huruf dengan panjang 6.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "Menggunakan transformasi jenis bagi bentuk { column, type } menggunakan budaya khusus.",
        "Documentation.LongDescription": "Mengembalikan jadual daripada input <code>table</code> dengan menggunakan operasi ubah kepada lajur yang ditentukan dalam parameter <code>typeTransformations</code> (yang mana format ialah { column name, type name}), menggunakan budaya yang ditentukan dalam parameter pilihan <code>culture</code> (contohnya, \"en-US\").\r\n    Jika lajur tidak wujud, pengecualian dibuang.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "transformasikan nilai nombor dalam lajur [a] kepada nilai teks daripada jadual  <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "Mengubah nilai satu atau lebih lajur.",
        "Documentation.LongDescription": "Ubah <code>table</code> dengan menggunakan setiap operasi lajur yang disenaraikan dalam <code>transformOperations</code> (dengan format { column name, transformation } atau { column name, transformation, new column type }).\r\n    Jika <code>defaultTransformation</code> ditentukan, ia akan digunakan pada semua lajur yang tidak disenaraikan dalam <code>transformOperations</code>.\r\n    Jika lajur disenaraikan dalam <code>transformOperations</code> tidak wujud, pengecualian dikembalikan melainkan parameter pilihan <code>missingField</code> menentukan alternatif (contohnya, <code>MissingField.UseNull</code> atau <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Tukar nilai teks dalam lajur [A] kepada nilai nombor, dan nilai nombor dalam lajur [B] kepada nilai teks.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "Tukar nilai nombor dalam lajur yang tidak ditemui [X] kepada nilai teks, mengabaikan lajur yang tidak wujud.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "Tukar nilai nombor dalam lajur yang tidak ditemui [X[ kepada nilai teks, lalaikan kepada nol pada lajur yang tidak wujud.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "Tokokan nilai nombor dalam lajur [B] dan tukarkannya kepada nilai teks, dan tukar semua lajur lain kepada nombor.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "Cipta atau lanjutkan jadual dengan pengendali mesra pengguna bagi pertanyaan dan operasi aksi.",
        "Documentation.LongDescription": "<p>Mengembalikan paparan <code>table</code> yang mana fungsi ditentukan dalam <code>handlers</code> digunakan sebagai ganti bagi tingkah laku lalai pengendalian apabila pengendalian digunakan pada pandangan.</p>\r\n<p>Jika <code>table</code> diberikan, semua fungsi pengendali adalah pilihan. Jika <code>table</code> tidak diberikan, fungsi pengendali <code>GetType</code> dan <code>GetRows</code> diperlukan. Sebaliknya, jika fungsi pengendali tidak ditentukan untuk pengendalian, tingkah laku lalai bagi pengendalian digunakan pada <code>table</code> (kecuali jika <code>GetExpression</code>).</p>\r\n<p>Fungsi pengendali mestilah mengembalikan nilai yang setara secara semantik dengan hasil yang menggunakan pengendalian terhadap <code>table</code> (atau pandangan yang terhasil dalam kes <code>GetExpression</code>).</p>\r\n<p>Jika fungsi pengendali meningkatkan ralat, tingkah laku lalai pengendalian digunakan pada pandangan.</p>\r\n<p><code>Table.View</code> boleh digunakan untuk melaksanakan penugasan kepada sumber data – terjemahan pertanyaan M ke dalam pertanyaan khusus sumber (sebagai contoh, untuk mencipta pernyataan T-SQL daripada pertanyaan M).</p>\r\n<p>Rujuk dokumentasi penyambung tersuai Power Query yang diterbitkan untuk penerangan yang lebih lengkap bagi <code>Table.View</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Cipta pandangan asas yang tidak memerlukan capaian baris untuk menentukan jenis atau kiraan baris.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Masukkan nama organisasi dan projek.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps (Papan sahaja)",
        "Documentation.LongDescription": "Mengembalikan jadual bagi pandangan Analitis yang ditawarkan oleh Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Import data daripada Vertica",
        "Documentation.LongDescription": "Mengembalikan jadual skema yang tersedia pada pelayan yang dinamakan oleh parameter <code>pelayan</code> dalam pangkalan data yang dinamakan oleh parameter <code>pangkalan data</code>.\r\nParameter rekod pilihan, <code>opsyen</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n<ul>\r\n    <li><code>ConnectionTimeout</code>: Tempoh yang mengawal jangka masa menunggu sebelum meninggalkan percubaan untuk membuat sambungan dengan pelayan. Nilai lalai bergantung pada pemacu.</li>\r\n    <li><code>CommandTimeout </code>: Tempoh yang mengawal jangka masa pertanyaan pihak pelayan dibenarkan untuk dijalankan sebelum dibatalkan. Nilai lalai bergantung pada pemacu.</li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "Senaraikan jadual dalam Vertica"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "Mengembalikan jadual dengan kandungan laporan daripada Webtrends.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "Membuat panggilan ke titik tamat pelaporan Webtrends yang ditetapkan dan mengembalikan semua data sebagai jadual.",
        "Documentation.Examples": [
          {
            "Description": "Membuat panggilan ke titik tamat laporan pelawat Webtrends untuk data dalam 30 hari yang lalu",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "Jadual data pelawat"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "Mengembalikan senarai domain Direktori Aktif dalam hutan yang sama seperti domain yang ditentukan atau dari domain mesin semasa jika tiada ditentukan.",
        "Documentation.LongDescription": "Mengembalikan senarai domain Direktori Aktif dalam hutan yang sama seperti domain yang ditentukan atau dari domain mesin semasa jika tiada ditentukan.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "Mengembalikan hasil menjalankan pertanyaan asli pada sumber data ADO.NET.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menjalankan <code>query</code> dengan rentetan sambungan <code>connectionString</code> menggunakan penyedia ADO.NET <code>providerName</code>. <code>connectionString</code> boleh dalam bentuk teks atau rekod pasangan nilai sifat. Nilai sifat boleh dalam bentuk teks atau nombor. Parameter rekod pilihan, <code>options</code>, boleh disediakan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan yang berikut:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Tempoh yang mengawal berapa lama pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan. Nilai lalai ialah sepuluh minit.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Logik (benar/palsu) yang menentukan sama ada untuk menghasilkan pilihan rentetan sambungan yang serasi dengan SQL Server untuk pengesahan Windows. Nilai lalai ialah benar.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "Mengembalikan suite laporan dalam Adobe Analytics.",
        "Documentation.LongDescription": "Mengembalikan jadual pakej berbilang dimensi daripada Adobe Analytics. Parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : Logik (true/false) yang menetapkan sama ada untuk melihat jadual yang dikumpulkan mengikut nama skema (lalai adalah false).</li>\r\n<li><code>MaxRetryCount</code> : Bilangan cubaan semula untuk dilakukan apabila meninjau hasil pertanyaan. Nilai lalai ialah 120.</li>\r\n<li><code>RetryInterval</code> : Tempoh antara percubaan semula. Nilai lalai ialah 1 saat.</li>\r\n<li><code>Implementation</code> : Menentukan versi API Adobe Analytics. Nilai yang sah ialah: &quot;2.0&quot;. Lalai menggunakan API versi 1.4.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Hive LLAP",
        "Documentation.Caption": null,
        "Documentation.Description": "Import data daripada Hive LLAP",
        "Documentation.LongDescription": "\r\nMengembalikan senarai jadual daripada Hive LLAP yang ditentukan oleh <code>pangkalan data</code> pada <code>pelayan</code> Hive LLAP menggunakan <code>protokol</code> yang dipilih. Nombor port mungkin ditentukan secara pilihan dengan pelayan, dipisahkan oleh noktah bertindih. Protokol Thrift Transport ialah jenis yang boleh dikira semula dengan nilai \"Standard\", \"HTTP\". Parameter <code>pilihan</code> boleh ditentukan untuk mengawal pilihan yang berikut:\r\n<ul>\r\n        <li><code>Tamat Masa Sambungan</code>: Tempoh yang mengawal jumlah masa yang diambil untuk menunggu sebelum meninggalkan percubaan membuat sambungan kepada pelayan. Nilai lalai ialah bergantung pada pemacu.</li>\r\n        <li><code>Tamat Masa Perintah</code>: Tempoh yang mengawal jumlah masa pertanyaan sebelah pelayan dibenarkan berjalan sebelum dibatalkan. Nilai lalai bergantung pada pemacu.</li>\r\n</ul>\r\nParameter <code>pilihan</code> ditentukan sebagai [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan data ringkasan antara 2017-5-1 hingga 2017-6-15",
            "Code": "biarkan\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      dalam\r\n          keputusan",
            "Result": "Fungsi akan mengembalikan data antara 2017-5-1 hingga 2017-6-15"
          },
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan data ringkasan untuk April 2017.",
            "Code": "biarkan\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      dalam\r\n          keputusan",
            "Result": "Fungsi akan mengembalikan data antara 2017-4-1 dan 2017-4-30"
          },
          {
            "Description": "Katakan hari ini ialah 2017-6-15, dapatkan data ringkasan dari April 2017 hingga sekarang.",
            "Code": "biarkan\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      dalam\r\n          keputusan",
            "Result": "Fungsi akan mengembalikan data antara 2017-4-1 dan 2017-6-15"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "Masukkan nama organisasi dan projek.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Mengembalikan jadual suapan OData yang ditawarkan oleh Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "Sambungkan kepada tika Dataverse (Dynamics 365 dan PowerApps) anda."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "Menggabungkan jadual dimensi yang ditentukan ke dalam konteks penapis kiub dan mengubah kebutiran dimensi bagi konteks penapis dengan mengembangkan set atribut dimensi yang ditentukan.",
        "Documentation.LongDescription": "Menggabungkan jadual dimensi yang ditentukan, <code>dimensionSelector</code>, ke dalam konteks penapis kiub, <code>cube</code>, dan mengubah kebutiran dimensi dengan mengembangkan set, <code>attributeNames</code>, atribut dimensi yang ditentukan. Atribut dimensi ditambah pada pandangan jadual dengan lajur bernama <code>newColumnNames</code> atau <code>attributeNames</code> jika tidak ditentukan.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "Menambah lajur pada kiub yang mengandungi hasil bagi ukuran yang digunakan dalam konteks baris pada setiap baris.",
        "Documentation.LongDescription": "Menambah lajur dengan nama <code>column</code> pada <code>cube</code> yang mengandungi hasil bagi ukuran <code>measureSelector</code> yang digunakan dalam konteks baris pada setiap baris. Aplikasi ukuran dipengaruhi oleh perubahan pada kebutiran dan hirisan dimensi. Nilai ukuran akan dilaraskan selepas operasi kiub tertentu dilaksanakan.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 untuk Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "Masukkan persekitaran dan syarikat Pusat Perniagaan Dynamics 365 anda.",
        "Documentation.DisplayName": "Pusat Perniagaan Dynamics 365",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Pusat Perniagaan Dynamics 365",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Pusat Perniagaan Dynamics 365 yang berkaitan. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "Masukkan persekitaran dan syarikat Pusat Perniagaan Dynamics 365 anda.",
        "Documentation.DisplayName": "Pusat Perniagaan Dynamics 365",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Pusat Perniagaan Dynamics 365",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Pusat Perniagaan Dynamics 365 yang berkaitan. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "Masukkan persekitaran dan syarikat Pusat Perniagaan Dynamics 365 anda.",
        "Documentation.DisplayName": "Pusat Perniagaan Dynamics 365",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Pusat Perniagaan Dynamics 365",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Pusat Perniagaan Dynamics 365 yang berkaitan. "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "Masukkan persekitaran dan syarikat Pusat Perniagaan Dynamics 365 anda.",
        "Documentation.DisplayName": "Pusat Perniagaan Dynamics 365",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Pusat Perniagaan Dynamics 365",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data Pusat Perniagaan Dynamics 365 yang berkaitan. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "Mengembalikan kandungan buku kerja Excel semasa.",
        "Documentation.LongDescription": "Mengembalikan kandungan buku kerja Excel semasa. Ia mengembalikan jadual, julat bernama dan tatasusunan dinamik. Tidak suka <code>Excel.Workbook</code>, ia tidak mengembalikan helaian.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Mengembalikan jadual kandungan daripada akaun Microsoft Exchange.",
        "Documentation.LongDescription": "Mengembalikan jadual kandungan daripada akaun Microsoft Exchange <code>mailboxAddress</code>. Jika <code>mailboxAddress</code> tidak ditentukan, akaun lalai bagi kelayakan akan digunakan.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Gudang",
        "Documentation.Caption": "Gudang",
        "Documentation.Description": "Mengimport data daripada Gudang",
        "Documentation.LongDescription": "Mengimport data daripada Gudang"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Kembalikan akaun Google Analytics.",
        "Documentation.LongDescription": "Kembalikan akaun Google Analytics yang boleh dicapai dari kelayakan semasa.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Import data daripada pangkalan data Google BigQuery.",
        "Documentation.LongDescription": "\r\n      Mengembalikan jadual yang menyenaraikan projek yang tersedia dalam Google BigQuery. Parameter rekod pilihan, <code>pilihan</code>, boleh ditentukan untuk mengawal pilihan berikut:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Tempoh yang mengawal masa menunggu sebelum meninggalkan percubaan mewujudkan sambungan kepada pelayan. Nilai lalai ialah nilai Tamat Masa Sambungan ODBC.</li>\r\n        <li><code>CommandTimeout</code>: Tempoh yang mengawal jangka masa pertanyaan bahagian pelayan dibenarkan berjalan sebelum ia dibatalkan.</li>\r\n        <li><code>BillingProject</code>: Id projek pengebilan. Nilai lalai ialah projek pertama yang tersedia.</li>\r\n        <li><code>UseStorageApi</code>: Menentukan sama ada mahu menggunakan BigQuery Storan API untuk set hasil yang besar. Nilai lalai adalah benar untuk menggunakan Storan API. Tetapkan kepada palsu untuk tidak menggunakan Storan API</li>\r\n      </ul>\r\n    Parameter rekod ditentukan sebagai [option1 = value1, option2 = value2...].\r\n",
        "Documentation.Examples": [
          {
            "Description": "Senaraikan projek yang tersedia dalam Google BigQuery",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Lakehouse",
        "Documentation.Caption": "Import data daripada Lakehouse",
        "Documentation.Description": "Import data daripada Lakehouse",
        "Documentation.LongDescription": "Sambungkan ke semua Lakehouse yang anda boleh capai, dan pilih entiti yang anda ingin gunakan"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "Mengembalikan jadual dengan data MailChimp utama.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "Mengembalikan jadual dengan data MailChimp utama.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual dengan data MailChimp utama.",
            "Code": "MailChimp.Tables()",
            "Result": "Jadual dengan data MailChimp utama."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "Mengembalikan jadual dengan aktiviti berita utama.",
        "Documentation.LongDescription": "Buat panggilan kepada titik akhir Marketo REST API di <code>url</code>/rest/v1/activities.json. Semua aktiviti dalam senarai <code>activityIds</code> yang telah berlaku sejak <code>startTime</code> telah dikembalikan.",
        "Documentation.Examples": [
          {
            "Description": "Menarikkan jadual aktiviti \"Lawati Halaman Web\" sejak 1 November 2015",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "Jadual dengan semua aktiviti \"Lawati Halaman Web\" sejak 1 November"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"pilih * daripada PV_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Aliran data Power BI (Legasi)",
        "Documentation.Caption": "Import data dari aliran data Power BI",
        "Documentation.LongDescription": "Sambungkan ke semua aliran data Power BI yang anda akses kepada, dan pilih entiti yang ingin anda gunakan."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Datamart",
        "Documentation.Caption": "Datamart",
        "Documentation.Description": "Import data daripada Datamarts",
        "Documentation.LongDescription": "Import data daripada Datamarts"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "Aliran data",
        "Documentation.Caption": "Import data daripada aliran data",
        "Documentation.Description": "Import data daripada aliran data",
        "Documentation.LongDescription": "Sambungkan ke semua aliran data yang anda boleh capai, dan pilih entiti yang anda ingin gunakan"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "Import data daripada QuickBooks Online.",
        "Documentation.LongDescription": "\r\n        Mengembalikan jadual yang menyenaraikan jadual yang tersedia dalam QuickBooks Online. Parameter rekod pilihan, <code>opsyen</code>, boleh ditentukan untuk mengawal opsyen berikut: \r\n          <ul>\r\n            <li><code>ConnectionTimeout</code>:Tempoh yang mengawal masa menunggu sebelum meninggalkan percubaan untuk membuat sambungan ke pelayan. </li>\r\n            <li><code>CommandTimeout</code>: Tempoh yang mengawal masa pertanyaan sebelah pelayan dibenarkan berjalan sebelum dibatalkan. </li>\r\n          </ul>\r\n        Parameter rekod ditentukan sebagai [option1 = value1, option2 = value2...].\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "Kembalikan objek daripada akaun Salesforce.",
        "Documentation.LongDescription": "Mengembalikan objek pada akaun Salesforce yang diberikan dalam kelayakan. Akaun akan disambungkan melalui persekitaran yang diberikan <code>loginUrl</code>. Jika tiada persekitaran diberikan, maka akaun akan disambungkan kepada pengeluaran (https://login.salesforce.com). Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Logik (true/false) yang menetapkan sama ada hendak menjana sifat navigasi pada nilai yang dikembalikan (lalai adalah false).</li>\r\n<li><code>ApiVersion</code> : Versi API Salesforce untuk digunakan bagi pertanyaan ini. Apabila tidak ditentukan, versi API 29.0 digunakan.</li>\r\n<li><code>Timeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan permintaan kepada pelayan. Nilai lalai adalah khusus sumber.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "Kembalikan laporan daripada akaun Salesforce.",
        "Documentation.LongDescription": "Mengembalikan laporan pada akaun Salesforce yang diberikan dalam kelayakan. Akaun akan disambungkan melalui persekitaran yang diberikan <code>loginUrl</code>. Jika tiada persekitaran diberikan, maka akaun akan disambungkan kepada pengeluaran (https://login.salesforce.com). Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Versi API Salesforce untuk digunakan bagi pertanyaan ini. Apabila tidak ditentukan, versi API 29.0 digunakan.</li>\r\n<li><code>Timeout</code> : Tempoh yang mengawal berapa lama perlu menunggu sebelum menghentikan permintaan kepada pelayan. Nilai lalai adalah khusus sumber.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "Mengembalikan InfoCube dan pertanyaan dalam sistem SAP Business Warehouse yang dikumpulkan mengikut InfoArea.",
        "Documentation.LongDescription": "Mengembalikan jadual InfoCube dan pertanyaan yang dikumpulkan mengikut InfoArea daripada tika SAP Business Warehouse di pelayan <code>server</code> dengan nombor sistem <code>systemNumberOrSystemId</code> dan ID Pelanggan <code>clientId</code>. Parameter rekod pilihan, <code>optionsOrLogonGroup</code>, boleh ditentukan untuk mengawal opsyen berikut:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Mengembalikan jadual helaian, laporan, folder dan ruang kerja daripada API Smartsheet",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Mengembalikan jadual bersarang bagi helaian, laporan, folder dan ruang kerja yang tersedia daripada API Smartsheet.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan helaian, folder, laporan dan ruang kerja yang tersedia di aras atas hierarki Smartsheet",
            "Code": "Smartsheet.Tables()",
            "Result": "Jadual folder, laporan dan ruang kerja dari aras atas hierarki Smartsheet"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "Mengembalikan jadual metrik yang tersedia daripada API SparkPost v1",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "Fungsi ini boleh digunakan untuk mengambil data daripada titik akhir \"Metrik\" yang tertentu bagi SparkPost API v1. Apabila menyegarkan semula jadual ini atau membuat panggilan ke SparkPost API menggunakan penyambung ini, ingat bahawa SparkPost API mempunyai had kadar API yang ketat. Jika anda melihat kod status 429 dikembalikan daripada pelayan SparkPost, anda telah mencecah had kadar dan perlu menunggu sebentar sebelum membuat panggilan selanjutnya. Apabila memilih nilai untuk parameter Bilangan hari, ambil perhatian bahawa API hanya menyimpan data bernilai 6 bulan.",
        "Documentation.Examples": [
          {
            "Description": "Mengambil metrik kebolehhantaran count_sent dan count_rejected untuk semua campaign_ids yang diagregatkan selama tiga hari yang terakhir. ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "jadual"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "Buat panggilan ke API Stripe.",
        "Documentation.LongDescription": "Membuat panggilan ke API Stripe di https://api.stripe.com/v1/<code>method</code>, dengan rekod <code>additionalParameters</code> yang dihantar sebagai parameter tambahan dan senarai <code>ColumnNames</code> nama jalur yang dijangka. Versi Stripe 2015-10-16 digunakan.",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual dengan acara yang dicipta selepas 1 November 2015",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "Jadual dengan acara yang ditentukan bagi akaun Stripe semasa"
          },
          {
            "Description": "Mengembalikan jadual dengan semua SKU",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "Jadual dengan semua SKU bagi akaun Stripe semasa"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "Mengembalikan jadual yang menyenaraikan jadual dan fungsi Stripe yang tersedia.",
        "Documentation.LongDescription": "Mengembalikan jadual yang menyenaraikan jadual dan fungsi Stripe yang tersedia."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Ruang kerja Azure Synapse Analytics",
        "Documentation.Caption": "Ruang kerja Azure Synapse Analytics",
        "Documentation.LongDescription": "Penyambung PQ untuk ruang kerja Azure Synapse Analytics",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "Menambah lajur dengan nama ditetapkan. Nilai dikira menggunakan fungsi pilihan yang ditentukan dengan setiap baris diambil sebagai input.",
        "Documentation.LongDescription": "Menambah lajur bernama <code>newColumnName</code> pada jadual <code>table</code>. Nilai untuk lajur dikira menggunakan fungsi pilihan yang ditentukan <code>columnGenerator</code> dengan setiap baris diambil sebagai input.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Tambahkan lajur nombor yang bernama \"TotalPrice\" pada jadual dengan setiap nilai merupakan jumlah bagi lajur [Price] dan lajur [Shipping].",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "Menambahkan lajur baru dengan nilai wakil yang diperoleh oleh nilai perkumpulan kabur bagi lajur yang ditentukan dalam jadual.",
        "Documentation.LongDescription": "Menambahkan lajur baru <code>newColumnName</code> pada <code>table</code> dengan nilai wakil bagi <code>columnName</code>. Wakil diperoleh dengan nilai yang sepadan secara kabur dalam <code>columnName</code>, untuk setiap baris.\r\n    <p>Set pilihan <code>options</code> boleh disertakan untuk menentukan cara membandingkan lajur utama. Opsyen termasuk:\r\n    <ul>\r\n<li><code>Culture</code> : Membenarkan rekod perkumpulan berdasarkan peraturan khusus budaya. Ia boleh menjadi nama budaya yang sah. Contohnya, opsyen Budaya bagi rekod kumpulan &quot;ja-JP&quot; yang berasaskan budaya Jepun. Nilai lalai ialah &quot;&quot;, yang kumpulannya berdasarkan budaya Inggeris Tak Berubah.</li>\r\n<li><code>IgnoreCase</code> : Nilai logik (benar/palsu) yang membenarkan perkumpulan kunci tidak sensitif huruf. Contohnya, apabila benar, &quot;Anggur&quot; dikumpulkan dengan &quot;anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>IgnoreSpace</code> : Nilai logik (benar/palsu) yang membenarkan gabungan bahagian teks untuk mencari kumpulan. Contohnya, apabila benar, &quot;Ang gur&quot; dikumpulkan dengan &quot;Anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>SimilarityColumnName</code> : Nama untuk lajur yang menunjukkan keserupaan antara nilai input dan nilai wakil bagi input tersebut. Nilai lalai ialah nol, dalam kes ini, lajur baru untuk keserupaan tidak akan ditambahkan.</li>\r\n<li><code>Threshold</code> : Nombor antara 0.00 hingga 1.00 yang menentukan skor keserupaan yang mana dua nilai akan dikumpulkan.\r\n    Sebagai contoh, &quot;Grapes&quot; dan &quot;Graes&quot; (hilang &quot;p&quot;) dikumpulkan bersama-sama hanya jika pilihan ini ditetapkan kepada kurang daripada 0.90.\r\n    Ambang 1.00 hanya membenarkan padanan tepat.\r\n    (Ambil perhatian bahawa &quot;padanan tepat&quot; kabur mungkin mengabaikan perbezaan seperti sarung, tertib perkataan, dan tanda baca.)\r\n    Nilai lalai ialah 0.80.</li>\r\n<li><code>TransformationTable</code> : Jadual yang membenarkan rekod perkumpulan berdasarkan pemetaan nilai tersuai. Ia harus mengandungi lajur &quot;Daripada&quot; dan &quot;Kepada&quot;. Contohnya, &quot;Anggur&quot; dikumpulkan dengan &quot;Kismis&quot; jika jadual transformasi diberikan dengan lajur &quot;Daripada&quot; yang mengandungi &quot;Anggur&quot; dan lajur &quot;Kepada&quot; yang mengandungi &quot;Kismis&quot;. Perhatikan bahawa transformasi akan digunakan pada semua kejadian teks dalam jadual transformasi. Dengan jadual transformasi di atas, &quot;Anggur itu manis&quot; juga akan dikumpulkan dengan &quot;Kismis itu manis&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai wakil untuk lokasi pekerja.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "Menjalankan sambungan antara jadual pada lajur yang dibekalkan dan menghasilkan hasil sambungan dalam lajur baru.",
        "Documentation.LongDescription": "Sambungkan baris <code>table1</code> dengan baris <code>table2</code> berdasarkan kualiti nilai bagi lajur kunci yang dipilih oleh <code>key1</code> (untuk <code>table1</code>) dan <code>key2</code> (untuk <code>table2</code>). Hasil dimasukkan ke dalam lajur bernama <code>newColumnName</code>.\r\nFungsi ini berkelakuan serupa dengan Table.Join dengan JoinKind bagi LeftOuter kecuali hasil sambungan dipersembahkan dalam cara tersarang berbanding diratakan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Tambah lajur sambungan pada ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) bernama \"price/stock\" daripada jadual ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) joined on [saleID].",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "Menambah kunci pada jadual.",
        "Documentation.LongDescription": "Tambah kunci pada <code>table</code>, apabila <code>columns</code> ialah senarai nama lajur yang mentakrifkan kunci, dan <code>isPrimary</code> menentukan sama ada kunci adalah primer.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Tambah kunci utama lajur tunggal pada jadual.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "Menambah lajur dengan kedudukan satu atau lebih lajur lain.",
        "Documentation.LongDescription": "Menambah lajur bernama <code>newColumnName</code> pada <code>table</code> dengan penarafan satu atau lebih lajur lain yang diterangkan oleh <code>comparisonCriteria</code>.\r\nOpsyen RankKind dalam <code>options</code> boleh digunakan oleh pengguna lanjutan untuk memilih kaedah penarafan yang lebih khusus.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Tambah lajur bernama \"RevenueRank\" pada jadual yang menarafkan lajur \"Hasil\" daripada yang tertinggi kepada terendah.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "Mengagregat lajur pada jadual kepada berbilang lajur dalam jadual yang mengandunginya.",
        "Documentation.LongDescription": "Mengagregat jadual dalam <code>table</code>[<code>column</code>] kepada berbilang lajur yang mengandungi nilai agregat untuk jadual. <code>aggregations</code> digunakan untuk menentukan lajur yang mengandungi jadual untuk diagregatkan, fungsi pengagregatan untuk digunakan pada jadual bagi menjana nilainya dan nama bagi lajur agregat untuk dicipta.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lajur jadual agregat dalam <code>[t]</code> dalam jadual <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> kepada jumlah <code>[t.a]</code>, min dan maks bagi <code>[t.b]</code> dan kiraan nilai dalam <code>[t.a]</code>.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "Menyimpan ofset asal kemudian melakukan pengambilan dan langkauan baris berikutnya secara selang seli.",
        "Documentation.LongDescription": "Menyimpan ofset asal kemudian melakukan pengambilan dan langkauan baris berikutnya secara selang seli.\r\n    <ul>\r\n       <li><code>table</code>: Jadual input.</li>\r\n       <li><code>offset</code>: Bilangan baris untuk dikekalkan sebelum memulakan lelaran.</li>\r\n       <li><code>skip</code>: Bilangan baris untuk dialih keluar dalam setiap lelaran.</li>\r\n       <li><code>take</code>: Bilangan baris untuk dikekalkan dalam setiap lelaran.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan jadual daripada jadual yang bermula pada baris pertama, melangkau 1 nilai dan kemudian mengekalkan 1 nilai.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "Menggabungkan lajur yang ditentukan menjadi lajur baru menggunakan fungsi bekas yang ditentukan.",
        "Documentation.LongDescription": "Menggabungkan lajur yang ditentukan menjadi lajur baru menggunakan fungsi bekas yang ditentukan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan nama terakhir dan pertama ke dalam lajur baharu, dipisahkan oleh koma.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "Menggabungkan lajur yang ditentukan menjadi lajur yang bernilai rekod baru di mana setiap rekod mempunyai nama dan nilai medan yang sepadan dengan nama lajur dan nilai lajur yang telah digabungkan.",
        "Documentation.LongDescription": "Menggabungkan lajur <code>table</code> yang ditentukan menjadi lajur yang bernilai rekod baru bernama <code>newColumnName</code> di mana setiap rekod mempunyai nama dan nilai medan yang sepadan dengan nama lajur dan nilai lajur yang telah digabungkan. Jika rekod ditentukan untuk <code>options</code>, pilihan yang berikut mungkin disediakan:\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: Apabila ditentukan sebagai teks, menunjukkan bahawa nama lajur yang diberikan perlu dianggap sebagai nama paparan rekod. Ini tidak perlu menjadi salah satu lajur dalam rekod itu sendiri.</li>\r\n     <li> <code>TypeName</code>: Apabila ditentukan sebagai teks, membekalkan nama jenis logik untuk rekod yang dihasilkan dan ia boleh digunakan semasa pemuatan data bagi memacu tingkah laku oleh persekitaran pemuatan.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "Memperduakan lajur dengan nama ditetapkan. Nilai dan jenis disalin daripada lajur sumber.",
        "Documentation.LongDescription": "Memperduakan lajur bernama <code>columnName</code> pada jadual <code>table</code>. Nilai dan taip untuk lajur <code>newColumnName</code> disalin daripada lajur <code>columnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Perduakan lajur \"a\" kepada lajur bernama \"copied column\" dalam jadual <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "Mengembangkan lajur rekod menjadi lajur dengan setiap nilai.",
        "Documentation.LongDescription": "Diberi <code>column</code> rekod dalam input <code>table</code>, mencipta jadual dengan lajur untuk setiap medan dalam rekod. Secara pilihan, <code>newColumnNames</code> mungkin ditentukan untuk memastikan nama unik untuk lajur dalam jadual baru.\r\n    <ul>\r\n        <li><code>table</code>: Jadual asal dengan lajur rekod untuk dikembangkan. </li>\r\n        <li><code>column</code>: Lajur untuk dikembangkan.</li>\r\n        <li><code>fieldNames</code>: Senarai medan untuk dikembangkan menjadi lajur dalam jadual.</li>\r\n        <li><code>newColumnNames</code>: Senarai nama lajur untuk diberi pada lajur baru. Nama lajur baru tidak boleh menjadi pendua sebarang lajur dalam jadual baru.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kembangkan lajur [a] dalam jadual <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> menjadi 3 lajur \"aa\", \"bb\" dan \"cc\".",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "Mengembangkan lajur rekod atau lajur pada jadual kepada berbilang lajur dalam jadual yang mengandunginya.",
        "Documentation.LongDescription": "Mengembangkan jadual dalam <code>table</code>[<code>column</code>] kepada berbilang baris dan lajur. <code>columnNames</code> digunakan untuk memilih lajur untuk dikembangkan daripada jadual dalaman. Tentukan <code>newColumnNames</code> untuk mengelakkan konflik antara lajur sedia ada dan lajur baru.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kembangkan lajur jadual dalam <code>[a]</code> dalam jadual <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> kepada 3 lajur <code>[t.a]</code>, <code>[t.b]</code> dan <code>[t.c]</code>.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "Mengumpulkan baris dalam jadual berdasarkan padanan kabur kunci.",
        "Documentation.LongDescription": "Mengumpulkan baris <code>table</code> dengan nilai pemadanan secara kabur dalam lajur tertentu, <code>key</code>, untuk setiap baris.\r\n    Untuk setiap kumpulan, rekod dibina yang mengandungi lajur utama (dan nilainya) berserta dengan sebarang lajur teragregat yang ditentukan oleh <code>aggregatedColumns</code>.\r\n    Fungsi ini tidak boleh menjamin untuk mengembalikan tertib baris yang tetap.\r\n    <p>Set pilihan <code>options</code> mungkin disertakan untuk menentukan cara untuk membandingkan lajur utama. Opsyen termasuk:\r\n    <ul>\r\n<li><code>Culture</code> : Membenarkan rekod perkumpulan berdasarkan peraturan khusus budaya. Ia boleh menjadi nama budaya yang sah. Contohnya, opsyen Budaya bagi rekod kumpulan &quot;ja-JP&quot; yang berasaskan budaya Jepun. Nilai lalai ialah &quot;&quot;, yang kumpulannya berdasarkan budaya Inggeris Tak Berubah.</li>\r\n<li><code>IgnoreCase</code> : Nilai logik (benar/palsu) yang membenarkan perkumpulan kunci tidak sensitif huruf. Contohnya, apabila benar, &quot;Anggur&quot; dikumpulkan dengan &quot;anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>IgnoreSpace</code> : Nilai logik (benar/palsu) yang membenarkan gabungan bahagian teks untuk mencari kumpulan. Contohnya, apabila benar, &quot;Ang gur&quot; dikumpulkan dengan &quot;Anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>SimilarityColumnName</code> : Nama untuk lajur yang menunjukkan keserupaan antara nilai input dan nilai wakil bagi input tersebut. Nilai lalai ialah nol, dalam kes ini, lajur baru untuk keserupaan tidak akan ditambahkan.</li>\r\n<li><code>Threshold</code> : Nombor antara 0.00 hingga 1.00 yang menentukan skor keserupaan yang mana dua nilai akan dikumpulkan.\r\n    Sebagai contoh, &quot;Grapes&quot; dan &quot;Graes&quot; (hilang &quot;p&quot;) dikumpulkan bersama-sama hanya jika pilihan ini ditetapkan kepada kurang daripada 0.90.\r\n    Ambang 1.00 hanya membenarkan padanan tepat.\r\n    (Ambil perhatian bahawa &quot;padanan tepat&quot; kabur mungkin mengabaikan perbezaan seperti sarung, tertib perkataan, dan tanda baca.)\r\n    Nilai lalai ialah 0.80.</li>\r\n<li><code>TransformationTable</code> : Jadual yang membenarkan rekod perkumpulan berdasarkan pemetaan nilai tersuai. Ia harus mengandungi lajur &quot;Daripada&quot; dan &quot;Kepada&quot;. Contohnya, &quot;Anggur&quot; dikumpulkan dengan &quot;Kismis&quot; jika jadual transformasi diberikan dengan lajur &quot;Daripada&quot; yang mengandungi &quot;Anggur&quot; dan lajur &quot;Kepada&quot; yang mengandungi &quot;Kismis&quot;. Perhatikan bahawa transformasi akan digunakan pada semua kejadian teks dalam jadual transformasi. Dengan jadual transformasi di atas, &quot;Anggur itu manis&quot; juga akan dikumpulkan dengan &quot;Kismis itu manis&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kumpulkan jadual dengan menambahkan lajur agregat [Count] yang mengandungi bilangan pekerja dalam setiap lokasi (\"setiap Table.RowCount(_))\").",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "Mencantumkan baris daripada dua jadual yang sepadan kabur berdasarkan kunci yang ditentukan.",
        "Documentation.LongDescription": "<p>Mencantumkan baris <code>table1</code> dengan baris <code>table2</code> berdasarkan pemadanan kabur nilai lajur utama yang dipilih oleh <code>key1</code> (untuk <code>table1</code>) dan <code>key2</code> (untuk <code>table2</code>).</p>\r\n<p>Pemadanan kabur ialah perbandingan berdasarkan keserupaan teks, bukannya kesamaan teks.</p>\r\n<p>Secara lalui, cantuman dalaman dilakukan, walau bagaimanapun pilihan <code>joinKind</code> mungkin disertakan untuk menentukan jenis cantuman. Opsyen termasuk:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Set pilihan <code>joinOptions</code> mungkin disertakan untuk menentukan cara membandingkan lajur utama. Opsyen termasuk:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Nombor antara 1 dan 8 yang menentukan bilangan jaluran selari untuk digunakan bagi pemadanan kabur. Nilai lalai ialah 1.</li>\r\n<li><code>Culture</code> : Membenarkan rekod pemadanan berdasarkan peraturan khusus budaya. Ia boleh menjadi nama budaya yang sah. Contohnya, opsyen Budaya bagi rekod padanan &quot;ja-JP&quot; yang berasaskan budaya Jepun. Nilai lalai ialah &quot;&quot;, yang padanannya berdasarkan budaya Inggeris Tak Berubah.</li>\r\n<li><code>IgnoreCase</code> : Nilai logik (benar/palsu) yang membenarkan pemadanan kunci tidak sensitif huruf. Contohnya, apabila benar, &quot;Anggur&quot; dipadankan dengan &quot;anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>IgnoreSpace</code> : Nilai logik (benar/palsu) yang membenarkan gabungan bahagian teks untuk mencari padanan. Contohnya, apabila benar, &quot;Ang gur&quot; dipadankan dengan &quot;Anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>NumberOfMatches</code> : Nombor bulat yang menentukan bilangan maksimum baris sepadan yang boleh dikembalikan untuk setiap baris input. Contohnya, nilai 1 akan dikembalikan pada banyak satu baris sepadan untuk setiap baris input. Jika opsyen ini tidak diberikan, semua baris sepadan dikembalikan.</li>\r\n<li><code>SimilarityColumnName</code> : Nama untuk lajur yang menunjukkan keserupaan antara nilai input dan nilai wakil bagi input tersebut. Nilai lalai ialah nol, dalam kes ini, lajur baru untuk keserupaan tidak akan ditambahkan.</li>\r\n<li><code>Threshold</code> : Nombor antara 0.00 dan 1.00 yang menentukan markah keserupaan yang mana dua nilainya akan dipadankan.\r\n    Sebagai contoh, &quot;Grapes&quot; and &quot;Graes&quot; (hilang &quot;p&quot;) hanya sepadan jika pilihan ini ditetapkan kepada kurang daripada 0.90.\r\n    Ambang 1.00 hanya membenarkan padanan yang tepat.\r\n    (Ambil perhatian bahawa &quot;padanan tepat&quot; yang kabur mungkin mengabaikan perbezaan seperti sarung, tertib perkataan, dan tanda baca.)\r\n    Nilai lalai ialah 0.80.</li>\r\n<li><code>TransformationTable</code> : Jadual yang membenarkan rekod pemadanan berdasarkan pemetaan nilai tersuai. Ia harus mengandungi lajur &quot;Daripada&quot; dan &quot;Kepada&quot;. Contohnya, &quot;Anggur&quot; dipadankan dengan &quot;Kismis&quot; jika jadual transformasi diberikan dengan lajur &quot;Daripada&quot; yang mengandungi &quot;Anggur&quot; dan lajur &quot;Kepada&quot; yang mengandungi &quot;Kismis&quot;. Perhatikan bahawa transformasi akan digunakan pada semua kejadian teks dalam jadual transformasi. Dengan jadual transformasi di atas, &quot;Anggur itu manis&quot; juga akan dipadankan dengan &quot;Kismis itu manis&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Cantuman kabur dalaman kiri bagi dua jadual berdasarkan pada [FirstName]",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "Menjalankan cantuman kabur antara jadual pada lajur yang dibekalkan dan menghasilkan hasil cantuman dalam lajur baru.",
        "Documentation.LongDescription": "<p>Mencantumkan baris <code>table1</code> dengan baris <code>table2</code> berdasarkan pemadanan kabur nilai lajur utama yang dipilih oleh <code>key1</code> (untuk <code>table1</code>) dan <code>key2</code> (untuk <code>table2</code>). Hasilnya dikembalikan dalam lajur baru yang dinamakan <code>newColumnName</code>.</p>\r\n<p>Pemadanan kabur ialah perbandingan berdasarkan keserupaan teks, bukannya kesamaan teks.</p>\r\n<p><code>joinKind</code> pilihan menentukan jenis cantuman yang akan dilakukan. Secara lalui, cantuman luaran kiri dilakukan jika <code>joinKind</code> tidak ditentukan. Opsyen termasuk:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Set pilihan <code>joinOptions</code> mungkin disertakan untuk menentukan cara membandingkan lajur utama. Opsyen termasuk:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Nombor antara 1 dan 8 yang menentukan bilangan jaluran selari untuk digunakan bagi pemadanan kabur. Nilai lalai ialah 1.</li>\r\n<li><code>Culture</code> : Membenarkan rekod pemadanan berdasarkan peraturan khusus budaya. Ia boleh menjadi nama budaya yang sah. Contohnya, opsyen Budaya bagi rekod padanan &quot;ja-JP&quot; yang berasaskan budaya Jepun. Nilai lalai ialah &quot;&quot;, yang padanannya berdasarkan budaya Inggeris Tak Berubah.</li>\r\n<li><code>IgnoreCase</code> : Nilai logik (benar/palsu) yang membenarkan pemadanan kunci tidak sensitif huruf. Contohnya, apabila benar, &quot;Anggur&quot; dipadankan dengan &quot;anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>IgnoreSpace</code> : Nilai logik (benar/palsu) yang membenarkan gabungan bahagian teks untuk mencari padanan. Contohnya, apabila benar, &quot;Ang gur&quot; dipadankan dengan &quot;Anggur&quot;. Nilai lalai ialah benar.</li>\r\n<li><code>NumberOfMatches</code> : Nombor bulat yang menentukan bilangan maksimum baris sepadan yang boleh dikembalikan untuk setiap baris input. Contohnya, nilai 1 akan dikembalikan pada banyak satu baris sepadan untuk setiap baris input. Jika opsyen ini tidak diberikan, semua baris sepadan dikembalikan.</li>\r\n<li><code>SimilarityColumnName</code> : Nama untuk lajur yang menunjukkan keserupaan antara nilai input dan nilai wakil bagi input tersebut. Nilai lalai ialah nol, dalam kes ini, lajur baru untuk keserupaan tidak akan ditambahkan.</li>\r\n<li><code>Threshold</code> : Nombor antara 0.00 dan 1.00 yang menentukan markah keserupaan yang mana dua nilainya akan dipadankan.\r\n    Sebagai contoh, &quot;Grapes&quot; and &quot;Graes&quot; (hilang &quot;p&quot;) hanya sepadan jika pilihan ini ditetapkan kepada kurang daripada 0.90.\r\n    Ambang 1.00 hanya membenarkan padanan yang tepat.\r\n    (Ambil perhatian bahawa &quot;padanan tepat&quot; yang kabur mungkin mengabaikan perbezaan seperti sarung, tertib perkataan, dan tanda baca.)\r\n    Nilai lalai ialah 0.80.</li>\r\n<li><code>TransformationTable</code> : Jadual yang membenarkan rekod pemadanan berdasarkan pemetaan nilai tersuai. Ia harus mengandungi lajur &quot;Daripada&quot; dan &quot;Kepada&quot;. Contohnya, &quot;Anggur&quot; dipadankan dengan &quot;Kismis&quot; jika jadual transformasi diberikan dengan lajur &quot;Daripada&quot; yang mengandungi &quot;Anggur&quot; dan lajur &quot;Kepada&quot; yang mengandungi &quot;Kismis&quot;. Perhatikan bahawa transformasi akan digunakan pada semua kejadian teks dalam jadual transformasi. Dengan jadual transformasi di atas, &quot;Anggur itu manis&quot; juga akan dipadankan dengan &quot;Kismis itu manis&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Cantuman kabur dalaman kiri bagi dua jadual berdasarkan pada [FirstName]",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "Menghimpunkan baris dalam jadual yang mempunyai kunci yang sama.",
        "Documentation.LongDescription": "Mengumpul baris <code>table</code> mengikut lajur kunci ditentukan mengikut <code>key</code>. <code>key</code> boleh jadi nama lajur tunggal, atau senarai nama lajur.\r\n    Untuk setiap kumpulan, satu rekod dibina yang mengandungi lajur kunci (dan nilainya), termasuk sebarang lajur teragregat yang ditentukan mengikut <code>aggregatedColumns</code>.\r\n    Secara pilihan, <code>groupKind</code> dan <code>comparer</code> mungkin juga ditentukan.<br>\r\n    <br>\r\n    Jika data telah diisih mengikut lajur kunci, satu <code>groupKind</code> GroupKind.Local boleh diberikan. Ini mungkin boleh meningkatkan prestasi pengumpulan dalam kes tertentu,\r\n    kerana semua baris dengan satu set nilai kunci yang ditentukan adalah dianggap berdampingan.<br>\r\n    <br>\r\n    Apabila menghantar <code>comparer</code>, perhatikan jika ia mengendalikan kunci yang berbeza sebagai sama, baris boleh diletakkan dalam kumpulan yang kuncinya berbeza daripada kuncinya sendiri.<br>\r\n    <br>\r\n    Fungsi ini tidak menjamin tertib isihan baris yang dikembalikannya.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kumpulkan jadual menambah lajur agregat [total] yang mengandungi jumlah harga (\"each List.Sum([price])\").",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "Menyelitkan baris pertama ke dalam jadual pada kedudukan yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual dengan senarai baris, <code>rows</code>, dimasukkan ke dalam <code>table</code> pada kedudukan yang ditentukan, <code>offset</code>. Setiap lajur dalam baris untuk dimasukkan mesti sepadan dengan jenis lajur pada jadual.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Menyelitkan baris ke dalam jadual pada kedudukan 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Menyelitkan dua baris ke dalam jadual pada kedudukan 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "Menyambungkan baris daripada dua jadual agar sepadan berdasarkan kunci yang ditentukan.",
        "Documentation.LongDescription": "<p>Mencantumkan baris <code>table1</code> dengan baris bagi <code>table2</code> berdasarkan kesamaan nilai lajur kunci yang dipilih oleh <code>key1</code> (untuk <code>table1</code>) dan <code>key2</code> (untuk <code>table2</code>).</p>\r\n<p>Secara lalai, cantuman dalaman dilakukan, walau bagaimanapun, pilihan <code>joinKind</code> mungkin disertakan untuk menentukan jenis cantuman. Opsyen termasuk:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Set pilihan <code>keyEqualityComparers</code> mungkin disertakan untuk menentukan cara membandingkan lajur kunci. Ciri ini pada masa ini bertujuan untuk kegunaan dalaman sahaja.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Cantum dua jadual menggunakan lajur kunci tunggal.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "Sertai dua jadual yang mempunyai nama lajur berkonflik, menggunakan berbilang lajur kunci.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "Mengembalikan baris terbesar menggunakan kriteria yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris terbesar dalam <code>table</code>, <code>comparisonCriteria</code> ditentukan. \r\n    Selepas baris disusun, parameter <code>countOrCondition</code> mesti ditentukan untuk menapis selanjutnya hasil. Ambil perhatian bahawa algoritma susunan tidak menjamin hasil susunan tetap. Parameter <code>countOrCondition</code> boleh mengambil berbilang bentuk:\r\n    <ul>\r\n        <li> Jika nombor ditentukan, senarai sehingga <code>countOrCondition</code> item dalam urutan menaik dikembalikan. </li>\r\n        <li> Jika syarat ditentukan, senarai item yang pada asalnya memenuhi syarat dikembalikan. Setelah item gagal memenuhi syarat tersebut, tiada item selanjutnya akan dipertimbangkan. </li> \r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Car baris dengan nilai terbesar dalam lajur [a] dengan syarat [a] > 0, dalam jadual. Ingat bahawa baris diisih sebelum penapis digunakan.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Car baris dengan nilai terbesar dalam lajur [a] dengan syarat [b] > 0, dalam jadual. Ingat bahawa baris diisih sebelum penapis digunakan.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "Mengembalikan baris terkecil menggunakan kriteria yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris terkecil dalam <code>table</code>, <code>comparisonCriteria</code> ditentukan. Selepas baris disusun, parameter <code>countOrCondition</code> mesti ditentukan untuk menapis selanjutnya hasil. Ambil perhatian bahawa algoritma susunan tidak menjamin hasil susunan tetap. Parameter <code>countOrCondition</code> boleh mengambil berbilang bentuk:\r\n    <ul>\r\n        <li> Jika nombor ditentukan, senarai sehingga <code>countOrCondition</code> item dalam urutan menaik dikembalikan. </li>\r\n        <li> Jika syarat ditentukan, senarai item yang pada asalnya memenuhi syarat dikembalikan. Setelah item gagal memenuhi syarat tersebut, tiada item selanjutnya akan dipertimbangkan. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Cari baris dengan nilai terkecil dalam lajur [a] dengan syarat [a] < 3, dalam jadual. Ingat bahawa baris diisih sebelum penapis digunakan.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Car baris dengan nilai terkecil dalam lajur [a] dengan syarat [b] < 0, dalam jadual. Ingat bahawa baris diisih sebelum penapis digunakan.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "Menjalankan sambungan antara jadual pada lajur yang dibekalkan dan menghasilkan hasil sambungan dalam lajur baru.",
        "Documentation.LongDescription": "<p>Mencantumkan baris <code>table1</code> dengan baris <code>table2</code> berdasarkan kesamaan nilai lajur utama yang dipilih oleh <code>key1</code> (untuk <code>table1</code>) dan <code>key2</code> (untuk <code>table2</code>). Hasil dimasukkan ke dalam lajur bernama <code>newColumnName</code>.</p>\r\n<p>Pilihan <code>joinKind</code> menentukan jenis cantuman untuk dilakukan. Secara lalai, cantuman luar kiri dilakukan jika <code>joinKind</code> tidak ditentukan.</p>\r\n<p>Set pilihan <code>keyEqualityComparers</code> mungkin disertakan untuk menentukan cara membanding lajur kunci. Ciri ini pada masa ini bertujuan untuk kegunaan dalaman sahaja.</p>  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Cantum dua jadual menggunakan lajur kunci tunggal.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "Diberi sepasang lajur yang mewakili pasangan nilai atribut, menggilirkan data dalam lajur atribut ke dalam tajuk lajur.",
        "Documentation.LongDescription": "Diberi sepasang lajur yang mewakili pasangan nilai atribut, menggilirkan data dalam lajur atribut ke dalam tajuk lajur.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ambil nilai \"a\", \"b\" dan \"c\" dalam lajur atribut pada jadual <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> dan pangsikannya dalam lajurnya sendiri.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "Ambil nilai \"a\", \"b\" dan \"c\" dalam lajur atribut pada jadual <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> dan pangsikannya dalam lajurnya sendiri.  Atribut \"c\" untuk kunci \"x\" mempunyai berbilang nilai yang dikaitkan dengannya, jadi gunakan fungsi List.Max untuk menyelesaikan konflik.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "Menggantikan julat baris yang ditentukan dengan baris yang diberi.",
        "Documentation.LongDescription": "Menggantikan bilangan baris yang ditentukan, <code>count</code>, dalam input <code>table</code> dengan <code>rows</code> yang ditentukan, bermula selepas <code>offset</code>. Parameter <code>rows</code> ialah senarai rekod.\r\n    <ul>\r\n       <li><code>table</code>: Jadual yang mana penggantian dilakukan.</li>\r\n       <li><code>offset</code>: Bilangan baris untuk dilangkau sebelum membuat penggantian.</li>\r\n       <li><code>count</code>: Bilangan baris untuk digantikan.</li>\r\n       <li><code>rows</code>: Senarai rekod baris untuk dimasukkan ke dalam <code>table</code> di lokasi yang ditentukan oleh <code>offset</code>.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Bermula di kedudukan 1, ganti 3 baris.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "Menggantikan satu nilai dengan yang lain dalam lajur yang ditentukan.",
        "Documentation.LongDescription": "Menggantikan <code>oldValue</code> dengan <code>newValue</code> dalam lajur yang ditentukan bagi <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Gantikan teks \"goodbye\" dengan \"world\" dalam lajur B, sepadan dengan keseluruhan nilai sahaja.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "Gantikan teks \"ur\" dengan \"atau\" dalam lajur B, yang sepadan dengan mana-mana bahagian nilai.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "Tanpa namakan nama pekerja AS.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "Tanpa namakan semua lajur pekerja AS.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "Memisahkan lajur yang ditentukan kepada set lajur tambahan menggunakan fungsi pemisah yang ditentukan.",
        "Documentation.LongDescription": "Memisahkan lajur yang ditentukan kepada set lajur tambahan menggunakan fungsi pemisah yang ditentukan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ceraikan lajur [Name] di kedudukan \"i\" ke dalam dua lajur",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "Menterjemahkan set lajur dalam jadual ke dalam pasangan nilai atribut.",
        "Documentation.LongDescription": "Menterjemahkan set lajur dalam jadual ke dalam pasangan nilai atribut, digabungkan dengan baki nilai dalam setiap baris.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ambil lajur \"a\", \"b\" dan \"c\" dalam jadual <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> dan nyahpangsinya ke dalam pasangan nilai atribut.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "Menterjemahkan semua lajur selain daripada set yang ditentukan menjadi pasangan nilai atribut.",
        "Documentation.LongDescription": "Menterjemahkan semua lajur selain daripada set yang ditentukan menjadi pasangan nilai atribut digabungkan dengan nilai-nilai lain dalam setiap baris.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Menterjemahkan semua lajur selain daripada set yang ditentukan menjadi pasangan nilai atribut digabungkan dengan nilai-nilai lain dalam setiap baris.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Analitis Peribadi Microsoft Teams",
        "Documentation.LongDescription": "<p>Penyambung Analitis Teams membolehkan anda mendapatkan cerapan ke dalam penggunaan Teams anda. Data tersedia untuk kedua-dua aktiviti peribadi anda dalam Teams dan juga aktiviti dalam Teams anda ialah ahlinya.</p>\r\n<p>Data tersedia untuk tempoh 90 hari sebelumnya. </p>\r\n<p> Untuk butiran tentang jenis data yang tersedia, sila rujuk dokumentasi bantuan yang berikut: </p>\r\n<ul>\r\n<li><b>Penggunaan Teams:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Aktiviti Pengguna Teams:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "Masukkan nama organisasi dan projek.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Mengembalikan jadual suapan OData yang ditawarkan oleh Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "Mengembalikan format perduaan yang membaca nilai perduaan.",
        "Documentation.LongDescription": "Mengembalikan format perduaan yang membaca nilai perduaan.  Jika <code>length</code> ditentukan, nilai perduaan akan mengandungi bait sebanyak itu.  Jika <code>length</code> tidak ditentukan, nilai perduaan akan mengandungi baki bait.  <code>length</code> boleh ditentukan sama ada sebagai nombor atau sebagai format perduaan bagi panjang yang mendahului data perduaan.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "Kembalikan nilai logik berdasarkan semakan kesamaan untuk dua nilai yang diberi.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>logical</code> berdasarkan semakan persamaan ke atas dua nilai, <code>x</code> dan <code>y</code>yang diberikan , menggunakan <code>comparer</code>.\r\n      <div>\r\n        <code>comparer</code> ialah kod <code>Comparer</code> yang digunakan untuk mengawal perbandingan.\r\n        Pembanding A ialah fungsi yang menerima dua argumen dan mengembalikan -1, 0 atau 1 berdasarkan sama ada nilai pertama adalah kurang daripada, sama dengan,  atau lebih besar daripada yang kedua.\r\n        Pembanding boleh digunakan untuk menyediakan perbandingan kes tidak sensitif atau budaya dan sedar-tempatan.\r\n      </div>\r\n      <div>\r\n      Pembanding terbina dalam berikut tersedia dalam bahasa formula:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Digunakan untuk melaksanakan perbandingan ordinal yang tepat</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Digunakan untuk melaksanakan huruf besar tidak sensitif huruf yang tepat perbandingan</li>\r\n        <li> <code>Comparer.FromCulture</code>: Digunakan untuk melaksanakan perbandingan sedar-budaya</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Bandingkan \"1\" dan \"A\" dengan menggunakan tempatan \"en-US\" untuk menentukan jika nilai-nilai ini adalah sama.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "Mengembalikan tarikh dan masa semasa dalam zon waktu tempatan. Nilai ini adalah tetap dan tidak akan berubah dengan panggilan berikutnya.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>datetime</code> yang disetkan kepada tarikh dan masa semasa pada sistem. Nilai ialah adalah nilai tetap dan tidak akan berubah dengan panggilan berikutnya, tidak seperti DateTime.LocalNow yang mungkin mengembalikan nilai berlainan sepanjang pelaksanaan ungkapan.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "Mengembalikan tarikh dan masa semasa dalam zon waktu tempatan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>datetime</code> yang disetkan kepada tarikh dan masa semasa pada sistem.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "Mengembalikan tarikh & masa semasa dalam zon waktu tempatan. Nilai ini adalah tetap dan tidak akan berubah dengan panggilan berikutnya.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>datetime</code> yang disetkan kepada tarikh dan masa semasa pada sistem. Nilai yang dikembalikan mengandungi maklumat zon waktu yang mewakili zon waktu tempatan. Nilai ialah adalah nilai tetap dan tidak akan berubah dengan panggilan berikutnya, tidak seperti DateTimeZone.LocalNow, yang mungkin mengembalikan nilai berlainan sepanjang pelaksanaan ungkapan.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "Mengembalikan tarikh dan masa semasa dalam UTC (zon waktu GMT). Nilai ini adalah tetap dan tidak akan berubah dengan panggilan berikutnya.",
        "Documentation.LongDescription": "Mengembalikan tarikh dan masa semasa dalam UTC (zon waktu GMT). Nilai ini adalah tetap dan tidak akan berubah dengan panggilan berikutnya.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "Mengembalikan tarikh & masa semasa dalam zon waktu tempatan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>datetimezone</code> yang disetkan kepada tarikh dan masa semasa pada sistem. \r\n    Nilai yang dikembalikan mengandungi maklumat zon waktu yang mewakili zon waktu tempatan.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "Mengembalikan tarikh dan masa semasa dalam UTC (zon waktu GMT).",
        "Documentation.LongDescription": "Mengembalikan tarikh dan masa semasa dalam UTC (zon waktu GMT).",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan tarikh & masa semasa dalam UTC.",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "Mengembalikan pengecam legap untuk penilaian yang sedang berjalan.",
        "Documentation.LongDescription": "Mengembalikan pengecam legap untuk penilaian yang sedang berjalan.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "Mengembalikan pengecam legap untuk menghubungkaitkan permintaan masuk dengan yang keluar.",
        "Documentation.LongDescription": "Mengembalikan pengecam legap untuk menghubungkaitkan permintaan masuk dengan yang keluar.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "Menulis kemasukan jejak, jika penjejakan didayakan dan mengembalikan nilai.",
        "Documentation.LongDescription": "Menulis jejak <code>message</code>, jika penjejakan didayakan dan mengembalikan <code>value</code>. Parameter pilihan <code>delayed</code> menentukan sama ada hendak melewatkan penilaian <code>value</code> sehingga mesej dijejak. <code>traceLevel</code> boleh mengambil satu daripada nilai berikut:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Jejak mesej sebelum menggunakan fungsi Text.From dan mengembalikan keputusan.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "Pembekal identiti lalai untuk hos semasa.",
        "Documentation.LongDescription": "Pembekal identiti lalai untuk hos semasa.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "Mengumpulkan nilai ringkasan daripada item dalam senarai.",
        "Documentation.LongDescription": "Mengumpulkan nilai ringkasan daripada item dalam senarai <code>list</code>, menggunakan <code>accumulator</code>.\r\n    Parameter benih pilihan, <code>seed</code>, mungkin disetkan.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Mengumpulkan nilai ringkasan daripada item dalam senarai {1, 2, 3, 4, 5} menggunakan ((state, current) => state + current ).",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "Menjana senarai nilai datetimezone jika nilai asal, kiraan dan nilai tempoh tokokan diberikan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai <code>datetimezone</code> dengan saiz <code>count</code>, bermula pada <code>start</code>. Tokokan yang ditentukan, <code>step</code>, ialah nilai <code>duration</code> yang ditambah pada setiap nilai.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai 10 nilai bermula dari 5 minit sebelum Hari Tahun Baru (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) menokok sebanyak 1 minit (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "Menjana senarai nilai datetime jika nilai asal, kiraan dan nilai tempoh tokokan diberikan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai <code>datetime</code> dengan saiz <code>count</code>, bermula pada <code>start</code>. Tokokan yang ditentukan, <code>step</code>, ialah nilai <code>duration</code> yang ditambah pada setiap nilai.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai 10 nilai bermula dari 5 minit sebelum Hari Tahun Baru (#datetime(2011, 12, 31, 23, 55, 0)) menokok sebanyak 1 minit (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "Menjana senarai nilai tarikh jika nilai asal, kiraan dan nilai tempoh tokokan diberikan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai <code>date</code> dengan saiz <code>count</code>, bermula pada <code>start</code>. Tokokan yang ditentukan, <code>step</code>, ialah nilai <code>duration</code> yang ditambah pada setiap nilai.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai 5 nilai yang bermula dari Malam Hari Tahun Baru (#date(2011, 12, 31)) menokok sebanyak 1 hari(#duration(1, 0, 0, 0)).",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "Menjana senarai nilai tempoh jika nilai asal, kiraan dan nilai tempoh tokokan diberikan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai <code>count</code> <code>duration</code>, yang bermula di <code>start</code> dan ditokok oleh <code>duration</code> <code>step</code> yang ditentukan.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai 5 nilai yang bermula dengan 1 jam dan menokok dengan satu jam.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "Menjana senarai nilai.",
        "Documentation.LongDescription": "Menjana senarai nilai menggunakan fungsi yang diberikan. Fungsi <code>initial</code> menjana nilai calon permulaan, yang kemudiannya diuji terhadap <code>condition</code>.\r\n    Jika nilai calon diluluskan, maka ia dikembalikan sebagai sebahagian daripada senarai yang terhasil dan nilai calon seterusnya dijanakan dengan menghulurkan nilai yang baru diluluskan kepada <code>next</code>.\r\n    Apabila nilai calon gagal dipadankan <code>condition</code>, proses penjanaan senarai berhenti.\r\n    Parameter pilihan, <code>selector</code>, juga boleh diberikan untuk mengubah item dalam senarai yang terhasil.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai bermula dengan sepuluh, turun sebanyak satu secara berulang dan pastikan setiap item adalah lebih besar daripada sifar.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "Jana senarai rekod yang mengandungi x dan y, yang mana x ialah nilai dan y ialah senarai. x hendaklah kekal kurang daripada 10 dan mewakili bilangan item dalam senarai y. Selepas senarai dijana, hanya kembalikan nilai x.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "Memasukkan nilai ke dalam senarai pada indeks yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan senarai baru yang dihasilkan dengan memasukkan nilai dalam <code>values</code> ke dalam <code>list</code> pada <code>index</code>. Kedudukan pertama dalam senarai ialah indeks 0.\r\n      <ul>\r\n        <li><code>list</code>: Senarai sasaran yang mana nilai perlu dimasukkan.</li>\r\n        <li><code>index</code>: Indeks senarai sasaran (<code>list</code>) yang mana nilai perlu dimasukkan. Kedudukan pertama dalam senarai ialah indeks 0.</li>\r\n        <li><code>values</code>: Senarai nilai yang perlu dimasukkan ke dalam <code>list</code>.</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Masukkan senarai ({3, 4}) ke dalam senarai sasaran ({1, 2, 5}) pada indeks 2.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "Masukkan senarai dengan senarai tersarang ({1, {1.1, 1.2}}) ke dalam senarai sasaran ({2, 3, 4}) pada indeks 0.",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "Menggantikan nombor kiraan bagi nilai yang bermula di kedudukan dengan nilai gantian.",
        "Documentation.LongDescription": "Menggantikan nilai <code>count</code> dalam <code>list</code> dengan senarai <code>replaceWith</code>, yang bermula di kedudukan yang ditentukan, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Gantikan {7, 8, 9} dalam senarai {1, 2, 7, 8, 9, 5} dengan {3, 4}.",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "Mencari senarai untuk nilai yang ditentukan dan menggantikannya.",
        "Documentation.LongDescription": "Mencari senarai nilai, <code>list</code>, untuk nilai <code>oldValue</code> dan menggantikan setiap kejadian dengan nilai gantian <code>newValue</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Gantikan semua nilai \"a\" dalam senarai {\"a\", \"B\", \"a\", \"a\"} dengan \"A\".",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "Menjana senarai nilai masa jika nilai asal, kiraan dan nilai tempoh tokokan diberikan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai <code>time</code> dengan saiz <code>count</code>, bermula pada <code>start</code>. Tokokan yang ditentukan, <code>step</code>, ialah nilai <code>duration</code> yang ditambah pada setiap nilai.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai 4 nilai yang bermula dari tengah hari (#time(12, 0, 0)) menokok dengan satu jam (#duration(0, 1, 0, 0)).",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "Mengembalikan senarai dengan elemen yang ditransformasikan daripada senarai input menggunakan fungsi yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan senarai yang unsurnya diunjurkan daripada senarai input.<br>\r\n    <br>\r\n    Fungsi <code>collectionTransform</code> mengubah setiap unsur kepada senarai perantaraan dan fungsi <code>resultTransform</code> menerima unsur asal serta item daripada senarai perantaraan untuk membina hasil terakhir.<br>\r\n    <br>\r\n    Fungsi <code>collectionTransform</code> mempunyai tandatangan <code>(x as any) as list => ...</code>, di mana <code>x</code> ialah unsur dalam <code>list</code>.\r\n    Fungsi <code>resultTransform</code> mengunjurkan bentuk hasil dan mempunyai tandatangan <code>(x as any, y as any) as any => ...</code>, di mana <code>x</code> ialah unsur dalam <code>list</code> dan <code>y</code> ialah unsur daripada senarai yang dijana dengan menghantar <code>x</code> kepada <code>collectionTransform</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Mendatarkan senarai individu dan haiwan kesayangan mereka.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "Mengembalikan nombor rawak.",
        "Documentation.LongDescription": "Mengembalikan nombor rawak antara 0 dan 1.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nombor rawak.",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "Menambah medan pada rekod.",
        "Documentation.LongDescription": "Menambah medan pada rekod <code>record</code>, jika nama medan <code>fieldName</code> dan nilai <code>value</code> ditentukan.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Tambahkan medan Alamat ke rekod.",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "Menggantikan teks dalam input yang ditentukan.",
        "Documentation.LongDescription": "Menggantikan teks <code>old</code> dalam asal <code>text</code> dengan teks <code>new</code>. Fungsi pengganti ini boleh digunakan dalam <code>List.ReplaceValue</code> dan <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Gantikan teks \"hE\" dengan \"He\" dalam rentetan \"hEllo world\".",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "Menggantikan nilai dalam input yang ditentukan.",
        "Documentation.LongDescription": "Menggantikan nilai <code>old</code> dalam asal <code>value</code> dengan nilai <code>new</code>. Fungsi pengganti ini boleh digunakan dalam <code>List.ReplaceValue</code> dan <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Gantikan nilai 11 dengan nilai 10.",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Mengembalikan keputusan JSON daripada API Smartsheet",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "Membuat panggilan ke REST API Smartsheet 2.0 di titik tamat tertentu dan mengembalikan keputusan sebagai rekod JSON.",
        "Documentation.Examples": [
          {
            "Description": "Menarik data dari titik tamat API Smartsheet helaian dengan argumen tambahan dinyatakan",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "Jadual dengan maklumat helaian seperti yang dikembalikan oleh API Smartsheet"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.TestContents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "Mengembalikan fungsi yang tidak terpisah, mengembalikan argumennya sebagai senarai unsur tunggal.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang tidak terpisah, mengembalikan argumennya sebagai senarai unsur tunggal.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada ruang putih.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada ruang putih.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input mengikut aksara ruang putih, dengan mengendalikan petikan seperti mana-mana aksara lain.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "Memetakan jadual kepada senarai jadual berdasarkan bilangan kumpulan dan lajur yang ditentukan.",
        "Documentation.LongDescription": "Memetakan <code>table</code> kepada senarai <code>groups</code> bilangan jadual, berdasarkan pada nilai <code>column</code> dan fungsi <code>hash</code>.\r\n    Fungsi <code>hash</code> digunakan pada nilai baris <code>column</code> untuk mendapatkan nilai hash bagi baris. Modulo nilai hash <code>groups</code> menentukan dalam jadual mana yang dikembalikan baris tersebut akan diletakkan.\r\n    <ul>\r\n       <li><code>table</code>: Jadual untuk dipetakan.</li>\r\n       <li><code>column</code>: Lajur untuk dihash untuk menentukan baris berada dalam jadual mana yang dikembalikan.</li>\r\n       <li><code>groups</code>: Bilangan jadual yang jadual input tersebut akan dipetakan.</li>\r\n       <li><code>hash</code>: Fungsi digunakan untuk mendapatkan nilai hash.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Petakan jadual <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> kepada 2 jadual pada lajur [a], menggunakan nilai lajur sebagai fungsi hash.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "Mengembalikan bahagian <code>text</code> antara <code>startDelimiter</code> yang ditentukan dan <code>endDelimiter</code>.\r\n    Numerik pilihan <code>startIndex</code> yang menandakan kejadian <code>startDelimiter</code> yang perlu dipertimbangkan.\r\n    Senarai pilihan <code>startIndex</code> yang menandakan kejadian <code>startDelimiter</code> yang perlu dipertimbangkan, serta sama ada pengindeksan perlu dilakukan dari mula atau hujung input.\r\n    <code>endIndex</code> serupa, kecuali pengindeksan dilakukan relatif kepada <code>startIndex</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan bahagian \"111 (222) 333 (444)\" antara tanda kurung terbuka (pertama) dan tanda kurung tutup (pertama) yang mengikutinya.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "Dapatkan bahagian \"111 (222) 333 (444)\" antara tanda kurung terbuka kedua dan tanda kurung tutup kedua yang mengikutinya.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "Dapatkan bahagian \"111 (222) 333 (444)\" antara tanda kurung terbuka kedua dari hujung dan tanda kurung tutup kedua yang mengikutinya.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "Memasukkan satu nilai teks ke dalam yang lain di kedudukan yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada memasukkan nilai teks <code>newText</code> ke dalam nilai teks <code>text</code> di kedudukan <code>offset</code>. Kedudukan bermula di nombor 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Masukkan \"C\" antara \"B\" dan \"D\" dalam \"ABD\".",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "Mengembalikan pengecam unik sejagat (GUID) rawak yang baru.",
        "Documentation.LongDescription": "Mengembalikan pengecam unik sejagat (GUID) rawak yang baru.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "Menggantikan semua kejadian subrentetan yang ditentukan dalam teks.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menggantikan semua kejadian nilai teks <code>old</code> dalam nilai teks <code>text</code> dengan nilai teks <code>new</code>. Fungsi ini adalah sensitif huruf besar atau kecil.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Gantikan setiap kejadian \"the\" dalam ayat dengan \"a\".",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "Mengalih keluar julat aksara dan memasukkan nilai baru di kedudukan yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada mengalih keluar bilangan aksara, <code>count</code>, daripada nilai teks <code>text</code> yang bermula di kedudukan <code>offset</code> dan kemudian memasukkan nilai teks <code>newText</code> di kedudukan yang sama dalam <code>text</code>.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Gantikan aksara tunggal di kedudukan 2 dalam nilai teks \"ABGF\" dengan nilai teks baru \"CDE\".",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "Menambah kunci pada jenis jadual yang ditentukan.",
        "Documentation.LongDescription": "Menambah kunci pada jenis jadual yang ditentukan.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "Mengembalikan senarai identiti yang keadaannya akan menerima.",
        "Documentation.LongDescription": "<p>Menggunakan <code>identityProvider</code> yang ditentukan, tukar <code>condition</code> kepada senarai identiti yang mana <code>condition</code> akan mengembalikan <code>true</code> dalam semua konteks kebenaran dengan <code>identityProvider</code> sebagai pembekal identiti. Ralat dikemukakan jika tidak dapat menukar <code>condition</code> kepada senarai identiti, contohnya, jika <code>condition</code> merujuk atribut selain identiti pengguna atau kumpulan untuk membuat keputusan.</p>\r\n    <p>Ambil perhatian bahawa senarai identiti mewakili identiti seperti yang dipaparkan dalam <code>condition</code> dan tiada penormalan (seperti pengembangan kumpulan) dilaksanakan pada senarai tersebut. </p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "Memampat nilai perduaan menggunakan jenis pemampatan yang ditentukan.",
        "Documentation.LongDescription": "Memampat nilai perduaan menggunakan jenis pemampatan yang ditentukan.  Hasil untuk panggilan ini adalah salinan input termampat. Jenis pemampatan termasuk:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Memampatkan nilai perduaan.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "Menyahmampatkan nilai perduaan menggunakan jenis mampatan yang ditentukan.",
        "Documentation.LongDescription": "Menyahmampatkan nilai perduaan menggunakan jenis mampatan yang ditentukan.  Hasil untuk panggilan ini adalah salinan input yang dinyahmampatkan, Jenis perbandingan termasuk:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Nyahmampat nilai perduaan.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "Mengembalikan subset nilai perduaan yang bermula pada ofset.",
        "Documentation.LongDescription": "Mengembalikan subset nilai perduaan yang bermula pada ofset <code>binary</code>. Parameter pilihan, <code>offset</code>, menetapkan panjang maksimum subset.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan subset nilai perduaan yang bermula pada ofset 6.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "Mengembalikan subset panjang 2 daripada ofset 6 bagi nilai perduaan.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "Memisahkan binari yang ditentukan kepada senarai binari yang menggunakan saiz halaman yang ditentukan.",
        "Documentation.LongDescription": "Memisahkan <code>binary</code> kepada satu senarai binari bagi iaitu unsur pertama senarai output ialah binari yang mengandungi <code>pageSize</code> bait pertama daripada\r\n    senarai sumber, unsur seterusnya dalam senarai output ialah binari yang mengandungi <code>pageSize</code> bait daripada binari senarai sumber, dan sebagainya.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "Mencipta atau melanjutkan perduaan dengan pengendali ditentukan pengguna bagi operasi pertanyaan dan tindakan.",
        "Documentation.LongDescription": "<p>Mengembalikan pandangan bagi <code>binary</code> di mana fungsi yang ditentukan dalam <code>handlers</code> digunakan sebagai ganti kelakuan lalai operasi apabila operasi digunakan pada pandangan.</p>\r\n<p>Jika <code>binary</code> diberikan, semua fungsi pengendali adalah pilihan. Jika <code>binary</code> tidak diberikan, fungsi pengendali <code>GetStream</code> diperlukan. Jika fungsi pengendali tidak ditentukan untuk operasi, kelakuan lalai operasi digunakan pada <code>binary</code> (kecuali dalam kes <code>GetExpression</code>).</p>\r\n<p>Fungsi pengendali mesti mengembalikan nilai yang sama dari segi makna dengan hasil penggunaan operasi terhadap <code>binary</code> (atau pandangan yang terhasil dalam kes <code>GetExpression</code>).</p>\r\n<p>Jika fungsi pengendali membangkitkan ralat, kelakuan lalai operasi akan digunakan pada pandangan.</p>\r\n<p><code>Binary.View</code> boleh digunakan untuk melaksanakan penugasan pada sumber data – terjemahan pertanyaan M ke dalam operasi khusus sumber (contohnya, untuk memuat turun sebahagian daripada fail).</p>\r\n<p>Rujuk dokumentasi penyambung tersuai Power Query yang diterbitkan untuk penerangan yang lebih lengkap bagi <code>Binary.View</code>.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Cipta pandangan asas yang tidak memerlukan capaian data untuk menentukan panjang.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "Mengembalikan format perduaan dengan tertib bait yang ditentukan oleh fungsi.",
        "Documentation.LongDescription": "Mengembalikan format perduaan dengan tertib bait yang ditentukan oleh <code>binaryFormat</code>.  Tertib bait lalai ialah <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "Mengembalikan format perduaan yang memilih format perduaan seterusnya berdasarkan pada nilai yang telah dibaca.",
        "Documentation.LongDescription": "Mengembalikan format perduaan yang memilih format perduaan seterusnya berdasarkan pada nilai yang telah dibaca.  Nilai format perduaan yang dihasilkan oleh fungsi ini berfungsi secara berperingkat:<ul>\r\n<li>Format perduaan yang ditentukan oleh parameter <code>binaryFormat</code> digunakan untuk membaca nilai.</li>\r\n<li>Nilai yang dihantar ke fungsi pilih ditentukan oleh parameter <code>chooseFunction</code>.</li>\r\n<li>Fungsi pilihan memeriksa nilai dan mengembalikan format perduaan kedua.</li>\r\n<li>Format perduaan kedua digunakan untuk membaca nilai kedua.</li>\r\n<li>Jika fungsi gabungan ditentukan, maka nilai pertama dan kedua dihantar kepada fungsi gabungan dan nilai yang terhasil dikembalikan.</li>\r\n<li>Jika fungsi gabungan tidak ditentukan, nilai kedua dikembalikan.</li>\r\n<li>Nilai kedua dikembalikan.</li>\r\n</ul>Parameter <code>type</code> pilihan menunjukkan jenis format perduaan yang akan dikembalikan oleh fungsi pilihan.  Sama ada <code>type any</code>, <code>type list</code> atau <code>type binary</code> boleh ditentukan.  Jika parameter <code>type</code> tidak ditentukan, maka <code>type any</code> digunakan.   Jika <code>type list</code> atau <code>type binary</code> digunakan, maka sistem mungkin dapat mengembalikan nilai <code>binary</code> atau <code>list</code> penstriman berbanding nilai penimbalan, yang boleh mengurangkan amaun memori yang diperlukan untuk membaca format.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "Baca senarai bait yang mana bilangan elemen ditentukan oleh bait pertama.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "Baca senarai bait yang mana bilangan elemen ditentukan oleh bait pertama dan kekalkan bacaan bait pertama.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "Baca senarai bait yang mana bilangan elemen ditentukan oleh bait pertama menggunakan senarai penstriman.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "Mengembalikan format perduaan yang membaca sekumpulan item.",
        "Documentation.LongDescription": "Parameter adalah seperti berikut:\r\n<ul>\r\n<li>Parameter <code>binaryFormat</code> menentukan format perduaan bagi nilai kunci.</li>\r\n<li>Parameter <code>group</code> memberi maklumat mengenai sekumpulan item yang diketahui.</li>\r\n<li>Parameter <code>extra</code> opsyenal yang boleh digunakan untuk menentukan fungsi yang akan mengembalikan nilai format perduaan untuk nilai selepas sebarang kunci yang tidak dijangka.  Jika parameter <code>extra</code> tidak ditentukan, maka ralat akan dipaparkan jika terdapat nilai kunci yang tidak dijangka.</li>\r\n</ul>\r\nParameter <code>group</code> menentukan takrifan senarai item.  Definisi setiap item ialah senarai, yang mengandungi 3-5 nilai, seperti berikut:\r\n<ul>\r\n<li>Nilai kunci.  Nilai kunci yang berkaitan dengan item.  Ini mestilah unik dalam set item.</li>\r\n<li>Format item.  Format perduaan yang berkaitan dengan nilai item.  Ini membolehkan setiap item mempunyai format berlainan. </li>\r\n<li>Kejadian item.  Nilai <code>BinaryOccurrence.Type</code> untuk bilangan kali item dijangka akan muncul dalam kumpulan.   Item yang diperlukan yang tidak hadir akan menyebabkan ralat.  Item pendua yang diperlukan atau opsyenal dikendalikan seperti nilai kunci tidak dijangka.</li>\r\n<li>Nilai item lalai (opsyenal).  Jika nilai item lalai muncul dalam senarai definisi item dan bukan nol, maka ia akan digunakan sebagai ganti kepada lalai.  Lalai untuk item berulang atau opsyenal ialah nol dan lalai untuk nilai berulang ialah senarai kosong { }.</li>\r\n<li>Transformasi nilai item (opsyenal).   Jika fungsi transformasi nilai item hadir dalam senarai definisi item dan bukan nol, maka ia akan dipanggil untuk mentransformasikan nilai item sebelum ia dikembalikan.  Fungsi transformasi hanya dipanggil jika item muncul dalam input (ia tidak akan dipanggil dengan nilai lalai). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "Yang berikut mengambil nilai kunci dengan bait tunggal, dengan 4 item dijangka dalam kumpulan, kesemuanya mempunyai satu bait data selepas kunci.  Item muncul dalam input seperti berikut:\r\n<ul>\r\n<li>Kunci 1 diperlukan dan muncul dengan nilai 11.</li>\r\n<li>Kunci 2 berulang dan muncul dua kali dengan nilai 22 dan menghasilkan nilai { 22, 22 }.</li>\r\n<li>Kunci 3 ialah pilihan dan tidak muncul dan menghasilkan nilai nol.</li>\r\n<li>Kunci 4 berulang, tetapi tidak muncul dan menghasilkan nilai { }.</li>\r\n<li>Kunci 5 bukan sebahagian daripada kumpulan, tetapi muncul sekali dengan nilai 55.  Fungsi tambahan dipanggil dengan nilai kunci 5 dan mengembalikan format yang sepadan dengan nilai tersebut (BinaryFormat.Byte).  Nilai 55 dibaca dan dibuang.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "Contoh berikut menunjukkan transformasi nilai item dan nilai item lalai.   Item berulang dengan kunci 1 menjumlahkan senarai nilai yang dibaca menggunakan List.Sum.  Item pilihan dengan kunci 2 mempunyai nilai lalai 123 berbanding nol.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "Mengembalikan format perduaan yang mengehadkan amaun data yang boleh dibaca.",
        "Documentation.LongDescription": "Mengembalikan format perduaan yang mengehadkan jumlah data yang boleh dibaca.  <code>BinaryFormat.List</code> dan <code>BinaryFormat.Binary</code> boleh digunakan untuk membaca sehingga hujung data.  <code>BinaryFormat.Length</code> boleh digunakan untuk mengehadkan bilangan bait yang dibaca.  Parameter <code>binaryFormat</code> menentukan format perduaan untuk dihadkan.  Parameter <code>length</code> menentukan bilangan bait untuk dibaca.  Parameter <code>length</code> mungkin sama ada nilai nombor atau nilai format perduaan yang menentukan format bagi nilai panjang yang muncul yang mendahului nilai yang sedang dibaca.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "Hadkan bilangan bait yang dibaca kepada 2 semasa membaca senarai bait.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Hadkan bilangan bait yang dibaca semasa membaca senarai bait kepada nilai bait yang mendahului senarai.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "Mengembalikan format perduaan yang akan mentransformasikan nilai yang dibaca oleh format perduaan lain.",
        "Documentation.LongDescription": "Mengembalikan format perduaan yang akan mentransformasikan nilai yang dibaca oleh format perduaan lain.  Parameter <code>binaryFormat</code> menentukan format perduaan yang akan digunakan untuk membaca nilai.  <code>function</code> dijalankan dengan nilai dibaca dan mengembalikan nilai yang ditransformasikan.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "Baca bait dan tambah satu padanya.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "Kembalikan fungsi pembanding yang menggunakan peraturan Ordinal untuk membandingkan nilai.",
        "Documentation.LongDescription": "Mengembalikan fungsi pembanding yang menggunakan peraturan Ordinal untuk membandingkan nilai yang diberikan <code>x</code> dan <code>y</code>.<br>\r\n      <br>\r\n      Fungsi pembanding menerima dua argumen dan mengembalikan -1, 0 atau 1 berdasarkan sama ada nilai pertama kurang daripada, sama dengan atau lebih besar daripada yang kedua.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Menggunakan peraturan Ordinal, bandingkan jika \"encyclopædia\" dan \"encyclopaedia\" adalah sama. Perhatikan bahawa ini adalah sama dengan menggunakan <code>Comparer.FromCulture(\"en-US\")</code>. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "Kembalikan fungsi pembanding tidak sensitif huruf besar atau kecil yang menggunakan peraturan Ordinal untuk membanding nilai.",
        "Documentation.LongDescription": "Mengembalikan fungsi pembanding tidak sensitif huruf besar atau kecil yang menggunakan peraturan Ordinal untuk membandingkan nilai yang diberikan <code>x</code> dan <code>y</code>.<br>\r\n        <br>\r\n        Fungsi pembanding menerima dua argumen dan mengembalikan -1, 0 atau 1 berdasarkan sama ada nilai pertama adalah kurang daripada, sama dengan atau lebih besar daripada yang kedua.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Menggunakan peraturan Ordinal tidak sensitif huruf besar atau kecil, bandingkan \"Abc\" dengan \"abc\". Perhatikan \"Abc\" adalah kurang daripada \"abc\" dengan menggunakan <code>Comparer.Ordinal</code>. ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "Mengembalikan sifat bagi atribut dimensi.",
        "Documentation.LongDescription": "Mengembalikan sifat <code>propertyName</code> atribut dimensi <code>attribute</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "Mengembalikan sifat ukuran (sifat sel).",
        "Documentation.LongDescription": "Mengembalikan sifat <code>propertyName</code> atribut dimensi <code>measure</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL Sumber Pertanyaan",
        "Documentation.LongDescription": "Takrifkan sumber data Databricks untuk menjalankan SQL pertanyaan"
      },
      "ReturnType": "Databricks SQL Pertanyaan",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL Sumber Pertanyaan",
        "Documentation.LongDescription": "Takrifkan sumber data Databricks untuk menjalankan SQL pertanyaan"
      },
      "ReturnType": "Databricks SQL Pertanyaan",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "Menambah hari yang ditentukan pada tarikh.",
        "Documentation.LongDescription": "Mengembalikan hasil <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> daripada menambah <code>numberOfDays</code> hari pada nilai <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> pada yang mana hari ditambah.</li>\r\n      <li><code>numberOfDays</code>: Bilangan hari untuk ditambah.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tambah 5 hari pada nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh 5/14/2011.",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "Menambah bulan yang ditentukan pada tarikh.",
        "Documentation.LongDescription": "Mengembalikan hasil <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> daripada menambah <code>numberOfMonths</code> bulan pada nilai <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> pada yang mana bulan ditambah.</li>\r\n        <li><code>numberOfMonths</code>: Bilangan bulan untuk ditambah.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tambah 5 bulan pada nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh 5/14/2011.",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "Tambah 18 bulan pada nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh dan masa 5/14/2011 5/14/2011 08:15:22 AM.",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "Menambah suku yang ditentukan pada tarikh.",
        "Documentation.LongDescription": "Mengembalikan hasil <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> daripada menambah <code>numberOfQuarters</code> suku pada nilai <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> pada yang mana suku ditambah.</li>\r\n      <li><code>numberOfQuarters</code>: Bilangan suku untuk ditambah.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tambah 1 suku pada nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh 5/14/2011.",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "Menambah minggu yang ditentukan pada tarikh.",
        "Documentation.LongDescription": "Mengembalikan hasil <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> daripada menambah <code>numberOfWeeks</code> minggu pada nilai <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> pada yang mana minggu ditambah.</li>\r\n      <li><code>numberOfWeeks</code>: Bilangan minggu untuk ditambah.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tambah 2 minggu pada nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh 5/14/2011.",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "Menambah tahun yang ditentukan pada tarikh.",
        "Documentation.LongDescription": "Mengembalikan hasil <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> daripada menambah <code>numberOfYears</code> pada nilai <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> pada yang mana tahun ditambah.</li>\r\n        <li><code>numberOfYears</code>: Bilangan tahun untuk ditambah.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tambah 4 tahun pada nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh 5/14/2011.",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "Tambah 10 tahun pada nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh dan masa 5/14/2011 5/14/2011 08:15:22 AM.",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan hari seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan hari seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>days</code>: Bilangan hari.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika hari selepas masa sistem semasa adalah dalam dua hari kemudian.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan bulan seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan bulan seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>months</code>: Bilangan bulan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika bulan selepas masa sistem semasa adalah dalam dua bulan kemudian.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan suku tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan suku tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>quarters</code>: Bilangan suku tahun.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika suku tahun selepas masa sistem semasa adalah dalam dua suku tahun yang seterusnya.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan minggu seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan minggu seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>weeks</code>: Bilangan minggu.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika minggu selepas masa sistem semasa adalah dalam dua minggu yang seterusnya.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>years</code>: Bilangan tahun.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika  tahun selepas masa sistem semasa adalah dalam dua tahun seterusnya.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan hari sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan hari sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>days</code>: Bilangan hari.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika hari sebelum masa sistem semasa adalah dalam dua hari sebelumnya.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan bulan sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan bulan sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>months</code>: Bilangan bulan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika bulan sebelum masa sistem semasa adalah dalam dua bulan sebelumnya.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan suku tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan suku tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>quarters</code>: Bilangan suku tahun.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika suku tahun sebelum masa sistem semasa adalah dalam dua suku tahun yang sebelumnya.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan minggu sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan minggu sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>weeks</code>: Bilangan minggu.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika minggu sebelum masa sistem semasa adalah dalam dua minggu yang sebelumnya.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bilangan tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>years</code>: Bilangan tahun.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nyatakan jika tahun sebelum masa sistem semasa adalah dalam dua tahun yang sebelumnya.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "Tambah maklumat zon masa pada nilai tarikh masa.",
        "Documentation.LongDescription": "Menambah maklumat zon waktu kepada nilai <code>dateTime</code>. Maklumat zon waktu termasuk <code>timezoneHours</code> dan secara pilihan <code>timezoneMinutes</code>, yang menentukan ofset yang diingini dari masa UTC.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Setkan zon waktu kepada UTC+7:30 (7 jam dan 30 minit UTC yang lalu).",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada bilangan jam seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan jam seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>hours</code>: Bilangan jam.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam dua jam seterusnya.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada bilangan minit seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan minit seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>minutes</code>: Bilangan minit.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam dua minit seterusnya.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada bilangan saat seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan saat seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>seconds</code>: Bilangan saat.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam dua saat seterusnya.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada bilangan jam sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan jam sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>hours</code>: Bilangan jam.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam dua jam sebelumnya.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada bilangan minit sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan minit sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>minutes</code>: Bilangan minit.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam dua minit sebelumnya.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada bilangan saat sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bilangan saat sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      <li><code>seconds</code>: Bilangan saat.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam dua saat sebelumnya.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "Menukar zon waktu bagi nilai.",
        "Documentation.LongDescription": "Menukar maklumat zon waktu kepada nilai datetimezone <code>dateTimeZone</code> kepada maklumat zon waktu baru yang ditentukan oleh <code>timezoneHours</code> dan secara pilihan <code>timezoneMinutes</code>.\r\n    Jika <code>dateTimeZone</code> tidak mempunyai komponen zon waktu, pengecualian dikembalikan.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Tukar maklumat zon waktu untuk #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) kepada 8 jam.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "Tukar maklumat zon waktu untuk #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) kepada -30 minit.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "Akses nilai mengikut nama dalam gabungan terbenam.",
        "Documentation.LongDescription": "Akses nilai mengikut nama dalam gabungan terbenam.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "Membuat fungsi dengan tandatangan parameter khusus di sebelah atas fungsi yang mengambil argumen senarai tunggal",
        "Documentation.LongDescription": "Mengambil fungsi sesatu <code>function</code> dan mencipta fungsi baharu dengan jenis <code>functionType</code> yang membina senarai daripada argumennya dan memberikannya kepada <code>function</code>.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Menukarkan List.Sum ke dalam fungsi dua argumen yang argumennya dijumlahkan",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "Menukarkan fungsi dengan mengambil senarai ke dalam fungsi dua argumen",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "Menjalankan fungsi yang ditentukan",
        "Documentation.LongDescription": "Menjalankan fungsi yang ditentukan menggunakan senarai argumen yang khusus dan mengembalikan hasil.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Menjalankan Record.FieldNames dengan satu argumen [A=1,B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "Kerahkan fungsi yang diberi selepas tempoh yang ditentukan telah dihantar.",
        "Documentation.LongDescription": "Kembalikan hasil kerahan <code>function</code> selepas tempoh <code>delay</code> telah dihantar.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "Mencipta fungsi skalar di atas fungsi vektor, menggabungkan pelbagai doa.",
        "Documentation.LongDescription": "<p>Mengembalikan fungsi skalar jenis <code>scalarFunctionType</code> yang memanggil <code>vectorFunction</code> ​​dengan satu baris argumen dan mengembalikan output tunggalnya. Selain itu, apabila fungsi skalar digunakan berulang kali untuk setiap baris jadual input, seperti dalam Table.AddColumn, <code>vectorFunction</code> akan digunakan sekali untuk semua input. </p>\r\n<p><code>vectorFunction</code> akan diberikan jadual yang lajurnya sepadan dengan nama dan kedudukan parameter <code>scalarFunctionType</code>. Setiap baris jadual ini mengandungi argumen untuk satu panggilan ke fungsi skalar, dengan lajur yang sepadan dengan parameter <code>scalarFunctionType</code>. </p>\r\n<p><code>vectorFunction</code> mesti mengembalikan senarai yang panjangnya sama dengan jadual input, itemnya pada setiap kedudukan mestilah hasil yang sama seperti menilai fungsi skalar pada baris input kedudukan yang sama. </p>\r\n<p> Jadual input dijangka akan distrim masuk, maka <code>vectorFunction</code> dijangka akan menstrim outputnya apabila input masuk, hanya mengendalikan satu ketulan input pada satu-satu masa. Secara khususnya, <code>vectorFunction</code> tidak boleh mengangkakan jadual inputnya lebih daripada sekali. </p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "Mencipta rekod yang mewakili titik geografi daripada bahagian.",
        "Documentation.LongDescription": "Mencipta rekod yang mewakili titik geografi daripada bahagian unsurnya, seperti longitud, latitud dan jika ada, ketinggian (Z) dan ukuran (M). Pengecam rujukan ruang pilihan (SRID) boleh diberikan jika berbeza daripada nilai lalai (4326).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "Mencipta rekod yang mewakili titik geometri daripada bahagian.",
        "Documentation.LongDescription": "Mencipta rekod yang mewakili titik geometri daripada bahagian unsurnya, seperti koordinat X, koordinat Y dan jika ada, koordinat Z dan ukuran (M). Pengecam rujukan ruang pilihan (SRID) boleh diberikan jika berbeza daripada nilai lalai (0).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "Mencipta identiti.",
        "Documentation.LongDescription": "Mencipta identiti.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "Menentukan sama ada identiti ialah ahli bagi koleksi identiti.",
        "Documentation.LongDescription": "Menentukan sama ada identiti ialah ahli bagi koleksi identiti.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "Mengembalikan senarai yang terdiri daripada semua elemen ofset bernombor genap dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan senarai yang terdiri daripada semua elemen ofset bernombor genap dalam senarai. Bersaling seli antara mengambil dan melangkau nilai daripada senarai <code>list</code> bergantung pada parameter.\r\n    <ul>\r\n    <li><code>count</code>: Menentukan bilangan nilai yang dilangkau pada setiap masa.</li>\r\n    <li><code>repeatInterval</code>: Selang perulangan pilihan untuk menunjukkan bilangan nilai ditambah antara nilai yang dilangkau.</li>\r\n    <li><code>offset</code>: Parameter ofset pilihan untuk mula melangkau nilai pada ofset asal.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada {1..10} yang melangkau nombor pertama.",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "Cipta senarai daripada {1..10} yang melangkau setiap nombor lain.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "Cipta senarai daripada {1..10} yang bermula pada 1 dan melangkau setiap nombor lain.",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "Cipta senarai daripada {1..10} yang bermula pada 1, melangkau satu nilai, mengekalkan dua nilai dan seterusnya.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "Menunjukkan sama ada senarai mengandungi nilai.",
        "Documentation.LongDescription": "Menunjukkan sama ada senarai <code>list</code> mengandungi nilai <code>value</code>.\r\n    Mengembalikan benar jika nilai ditemui dalam senarai, palsu jika sebaliknya. Nilai kriteria persamaan pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3, 4, 5} mengandungi 3.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3, 4, 5} mengandungi 6.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "Menunjukkan yang mana senarai menyertakan semua nilai dalam senarai lain.",
        "Documentation.LongDescription": "Menunjukkan sama ada senarai <code>list</code> menyertakan semua nilai dalam senarai lain, <code>values</code>.\r\n    Mengembalikan benar jika nilai ditemui dalam senarai, palsu jika sebaliknya. Nilai kriteria persamaan pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3, 4, 5} mengandungi 3 dan 4.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3, 4, 5} mengandungi 5 dan 6.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "Menunjukkan yang mana senarai menyertakan sebarang nilai dalam senarai lain.",
        "Documentation.LongDescription": "Menunjukkan sama ada senarai <code>list</code> menyertakan sebarang nilai dalam senarai lain, <code>values</code>.\r\n        Mengembalikan benar jika nilai ditemui dalam senarai, palsu jika sebaliknya. Nilai kriteria persamaan pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3, 4, 5} mengandungi 3 atau 9.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3, 4, 5} mengandungi 6 atau 7.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "Mengembalikan kovarians antara dua senarai nombor.",
        "Documentation.LongDescription": "Mengembalikan kovarians antara dua senarai, <code>numberList1</code> dan <code>numberList2</code>. <code>numberList1</code> dan <code>numberList2</code> mesti mengandungi bilangan nilai <code>number</code> yang sama.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Kira kovarians antara dua senarai.",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "Mengembalikan perbezaan dua senarai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan item dalam senarai <code>list1</code> yang tidak muncul dalam senarai <code>list2</code>. Nilai pendua disokong.\r\n    Nilai kriteria persamaan pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Cari item dalam senarai {1, 2, 3, 4, 5} yang tidak muncul dalam {4, 5, 3}.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "Cari item dalam senarai {1, 2} yang tidak muncul dalam {1, 2, 3}.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "Mengembalikan senarai nilai (termasuk medan rekod) yang mengandungi teks yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai daripada senarai <code>list</code>, yang mengandungi nilai tersebut <code>text</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai teks dalam senarai {\"a\", \"b\", \"ab\"} yang sepadan dengan \"a\". ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "Mengembalikan set pertama item dalam senarai dengan menentukan bilangan item untuk dikembalikan atau syarat kelayakan.",
        "Documentation.LongDescription": " <ul>\r\n  <li>Jika nombor ditentukan, item sebanyak itu akan dikembalikan. </li>\r\n  <li>Jika syarat ditentukan, semua item dikembalikan yang pada asalnya memenuhi syarat. Setelah item gagal syarat tersebut, tiada item selanjutnya akan dipertimbangkan. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai asal dalam senarai {3, 4, 5, -1, 7, 8, 2} yang lebih besar daripada sifar 0.",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "Mengembalikan benar jika fungsi syarat dipuaskan oleh semua nilai dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan <code>true</code> jika fungsi syarat, <code>condition</code>, dipuaskan oleh semua nilai dalam senarai <code>list</code>, sebaliknya mengembalikan <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Menentukan sama ada semua nilai dalam senarai {11, 12, 13} adalah lebih besar daripada 10.",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Menentukan sama ada semua nilai dalam senarai {1, 2, 3} adalah lebih besar daripada 10.",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "Mengembalikan benar jika fungsi syarat dipuaskan oleh sebarang nilai.",
        "Documentation.LongDescription": "Mengembalikan <code>true</code> jika fungsi syarat, <code>condition</code>, dipuaskan oleh sebarang nilai dalam senarai <code>list</code>, sebaliknya mengembalikan <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari jika sebarang nilai dalam senarai {9, 10, 11} yang lebih besar daripada 10.",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Cari jika sebarang nilai dalam senarai {1, 2, 3} yang lebih besar daripada 10.",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "Mengembalikan nilai maksimum dalam senarai. Bilangan nilai untuk dikembalikan atau syarat penapisan mesti ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai maksimum dalam senarai, <code>list</code>.\r\n    Selepas baris disusun, parameter pilihan boleh ditentukan untuk menapis selanjutnya hasil. Parameter pilihan <code>countOrCondition</code> menentukan bilangan nilai untuk dikembalikan atau syarat penapisan. Parameter pilihan <code>comparisonCriteria</code> menentukan cara untuk membandingkan nilai dalam senarai.\r\n <ul>\r\n        <li> <code>list</code>: Senarai nilai.</li>\r\n        <li> <code>countOrCondition</code>: Jika nombor ditentukan, senarai sehingga <code>countOrCondition</code> item dalam urutan menaik dikembalikan. Jika syarat ditentukan, senarai item yang pada asalnya memenuhi syarat dikembalikan. Setelah item gagal syarat tersebut, tiada item selanjutnya akan dipertimbangkan.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Pilihan]</i> Nilai <code>comparisonCriteria</code> pilihan boleh ditentukan untuk menentukan cara untuk membandingkan item dalam senarai. Jika parameter ini ialah nol, pembanding lalai digunakan.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "Mengembalikan nilai minimum dalam senarai. Bilangan nilai untuk dikembalikan atau syarat penapisan boleh ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai minimum dalam senarai, <code>list</code>.\r\n    Parameter, <code>countOrCondition</code>, menentukan bilangan nilai untuk dikembalikan atau syarat penapisan. Parameter pilihan, <code>comparisonCriteria</code>, menentukan cara untuk membandingkan nilai dalam senarai.\r\n <ul>\r\n        <li> <code>list</code>: Senarai nilai.</li>\r\n        <li> <code>countOrCondition</code>: Jika nombor ditentukan, senarai sehingga <code>countOrCondition</code> item dalam urutan menaik dikembalikan. Jika syarat ditentukan, senarai item yang pada asalnya memenuhi syarat dikembalikan. Setelah item gagal syarat tersebut, tiada item selanjutnya akan dipertimbangkan. Jika parameter ini ialah nol, nilai terkecil tunggal dalam senarai akan dikembalikan.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Pilihan]</i> Nilai <code>comparisonCriteria</code> pilihan boleh ditentukan untuk menentukan cara untuk membandingkan item dalam senarai. Jika parameter ini ialah nol, pembanding lalai digunakan.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Cari 5 nilai terkecil dalam senarai <code>{3, 4, 5, -1, 7, 8, 2}</code>.",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "Mengembalikan senarai nombor yang diberi nilai asal, kiraan dan nilai tokokan pilihan.",
        "Documentation.LongDescription": "Mengembalikan senarai nombor yang diberi nilai asal, kiraan dan nilai tokokan pilihan. Nilai tokokan lalai ialah 1.\r\n<ul>\r\n   <li><code>start</code>: Nilai awal dalam senarai.</li>\r\n   <li><code>count</code>: Bilangan nilai untuk dicipta.</li>\r\n   <li><code>increment</code>: <i>[Pilihan]</i> Nilai untuk ditokok. Jika nilai dikecualikan ditokok sebanyak 1.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Jana senarai 10 nombor berturutan yang bermula pada 1.",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "Jana senarai 10 nombor yang bermula pada 1, dengan tokokan 2 untuk setiap nombor seterusnya.",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "Mengembalikan satu atau lebih seperseratusan yang sepadan dengan kemungkinan yang diberikan.",
        "Documentation.LongDescription": "Mengembalikan satu atau lebih seperseratusan bagi senarai <code>list</code>. Jika nilai <code>percentiles</code> ialah nombor antara 0.0 hingga 1.0, ia akan dianggap sebagai seperseratusan dan hasil akan menjadi\r\n    nilai tunggal yang sepadan dengan kemungkinan tersebut. Jika nilai <code>percentiles</code> ialah senarai nombor dengan nilai antara 0.0 hingga 1.0, hasil akan menjadi senarai seperseratusan\r\n    yang sepadan dengan kemungkinan input. Mod PercentileMode dalam <code>options</code> boleh digunakan oleh pengguna lanjutan untuk memilih kaedah sisipan yang lebih khusus tetapi tidak disyorkan untuk kebanyakan pengguna.\r\n    Simbol yang dipratakrif <code>PercentileMode.ExcelInc</code> dan <code>PercentileMode.ExcelExc</code> sepadan dengan kaedah sisipan yang digunakan oleh fungsi Excel\r\n    <code>PERCENTILE.INC</code> dan <code>PERCENTILE.EXC</code>. Tingkah laku lalai sepadan dengan <code>PercentileMode.ExcelInc</code>. Simbol\r\n    <code>PercentileMode.SqlCont</code> dan <code>PercentileMode.SqlDisc</code> sepadan dengan tingkah laku Pelayan SQL untuk <code>PERCENTILE_CONT</code> dan\r\n    <code>PERCENTILE_DISC</code>, masing-masing.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Cari kuartil pertama bagi senarai <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Cari kuartil bagi senarai <code>{5, 3, 1, 7, 9}</code> menggunakan kaedah sisipan yang sepadan dengan <code>PERCENTILE.EXC</code> Excel.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "Mengembalikan ofset bagi nilai dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan ofset pada yang mana nilai <code>value</code> muncul dalam senarai <code>list</code>. Mengembalikan -1 jika nilai tidak muncul.\r\n    Parameter tika pilihan <code>occurrence</code> boleh ditentukan.\r\n<ul>\r\n   <li><code>occurrence</code>: Bilangan maksimum tika untuk dilaporkan.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Cari kedudukan dalam senarai {1, 2, 3} pada yang mana nilai 3 muncul.",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "Mengembalikan ofset pertama bagi nilai dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan ofset dalam senarai <code>list</code> bagi tika pertama nilai dalam senarai <code>values</code>. Mengembalikan -1 jika tiada tika ditemui.\r\n    Parameter tika pilihan <code>occurrence</code> boleh ditentukan.\r\n<ul>\r\n   <li><code>occurrence</code>: Bilangan maksimum tika yang boleh dikembalikan.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Kedudukan pertama dalam senarai {1, 2, 3} pada yang mana nilai 2 atau 3 muncul.",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "Mengembalikan subset senarai yang bermula di ofset.",
        "Documentation.LongDescription": "Mengembalikan subset senarai yang bermula di ofset <code>list</code>. Parameter pilihan, <code>offset</code>, mengesetkan bilangan maksimum item dalam subset.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari subset yang bermula pada ofset 6 pada senarai nombor 1 hingga 10.",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "Cari subset dengan panjang 2 dari ofset 6, daripada senarai nombor 1 hingga 10.",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "Mengalih keluar item daripada senarai1 yang hadir dalam senarai.",
        "Documentation.LongDescription": "Mengalih keluar semua tika nilai yang ditentukan dalam <code>list2</code> daripada <code>list1</code>. Jika nilai dalam <code>list2</code> tidak wujud dalam <code>list1</code>, senarai asal dikembalikan.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Mengalih keluar item dalam senarai {2, 4, 6} daripada senarai {1, 2, 3, 4, 2, 5, 5}.",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "Mengalih keluar semua tika nilai input.",
        "Documentation.LongDescription": "Mengalih keluar semua tika nilai yang ditentukan dalam <code>list2</code> daripada senarai <code>list1</code>. Jika nilai dalam <code>list2</code> tidak wujud dalam <code>list1</code>, senarai asal dikembalikan.\r\n    Nilai kriteria persamaan pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada {1, 2, 3, 4, 5, 5} tanpa {1, 5}.",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "Mengalih keluar nombor kiraan bagi nilai yang bermula di lokasi yang ditentukan.",
        "Documentation.LongDescription": "Mengalih keluar nilai <code>count</code> dalam <code>list</code> yang bermula di lokasi yang ditentukan, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Mengalih keluar 3 nilai dalam senarai {1, 2, 3, 4, -6, -2, -1, 5} bermula pada indeks 4.",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "Mengembalikan senarai yang merupakan perulangan kiraan senarai asal.",
        "Documentation.LongDescription": "Mengembalikan senarai yang merupakan <code>count</code> perulangan senarai asal, <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai yang mempunyai {1, 2} diulang 3 kali.",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "Menggunakan setiap gantian bagi { old, new }.",
        "Documentation.LongDescription": "Melaksanakan gantian yang ditentukan pada senarai <code>list</code>. Operasi penggantian <code>replacements</code> terdiri daripada senarai dengan dua nilai, nilai lama dan nilai baru, diberi dalam senarai.\r\n    Nilai kriteria persamaan pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada {1, 2, 3, 4, 5} menggantikan nilai 5 dengan -5 dan nilai 1 dengan -1.",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "Mengembalikan senarai nilai yang sepadan dengan syarat.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai daripada senarai <code>list</code>, yang sepadan dengan syarat pilihan <code>selection</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai dalam senarai {1, -3, 4, 9, -2} yang lebih besar daripada sifar 0.",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "Memisahkan senarai yang ditentukan kepada senarai yang mengandungi senarai menggunakan saiz halaman yang ditentukan.",
        "Documentation.LongDescription": "Memisahkan <code>list</code> kepada satu senarai bagi beberapa senarai dengan unsur pertama senarai output ialah senarai yang mengandungi <code>pageSize</code> unsur pertama daripada\r\n    senarai sumber, unsur seterusnya dalam senarai output ialah senarai yang mengandungi <code>pageSize</code> unsur berikutnya daripada senarai sumber, dan sebagainya.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "Mengembalikan senarai baru nilai yang dikira daripada senarai ini.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai baru dengan menggunakan fungsi transformasi <code>transform</code> pada senarai, <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Tambah 1 pada setiap nilai dalam senarai {1, 2}.",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "Mengembalikan lengkok tangen bagi pembahagian dua nombor.",
        "Documentation.LongDescription": "Mengembalikan lengkok tangen bagi pembahagian dua nombor, <code>y</code> dan <code>x</code>. Pembahagian akan dibina sebagai <code>y</code>/<code>x</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "Mengembalikan hasil daripada melaksanakan operasi bit \"Dan\" antara dua input.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada melaksanakan operasi bit \"Dan\" antara <code>number1</code> dan <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "Mengembalikan hasil daripada melaksanakan bit \"Atau\" antara dua input.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada melaksanakan bit \"Atau\" antara <code>number1</code> dan <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "Menganjak set bit ke kiri.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada melaksanakan anjakan bit ke kiri pada <code>number1</code>, sebanyak bilangan bit yang ditentukan <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "Menganjak set bit ke kanan.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada melaksanakan anjakan bit ke kanan pada <code>number1</code>, sebanyak bilangan bit yang ditentukan <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "Mengembalikan hasil daripada melaksanakan bit \"XOR\" (Exclusive-OR) antara dua input.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada melaksanakan bit \"XOR\" (Exclusive-OR) antara <code>number1</code> dan <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "Mengembalikan bilangan gabungan unik.",
        "Documentation.LongDescription": "Mengembalikan bilangan gabungan unik daripada senarai item, <code>setSize</code> dengan saiz gabungan ditentukan, <code>combinationSize</code>.\r\n<ul>\r\n    <li><code>setSize</code>: Bilangan item dalam senarai.</li>\r\n    <li><code>combinationSize</code>: Bilangan item dalam setiap gabungan.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan gabungan daripada sejumlah 5 item apabila setiap gabungan ialah satu kumpulan 3 item.",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "Membahagikan dua nombor dan mengembalikan bahagian integer daripada hasil.",
        "Documentation.LongDescription": "Mengembalikan bahagian integer daripada hasil membahagikan nombor, <code>number1</code>, dengan nombor lain, <code>number2</code>.\r\n    Jika <code>number1</code> atau <code>number2</code> adalah nol, <code>Number.IntegerDivide</code> mengembalikan nol.\r\n      <ul>\r\n        <li><code>number1</code>: Pembahagi.</li>\r\n        <li><code>number2</code>: Pembahagi.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Bahagikan 6 dengan 4.",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "Bahagikan 8.3 dengan 3.",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "Integer membahagikan dua nombor dan mengembalikan bakinya.",
        "Documentation.LongDescription": "Mengembalikan baki yang terhasil daripada pembahagian integer <code>number</code> dengan <code>divisor</code>.\r\n    Jika <code>number</code> atau <code>divisor</code> adalah nol, <code>Number.Mod</code> mengembalikan nol.\r\n      <ul>\r\n        <li><code>number</code>: Pembahagi.</li>\r\n        <li><code>divisor</code>: Pembahagi.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Cari baki apabila anda membahagikan 5 dengan 3.",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "Mengembalikan bilangan pilih atur.",
        "Documentation.LongDescription": "Mengembalikan bilangan pilih atur yang boleh dijana daripada bilangan item, <code>setSize</code>, dengan saiz pilih atur yang ditentukan, <code>permutationSize</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan pilih atur daripada sejumlah 5 item dalam kumpulan 3 item.",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "Menguasakan nombor kepada kuasa yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menguasakan <code>number</code> kepada kuasa <code>power</code>. \r\n    Jika <code>number</code> atau <code>power</code> adalah nol, <code>Number.Power</code> mengembalikan nol.\r\n      <ul>\r\n        <li><code>number</code>: Asas.</li>\r\n        <li><code>power</code>: Eksponen.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai bagi 5 yang dikuasakan kepada kuasa 3 (5 kuasa tiga).",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "Mengembalikan nombor rawak antara dua nombor.",
        "Documentation.LongDescription": "Mengembalikan nombor rawak antara <code>bottom</code> dan <code>top</code>.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nombor rawak antara 1 dan 5.",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "Mengembalikan nilai bagi medan yang ditentukan dalam rekod.",
        "Documentation.LongDescription": "Mengembalikan nilai bagi <code>field</code> yang ditentukan dalam <code>record</code>. Jika medan tidak ditemui, pengecualian dikembalikan.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai medan \"CustomerID\" dalam rekod.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "Mengembalikan nilai bagi medan yang ditentukan dalam rekod atau nilai lalai jika medan tidak ditemui.",
        "Documentation.LongDescription": "Mengembalikan nilai bagi medan <code>field</code> yang ditentukan dalam rekod <code>record</code>. Jika medan tidak ditemui, <code>defaultValue</code> pilihan dikembalikan.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai medan \"Phone\" dalam rekod atau kembalikan nol jika ia tidak wujud.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "Cari nilai medan \"Phone\" dalam rekod atau kembalikan nilai lalai jika ia tidak wujud.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "Mengembalikan rekod jika senarai nilai medan dan set medan ditentukan.",
        "Documentation.LongDescription": "Mengembalikan rekod jika <code>list</code> nilai medan dan set medan ditentukan.  <code>fields</code> boleh ditentukan sama ada oleh senarai nilai teks atau jenis rekod.  Ralat dikembalikan jika medan bukan unik.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Bina rekod daripada senarai nilai medan dan senarai nama medan.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Bina rekod daripada senarai nilai medan dan jenis rekod.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "Menunjukkan sama ada rekod mempunyai medan yang ditentukan.",
        "Documentation.LongDescription": "Menunjukkan sama ada rekod <code>record</code> mempunyai medan ditentukan dalam <code>fields</code>, dengan mengembalikan nilai logik (benar atau palsu).\r\n    Berbilang nilai medan boleh ditentukan menggunakan senarai.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Semak sama ada rekod mempunyai medan \"CustomerID\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "Semak sama ada rekod mempunyai medan \"CustomerID\" dan \"Address\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "Mengalih keluar medan yang ditentukan daripada rekod input.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengalih keluar semua medan yang ditentukan dalam senarai <code>fields</code> daripada input <code>record</code>. Jika medan yang ditentukan tidak wujud, pengecualian dikembalikan.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluarkan medan \"Price\" daripada rekod.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "Alih keluarkan medan \"Price\" dan \"Item\" daripada rekod.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "Menggunakan nama semula daripada senarai dalam bentuk { old, new }.",
        "Documentation.LongDescription": "Mengembalikan rekod selepas menamakan semula medan dalam input <code>record</code> kepada nama medan baru yang ditentukan dalam senarai <code>renames</code>. Untuk berbilang nama semula, senarai tersarang boleh digunakan ({ {old1, new1}, {old2, new2} }.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Namakan semua medan \"UnitPrice\" ke \"Price\" daripada rekod.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "Namakan semula medan \"UnitPrice\" ke \"Price\" dan \"OrderNum\" ke \"OrderID\" daripada rekod.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "Menyusun semula medan yang ditentukan kepada susunan baru.",
        "Documentation.LongDescription": "Mengembalikan rekod selepas menyusun semula medan dalam <code>record</code> dalam susunan medan yang ditentukan dalam senarai <code>fieldOrder</code>. Nilai medan dikekalkan dan medan yang tidak disenaraikan dalam <code>fieldOrder</code> ditinggalkan di kedudukan asalnya.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Susun semula beberapa medan dalam rekod.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "Mengembalikan rekod yang mengandungi medan yang ditentukan sahaja.",
        "Documentation.LongDescription": "Mengembalikan rekod yang termasuk medan yang ditentukan sahaja dalam senarai <code>fields</code> daripada input <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Pilih medan \"Item\" dan \"Price\" dalam rekod.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "Mengembalikan rekod selepas menggunakan transformasi yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan rekod selepas menggunakan transformasi yang ditentukan dalam senarai <code>transformOperations</code> pada <code>record</code>.\r\n    Satu atau lebih medan boleh ditransformasikan pada masa tertentu. \r\n      <div>Dalam kes medan tunggal ditransformasikan, <code>transformOperations</code> dijangka menjadi senarai dengan dua item. Item pertama dalam <code>transformOperations</code> menentukan nama medan dan item kedua dalam <code>transformOperations</code> menentukan fungsi untuk digunakan bagi transformasi. Contohnya, <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>Dalam keadaan berbilang medan ditransformasikan, <code>transformOperations</code> dijangka menjadi senarai untuk senarai, yang mana setiap senarai dalaman ialah pasangan nama medan dan operasi transformasi. Contohnya, <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Menukarkan medan \"Harga\" kepada nombor.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "Menukarkan medan \"OrderID\" dan \"Harga\" kepada nombor.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks menurut transisi daripada satu jenis aksara kepada yang lain. Parameter {0} dan {1} boleh sama ada senarai aksara atau fungsi yang mengambil aksara dan mengembalikan benar/palsu.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks menurut transisi daripada satu jenis aksara kepada yang lain. Parameter <code>before</code> dan <code>after</code> boleh sama ada senarai aksara atau fungsi yang mengambil aksara dan mengembalikan benar/palsu.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input bila-bila masa huruf besar atau huruf kecil diikuti dengan digit.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "Menukar pertanyaan SQL yang disediakan kepada kod M. Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Menukarkan pertanyaan <code>sql</code> yang disediakan kepada kod M, dengan pengecam tersedia yang ditentukan oleh <code>environment</code>. Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "Mengembalikan lajur data yang ditentukan daripada jadual sebagai senarai.",
        "Documentation.LongDescription": "Mengembalikan lajur data yang ditentukan oleh <code>column</code> daripada jadual <code>table</code> sebagai senarai.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan nilai dalam lajur [Name] daripada jadual.",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "Kembalikan senari dengan nama lajur yang sepadan dengan jenis yang ditentukan.",
        "Documentation.LongDescription": "Kembalikan senarai dengan nama lajur daripda jadual <code>table</code> yang sepadan dengan jenis yang ditentukan dalam <code>listOfTypes</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan nama lajur jenis Number.Type daripada jadual.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "Menunjukkan sama ada rekod yang ditentukan muncul sebagai baris dalam jadual.",
        "Documentation.LongDescription": "Menunjukkan sama ada rekod yang ditentukan, <code>row</code>, muncul sebagai baris dalam <code>table</code>.\r\n    Parameter pilihan <code>equationCriteria</code>, mungkin ditentukan untuk mengawal perbandingan antara baris pada jadual.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada jadual mengandungi baris.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "Tentukan sama ada jadual mengandungi baris.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "Tentukan sama ada jadual mengandungi baris dengan membandingkan lajur [Name] sahaja.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "Menunjukkan sama ada semua rekod yang ditentukan muncul sebagai baris dalam jadual.",
        "Documentation.LongDescription": "Menunjukkan sama ada semua rekod yang ditentukan dalam senarai rekod <code>rows</code>, muncul sebagai baris dalam <code>table</code>.\r\n    Parameter pilihan <code>equationCriteria</code>, mungkin ditentukan untuk mengawal perbandingan antara baris pada jadual.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada jadual mengandungi semua baris, membandingkan lajur sahaja [CustomerID].",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Tentukan sama ada jadual mengandungi semua baris.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "Menunjukkan sama ada sebarang rekod yang ditentukan muncul sebagai baris dalam jadual.",
        "Documentation.LongDescription": "Menunjukkan sama ada sebarang rekod yang ditentukan dalam senarai rekod <code>rows</code>, muncul sebagai baris dalam <code>table</code>.\r\n    Parameter pilihan <code>equationCriteria</code>, mungkin ditentukan untuk mengawal perbandingan antara baris pada jadual.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada jadual <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> mengandungi baris <code>[a = 1, b = 2]</code> atau <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "Tentukan sama ada jadual <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> mengandungi baris <code>[a = 1, b = 3]</code> atau <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "Tentukan sama ada jadual <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> mengandungi baris <code>[a = 1, b = 3]</code> atau <code>[a = 3, b = 5]</code> dengan membandingkan lajur sahaja [a].",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "menunjukkan sama ada jadual mengandungi lajur yang ditentukan.",
        "Documentation.LongDescription": "Menunjukkan sama ada <code>table</code> mengandungi lajur yang ditentukan, <code>columns</code>. Mengembalikan <code>true</code> jika jadual mengandungi lajur, <code>false</code> jika sebaliknya.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada jadual mempunyai lajur [Name].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Carikan sama ada jadual mempunyai lajur [Name] dan [PhoneNumber].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "Menunjukkan sama ada semua baris dalam jadual mencapai syarat yang ditentukan.",
        "Documentation.LongDescription": "Menunjukkan sama ada semua baris dalam <code>table</code> sepadan dengan <code>condition</code> yang ditentukan. Mengembalikan <code>true</code> jika semua baris sepadan, <code>false</code> sebaliknya.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama anda semua nilai baris dalam lajur [a] adalah genap dalam jadual.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "Cari sama ada semua nilai baris ialah [a = 1, b = 2], dalam jadual <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "Menunjukkan sama ada sebarang baris dalam jadual mencapai syarat yang ditentukan.",
        "Documentation.LongDescription": "Menunjukkan sama ada sebarang baris dalam <code>table</code> sepadan dengan <code>condition</code> yang ditentukan. Mengembalikan <code>true</code> jika sebarang baris sepadan, <code>false</code> sebaliknya.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama anda sebarang nilai baris dalam lajur [a] adalah genap dalam jadual <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "Tentukan sama anda sebarang nilai baris adalah [a = 1, b = 2] dalam jadual <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "Mengembalikan baris terbesar atau nilai lalai menggunakan kriteria yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris terbesar dalam <code>table</code>, <code>comparisonCriteria</code> ditentukan. Jika jadual kosong, nilai <code>default</code> pilihan dikembalikan. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Car baris dengan nilai terbesar dalam lajur [a] dalam jadual <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "Car baris dengan nilai terbesar dalam lajur [a] dalam jadual <code>({})</code>. Kembalikan -1 jika kosong.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "Mengembalikan baris terkecil atau nilai lalai menggunakan kriteria yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris terkecil dalam <code>table</code>, <code>comparisonCriteria</code> ditentukan. Jika jadual kosong, nilai <code>default</code> pilihan dikembalikan.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Car baris dengan nilai terkecil dalam lajur [a] dalam jadual.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "Car baris dengan nilai terkecil dalam lajur [a] dalam jadual. Kembalikan -1 jika kosong.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "Mengembalikan kedudukan baris dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan kedudukan baris untuk tika pertama bagi <code>row</code> dalam <code>table</code> yang ditentukan. Mengembalikan -1 jika tiada tika ditemui.\r\n    <ul>\r\n       <li><code>table</code>: Jadual input.</li>\r\n       <li><code>row</code>: Baris dalam jadual untuk mencari kedudukan.</li>\r\n       <li><code>occurrence</code>: <i>[Pilihan]</i> Menentukan tika baris yang mana perlu dikembalikan.</li>\r\n       <li><code>equationCriteria</code>: <i>[Pilihan]</i> Mengawal perbandingan antara baris jadual.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Cari kedudukan tika pertama bagi [a = 2, b = 4] dalam jadual <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "Cari kedudukan tika kedua bagi [a = 2, b = 4] dalam jadual <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "Cari kedudukan semua tika bagi [a = 2, b = 4] dalam jadual <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "Mengembalikan kedudukan sebarang daripada baris yang ditentukan dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan kedudukan baris dari <code>table</code> pada kejadian pertama senarai bagi <code>rows</code>. Mengembalikan -1 jika tiada tika ditemui.\r\n    <ul>\r\n    <li><code>table</code>: Jadual input.</li>\r\n       <li><code>rows</code>:  Senarai baris dalam jadual untuk mencari kedudukan.</li>\r\n       <li><code>occurrence</code>: <i>[Pilihan]</i> Menentukan tika baris yang mana perlu dikembalikan.</li>\r\n       <li><code>equationCriteria</code>: <i>[Pilihan]</i> Mengawal perbandingan antara baris jadual.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Cari kedudukan tika pertama bagi [a = 2, b = 4] atau [a = 6, b = 8] dalam jadual <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "Cari kedudukan semua tika bagi [a = 2, b = 4] atau [a = 6, b = 8] dalam jadual <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "Memisahkan jadual yang ditentukan kepada senarai jadual menggunakan saiz halaman yang ditentukan.",
        "Documentation.LongDescription": "Memisahkan <code>table</code> kepada senarai jadual dengan unsur pertama senarai ialah jadual yang mengandungi <code>pageSize</code> baris pertama daripada\r\n    jadual sumber, unsur seterusnya dalam senarai ialah jadual yang mengandungi <code>pageSize</code> baris berikutnya daripada jadual sumber, dan sebagainya.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan jadual lima rekod kepada dua rekod setiap satunya.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "Mengembalikan senarai mengandungi baris kiraan pertama yang ditentukan dan baris yang tinggal.",
        "Documentation.LongDescription": "Mengembalikan senarai yang mengandungi dua jadual: jadual dengan baris N pertama bagi <code>table</code> (seperti yang ditentukan oleh <code>count</code>) dan jadual yang mengandungi baris yang tinggal bagi <code>table</code>.\r\n\r\nJika jadual bagi senarai yang terhasil dinomborkan tepatnya sekali dan dalam tertib, fungsi akan dinomborkan <code>table</code> hanya sekali.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan dua baris pertama bagi jadual dan baris jadual yang tinggal.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "Mentransformasikan baris jadual menggunakan fungsi transformasi yang ditentukan.",
        "Documentation.LongDescription": "Mencipta <code>senarai</code> dengan menggunakan operasi <code>transform</code> pada setiap baris dalam <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ubah baris jadual kepada senarai nombor.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "Ubah baris jadual angka menjadi rekod teks.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "Mengembalikan bahagian <code>text</code> selepas <code>delimiter</code> yang ditentukan.\r\n    Numerik pilihan <code>index</code> yang menandakan kejadian <code>delimiter</code> yang perlu dipertimbangkan.\r\n    Senarai pilihan <code>index</code> yang menandakan kejadian <code>delimiter</code> yang perlu dipertimbangkan, serta sama ada pengindeksan perlu dilakukan dari mula atau hujung input.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan bahagian \"111-222-333\" selepas sempang (pertama).",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "Dapatkan bahagian \"111-222-333\" selepas sempang kedua.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "Dapatkan bahagian \"111-222-333\" selepas sempang kedua dari hujung.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "Mengembalikan aksara pada kedudukan yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan aksara dalam nilai teks, <code>text</code> di kedudukan <code>index</code>. Aksara pertama dalam teks ialah pada kedudukan 0.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Cari aksara di kedudukan 4 dalam rentetan \"Hello, World\".",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "Mengembalikan bahagian <code>text</code> sebelum <code>delimiter</code> yang ditentukan.\r\n    Numerik pilihan <code>index</code> yang menandakan kejadian <code>delimiter</code> yang perlu dipertimbangkan.\r\n    Senarai pilihan <code>index</code> yang menandakan kejadian <code>delimiter</code> yang perlu dipertimbangkan, serta sama ada pengindeksan perlu dilakukan dari mula atau hujung input.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan bahagian \"111-222-333\" sebelum sempang (pertama).",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "Dapatkan bahagian \"111-222-333\" sebelum sempang kedua.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "Dapatkan bahagian \"111-222-333\" sebelum sempang kedua dari hujung.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "Mengembalikan sama ada teks mengandungi subrentetan.",
        "Documentation.LongDescription": "Mengesan sama ada <code>text</code> mengandungi nilai <code>substring</code>. Mengembalikan benar jika nilai ditemukan. Fungsi ini tidak menyokong aksara bebas atau ungkapan biasa.\r\n      <br>\r\n      <br>\r\n      Argumen pilihan <code>comparer</code> boleh digunakan untuk menentukan perbandingan tidak sensitif huruf atau perbandingan sedar budaya dan tempatan.\r\n      Pembanding terbina dalam berikut tersedia dalam bahasa formula:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Digunakan untuk melaksanakan perbandingan ordinal sensitif huruf</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Digunakan untuk melaksanakan perbandingan ordinal tidak sensitif huruf</li>\r\n        <li> <code>Comparer.FromCulture</code>: Digunakan untuk melaksanakan perbandingan sedar budaya</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Cari sama ada teks \"Hello World\" mengandungi \"Hello\".",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "Cari sama ada teks \"Hello World\" mengandungi \"hello\".",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Cari sama ada teks \"Helo Dunia\" mengandungi \"hello\", menggunakan pembanding tidak sensitif huruf.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "Mengembalikan aksara terakhir bagi teks.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>text</code> yang merupakan aksara <code>count</code> terakhir bagi nilai <code>text</code> <code>text</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan 5 aksara terakhir bagi teks \"Hello, World\".",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "Menunjukkan sama ada teks berakhir dalam nilai yang ditentukan.",
        "Documentation.LongDescription": "Menunjukkan sama ada teks yang ditentukan, <code>text</code>, diakhiri dengan nilai yang ditentukan, <code>substring</code>. Penunjuk adalah sensitif huruf.\r\n\r\n      <div>\r\n        <code>comparer</code> merupakan <code>Comparer</code> yang digunakan untuk mengawal perbandingan. Pembanding boleh digunakan untuk memberikan perbandingan tidak sensitif huruf atau perbandingan sedar budaya dan tempatan.\r\n      </div>\r\n      <div>\r\n        Pembanding terbina dalam berikut tersedia dalam bahasa formula:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Digunakan untuk melaksanakan perbandingan ordinal yang tepat</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Digunakan untuk melaksanakan perbandingan tidak sensitif huruf ordinal yang tepat</li>\r\n        <li> <code>Comparer.FromCulture</code>: Digunakan untuk melaksanakan perbandingan sedar budaya</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Semak sama ada \"Hello, World\" berakhir dengan \"world\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "Semak sama ada \"Hello, World\" berakhir dengan \"World\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "Mengembalikan teks diformat daripada rentetan format dan argumen.",
        "Documentation.LongDescription": "Mengembalikan teks diformatkan yang dicipta dengan menggunakan <code>arguments</code> daripada senarai atau rekod untuk rentetan format <code>formatString</code>. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Format senarai nombor.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "Format jenis data yang berbeza daripada rekod mengikut budaya Inggeris Amerika Syariket.",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "Mengembalikan subrentetan sehingga panjang yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan <code>count</code> aksara atau sehingga akhir <code>text</code>; pada ofset <code>start</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Cari subrentetan dari teks \"Hello World\" bermula pada indeks 6 perentangan 5 aksara.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "Cari subrentetan dari teks \"Hello World\" bermula pada indeks 6 sehingga ke akhir.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "Mengembalikan teks bagi panjang yang ditentukan dengan menambah ruang di hujung teks yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>text</code> yang ditambah pada teks <code>count</code> dengan memasukkan ruang di hujung nilai teks <code>text</code>. \r\n    Aksara pilihan <code>character</code> boleh digunakan untuk menentukan aksara yang digunakan untuk menambah ruang. Aksara pad lalai ialah ruang.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Tambah ruang di hujung nilai teks agar ia sepanjang 10 aksara.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "Tambah ruang di hujung nilai teks dengan \"|\" agar ia sepanjang 10 aksara.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "Mengembalikan teks bagi panjang yang ditentukan dengan menambah ruang di permulaan teks yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>text</code> yang ditambah pada teks <code>count</code> dengan memasukkan ruang di permulaan nilai teks <code>text</code>. \r\n    Aksara pilihan <code>character</code> boleh digunakan untuk menentukan aksara yang digunakan untuk menambah ruang. Aksara pad lalai ialah ruang.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Tambah ruang di permulaan nilai teks agar ia sepanjang 10 aksara.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "Tambah ruang di permulaan nilai teks dengan \"|\" agar ia sepanjang 10 aksara.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "Mengembalikan kedudukan pertama bagi nilai (-1 jika tidak ditemui).",
        "Documentation.LongDescription": "Mengembalikan kedudukan kejadian yang ditentukan bagi nilai teks <code>substring</code> yang ditemui dalam <code>text</code>.\r\n    Parameter pilihan <code>occurrence</code> boleh digunakan untuk menentukan kedudukan kejadian yang perlu dikembalikan (secara lalai kejadian pertama).\r\n    Mengembalikan -1 jika <code>substring</code> tidak ditemui.\r\n\r\n      <div>\r\n        <code>comparer</code> merupakan <code>Comparer</code> yang digunakan untuk mengawal perbandingan. Pembanding boleh digunakan untuk memberikan perbandingan tidak sensitif huruf atau perbandingan sedar budaya dan tempatan.\r\n      </div>\r\n      <div>\r\n        Pembanding terbina dalam berikut tersedia dalam bahasa formula:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Digunakan untuk melaksanakan perbandingan ordinal yang tepat</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Digunakan untuk melaksanakan perbandingan tidak sensitif huruf ordinal yang tepat</li>\r\n        <li> <code>Comparer.FromCulture</code>: Digunakan untuk melaksanakan perbandingan sedar budaya</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan kedudukan pertama kejadian pertama bagi \"World\" dalam teks \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "Dapatkan kedudukan kejadian terakhir bagi \"World\" dalam \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "Mengembalikan kedudukan pertama dalam nilai teks bagi sebarang aksara yang disenaraikan (-1 jika tidak ditemui).",
        "Documentation.LongDescription": "Mengembalikan kedudukan pertama bagi apa-apa aksara dalam senarai <code>characters</code> yang ditemui dalam <code>text</code>. \n    Parameter pilihan <code>occurrence</code> boleh digunakan untuk menentukan kedudukan kejadian yang perlu dikembalikan.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Cari kedudukan pertama bagi \"W\" atau \"H\" dalam teks \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "Cari semua kedudukan \"W\" atau \"H\" dalam teks \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "Mengembalikan subrentetan yang ditemui di ofset.",
        "Documentation.LongDescription": "Mengembalikan subrentetan daripada teks <code>text</code> yang ditemui di ofset <code>offset</code>. \r\n    Parameter pilihan, <code>count</code>, boleh disertakan untuk menentukan bilangan aksara untuk dikembalikan. Mencampakkan ralat jika tidak mempunyai aksara yang cukup.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Cari subrentetan daripada teks \"Hello World\" yang bermula pada indeks 6.",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "Cari subrentetan daripada teks \"Hello World Hello\" yang bermula pada indeks 6 dan menjangkau 5 aksara.",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "Mengalih keluar semua kejadian aksara yang ditentukan atau senarai aksara daripada nilai teks input.",
        "Documentation.LongDescription": "Mengembalikan salinan nilai teks <code>text</code> dengan semua aksara daripada <code>removeChars</code> dialih keluar.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar aksara , dan ; daripada nilai teks.",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "Mengalih keluar kiraan aksara yang bermula di ofset yang ditentukan",
        "Documentation.LongDescription": "Mengembalikan salinan nilai teks <code>text</code> dengan semua aksara daripada kedudukan <code>offset</code> dialih keluar.\r\n    Parameter pilihan, <code>count</code>, boleh digunakan untuk menentukan bilangan aksara untuk dialih keluar. Nilai lalai untuk <code>count</code> ialah 1. Nilai kedudukan bermula di 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar 1 aksara daripada nilai teks \"ABEFC\" di kedudukan 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "Alih keluar dua aksara daripada nilai teks \"ABEFC\" yang bermula di kedudukan 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "Mengembalikan nilai teks yang terdiri daripada teks input yang diulangi bilangan kali yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai teks yang terdiri daripada teks input <code>text</code> yang diulangi <code>count</code> kali.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Ulang teks \"a\" lima kali.",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "Ulang teks \"helloworld\" tiga kali.",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "Memilih semua kejadian aksara atau senarai aksara yang diberikan daripada nilai teks input.",
        "Documentation.LongDescription": "Mengembalikan salinan nilai teks <code>text</code> dengan semua aksara yang tiada dalam <code>selectChars</code> dialih keluar.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Pilih semua aksara dalam julat 'a' hingga 'z' daripada nilai teks.",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "Memisahkan teks menjadi senarai nilai teks berdasarkan pemisah yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai teks yang terhasil daripada memisahkan nilai teks <code>text</code> berdasarkan pemisah yang ditentukan, <code>separator</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada nilai teks terbatas \"|\" \"Name|Address|PhoneNumber\".",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "Mengembalikan senarai nilai teks, dipisahkan pada sebarang aksara dalam pemisah.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai teks yang terhasil daripada memisahkan nilai teks <code>text</code> berdasarkan pada sebarang aksara dalam pemisah yang ditentukan, <code>separators</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada nilai teks \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\".",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "Mengembalikan permulaan teks.",
        "Documentation.LongDescription": "Mengembalikan <code>count</code> aksara pertama bagi <code>text</code> sebagai nilai teks.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan 5 aksara pertama bagi \"Hello, World\".",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "Menunjukkan sama ada teks bermula dengan nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan benar jika nilai teks <code>text</code> bermula dengan nilai teks <code>substring</code>.\r\n      <ul>\r\n        <li><code>text</code>: <i></i> Nilai <code>text</code> yang perlu dicari</li>\r\n        <li><code>substring</code>: <i></i> Nilai <code>text</code> yang merupakan subrentetan yang perlu dicari dalam <code>substring</code></li>\r\n        <li><code>comparer</code>: <i>[Pilihan]</i> <code>Comparer</code> digunakan untuk mengawal perbandingan. Contohnya, <code>Comparer.OrdinalIgnoreCase</code> boleh digunakan untuk melaksanakan carian tidak sensitif huruf</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> merupakan <code>Comparer</code> yang digunakan untuk mengawal perbandingan. Pembanding boleh digunakan untuk memberikan perbandingan tidak sensitif huruf atau perbandingan sedar budaya dan tempatan.\r\n      </div>\r\n      <div>\r\n        Pembanding terbina dalam berikut tersedia dalam bahasa formula:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Digunakan untuk melaksanakan perbandingan ordinal yang tepat</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Digunakan untuk melaksanakan perbandingan tidak sensitif huruf ordinal yang tepat</li>\r\n        <li> <code>Comparer.FromCulture</code>: Digunakan untuk melaksanakan perbandingan sedar budaya</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Semak sama ada teks \"Hello, World\" bermula dengan teks \"hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Semak sama ada teks \"Hello, World\" bermula dengan teks \"Hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "Mengembalikan jenis yang mewakili fungsi dengan parameter tertentu dan mengembalikan kekangan jenis.",
        "Documentation.LongDescription": "Wujudkan <code>function type</code> daripada <code>signature</code>, rekod <code>ReturnType</code> dan <code>Parameters</code>, dan <code>min</code>, bilangan minimum argumen diperlukan untuk memulakan fungsi.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Mencipta jenis untuk fungsi yang mengambil parameter nombor bernama X dan mengembalikan nombor.",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "Mengembalikan jenis yang mewakili rekod dengan kekangan jenis tertentu pada medan.",
        "Documentation.LongDescription": "Mengembalikan jenis yang mewakili rekod dengan kekangan jenis tertentu pada medan.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Jana jenis jadual secara dinamik.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "Menentukan jika nilai jenis pertama sentiasa serasi dengan jenis kedua.",
        "Documentation.LongDescription": "Menentukan sama ada nilai <code>type1</code> sentiasa serasi dengan <code>type2</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada nilai bagi jenis nombor boleh juga sentiasa dianggap sebagai jenis mana-mana.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "Tentukan sama ada nilai jenis mana-mana boleh juga sentiasa dianggap sebagai jenis nombor.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "Menggantikan faset jenis.",
        "Documentation.LongDescription": "Menggantikan faset <code>type</code> dengan faset yang terkandung dalam rekod <code>facets</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "Mengembalikan jadual baru dengan semua kunci digantikan dengan senarai kunci yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jadual baharu dengan semua kunci digantikan dengan senarai kunci yang ditentukan.<br>\r\n    <br>\r\n    Setiap kunci ditentukan menggunakan rekod dalam borang berikut:\r\n    <ul>\r\n      <li>\r\n        <code>Lajur</code>: senarai nama lajur yang menentukan kunci\r\n      </li>\r\n      <li>\r\n        <code>Utama</code>: <code>benar</code> jika kunci ialah kunci utama jadual; jika tidak, <code>salah</code>\r\n      </li>\r\n    </ul>\r\n    Senarai kunci yang ditentukan disahkan untuk memastikan supaya tidak lebih daripada satu kunci utama ditakrifkan dan supaya semua nama lajur kunci wujud pada jenis jadual.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Gantikan maklumat kunci pada jenis jadual.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "Kosongkan maklumat utama yang ditakrifkan sebelum ini pada jenis jadual.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "Mengembalikan jenis lajur dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan jenis lajur <code>column</code> dalam jenis jadual <code>tableType</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "Mengembalikan URI mutlak yang merupakan gabungan URI asas input dan URI relatif.",
        "Documentation.LongDescription": "Mengembalikan URI mutlak yang merupakan gabungan input <code>baseUri</code> dan <code>relativeUri</code>.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "Mengembalikan jumlah dua nilai.",
        "Documentation.LongDescription": "Mengembalikan jumlah <code>value1</code> dan <code>value2</code>. Parameter <code>precision</code> pilihan boleh ditentukan, <code>Precision.Double</code> digunakan secara lalai.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "Mengembalikan nilai jika ia serasi dengan jenis yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai jika ia serasi dengan jenis yang ditentukan. Ini bersamaan dengan operator \"as\" dalam M, dengan pengecualian bahawa ia boleh menerima rujukan jenis pengecam seperti Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Tukarkan jenis nombor ke nombor.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "Cuba untuk menukarkan jenis nilai teks kepada nombor.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "Mengembalikan -1, 0 atau 1 berdasarkan sama ada nilai pertama adalah kurang daripada, sama dengan atau lebih besar daripada yang kedua.",
        "Documentation.LongDescription": "Mengembalikan -1, 0 atau 1 berdasarkan sama ada nilai pertama adalah kurang daripada, sama dengan atau lebih besar daripada yang kedua.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "Mengembalikan hasil daripada membahagi nilai pertama dengan nilai kedua.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada membahagi <code>value1</code> dengan <code>value2</code>. Parameter <code>precision</code> pilihan boleh ditentukan, <code>Precision.Double</code> digunakan secara lalai.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "Mengembalikan sama ada dua nilai adalah sama.",
        "Documentation.LongDescription": "Mengembalikan benar jika nilai <code>value1</code> adalah sama dengan nilai <code>value2</code>, palsu jika sebaliknya.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "Menentukan sama ada nilai serasi dengan jenis yang ditentukan.",
        "Documentation.LongDescription": "Menentukan sama ada nilai serasi dengan jenis yang ditentukan. Ini bersamaan dengan operator \"is\" dalam M, dengan pengecualian bahawa ia boleh menerima rujukan jenis pengecam seperti Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Bandingkan dua cara bagi menentukan jika nombor serasi dengan jenis nombor.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "Mengembalikan hasil daripada dua nilai.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada mendarab <code>value1</code> dengan <code>value2</code>. Parameter <code>precision</code> pilihan boleh ditentukan, <code>Precision.Double</code> digunakan secara lalai.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "Menilai pertanyaan terhadap sasaran.",
        "Documentation.LongDescription": "<p>Menilai <code>query</code> terhadap <code>target</code> menggunakan parameter yang ditentukan dalam <code>parameters</code> dan opsyen yang ditentukan dalam <code>options</code>.</p>\r\n<p>Output pertanyaan ditakrifkan oleh <code>target</code>.</p>\r\n<p><code>target</code> memberikan konteks untuk operasi yang dijelaskan oleh <code>query</code>.</p>\r\n<p><code>query</code> menjelaskan pertanyaan yang akan dilaksanakan terhadap <code>target</code>. <code>query</code> diungkapkan dengan cara yang khusus untuk <code>target</code> (contohnya, kenyataan T-SQL).</p>\r\n<p>Nilai <code>parameters</code> pilihan mungkin mengandungi sama ada senarai atau rekod yang sesuai untuk membekalkan nilai parameter yang dijangka oleh <code>query</code>.</p>\r\n<p>Rekod <code>options</code> pilihan mungkin mengandungi opsyen yang mempengaruhi kelakuan penilaian <code>query</code> terhadap <code>target</code>. Opsyen ini adalah khusus untuk <code>target</code>.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "Mengembalikan sama ada dua nilai adalah sama.",
        "Documentation.LongDescription": "Mengembalikan nol jika mana-mana argumen '<code>value1</code>', '<code>value2</code>' adalah nol, sebaliknya bersamaan dengan Value.Equals.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "Menggantikan maklumat metadata input.",
        "Documentation.LongDescription": "Menggantikan maklumat metadata input.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "Menggantikan jenis nilai.",
        "Documentation.LongDescription": "Menggantikan jenis <code>value</code> dengan <code>type</code> yang disediakan.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Gantikan jenis rekod lalai dengan jenis yang lebih khusus.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "Mengembalikan perbezaan dua nilai.",
        "Documentation.LongDescription": "Mengembalikan perbezaan untuk <code>value1</code> dan <code>value2</code>. Parameter <code>precision</code> pilihan boleh ditentukan, <code>Precision.Double</code> digunakan secara lalai.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "Mencipta tindakan yang apabila dilaksanakan akan mengembalikan keputusan melaksanakan permintaan HTTP sebagai nilai perduaan.",
        "Documentation.LongDescription": "Mencipta tindakan yang, apabila dilaksanakan, akan mengembalikan hasil daripada melaksanakan permintaan <code>method</code> terhadap <code>url</code> menggunakan HTTP sebagai nilai perduaan.\r\n Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n    <ul>\r\n<li><code>Query</code> : Tambahkan parameter pertanyaan secara pengaturcaraan pada URL tanpa perlu bimbang tentang pelepasan.</li>\r\n<li><code>ApiKeyName</code> : Jika tapak sasaran mempunyai tanggapan bagi kunci API, parameter ini boleh digunakan untuk menentukan nama (bukan nilai) bagi parameter kunci tersebut yang mesti digunakan dalam URL. Nilai kunci sebenar disediakan dalam kelayakan.</li>\r\n<li><code>Headers</code> : Menentukan nilai ini sebagai rekod akan membekalkan pengepala tambahan pada permintaan HTTP.</li>\r\n<li><code>Timeout</code> : Menentukan nilai ini sebagai tempoh akan mengubah tamat masa untuk permintaan HTTP. Nilai lalai ialah 100 saat.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Menentukan nilai ini sebagai senarai akan mengecualikan kunci pengepala HTTP ini daripada menjadi sebahagian daripada pengiraan untuk data cache.</li>\r\n<li><code>IsRetry</code> : Menentukan nilai logik ini sebagai benar akan mengabaikan sebarang respons sedia ada dalam cache apabila mengambil data.</li>\r\n<li><code>ManualStatusHandling</code> : Menentukan nilai ini sebagai senarai akan menghalang sebarang pengendalian terbina dalam untuk permintaan HTTP yang responsnya mempunyai salah satu kod status ini.</li>\r\n<li><code>RelativePath</code> : Menentukan nilai ini sebagai teks menambahnya pada URL asas sebelum membuat permintaan.</li>\r\n<li><code>Content</code> : Menentukan nilai ini akan menyebabkan kandungannya menjadi isi permintaan HTTP.</li>\r\n</ul>\r\n\r\n <br>\r\n    Ambil perhatian bahawa fungsi ini dinyahdayakan dalam kebanyakan konteks. Sebaliknya, pertimbangkan untuk menggunakan Web.Contents atau Web.Headers.\r\n    ",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "Laksanakan permintaan GET terhadap Bing.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "Masukkan URL bagi titik akhir API REST Azure Enterprise yang dikaitkan dengan pendaftaran anda",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Mengembalikan keputusan perduaan bagi panggilan ke url yang diberikan untuk API Azure Enterprise.",
        "Documentation.Examples": [
          {
            "Description": "Menggunakan fungsi AzureEnterprise.Contents untuk mengembalikan keputusan bagi laporan tertentu.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "Jadual"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "Mengembalikan kandungan blob yang ditentukan daripada ruang simpan Azure.",
        "Documentation.LongDescription": "Mengembalikan kandungan blob pada URL, <code>url</code>, daripada ruang simpan storan Azure. <code>options</code> mungkin ditentukan untuk mengawal opsyen yang berikut:\r\n    <ul>\r\n<li><code>BlockSize</code> : Bilangan bait untuk dibaca sebelum menunggu pengguna data. Nilai lalai ialah 4 MB.</li>\r\n<li><code>RequestSize</code> : Bilangan bait untuk cuba membaca dalam permintaan HTTP tunggal kepada pelayan. Nilai lalai ialah 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Opsyen ConcurrentRequests menyokong muat turun data yang lebih cepat dengan menentukan bilangan permintaan yang dibuat secara selari, sehingga mengakibatkan penggunaan memori. Memori yang diperlukan (ConcurrentRequest * RequestSize). Nilai lalai ialah 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "Mengembalikan kandungan bagi fail yang ditentukan daripada sistem fail Azure Data Lake Storage.",
        "Documentation.LongDescription": "Mengembalikan kandungan fail pada URL, <code>url</code>, daripada sistem fail Azure Data Lake Storage. <code>options</code> mungkin ditentukan untuk mengawal opsyen yang berikut:\r\n    <ul>\r\n<li><code>BlockSize</code> : Bilangan bait untuk dibaca sebelum menunggu pengguna data. Nilai lalai ialah 4 MB.</li>\r\n<li><code>RequestSize</code> : Bilangan bait untuk cuba membaca dalam permintaan HTTP tunggal kepada pelayan. Nilai lalai ialah 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : Opsyen ConcurrentRequests menyokong muat turun data yang lebih cepat dengan menentukan bilangan permintaan yang dibuat secara selari, sehingga mengakibatkan penggunaan memori. Memori yang diperlukan (ConcurrentRequest * RequestSize). Nilai lalai ialah 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "Mengembalikan panjang anggaran binari.",
        "Documentation.LongDescription": "Mengembalikan panjang anggaran bagi <code>binary</code>, atau ralat jika sumber data tidak menyokong panjang anggaran.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan panjang anggaran bagi nilai binari.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "Menimbal nilai perduaan dalam memori.",
        "Documentation.LongDescription": "Menimbal nilai perduaan dalam memori.  Hasil panggilan ini ialah nilai perduaan yang stabil, yang bermakna ia akan mempunyai panjang kebertentuan dan tertib bait.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Cipta versi stabil bagi nilai perduaan.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "Menggabungkan senarai perduaan menjadi perduaan tunggal.",
        "Documentation.LongDescription": "Menggabungkan senarai perduaan menjadi perduaan tunggal.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "Mencipta perduaan daripada nilai yang ditentukan",
        "Documentation.LongDescription": "Mengembalikan nilai <code>binari</code> daripada <code>value</code> yang diberikan. Jika <code>value</code> yang diberikan adalah <code>nol</code>, <code>Binary.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>binari</code>, <code>value</code> dikembalikan. Nilai jenis berikut boleh ditukar kepada nilai <code>binari</code>:\r\n      <ul>\r\n        <li><code>teks</code>: Nilai <code>binari</code> daripada perwakilan teks. Rujuk <code>Binary.FromText</code> untuk butiran.</li>\r\n      </ul>\r\nJika <code>value</code> adalah daripada apa-apa jenis lain, ralat dikembalikan.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan <code>binary</code> nilai bagi <code>\"1011\"</code>.",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "Menukarkan senarai nombor menjadi nilai perduaan.",
        "Documentation.LongDescription": "Menukarkan senarai nombor menjadi nilai perduaan.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "Menyahkodkan data daripada bentuk teks kepada perduaan.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menukar nilai teks <code>text</code> kepada perduaan (senarai <code>number</code>). <code>encoding</code> mungkin ditentukan untuk menunjukkan pengekodan yang digunakan dalam nilai teks.\r\n      Nilai <code>BinaryEncoding</code> berikut boleh digunakan untuk <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Pengekodan Asas 64</li>\r\n        <li><code>BinaryEncoding.Hex</code>: Pengekodan Heks</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Nyahkodkan \"1011\" menjadi perduaan.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "Nyahkodkan \"1011\" menjadi perduaan dengan pengekodan Heks.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "Membaca strim perduaan dan cuba menentukan jenis kandungan dan maklumat format strim.",
        "Documentation.LongDescription": "Mengembalikan rekod dengan medan Content.Type yang mengandungi jenis MIME tertaabir. \r\n    Jika jenis kandungan tertaabir ialah teks/* dan halaman kod pengekodan dikesan, maka secara tambahan mengembalikan medan Content.Encoding yang mengandungi pengekodan strim tersebut.\r\n    Jika jenis kandungan tertaabir ialah teks/csv dan formatnya terbatas, secara tambahan mengembalikan medan Csv.PotentialDelimiter yang mengandungi jadual untuk analisis pembatas berpotensi.\r\n    Jika jenis kandungan tertaabir ialah teks/csv dan format ialah lebar tetap, secara tambahan mengembalikan medan Csv.PotentialPositions yang mengandungi senarai untuk analisis kedudukan lajur lebar tetap berpotensi.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "Mengembalikan bilangan aksara.",
        "Documentation.LongDescription": "Mengembalikan bilangan aksara.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "Menukarkan nilai perduaan kepada senarai nombor.",
        "Documentation.LongDescription": "Menukarkan nilai perduaan kepada senarai nombor.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "Mengekodkan data perduaan kepada bentuk teks.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menukar senarai perduaan nombor <code>binary</code> kepada nilai teks. Secara pilihan, <code>encoding</code> mungkin ditentukan untuk menunjukkan pengekodan yang perlu digunakan dalam nilai teks yang dihasilkan.\r\n      Nilai <code>BinaryEncoding</code> berikut boleh digunakan untuk <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Pengekodan Asas 64</li>\r\n        <li><code>BinaryEncoding.Hex</code>: Pengekodan Heks</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "Mencipta rekod ralat diubah suai yang tidak akan mencetuskan sandaran apabila dikembalikan oleh pengendali yang ditentukan pada pandangan (melalui Binary.View).",
        "Documentation.LongDescription": "Mencipta rekod ralat diubah suai daripada <code>errorRecord</code> yang tidak akan mencetuskan sandaran apabila dikembalikan oleh pengendali yang ditentukan pada pandangan (melalui Binary.View).",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "Mencipta fungsi yang boleh dipintas oleh pengendali yang ditentukan pada pandangan (melalui Binary.View).",
        "Documentation.LongDescription": "<p>Mencipta fungsi pandangan berdasarkan <code>function</code> yang boleh dikendalikan dalam pandangan yang dicipta oleh <code>Binary.View</code>.</p>\r\n<p>Pengendali <code>OnInvoke</code> bagi <code>Binary.View</code> boleh digunakan untuk mentakrifkan pengendali untuk fungsi pandangan.</p>\r\n<p>Seperti pengendali untuk operasi terbina dalam, jika tiada pengendali <code>OnInvoke</code> ditentukan, atau jika ia tidak mengendalikan fungsi pandangan, atau jika ralat dibangkitkan oleh pengendali, <code>function</code> digunakan di atas pandangan.</p>\r\n<p>Rujuk dokumentasi penyambung tersuai Power Query yang diterbitkan untuk penerangan yang lebih lengkap bagi <code>Binary.View</code> dan fungsi pandangan tersuai.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "Format perduaan yang membaca integer bertandatangan 64 bit yang dikodkan menggunakan pengekodan panjang boleh ubah 7 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer bertandatangan 64 bit yang dikodkan menggunakan pengekodan panjang boleh ubah 7 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "Format perduaan yang membaca integer tanpa tanda 64 bit yang dikodkan menggunakan pengekodan panjang boleh ubah 7 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer tanpa tanda 64 bit yang dikodkan menggunakan pengekodan panjang boleh ubah 7 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "Format perduaan yang membaca integer tanpa tanda 8 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer tanpa tanda 8 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "Format perduaan yang membaca nilai desimal 16 bit .NET.",
        "Documentation.LongDescription": "Format perduaan yang membaca nilai desimal 16 bit .NET.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "Format perduaan yang membaca nilai titik apung kepersisan ganda dua IEEE 8 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca nilai titik apung kepersisan ganda dua IEEE 8 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "Mengembalikan format perduaan yang membaca jujukan item dan mengembalikan senarai.",
        "Documentation.LongDescription": "Mengembalikan format perduaan yang membaca jujukan item dan mengembalikan <code>list</code>.  Parameter <code>binaryFormat</code> menentukan format perduaan bagi setiap item.  Terdapat tiga cara untuk menentukan bilangan item yang dibaca: <ul><li>Jika <code>countOrCondition</code> tidak ditentukan, maka format perduaan akan membaca sehingga tiada lagi item.</li><li>Jika <code>countOrCondition</code> ialah nombor, maka format perduaan akan membaca bilangan item tersebut.</li><li>Jika <code>countOrCondition</code> ialah fungsi, maka fungsi tersebut akan dijalankan untuk setiap item yang dibaca.  Fungsi mengembalikan benar untuk meneruskan dan palsu untuk berhenti membaca item.  Item terakhir disertakan dalam senarai.</li><li>Jika <code>countOrCondition</code> ialah format perduaan, maka kiraan item dijangka mendahului senarai dan format yang ditentukan digunakan untuk membaca kiraan.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "Baca bait sehingga hujung data.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Baca dua bait.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Baca bait sehingga nilai bait adalah lebih besar daripada atau sama dengan dua.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "Format perduaan yang membaca bait sifar dan mengembalikan nol.",
        "Documentation.LongDescription": "Format perduaan yang membaca bait sifar dan mengembalikan nol.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "Mengembalikan format perduaan yang membaca rekod.",
        "Documentation.LongDescription": "Mengembalikan format perduaan yang membaca rekod.  Parameter <code>record</code> menentukan format bagi rekod.  Setiap medan dalam rekod boleh mempunyai format perduaan berlainan.  Jika medan mengandungi nilai yang bukan nilai format perduaan, maka tiada data dibaca untuk medan tersebut dan nilai medan digambarkan dalam hasil.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "Baca rekod yang mengandungi satu integer 16 bit dan satu integer 32 bit.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "Format perduaan yang membaca integer bertandatangan 16 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer bertandatangan 16 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "Format perduaan yang membaca integer bertandatangan 32 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer bertandatangan 32 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "Format perduaan yang membaca integer bertandatangan 64 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer bertandatangan 64 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "Format perduaan yang membaca nilai titik apung kepersisan tunggal IEEE 4 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca nilai titik apung kepersisan tunggal IEEE 4 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "Mengembalikan format perduaan yang membaca nilai teks.",
        "Documentation.LongDescription": "Mengembalikan format perduaan yang membaca nilai teks.  <code>length</code> menentukan bilangan bait untuk dinyahkod atau format perduaan bagi panjang yang mendahului teks.  Nilai <code>encoding</code> pilihan menentukan pengekodan teks.  Jika <code>encoding</code> tidak ditentukan, maka pengekodan ditentukan daripada tanda jujukan bait Unicode.  Jika tiada tanda jujukan bait, maka <code>TextEncoding.Utf8</code> digunakan.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "Nyahkodkan dua bait sebagai teks ASCII.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "Nyahkodkan teks ASCII yang mana panjang teks dalam bait muncul sebelum teks sebagai bait.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "Format perduaan yang membaca integer tanpa tanda 16 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer tanpa tanda 16 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "Format perduaan yang membaca integer tanpa tanda 32 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer tanpa tanda 32 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "Format perduaan yang membaca integer tanpa tanda 64 bit.",
        "Documentation.LongDescription": "Format perduaan yang membaca integer tanpa tanda 64 bit.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "Mencipta integer 8 bit daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> integer 8-bit daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Byte.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code> dalam julat integer 8-bit tanpa bahagian pecahan, <code>value</code> jika dikembalikan. Jika ia mempunyai bahagian pecahan, maka nombor dibundarkan dengan mod pembundaran yang ditentukan. Mod pembundaran lalai ialah <code>RoundingMode.ToEven</code>. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. Rujuk <code>Number.Round</code> untuk mod pembundaran yang tersedia. <code>culture</code>pilihan juga mungkin diberikan (untuk contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>nombor</code> integer 8 bit daripada <code>\"4\"</code>.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Dapatkan nilai <code>number</code> integer 8 bit daripada <code>\"4.5\"</code> menggunakan <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "Menukar nombor kepada aksara teks.",
        "Documentation.LongDescription": "Mengembalikan persamaan aksara bagi nombor.<br>\r\n    <br>\r\n    <code>number</code> yang diberikan mestilah titik kod Unikod 21 bit.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Tukar nombor kepada nilai aksara setaranya.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "Tukar aksara kepada nombor dan kembali lagi.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "Tukar titik kod perenambelas untuk emotikon \"muka tersengih\" kepada pasangan pengganti UTF-16 yang setaranya.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "Menukarkan aksara kepada nilai nombor.",
        "Documentation.LongDescription": "Mengembalikan persamaan nombor bagi <code>character</code>.<br>\r\n    <br>\r\n    Hasil akan menjadi titik kod Unikod 21 bit yang diwakili oleh aksara yang diberikan atau pasangan pengganti.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Tukar aksara kepada nilai nombor setaranya.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "Tukar pasangan pengganti UTF-16 untuk emotikon \"muka tersengih\" kepada kod titik perenambelas yang setaranya.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "Mengembalikan fungsi yang menggabungkan senarai teks menggunakan pembatas yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang menggabungkan senarai nilai teks menjadi nilai teks tunggal menggunakan pemisah yang ditentukan.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan senarai nilai teks menggunakan pembatas koma bernoktah.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "Gabungkan teks dua lajur menggunakan pembatas koma dan petikan gaya CSV.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "Mengembalikan fungsi yang menggabungkan senarai teks menggunakan jujukan pembatas.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang menggabungkan satu senarai nilai teks menjadi nilai teks tunggal menggunakan pembatas yang ditentukan.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan senarai nilai teks menggunakan jujukan pembatas.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "Mengembalikan fungsi yang menggabungkan senarai teks menggunakan panjang yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang menggabungkan satu senarai nilai teks menjadi nilai teks tunggal menggunakan panjang yang ditentukan.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan senarai nilai teks dengan mengekstrak bilangan aksara yang ditentukan daripada setiap nilai input.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "Gabungkan senarai nilai teks dengan mengekstrak bilangan aksara yang ditentukan, selepas mengisi hasil dengan teks templat terlebih dahulu.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "Mengembalikan fungsi yang menggabungkan senarai teks menggunakan kedudukan output yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang menggabungkan satu senarai nilai teks menjadi nilai teks tunggal menggunakan kedudukan output yang ditentukan.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan senarai nilai teks dengan menempatkannya dalam output pada kedudukan yang ditentukan.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "Mengembalikan fungsi yang menggabungkan senarai teks menggunakan kedudukan dan panjang yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang menggabungkan satu senarai nilai teks menjadi nilai teks tunggal menggunakan kedudukan dan panjang output yang ditentukan. Panjang nol menunjukkan bahawa keseluruhan nilai teks harus disertakan.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan senarai nilai teks menggunakan kedudukan dan panjang output yang ditentukan.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "Mengembalikan fungsi pembanding berdasarkan budaya yang ditentukan dan sensitiviti huruf.",
        "Documentation.LongDescription": "Mengembalikan fungsi pembanding yang menggunakan <code>culture</code> dan sensitiviti huruf yang ditentukan oleh <code>ignoreCase</code> untuk melaksanakan fungsi perbandingan.<br>\r\n      <br>\r\n      Fungsi pembanding menerima dua argumen dan mengembalikan -1, 0, atau 1 berdasarkan sama ada nilai pertama adalah kurang daripada, sama dengan atau lebih besar daripada yang kedua.<br>\r\n      <br>\r\n      Nilai lalai untuk <code>ignoreCase</code> adalah palsu. Nama <code>culture</code> mestilah salah satu tempat yang disokong oleh kerangka .NET (contohnya, \"en-US\").\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Bandingkan \"a\" dan \"A\" dengan menggunakan tempatan \"en-US\" untuk menentukan jika nilai-nilai ini adalah sama.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "Bandingkan \"a\" dan \"A\" dengan menggunakan tempat \"en-US\" mengabaikan huruf untuk menentukan jika nilai-nilai ini adalah sama.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "Kembalikan pengecam ahli unik daripada nilai sifat ahli.",
        "Documentation.LongDescription": "Kembalikan pengecam ahli unik daripada nilai sifat ahli. <code>attribute</code>. Kembalikan nol bagi sebarang nilai yang lain.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "Mengembalikan kunci sifat.",
        "Documentation.LongDescription": "Mengembalikan kunci sifat <code>property</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "Mengembalikan nilai mata wang daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>mata wang</code> daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan ialah <code>nol</code>, <code>Currency.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code> dalam julat mata wang, bahagian pecahan bagi <code>value</code> dibundarkan kepada 4 digit perpuluhan dan dikembalikan. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. Julat yang sah untuk mata wang adalah <code>-922,337,203,685,477.5808</code> ke <code>922,337,203,685,477.5807</code>. Rujuk <code>Number.Round</code> untuk mod pembundaran yang tersedia. Lalai ialah <code>RoundingMode.ToEven</code>. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>currency</code> daripada <code>\"1.23455\"</code>.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "Dapatkan nilai <code>currency</code> daripada <code>\"1.23455\"</code> dengan menggunakan <code>RoundingMode.Down</code>.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "Mengembalikan hari komponen.",
        "Documentation.LongDescription": "Mengembalikan komponen hari bagi nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> daripada yang mana komponen hari diekstrak.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan komponen hari bagi <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> mewakili tarikh dan masa 5/14/2011 5/14/2011 05:00:00 PM.",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "Mengembalikan nombor (dari 0 hingga 6) yang menunjukkan hari dalam minggu diduduki oleh nilai yang disediakan.",
        "Documentation.LongDescription": "Mengembalikan nombor (dari 0 hingga 6) yang menunjukkan hari dalam minggu diduduki oleh <code>dateTime</code>.\r\n  <ul>\r\n        <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>datetime</code>, atau <code>datetimezone</code>.</li>\r\n        <li><code>firstDayOfWeek</code>: Nilai <code>hari</code> yang menunjukkan hari yang harus dipertimbangkan sebagai hari pertama dalam minggu. Nilai yang dibenarkan ialah Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday atau Day.Saturday. Jika tidak ditentukan, nilai lalai bergantung kepada budaya digunakan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan hari dalam minggu yang diwakili oleh Isnin, 21hb Februari 2011, dengan menganggap Ahad sebagai hari pertama dalam minggu.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "Dapatkan hari dalam minggu yang diwakili oleh Isnin, 21hb Februari 2011, dengan menganggap Isnin sebagai hari pertama dalam minggu.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "Mengembalikan nama hari dalam minggu.",
        "Documentation.LongDescription": "Mengembalikan nama hari dalam seminggu untuk <code>date</code> yang ditentukan. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nama hari dalam minggu.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "Mengembalikan nombor daripada 1 hingga 366 mewakili hari dalam tahun.",
        "Documentation.LongDescription": "Mengembalikan nombor yang mewakili hari dalam tahun dalam nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> yang ditentukan, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hari dalam tahun bagi 1 Mac 2011.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "Mengembalikan nombor daripada 28 hingga 31 yang menunjukkan bilangan hari dalam bulan.",
        "Documentation.LongDescription": "Mengembalikan bilangan hari dalam bulan dalam nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> <code>dateTime</code>. \r\n <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk yang mana bilangan hari dalam bulan dikembalikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bilangan hari dalam bulan Disember seperti yang diwakili oleh <code>#date(2011, 12, 01)></code>.",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "Mengembalikan penghujung hari.",
        "Documentation.LongDescription": "Mengembalikan penghujung hari yang diwakili oleh <code>dateTime</code>. Maklumat zon waktu dikekalkan.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk mengira penghujung hari.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan penghujung hari untuk 5/14/2011 05:00:00 PM.",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "Dapatkan penghujung hari untuk 5/17/2011 05:00:00 PM -7:00.",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "Mengembalikan penghujung bulan.",
        "Documentation.LongDescription": "Mengembalikan penghujung bulan yang mengandungi <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk mengira penghujung bulan</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan penghujung bulan untuk 5/14/2011.",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "Dapatkan penghujung bulan untuk 5/17/2011 05:00:00 PM -7:00.",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "Mengembalikan penghujung suku.",
        "Documentation.LongDescription": "Mengembalikan penghujung suku yang mengandungi <code>dateTime</code>. Maklumat zon waktu dikekalkan.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk mengira penghujung suku.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari penghujung suku bagi 10 Oktober 2011, 8:00PG.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "Mengembalikan penghujung minggu.",
        "Documentation.LongDescription": "Mengembalikan penghujung minggu yang mengandungi <code>dateTime</code>.\r\n    Fungsi ini mengambil <code>Day</code> pilihan, <code>firstDayOfWeek</code>, untuk ditetapkan sebagai hari pertama dalam minggu bagi pengiraan relatif ini. Nilai lalai ialah <code>Day.Sunday</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk mengira hari terakhir dalam minggu</li>\r\n        <li><code>firstDayOfWeek</code>: <i>[Pilihan]</i> Nilai <code>Day.Type</code> mewakili hari pertama dalam minggu. Nilai yang mungkin ialah <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> dan <code>Day.Saturday.</code> . Nilai lalai ialah <code>Day.Sunday</code>.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan penghujung minggu untuk 5/14/2011.",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "Dapatkan hujung minggu untuk 5/17/2011 05:00:00 PM -7:00, dengan Ahad sebagai hari pertama dalam minggu.",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "Mengembalikan penghujung tahun.",
        "Documentation.LongDescription": "Mengembalikan penghujung tahun yang mengandungi <code>dateTime</code>, termasuk pecahan saat. Maklumat zon waktu dikekalkan.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk mengira penghujung tahun.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan penghujung tahun untuk 5/14/2011 05:00:00 PM.",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "Dapatkan penghujung jam untuk 5/17/2011 05:00:00 PM -7:00.",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "Mencipta tarikh daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>tarikh</code> daripada <code>value</code> yang ditentukan. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").\r\nJika <code>value</code> yang ditentukan ialah <code>nol</code>, <code>Date.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>tarikh</code>, <code>value</code> dikembalikan. Nilai bagi jenis yang berikut boleh ditukarkan kepada nilai <code>tarikh</code>:\r\n      <ul>\r\n        <li><code>teks</code>: Nilai <code>tarikh</code> daripada perwakilan teks. Lihat <code>Date.FromText</code> untuk butiran.</li>\r\n        <li><code>tarikhmasa</code>: Komponen tarikh bagi <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: Komponen tarikh bagi tarikhmasa setempat yang setara dengan <code>value</code>.</li>\r\n        <li><code>nombor</code>: Komponen tarikh dengan tarikhmasa yang setara dengan Tarikh Automasi OLE yang dinyatakan oleh <code>value</code>.</li>\r\n      </ul>\r\nJika <code>value</code> ialah mana-mana jenis yang lain, ralat dikembalikan.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>43910</code> kepada nilai <code>date</code>.",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "Menukar <code>#datetime(1899, 12, 30, 06, 45, 12)</code> kepada nilai <code>date</code>.",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "Mencipta Tarikh daripada format Tarikh setempat, universal dan tersuai.",
        "Documentation.LongDescription": "Mencipta nilai <code>date</code> daripada perwakilan teks, <code>text</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan penghuraian tarikh menggunakan usaha terbaik.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"MMM\"</code> ialah <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, sementara dalam <code>\"ru-RU\"</code> <code>\"MMM\"</code> ialah <code>\"янв\", \"фев\", \"мар\", ...</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tukar <code>\"2010-12-31\"</code> menjadi nilai <code>date</code>.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "Tukar menggunakan format tersuai dan budaya Jerman.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "Cari tarikh dalam kalendar Gregorian yang sepadan dengan permulaan 1400 dalam kalendar Hijrah.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada hari semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai datetime yang ditentukan <code>dateTime</code> berlaku pada hari semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk dinilaikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa adalah dalam hari semasa.",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bulan semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai datetime yang ditentukan <code>dateTime</code> berlaku pada bulan semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk dinilaikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa adalah dalam bulan semasa.",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada suku semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai datetime yang ditentukan <code>dateTime</code> berlaku pada suku semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk dinilaikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa adalah dalam suku semasa.",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada minggu semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai datetime yang ditentukan <code>dateTime</code> berlaku pada minggu semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk dinilaikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa adalah dalam minggu semasa.",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada tahun semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai datetime yang ditentukan <code>dateTime</code> berlaku pada tahun semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk dinilaikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa adalah dalam tahun semasa.",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada hari seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada hari seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada hari selepas masa sistem semasa adalah dalam hari seterusnya.",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bulan seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bulan seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada bulan selepas masa sistem semasa adalah dalam bulan seterusnya.",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada suku tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada suku tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada suku selepas masa sistem semasa adalah dalam suku seterusnya.",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada minggu seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada minggu seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada minggu selepas masa sistem semasa adalah dalam minggu seterusnya.",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada tahun seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada tahun selepas masa sistem semasa adalah dalam tahun seterusnya.",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada hari sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada hari sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada hari semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada hari sebelum masa sistem semasa adalah dalam hari sebelumnya.",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada bulan sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada bulan sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada bulan semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada bulan sebelum masa sistem semasa adalah dalam bulan sebelumnya.",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada suku tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada suku tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada suku tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada suku sebelum masa sistem semasa adalah dalam suku sebelumnya.",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada minggu sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada minggu sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minggu semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada minggu sebelum masa sistem semasa adalah dalam minggu sebelumnya.",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku pada tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada tahun sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada tahun semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikh</code>, <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada tahun sebelum masa sistem semasa adalah dalam tahun sebelumnya.",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini berlaku semasa tahun semasa dan adalah pada atau sebelum hari semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai datetime yang ditentukan <code>dateTime</code> berlaku semasa tahun semasa dan adalah pada atau sebelum hari semasa, seperti yang ditentukan oleh tarikh dan masa semasa pada sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk dinilaikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa adalah dalam tahun terkini.",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "Menunjukkan sama ada tarikh ini jatuh dalam tahun lompat.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai datetime yang ditentukan bagi <code>dateTime</code> ialah tahun lompat. \r\n <ul>\r\n        <li><code>dateTime</code>: Nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> untuk dinilaikan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada tahun 2012, seperti yang diwakili oleh <code>#date(2012, 01, 01)</code> ialah tahun lompat.",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "Mengembalikan komponen bulan.",
        "Documentation.LongDescription": "Mengembalikan komponen bulan bagi nilai <code>datetime</code> yang ditentukan, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari bulan dalam #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "Mengembalikan komponen nama bulan.",
        "Documentation.LongDescription": "Mengembalikan nama komponen bulan untuk <code>date</code> yang ditentukan. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nama bulan.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "Mengembalikan nombor yang menunjukkan tarikh tersebut jatuh pada suku tahun yang mana.",
        "Documentation.LongDescription": "Mengembalikan nombor daripada 1 hingga 4 yang menunjukkan tarikh <code>dateTime</code> jatuh pada suku tahun yang mana. <code>dateTime</code> boleh menjadi nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari suku tahun yang mana tarikh #date(2011, 12, 31) jatuh.",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "Mengembalikan permulaan hari.",
        "Documentation.LongDescription": "Mengembalikan permulaan hari yang diwakili oleh <code>dateTime</code>.\r\n    <code>dateTime</code> mesti nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari permulaan hari bagi 10 Oktober 2011, 8:00PG.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "Mengembalikan permulaan bulan.",
        "Documentation.LongDescription": "Mengembalikan permulaan bulan yang mengandungi <code>dateTime</code>.\r\n    <code>dateTime</code> mesti nilai <code>date</code> atau <code>datetime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari permulaan bulan bagi 10 Oktober 2011, 8:10:32PG.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "Mengembalikan permulaan suku.",
        "Documentation.LongDescription": "Mengembalikan permulaan suku yang mengandungi <code>dateTime</code>.\r\n      <code>dateTime</code> mesti nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari permulaan suku bagi 10 Oktober 2011, 8:00PG.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "Mengembalikan permulaan minggu.",
        "Documentation.LongDescription": "Mengembalikan permulaan minggu yang mengandungi <code>dateTime</code>.\r\n    <code>dateTime</code> mesti nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari permulaan minggu untuk Selasa, 11 Oktober 2011.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "Cari permulaan minggu untuk Selasa, 11 Oktober 2011, menggunakan Isnin sebagai permulaan minggu.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "Mengembalikan permulaan tahun.",
        "Documentation.LongDescription": "Mengembalikan permulaan tahun yang mengandungi <code>dateTime</code>.\r\n    <code>dateTime</code> mesti nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari permulaan tahun bagi 10 Oktober 2011, 8:10:32PG.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "Mengembalikan rekod yang mengandungi sebahagian nilai tarikh.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengandungi sebahagian nilai tarikh yang ditentukan, <code>date</code>.\r\n <ul>\r\n        <li><code>date</code>: Nilai <code>date</code> untuk yang mana rekod bahagiannya akan dikira.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tukarkan nilai <code>#date(2011, 12, 31)</code> kepada rekod yang mengandungi sebahagian daripada nilai tarikh.",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "Mengembalikan perwakilan teks bagi nilai tarikh.",
        "Documentation.LongDescription": "Mengembalikan perwakilan teks bagi <code>date</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. <code>culture</code> hanya digunakan untuk aliran kerja legasi. <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan pemformatan tarikh menggunakan tetapan lalai yang ditentukan oleh <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"MMM\"</code> ialah <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, sementara dalam <code>\"ru-RU\"</code> <code>\"MMM\"</code> ialah <code>\"янв\", \"фев\", \"мар\", ...</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> dan <code>culture</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tukar <code>#date(2010, 12, 31)</code> menjadi nilai <code>text</code>. <i>Output hasil mungkin berbeza bergantung pada budaya semasa.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "Tukar menggunakan format tersuai dan budaya Jerman.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "Cari tahun dalam kalendar Hijrah yang sepadan dengan 1 Januari 2000 dalam kalendar Gregorian.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "Mengembalikan nombor daripada 1 hingga 6 yang menunjukkan tarikh ini jatuh pada minggu yang mana dalam bulan.",
        "Documentation.LongDescription": "Mengembalikan nombor daripada 1 hingga 6 yang menunjukkan tarikh <code>dateTime</code> jatuh pada minggu yang mana dalam bulan.\r\n <ul>\r\n        <li><code>dateTime</code>: Nilai <code>datetime</code> untuk yang mana minggu dalam bulan ditentukan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan 15 Mac jatuh pada minggu yang mana dalam 2011.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "Mengembalikan nombor daripada 1 hingga 54 yang menunjukkan tarikh ini jatuh pada minggu yang mana dalam tahun.",
        "Documentation.LongDescription": "Mengembalikan nombor dari 1 hingga 54 yang menunjukkan kedudukan minggu dalam setahun bagi tarikh, <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>:Nilai <code>tarikhmasa</code> bagi minggu dalam setahun yang ditentukan.</li>\r\n        <li><code>firstDayOfWeek</code>: Nilai <code>Day.Type</code> pilihan yang menentukan hari yang dianggap sebagai bermulanya minggu baru (contohnya, <code>Day.Sunday</code>). Jika tidak ditentukan, nilai lalai bergantung pada budaya digunakan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Tentukan minggu dalam tahun yang mengandungi 27 Mac 2011.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "Tentukan minggu dalam tahun yang mengandungi 27 Mac 2011, menggunakan Isnin sebagai permulaan minggu.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "Mengembalikan komponen tahun.",
        "Documentation.LongDescription": "Mengembalikan komponen tahun bagi nilai <code>datetime</code> yang ditentukan, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari tahun dalam #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "Mengembalikan komponen tarikh bagi nilai tarikh, datetime atau datetimezone yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan komponen tarikh bagi <code>dateTime</code>, nilai <code>date</code>, <code>datetime</code> atau <code>datetimezone</code> yang ditentukan.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai tarikh bagi #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "Mencipta datetime daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>tarikhmasa</code> daripada <code>value</code> yang diberikan. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").\r\nJika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>DateTime.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>tarikhmasa</code>, <code>value</code> dikembalikan. Nilai bagi jenis berikut boleh ditukarkan kepada nilai <code>tarikhmasa</code>:\r\n      <ul>\r\n        <li><code>teks</code>: Nilai <code>tarikhmasa</code> daripada perwakilan teks. Rujuk <code>DateTime.FromText</code> untuk butiran.</li>\r\n        <li><code>tarikh</code>: <code>tarikhmasa</code> dengan <code>value</code> sebagai komponen tarikh dan <code>12:00:00 TGH MLM</code> sebagai komponen masa.</li>\r\n        <li><code>datetimezone</code>: <code>tarikhmasa</code> setempat yang setara bagi <code>value</code>.</li>\r\n        <li><code>masa</code>: <code>tarikhmasa</code> dengan tarikh yang setara bagi Tarikh Automasi OLE bagi <code>0</code> sebagai komponen tarikh dan <code>value</code> sebagai komponen masa.</li>\r\n        <li><code>nombor</code>: <code>tarikhmasa</code> yang setara dengan Tarikh Automasi OLE yang dinyatakan oleh <code>value</code>. </li>\r\n      </ul>\r\nJika <code>value</code> adalah daripada apa-apa jenis lain, ralat dikembalikan.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>#time(06, 45, 12)</code> kepada nilai <code>datetime</code>.",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "Menukar <code>#date(1975, 4, 4)</code> kepada nilai <code>datetime</code>.",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "Mencipta datetime daripada nombor panjang 64 bit.",
        "Documentation.LongDescription": "Mencipta nilai <code>datetime</code> daripada nilai <code>fileTime</code> dan menukarkannya kepada zon waktu tempatan. Filetime ialah nilai masa fail Windows yang mewakili bilangan selang masa 100-nanosaat yang telah berlalu sejak 12:00 tengah malam, 1 Januari 1601 A.D. (C.E.) Waktu Semesta Berkoordinat (UTC).\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>129876402529842245</code> menjadi nilai datetime.",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "Mencipta datetimezone daripada format datetime tempatan dan universal.",
        "Documentation.LongDescription": "Mencipta nilai <code>datetime</code> daripada perwakilan teks, <code>text</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan penghuraian tarikh menggunakan usaha terbaik.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"MMM\"</code> ialah <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, sementara dalam <code>\"ru-RU\"</code> <code>\"MMM\"</code> ialah <code>\"янв\", \"фев\", \"мар\", ...</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tukar <code>\"2010-12-31T01:30:00\"</code> menjadi nilai tarikhmasa.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "Tukar <code>\"2010-12-31T01:30:00.121212\"</code> menjadi nilai tarikhmasa.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "Tukar <code>\"2010-12-31T01:30:00\"</code> menjadi nilai tarikhmasa.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "Tukar <code>\"20101231T013000\"</code> menjadi nilai tarikhmasa.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "Tentukan sama ada masa tarikh ini berlaku dalam jam semasa kerana ia ditentukan oleh tarikh dan masa semasa dalam sistem.",
        "Documentation.LongDescription": "Tentukan sama ada nilai tarikh data <code>dateTime</code> yang ditentukan berlaku ketika jam semasa kerana ditentukan oleh tarikh dan masa semasa dalam sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>datetime</code> atau <code>datetimezone</code> akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam jam semasa.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "Tentukan sama ada masa tarikh ini berlaku dalam minit semasa kerana ia ditentukan oleh tarikh dan masa semasa dalam sistem.",
        "Documentation.LongDescription": "Tentukan sama ada nilai tarikh data <code>dateTime</code> yang ditentukan berlaku ketika minit semasa kerana ditentukan oleh tarikh dan masa semasa dalam sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>datetime</code> atau <code>datetimezone</code> akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam minit semasa.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "Tentukan sama ada masa tarikh ini berlaku dalam saat semasa kerana ia ditentukan oleh tarikh dan masa semasa dalam sistem.",
        "Documentation.LongDescription": "Tentukan sama ada nilai tarikh data <code>dateTime</code> yang ditentukan berlaku ketika saat semasa kerana ditentukan oleh tarikh dan masa semasa dalam sistem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>datetime</code> atau <code>datetimezone</code> akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam saat semasa.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada jam seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada jam seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam jam seterusnya.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada minit seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada minit seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam minit seterusnya.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada saat seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada saat seterusnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam saat seterusnya.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada jam sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada jam sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada jam semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam jam sebelumnya.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada minit sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada minit sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada minit semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam minit sebelumnya.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "Menunjukkan sama ada tarikhmasa ini berlaku pada saat sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai tarikhmasa <code>dateTime</code> yang diberikan berlaku pada saat sebelumnya, seperti yang ditentukan oleh tarikh dan masa pada sistem. Ambil perhatian bahawa fungsi ini akan mengembalikan false apabila dihantar nilai yang berlaku pada saat semasa.\r\n      <ul>\r\n      <li><code>dateTime</code>: Nilai <code>tarikhmasa</code> atau <code>datetimezone</code> yang akan dinilai.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada masa sistem semasa berada dalam saat sebelumnya.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "Mengembalikan bahagian masa bagi nilai datetime yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan bahagian masa bagi nilai datetime yang ditentukan, <code>dateTime</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai masa bagi #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "Mengembalikan rekod yang mengandungi bahagian nilai datetime.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengandungi sebahagian nilai datetime yang ditentukan, <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: Nilai <code>datetime</code> untuk yang mana rekod bahagiannya akan dikira.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tukarkan nilai <code>#datetime(2011, 12, 31, 11, 56, 2)</code> kepada rekod yang mengandungi nilai Tarikh dan Masa.",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "Mengembalikan perwakilan teks bagi nilai datetime.",
        "Documentation.LongDescription": "Mengembalikan perwakilan teks bagi <code>dateTime</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. <code>culture</code> hanya digunakan untuk aliran kerja legasi. <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan pemformatan tarikh menggunakan tetapan lalai yang ditentukan oleh <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"MMM\"</code> ialah <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, sementara dalam <code>\"ru-RU\"</code> <code>\"MMM\"</code> ialah <code>\"янв\", \"фев\", \"мар\", ...</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> dan <code>culture</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Tukar <code>#datetime(2010, 12, 31, 01, 30, 25)</code> menjadi nilai <code>teks</code>. <i>Output hasil mungkin berbeza bergantung pada budaya semasa.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "Tukar menggunakan format tersuai dan budaya Jerman.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "Tukar menggunakan corak ISO 8601.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "Mencipta datetimezone daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>datetimezone</code> daripada <code>value</code> yang ditentukan. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").\r\nJika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>DateTimeZone.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>datetimezone</code>, <code>value</code> dikembalikan. Nilai jenis berikut boleh ditukarkan kepada nilai <code>datetimezone</code>:\r\n      <ul>\r\n        <li><code>teks</code>: Nilai <code>datetimezone</code> daripada perwakilan teks. Rujuk <code>DateTimeZone.FromText</code> untuk butiran.</li>\r\n        <li><code>tarikh</code>: <code>datetimezone</code> dengan <code>value</code> sebagai komponen data, <code>12:00:00 TGH MLM</code> sebagai komponen masa dan ofset yang sepadan dengan zon waktu setempat.</li>\r\n        <li><code>tarikhmasa</code>: <code>datetimezone</code> dengan <code>value</code> sebagai tarikhmasa dan ofset yang sepadan dengan zon waktu setempat.</li>\r\n        <li><code>masa</code>: <code>datetimezone</code> dengan tarikh yang setara dengan Tarikh Automasi OLE bagi <code>0</code> sebagai komponen tarikh, <code>value</code> sebagai komponen masa dan ofset yang sepadan dengan zon waktu setempat.</li>\r\n        <li><code>nombor</code>: <code>datetimezone</code> dengan tarikhmasa yang setara dengan Tarikh Automasi OLE yang dinyatakan oleh <code>value</code> dan ofset yang sepadan dengan zon waktu setempat.</li>\r\n      </ul>\r\nJika <code>value</code> adalah daripada apa-apa jenis yang lain, ralat dikembalikan.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>\"2020-10-30T01:30:00-08:00\"</code> kepada nilai <code>datetimezone</code>.",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "Mencipta datetimezone daripada nombor panjang 64 bit.",
        "Documentation.LongDescription": "Mencipta nilai <code>datetimezone</code> daripada nilai <code>fileTime</code> dan menukarkannya kepada zon waktu tempatan. Filetime ialah nilai masa fail Windows yang mewakili bilangan selang masa 100-nanosaat yang telah berlalu sejak 12:00 tengah malam, 1 Januari 1601 A.D. (C.E.) Waktu Semesta Berkoordinat (UTC).\r\n    ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>129876402529842245</code> menjadi nilai datetimezone.",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "Mencipta datetimezone daripada format datetimezone setempat, universal dan tersuai.",
        "Documentation.LongDescription": "Mencipta nilai <code>datetimezone</code> daripada perwakilan teks, <code>text</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan penghuraian tarikh menggunakan usaha terbaik.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"MMM\"</code> ialah <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, sementara dalam <code>\"ru-RU\"</code> <code>\"MMM\"</code> ialah <code>\"янв\", \"фев\", \"мар\", ...</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>\"2010-12-31T01:30:00-08:00\"</code> menjadi nilai <code>datetimezone</code>.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "Tukar menggunakan format tersuai dan budaya Jerman.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "Tukar menggunakan ISO 8601.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "Mengalih keluar maklumat zon waktu daripada nilai datetimezone yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai #datetime daripada <code>dateTimeZone</code> dengan maklumat zon waktu timezone information dialih keluar.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar maklumat zon waktu daripada nilai #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0).",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "Menukarkan komponen zon waktu kepada zon waktu tempatan.",
        "Documentation.LongDescription": "Menukar maklumat zon waktu bagi nilai datetimezone <code>dateTimeZone</code> kepada maklumat zon waktu tempatan.\r\n    Jika <code>dateTimeZone</code> tidak mempunyai komponen zon waktu, maklumat zon waktu tempatan ditambah.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Tukar maklumat zon waktu untuk #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) kepada zon waktu tempatan (menganggap PST).",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "Mengembalikan rekod yang mengandungi bahagian nilai datetimezone.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengandungi sebahagian nilai datetimezone yang ditentukan <code>dateTimeZone</code>.\r\n <ul>\r\n        <li><code>dateTimeZone</code>: A <code>Nilai datetimezone</code> untuk yang mana rekod bahagiannya akan dikira.</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Tukarkan nilai <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> kepada rekod yang mengandungi nilai Tarikh, Masa dan Zon.",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "Mengembalikan perwakilan teks bagi nilai datetimezone.",
        "Documentation.LongDescription": "Mengembalikan perwakilan teks bagi <code>dateTimeZone</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. <code>culture</code> hanya digunakan untuk aliran kerja legasi. <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan pemformatan tarikh menggunakan tetapan lalai yang ditentukan oleh <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"MMM\"</code> ialah <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, sementara dalam <code>\"ru-RU\"</code> <code>\"MMM\"</code> ialah <code>\"янв\", \"фев\", \"мар\", ...</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> dan <code>culture</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Tukar <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> kepada nilai <code>teks</code>. <i>Output hasil mungkin berbeza bergantung pada budaya semasa.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "Tukar menggunakan format tersuai dan budaya Jerman.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "Tukar menggunakan corak ISO 8601.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "Menukarkan komponen zon waktu kepada zon waktu UTC.",
        "Documentation.LongDescription": "Menukar maklumat zon waktu bagi nilai datetime <code>dateTimeZone</code> kepada maklumat zon waktu UTC atau Waktu Universal.\r\n    Jika <code>dateTimeZone</code> tidak mempunyai komponen zon waktu, maklumat zon waktu UTC ditambah.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Tukar maklumat zon waktu untuk #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) kepada zon waktu UTC.",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "Menukar zon waktu bagi nilai.",
        "Documentation.LongDescription": "Menukar zon waktu bagi nilai.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "Menukar zon waktu bagi nilai.",
        "Documentation.LongDescription": "Menukar zon waktu bagi nilai.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "Mencipta Perpuluhan daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> Perpuluhan daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Decimal.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code> dalam julat Perpuluhan, <code>value</code> dikembalikan, jika tidak, ralat dikembalikan. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>number</code> Perpuluhan daripada <code>\"4.5\"</code>.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "Mengembalikan kandungan jadual Delta Lake.",
        "Documentation.LongDescription": "Mengembalikan kandungan jadual Delta Lake.",
        "Documentation.Category": "Mencapai data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "Mencipta Berganda daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>bilangan</code> Berganda daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Double.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>bilangan</code> dalam julat Berganda, <code>value</code> dikembalikan, jika tidak, ralat dikembalikan. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>nombor</code> Berganda daripada <code>\"4\"</code>.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "Mengembalikan bahagian hari bagi tempoh.",
        "Documentation.LongDescription": "Mengembalikan bahagian hari bagi <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Ekstrak bilangan hari antara dua tarikh.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "Mencipta tempoh daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>tempoh</code> daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Duration.From</code> mengembalikan <code>nol</code>.  Jika <code>value</code> yang ditentukan ialah <code>tempoh</code>, <code>value</code> dikembalikan. Nilai bagi jenis berikut boleh ditukarkan kepada nilai <code>tempoh</code>:\r\n      <ul>\r\n        <li><code>teks</code>: Nilai <code>tempoh</code> daripada bentuk masa berlalu (d.h:m:s). Rujuk <code>Duration.FromText</code> untuk butiran.</li>\r\n        <li><code>nombor</code>: <code>tempoh</code> yang setara dengan bilangan hari penuh atau sebahagian yang dinyatakan oleh <code>value</code>.</li>\r\n      </ul>\r\nJika <code>value</code> adalah daripada apa-apa jenis lain, ralat dikembalikan.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>2.525</code> kepada nilai <code>duration</code>.",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "Mengembalikan nilai tempoh daripada bentuk masa berlalu teks (d.h:m:s).",
        "Documentation.LongDescription": "Mengembalikan nilai tempoh daripada teks yang ditentukan, <code>text</code>. Format berikut boleh diuraikan oleh fungsi ini: \r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (Semua julat termasuk nilai minimum dan maksimumnya)<br>\r\n        ddd: Bilangan hari.<br>\r\n        hh: Bilangan jam, antara 0 dengan 23.<br>\r\n        mm: Bilangan minit, antara 0 dengan 59.<br>\r\n        ss: Bilangan saat, termasuk 0 dan 59.<br>\r\n        ff: Pecahan saat, antara 0 dengan 9999999.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>\"2.05:55:20\"</code> kepada nilai <code>duration</code>.",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "Mengembalikan bahagian jam bagi tempoh.",
        "Documentation.LongDescription": "Mengembalikan bahagian jam bagi <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Mengekstrak jam daripada nilai tempoh.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "Mengembalikan bahagian minit bagi tempoh.",
        "Documentation.LongDescription": "Mengembalikan bahagian minit bagi <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Mengekstrak minit daripada nilai tempoh.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "Mengembalikan bahagian saat bagi tempoh.",
        "Documentation.LongDescription": "Mengembalikan bahagian saat bagi <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Mengekstrak saat daripada nilai tempoh.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "Mengembalikan rekod yang mengandungi sebahagian tempoh.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengandungi sebahagian nilai tempoh, <code>duration</code>.\r\n  <ul>\r\n        <li><code>duration</code>: <code>duration</code> daripada yang mana rekod dicipta.</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>#duration(2, 5, 55, 20)</code> menjadi rekod bahagiannya termasuk hari, jam, minit dan saat jika berkenaan.",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "Mengembalikan teks dari bentuk \"d.h:m:s\".",
        "Documentation.LongDescription": "Mengembalikan perwakilan teks dalam bentuk \"day.hour:mins:sec\" bagi nilai tempoh yang diberikan, <code>duration</code>.\r\n <ul>\r\n        <li><code>duration</code>: <code>Tempoh</code> yang digunakan untuk mengira perwakilan teks.</li>\r\n  <li><code>format</code>: <i>[Optional]</i> Ditamatkan, akan menyebabkan ralat jika bukan nol</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>#duration(2, 5, 55, 20)</code> menjadi nilai teks.",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "Mengembalikan jumlah hari untuk jangkauan tempoh ini.",
        "Documentation.LongDescription": "Mengembalikan jumlah hari yang dirangkumi oleh <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Cari jumlah hari yang dirangkumi oleh nilai tempoh.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "Mengembalikan jumlah jam untuk jangkauan tempoh ini.",
        "Documentation.LongDescription": "Mengembalikan jumlah jam yang dirangkumi oleh <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Cari jumlah jam yang dirangkumi oleh nilai tempoh.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "Mengembalikan jumlah minit untuk jangkauan tempoh ini.",
        "Documentation.LongDescription": "Mengembalikan jumlah minit yang dirangkumi oleh <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Cari jumlah minit yang dirangkumi oleh nilai tempoh.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "Mengembalikan jumlah saat untuk jangkauan tempoh ini.",
        "Documentation.LongDescription": "Mengembalikan jumlah saat yang dirangkumi oleh <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Cari jumlah saat yang dirangkumi oleh nilai tempoh.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "Mengembalikan rekod ralat daripada nilai teks yang ditentukan untuk sebab, mesej dan butiran.",
        "Documentation.LongDescription": "Mengembalikan rekod ralat daripada nilai teks yang ditentukan untuk sebab, mesej dan butiran.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "Mengembalikan perwakilan kod sumber M bagi nilai malar.",
        "Documentation.LongDescription": "Mengembalikan perwakilan kod sumber M bagi nilai malar.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan perwakilan kod sumber M bagi nilai nombor.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "Dapatkan perwakilan kod sumber M bagi nilai tarikh.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "Dapatkan perwakilan kod sumber M bagi nilai teks.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "Mengembalikan hasil penilaian ungkapan M.",
        "Documentation.LongDescription": "Mengembalikan hasil penilaian ungkapan M <code>document</code>, dengan pengecam tersedia yang boleh dirujuk ditakrifkan oleh <code>environment</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Nilaikan jumlah mudah.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "Nilaikan jumlah yang lebih rumit.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "Nilaikan perangkaian nilai teks dengan pengecam.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "Mengembalikan perwakilan kod sumber M bagi pengecam.",
        "Documentation.LongDescription": "Mengembalikan perwakilan kod sumber M bagi pengecam <code>name</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan perwakilan kod sumber M bagi pengecam.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "Dapatkan perwakilan kod sumber M bagi pengecam yang mengandungi ruang.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "Mengembalikan kandungan bagi fail yang ditentukan sebagai perduaan.",
        "Documentation.LongDescription": "Mengembalikan kandungan fail, <code>path</code>, sebagai perduaan. Parameter <code>options</code> bertujuan untuk kegunaan dalaman sahaja buat masa ini.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "Mengembalikan sama ada fungsi tertentu dianggap sebagai sumber data.",
        "Documentation.LongDescription": "Mengemablikan sama ada <code>function</code> dianggap sebagai sumber data.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Menterjemahkan teks yang mewakili nilai geografi dalam format Well-Known Text (WKT) ke dalam rekod berstruktur.",
        "Documentation.LongDescription": "Menterjemahkan teks yang mewakili nilai geografi dalam format Well-Known Text (WKT) ke dalam rekod berstruktur. WKT adalah format standard yang ditakrifkan oleh Open Geospatial Consortium (OGC) dan format penyirian tipikal yang digunakan oleh pangkalan data termasuk SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "Menterjemahkan nilai titik geografi berstruktur ke dalam representasi Well-Known Text (WKT).",
        "Documentation.LongDescription": "Menterjemahkan nilai titik geografi berstruktur ke dalam representasi Well-Known Text (WKT) seperti yang ditakrifkan oleh Open Geospatial Consortium (OGC), juga format penyirian yang digunakan oleh kebanyakan pangkalan data termasuk SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Menterjemahkan teks yang mewakili nilai geometri dalam format Well-Known Text (WKT) ke dalam rekod berstruktur.",
        "Documentation.LongDescription": "Menterjemahkan teks yang mewakili nilai geometri dalam format Well-Known Text (WKT) ke dalam rekod berstruktur. WKT adalah format standard yang ditakrifkan oleh Open Geospatial Consortium (OGC) dan format penyirian tipikal yang digunakan oleh pangkalan data termasuk SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "Menterjemahkan nilai titik geometri berstruktur ke dalam perwakilan Well-Known Text (WKT).",
        "Documentation.LongDescription": "Menterjemahkan nilai titik geometri berstruktur ke dalam perwakilan Well-Known Text (WKT) seperti yang ditakrifkan oleh Open Geospatial Consortium (OGC), juga format serialisasi yang digunakan oleh kebanyakan pangkalan data termasuk SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "Mengembalikan nilai guid daripada nilai yang diberikan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>Guid.Type</code> daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Guid.From</code> mengembalikan <code>nol</code>. Pemeriksaan akan dilaksanakan untuk menentukan jika <code>value</code> yang ditentukan berada dalam format yang boleh diterima. Format yang boleh diterima diberikan dalam contoh.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Guid boleh diberikan sebagai 32 digit perenambelasan berdampingan.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid boleh diberikan sebagai 32 digit perenambelasan yang dipisahkan oleh sempang menjadi blok 8-4-4-4-12.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid boleh diberikan sebagai 32 digit perenambelasan yang dipisahkan oleh sempang dan diletakkan dalam pendakap.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid boleh diberikan sebagai 32 digit perenambelasan yang dipisahkan oleh sempang dan diletakkan dalam kurungan.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "Mencipta integer 16 bit integer daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> integer 16-bit daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Int16.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code> dalam julat integer 16-bit tanpa bahagian pecahan, <code>value</code> jika dikembalikan. Jika ia mempunyai bahagian pecahan, maka nombor dibundarkan dengan mod pembundaran yang ditentukan. Mod pembundaran lalai ialah <code>RoundingMode.ToEven</code>. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. Rujuk <code>Number.Round</code> untuk mod pembundaran yang tersedia. <code>culture</code> pilihan juga mungkin diberikan (untuk contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>nombor</code> integer 16 bit daripada <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Dapatkan nilai <code>number</code> integer 16 bit daripada <code>\"4.5\"</code> menggunakan <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "Mencipta integer 32 bit daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> integer 32-bit daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Int32.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code> dalam julat integer 32-bit tanpa bahagian pecahan, <code>value</code> jika dikembalikan. Jika ia mempunyai bahagian pecahan, maka nombor dibundarkan dengan mod pembundaran yang ditentukan. Mod pembundaran lalai ialah <code>RoundingMode.ToEven</code>. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. Rujuk <code>Number.Round</code> untuk mod pembundaran yang tersedia. <code>culture</code> pilihan juga mungkin diberikan (untuk contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>number</code> integer 32 bit daripada <code>\"4\"</code>.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Dapatkan nilai <code>nombor</code> integer 32 bit daripada <code>\"4.5\"</code> menggunakan <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "Wujudkan integer 64 bit dari nilai yang diberi.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> integer 64-bit daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Int64.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code> dalam julat integer 64-bit tanpa bahagian pecahan, <code>value</code> jika dikembalikan. Jika ia mempunyai bahagian pecahan, maka nombor dibundarkan dengan mod pembundaran yang ditentukan. Mod pembundaran lalai ialah <code>RoundingMode.ToEven</code>. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. Rujuk <code>Number.Round</code> untuk mod pembundaran yang tersedia. <code>culture</code> pilihan juga mungkin diberikan (untuk contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan integer 64 bit <code>number</code> nilai <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Dapatkan nilai <code>number</code> integer 64 bit daripada <code>\"4.5\"</code> dengan menggunakan <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "Mencipta integer 8 bit bertanda daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> integer 8-bit yang bertandatangan daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Int8.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code> dalam julat integer 8-bit yang bertandatangan tanpa bahagian pecahan, <code>value</code> dikembalikan. Jika ia mempunyai bahagian pecahan, maka nombor tersebut dibundarkan dengan mod pembundaran yang ditentukan. Mod pembundaran lalai ialah <code>RoundingMode.ToEven</code>. Jika <code>value</code> daripada apa-apa jenis yang lain, ia terlebih dahulu akan ditukarkankan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. Rujuk <code>Number.Round</code> untuk mod pembundaran yang tersedia. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>number</code> integer 8 bit bertanda daripada <code>\"4\"</code>.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Dapatkan nilai <code>number</code> integer 8 bit bertanda daripada <code>\"4.5\"</code> menggunakan <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "Mengembalikan pepohon sintaks abstrak (AST) untuk isi fungsi.",
        "Documentation.LongDescription": "<p>Mengembalikan pepohon sintaks abstrak (AST) untuk isi <code>function</code>, dinormalkan kepada <i>ungkapan item</i>:\r\n<ul>\r\n  <li>Fungsi mestilah 1 argumen lambda.</li>\r\n  <li>Semua rujukan kepada parameter fungsi digantikan dengan <code>ItemExpression.Item</code>.</li>\r\n  <li>AST akan diringkaskan agar mengandungi hanya nod daripada jenis berikut:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n      </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Ralat akan ditunjukkan jika AST ungkapan item tidak boleh dikembalikan untuk isi <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan AST untuk isi fungsi <code>each _ <> null</code>",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "Mengembalikan kandungan bagi dokumen JSON.",
        "Documentation.LongDescription": "Mengembalikan kandungan bagi dokumen JSON.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "Menghasilakan penampilan JSON bagi nilai yang ditentukan.",
        "Documentation.LongDescription": "<p>Menghasilkan penampilan JSON bagi nilai yang ditentukan <code>value</code> dengan pengekodan teks yang ditentukan oleh <code>encoding</code>. Jika <code>encoding</code> dikeluarkan, UTF8 akan digunakan. Nilai ditunjukkan seperti yang berikut:</p>\r\n <ul>\r\n        <li>Nilai nol, teks dan logik ditunjukkan sebegai jenis JSON yang sepadan</li>\r\n        <li>Nombor yang ditunjukkan sebagai nombor dalam JSON, kecuali <code>#infinity</code>, <code>-#infinity</code> dan <code>#nan</code> ditukarkan ke nol</li>\r\n        <li>Senarai adalah ditunjukkan sebagai tatasusunan JSON</li>\r\n        <li>Rekod adalah ditunjukkan sebagai objek JSON</li>\r\n        <li>Jadual adalah ditunjukkan sebagai tatasusunan objek</li>\r\n        <li>Tarikh, masa, tarikh masa, zon tarikh masa dan tempoh adalah ditunjukkan sebagai teks ISO-8601</li>\r\n        <li>Nilai perduaan adalah ditunjukkan sebagai teks dikodkan asas 64</li>\r\n        <li>Jenis dan fungsi menghasilkan ralat</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Menukar nilai kompleks ke JSON.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "Menukarkan nilai perduaan kepada senarai nilai teks yang dipisahkan pada garis pemisah. Jika gaya petikan ditentukan, maka garis pemisah mungkin muncul dalam petikan. Jika includeLineSeparators adalah benar, maka aksara garis pemisah disertakan dalam teks.",
        "Documentation.LongDescription": "Menukarkan nilai perduaan kepada senarai nilai teks yang dipisahkan pada garis pemisah. Jika gaya petikan ditentukan, maka garis pemisah mungkin muncul dalam petikan. Jika includeLineSeparators adalah benar, maka aksara garis pemisah disertakan dalam teks.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "Menukarkan nilai teks kepada senarai nilai teks yang dipisahkan pada pemisah baris. Jika includeLineSeparators adalah benar, maka aksara pemisah garisan disertakan dalam teks.",
        "Documentation.LongDescription": "Tukar nilai teks kepada senarai nilai teks yang dipisah pada pemisah garis. Jika includeLineSeparators adalah benar, maka aksara pemisah garis disertakan di dalam teks.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (lalai) Tiada kelakuan memetik diperlukan.</li>\r\n            <li><code>QuoteStyle.Csv:</code> Memetik adalah seperti Csv. Aksara petik kembar digunakan untuk menandakan sempadan seperti rantau, dan sepasang aksara petik kembar digunakan untuk menyatakan satu aksara petikan kembar di dalam seperti rantau. </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "Menukarkan senarai teks menjadi nilai perduaan menggunakan pengekodan yang ditentukan dan lineSeparator. lineSeparator yang ditentukan ditambah pada setiap baris.  Jika tidak ditentukan, maka kembalian penyorong dan aksara suap baris digunakan.",
        "Documentation.LongDescription": "Menukarkan senarai teks menjadi nilai perduaan menggunakan pengekodan yang ditentukan dan lineSeparator. lineSeparator yang ditentukan ditambah pada setiap baris.  Jika tidak ditentukan, maka kembalian penyorong dan aksara suap baris digunakan.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "Menukarkan senarai teks kepada teks tunggal.  lineSeparator yang ditentukan ditambah pada setiap baris.  Jika tidak ditentukan, maka kembalian penyorong dan aksara suap baris digunakan.",
        "Documentation.LongDescription": "Menukarkan senarai teks kepada teks tunggal.  lineSeparator yang ditentukan ditambah pada setiap baris.  Jika tidak ditentukan, maka kembalian penyorong dan aksara suap baris digunakan.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "Mengembalikan benar jika semua ungkapan adalah benar.",
        "Documentation.LongDescription": "Mengembalikan benar jika semua ungkapan dalam senarai <code>list</code> adalah benar.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Menentukan sama ada semua ungkapan dalam senarai {true, true, 2 > 0} adalah benar.",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "Menentukan sama ada semua ungkapan dalam senarai {true, true, 2 < 0} adalah benar.",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "Mengembalikan benar jika sebarang ungkapan adalah benar.",
        "Documentation.LongDescription": "Mengembalikan benar jika sebarang ungkapan dalam senarai <code>list</code> adalah benar.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Menentukan sama ada sebarang ungkapan dalam senarai {true, false, 2 > 0} adalah benar.",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "Menentukan sama ada sebarang ungkapan dalam senarai {2 = 0, false, 2 < 0} adalah benar.",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "Mengembalikan purata nilai. Berfungsi dengan nilai nombor, tarikh, datetime, datetimezone dan tempoh.",
        "Documentation.LongDescription": "Mengembalikan nilai purata untuk item dalam senarai, <code>list</code>. Hasil diberi dalam jenis data yang sama sebagai nilai dalam senarai. Hanya berfungsi dengan nilai nombor, tarikh, masa, datetime, datetimezone dan tempoh.\r\n    Jika senarai kosong, nol dikembalikan.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Cari purata daripada senarai nombor, <code>{3, 4, 6}</code>.",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "Cari purata nilai tarikh 1 Januari 2011, 2 Januari 2011 dan 3 Januari 2011.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "Menimbal senarai.",
        "Documentation.LongDescription": "Menimbal senarai <code>list</code> dalam memori. Hasil panggilan ini ialah senarai yang stabil.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cipta salinan stabil bagi senarai {1..10}.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "Mengembalikan senarai tunggal dengan menggabungkan berbilang senarai.",
        "Documentation.LongDescription": "Mengambil senarai kepada senarai, <code>lists</code> dan menggabungkannya menjadi senarai tunggal baru.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan dua senarai ringkas {1, 2} dan {3, 4}.",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "Gabungkan dua senarai, {1, 2} dan {3, {4, 5}}, salah satunya mengandungi senarai tersarang.",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "Mengembalikan bilangan item dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan bilangan item dalam senarai <code>list</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan nilai dalam senarai {1, 2, 3}.",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "Mengembalikan senarai nilai dengan pendua dialih keluar.",
        "Documentation.LongDescription": "Mengembalikan senarai yang mengandungi semua nilai dalam senarai <code>list</code> dengan pendua dialih keluar. Jika senarai adalah kosong, hasil ialah senarai kosong.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar pendua daripada senarai {1, 1, 2, 3, 3, 3}.",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "Mengembalikan nilai pertama daripada senarai atau nilai lalai yang ditentukan jika kosong.",
        "Documentation.LongDescription": "Mengembalikan item pertama dalam senarai <code>list</code>, atau nilai lalai pilihan, <code>defaultValue</code>, jika senarai kosong.\r\n    Jika senarai adalah kosong dan nilai lalai tidak ditentukan, fungsi mengembalikan <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai pertama dalam senarai {1, 2, 3}.",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "Cari nilai pertama dalam senarai {}. Jika senarai kosong, kembalikan -1.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "Mengembalikan persilangan nilai senarai yang ditemui dalam input.",
        "Documentation.LongDescription": "Mengembalikan persilangan nilai senarai yang ditemui dalam senarai input <code>lists</code>. Parameter pilihan, <code>equationCriteria</code>, boleh ditentukan.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Cari persilangan bagi senarai {1..5}, {2..6}, {3..7}.",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "Menunjukkan sama ada terdapat pendua dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan nilai logik sama ada terdapat pendua dalam senarai <code>list</code>; <code>true</code> jika senarai unik, <code>false</code> jika terdapat nilai pendua. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3} adalah unik (iaitu. tiada pendua).",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "Ketahui sama ada senarai {1, 2, 3, 3} adalah unik (iaitu. tiada pendua).",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "Mengembalikan benar jika senarai adalah kosong.",
        "Documentation.LongDescription": "Mengembalikan <code>true</code> jika senarai, <code>list</code>, tidak mengandungi nilai (panjang 0). Jika senarai mengandungi nilai (panjang > 0), mengembalikan <code>false</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Cari sama ada senarai {} adalah kosong.",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "Cari sama ada senarai {1, 2} adalah kosong.",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "Mengembalikan nilai terakhir daripada senarai atau nilai lalai yang ditentukan jika kosong.",
        "Documentation.LongDescription": "Mengembalikan item terakhir dalam senarai <code>list</code>, atau nilai lalai pilihan, <code>defaultValue</code>, jika senarai kosong.\r\n    Jika senarai adalah kosong dan nilai lalai tidak ditentukan, fungsi mengembalikan <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai terakhir dalam senarai {1, 2, 3}.",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "Cari nilai terakhir dalam senarai {} atau -1 jika ia kosong.",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "Mengembalikan nilai terakhir dalam senarai.  Boleh menentukan secara pilihan bilangan nilai untuk dikembalikan atau syarat kelayakan.",
        "Documentation.LongDescription": "Mengembalikan item terakhir pada senarai <code>list</code>. Jika senarai kosong, pengecualian dikembalikan.\r\n Fungsi ini mengambil parameter pilihan, <code>countOrCondition</code>, untuk menyokong pengumpulan berbilang item atau menapis item. <code>countOrCondition</code> boleh ditentukan melalui tiga cara:\r\n <ul>\r\n  <li>Jika nombor ditentukan, item sebanyak itu akan dikembalikan. </li>\r\n  <li>Jika syarat ditentukan, semua item dikembalikan yang pada asalnya memenuhi syarat, bermula di hujung senarai. Setelah item gagal syarat tersebut, tiada item selanjutnya akan dipertimbangkan. </li>\r\n  <li>Jika parameter ini ialah nol, item terakhir dalam senarai akan dikembalikan.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai terakhir dalam senarai {3, 4, 5, -1, 7, 8, 2}.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "Cari nilai terakhir dalam senarai {3, 4, 5, -1, 7, 8, 2} yang lebih besar daripada sifar 0.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "Mengembalikan nilai maksimum atau nilai lalai untuk senarai kosong.",
        "Documentation.LongDescription": "Mengembalikan item maksimum dalam senarai <code>list</code>, atau nilai lalai pilihan <code>default</code> jika senarai kosong.\r\n    Nilai comparisonCriteria pilihan, <code>comparisonCriteria</code>, boleh ditentukan untuk menentukan cara bagi membandingkan item dalam senarai. Jika parameter ini ialah nol, pembanding lalai digunakan.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Cari maks dalam senarai {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "Cari maks dalam senarai {} atau kembalikan -1 jika ia kosong. ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "Mengembalikan nilai median dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan item median senarai <code>list</code>. Fungsi ini mengembalikan <code> null</code> jika senarai tidak mengandungi nilai tidak <code> null</code> \r\n    Jika terdapat bilangan item yang lebih banyak, fungsi ini memilih lebih kecil daripada dua item median melainkan senarai itu\r\n    terdiri sepenuhnya dari datetimes, durasi, nombor atau masa, di mana ia mengembalikan purata dua item.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Cari median bagi senarai <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "Mengembalikan nilai minimum atau nilai lalai untuk senarai kosong.",
        "Documentation.LongDescription": "Mengembalikan item minimum dalam senarai <code>list</code>, atau nilai lalai pilihan <code>default</code> jika senarai kosong.\r\n    Nilai comparisonCriteria pilihan, <code>comparisonCriteria</code>, boleh ditentukan untuk menentukan cara bagi membandingkan item dalam senarai. Jika parameter ini ialah nol, pembanding lalai digunakan.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Cari min dalam senarai {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "Cari min dalam senarai {} atau kembalikan -1 jika ia kosong. ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "Mengembalikan nilai paling kerap dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan item yang muncul paling kerap dalam senarai, <code>list</code>. Jika senarai kosong, pengecualian dikembalikan. Jika berbilang item muncul dengan kekerapan maksimum yang sama, yang terakhir dipilih.\r\n    Nilai <code>comparisonCriteria</code> pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Cari item yang muncul paling kerap dalam senarai <code>{\"A\", 1, 2, 3, 3, 4, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "Cari item yang muncul paling kerap dalam senarai <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "Mengembalikan senarai nilai paling kerap dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan item yang muncul paling kerap dalam senarai, <code>list</code>. Jika senarai kosong, pengecualian dikembalikan. Jika berbilang item muncul dengan kekerapan maksimum yang sama, yang terakhir dipilih.\r\n    Nilai <code>comparisonCriteria</code> pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Cari item yang muncul paling kerap dalam senarai <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "Mengembalikan bilangan item bukan nol dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan bilangan item bukan nol dalam senarai <code>list</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "Mengembalikan senarai ofset untuk input.",
        "Documentation.LongDescription": "Mengembalikan senarai ofset untuk senarai input <code>list</code>.\r\n    Apabila menggunakan List.Transform untuk menukar senarai, senarai kedudukan boleh digunakan untuk memberi akses transformasi kepada kedudukan.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari ofset nilai dalam senarai {1, 2, 3, 4, null, 5}.",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "Mengembalikan hasil bagi nombor dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan hasil bagi nombor bukan nol dalam senarai, <code>numbersList</code>. Mengembalikan nombor jika terdapat nilai bukan nol dalam senarai.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Cari hasil nombor dalam senarai <code>{1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "Mengembalikan senarai nombor rawak.",
        "Documentation.LongDescription": "Mengembalikan senarai nombor rawak antara 0 dan 1, jika bilangan nilai untuk dijana dan nilai benih pilihan diberikan. \r\n<ul>\r\n   <li><code>count</code>: Bilangan nilai rawak untuk dijana.</li>\r\n   <li><code>seed</code>:  <i>[Pilihan]</i> Nilai angka yang digunakan untuk menyemai penjana nombor rawak.  Jika dikecualikan, senarai unik nombor rawak dijana setiap kali anda memanggil fungsi.  Jika anda menentukan nilai benih dengan nombor, setiap panggilan kepada fungsi menjana senarai nombor rawak yang sama.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Mencipta senarai 3 nombor rawak.",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "Mencipta senarai 3 nombor rawak, menentukan nilai benih.",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "Mengembalikan senarai yang melangkau bilangan elemen yang ditentukan di permulaan senarai.",
        "Documentation.LongDescription": "Mengembalikan senarai yang mengalih keluar elemen pertama pada senarai <code>list</code>. Jika <code>list</code> ialah senarai kosong, senarai kosong dikembalikan.\r\nFungsi ini mengambil parameter pilihan, <code>countOrCondition</code>, untuk menyokong mengalih keluar berbilang nilai seperti yang disenaraikan di bawah. \r\n <ul>\r\n <li>Jika nombor ditentukan, item sebanyak itu akan dialih keluar. </li>\r\n <li>Jika syarat ditentukan, senarai yang dikembalikan bermula dengan elemen pertama dalam <code>list</code> yang memenuhi kriteria tersebut. Setelah item gagal syarat tersebut, tiada item selanjutnya akan dipertimbangkan. </li>\r\n <li>Jika parameter ini ialah nol, kelakuan lalai diperhatikan. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada {1, 2, 3, 4, 5} tanpa 3 nombor pertama.",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Cipta senarai daripada {5, 4, 2, 6, 1} yang bermula dengan nombor kurang daripada 3.",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "Mengembalikan senarai yang mengalih keluar bilangan elemen yang ditentukan daripada hujung senarai.",
        "Documentation.LongDescription": "Mengembalikan senarai yang mengalih keluar <code>countOrCondition</code> elemen terakhir daripada hujung senarai <code>list</code>. Jika <code>list</code> mempunyai kurang daripada <code>countOrCondition</code> elemen, senarai kosong dikembalikan.\r\n <ul>\r\n <li>Jika nombor ditentukan, item sebanyak itu akan dialih keluar. </li>\r\n <li>Jika syarat ditentukan, senarai yang dikembalikan tamat dengan elemen pertama dari bawah dalam <code>list</code> yang memenuhi kriteria tersebut. Setelah item gagal syarat tersebut, tiada item selanjutnya akan dipertimbangkan. </li>\r\n <li>Jika parameter ini ialah nol, hanya satu item akan dialih keluar. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada {1, 2, 3, 4, 5} tanpa 3 nombor terakhir.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Cipta senarai daripada {5, 4, 2, 6, 4} yang tamat dengan nombor kurang daripada 3.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "Mengalih keluar semua nilai \"nol\" daripada senarai yang ditentukan.",
        "Documentation.LongDescription": "Mengalih keluar semua tika nilai \"nol\" dalam <code>list</code>. Jika tiada nilai 'nol' dalam senarai, senarai asal dikembalikan.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Mengalih keluar nilai \"nol\" daripada senarai {1, 2, 3, null, 4, 5, null, 6}.",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "Terbalikan urutan nilai dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan senarai dengan nilai dalam senarai <code>list</code> dalam urutan terbalik.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada {1..10} dalam tertib terbalik.",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "Mengembalikan satu item senarai untuk senarai dengan panjang satu, sebaliknya mengembalikan pengecualian.",
        "Documentation.LongDescription": "Jika hanya terdapat satu item dalam senarai <code>list</code>, mengembalikan item tersebut.\r\n    Jika terdapat lebih daripada satu item atau senarai adalah kosong, fungsi mengembalikan pengecualian.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai tunggal dalam senarai {1}.",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "Cari nilai tunggal dalam senarai {1, 2, 3}.",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "Mengembalikan satu item senarai untuk senarai dengan panjang satu dan nilai lalai untuk senarai kosong.",
        "Documentation.LongDescription": "Jika hanya terdapat satu item dalam senarai <code>list</code>, mengembalikan item tersebut.\r\n    Jika senarai adalah kosong, fungsi mengembalikan nol melainkan <code>default</code> pilihan ditentukan. Jika terdapat lebih daripada satu item dalam senarai, fungsi mengembalikan ralat.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai tunggal dalam senarai {1}.",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "Cari nilai tunggal dalam senarai {}.",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "Cari nilai tunggal dalam senarai {}. Jika kosong, kembalikan -1.",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "Mengembalikan senarai yang melangkau bilangan elemen yang ditentukan di permulaan senarai.",
        "Documentation.LongDescription": "Mengembalikan senarai yang melangkau elemen pertama pada senarai <code>list</code>. Jika <code>list</code> ialah senarai kosong, senarai kosong dikembalikan.\r\nFungsi ini mengambil parameter pilihan, <code>countOrCondition</code>, untuk menyokong melangkau berbilang nilai seperti yang disenaraikan di bawah. \r\n <ul>\r\n <li>Jika nombor ditentukan, item sebanyak itu akan dilangkau. </li>\r\n <li>Jika syarat ditentukan, senarai yang dikembalikan bermula dengan elemen pertama dalam <code>list</code> yang memenuhi kriteria tersebut. Setelah item gagal syarat tersebut, tiada item selanjutnya akan dipertimbangkan. </li>\r\n <li>Jika parameter ini ialah nol, kelakuan lalai diperhatikan. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai daripada {1, 2, 3, 4, 5} tanpa 3 nombor pertama.",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Cipta senarai daripada {5, 4, 2, 6, 1} yang bermula dengan nombor kurang daripada 3.",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "Isih senarai data menurut kriteria yang ditentukan.",
        "Documentation.LongDescription": "Mengisih senarai data, <code>list</code>, mengikut kriteria pilihan yang ditentukan.\r\n    Parameter pilihan, <code>comparisonCriteria</code>, boleh ditentukan sebagai kriteria perbandingan. Ini boleh jadi dalam bentuk nilai berikut:\r\n    <ul>\r\n    <li> Untuk mengawal tertib, kriteria perbandingan boleh jadi nilai penyenaraian Tertib. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> Untuk mengira kunci yang akan digunakan untuk pengisihan, fungsi 1 argumen boleh digunakan. </li>\r\n    <li> Untuk memilih kunci dan juga mengawal tertib, kriteria perbandingan boleh jadi senarai yang mengandungi kunci dan tertib (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> Untuk mengawal perbandingan sepenuhnya, fungsi 2 argumen boleh digunakan. Fungsi ini akan menyalin dua item daripada senarai (mana-mana dua item, mengikut sebarang tertib). Fungsi seharusnya mengembalikan salah satu daripada nilai berikut:\r\n        <ul>\r\n            <li> <code>-1</code>: Item pertama adalah kurang daripada item kedua.</li>\r\n            <li> <code>0</code>: Item adalah sama.</li>\r\n            <li> <code>1</code>: Item pertama adalah lebih besar daripada item kedua.</li>\r\n        </ul>\r\n        Value.Compare adalah kaedah yang boleh digunakan untuk mewakilkan logik ini. </li>\r\n    </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Isih senarai {2, 3, 1}.",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Isih senarai {2, 3, 1} dalam urutan menurun.",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "Isih senarai {2, 3, 1} dalam urutan menurun menggunakan kaedah Value.Compare.",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "Mengembalikan sampel berdasarkan anggaran sisihan piawai.",
        "Documentation.LongDescription": "Mengembalikan sampel berdasarkan anggaran sisihan piawai bagi nilai dalam senarai, <code>numbersList</code>. \r\n    Jika <code>numbersList</code> ialah senarai nombor, nombor dikembalikan.\r\n    Pengecualian dikembalikan pada senarai kosong atau senarai item yang bukan daripada jenis <code>number</code>.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Cari sisihan piawai bagi nombor 1 hingga 5.",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "Mengembalikan jumlah item dalam senarai.",
        "Documentation.LongDescription": "Mengembalikan jumlah nilai bukan nol dalam senarai, <code>list</code>.  Mengembalikan nombor jika terdapat nilai bukan nol dalam senarai.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "Cari jumlah nombor dalam senarai <code>{1, 2, 3}</code>.",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "Mengembalikan kesatuan nilai senarai yang ditemui dalam input.",
        "Documentation.LongDescription": "Mengambil senarai bagi senarai <code>lists</code>, menyatukan item dalam senarai individu dan mengembalikannya dalam senarai output. Sebagai hasil, senarai yang dikembalikan mengandungi semua item dalam sebarang senarai input. \r\n    Operasi ini mengekalkan semantik beg tradisional, maka nilai pendua dipadankan sebagai sebahagian daripada Kesatuan. \r\n    Nilai kriteria persamaan pilihan, <code>equationCriteria</code>, boleh ditentukan untuk mengawal ujian persamaan. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Cipta kesatuan daripada senarai {1..5}, {2..6}, {3..7}.",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "Mengembalikan satu senarai bagi beberapa senarai dengan menggabungkan item pada kedudukan yang sama dalam berbilang senarai.",
        "Documentation.LongDescription": "Mengambil satu senarai bagi beberapa senarai, <code>lists</code> dan mengembalikan satu senarai bagi beberapa senarai yang menggabungkan item pada kedudukan yang sama.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Membuat zip untuk dua senarai mudah {1, 2} dan {3, 4}.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Membuat zip untuk dua senarai mudah bagi panjang yang berbeza {1, 2} dan {3}.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "Mencipta logik daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>logical</code> daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan ialah <code>null</code>, <code>Logical.From</code> mengembalikan <code>null</code>. Jika <code>value</code> yang diberikan ialah <code>logical</code>, <code>value</code> dikembalikan. Nilai daripada jenis berikut boleh ditukarkan kepada nilai <code>logical</code>:\r\n      <ul>\r\n        <li><code>text</code>: Nilai <code>logical</code> daripada nilai teks, sama ada <code>\"true\"</code> atau <code>\"false\"</code>. Lihat <code>Logical.FromText</code> untuk butiran.</li>\r\n        <li><code>number</code>: <code>false</code> jika <code>value</code> bersamaan dengan <code>0</code>, <code>true</code> sebaliknya.</li>\r\n      </ul>\r\nJika <code>value</code> jika sebarang jenis lain, ralat dikembalikan.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>2</code> kepada nilai <code>logical</code>.",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "Mencipta nilai logik daripada nilai teks \"true\" dan \"false\".",
        "Documentation.LongDescription": "Mencipta nilai logik daripada nilai teks <code>text</code>, sama ada \"true\" atau \"false\". Jika <code>text</code> mengandungi rentetan berlainan, pengecualian dikembalikan. Nilai teks <code>text</code> adalah sensitif huruf besar atau kecil.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Cipta nilai logik daripada rentetan teks \"true\".",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "Cipta nilai logik daripada rentetan teks \"a\".",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "Mengembalikan teks \"true\" atau \"false\" jika nilai logik ditentukan.",
        "Documentation.LongDescription": "Mencipta nilai teks daripada nilai logik <code>logicalValue</code>, sama ada <code>true</code> atau <code>false</code>. Jika <code>logicalValue</code> bukan nilai logik, pengecualian dikembalikan.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Cipta nilai teks daripada logik <code>true</code>.",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "Mengembalikan nilai mutlak bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan nilai mutlak bagi <code>number</code>. Jika <code>number</code> adalah nol, <code>Number.Abs</code> mengembalikan nol.\r\n    <ul>\r\n        <li><code>number</code>: <code>number</code> untuk yang mana nilai mutlak perlu dikira.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Nilai mutlak -3.",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "Mengembalikan lengkok kosinus bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan lengkok kosinus bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "Mengembalikan lengkok sinus bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan lengkok sinus bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "Mengembalikan lengkok tangen bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan lengkok tangen bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "Mengembalikan bait yang mana setiap bit ialah bertentangan input.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada melaksanakan operasi bit \"Not\" pada <code>number</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "Mengembalikan kosinus bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan kosinus bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Cari kosinus bagi sudut 0.",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "Mengembalikan kosinus hiperbola bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan kosinus hiperbola bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "Menguasakan e kepada kuasa yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menguasakan e kepada kuasa <code>number</code> (fungsi eksponen).\r\n      <ul>\r\n        <li><code>number</code>: <code>number</code> untuk yang mana fungsi eksponen perlu dikira. Jika <code>number</code> adalah nol, <code>Number.Exp</code> mengembalikan nol. </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Kuasakan e kepada kuasa 3.",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "Mengembalikan faktorial bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan faktorial bagi nombor <code>number</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Cari faktorial bagi 10.",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "Mencipta nombor daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> daripada <code>value</code> yang ditentukan. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").\r\nJika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Number.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>nombor</code>, <code>value</code> dikembalikan. Nilai bagi jenis yang berikut boleh ditukarkan kepada nilai <code>number</code>:\r\n      <ul>\r\n        <li><code>teks</code>: Nilai <code>nombor</code> daripada perwakilan teks. Format teks lazim dikendalikan (\"15\", \"3,423.10\", \"5.0E-10\"). Rujuk <code>Number.FromText</code> untuk butiran.</li>\r\n        <li><code>logik</code>: 1 untuk <code>benar</code>, 0 untuk <code>salah</code>.</li>\r\n        <li><code>tarikhmasa</code>: Nombor titik apungan kepersisan berganda yang mengandungi tarikh Automasi OLE yang setara.</li>\r\n        <li><code>datetimezone</code>: Nombor titik apungan kepersisan berganda yang mengandungi tarikh Automasi OLE yang setara bagi tarikh dan masa tempatan <code>value</code>.</li>\r\n        <li><code>date</code>: Nombor titik apungan kepersisan berganda yang mengandungi tarikh Automasi OLE yang setara.</li>\r\n        <li><code>masa</code>: Dinyatakan dalam hari pecahan.</li>\r\n        <li><code>tempoh</code>: Dinyatakan dalam hari secara keseluruhan atau pecahan.</li>\r\n      </ul>\r\nJika <code>value</code> ialah mana-mana jenis yang lain, ralat dikembalikan.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>number</code> bagi <code>\"4\"</code>.",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Dapatkan nilai <code>number</code> bagi <code>#datetime(2020, 3, 20, 6, 0, 0)</code>.",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "Dapatkan nilai <code>number</code> sebanyak <code>\"12.3%\"</code>.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "Mencipta nombor daripada format teks biasa (\"15\", \"3,423.10\", \"5.0E-10\").",
        "Documentation.LongDescription": "Mengembalikan nilai <code>number</code> daripada nilai teks yang ditentukan, <code>text</code>.\r\n <ul>\r\n  <li><code>text</code>: Dapatkan perwakilan teks bagi nilai nombor. Perwakilan mesti dalam format nombor lazim, seperti \"15\", \"3,423.10” atau \"5.0E-10\".</li>\r\n  <li><code>culture</code>: Budaya pilihan yang mengawal cara <code>text</code> ditafsirkan (contohnya, \"en-US\").</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai nombor bagi <code>\"4\"</code>.",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Dapatkan nilai nombor bagi <code>\"5.0e-10\"</code>.",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "Menunjukkan sama ada nilai genap.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai, <code>number</code>, ialah genap dengan mengembalikan <code>true</code> jika ia genap, <code>false</code> sebaliknya.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Semak sama ada 625 ialah nombor genap.",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "Semak sama ada 82 ialah nombor genap.",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "Menunjukkan sama ada nilai ialah NaN (Bukan nombor).",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai ialah NaN (Bukan nombor). Mengembalikan <code>true</code> jika <code>number</code> bersamaan dengan <code>Number.IsNaN</code>, <code>false</code> sebaliknya.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Semak sama ada 0 dibahagikan dengan 0 ialah NaN.",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "Semak sama ada 1 dibahagikan dengan 0 ialah NaN.",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "Menunjukkan sama ada nilai ganjil.",
        "Documentation.LongDescription": "Menunjukkan sama ada nilai ganjil. Mengembalikan <code>true</code> jika <code>number</code> ialah nombor ganjil, <code>false</code> sebaliknya.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Semak sama ada 625 ialah nombor ganjil.",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "Semak sama ada 82 ialah nombor ganjil.",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "Mengembalikan logaritma asli bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan logaritma asli bagi nombor, <code>number</code>. Jika <code>number</code> adalah nol <code>Number.Ln</code> mengembalikan nol.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan logaritma asli bagi 15.",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "Mengembalikan logaritma bagi nombor kepada asas yang tentukan (e lalai).",
        "Documentation.LongDescription": "Mengembalikan logaritma bagi nombor, <code>number</code>, kepada asas <code>base</code> yang ditentukan. Jika <code>base</code> tidak ditentukan, nilai lalai ialah Number.E. \r\n    Jika <code>number</code> ialah nol <code>Number.Ln</code> mengembalikan nol.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan logaritma asas 10 bagi 2.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "Dapatkan logaritma asas e bagi 2.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "Mengembalikan logaritma asas 10 bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan logaritma asas 10 bagi nombor, <code>number</code>. Jika <code>number</code> ialah nol <code>Number.Log10</code>, mengembalikan nol.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan logaritma asas 10 bagi 2.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "Mengembalikan tanda dibundarkan. Bilangan digit dan mod pembundaran boleh ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil pembundaran <code>number</code> kepada nombor yang terdekat. Jika <code>number</code> adalah nol, <code>Number.Round</code> mengembalikan nol.<br>\r\n      <br>\r\n      Secara lalai, <code>number</code> dibundarkan kepada integer terdekat, dan ikata dipecahkan dengan membundarkan kepada nombor genap yang terhampir (menggunakan <code>RoundingMode.ToEven</code>, juga dikenali sebagai \"pembundaran jurubank\").<br>\r\n      <br>\r\n      Namun, lalai ini boleh diatasi melalui parameter pilihan berikut.\r\n      <ul>\r\n        <li><code>digits</code>: Sebab <code>number</code> untuk dibundarkan kepada bilangan digit perpuluhan tertentu.</li>\r\n        <li><code>roundingMode</code>: Mengatasi tingkah laku pemecahan ikatan lalai apabila <code>number</code> pada titik tengah antara dua nilai berpotensi yang dibundarkan\r\n      (rujuk <code>RoundingMode.Type</code> untuk nilai yang mungkin).</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Bundarkan 1.234 kepada integer terdekat.",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "Bundarkan 1.56 kepada integer terdekat.",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "Bundarkan 1.2345 kepada dua tempat perpuluhan.",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "Bundarkan 1.2345 kepada tiga tempat perpuluhan (Bundar ke atas).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "Bundarkan 1.2345 kepada tiga tempat perpuluhan (Bundar ke bawah).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "Mengembalikan hasil pembundaran nombor positif ke atas dan nombor negatif ke bawah. Bilangan digit boleh dinyatakan.",
        "Documentation.LongDescription": "Mengembalikan hasil pembundaran <code>number</code> berdasarkan tanda nombor. Fungsi ini akan membundarkan nombor positif ke atas dan nombor negatif ke bawah.\r\n    Jika <code>digits</code> ditentukan, <code>number</code> dibundarkan kepada <code>digits</code> bilangan digit perpuluhan.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Bundarkan nombor -1.2 menjauhi sifar.",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "Bundarkan nombor 1.2 menjauhi sifar.",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "Bundarkan nombor -1.234 kepada dua titik perpuluhan jauh daripada sifar.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "Mengembalikan nombor tertinggi sebelumnya. Bilangan digit boleh ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil pembundaran <code>number</code> ke bawah kepada integer tertinggi sebelumnya. Jika <code>number</code> adalah nol, fungsi ini mengembalikan nol.\r\n\r\n    Jika <code>digits</code> diberikan, <code>number</code> dibundarkan kepada bilangan digit perpuluhan tertentu.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Bundarkan ke bawah 1.234 kepada integer.",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "Bundarkan ke bawah 1.999 kepada integer.",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "Bulatkan ke bawah 1.999 kepada dua titik perpuluhan.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "Mengembalikan hasil pembundaran nombor positif ke bawah dan nombor negatif ke atas. Bilangan digit boleh ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil pembundaran <code>number</code> berdasarkan tanda nombor. Fungsi ini akan membundarkan nombor positif ke bawah dan nombor negatif ke atas.\r\n    Jika <code>digits</code> ditentukan, <code>number</code> dibundarkan kepada <code>digits</code> bilangan digit perpuluhan.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Bundarkan nombor -1.2 ke arah sifar.",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "Bundarkan nombor 1.2 ke arah sifar.",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "Bundarkan nombor -1.234 kepada dua titik perpuluhan ke arah sifar.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "Mengembalikan integer tertinggi seterusnya. Bilangan digit boleh ditentukan.",
        "Documentation.LongDescription": "Mengembalikan hasil pembundaran <code>number</code> sehingga kepada integer tertinggi seterusnya. Jika <code>number</code> adalah nol, fungsi ini mengembalikan nol.\r\n    Jika <code>digits</code> diberikan, <code>number</code> dibundarkan kepada bilangan digit perpuluhan tertentu.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Bundarkan ke atas 1.234 kepada integer.",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "Bundarkan ke atas 1.999 kepada integer.",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "Bulatkan ke atas 1.234 kepada dua titik perpuluhan.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "Mengembalikan 1 jika nombor positif, -1 jika ia negatif dan 0 jika ia sifar.",
        "Documentation.LongDescription": "Mengembalikan 1 untuk jika <code>number</code> ialah nombor positif, -1 jika ialah nombor negatif dan 0 jika ia sifar.\r\n    Jika <code>number</code> adalah nol, <code>Number.Sign</code> mengembalikan nol.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Tentukan tanda bagi 182.",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "Tentukan tanda bagi -182.",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "Tentukan tanda bagi 0.",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "Mengembalikan sinus bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan sinus bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Cari sinus bagi sudut 0.",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "Mengembalikan sinus hiperbola bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan kosinus hiperbola bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "Mengembalikan punca kuasa dua bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan punca kuasa dua bagi <code>number</code>.\r\n    Jika <code>number</code> adalah nol, <code>Number.Sqrt</code> mengembalikan nol. Jika ia adalah nilai negatif, <code>Number.NaN</code> dikembalikan (Bukan nombor).",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Cari punca kuasa dua bagi 625.",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "Cari punca kuasa dua bagi 85.",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "Mengembalikan tangen bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan tangen bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Cari tangen bagi sudut 1.",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "Mengembalikan tangen hiperbola bagi nombor.",
        "Documentation.LongDescription": "Mengembalikan tangen hiperbola bagi <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "Menukarkan nombor yang ditentukan kepada teks.",
        "Documentation.LongDescription": "Menukar nilai angka <code>number</code> kepada nilai teks mengikut format yang ditentukan oleh <code>format</code>.<br>\r\n    <br>\r\n    Format ialah nilai teks yang menunjukkan cara nombor harus ditukar. Untuk butiran lanjut tentang nilai format yang disokong, pergi ke https://go.microsoft.com/fwlink/?linkid=2241210 dan https://go.microsoft.com/fwlink/?linkid=2240884.<br>\r\n    <br>\r\n    <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\") untuk mengawal tingkah laku bergantung budaya <code>format</code>.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Tukar nombor kepada teks tanpa menentukan format.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "Tukar nombor kepada format eksponen.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "Tukarkan format nombor kepada format peratusan dengan hanya satu tempat perpuluhan.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "Mengembalikan jadual suapan OData yang ditawarkan oleh perkhidmatan OData.",
        "Documentation.LongDescription": "Mengembalikan jadual suapan OData yang ditawarkan oleh perkhidmatan OData daripada uri <code>serviceUri</code>, pengepala <code>headers</code>. Nilai boolean yang menentukan sama ada hendak menggunakan sambungan serentak atau parameter rekod pilihan, <code>options</code>, boleh ditentukan untuk mengawal pilihan berikut:\r\n    <ul>\r\n    <li><code>Query</code>: Tambahkan parameter pertanyaan secara programatik pada URL tanpa perlu risau tentang pelepasan. </li>\r\n    <li> <code>Headers</code> : Menentukan nilai ini sebagai rekod akan memberikan pengepala tambahan pada permintaan HTTP.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: Menentukan nilai ini sebagai senarai akan mengecualikan kunci pengepala HTTP ini daripada menjadi sebahagian daripada pengiraan untuk membuat cache data.</li>\r\n    <li> <code>ApiKeyName</code> : Jika laman sasaran mempunyai notasi kunci API, parameter ini boleh digunakan untuk menentukan nama (bukan nilai) bagi parameter kunci yang mesti digunakan dalam URL. Nilai kunci sebenar diberikan dalam kelayakan.</li>\r\n    <li> <code>Timeout</code> : Menentukan nilai ini sebagai tempoh akan mengubah tamat masa untuk permintaan HTTP. Nilai lalai ialah 600 saat.</li>\r\n    <li> <code>EnableBatch</code> : Logik (benar/palsu) yang menetapkan sama ada membenarkan penjanaan permintaan $batch OData jika panjang telah melebihi MaxUriLength (lalai ialah palsu).</li>\r\n    <li> <code>MaxUriLength</code> : Nombor yang menandakan panjang maksimum uri yang dibenarkan yang dihantar ke perkhidmatan OData. Jika melebihi had, dan EnableBatch ialah benar, maka permintaan akan dibuat kepada titik akhir $batch OData, jika tidak permintaan akan gagal (lalai ialah 2048).</li>\r\n    <li> <code>Concurrent</code> : Logik (benar/palsu) apabila ditetapkan kepada benar, permintaan kepada perkhidmatan akan dibuat secara serentak. Apabila ditetapkan kepada palsu, permintaan akan dibuat secara berurutan. Apabila tidak ditentukan, nilai akan ditentukan oleh anotasi AsynchronousRequestsSupported perkhidmatan. Jika perkhidmatan tidak menentukan sama ada AsynchronousRequestsSupported disokong, permintaan akan dibuat secara berurutan.</li>\r\n    <li> <code>ODataVersion</code> : Nombor (3 atau 4) yang menentukan versi protokol OData untuk digunakan bagi perkhidmatan OData ini. Apabila tidak ditentukan, semua versi yang disokong akan diminta. Versi perkhidmatan akan ditentukan oleh pengepala Versi-OData yang dikembalikan oleh perkhidmatan.</li>\r\n    <li> <code>FunctionOverloads</code> : Logik (benar/palsu) apabila ditetapkan kepada benar, beban lebihan import fungsi akan disenaraikan dalam pengemudi sebagai entri berasingan, apabila ditetapkan kepada palsu, beban lebihan import fungsi akan disenaraikan sebagai satu fungsi gabungan dalam pengemudi. Nilai lalai untuk V3: palsu. Nilai lalai untuk V4: benar.</li>\r\n    <li> <code>MoreColumns</code> : Logik (benar/palsu) apabila ditetapkan kepada benar, menambahkan lajur \"Lebih Banyak Lajur\" pada setiap suapan entiti yang mengandungi jenis terbuka dan jenis polimorf. Ini akan mengandungi medan yang tidak diisytiharkan dalam jenis asas. Apabila palsu, medan ini tiada. Lalai kepada palsu.</li>\r\n    <li> <code>IncludeAnnotations</code> : Senarai dipisahkan koma bagi ruang nama bagi nama atau corak istilah yang layak untuk disertakan dengan \"*\" sebagai kad bebas. Secara lalai, tiada anotasi disertakan.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code> : Senarai dipisahkan koma bagi ruang nama bagi nama atau corak istilah yang layak untuk disertakan pada permintaan dokumen metadata, dengan \"*\" sebagai kad bebas. Secara lalai, menyertakan anotasi yang sama sebagai IncludeAnnotations.</li>\r\n    <li> <code>OmitValues</code> : Membenarkan perkhidmatan OData mengelak daripada menulis nilai tertentu dalam respons. Jika diakui oleh perkhidmatan, kami akan mentaabir nilai tersebut daripada medan yang tidak dimasukkan. Pilihan merangkumi:\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code> : Membenarkan perkhidmatan OData untuk tidak memasukkan nilai nol.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Implementation</code> : Menentukan pelaksanaan penyambung OData untuk digunakan. Nilai yang sah ialah \"2.0\" atau nol.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Sambung ke perkhidmatan OData Tripin.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "Mengembalikan hasil daripada percubaan mentaabir keupayaan SQL untuk pemacu ODBC.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada percubaan mentaabir keupayaan SQL dengan rentetan sambungan <code>connectionString</code> menggunakan ODBC. <code>connectionString</code> boleh jadi teks atau rekod pasangan nilai sifat. Nilai sifat boleh jadi teks atau nombor.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Kembalikan keupayaan SQL yang dirujuk untuk rentetan sambungan.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "Mengembalikan kandungan dokumen Parquet sebagai jadual.",
        "Documentation.LongDescription": "Mengembalikan kandungan dokumen Parquet sebagai jadual. Pilihan termasuk:\n    <ul>\n    <li> <code>TypeMapping</code> : Nilai teks yang mengawal pemetaan jenis lalai apabila membaca dan menulis fail. Nilai lalai adalah nol dan cuba untuk mengekalkan ketepatan sebanyak mungkin terhadap jenis asal. Nilai \"Sql\" akan menghasilkan keputusan yang paling serasi dengan Sql Server.</li>\n    </ul>",
        "Documentation.Category": "Mencapai data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Mencapai data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "Mengembalikan nilai peratusan daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>peratusan</code> daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Percentage.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan ialah <code>teks</code> dengan simbol peratus belakang, maka nombor perpuluhan yang ditukar akan dikembalikan. Jika tidak, nilai akan ditukar kepada <code>nombor</code> menggunakan <code>Number.From</code>. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>percentage</code> sebanyak <code>\"12.3%\"</code>.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "Mengembalikan rekod bingkai data daripada fail RData.",
        "Documentation.LongDescription": "Mengembalikan rekod bingkai data daripada fail RData.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "Menggabungkan rekod dalam senarai yang ditentukan.",
        "Documentation.LongDescription": "Menggabungkan rekod dalam senarai yang ditentukan <code>records</code>. Jika <code>records</code> mengandungi nilai bukan rekod, ralat dikembalikan.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Cipta rekod digabungkan daripada rekod.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "Mengembalikan bilangan medan dalam rekod.",
        "Documentation.LongDescription": "Mengembalikan bilangan medan dalam rekod <code>record</code>.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan medan dalam rekod.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "Mengembalikan nama bagi medan.",
        "Documentation.LongDescription": "Mengembalikan nama bagi medan dalam rekod <code>record</code> sebagai teks.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nama bagi medan dalam rekod.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "Mengembalikan senarai nilai medan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai medan dalam rekod <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai medan dalam rekod.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "Mencipta rekod daripada jadual bagi bentuk {[Name = name, Value = value]}.",
        "Documentation.LongDescription": "Mengembalikan rekod daripada jadual rekod <code>table</code> yang mengandungi nama medan dan nama nilai <code>{[Name = name, Value = value]}</code>. Pengecualian dikembalikan jika nama medan bukan unik.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Cipta rekod daripada jadual bagi bentuk ({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}).",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "Mengembalikan senarai nilai yang mengandungi nilai medan daripada rekod input.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai yang mengandungi nilai medan daripada input <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Ekstrak nilai medan daripada rekod.",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "Mengembalikan pepohon sintaks abstrak (AST) yang mewakili capaian kepada lajur dalam ungkapan baris.",
        "Documentation.LongDescription": "Mengembalikan pepohon sintaks abstrak (AST) yang mewakili capaian kepada lajur <code>columnName</code> daripada baris dalam ungkapan baris.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Mencipta AST menunjukkan capaian bagi lajur \"CustomerName\".",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "Mengembalikan pepohon sintaks abstrak (AST) untuk isi fungsi.",
        "Documentation.LongDescription": "<p>Mengembalikan pepohon sintaks abstrak (AST) untuk isi <code>function</code>, dinormalkan kepada <i>ungkapan baris</i>:\r\n<ul>\r\n  <li>Fungsi mestilah 1 argumen lambda.</li>\r\n  <li>Semua rujukan kepada parameter fungsi digantikan dengan <code>RowExpression.Row</code>.</li>\r\n  <li>Semua rujukan kepada lajur digantikan dengan <code>RowExpression.Column(<i>columnName</i>)</code>.</li>\r\n  <li>AST akan diringkaskan supaya mengandungi hanya nod jenis berikut:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Ralat akan ditunjukkan jika AST ungkapan baris tidak boleh dikembalikan untuk isi <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan AST untuk isi fungsi <code>setiap [CustomerID] = \"ALFKI\"</code>",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "Mencipta Tunggal daripada nilai yang diberikan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>nombor</code> Tunggal daripada <code>value</code> yang ditentukan. Jika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Single.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan adalah <code>nombor</code> dalam julat Tunggal, <code>value</code> dikembalikan, jika tidak, ralat dikembalikan. Jika <code>value</code> adalah daripada apa-apa jenis lain, ia terlebih dahulu akan ditukarkan kepada <code>nombor</code> menggunakan <code>Number.FromText</code>. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan nilai <code>number</code> Tunggal daripada <code>\"1.5\"</code>.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "Mengembalikan jadual data dari satu titik tamat indeks Smartsheet.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "Membuat panggilan ke REST API Smartsheet 2.0 di titik tamat tertentu dan mengubah elemen data yang dikembalikan menjadi jadual.",
        "Documentation.Examples": [
          {
            "Description": "Menarik jadual maklumat pengguna daripada API Smartsheet",
            "Code": "Smartsheet.Content(\"pengguna\")",
            "Result": "Jadual dengan maklumat pengguna seperti yang dikembalikan oleh API Smartsheet"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada sebarang pemisah yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada sebarang pemisah yang ditentukan.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input dengan koma atau koma bernoktah, mengabaikan petikan dan pemisah petikan dan bermula dari permulaan input.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "Pisahkan input dengan koma atau koma bernoktah, mengabaikan petikan dan pemisah petikan dan bermula dari hujung input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks menurut pemisah yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks menurut pemisah yang ditentukan.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input dengan koma, mengabaikan koma yang dipetik.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada setiap pemisah yang ditentukan dalam jujukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada setiap pemisah yang ditentukan dalam jujukan.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input dengan koma, kemudian koma bernoktah, bermula dari permulaan input.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "Pisahkan input dengan koma, kemudian koma bernoktah, mengendalikan petikan seperti apa-apa aksara lain dan bermula dari hujung input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks mengikut setiap panjang yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks mengikut setiap panjang yang ditentukan.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input kepada dua aksara pertama diikuti dengan tiga yang berikutnya, bermula dari awal input.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "Pisahkan input kepada tiga aksara pertama diikuti dengan dua yang berikutnya, bermula dari hujung input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada setiap kedudukan yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks pada setiap kedudukan yang ditentukan.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input pada kedudukan yang ditentukan, bermula dari permulaan input.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "Pisahkan input pada kedudukan yang ditentukan, bermula dari hujung input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks menurut ofset dan panjang yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks mengikut ofset dan panjang yang ditentukan. Panjang nol menunjukkan bahawa semua input yang tinggal harus disertakan.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Pisahkan input mengikut kedudukan dan pasangan panjang yang ditentukan, bermula dari permulaan input. Ambil perhatian bahawa julat dalam contoh ini bertindih.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "Pisahkan input dengan kedudukan dan pasangan panjang yang ditentukan, bermula dari hujung input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "Pisahkan input kepada poskod panjang tetap diikuti dengan nama bandar panjang pemboleh ubah.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks selepas panjang yang ditentukan berulang kali.",
        "Documentation.LongDescription": "Mengembalikan fungsi yang memisahkan teks kepada senarai teks selepas panjang yang ditentukan berulang kali.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Secara berulang kali pisahkan input kepada cebisan tiga aksara, bermula dari permulaan input.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "Secara berulang kali pisahkan input kepada cebisan tiga aksara, bermula dari hujung input.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "Mengembalikan anggaran bilangan baris dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan anggaran bilangan baris dalam <code>table</code>, atau ralat jika sumber data tidak menyokong anggaran.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Anggarkan bilangan gabungan bandar dan negeri yang berbeza dalam jadual besar, yang boleh digunakan sebagai anggaran kejituan untuk lajur. Anggaran kewajipan adalah penting yang mana pelbagai sumber data (seperti SQL Server) menyokong penganggaran tertentu ini, kerap menggunakan algoritma yang dipanggil HyperLogLog.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "Mengembalikan bilangan lajur dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan bilangan lajur dalam jadual <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan lajur dalam jadual.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "Mengembalikan nama lajur sebagai senarai.",
        "Documentation.LongDescription": "Mengembalikan nama lajur dalam jadual <code>table</code> sebagai senarai teks.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Cari nama lajur bagi jadual.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "Mengembalikan baris pertama atau nilai lalai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris pertama <code>table</code> atau nilai lalai pilihan, <code>default</code>, jika jadual kosong.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Cari baris pertama jadual .",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Cari baris pertama jadual <code>({})</code> atau kembalikan [a = 0, b = 0] jika kosong.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "Mengembalikan lajur pertama daripada baris pertama jadual atau nilai lalai yang dinyatakan.",
        "Documentation.LongDescription": "Mengembalikan lajur pertama daripada baris pertama jadual <code>table</code> atau nilai lalai yang dinyatakan.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "Nyatakan sama ada jadual mengandungi hanya baris tersendiri (tiada pendua).",
        "Documentation.LongDescription": "Nyatakan sama ada <code>table</code> mengandungi hanya baris tersendiri (tiada pendua). Mengembalikan <code>true</code> jika baris adalah unik, <code>false</code> sebaliknya.\r\n    Parameter pilihan, <code>comparisonCriteria</code>, menentukan lajur yang mana pada jadual diuji untuk penduaan. Jika <code>comparisonCriteria</code> tidak diperlukan, semua lajur telah diuji.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada jadual adalah tersendiri.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "Tentukan sama ada jadual adalah tersendiri dalam lajur.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "Menunjukkan sama ada jadual mengandungi sebarang baris.",
        "Documentation.LongDescription": "Menunjukkan sama ada <code>table</code> mengandungi sebarang baris. Mengembalikan <code>true</code> jika tiada baris (iaitu jadual kosong), <code>false</code> sebaliknya.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Tentukan sama ada jadual adalah kosong.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "Tentukan sama ada jadual <code>({})</code> adalah kosong.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "Mengembalikan kunci bagi jadual yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan kunci bagi jadual yang ditentukan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan senarai kunci untuk jadual.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "Mengembalikan baris terakhir atau nilai lalai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan baris terakhir <code>table</code> atau nilai lalai pilihan, <code>default</code>, jika jadual kosong.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Cari baris terakhir jadual.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "Cari baris terakhir jadual <code>({})</code> atau kembalikan [a = 0, b = 0] jika kosong.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "Mengembalikan bilangan baris dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan bilangan baris dalam <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan baris dalam jadual .",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "Mengembalikan baris tunggal dalam jadual.",
        "Documentation.LongDescription": "Mengembalikan baris tunggal dalam satu baris <code>table</code>. Jika <code>table</code> mempunyai lebih daripada satu baris, pengecualian dikembalikan.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan baris tunggal dalam jadual.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "Mencipta senarai bagi senarai tersarang nilai lajur daripada jadual.",
        "Documentation.LongDescription": "Mencipta senarai bagi senarai tersarang daripada jadual, <code>table</code>.  Setiap item senarai ialah senarai dalaman yang mengandungi nilai lajur.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Ciptakan senarai nilai lajur daripada jadual.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "Menukarkan jadual kepada senarai dengan menggunakan fungsi penggabungan yang ditentukan pada setiap baris nilai dalam jadual.",
        "Documentation.LongDescription": "Menukarkan jadual kepada senarai dengan menggunakan fungsi penggabungan yang ditentukan pada setiap baris nilai dalam jadual.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan teks bagi setiap baris dengan koma.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "Menukarkan jadual kepada senarai rekod.",
        "Documentation.LongDescription": "Menukarkan jadual, <code>table</code>, kepada senarai rekod.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Tukarkan jadual kepada senarai rekod.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "Mencipta senarai bagi senarai tersarang nilai baris daripada jadual.",
        "Documentation.LongDescription": "Mencipta senarai bagi senarai tersarang daripada jadual, <code>table</code>.  Setiap item senarai ialah senarai dalaman yang mengandungi nilai baris.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Ciptakan senarai nilai baris daripada jadual.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "Mencipta rekod ralat diubah suai yang tidak akan mencetuskan sandaran apabila dibuang oleh pengendali yang ditentukan pada pandangan (melalui Table.View).",
        "Documentation.LongDescription": "Mencipta rekod ralat diubah suai daripada <code>errorRecord</code> yang tidak akan mencetuskan sandaran apabila dibuang oleh pengendali yang ditentukan pada pandangan (melalui Table.View).",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "Mencipta fungsi yang boleh dipintas oleh pengendali yang ditentukan pada paparan (melalui Table.View).",
        "Documentation.LongDescription": "<p>Mencipta fungsi pandangan berdasarkan <code>function</code> yang boleh dikendalikan dalam pandangan yang dicipta oleh <code>Table.View</code>.</p>\r\nPengendali <p><code>OnInvoke</code> bagi <code>Table.View</code> boleh digunakan untuk mentakrifkan pengendali untuk fungsi pandangan.</p>\r\n<p>Dengan pengendali untuk pengendalian terbina dalam, jika tiada pengendali <code>OnInvoke</code> ditentukan, atau jika ia tidak mengendalikan fungsi pandangan, atau jika ralat ditimbulkan oleh pengendali, <code>function</code> digunakan pada bahagian atas pandangan.</p>\r\n<p>Rujuk dokumentasi penyambung tersuai Power Query yang diterbitkan untuk penerangan yang lebih lengkap bagi <code>Table.View</code> dan fungsi pandangan tersuai.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "Mengembalikan nilai teks dengan semua aksara kawalan dialih keluar.",
        "Documentation.LongDescription": "Mengembalikan nilai teks dengan semua aksara kawalan <code>text</code> dialih keluar.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar suapan baris dan aksara kawalan lain daripada nilai teks.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "Merangkaikan senarai nilai teks menjadi satu nilai teks.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada menggabungkan senarai nilai teks, <code>texts</code> kepada nilai teks tunggal. Sebarang <code>nilai</code> nol yang terdapat dalam <code>texts</code> diabaikan.\r\n    Ralat <code>separator</code> digunakan dalam teks gabungan akhir boleh ditentukan.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Gabungkan nilai teks \"Seattle\" dan \"WA\".",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "Gabungkan nilai teks \"Seattle\" dan \"WA\" dipisahkan oleh koman dan ruang.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "Gabungkan nilai \"Seattle\", <code>nol</code> dan \"WA\", dipisahkan oleh koma dan ruang. (Ambil perhatian bahawa <code>nol</code> diabaikan.)",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "Mencipta nilai teks daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan perwakilan teks <code>value</code>. <code>value</code> boleh menjadi nilai <code>number</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>datetimezone</code>, <code>logical</code>, <code>duration</code> atau <code>binary</code> .\r\n    Jika nilai yang ditentukan ialah nol, <code>Text.From</code> mengembalikan nol. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Cipta nilai teks daripada nombor 3.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "Menyahkodkan data daripada bentuk perduaan kepada teks.",
        "Documentation.LongDescription": "Menyahkod data, <code>binary</code>, daripada bentuk perduaan kepada nilai teks, menggunakan jenis <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "Mentaabir jenis nombor bergranul (Int64.Type, Double.Type, dan sebagainya) bagi nombor yang dikodkan dalam teks.",
        "Documentation.LongDescription": "Mentaabir jenis nombor bergranul (Int64.Type, Double.Type, dan sebagainya) bagi <code>text</code>. Ralat dibangkitkan jika <code>text</code> bukan nombor. <code>culture</code> pilihan mungkin juga diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "Mengembalikan bilangan aksara.",
        "Documentation.LongDescription": "Mengembalikan bilangan aksara dalam teks <code>text</code>.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan aksara yang ada dalam teks \"Hello World\".",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "Menukar semua aksara kepada huruf kecil.",
        "Documentation.LongDescription": "Mengembalikan hasil penukaran semua aksara dalam <code>text</code> kepada huruf kecil. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan versi huruf kecil bagi \"AbCd\".",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "Menjadikan huruf pertama bagi setiap perkataan huruf besar.",
        "Documentation.LongDescription": "Mengembalikan hasil penghurufbesaran hanya huruf pertama bagi setiap perkataan dalam nilai teks <code>text</code>. Semua huruf lain dikembalikan dalam huruf kecil. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Gunakan <code>Text.Proper</code> pada ayat mudah.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "Menterbalikkan <code>text</code> yang diberikan.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Terbalikkan teks \"123\".",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "Mengekodkan teks kepada bentuk perduaan.",
        "Documentation.LongDescription": "Mengekodkan nilai teks yang ditentukan, <code>text</code>, kepada nilai perduaan menggunakan <code>encoding</code> yang ditentukan.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "Mengembalikan senarai nilai aksara daripada nilai teks yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan senarai nilai aksara daripada nilai teks yang ditentukan <code>text</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Cipta senarai nilai aksara daripada nilai teks \"Hello World\".",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "Mengalih keluar semua ruang putih hadapan dan belakang.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada mengalih keluar semua ruang putih hadapan dan belakang daripada nilai teks <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar semua ruang putih hadapan dan belakang daripada \"     a b c d    \".",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "Mengalih keluar semua ruang putih belakang.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada mengalih keluar semua ruang putih belakang daripada nilai teks <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar ruang putih belakang daripada \"     a b c d    \".",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "Mengalih keluar semua ruang putih hadapan.",
        "Documentation.LongDescription": "Mengembalikan hasil daripada mengalih keluar semua ruang putih hadapan daripada nilai teks <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Alih keluar ruang putih hadapan daripada \"     a b c d    \".",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "Menukar semua aksara kepada huruf besar.",
        "Documentation.LongDescription": "Mengembalikan hasil penukaran semua aksara dalam <code>text</code> kepada huruf besar. <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan versi huruf besar bagi \"aBcD\".",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "Mengembalikan penghujung jam.",
        "Documentation.LongDescription": "Mengembalikan penghujung jam yang diwakili oleh <code>dateTime</code>, termasuk pecahan saat. Maklumat zon waktu dikekalkan.\r\n      <ul>\r\n        <li><code>dateTime</code>: Nilai <code>time</code>, <code>datetime</code> atau <code>datetimezone</code> untuk mengira penghujung jam.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Dapatkan penghujung jam untuk 5/14/2011 05:00:00 PM.",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "Dapatkan penghujung jam untuk 5/17/2011 05:00:00 PM -7:00.",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "Mencipta masa daripada nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan nilai <code>masa</code> daripada <code>value</code> yang ditentukan. <code>culture</code> pilihan juga mungkin diberikan (sebagai contoh, \"en-US\").\r\nJika <code>value</code> yang ditentukan adalah <code>nol</code>, <code>Time.From</code> mengembalikan <code>nol</code>. Jika <code>value</code> yang ditentukan adalah <code>masa</code>, <code>value</code> dikembalikan. Nilai bagi jenis berikut boleh ditukarkan kepada nilai <code>masa</code>:\r\n      <ul>\r\n        <li><code>teks</code>: Nilai <code>masa</code> daripada perwakilan teks. Rujuk <code>Time.FromText</code> untuk butiran.</li>\r\n        <li><code>tarikhmasa</code>: Komponen masa bagi <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: Komponen masa bagi tarikhmasa yang setara bagi <code>value</code>.</li>\r\n        <li><code>nombor</code>: <code>Masa</code> yang setara dengan bilangan hari pecahan yang dinyatakan oleh <code>value</code>. Jika <code>value</code> adalah negatif atau lebih besar atau sama dengan 1, ralat dikembalikan.</li>\r\n      </ul>\r\nJika <code>value</code> adalah daripada apa-apa jenis lain, ralat dikembalikan.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>0.7575</code> kepada nilai <code>time</code>.",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "Menukar <code>#datetime(1899, 12, 30, 06, 45, 12)</code> kepada nilai <code>time</code>.",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "Mencipta Masa daripada format Masa setempat dan universal, dan tersuai.",
        "Documentation.LongDescription": "Mencipta nilai <code>time</code> daripada perwakilan teks, <code>text</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan penghuraian masa menggunakan usaha terbaik.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"tt\"</code> ialah <code>\"AM\" or \"PM\"</code>, sementara dalam <code>\"ar-EG\"</code> <code>\"tt\"</code> ialah <code>\"ص\" or \"م\"</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Menukar <code>\"10:12:31am\"</code> menjadi nilai Masa.",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "Tukar <code>\"1012\"</code> menjadi nilai Time.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "Tukar <code>\"10\"</code> menjadi nilai Time.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "Mengembalikan komponen jam.",
        "Documentation.LongDescription": "Mengembalikan komponen jam bagi nilai <code>time</code>, <code>datetime</code> atau <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Cari jam dalam #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "Mengembalikan komponen minit.",
        "Documentation.LongDescription": "Mengembalikan komponen minit bagi nilai <code>time</code>, <code>datetime</code> atau <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Cari minit dalam #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "Mengembalikan komponen saat.",
        "Documentation.LongDescription": "Mengembalikan komponen saat bagi nilai <code>time</code>, <code>datetime</code> atau <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Cari nilai kedua daripada nilai tarikhmasa.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "Mengembalikan permulaan jam.",
        "Documentation.LongDescription": "Mengembalikan permulaan jam yang diwakili oleh <code>dateTime</code>.\r\n    <code>dateTime</code> mesti nilai <code>time</code>, <code>datetime</code> atau <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Cari permulaan jam bagi 10 Oktober 2011, 8:10:32PG.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "Mengembalikan rekod yang mengandungi bahagian nilai Masa.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengandungi sebahagian nilai Masa yang ditentukan, <code>time</code>.\r\n <ul>\r\n        <li><code>time</code>: Nilai <code>time</code> untuk yang mana rekod bahagiannya akan dikira.</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Tukarkan nilai <code>#time(11, 56, 2)</code> kepada rekod yang mengandungi nilai Masa.",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "Mengembalikan perwakilan teks bagi nilai masa.",
        "Documentation.LongDescription": "Mengembalikan perwakilan teks bagi <code>time</code>. Parameter <code>record</code> pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. <code>culture</code> hanya digunakan untuk aliran kerja legasi. <code>record</code> boleh mengandungi medan berikut:\r\n<ul>\r\n   <li><code>Format</code>: Nilai <code>text</code> yang menunjukkan format untuk digunakan. Untuk butiran lanjut, pergi ke https://go.microsoft.com/fwlink/?linkid=2180104 dan https://go.microsoft.com/fwlink/?linkid=2180105. Mengabaikan medan ini atau memberikan <code>null</code> akan menyebabkan pemformatan tarikh menggunakan tetapan lalai yang ditentukan oleh <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Apabila <code>Format</code> bukan nol, <code>Culture</code> mengawal sesetengah penentu format. Contohnya, dalam <code>\"en-US\"</code> <code>\"tt\"</code> ialah <code>\"AM\" or \"PM\"</code>, sementara dalam <code>\"ar-EG\"</code> <code>\"tt\"</code> ialah <code>\"ص\" or \"م\"</code>. Apabila <code>Format</code> adalah <code>null</code>, <code>Culture</code> mengawal format lalai untuk digunakan. Apabila <code>Culture</code> adalah <code>null</code> atau diabaikan, <code>Culture.Current</code> digunakan.</li>\r\n</ul>\r\nUntuk menyokong aliran kerja legasi, <code>options</code> dan <code>culture</code> boleh juga merupakan nilai teks. Ini mempunyai tingkah laku yang sama seperti jika <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Tukar <code>#time(01, 30, 25)</code> menjadi nilai <code>text</code>. <i>Output hasil mungkin berbeza bergantung pada budaya semasa.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "Tukar menggunakan format tersuai dan budaya Jerman.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "Tukar menggunakan format masa standard.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "Kembalikan versi tertutup bagi jenis rekod yang diberi (atau jenis yang sama, jika ia telah ditutup).",
        "Documentation.LongDescription": "Kembalikan versi tertutup bagi <code>record</code> <code>type</code> yang diberi (atau jenis yang sama, jika ia telah ditutup).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Wujudkan versi tertutup <code>type [ A = number,…]</code>.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "Mengembalikan faset jenis.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengandungi faset <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "Kembalikan rekod dengan nilai medan ditetapkan kepada nama parameter jenis fungsi, dan nilai mereka ditetapkan kepada jenis yang berkaitan dengan mereka.",
        "Documentation.LongDescription": "Kembalikan rekod dengan nilai medan yang ditetapkan kepada nama parameter <code>type</code>, dan nilai mereka ditetapkan kepada jenis yang berkaitan dengan mereka.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Cari jenis parameter untuk fungsi <code>(x as number, y as text)</code>.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "Kembalikan nombor yang menentukan nombor minimum parameter yang diperlukan untuk memulakan jenis fungsi.",
        "Documentation.LongDescription": "Kembalikan nombor yang menentukan nombor minimum parameter yang diperlukan untuk memulakan input <code>type</code> fungsi.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Cari bilangan parameter yang diperlukan bagi fungsi <code>(x as number, optional y as text)</code>.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "Kembalikan jenis yang dikembalikan oleh jenis fungsi.",
        "Documentation.LongDescription": "Kembalikan jenis yang dikembalikan oleh fungsi <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Cari jenis kembalian <code>() as any)</code>.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "Kembalikan true jika jenis merupakan jenis boleh nol; jika tidak, false.",
        "Documentation.LongDescription": "Kembalikan <code>true</code> jika jenis merupakan jenis <code>nullable</code> ; jika tidak, <code>false</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Tentukan jika <code>number</code> merupakan boleh nol.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "Tentukan jika jenis <code>nombor boleh nol</code> merupakan boleh nol.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "Kembalikan sama ada jenis rekod adalah terbuka.",
        "Documentation.LongDescription": "Kembalikan <code>logical</code> menentukan sama ada rekod <code>type</code> adalah terbuka.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Tentukan jika rekod <code>type [ A = number, ...]</code> adalah terbuka.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "Kembalikan jenis item daripada jenis senarai.",
        "Documentation.LongDescription": "Kembalikan jenis item daripada senarai <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Cari jenis item daripada senarai <code>{number}</code>.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "Kembalikan jenis bukan boleh nol daripada sesuatu jenis.",
        "Documentation.LongDescription": "Kembalikan jebis bukan <code>nullable</code> daripada <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Kembalikan jenis bukan boleh nol daripada <code>type nullable number</code>.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "Kembalikan versi terbuka jenis rekod yang diberi (atau jenis yang sama, jika ia telah terbuka).",
        "Documentation.LongDescription": "Kembalikan versi terbuka <code>record</code> <code>type</code> yang diberi (atau jenis yang sama, jika ia telah dibuka).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Wujudkan versi terbuka <code>type [ A = number]</code>.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "Kembalikan rekod yang menerangkan medan jenis rekod dengan setiap medan bagi jenis rekod yang dikembalikan mempunyai nama yang berkaitan dan nilai.",
        "Documentation.LongDescription": "Kembalikan rekod yang menerangkan medan rekod <code>type</code>. Setiap medan bagi jenis rekod yang dikembalikan mempunyai nama yang berkaitan dan nilai, dalam bentuk rekod <code>[ Type = type, Optional = logical ]</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Cari nama dan nilai rekod <code>[ A = number, optional B = any]</code>.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "Mengembalikan kemungkinan senarai kunci kosong untuk jenis jadual yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan kemungkinan senarai kunci yang kosong untuk jenis jadual yang diberikan.<br>\r\n    <br>\r\n    Setiap kunci ditentukan menggunakan rekod dalam borang berikut:\r\n    <ul>\r\n      <li>\r\n        <code>Lajur</code>: senarai nama lajur yang menentukan kunci\r\n      </li>\r\n      <li>\r\n        <code>Utama</code>: <code>benar</code> jika kunci ialah kunci utama jadual; jika tidak, <code>salah</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Kembalikan maklumat kunci untuk jenis jadual.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "Mengembalikan jenis baris bagi jenis jadual.",
        "Documentation.LongDescription": "Mengembalikan jenis baris bagi jenis jadual yang ditentukan. Hasilnya sentiasa jenis rekod.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Kembalikan maklumat jenis baris untuk jadual mudah.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "Mengembalikan kesatuan senarai jenis.",
        "Documentation.LongDescription": "Mengembalikan kesatuan jenis dalam <code>types</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "Himpunkan rekod into rentetan pertanyaan URI.",
        "Documentation.LongDescription": "Himpunkan rekod <code>query</code> ke dalam rentetan pertanyaan URI, aksara pelepasan jika diperlukan.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Kodkan rentetan pertanyaan yang mengandungi beberapa aksara khas.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "Kodkan aksara khas dengan mengikut RFC 3986.",
        "Documentation.LongDescription": "Kodkan aksara khas dalam input <code>data</code> dengan mengikut peraturan RFC 3986.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Kodkan aksara khas dalam \"+money$\".",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "Mengembalikan bahagian URI mutlak input sebagai rekod.",
        "Documentation.LongDescription": "Mengembalikan bahagian input <code>absoluteUri</code> sebagai rekod, yang mengandungi nilai seperti Skim, Hos, Port, Laluan, Pertanyaan, Pecahan, Nama Pengguna dan Kata Laluan.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Cari bahagian URI mutlak \"www.adventure-works.com\".",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "Nyahkod rentetan terkod peratus.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "Masukkan Url Perkhidmatan Analitis Azure DevOps anda.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Mengembalikan kandungan yang dimuat turun daripada url Perkhidmatan Analitis Azure DevOps sebagai nilai perduaan. Fungsi ini menggunakan kelayakan yang berbeza untuk organisasi yang berbeza."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "Masukkan Url Perkhidmatan Analitis Azure DevOps anda.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Mengembalikan kandungan yang dimuat turun daripada url Perkhidmatan Analitis Azure DevOps sebagai nilai perduaan. Fungsi ini menggunakan kelayakan global untuk semua organisasi yang boleh dicapai."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "Melahirkan pelan pertanyaan alternatif.",
        "Documentation.LongDescription": "Melahirkan pelan pertanyaan alternatif dalam ungkapan pelan pertanyaan yang diperoleh melalui Value.Expression(Value.Optimize(...)). Tidak bertujuan untuk kegunaan lain.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "Mengembalikan pepohon sintaks abstrak (AST) yang mewakili ungkapan nilai.",
        "Documentation.LongDescription": "Mengembalikan pohon sintaks abstrak (AST) yang mewakili ungkapan nilai",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "Mencipta nilai ditaip kukuh daripada perwakilan teks.",
        "Documentation.LongDescription": "Menyahkod nilai daripada perwakilan teks, <code>text</code>, dan mentafsirnya sebagai nilai dengan jenis yang sesuai.\r\n    <code>Value.FromText</code> mengambil nilai teks dan mengembalikan nombor, nilai logik, nilai nol, nilai datetime, nilai tempoh atau nilai teks. Nilai teks yang kosong ditafsirkan sebagai nilai nol.\r\n    <code>culture</code> pilihan juga mungkin diberikan (contohnya, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "Mengembalikan rekod yang mengandungi metadata input.",
        "Documentation.LongDescription": "Mengembalikan rekod yang mengandungi metadata input.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "Memberi isyarat Value. Expression untuk mengembalikan ungkapan yang dioptimumkan untuk nilai.",
        "Documentation.LongDescription": "Apabila digunakan dalam Value.Expression, jika <code>value</code> mewakili pertanyaan yang boleh dioptimumkan, fungsi ini menunjukkan bahawa ungkapan yang dioptimumkan perlu dikembalikan. Jika tidak, <code>value</code> akan dihantar tanpa kesan.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "Meleraikan input metadata.",
        "Documentation.LongDescription": "Meleraikan input metadata.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "Mengembalikan jenis nilai yang ditentukan.",
        "Documentation.LongDescription": "Mengembalikan jenis nilai yang ditentukan.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.LongDescription": "Fungsi ini bertujuan untuk kegunaan dalaman sahaja.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "Mengembalikan HTML untuk URL yang ditentukan, seperti yang dilihat oleh pelayar web.",
        "Documentation.LongDescription": "Mengembalikan HTML untuk <code>url</code> yang ditentukan, seperti yang dilihat oleh pelayar web. Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n     <ul>\r\n        <li><code>ApiKeyName</code>: Jika laman sasaran mempunyai tanggapan bagi kunci API, parameter ini boleh digunakan untuk menentukan nama (bukan nilai) bagi parameter kunci yang mesti digunakan dalam URL. Nilai kunci sebenar diberikan dalam kelayakan.</li>\r\n        <li><code>WaitFor</code>: Menentukan syarat untuk menunggu sebelum memuat turun HTML, selain menunggu halaman dimuatkan (ini selalu dilakukan). Boleh jadi rekod yang mengandungi medan Tamat Masa dan/atau Pemilih. Jika hanya Tamat Masa ditentukan, fungsi akan menunggu jumlah masa yang ditentukan sebelum memuat turun HTML. Jika Pemilih dan Tamat Masa ditentukan, dan Tamat Masa berlalu sebelum Pemilih wujud pada halaman, ralat akan dikembalikan. Jika Pemilih ditentukan tanpa Tamat Masa, Tamat Masa lalai 30 saat digunakan.</li>\r\n      </ul>\r\n    ",
        "Documentation.Category": "Mencapai data",
        "Documentation.Examples": [
          {
            "Description": "Mengembalikan HTML untuk https://microsoft.com.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Mengembalikan HTML untuk https://microsoft.com selepas menunggu pemilih CSS dipaparkan.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Mengembalikan HML untuk https://microsoft.com selepas menunggu sepuluh saat.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Mengembalikan HTML untuk https://microsoft.com selepas menunggu hingga sepuluh saat untuk pemilih CSS dipaparkan.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "Mengembalikan kandungan yang dimuat turun daripada url sebagai perduaan.",
        "Documentation.LongDescription": "Mengembalikan kandungan yang dimuat turun daripada <code>url</code> sebagai perduaan. Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n <ul>\r\n<li><code>Query</code> : Tambahkan parameter pertanyaan secara pengaturcaraan pada URL tanpa perlu bimbang tentang pelepasan.</li>\r\n<li><code>ApiKeyName</code> : Jika tapak sasaran mempunyai tanggapan bagi kunci API, parameter ini boleh digunakan untuk menentukan nama (bukan nilai) bagi parameter kunci tersebut yang mesti digunakan dalam URL. Nilai kunci sebenar disediakan dalam kelayakan.</li>\r\n<li><code>Headers</code> : Menentukan nilai ini sebagai rekod akan membekalkan pengepala tambahan pada permintaan HTTP.</li>\r\n<li><code>Timeout</code> : Menentukan nilai ini sebagai tempoh akan mengubah tamat masa untuk permintaan HTTP. Nilai lalai ialah 100 saat.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Menentukan nilai ini sebagai senarai akan mengecualikan kunci pengepala HTTP ini daripada menjadi sebahagian daripada pengiraan untuk data cache.</li>\r\n<li><code>IsRetry</code> : Menentukan nilai logik ini sebagai benar akan mengabaikan sebarang respons sedia ada dalam cache apabila mengambil data.</li>\r\n<li><code>ManualStatusHandling</code> : Menentukan nilai ini sebagai senarai akan menghalang sebarang pengendalian terbina dalam untuk permintaan HTTP yang responsnya mempunyai salah satu kod status ini.</li>\r\n<li><code>RelativePath</code> : Menentukan nilai ini sebagai teks menambahnya pada URL asas sebelum membuat permintaan.</li>\r\n<li><code>Content</code> : Menentukan nilai ini akan mengubah permintaan web daripada GET kepada POST, menggunakan nilai opsyen sebagai kandungan POST.</li>\r\n</ul>\r\n\r\n Permintaan HTTP dibuat sebagai GET (apabila tiada Kandungan ditentukan) atau POST (apabila terdapat Kandungan). Permintaan POST hanya boleh dibuat tanpa nama.\r\n   <br>\r\n Pengepala respons HTTP tersedia sebagai metadata pada hasil perduaan. Di luar konteks penyambung data tersuai, hanya subset pengepala respons tersedia (atas sebab keselamatan).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Ambil kandungan <code>\"https://bing.com/search?q=Power+Query\"</code> menggunakan opsyen RelativePath dan Query. Opsyen ini boleh digunakan untuk bertanya secara dinamik satu URL asas statik.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "Laksanakan POST terhadap URL, menghantar muat beban JSON perduaan dan menghuraikan respons sebagai JSON.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "Sambung ke URL selamat yang menerima kunci pengesahan sebagai sebahagian daripada rentetan pertanyaannya. Daripada mengekod keras kunci rahsia dalam M (yang akan menimbalkan risiko keselamatan), \r\n    kunci boleh diberikan dengan selamat dengan menentukan namanya (bukan nilainya) dalam M, memilih pengesahan API Web dan memasukkan nilai kunci sebagai sebahagian daripada kelayakan API Web.\r\n    Apabila digunakan dengan cara ini, contoh berikut akan menjana permintaan untuk <code>\"https://contoso.com/api/customers/get?api_key=******\"</code>.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "Mengembalikan pengepala HTTP yang dimuat turun daripada url sebagai nilai rekod.",
        "Documentation.LongDescription": "Mengembalikan pengepala yang dimuat turun daripada <code>url</code> sebagai rekod. Parameter rekod pilihan, <code>options</code>, boleh diberikan untuk menentukan sifat tambahan. Rekod boleh mengandungi medan berikut:\r\n    <ul>\r\n<li><code>Query</code> : Tambahkan parameter pertanyaan secara pengaturcaraan pada URL tanpa perlu bimbang tentang pelepasan.</li>\r\n<li><code>ApiKeyName</code> : Jika tapak sasaran mempunyai tanggapan bagi kunci API, parameter ini boleh digunakan untuk menentukan nama (bukan nilai) bagi parameter kunci tersebut yang mesti digunakan dalam URL. Nilai kunci sebenar disediakan dalam kelayakan.</li>\r\n<li><code>Headers</code> : Menentukan nilai ini sebagai rekod akan membekalkan pengepala tambahan pada permintaan HTTP.</li>\r\n<li><code>Timeout</code> : Menentukan nilai ini sebagai tempoh akan mengubah tamat masa untuk permintaan HTTP. Nilai lalai ialah 100 saat.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Menentukan nilai ini sebagai senarai akan mengecualikan kunci pengepala HTTP ini daripada menjadi sebahagian daripada pengiraan untuk data cache.</li>\r\n<li><code>IsRetry</code> : Menentukan nilai logik ini sebagai benar akan mengabaikan sebarang respons sedia ada dalam cache apabila mengambil data.</li>\r\n<li><code>ManualStatusHandling</code> : Menentukan nilai ini sebagai senarai akan menghalang sebarang pengendalian terbina dalam untuk permintaan HTTP yang responsnya mempunyai salah satu kod status ini.</li>\r\n<li><code>RelativePath</code> : Menentukan nilai ini sebagai teks menambahnya pada URL asas sebelum membuat permintaan.</li>\r\n</ul>\r\n\r\n    Permintaan HTTP dibuat dengan kaedah HEAD. Di luar konteks penyambung data tersuai, hanya subset pengepala respons tersedia (atas sebab keselamatan).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Ambil pengepala HTTP untuk <code>\"https://bing.com/search?q=Power+Query\"</code> menggunakan opsyen RelativePath dan Query.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "Konteks kebenaran yang keadaan masukan kawalan capaian (ACE) dinilai.",
        "Documentation.LongDescription": "Konteks kebenaran yang keadaan masukan kawalan capaian (ACE) dinilai.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "Jadual bagi masukan kawalan capaian (ACE).",
        "Documentation.LongDescription": "Jadual tersusun bagi masukan kawalan capaian (ACE) yang mewakili peraturan kebenaran. Setiap baris dinilai berbanding konteks kebenaran semasa (dalam tertib) dan baris pertama yang ungkapan <code>Condition</code> mengembalikan true menentukan peraturan yang digunakan. Lajur <code>Action</code> mewakili jenis tindakan yang peraturan digunakan. Lajur <code>AccessControlKind</code> menentukan sama ada capaian harus dibenarkan atau ditolak untuk tindakan.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "Menentukan jenis kawalan capaian.",
        "Documentation.LongDescription": "Menentukan jenis kawalan capaian.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai perduaan.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai perduaan.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "Tentukan jenis pengekodan perduaan.",
        "Documentation.LongDescription": "Tentukan jenis pengekodan perduaan.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "Tentukan berapa kali item ini dijangka muncul di dalam kumpulan.",
        "Documentation.LongDescription": "Tentukan berapa kali item ini dijangka muncul di dalam kumpulan.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "Menerangkan jenis penimbalan yang akan dilaksanakan.",
        "Documentation.LongDescription": "Menerangkan jenis penimbalan yang akan dilaksanakan.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "Jenis yang mewakili semua bait.",
        "Documentation.LongDescription": "Jenis yang mewakili semua bait.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "Tentukan susunan byte.",
        "Documentation.LongDescription": "Tentukan susunan byte.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "Jenis yang mewakili semua aksara.",
        "Documentation.LongDescription": "Jenis yang mewakili semua aksara.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "Tentukan jenis pemampatan.",
        "Documentation.LongDescription": "Tentukan jenis pemampatan.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Tentukan kepentingan petikan dalam dokumen Csv.",
        "Documentation.LongDescription": "Tentukan kepentingan petikan dalam dokumen Csv.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "Jenis yang mewakili nilai mata wang.",
        "Documentation.LongDescription": "Jenis yang mewakili nilai mata wang.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai tarikh.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai tarikh.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai tarikh dan masa tanpa zon waktu yang dikaitkan.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai tarikh dan masa tanpa zon waktu yang dikaitkan.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai tarikh dan masa yang relatif kepada zon waktu.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai tarikh dan masa yang relatif kepada zon waktu.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "Tentukan hari bagi minggu.",
        "Documentation.LongDescription": "Tentukan hari bagi minggu.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "Jenis yang mewakili nombor perpuluhan titik tetap.",
        "Documentation.LongDescription": "Jenis yang mewakili nombor perpuluhan titik tetap.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "Jenis yang mewakili nombor titik apung kepersisan berganda.",
        "Documentation.LongDescription": "Jenis yang mewakili nombor titik apung kepersisan berganda.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai tempoh",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai tempoh",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "Tentukan tindakan yang dijangka bagi nilai tambahan di dalam baris yang mengandungi lajur yang daripada yang dijangkakan.",
        "Documentation.LongDescription": "Tentukan tindakan yang dijangka bagi nilai tambahan di dalam baris yang mengandungi lajur yang daripada yang dijangkakan.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "Jenis yang mewakili semua fungsi.",
        "Documentation.LongDescription": "Jenis yang mewakili semua fungsi.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "Tentukan jenis perkumpulan.",
        "Documentation.LongDescription": "Berbilang kumpulan setempat boleh dihasilkan dengan nilai kunci yang sama tetapi hanya kumpulan sejagat tunggal dihasilkan untuk nilai kunci tertentu.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "Jenis yang mewakili nilai Guid.",
        "Documentation.LongDescription": "Jenis yang mewakili nilai Guid.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "Identiti mewakili pengguna, kumpulan, peranti atau perkara lain yang dapat dikenal pasti.",
        "Documentation.LongDescription": "Identiti mewakili pengguna, kumpulan, peranti atau perkara lain yang dapat dikenal pasti.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "Menentukan skop yang identiti dicipta dan dibandingkan.",
        "Documentation.LongDescription": "Menentukan skop yang identiti dicipta dan dibandingkan.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "Jenis yang mewakili integer 16 bit bertanda.",
        "Documentation.LongDescription": "Jenis yang mewakili integer 16 bit bertanda.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "Jenis yang mewakili integer 32 bit bertanda.",
        "Documentation.LongDescription": "Jenis yang mewakili integer 32 bit bertanda.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "Jenis yang mewaikili integer 64 bit bertanda.",
        "Documentation.LongDescription": "Jenis yang mewaikili integer 64 bit bertanda.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "Jenis yang mewakili integer 8 bit bertanda.",
        "Documentation.LongDescription": "Jenis yang mewakili integer 8 bit bertanda.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "Tentukan algoritma cantuman yang digunakan di dalam operasi cantuman.",
        "Documentation.LongDescription": "Tentukan algoritma cantuman yang digunakan di dalam operasi cantuman.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "Tentukan jenis operasi cantuman.",
        "Documentation.LongDescription": "Tentukan jenis operasi cantuman.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "Menentukan jadual kiri atau kanan untuk disertai.",
        "Documentation.LongDescription": "Menentukan jadual kiri atau kanan untuk disertai.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "Menerangkan jenis klausa had yang disokong oleh dialek SQL yang digunakan oleh sumber data ini.",
        "Documentation.LongDescription": "Menerangkan jenis klausa had yang disokong oleh dialek SQL yang digunakan oleh sumber data ini.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "Jenis yang mewakili semua senarai.",
        "Documentation.LongDescription": "Jenis yang mewakili semua senarai.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai logik.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai logik.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "Tentukan tindakan yang dijangka bagi nilai yang tidak ditemui di dalam baris yang mengandungi lajur yang kurang dijangka.",
        "Documentation.LongDescription": "Tentukan tindakan yang dijangka bagi nilai yang tidak ditemui di dalam baris yang mengandungi lajur yang kurang dijangka.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "Jenis yang mewakili nol.",
        "Documentation.LongDescription": "Jenis yang mewakili nol.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "Jenis yang mewakili semua nombor.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nombor.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "Menentukan jenis nilai Perkhidmatan OData yang boleh tidak dimasukkan.",
        "Documentation.LongDescription": "Menentukan jenis nilai Perkhidmatan OData yang boleh tidak dimasukkan.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "Tentukan kekerapan unsur di dalam jujukan.",
        "Documentation.LongDescription": "Tentukan kekerapan unsur di dalam jujukan.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "Tentukan arah pengisihan.",
        "Documentation.LongDescription": "Tentukan arah pengisihan.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "Jenis yang mewakili kata laluan teks.",
        "Documentation.LongDescription": "Jenis yang mewakili kata laluan teks.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "Jenis yang mewakili nilai peratusan.",
        "Documentation.LongDescription": "Jenis yang mewakili nilai peratusan.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "Menentukan jenis mod seperseratusan.",
        "Documentation.LongDescription": "Menentukan jenis mod seperseratusan.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "Tentukan kepersisan perbandingan.",
        "Documentation.LongDescription": "Tentukan kepersisan perbandingan.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "Tentukan gaya petikan.",
        "Documentation.LongDescription": "Tentukan gaya petikan.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "Menentukan jenis penarafan.",
        "Documentation.LongDescription": "Menentukan jenis penarafan.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "Jenis yang mewakili semua rekod.",
        "Documentation.LongDescription": "Jenis yang mewakili semua rekod.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "Menandakan sama ada pengindeksan perlu dilakukan dari mula atau hujung input.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "Tentukan arah pembulatan apabila terdapat seri di antara nombor yang mungkin dibulatkan.",
        "Documentation.LongDescription": "Tentukan arah pembulatan apabila terdapat seri di antara nombor yang mungkin dibulatkan.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "Opsyen yang sah untuk opsyen mod pelaksanaan SAP Business Warehouse.",
        "Documentation.LongDescription": "Opsyen yang sah untuk opsyen mod pelaksanaan SAP Business Warehouse.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "Pilihan yang sah untuk pilihan edaran SAP HANA.",
        "Documentation.LongDescription": "Pilihan yang sah untuk pilihan edaran SAP HANA.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "Operasi julat untuk julat parameter input SAP HANA.",
        "Documentation.LongDescription": "Operasi julat untuk julat parameter input SAP HANA.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "Jenis yang mewakili nombor titik apung kepersisan tunggal.",
        "Documentation.LongDescription": "Jenis yang mewakili nombor titik apung kepersisan tunggal.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "Protokol yang perlu digunakan semasa menyambung kepada tika Spark.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "Jenis yang mewakili semua jadual.",
        "Documentation.LongDescription": "Jenis yang mewakili semua jadual.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai teks.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai teks.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "Tentukan jenis pengekodan teks.",
        "Documentation.LongDescription": "Tentukan jenis pengekodan teks.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "Jenis yang mewakili semua nilai masa.",
        "Documentation.LongDescription": "Jenis yang mewakili semua nilai masa.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "Menentukan aras jejak.",
        "Documentation.LongDescription": "Menentukan aras jejak.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "Jenis yang mewakili semua jenis.",
        "Documentation.LongDescription": "Jenis yang mewakili semua jenis.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "Jenis yang mewakili URI teks.",
        "Documentation.LongDescription": "Jenis yang mewakili URI teks.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "Menentukan kaedah HTTP.",
        "Documentation.LongDescription": "Menentukan kaedah HTTP.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
