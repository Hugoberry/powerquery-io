{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "Retourneert een structurele weergave van een Access-database.",
        "Documentation.LongDescription": "Hiermee wordt een structurele weergave van een Access-database <code>database</code> geretourneerd. U kunt een optionele recordparameter <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is false).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "Retourneert de Analysis Services-databases op een bepaalde host.",
        "Documentation.LongDescription": "Hiermee worden databases op een Analysis Services-exemplaar <code>server</code> geretourneerd. U kunt een optionele recordparameter <code>options</code> gebruiken om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : Een logische waarde die aangeeft of de typen die zijn opgegeven in het multidimensionale model of het model in tabelvorm, worden gebruikt voor de typen van de toegevoegde meetkolommen. Indien ingesteld op false, wordt het type number gebruikt voor alle meetkolommen. De standaardwaarde voor deze optie is false.</li>\r\n<li><code>Culture</code> : Een cultuurnaam die de cultuur voor de gegevens aangeeft. Deze waarde komt overeen met de eigenschap voor de landinstellingen-id van de verbindingsreeks.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>SubQueries</code> : Een getal (0, 1 of 2) waarmee de waarde van de eigenschap SubQueries in een verbindingsreeks wordt ingesteld. Dit getal bepaalt het gedrag van berekende leden voor subselecties en subkubussen (de standaardwaarde is 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "AtScale-kubussen",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "Import-/DirectQuery-kubusgegevens uit een AtScale.",
        "Documentation.LongDescription": "\r\nHiermee worden kubusgegevens van AtScale op de server <code>server</code> geretourneerd. Een optionele recordparameter <code>options</code> kan worden opgegeven voor het bepalen van de volgende opties:\r\n<ul> \r\n <li><code>TypedMeasureColumns</code>: Een logische waarde die aangeeft of de typen die zijn opgegevens in het multidimensionale of tabellaire model worden gebruikt voor de typen kolommen voor extra beveiliging. Wanneer ingesteld op false, wordt het type 'number' gebruikt voor alle kolommen van de meting. De standaardwaarde voor deze optie is ingesteld op false. </li>\r\n <li><code>CommandTimeout</code>: Een duur (in seconden) waarmee wordt bepaald hoe lang de query aan de serverzijde mag worden uitgevoerd voordat deze wordt geannuleerd. De standaardwaarde is afhankelijk van het stuurprogramma. </li>\r\n <li><code>ConnectionTimeout</code>: Een duur (in seconden) waarmee wordt bepaald hoe lang moet worden gewacht voordat een poging om verbinding met de server te maken, wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma. </li>\r\n\r\n </ul>\r\nDe recordparameter is opgegeven als [optie1 = waarde1, optie2 = waarde2...].",
        "Documentation.Examples": {
          "Description": "De kubusgegevens in een AtScale-kubus vermelden.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Hiermee worden gegevens uit Azure Data Explorer (Kusto) geïmporteerd",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Hiermee worden gegevens uit uw Azure Data Explorer-instantie (Kusto) geïmporteerd",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met Storm Events-gegevens geretourneerd",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Een tabel met Storm-gebeurtenissen uit de Samples-database in het helpcluster"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "Voer de URL van de Azure DevOps Analytics-service in.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Hiermee wordt de inhoud die is gedownload via de URL van de Azure DevOps Analytics-service, geretourneerd als binaire waarde. Deze functie gebruikt verschillende aanmeldgegevens voor verschillende organisaties."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Feed van Azure DevOps Services",
        "Documentation.DisplayName": "Feed van Azure DevOps Services",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Hiermee wordt een tabel met OData-inhoud van Azure DevOps geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "Voer de URL van het Azure Enterprise REST API-eindpunt in dat is gekoppeld aan uw inschrijving",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Hiermee wordt een lijst met rapporten en maanden geretourneerd die beschikbaar zijn via de Azure Enterprise API",
        "Documentation.Name": "Gegevens importeren uit Azure Enterprise",
        "Documentation.Examples": [
          {
            "Description": "De functie AzureEnterprise.Tables gebruiken en naar een bepaalde waarde gaan om de resultaten op te halen.",
            "Code": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents",
            "Result": "Tabel"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "See https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli for starter query samples.",
        "Documentation.Examples": [
          {
            "Description": "Return a table with query results of user query 'resources'",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Geef de tabellen in een Azure Spark-exemplaar weer.",
        "Documentation.LongDescription": "Geef de tabellen in een Azure Spark-exemplaar weer.",
        "Documentation.Examples": [
          {
            "Description": "Geef de tabellen in een Azure Spark-exemplaar weer.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "Retourneert een navigeerbare tabel die de containers bevat die in het opgegeven account van een Azure-opslagkluis zijn te vinden.",
        "Documentation.LongDescription": "Hiermee wordt een navigeerbare tabel met een rij voor elke container die is gevonden op de account-URL <code>account</code>, geretourneerd uit een Azure-opslagkluis. Elke rij bevat een koppeling naar de containerblobs. <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>BlockSize</code> : Het aantal bytes dat moet worden gelezen voordat er op de gegevensverbruiker wordt gewacht. De standaardwaarde is 4 MB.</li>\r\n<li><code>RequestSize</code> : Het aantal bytes dat moet worden gelezen in &#233;&#233;n HTTP-aanvraag bij de server. De standaardwaarde is 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : De optie ConcurrentRequests ondersteunt het sneller downloaden van gegevens via het opgeven van het aantal aanvragen dat parallel moet worden uitgevoerd, ten koste van het geheugengebruik. Het vereiste geheugen is (ConcurrentRequest * RequestSize). De standaardwaarde is 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Hiermee wordt een navigeerbare tabel geretourneerd met de documenten die zijn gevonden in de opgegeven container en de bijbehorende submappen in Azure Data Lake Storage.",
        "Documentation.LongDescription": "Hiermee wordt een navigeerbare tabel met de documenten die zijn gevonden in de opgegeven container en de bijbehorende submappen op de account-URL <code>endpoint</code>, geretourneerd uit een Azure Data Lake Storage-bestandssysteem. <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>BlockSize</code> : Het aantal bytes dat moet worden gelezen voordat er op de gegevensverbruiker wordt gewacht. De standaardwaarde is 4 MB.</li>\r\n<li><code>RequestSize</code> : Het aantal bytes dat moet worden gelezen in &#233;&#233;n HTTP-aanvraag bij de server. De standaardwaarde is 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : De optie ConcurrentRequests ondersteunt het sneller downloaden van gegevens via het opgeven van het aantal aanvragen dat parallel moet worden uitgevoerd, ten koste van het geheugengebruik. Het vereiste geheugen is (ConcurrentRequest * RequestSize). De standaardwaarde is 16.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt bepaald of de bestanden worden geretourneerd als een structuurmapweergave of als een platte lijst. De standaardwaarde is false.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "Retourneert een navigeerbare tabel die de tabellen bevat die in het opgegeven account van een Azure-opslagkluis zijn te vinden.",
        "Documentation.LongDescription": "Hiermee wordt een navigeerbare tabel geretourneerd die een rij bevat voor elke tabel die wordt gevonden op de account-URL, <code>account</code>, uit een Azure-opslagkluis. Elke rij bevat een koppeling naar de Azure-tabel. Er kan een optionele recordparameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>Timeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een aanvraag voor de server wordt afgebroken. De standaardwaarde is afhankelijk van de bron.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight in de AKS-Trino"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "Deze functie is niet beschikbaar omdat hiervoor .NET 4.5 is vereist.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (verouderd)",
        "Documentation.Caption": "Common Data Service (verouderd)",
        "Documentation.LongDescription": "Verbinding maken met uw Common Data Service-instantie (Dynamics 365 en PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "Retourneert de inhoud van het CSV-document als een tabel.",
        "Documentation.LongDescription": "Hiermee wordt de inhoud van het CSV-document als tabel geretourneerd.\r\n    <ul>\r\n     <li>\r\n        <code>columns</code> mag null, het aantal kolommen, een lijst met kolomnamen, een tabeltype of een optierecord zijn.\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> mag een teken, een lijst met tekens of de waarde <code>\"\"</code> zijn, die aangeeft dat rijen moeten worden opgesplitst door opeenvolgende witruimtetekens. Standaard: <code>\",\"</code>\r\n      </li>\r\n      <li>\r\n        Raadpleeg <code>ExtraValues.Type</code> voor de ondersteunde waarden van <code>extraValues</code>.\r\n      </li>\r\n      <li>\r\n        <code>encoding</code> geeft het type tekstcodering op.\r\n      </li>\r\n    </ul>\r\n\r\n    Als er een record is opgegeven voor <code>columns</code> (en <code>delimiter</code>, <code>extraValues</code> en <code>encoding</code> null zijn), kunnen de volgende recordvelden worden opgegeven:\r\n    <ul>\r\n      <li>\r\n        <code>Delimiter</code>: Het kolomscheidingsteken. Standaard: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Columns</code>: Mag null, het aantal kolommen, een lijst met kolomnamen of een tabeltype zijn. Als het aantal kolommen lager is dan het aantal dat wordt aangetroffen in de invoer, worden de extra kolommen genegeerd. Als het aantal kolommen hoger is dan het aantal dat wordt aangetroffen in de invoer, worden de extra kolommen null. Als er geen waarde is opgegeven, wordt het aantal kolommen bepaald door wat wordt aangetroffen in de invoer.\r\n      </li>\r\n      <li>\r\n        <code>Encoding</code>: De tekstcodering van het bestand. Standaard: 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle</code>: Specificeert hoe aanhalingstekens worden verwerkt.\r\n        <ul>\r\n          <li>\r\n             <code>CsvStyle.QuoteAfterDelimiter</code> (standaard): Aanhalingstekens in een veld hebben alleen betekenis direct na het scheidingsteken.\r\n          </li>\r\n          <li>\r\n             <code>CsvStyle.QuoteAlways</code>: Aanhalingstekens in een veld hebben altijd betekenis, ongeacht waar deze verschijnen. \r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code>: Specificeert hoe regeleinden tussen aanhalingstekens worden verwerkt.\r\n        <ul>\r\n          <li>\r\n             <code>QuoteStyle.Csv</code> (standaard): Regeleinden tussen aanhalingstekens worden behandeld als onderdeel van de gegevens, niet als einde van de huidige rij.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.None</code>: Alle regeleinden worden behandeld als einde van de huidige rij, zelfs wanneer ze in een waarde met aanhalingstekens voorkomen.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "CSV-tekst met kolomkoppen verwerken",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "Retourneert een tabel die de set beschikbare dimensies bevat.",
        "Documentation.LongDescription": "Retourneert een tabel die de set beschikbare dimensies binnen de <code>cube</code> bevat. Elke dimensie is een tabel die een set dimensiekenmerken bevat en elk dimensiekenmerk wordt voorgesteld als een kolom in de dimensietabel. In de kubus kunnen dimensies worden uitgevouwen met Cube.AddAndExpandDimensionColumn. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "Retourneert een geneste boomstructuur van tabellen die de weergavemaphiërarchie van de objecten voorstellen (bijvoorbeeld dimensies en metingen).",
        "Documentation.LongDescription": "Retourneert een geneste boomstructuur van tabellen die de weergavemaphiërarchie van de objecten voorstellen (bijvoorbeeld dimensies en metingen) die beschikbaar zijn voor gebruik in de <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "Hiermee wordt een tabel geretourneerd met de set beschikbare meeteigenschappen die in de kubus worden uitgebreid.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd met de set beschikbare eigenschappen voor meetwaarden die in de kubus worden uitgevouwen.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "Retourneert een tabel die de set beschikbare metingen bevat.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd met de set beschikbare parameters binnen de <code>cube</code>.\r\n Elke meetwaarde wordt als een functie weergegeven. Meetwaarden kunnen op de kubus worden toegepast met behulp van Cube.AddMeasureColumn.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "Retourneert een tabel met de set parameters die op de kubus kunnen worden toegepast.",
        "Documentation.LongDescription": "Retourneert een tabel met de set parameters die op <code>cube</code> kunnen worden toegepast. Elke parameter is een functie die kan worden aangeroepen om <code>cube</code> op te halen door de parameter en de argumenten van de parameter toe te passen.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "Retourneert een tabel met de set beschikbare eigenschappen voor dimensies die in de kubus worden uitgevouwen.",
        "Documentation.LongDescription": "Retourneert een tabel met de set beschikbare eigenschappen voor dimensies die in de kubus worden uitgevouwen.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "De URL van uw Azure Data Lake Storage Gen1-account invoeren.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die een rij bevat voor alle mappen en bestanden die worden gevonden bij <code>url</code> vanuit Azure Data Lake Storage Gen1. Elke rij bevat de eigenschappen van de map of het bestand, evenals een koppeling naar de bijbehorende inhoud."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Voer de URL van uw Azure Data Lake Storage-account in.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die een rij bevat voor elk bestand dat wordt gevonden bij <code>url</code> vanuit Azure Data Lake Storage Gen1. Elke rij bevat de eigenschappen van het bestand, evenals een koppeling naar de bijbehorende inhoud."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL-API)",
        "Documentation.Description": "De URL van een Azure Cosmos DB-account invoeren.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met Azure Cosmos DB-databases op <code>url</code> geretourneerd. Als <code>database</code> is opgegeven, wordt een tabel met verzamelingen geretourneerd. Tevens geldt dat als het veld <code>Query</code> is opgegeven in de record <code>options</code>, de resultaten worden geretourneerd van de query die wordt uitgevoerd op de opgegeven database en/of verzameling."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "De URL van het eindpunt van de Dynamics 365 Business Central (on-premises) OData-service.",
        "Documentation.DisplayName": "Dynamics 365 Business Central (on-premises)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (on-premises)",
        "Documentation.LongDescription": "Hiermee wordt een tabel met relevante gegevens voor Dynamics 365 Business Central (on-premises) geretourneerd. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "Voer de URL in van het OData-service-eindpunt voor Dynamics NAV.",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "Hiermee wordt een tabel met de relevante Dynamics NAV-gegevens geretourneerd. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Hiermee worden de kubussen in een Essbase-exemplaar geretourneerd die door de Essbase-server is gegroepeerd.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met kubussen geretourneerd die door de Essbase-server zijn gegroepeerd vanuit een Essbase-exemplaar op APS-server <code>url</code>. U kunt een optionele recordparameter <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Hiermee wordt de inhoud van de Excel-werkmap geretourneerd.",
        "Documentation.LongDescription": "Retourneert de inhoud van de Excel-werkmap.\r\n <ul>\r\n <li> <code>useHeaders</code> kan null zijn, een logische waarde (waar/onwaar) die aangeeft of de eerste rij van elke geretourneerde tabel moet worden behandeld als een koptekst of een archief met opties. Standaard: onwaar.</li>\r\n <li> <code>delayTypes</code> kan null zijn of een logische waarde (waar/onwaar) die aangeeft of de kolommen van elke geretourneerde tabel niet moeten worden getypt. Standaard: onwaar.</li>\r\n </ul>\r\n\r\n Als er een archief is opgegeven voor <code>useHeaders</code> (en <code>delayTypes</code> null is), kunnen de volgende archiefvelden worden opgegeven:\r\n <ul>\r\n <li> <code>UseHeaders</code>: kan null zijn of een logische waarde (waar/onwaar) die aangeeft of de eerste rij van elke geretourneerde tabel moet worden behandeld als een koptekst. Standaard: onwaar.</li>\r\n <li> <code>DelayTypes</code>: kan null zijn of een logische waarde (waar/onwaar) die aangeeft of de kolommen van elke geretourneerde tabel niet moeten worden getypt. Standaard: onwaar.</li>\r\n <li> <code>InferSheetDimensions</code>: kan null zijn of een logische waarde (waar/onwaar) die aangeeft of het gebied van een werkblad dat gegevens bevat, moet worden gelezen door het werkblad zelf te lezen in plaats van de metagegevens van de dimensies uit het bestand te lezen. Dit kan handig zijn wanneer de metagegevens van de dimensie onjuist zijn. Houd er rekening mee dat deze optie alleen wordt ondersteund voor Open XML-Excel-bestanden en niet voor oudere Excel-bestanden. Standaard: onwaar.</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "De inhoud van Blad1 retourneren vanuit een Excel-werkmap.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "Retourneert een tabel die de eigenschappen en inhoud bevat van de bestanden en mappen die in de opgegeven map zijn te vinden.",
        "Documentation.LongDescription": "Retourneert een tabel met een rij voor elke map en elk bestand in de map <code>path</code>. Elke rij bevat eigenschappen van de map of het bestand en een koppeling naar de inhoud ervan. De parameter <code>options</code> is momenteel alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "Retourneert een tabel die de eigenschappen en inhoud bevat van de bestanden die in de opgegeven map en submappen zijn te vinden.",
        "Documentation.LongDescription": "Retourneert een tabel met een rij voor elk bestand in de map <code>path</code> en alle bijbehorende submappen. Elke rij bevat eigenschappen van het bestand en een koppeling naar de inhoud. De parameter <code>options</code> is momenteel alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Gegevens importeren uit een Google BigQuery-database met behulp van Azure AD",
        "Documentation.LongDescription": "\r\n      Retourneert een tabel met de beschikbare projecten in Google BigQuery met behulp van Azure AD voor <code>factureringsproject-id</code>. Er kan een optionele recordparameter, <code>opties</code>, worden opgegeven om de volgende opties te beheren:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: een duur waarmee wordt bepaald hoe lang moet worden gewacht voordat een poging om verbinding te maken met de server wordt afgebroken. De standaardwaarde is de ODBC Connection Timeout-waarde.</li>\r\n        <li><code>CommandTimeout</code>: een duur waarmee wordt bepaald hoe lang de query aan de serverzijde mag worden uitgevoerd voordat deze wordt geannuleerd.</li>\r\n        <li><code>UseStorageApi</code>: hiermee geeft u op of de BigQuery-opslag-API moet worden gebruikt voor grote resultatensets. De standaardwaarde is waar voor het gebruik van de opslag-API. Ingesteld op onwaar om opslag-API niet te gebruiken</li>\r\n        <li><code>AudienceUri</code>: dit is de doelgroep-URI die het ODBC-stuurprogramma kan gebruiken voor de aanvragen voor tokenuitwisseling. Dit veld moet een volledig gekwalificeerde URI zijn (dat wil zeggen //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/azuread), waarbij pool_id een globaal unieke naam is om de personeelsgroep te identificeren.</li>\r\n      </ul>\r\n    De recordparameter is opgegeven als [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "De beschikbare projecten in Google BigQuery weergeven met behulp van Azure AD",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Google Spreadsheets",
        "Documentation.Caption": "Google Spreadsheets",
        "Documentation.Description": "Gegevens importeren uit Google Spreadsheets",
        "Documentation.LongDescription": "Gegevens importeren uit Google Spreadsheets"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "Retourneert een navigeerbare tabel die de containers bevat die in het opgegeven account van een Azure-opslagkluis zijn te vinden.",
        "Documentation.LongDescription": "Retourneert een navigeerbare tabel die een rij bevat voor elke container die in de account-URL, <code>account</code>, van een Azure-opslagkluis is te vinden. Elke rij bevat een koppeling naar de container-blobs.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "Retourneert een navigeerbare tabel die de containers bevat die in het opgegeven account van een Azure-opslagkluis zijn te vinden.",
        "Documentation.LongDescription": "Retourneert een navigeerbare tabel die een rij bevat voor elke container die in de account-URL, <code>account</code>, van een Azure-opslagkluis is te vinden. Elke rij bevat een koppeling naar de container-blobs.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "Retourneert een tabel die de eigenschappen en inhoud bevat van de bestanden en mappen die in de opgegeven map van een Hadoop-bestandssysteem zijn te vinden.",
        "Documentation.LongDescription": "Retourneert een tabel die een rij bevat voor elke map die en elk bestand dat in de map-URL, <code>url</code>, van een Hadoop-bestandssysteem te vinden is. Elke rij bevat eigenschappen van de map of het bestand en een koppeling naar de inhoud.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "Retourneert een tabel die de eigenschappen en inhoud bevat van de bestanden die in de opgegeven map en submappen van een Hadoop-bestandssysteem zijn te vinden.",
        "Documentation.LongDescription": "Retourneert een tabel die een rij bevat voor elk bestand dat in de map-URL, <code>url</code>, en de submappen van een Hadoop-bestandssysteem te vinden is. Elke rij bevat eigenschappen van het bestand en een koppeling naar de inhoud.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Gegevens importeren uit een Impala-cluster",
        "Documentation.LongDescription": "Gegevens importeren uit een Impala-cluster <code>server</code>. Als er geen poort is opgegeven, wordt de standaardpoort 21050 gebruikt.",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met de tabellen in een Impala-cluster weergeven.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Hiermee worden gegevens uit Azure Data Explorer (Kusto) geïmporteerd",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Hiermee worden gegevens uit uw Azure Data Explorer-instantie (Kusto) geïmporteerd",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met Storm Events-gegevens geretourneerd",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Een tabel met Storm-gebeurtenissen uit de Samples-database in het helpcluster"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "Sales Navigator voor LinkedIn",
        "Documentation.LongDescription": "Sales Navigator voor LinkedIn",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een tabel van een MailChimp-eindpunt geretourneerd.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "Hiermee wordt een aanroep uitgevoerd naar de MailChimp-API en wordt de resulterende gegevensset als tabel geretourneerd. Alle resultaten worden automatisch verwerkt. De optionele entityName-parameter kan worden gebruikt voor API-eindpunten waarbij het hoofdeindpunt en de hoofd-entityName in het JSON-antwoord niet overeenkomen.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met gegevens opgehaald uit het eindpunt met lijsten van de MailChimp-API.",
            "Code": "MailChimp.Collection(lijsten)",
            "Result": "Een tabel met lijstgegevens."
          },
          {
            "Description": "Hiermee wordt een tabel met gegevens opgehaald uit het eindpunt met campagnemappen van de MailChimp-API.",
            "Code": "MailChimp.Collection(campagnemappen, mappen)",
            "Result": "Een tabel met gegevens van campagnemappen."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "Hiermee worden onbewerkte antwoordresultaten geretourneerd van een MailChimp-API-eindpunt.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "Hiermee wordt een aanroep uitgevoerd naar de MailChimp-API en wordt het onbewerkte antwoord geretourneerd.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden onbewerkte gegevens van het MailChimp-API-eindpunt voor rapporten/klikgegevens geretourneerd voor een bepaalde campagne.",
            "Code": "MailChimp.Instance(rapporten/{campaign_id}/klikgegevens)",
            "Result": "Onbewerkte klikgegevens van een bepaalde campagne."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy for Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "Geavanceerde queryfuncties opgeven.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "Geavanceerde queryfuncties opgeven.",
        "Documentation.Examples": [
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, samenvattingen van gegevens ophalen van 1-5-2017 tot en met 15-6-2017",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat een samenvatting van de gegevens tussen 1-5-2017 en 15-6-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, samenvattingen van gegevens ophalen voor april 2017.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat de gegevens tussen 1-4-2017 en 30-4-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, samenvattingen van gegevens ophalen vanaf april 2017 tot nu.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat de gegevens tussen 1-4-2017 en 15-6-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, samenvattingen van gegevens ophalen van afgelopen december tot februari dit jaar ",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat de gegevens tussen 1-12-2016 en 28-2-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, marketplace-kosten ophalen voor de afgelopen achttien maanden",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat de gegevens van de periode tussen 1-12-2015 en 15-6-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, gedetailleerde kosten ophalen voor juni 2017 en 2017 en mei 2017",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat de gegevens tussen 1-5-2017 en 15-6-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 03-07-2017 is, gedetailleerde kosten ophalen voor juli 2016",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat de gegevens tussen 01-07-2016 en 31-07-2016"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 13-7-2017 is, saldosamenvattingen ophalen voor de afgelopen 10 maanden en 13 dagen van deze maand",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "De functie geeft als resultaat de gegevens van de periode tussen 1-9-2016 en 13-7-2017"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Microsoft Azure Consumption Insights",
        "Documentation.Description": "Microsoft Azure Consumption Insights",
        "Documentation.DisplayName": "Microsoft Azure Consumption Insights",
        "Documentation.LongDescription": "Microsoft Azure Consumption Insights",
        "Documentation.Name": "Microsoft Azure Consumption Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "Retourneert een tabel met SQL-tabellen en -weergaven uit de ODBC-gegevensbron. ",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en -weergaven geretourneerd uit de ODBC-gegevensbron die is opgegeven met de verbindingsreeks <code>connectionString</code>. <code>connectionString</code> kan tekst of een record met eigenschapswaardeparen zijn. Eigenschapswaarden kunnen tekst of cijfers zijn. Een optionele recordparameter, <code>options</code>, kan worden geleverd om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is vijftien seconden.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Een logische waarde (true/false) waarmee wordt bepaald of SQL Server-compatibele verbindingsreeksopties voor Windows-verificatie moeten worden geproduceerd. De standaardwaarde is true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Retourneert de SQL-tabellen en weergaven van de opgegeven verbindingsreeks.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "Hiermee wordt een tabel met SQL-tabellen en -weergaven uit de OLE DB-gegevensbron geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en -weergaven uit de OLE DB-gegevensbron geretourneerd die is opgegeven in de verbindingsreeks <code>connectionString</code>. <code>connectionString</code> kan tekst of een record met eigenschap-waardeparen zijn. Eigenschapswaarden kunnen tekst of cijfers zijn. Een optionele recordparameter, <code>options</code>, kan worden geleverd om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is true).</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Een logische waarde (true/false) waarmee wordt bepaald of SQL Server-compatibele verbindingsreeksopties voor Windows-verificatie moeten worden geproduceerd. De standaardwaarde is true.</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Retourneert een tabel met SQL-tabellen en weergaven vanuit de Oracle-database.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en weergaven geretourneerd die beschikbaar zijn in een Oracle-database op server <code>server</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "Hiermee worden alle tabellen geretourneerd die in een PDF-bestand zijn gevonden.",
        "Documentation.LongDescription": "Hiermee worden tabellen geretourneerd die gevonden zijn in <code>pdf</code>. U kunt de optionele recordparameter <code>options</code> gebruiken om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>Implementation</code> : De versie van de algoritme die moet worden gebruikt bij het identificeren van tabellen. Oude versies zijn alleen beschikbaar voor achterwaartse compatibiliteit, om te voorkomen dat oude query&#39;s worden verbroken door algoritme-updates. De nieuwste versie moet altijd het beste resultaat geven. Geldige waarden zijn 1,3, 1,2, 1,1 of null.</li>\r\n<li><code>StartPage</code> : Hiermee geeft u de eerste pagina op in het bereik van de pagina&#39;s die worden gecontroleerd. Standaard: 1.</li>\r\n<li><code>EndPage</code> : Hiermee geeft u de laatste pagina op in het bereik van de pagina&#39;s worden gecontroleerd. Standaard: de laatste pagina van het document.</li>\r\n<li><code>MultiPageTables</code> : Hiermee wordt bepaald of vergelijkbare tabellen op opeenvolgende pagina&#39;s automatisch kunnen worden samengevoegd tot &#233;&#233;n tabel. Standaard: waar.</li>\r\n<li><code>EnforceBorderLines</code> : Hiermee wordt bepaald of randlijnen altijd worden gebruikt als celranden (als deze eigenschap waar is) of worden gebruikt als een hint voor het bepalen van celranden (als deze eigenschap onwaar is). Standaard: onwaar.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Toegang tot gegevens",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden de tabellen geretourneerd die aanwezig zijn in sample.pdf.",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "Voer de URL van uw Planview Projectplace-account in.",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "Hiermee wordt een tabel met de relevante Planview Projectplace-gegevens geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "Руŧнóή şĉŕïφť",
        "Documentation.Description": "Ēжėćµτεѕ Рγŧĥŏŉ ѕçŗїφт àňδ ґєťµяⁿѕ ďàтǻ ƒŕāмеś",
        "Documentation.Examples": {
          "Description": "Ēжėćµτεѕ Рγŧĥŏŉ ѕçŗїφт àňδ ґєťµяⁿѕ ďàтǻ ƒŕāмеś",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "Ŕ ŝςŗїφť",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "Retourneert een tabel waarin elke rij een veldnaam en een veldwaarde uit de invoerrecord is.",
        "Documentation.LongDescription": "Retourneert een tabel met daarin de kolommen <code>Name</code> en <code>Value</code> met een rij voor elk veld in <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "De tabel retourneren uit de record.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "Hiermee worden de pakketten in een SAP HANA-database geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met multidimensionale pakketten geretourneerd uit de SAP HANA-database <code>server</code>. U kunt een optionele recordparameter <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>Distribution</code> : Een SapHanaDistribution waarmee de waarde van de eigenschap Distribution in ver verbindingsreeks worden ingesteld. Instructieroutering is de methode voor het evalueren van het juiste serverknoppunt van een gedistribueerd systeem voor het uitvoeren van de instructie. De standaardwaarde is SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : Hiermee geeft u de implementatie van de SAP HANA-connector op die moet worden gebruikt.</li>\r\n<li><code>EnableColumnBinding</code> : Hiermee worden variabelen gebonden aan de kolommen van een SAP HANA-resultatenset bij het ophalen van gegevens. Kan de prestaties mogelijk verbeteren ten koste van een iets hoger geheugengebruik. De standaardwaarde is false.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is vijftien seconden.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "Retourneert een tabel die inhoud van een SharePoint-site bevat.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die een rij bevat voor elke map en elk document dat in de opgegeven SharePoint-lijst, <code>url</code>, wordt gevonden. Elke rij bevat eigenschappen van de map of het bestand en een koppeling naar de bijbehorende inhoud. U kunt <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Een getal (14 of 15) of de tekst Auto waarmee de versie wordt aangegeven van de SharePoint-API die voor deze site moet worden gebruikt. Als er geen waarde wordt opgegeven, wordt API-versie 14 gebruikt. Wanneer Auto is opgegeven, wordt indien mogelijk de serverversie automatisch gelezen, anders is de standaardversie 14. Voor niet-Engelse SharePoint-sites is minstens versie 15 vereist.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "Retourneert een tabel die documenten van een SharePoint-site bevat.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die een rij bevat voor elk document dat in de opgegeven SharePoint-lijst, <code>url</code>, en in submappen wordt gevonden. Elke rij bevat eigenschappen van de map of het bestand en een koppeling naar de bijbehorende inhoud. U kunt <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Een getal (14 of 15) of de tekst Auto waarmee de versie wordt aangegeven van de SharePoint-API die voor deze site moet worden gebruikt. Als er geen waarde wordt opgegeven, wordt API-versie 14 gebruikt. Wanneer Auto is opgegeven, wordt indien mogelijk de serverversie automatisch gelezen, anders is de standaardversie 14. Voor niet-Engelse SharePoint-sites is minstens versie 15 vereist.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "Retourneert een tabel die inhoud uit een SharePoint-lijst bevat.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die een rij bevat voor elk lijstitem dat in de opgegeven SharePoint-lijst, <code>url</code>, wordt gevonden. Elke rij bevat eigenschappen van de lijst. U kunt <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Een getal (14 of 15) of de tekst Auto waarmee de versie wordt aangegeven van de SharePoint-API die voor deze site moet worden gebruikt. Als er geen waarde wordt opgegeven, wordt API-versie 14 gebruikt. Wanneer Auto is opgegeven, wordt indien mogelijk de serverversie automatisch gelezen, anders is de standaardversie 14. Voor niet-Engelse SharePoint-sites is minstens versie 15 vereist.</li>\r\n<li><code>Implementation</code> : Optioneel. Hiermee geeft u op welke versie van de SharePoint-connector moet worden gebruikt. Geaccepteerde waarden zijn &#39;2.0&#39; of &#39;null&#39;. Als de waarde &#39;2.0&#39; is, wordt de 2.0-implementatie van de SharePoint-connector gebruikt. Als de waarde &#39;null&#39; is, wordt de oorspronkelijke implementatie van de SharePoint-connector gebruikt.</li>\r\n<li><code>ViewMode</code> : Optioneel. Deze optie is alleen geldig voor implementatie 2.0. Geaccepteerde waarden zijn &#39;all&#39; en &#39;default&#39;. Als er geen waarde is opgegeven, wordt de waarde ingesteld op &#39;all&#39;. Wanneer &#39;all&#39; is opgegeven, bevat de weergave alle door de gebruiker gemaakte en door het systeem gedefinieerde kolommen. Wanneer &#39;standaard&#39; is opgegeven, komt de weergave overeen met wat de gebruiker ziet wanneer de lijst online wordt bekeken in de weergave die de gebruiker in de instellingen als &#39;standaard&#39; heeft ingesteld. Als de gebruiker de standaardweergave bewerkt om door de gebruiker gemaakte of door het systeem gedefinieerde kolommen toe te voegen of te verwijderen, of door een nieuwe weergave te maken en deze als standaard in te stellen, worden deze wijzigingen doorgegeven via de connector.</li>\r\n<li><code>DisableAppendNoteColumns</code> : Hiermee voorkomt u dat de connector een afzonderlijk eindpunt gebruikt voor notitiekolommen.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "Retourneert een tabel uit de inhoud van de opgegeven URL die is ingedeeld volgens SODA 2.0 API.",
        "Documentation.LongDescription": "Retourneert een tabel uit de inhoud van de opgegeven URL <code>url</code> die is ingedeeld volgens SODA 2.0 API. De URL moet wijzen naar een geldige, met SODA compatibele bron die eindigt op de extensie CSV.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "Deze functie kan worden gebruikt om een van de eindpunten Lijsten aan te roepen die worden aangeboden door de SparkPost-API v1. Wanneer u met deze functie aanroepen naar de SparkPost-API maakt, moet u er rekening mee houden dat de SparkPost-API een strikte API-tarieflimiet heeft. Als de statuscode 429 wordt geretourneerd van de SparkPost-server, hebt u de tarieflimiet bereikt en moet u enkele momenten wachten voordat u meer aanroepen kunt maken.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met één kolom geretourneerd waarin gegevens van een van de eindpunten Lijsten van SparkPost-API v1 zijn ingevuld (zie SparkPost-documentatie voor meer informatie).",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "Haal de ingebouwde tabellen op die door de SparkPost-connector zijn vrijgegeven met gegevens die gedurende een door de gebruiker opgegeven aantal dagen zijn verzameld. Wanneer u deze tabellen vernieuwt of met deze connector een aanroep naar de SparkPost-API maakt, moet u er rekening mee houden dat de SparkPost-API een strikte API-tarieflimiet heeft. Als de statuscode 429 wordt geretourneerd van de SparkPost-server, hebt u de tarieflimiet bereikt en moet u enkele momenten wachten voordat u meer aanroepen kunt maken. Wanneer u een waarde kiest voor de parameter Aantal dagen, moet u er rekening mee houden dat de API slechts de gegevens van zes maanden opslaat."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "Retourneert een tabel met databases op een SQL Server.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met databases op de opgegeven SQL-server <code>server</code> geretourneerd. U kunt optioneel de recordparameter <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Een getal waarmee de waarde van de querycomponent maxdop in de gegenereerde SQL-query wordt ingesteld.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n<li><code>MultiSubnetFailover</code> : Een logische waarde (true/false) waarmee de waarde van de eigenschap MultiSubnetFailover in de verbindingsreeks wordt ingesteld (de standaardinstelling is false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Een logische waarde (waar/onwaar) waarbij indien waar, een poging tot invouwen van typeconversies wordt gedaan die kan mislukken en waardoor de volledige query mislukt. Niet aanbevolen voor algemeen gebruik.</li>\r\n<li><code>ContextInfo</code> : Een binaire waarde die wordt gebruikt om de CONTEXT_INFO in te stellen voordat elke opdracht wordt uitgevoerd.</li>\r\n<li><code>OmitSRID</code> : Een logische waarde (waar/onwaar) waarbij indien waar, de SRID wordt weggelaten bij het produceren van de WKT-weergave (Well-Known Text) van geometrie- en geografietypen.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Een logische waarde (waar/onwaar) die, indien waar, het vouwen van query&#39;s toestaat voor databases op dezelfde server. De standaardwaarde is onwaar.</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...].\r\n    <br>\r\n    Ondersteunt geen instelling van een SQL-query voor uitvoering op de server. <code>Sql.Database</code> moet worden gebruikt om een SQL-query uit te voeren.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "Hiermee wordt de Stripe API aangeroepen, met de mogelijkheid om het aantal uitgevoerde API-aanroepen te beperken.",
        "Documentation.LongDescription": "Hiermee wordt de Stripe API op https://api.stripe.com/v1/<code>method</code> aangeroepen, waarbij de optionele record <code>query</code> wordt doorgegeven als aanvullende parameters en het optionele item <code>pageLimit</code> als beperking voor het aantal API-aanvragen. De meest recente gegevens worden als eerste geretourneerd. Als <code>pageLimit</code> niet is opgegeven, worden alle gegevens geretourneerd. Stripe-versie 2015-10-16 wordt gebruikt.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden alle gegevens over kosten geretourneerd",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "Een tabel met alle gegevens over kosten voor het huidige Stripe-account"
          },
          {
            "Description": "Hiermee wordt één pagina met gegevens over kosten geretourneerd",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "Een tabel met de meest recente gegevens over kosten voor het huidige Stripe-account"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "Buffert een tabel in het geheugen zodat externe wijzigingen tijdens de evaluatie geen gevolgen voor die tabel hebben.",
        "Documentation.LongDescription": "Buffert een tabel in het geheugen, waarbij deze wordt geïsoleerd van externe wijzigingen tijdens de evaluatie.\r\n    Bufferen is ondiep. Hiermee wordt de evaluatie van alle scalaire celwaarden afgedwongen, maar blijven niet-scalaire waarden (records, lijsten, tabellen, enzovoort) ongewijzigd. \r\n    <br>\r\n    <br>\r\n    Houd er rekening mee dat uw query's mogelijk sneller kunnen worden uitgevoerd als u deze functie gebruikt. In sommige gevallen kunnen uw query's langzamer worden uitgevoerd vanwege de toegevoegde \r\n    kosten voor het lezen van alle gegevens en het opslaan ervan in het geheugen, evenals het feit dat bufferen downstream samenvouwen voorkomt. Als de gegevens niet hoeven te worden\r\n gebufferd, maar u alleen downstream samenvouwen wilt voorkomen, gebruikt u in plaats daarvan <code>Table.StopFolding</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Laad alle rijen van een SQL-tabel in het geheugen, zodat downstreambewerkingen geen query's meer kunnen uitvoeren op de SQL-server.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "Retourneert een tabel die het resultaat is van de samenvoeging van een lijst met tabellen.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die het resultaat is van de samenvoeging van een lijst met tabellen, <code>tables</code>. De resulterende tabel heeft een type rijstructuur die is gedefinieerd door <code>columns</code> of door een samenvoeging van de invoertypen als <code>columns</code> niet is opgegeven.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De drie tabellen samenvoegen.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Voeg drie tabellen met verschillende structuren samen.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Voeg twee tabellen en een project samen op het opgegeven type.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "Verplaatst de kolomkoppen omlaag naar de eerste rij met waarden.",
        "Documentation.LongDescription": "Verplaatst de kolomkoppen (de kolomnamen) omlaag naar de eerste rij met waarden. De standaardkolomnamen zijn \"Kolom1\", \"Kolom2\", enzovoort.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De eerste rij met waarden in de tabel omlaag verplaatsen.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "Verwijdert dubbele rijen uit de tabel.",
        "Documentation.LongDescription": "Hiermee verwijdert u dubbele rijen uit de tabel.\r\n    Een optionele parameter, <code>equationCriteria</code>, geeft aan welke kolommen van de tabel worden getest op duplicatie. Als <code>equationCriteria</code> niet is opgegeven, worden alle kolommen getest.<br>\r\n    <br>\r\n    Omdat Power Query soms bepaalde bewerkingen offloadt naar back-endgegevensbronnen (ook wel 'folding' genoemd) en soms ook query's optimaliseert door \r\n    bewerkingen over te slaan die niet strikt noodzakelijk zijn,  over het algemeen is er geen garantie welke specifieke duplicaat behouden blijft.\r\n    U kunt er bijvoorbeeld niet van uitgaan dat de eerste rij met een unieke set kolomwaarden behouden blijft en rijen verder omlaag in de tabel worden verwijderd.\r\n    Als u wilt dat de dubbele verwijdering voorspelbaar werkt, buffert u eerst de tabel met <code>Table.Buffer</code>.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "De dubbele rijen uit de tabel verwijderen.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "De dubbele rijen uit kolom [b] in de tabel <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code> verwijderen.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "Maakt een tabel van een lijst kolommen en opgegeven waarden.",
        "Documentation.LongDescription": "Hiermee wordt een tabel gemaakt van het type <code>columns</code> van een lijst <code>lists</code> die geneste lijsten met de kolomnamen en -waarden bevat.\r\n Als in bepaalde kolommen meer waarden staan dan in andere kolommen, worden de ontbrekende waarden ingevuld met de standaardwaarde null als in die kolommen de waarde null kan worden ingevoerd.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Een tabel retourneren uit een lijst met klantnamen in een lijst. Elke waarde in het klantenlijstitem wordt een rijwaarde en elke lijst wordt een kolom.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Een tabel van een opgegeven lijst kolommen en een lijst kolomnamen maken.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Een tabel maken met een verschillend aantal kolommen per rij. De waarde van de ontbrekende rij is null.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "Converteert een lijst naar een tabel door de opgegeven splitsfunctie op elk item in de lijst toe te passen.",
        "Documentation.LongDescription": "Converteert een lijst <code>list</code> naar een tabel door de optionele splitsfunctie, <code>splitter</code>, op elk item in de lijst toe te passen. Standaard wordt er vanuit gegaan dat de lijst een lijst met tekstwaarden is, van elkaar gescheiden door een komma. Optionele <code>columns</code> kan het aantal kolommen, een lijst met kolommen of een tabeltype zijn. Optionele <code>default</code> en <code>extraValues</code> kunnen ook worden opgegeven.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Een tabel maken op basis van een lijst met behulp van de standaardsplitser.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "Een tabel maken op basis van een lijst met behulp van een aangepaste splitser.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "Maak een tabel uit de lijst met behulp van de splitser Record.FieldValues.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "Converteert een lijst met records naar een tabel.",
        "Documentation.LongDescription": "Converteert <code>records</code>, een lijst met records, naar een tabel.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Een tabel maken van records, met recordveldnamen als kolomnamen.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Maak een tabel op basis van records met getypte kolommen en selecteer de nummerkolommen.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "Hiermee maakt u een tabel op basis van een lijst met rijwaarden en optionele kolommen",
        "Documentation.LongDescription": "Hiermee maakt u een tabel op basis van de lijst <code>rows</code>, waarbij elk element van de lijst een interne lijst is die de kolomwaarden voor één rij bevat. Voor <code>columns</code> kunt u een optionele lijst met kolomnamen, een tabeltype of een aantal kolommen opgeven.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Maakt een tabel met kolom [CustomerID] met daarin de waarden {1, 2}, kolom [Name] met daarin de waarden {\"Bob\", \"Jim\"} en kolom [Phone] met de waarden {\"123-4567\", \"987-6543\"}.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Retourneert een tabel met kolom [CustomerID] met daarin de waarden {1, 2}, kolom [Name] met daarin de waarden {\"Bob\", \"Jim\"} en kolom [Phone] met de waarden {\"123-4567\", \"987-6543\"}, waarbij [CustomerID] een getaltype is en [Name] en [Phone] teksttypen.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "Maakt een tabel met een kolom van de opgegeven waarde(n).",
        "Documentation.LongDescription": "Maakt een tabel met een kolom waarin de opgegeven waarde of lijst met waarden <code>value</code> staat. Er kan een optionele recordparameter, <code>options</code>, worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : de kolomnaam die wordt gebruikt bij het maken van een tabel van een lijst of scalaire waarde.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Een tabel van de waarde 1 maken.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "Een tabel van de lijst maken.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "Een tabel maken vanaf de waarde 1, met een aangepaste kolomnaam.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "Retourneert informatie over de manier waarop een tabel is gepartitioneerd.",
        "Documentation.LongDescription": "Retourneert informatie over de manier waarop een tabel is gepartitioneerd.  Er wordt een tabel geretourneerd waar elke kolom een partitiekolom in de oorspronkelijke tabel is en elke rij overeenkomt met een partitie in de oorspronkelijke tabel.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "Hiermee wordt een profiel van de kolommen van een tabel geretourneerd.",
        "Documentation.LongDescription": "<p>Hiermee wordt een profiel geretourneerd voor de kolommen in <code>table</code>.</p>\r\n<p>De volgende informatie wordt geretourneerd voor elke kolom (waar van toepassing):\r\n<ul>\r\n  <li>minimum</li>\r\n  <li>maximum</li>\r\n  <li>gemiddeld</li>\r\n  <li>standaardafwijking</li>\r\n  <li>aantal</li>\r\n  <li>null-aantal</li>\r\n  <li>uniek aantal</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "Verplaatst de eerste rij met waarden omhoog zodat die de nieuwe kolomkoppen (d.w.z. kolomnamen) worden.",
        "Documentation.LongDescription": "Verplaatst de eerste rij met waarden omhoog zodat die de nieuwe kolomkoppen (d.w.z. kolomnamen) worden. Standaard worden alleen tekst- of getalswaarden omhoog verplaatst naar kolomkoppen. Geldige opties:\r\n    <div>\r\n      <code>PromoteAllScalars</code>: als deze optie is ingesteld op <code>true</code>, worden alle scalaire waarden in de eerste rij omhoog verplaatst naar kolomkoppen op basis van <code>Culture</code>, indien opgegeven (of de huidige landinstelling van het document).\r\n    Voor waarden die niet naar tekst kunnen worden geconverteerd, wordt een standaardkolomnaam gebruikt.\r\n    </div>\r\n    <div>\r\n    <code>Culture</code>: een cultuurnaam die de cultuur voor de gegevens aangeeft.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De eerste rij met waarden in de tabel omhoog verplaatsen.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "Alle scalaire waarden in de eerste rij van de tabel omhoog verplaatsen naar kolomkoppen.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "Retourneert een tabel met het eerste aantal overgeslagen rijen.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die niet het eerste opgegeven aantal rijen bevat, <code>countOrCondition</code>, van de tabel <code>table</code>.\r\n Het aantal rijen dat wordt verwijderd, is afhankelijk van de optionele parameter <code>countOrCondition</code>.\r\n <ul>\r\n <li> Als <code>countOrCondition</code> wordt weggelaten, wordt alleen de eerste rij verwijderd. </li>\r\n <li> Als <code>countOrCondition</code> een getal is, wordt dat aantal rijen (van bovenaf) verwijderd. </li>\r\n <li> Als <code>countOrCondition</code> een voorwaarde is, worden de rijen die aan de voorwaarde voldoen verwijderd totdat een rij niet aan de voorwaarde voldoet.</li>\r\n </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De eerste rij van de tabel verwijderen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "De eerste twee rijen van de tabel verwijderen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "De eerste twee rijen waar [CustomerID] <=2 0 van de tabel verwijderen.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "Retourneert een tabel waarvan de laatste N rijen zijn verwijderd.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die niet de laatste <code>countOrCondition</code> rijen bevat van de tabel <code>table</code>.\r\n Het aantal rijen dat wordt verwijderd, is afhankelijk van de optionele parameter <code>countOrCondition</code>.\r\n <ul>\r\n <li> Als <code>countOrCondition</code> wordt weggelaten, wordt alleen de laatste rij verwijderd. </li>\r\n <li> Als <code>countOrCondition</code> een getal is, wordt dat aantal rijen (van onderaf) verwijderd. </li>\r\n <li> Als <code>countOrCondition</code> een voorwaarde is, worden de rijen die aan de voorwaarde voldoen verwijderd totdat een rij niet aan de voorwaarde voldoet.</li>\r\n </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De laatste rij van de tabel verwijderen.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "De laatste rijen waar [CustomerID] > 2 van de tabel verwijderen.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "Retourneert een tabel met de rijen die zijn verwijderd uit een invoertabel en waar in minstens een van de cellen een fout staat. Als er een lijst met kolommen is opgegeven, worden alleen de cellen die in de opgegeven kolommen staan, op fouten gecontroleerd.",
        "Documentation.LongDescription": "Retourneert een tabel met de rijen die zijn verwijderd uit een invoertabel en waar in minstens een van de cellen een fout staat. Als er een lijst met kolommen is opgegeven, worden alleen de cellen die in de opgegeven kolommen staan, op fouten gecontroleerd.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Verwijder de foutwaarde uit de eerste rij.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "Retourneert een tabel met de rijen in de omgekeerde volgorde.",
        "Documentation.LongDescription": "Retourneert een tabel met de rijen vanuit de invoer <code>table</code> in de omgekeerde volgorde.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De rijen in de tabel omkeren.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "Hiermee wordt een tabel geretourneerd met een beschrijving van de kolommen (oftewel het schema) van de opgegeven tabel.",
        "Documentation.LongDescription": "<p>Hiermee wordt een tabel geretourneerd met een beschrijving van de kolommen van <code>table</code>.</p>\r\n<p>Elke rij in de tabel beschrijft de eigenschappen van een kolom van <code>table</code>:</p>\\\r\n<p><table>\r\n  <tr>\r\n    <td><b>Kolomnaam</b></td>\r\n    <td><b>Beschrijving</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Name</code></td>\r\n    <td>De naam van de kolom.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Position</code></td>\r\n    <td>De op 0 gebaseerde positie van de kolom in <code>table</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Typenaam</code></td>\r\n    <td>De naam van het type kolom.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Soort</code></td>\r\n    <td>Het soort van het type kolom.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>Geeft aan of de kolom <code>null</code>-waarden mag bevatten.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>De numerieke basis (bijvoorbeeld base-2, base-10) van de velden <code>NumericPrecision</code> en <code>NumericScale</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>De nauwkeurigheid van een numerieke kolom in de basis die wordt opgegeven met <code>NumericPrecisionBase</code>. Dit is het maximum aantal cijfers dat kan worden vertegenwoordigd door een waarde van dit type (inclusief fractionele cijfers).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>De schaal van een numerieke kolom in de basis die wordt opgegeven met <code>NumericPrecisionBase</code>. Dit is het aantal cijfers in het fractionele deel van een waarde van dit type. Een waarde <code>0</code> geeft een vaste schaal zonder fractionele cijfers aan. Een waarde <code>null</code> geeft aan dat de schaal niet bekend is (omdat deze zwevend of niet gedefinieerd is).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>Het maximum aantal fractionele cijfers dat wordt ondersteund in het gedeelte met seconden van een datum- of tijdwaarde.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>Het maximum aantal tekens dat is toegestaan in een <code>text</code>-kolom, of het maximum aantal bytes dat is toegestaan in een <code>binaire</code> kolom.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>Geeft aan of deze kolom in lengte kan variëren (maximaal <code>MaxLength</code>) of een vaste grootte heeft.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>De naam van het type kolom in het systeemeigen typesysteem van de bron (bijvoorbeeld <code>nvarchar</code> voor SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>De standaardexpressie voor een waarde van deze kolom in de taal voor systeemeigen expressies van de bron (bijvoorbeeld <code>42</code> of <code>newid()</code> voor SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Description</code></td>\r\n    <td>De beschrijving van de kolom.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "Retourneert een tabel met alleen die rijen uit de invoertabel waar in minstens een van de cellen een fout staat. Als er een lijst met kolommen is opgegeven, worden alleen de cellen die in de opgegeven kolommen staan, op fouten gecontroleerd.",
        "Documentation.LongDescription": "Retourneert een tabel met alleen die rijen uit de invoertabel waar in minstens een van de cellen een fout staat. Als er een lijst met kolommen is opgegeven, worden alleen de cellen die in de opgegeven kolommen staan, op fouten gecontroleerd.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Selecteer namen van klanten met fouten in hun rijen.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "Retourneert een tabel met het eerste aantal overgeslagen rijen.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd die niet het eerste opgegeven aantal rijen bevat, <code>countOrCondition</code>, van de tabel <code>table</code>.\r\n Het aantal rijen dat wordt overgeslagen, is afhankelijk van de optionele parameter <code>countOrCondition</code>.\r\n <ul>\r\n <li> Als <code>countOrCondition</code> wordt weggelaten, wordt alleen de eerste rij overgeslagen. </li>\r\n <li> Als <code>countOrCondition</code> een getal is, wordt dat aantal rijen (van bovenaf) overgeslagen. </li>\r\n <li> Als <code>countOrCondition</code> een voorwaarde is, worden de rijen die aan de voorwaarde voldoen overgeslagen totdat een rij niet aan de voorwaarde voldoet.</li>\r\n </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De eerste rij van de tabel overslaan.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "De eerste twee rijen van de tabel overslaan.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "De eerste rijen van de tabel overslaan waar [Price] > 25.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "Hiermee voorkomt u dat downstreambewerkingen worden uitgevoerd op de oorspronkelijke bron van de gegevens.",
        "Documentation.LongDescription": "Hiermee voorkomt u dat downstreambewerkingen worden uitgevoerd op de oorspronkelijke bron van de gegevens in <code>table</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden gegevens opgehaald uit een SQL-tabel op een manier die voorkomt dat downstreambewerkingen worden uitgevoerd als een query op de SQL-server.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "Maakt kolommen in rijen en rijen in kolommen.",
        "Documentation.LongDescription": "Maakt kolommen in rijen en rijen in kolommen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kolommen maken van de rijen uit de tabel met naam-waarde-paren.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "De relaties tussen een set met tabellen ophalen.",
        "Documentation.LongDescription": "De relaties tussen een set met tabellen ophalen. Er wordt aangenomen dat de set <code>tables</code> een structuur heeft die vergelijkbaar is met die van een navigatietabel. De kolom die wordt gedefinieerd door <code>dataColumn</code>, bevat de werkelijke gegevenstabellen.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "Retourneert een tabel met SQL-tabellen en weergaven vanuit de Teradata-database.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en weergaven geretourneerd die beschikbaar zijn in een Teradata-database op server <code>server</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "Voer het aantal maanden aan historische Twilio-gegevens in dat u wilt ontvangen.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "Hiermee wordt een tabel met relevante Twilio-gegevens geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "Hiermee wordt een tabel geretourneerd met een beschrijving van de kolommen (oftewel het schema) van de opgegeven tabeltype.",
        "Documentation.LongDescription": "<p>Hiermee wordt een tabel geretourneerd die de kolommen van <code>tableType</code> beschrijft.</p>\r\n<p>Raadpleeg de documentatie voor<code>Table.Schema</code> voor een beschrijving van de tabel die wordt gemaakt.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Feed van Azure DevOps Services",
        "Documentation.DisplayName": "Feed van Azure DevOps Services",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Hiermee wordt een tabel met OData-inhoud van Azure DevOps geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Verbinding maken met Viva Insights-gegevens",
        "Documentation.LongDescription": "Wekelijkse metrische gegevens en kenmerkgegevens importeren uit Workplace Analytics.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt voor elke gemeten werknemer in de partitie een tabel met zichtbare kenmerken en metrische waarden per week geretourneerd.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "advancedParameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "Retourneert de inhoud van het HTML-document, opgesplitst in alle structuren van dat document, alsmede een weergave van het volledige document en de tekst van dat document na verwijdering van de tags.",
        "Documentation.LongDescription": "Retourneert de inhoud van het HTML-document, opgesplitst in alle structuren van dat document, alsmede een weergave van het volledige document en de tekst van dat document na verwijdering van de tags.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een tabel met metrische sleutelgegevens van Webtrends geretourneerd.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Hiermee wordt een aanroep verzonden naar het Webtrends KeyMetrics-eindpunt en worden alle gegevens geretourneerd als een tabel.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met metrische sleutelgegevens voor tenant 98765 van de afgelopen 30 dagen opgehaald",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "Een tabel met metrische sleutelgegevens"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "Voer de profiel-id in die is gekoppeld aan uw Webtrends-account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "Hiermee wordt een tabel met de relevante Webtrends-gegevens geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Verbinding maken met Viva Insights-gegevens",
        "Documentation.LongDescription": "Wekelijkse metrische gegevens en kenmerkgegevens importeren uit Workplace Analytics.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt voor elke gemeten werknemer in de partitie een tabel met zichtbare kenmerken en metrische waarden per week geretourneerd.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "Retourneert de inhoud van het XML-document als een hiërarchische tabel.",
        "Documentation.LongDescription": "Retourneert de inhoud van het XML-document als een hiërarchische tabel.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "Retourneert de inhoud van het XML-document als een geneste verzameling platgemaakte tabellen.",
        "Documentation.LongDescription": "Retourneert de inhoud van het XML-document als een geneste verzameling platgemaakte tabellen.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Haal de inhoud van een lokaal XML-bestand op.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "Voer de URL van uw Zendesk-account in.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "Hiermee wordt een tabel met de relevante Zendesk-gegevens geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "Hiermee wordt de schemaverzameling voor een ADO.NET-gegevensbron geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de schemaverzameling voor de ADO.NET-gegevensbron geretourneerd met de providernaam <code>providerName</code> en de verbindingsreeks <code>connectionString</code>. <code>connectionString</code> kan tekst of een record met eigenschapswaardeparen zijn. De eigenschapwaarden kunnen teksten of getallen zijn. Een optionele recordparameter, <code>options</code>, kan worden geleverd om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Een logische waarde (true/false) waarmee wordt bepaald of SQL Server-compatibele verbindingsreeksopties voor Windows-verificatie moeten worden geproduceerd. De standaardwaarde is true.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (bèta)",
        "Documentation.Description": "Gegevens importeren uit een Amazon Redshift-database.",
        "Documentation.LongDescription": "Retourneert een tabel met de tabellen in het Amazon Redshift-cluster <code>server</code> in de database <code>database</code>.  Er kan een optionele recordparameter, <code>options</code>, worden opgegeven om de volgende opties te beheren:\r\n<ul>\r\n<li><code>Providernaam</code>: een tekstwaarde die moet worden gebruikt als providernaam voor de verbinding. Dit wordt gebruikt bij het gebruik van Microsoft Authentication.</li>\r\n<li><code>Batch Size</code>: het aantal rijen dat wordt opgehaald in één aanroep naar de server.</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Hiermee wordt een tabel met multidimensionale kubussen of tabellaire modellen uit de Analysis Services-database geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met multidimensionale kubussen of modellen in tabelvorm uit de Analysis Services-database <code>database</code> op de server <code>server</code> geretourneerd. U kunt een optionele recordparameter, <code>options</code>, opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>Query</code> : Een systeemeigen MDX-query die wordt gebruikt voor het ophalen van gegevens.</li>\r\n<li><code>TypedMeasureColumns</code> : Een logische waarde die aangeeft of de typen die zijn opgegeven in het multidimensionale model of het model in tabelvorm, worden gebruikt voor de typen van de toegevoegde meetkolommen. Indien ingesteld op false, wordt het type number gebruikt voor alle meetkolommen. De standaardwaarde voor deze optie is false.</li>\r\n<li><code>Culture</code> : Een cultuurnaam die de cultuur voor de gegevens aangeeft. Deze waarde komt overeen met de eigenschap voor de landinstellingen-id van de verbindingsreeks.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>SubQueries</code> : Een getal (0, 1 of 2) waarmee de waarde van de eigenschap SubQueries in een verbindingsreeks wordt ingesteld. Dit getal bepaalt het gedrag van berekende leden voor subselecties en subkubussen (de standaardwaarde is 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Hiermee wordt een tabel geretourneerd waarin de tabellen voor het opgegeven Spark-cluster worden weergegeven.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd met de tabellen voor de <code>host</code> van het Spark-cluster die <code>protocol</code> gebruikt. Geldige protocollen zijn:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel geretourneerd waarin de tabellen voor het opgegeven Spark-cluster worden weergegeven.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Voer een organisatie en projectnamen in.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (alleen Boards)",
        "Documentation.LongDescription": "Hiermee wordt een tabel met Analytics-weergaven van Azure DevOps geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "HDInsight Interactive Query",
        "Documentation.Caption": null,
        "Documentation.Description": "Gegevens importeren uit HDInsight Interactive Query",
        "Documentation.LongDescription": "\r\nHiermee wordt een lijst met tabellen uit HDInsight Interactive Query geretourneerd die zijn opgegeven door de <code>database</code> op de HDInsight Interactive Query-<code>server</code>. Optioneel is er een poortnummer voor de server opgegeven, gescheiden door een dubbele punt. De optionele parameter <code>options</code> kan worden opgegeven om de volgende opties te controleren:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: een tijdsduur die bepaalt hoe lang moet worden gewacht voordat een verbindingspoging met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n        <li><code>CommandTimeout</code>: een tijdsduur die bepaalt hoe lang de query aan de serverzijde mag worden uitgevoerd voordat deze wordt geannuleerd. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n</ul>\r\nDe parameter <code>options</code> wordt opgegeven in de vorm [optie1 = waarde1, optie2 = waarde2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "Hiermee wordt een tabel geretourneerd met kolommen die zijn toegewezen aan de kenmerken van een entiteit in Common Data Model, waaronder gegevenstypen.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd met kolommen die zijn toegewezen aan de kenmerken van een entiteit in Common Data Model, waaronder gegevenstypen. Kolommen uit de entiteitsdefinitie worden toegevoegd als deze niet zijn toegewezen en niet-toegewezen kolommen worden verwijderd.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "Retrieve all pages of data",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "Retourneert een kubus nadat er een parameter op is toegepast.",
        "Documentation.LongDescription": "Retourneert een kubus nadat <code>parameter</code> met <code>arguments</code> op <code>cube</code> is toegepast.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "Wijzigt de dimensionale granulatie van de filtercontext voor de kubus door de kenmerken die aan de opgegeven kolommen zijn toegewezen samen te vouwen.",
        "Documentation.LongDescription": "Wijzigt de dimensionale granulatie van de filtercontext voor de <code>cube</code> door de kenmerken die aan de opgegeven kolommen <code>columnNames</code> zijn toegewezen samen te vouwen. De kolommen worden ook verwijderd uit de tabelweergave van de kubus.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Vervangt de set dimensies die worden geretourneerd door Cube.Dimensions.",
        "Documentation.LongDescription": "Vervangt de set dimensies die worden geretourneerd door <code>Cube.Dimensions</code>.\r\n    Deze functie kan bijvoorbeeld worden gebruikt om een id-kolom toe te voegen aan een dimensiekenmerk, zodat de gegevensbron kan groeperen op de id in plaats van de weergegeven waarde.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "Past een lijst met kubusfuncties toe.",
        "Documentation.LongDescription": "Past de lijst met kubusfuncties <code>transforms</code> op de <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "Hiermee wordt een tabel met SQL-tabellen en weergaven geretourneerd die beschikbaar zijn in een Db2-database.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en weergaven geretourneerd die beschikbaar zijn in een DB2-database op server <code>server</code> in de database-instantie met de naam <code>database</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n<li><code>Implementation</code> : Hiermee wordt de implementatie van de interne databaseprovider opgegeven die moet worden gebruikt. Geldige waarden zijn IBM en Microsoft.</li>\r\n<li><code>BinaryCodePage</code> : Een getal voor CCSID (Coded Character Set Identifier) om binaire Db2 FOR BIT-gegevens om te zetten in tekenreeksen. Dit is van toepassing op Implementation = Microsoft. Stel 0 in om de conversie uit te schakelen (standaard). Stel 1 in om de conversie uit te voeren op basis van databasecodering. Stel een ander CCSID-getal in om de conversie uit te voeren naar toepassingscodering.</li>\r\n<li><code>PackageCollection</code> : Hiermee wordt een reekswaarde voor pakketverzameling aangegeven (de standaardinstelling is NULLID) om het gebruik van gedeelde pakketten in te schakelen die nodig zijn om SQL-instructies te verwerken. Dit is van toepassing op Implementation = Microsoft.</li>\r\n<li><code>UseDb2ConnectGateway</code> : Hiermee wordt aangegeven of de verbinding wordt gemaakt via een Db2 Connect-gateway. Is van toepassing op implementation = &quot;Microsoft&quot;.</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Hiermee wordt een gegevensset opgehaald van Data.World"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "Retourneert een tabel die de eigenschappen en inhoud bevat van de blobs in de opgegeven container van een Azure-opslagkluis.",
        "Documentation.LongDescription": "Retourneert een tabel die een rij bevat voor elke blob in de container-URL <code>account</code> van een Azure-opslagkluis. Elke rij bevat eigenschappen van het bestand en een koppeling naar de inhoud.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "Hiermee wordt een tabel geretourneerd met de resultaten van het uitvoeren van de opgegeven CSS-selectoren op basis van de opgegeven HTML.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd met de resultaten van de opgegeven CSS-selectors ten opzichte van de opgegeven <code>html</code>. Een optionele recordparameter, <code>options</code>, kan worden opgegeven om extra eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Toegang tot gegevens",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel geretourneerd uit een voorbeeldwaarde voor HTML-tekst.",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>Manager</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "Hiermee worden de HREF's opgehaald uit een voorbeeld van een HTML-tekstwaarde.",
            "Code": "Html.Table(\"<a href=\"\"/test.html\"\">Test</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "Hiermee wordt een tabel met de beschikbare SQL-tabellen en -weergaven in een Informix-database geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en weergaven geretourneerd die beschikbaar zijn in een Informix-database op server <code>server</code> in de database-instantie met de naam <code>database</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "Hiermee wordt een tabel met leaddetails geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt het eindpunt van de Marketo REST API op <code>url</code>/rest/v1/leads.json aangeroepen. Alle leads in de lijst <code>leadIds</code> worden geretourneerd.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden de details voor drie leads opgehaald",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "Een tabel met details voor de opgegeven leads"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "Voer de URL in van het Marketo REST API-eindpunt dat is gekoppeld aan uw account.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "Hiermee wordt een tabel met de relevante Marketo-gegevens opgehaald."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "Retourneert een tabel met SQL-tabellen, weergaven en opgeslagen scalaire functies die beschikbaar zijn in een MySQL-database.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen, weergaven en opgeslagen scalaire functies geretourneerd die beschikbaar zijn in een MySQL-database op server <code>server</code> in de database-instantie met de naam <code>database</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>Encoding</code> : Een TextEncoding waarde waarmee de tekenset wordt opgegeven die is gebruikt voor het coderen van alle query&#39;s die naar de server zijn verzonden (standaard is null).</li>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>TreatTinyAsBoolean</code> : Een logische waarde (true/false) waarmee wordt bepaald of kolommen van het type tinyint op de server moeten worden geforceerd als logische waarden. De standaardinstelling is true.</li>\r\n<li><code>OldGuids</code> : Een logische waarde (true/false) waarmee wordt ingesteld of kolommen van het type char(36), indien false, of kolommen van het type binary(16), indien true, worden verwerkt als GUID&#39;s. De standaardinstelling is false.</li>\r\n<li><code>ReturnSingleDatabase</code> : Een logische waarde (true/false) waarmee wordt ingesteld of alle tabellen van alle databases moeten worden geretourneerd (indien false) of dat tabellen en weergaven van de opgegeven database moeten worden geretourneerd (indien true). De standaardinstelling is false.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "Gegevens importeren uit een IBM Netezza-database.",
        "Documentation.LongDescription": "\r\nHiermee wordt een tabel met Netezza-tabellen, weergaven en opgeslagen functies van de Netezza Server-database <code>database</code> op server <code>server</code> geretourneerd. De poort kan optioneel worden opgegeven met de server, gescheiden door een dubbele punt. Een optionele recordparameter, <code>options</code>, kan worden opgegeven om de volgende opties te controleren:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: Een logische parameter (waar/onwaar) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op de geretourneerde waarden (standaardinstelling is waar)</li>\r\n        <li><code>HierarchicalNavigation</code>: Een logische parameter (waar/onwaar) waarmee wordt ingesteld of de tabellen moeten worden gegroepeerd op de schemanamen (standaardinstelling is onwaar)</li>\r\n        <li><code>ConnectionTimeout</code>: Een waarde voor de duur waarmee wordt bepaald hoe lang moet worden gewacht voor dat de pogingen om verbinding te maken met de server worden gestaakt. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n        <li><code>CommandTimeout</code>: Een waarde voor de duur waarmee wordt bepaald hoe lang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>NormalizeDatabaseName</code>: Een logische parameter (waar/onwaar) waarmee wordt ingesteld of de databasenaam wordt genormaliseerd naar hoofdletters of dat deze letterlijk wordt geïnterpreteerd (standaardinstelling is waar).</li>\r\n</ul>\r\nDe recordparameter wordt opgegeven als [option1 = value1, option2 = value2...].",
        "Documentation.Examples": [
          {
            "Description": "De tabellen in een IBM Netezza-project weergeven.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "Retourneert het resultaat van het uitvoeren van een systeemeigen query op een ODBC-gegevensbron.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van het uitvoeren van <code>query</code> met de verbindingsreeks <code>connectionString</code> met ODBC. <code>connectionString</code> kan tekst of een record met eigenschapswaardeparen zijn. Eigenschapswaarden kunnen tekst of cijfers zijn. Een optionele recordparameter, <code>options</code>, kan worden geleverd om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is vijftien seconden.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Een logische waarde (true/false) waarmee wordt bepaald of SQL Server-compatibele verbindingsreeksopties voor Windows-verificatie moeten worden geproduceerd. De standaardwaarde is true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Retourneert het resultaat van het uitvoeren van een eenvoudige query op basis van de opgegeven verbindingsreeks.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "Retourneert het resultaat van het uitvoeren van een systeemeigen query op een OLE DB-gegevensbron.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van het uitvoeren van <code>query</code> met de verbindingsreeks <code>connectionString</code> met OLE DB. <code>connectionString</code> kan tekst of een record met eigenschapswaardeparen zijn. Eigenschapswaarden kunnen tekst of cijfers zijn. Een optionele recordparameter, <code>options</code>, kan worden geleverd om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Een logische waarde (true/false) waarmee wordt bepaald of SQL Server-compatibele verbindingsreeksopties voor Windows-verificatie moeten worden geproduceerd. De standaardwaarde is true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "Retourneert een tabel met SQL-tabellen en weergaven die beschikbaar zijn in een PostgreSQL-database.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en weergaven geretourneerd die beschikbaar zijn in een PostgreSQL-database op server <code>server</code> in de database-instantie met de naam <code>database</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Importeer gegevens uit een Snowflake Computing-magazijn.",
        "Documentation.LongDescription": "Retourneert een tabel met de tabellen in het Snowflake Computing-<code>warehouse</code> dat zich bevindt op <code>server</code>. U kunt de optionele recordparameter <code>options</code> opgegeven om de volgende opties te besturen:\r\n<ul>\r\n<li><code>Rol</code>: een tekstwaarde die kan worden gebruikt als de rolnaam van de verbinding.</li>\r\n<li><code>CreateNavigationProperties</code>: een logische waarde (true/false) waarmee wordt ingesteld of voor de geretourneerde waarden navigatie-eigenschappen moeten worden gegenereerd (standaardinstelling is true)</li>\r\n<li><code>ConnectionTimeout</code>: het aantal seconden dat moet worden gewacht op netwerkreacties van Snowflake.</li>\r\n<li><code>CommandTimeout</code>: het aantal seconden dat moet worden gewacht om een query uit te voeren.</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "De tabellen in een Snowflake-magazijn weergeven.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Hiermee wordt een tabel geretourneerd waarin de tabellen voor het opgegeven Spark-cluster worden weergegeven.",
        "Documentation.LongDescription": "Hiermee wordt een tabel geretourneerd met de tabellen voor de <code>host</code> van het Spark-cluster die <code>protocol</code> gebruikt. Geldige protocollen zijn:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Geef de tabellen in een Azure Spark-exemplaar weer.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "Retourneert een tabel met SQL-tabellen, weergaven en opgeslagen functies vanuit de SQL Server-database.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen, weergaven en opgeslagen functies geretourneerd die beschikbaar zijn in de SQL Server-database <code>database</code> op de server <code>server</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt of een komma. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Een getal waarmee de waarde van de querycomponent maxdop in de gegenereerde SQL-query wordt ingesteld.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n<li><code>MultiSubnetFailover</code> : Een logische waarde (true/false) waarmee de waarde van de eigenschap MultiSubnetFailover in de verbindingsreeks wordt ingesteld (de standaardinstelling is false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Een logische waarde (waar/onwaar) waarbij indien waar, een poging tot invouwen van typeconversies wordt gedaan die kan mislukken en waardoor de volledige query mislukt. Niet aanbevolen voor algemeen gebruik.</li>\r\n<li><code>ContextInfo</code> : Een binaire waarde die wordt gebruikt om de CONTEXT_INFO in te stellen voordat elke opdracht wordt uitgevoerd.</li>\r\n<li><code>OmitSRID</code> : Een logische waarde (waar/onwaar) waarbij indien waar, de SRID wordt weggelaten bij het produceren van de WKT-weergave (Well-Known Text) van geometrie- en geografietypen.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Een logische waarde (waar/onwaar) die, indien waar, het vouwen van query&#39;s toestaat voor databases op dezelfde server. De standaardwaarde is onwaar.</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Retourneert een tabel met SQL-tabellen en weergaven die beschikbaar zijn in een Sybase-database.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met SQL-tabellen en weergaven geretourneerd die beschikbaar zijn in een Sybase-database op server <code>server</code> in de database-instantie met de naam <code>database</code>. De poort kan optioneel worden opgegeven bij de server, gescheiden door een dubbele punt. Een optionele recordparameter <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Een functie die wordt gebruikt voor het maken van namen voor navigatie-eigenschappen.</li>\r\n<li><code>Query</code> : Een systeemeigen SQL-query die wordt gebruikt voor het ophalen van gegevens. Als de query meerdere resultatensets oplevert, wordt alleen de eerste set geretourneerd.</li>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>ConnectionTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een poging om een verbinding te maken met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n</ul>\r\n\r\n    De recordparameter wordt bijvoorbeeld opgegeven als [option1 = value1, option2 = value2...] of [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "Voegt een kolom met expliciete positiewaarden bij.",
        "Documentation.LongDescription": "Voegt een kolom genaamd <code>newColumnName</code> toe aan <code>table</code> met expliciete positiewaarden.\r\n    Een optionele waarde, <code>initialValue</code>, de aanvankelijke indexwaarde. Een optionele waarde, <code>increment</code>, geeft aan met hoeveel elke indexwaarde steeds wordt verhoogd.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Een indexkolom genaamd Index toevoegen aan de tabel.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "Een indexkolom genaamd index, die begint bij 10 en steeds wordt verhoogd met 5, toevoegen aan de tabel.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "Een kopie van een rij voor elke waarde in de lijst maken aan de hand van een kolom met lijsten in een tabel.",
        "Documentation.LongDescription": "Aan de hand van <code>table</code>, waar <code>column</code> een lijst met waarden is, de lijst in een rij voor elke waarde splitsen. Waarden in de andere kolommen worden naar elke nieuwe rij gedupliceerd.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "De lijstkolom [Name] in de tabel splitsen.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "Geeft de waarde van een vorige cel door naar de cellen met nulwaarden eronder in de kolom.",
        "Documentation.LongDescription": "Retourneert de tabel uit de opgegeven <code>table</code> waar de waarde van een vorige cel wordt doorgegeven naar de cellen met nulwaarden eronder in de opgegeven <code>columns</code> kolom.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Een tabel met de nulwaarden in kolom [Place] retourneren die is gevuld met de waarden boven de nulwaarden uit de tabel.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "Geeft de waarde van een cel door naar de cellen met nulwaarden erboven in de kolom.",
        "Documentation.LongDescription": "Retourneert de tabel uit de opgegeven <code>table</code> waar de waarde van de volgende cel wordt doorgegeven naar de cellen met nulwaarden erboven in de opgegeven <code>columns</code> kolom.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Een tabel met de nulwaarden in kolom [Column2] retourneren die is gevuld met de waarden onder de nulwaarden uit de tabel.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "Retourneert uit de tabel alle rijen die de opgegeven tekst bevatten.",
        "Documentation.LongDescription": "Retourneert uit de tabel <code>table</code> de rijen die de opgegeven tekst <code>text</code> bevatten. Als de tekst niet wordt gevonden, wordt er een lege tabel geretourneerd.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De rijen in de tabel zoeken die Bob bevatten.",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "Retourneert het eerste aantal opgegeven rijen.",
        "Documentation.LongDescription": "Retourneert de eerste rij(en) van de tabel <code>table</code>, afhankelijk van de waarde van <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Als <code>countOrCondition</code> een getal is, wordt dat aantal rijen (vanaf het begin) geretourneerd. </li>\r\n    <li> Als <code>countOrCondition</code> een voorwaarde is, worden de rijen geretourneerd die voldoen aan de voorwaarde, en stopt het retourneren bij een rij die niet aan de voorwaarde voldoet.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De eerste twee rijen van de tabel zoeken.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "In de tabel de eerste rijen zoeken waarin [a] > 0.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "Retourneert een tabel die het resultaat is van het combineren van een set gepartitioneerde tabellen.",
        "Documentation.LongDescription": "Retourneert een tabel die het resultaat is van de combinatie van een set gepartitioneerde tabellen, <code>partitions</code>. <code>partitionColumn</code> is de naam van de kolom die wordt toegevoegd. Het type kolom is standaard <code>willekeurig</code>, maar kan worden opgegeven met <code>partitionColumnType</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Itemtype zoeken in de lijst <code>{number}</code>.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "Retourneert het laatste opgegeven aantal rijen.",
        "Documentation.LongDescription": "Retourneert de laatste rij(en) van de tabel <code>table</code>, afhankelijk van de waarde van <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Als <code>countOrCondition</code> een getal is, wordt dat aantal rijen geretourneerd, te beginnen bij positie (einde - <code>countOrCondition</code>). </li>\r\n    <li> Als <code>countOrCondition</code> een voorwaarde is, worden de rijen die voldoen aan de voorwaarde, oplopend geretourneerd en stopt het retourneren bij een rij die niet aan de voorwaarde voldoet.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De laatste twee rijen van de tabel zoeken.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "De laatste rijen in de tabel zoeken waarin [a] > 0.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "Retourneert een tabel waarin alle kolomnamen worden voorafgegaan door de opgegeven tekst.",
        "Documentation.LongDescription": "Retourneert een tabel waarin alle kolomnamen van de opgegeven <code>table</code> worden voorafgegaan door de opgegeven tekst, <code>prefix</code>, plus een punt in de notatie <code>prefix</code><code>.ColumnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De kolomnamen in de tabel vooraf laten gaan door de tekst MyTable.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "Retourneert de rijen die beginnen bij de opgegeven verschuiving.",
        "Documentation.LongDescription": "Retourneert de rijen vanaf de <code>table</code> die beginnen bij de opgegeven <code>offset</code>. Een optionele parameter, <code>count</code>, bepaalt hoeveel rijen er worden geretourneerd. Standaard worden alle rijen na de verschuiving geretourneerd.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Alle rijen retourneren vanaf verschuiving 1 in de tabel.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "De ene rij retourneren vanaf verschuiving 1 in de tabel.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "Verwijdert de opgegeven kolommen.",
        "Documentation.LongDescription": "Hiermee verwijdert u de opgegeven <code>columns</code> uit de aangeleverde <code>table</code>.\r\n    Als de opgegeven kolom niet bestaat, wordt er een fout gegenereerd, tenzij de optionele parameter <code>missingField</code> een alternatief gedrag opgeeft (bijvoorbeeld <code>MissingField.UseNull</code> of <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Kolom [Phone] uit de tabel verwijderen.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Probeer een niet-bestaande kolom uit de tabel te verwijderen.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "Verwijdert alle instanties van de opgegeven rijen uit de tabel.",
        "Documentation.LongDescription": "Hiermee worden alle herhalingen van de opgegeven <code>rows</code> van de <code>table</code> verwijderd.\r\n Een optionele parameter <code>equationCriteria</code> kan worden opgegeven voor het aansturen van de vergelijking tussen de rijen van de tabel.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Verwijdert uit de tabel <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code> alle rijen waarin [a = 1].",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "Verwijdert het opgegeven aantal rijen.",
        "Documentation.LongDescription": "Verwijdert <code>count</code> rijen vanaf het begin van de <code>table</code>, te beginnen bij de opgegeven <code>offset</code>. Een standaardaantal van 1 wordt gebruikt als parameter <code>count</code> niet is opgegeven. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De eerste rij uit de tabel verwijderen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "De eerste rij op positie 1 uit de tabel verwijderen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Twee rijen te beginnen bij positie 1 uit de tabel verwijderen.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "Past naamswijzigingen toe in de vorm {old, new}.",
        "Documentation.LongDescription": "Voert de opgegeven naamswijzigingen door in de kolommen in tabel <code>table</code>. Een vervanging <code>renames</code> bestaat uit een lijst met twee waarden, de oude kolomnaam en de nieuwe kolomnaam, die worden aangeleverd als een lijst.\r\n    Als de kolom niet bestaat, wordt er een uitzondering gegenereerd tenzij er door de optionele <code>missingField</code> een alternatief wordt opgegeven (bijvoorbeeld <code>MissingField.UseNull</code> of <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De kolomnaam CustomerNum vervangen door CustomerID in de tabel.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "De kolomnaam CustomerNum vervangen door CustomerID en PhoneNum door Phone in de tabel.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "De kolomnaam NewCol vervangen door NewColumn in de tabel en negeren als die kolom niet in de tabel staat.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "Retourneert een tabel met de kolommen in de opgegeven volgorde.",
        "Documentation.LongDescription": "Retourneert een tabel vanuit de invoer <code>table</code> met de kolom in de volgorde zoals bepaald door <code>columnOrder</code>. Kolommen die niet in de lijst zijn opgegeven, worden niet opnieuw gerangschikt.\r\n     Als de kolom niet bestaat, wordt er een uitzondering gegenereerd tenzij er door de optionele parameter <code>missingField</code> een alternatief wordt opgegeven (bijvoorbeeld <code>MissingField.UseNull</code> of <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De volgorde van de kolommen [Phone] en [Name] in de tabel omdraaien.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "De volgorde van de kolommen [Phone] en [Addresss] in de tabel omdraaien of MissingField.Ignore gebruiken. De tabel wordt niet gewijzigd, omdat de kolom [Address] niet bestaat.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "Herhaalt de rijen van de tabel het opgeven aantal malen.",
        "Documentation.LongDescription": "Retourneert een tabel met de rijen vanuit de invoer <code>table</code> de opgegeven <code>count</code> keer.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De rijen in de tabel twee keer herhalen.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "Vervangt de foutwaarden in de opgegeven kolommen met de corresponderende opgegeven waarde.",
        "Documentation.LongDescription": "Vervangt de foutwaarden in de opgegeven kolommen van de <code>table</code> met de nieuwe waarden in de lijst <code>errorReplacement</code>. De indeling van de lijst is {{column1, value1}, …}. Er is slechts één vervangende waarde per kolom mogelijk: er wordt een fout veroorzaakt als de kolom vaker wordt opgegeven.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "De foutwaarde vervangen door de tekst world in de tabel.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "De foutwaarde in kolom A vervangen door de tekst hello en in kolom B door de tekst world in de tabel.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "Vervangt de sleutels van de opgegeven tabel.",
        "Documentation.LongDescription": "Vervangt de sleutels van de opgegeven tabel.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Vervang de bestaande sleutels van een tabel.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "Vervangt alle opgegeven rijen door de aangeleverde rij of rijen.",
        "Documentation.LongDescription": "Hiermee worden alle opgegeven rijen vervangen in de <code>table</code> door de opgegeven rijen. De rijen die moeten worden vervangen en de vervangingen worden opgegeven in <code>replacements</code>, met behulp van {old, new}-opmaak.\r\n Een optionele <code>equationCriteria</code>-parameter kan worden opgegeven voor het aansturen van de vergelijking tussen de rijen van de tabel.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "De rijen [a = 1, b = 2] en [a = 2, b = 3] in de kolom vervangen door [a = -1, b = -2],[a = -2, b = -3] .",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "Retourneert een tabel met alleen de opgegeven kolommen.",
        "Documentation.LongDescription": "Retourneert de <code>table</code> met alleen de opgegeven <code>columns</code>.\r\n    <ul>\r\n       <li><code>table</code>: De opgegeven tabel.</li>\r\n       <li><code>columns</code>: De lijst met kolommen die vanuit de tabel <code>table</code> moeten worden geretourneerd. De kolommen in de geretourneerde tabel staan in de volgorde die staat vermeld in <code>columns</code>.</li>\r\n       <li><code>missingField</code>: <i>(Optioneel)</i> Wat moet er worden gedaan als de kolom niet bestaat.  Bijvoorbeeld: <code>MissingField.UseNull</code> of <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Als de kolom [Name] opnemen.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "Alleen de kolommen [CustomerID] en [Name] opnemen.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Als de opgenomen kolom niet bestaat, is het standaardresultaat een fout.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "Als de opgenomen kolom niet bestaat, wordt met de optie <code>MissingField.UseNull</code> een kolom met null-waarden gemaakt.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "Selecteert de rijen die aan de voorwaardefunctie voldoen.",
        "Documentation.LongDescription": "Retourneert een tabel met rijen vanuit de <code>table</code> die overeenkomt met de selectie <code>condition</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Selecteer de rijen in de tabel waarbij de waarden in de kolom [CustomerID] groter zijn dan 2.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Selecteer de rijen in de tabel waar de namen geen B bevatten.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "Sorteert de tabel aan de hand van een of een kolomnamen en vergelijkingscriteria.",
        "Documentation.LongDescription": "Sorteert de <code>table</code> aan de hand van de lijst met een of een kolomnamen en optionele <code>comparisonCriteria</code> in de notatie { { col1, comparisonCriteria }, {col2} }.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De tabel op de kolom OrderID sorteren.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "De tabel aflopend op de kolom OrderID sorteren.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "De tabel op de kolom CustomerID en vervolgens OrderID aflopend op CustomerID sorteren.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "Transformeert kolomnamen door de opgegeven functie te gebruiken.",
        "Documentation.LongDescription": "Hiermee worden kolomnamen omgezet met de opgegeven <code>nameGenerator</code>-functie. Geldige opties:\r\n <div>\r\n <code>MaxLength</code> geeft de maximumlengte van nieuwe kolomnamen op. Als de opgegeven functie een langere kolomnaam als resultaat heeft, wordt de langere naam ingekort.\r\n </div>\r\n <div>\r\n <code>Comparer</code> wordt gebruikt voor het aansturen van de vergelijking en tegelijkertijd voor het genereren van nieuwe kolomnamen. Vergelijkingsfuncties kunnen worden gebruikt om bij de vergelijking geen onderscheid te hoeven maken tussen hoofdletters en kleine letters of om bij de vergelijking rekening te houden met de cultuur en aard van de omgeving.\r\n </div>\r\n <div>\r\n De volgende ingebouwde vergelijkingsfuncties kunnen in formules worden gebruikt:\r\n </div>\r\n <ul>\r\n <li><code>Comparer.Ordinal</code>: waarmee exacte ordinale vergelijkingen kunnen worden uitgevoerd</li>\r\n <li><code>Comparer.OrdinalIgnoreCase</code>: waarmee exacte ordinale vergelijkingen kunnen worden uitgevoerd waarbij geen onderscheid wordt gemaakt tussen hoofdletters en kleine letters</li>\r\n <li> <code>Comparer.FromCulture</code>: waarmee vergelijkingen met inachtneming van de cultuur kunnen worden uitgevoerd</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Verwijder het teken <code>#(tab)</code> uit kolomnamen",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "Kolomnamen transformeren naar namen met een lengte van 6 tekens, zonder rekening te houden met hoofdlettergebruik.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "Past met behulp van een specifieke cultuur type transformatie(s) in de notatie { column, type } toe.",
        "Documentation.LongDescription": "Hiermee wordt een tabel van de uitvoer <code>table</code> geretourneerd door de transformatiebewerking toe te passen op de kolommen die zijn opgegeven in de parameter <code>typeTransformations</code> (in de notatie { column name, type name}) met behulp van de opgegeven cultuur in de optionele parameter <code>culture</code> (bijvoorbeeld: nl-NL).\r\n Als de kolom niet bestaat, wordt er een uitzondering gegenereerd.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "De nummerwaarden in kolom [a] vanuit de tabel <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> transformeren naar tekstwaarden.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "Transformeert de waarden van een of meer kolommen.",
        "Documentation.LongDescription": "Transformeert <code>table</code> door elke kolombewerking toe te passen die wordt vermeld in <code>transformOperations</code> (waarbij de indeling { column name, transformation } of { column name, transformation, new column type }) is.\r\n    Als een <code>defaultTransformation</code> is opgegeven, wordt deze toegepast op alle kolommen die niet in <code>transformOperations</code> worden vermeld.\r\n    Als een kolom in <code>transformOperations</code> niet bestaat, wordt er een uitzondering gegenereerd tenzij de optionele parameter <code>missingField</code> een alternatief opgeeft (bijvoorbeeld <code>MissingField.UseNull</code> of <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Converteer de tekstwaarden in kolom [A] naar getalwaarden en de getalwaarden in kolom [B] naar tekstwaarden.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "Converteer de getalwaarden in ontbrekende kolom [X] naar tekstwaarden en negeer kolommen die niet bestaan.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "Converteer de getalwaarden in ontbrekende kolom [X] naar tekstwaarden. Gebruik standaard null voor kolommen die niet bestaan.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "Verhoog de getalwaarden in kolom [B] en converteer ze naar tekstwaarden, en converteer alle andere kolommen naar getallen.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "Hiermee wordt een tabel gemaakt of uitgebreid met door de gebruiker gedefinieerde handlers voor query- en actiebewerkingen.",
        "Documentation.LongDescription": "<p>Hiermee wordt een weergave van <code>table</code> geretourneerd waarin de functies in <code>handlers</code> worden gebruikt in plaats van het standaardgedrag van een bewerking wanneer de bewerking op de weergave wordt toegepast.</p>\r\n<p>Als <code>table</code> is opgegeven, zijn alle handlerfuncties optioneel. Als <code>table</code> niet is opgegeven, zijn de handlerfuncties <code>GetType</code> en <code>GetRows</code> vereist. Als er geen handlerfunctie voor een bewerking is opgegeven, wordt in plaats daarvan het standaardgedrag van de bewerking op <code>table</code> toegepast (behalve bij <code>GetExpression</code>).</p>\r\n<p>Handlerfuncties moeten een waarde retourneren die semantisch equivalent is aan het resultaat van het toepassen van de bewerking op <code>table</code> (of de resulterende weergave bij <code>GetExpression</code>).</p>\r\n<p>Als er met een handlerfunctie een fout wordt gegenereerd, wordt het standaardgedrag van de bewerking op de weergave toegepast.</p>\r\n<p><code>Table.View</code> kan worden gebruikt om vouwen te implementeren naar een gegevensbron; de vertaling van M-query's naar bronspecifieke query's (bijvoorbeeld om T-SQL-instructies op basis van M-query's te maken).</p>\\\r\n<p>Raadpleeg de gepubliceerde documentatie over de aangepaste connector van Power Query voor een uitgebreide beschrijving van <code>Table.View</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Maak een basisweergave waarvoor geen toegang tot de rijen is vereist om het type of het aantal rijen te bepalen.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Voer een organisatie en projectnamen in.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps (alleen Boards)",
        "Documentation.LongDescription": "Hiermee wordt een tabel met Analytics-weergaven van Azure DevOps geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Gegevens importeren uit Vertica",
        "Documentation.LongDescription": "Hiermee wordt een tabel met chema's geretourneerd die beschikbaar zijn op de server met de naam die wordt bepaald door de parameter <code>server</code> in de database met de naam die wordt bepaald door de parameter <code>database</code>.\r\nEr kan een optionele recordparameter <code>options</code> worden opgegeven om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n<ul>\r\n    <li><code>ConnectionTimeout</code>: Een duur die bepaalt hoe lang er moet worden gewacht voordat er niet meer wordt geprobeerd verbinding te maken met de server. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n    <li><code>CommandTimeout </code>: Een duur die bepaalt hoe lang de query aan de serverzijde mag worden uitgevoerd voordat deze wordt geannuleerd. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "De tabellen in Vertica weergeven"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een tabel met rapportinhoud uit Webtrends geretourneerd.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "Hiermee wordt een aanroep verzonden naar het opgegeven Webtrends-rapporteindpunt en worden alle gegevens geretourneerd als een tabel.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een aanroep voor gegevens van de afgelopen 30 dagen verzonden naar het rapporteindpunt voor Webtrends-bezoekers",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "Een tabel met bezoekersgegevens"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "Haalt een lijst op met Active Directory-domeinen in dezelfde forest als het opgegeven domein of met het domein van de huidige machine als er niets is opgegeven.",
        "Documentation.LongDescription": "Haalt een lijst op met Active Directory-domeinen in dezelfde forest als het opgegeven domein of met het domein van de huidige machine als er niets is opgegeven.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "Retourneert het resultaat van het uitvoeren van een systeemeigen query op een ADO.NET-gegevensbron.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van het uitvoeren van <code>query</code> met de verbindingsreeks <code>connectionString</code> met de ADO.NET-provider <code>providerName</code>. <code>connectionString</code> kan tekst of een record met eigenschapswaardeparen zijn. Eigenschapswaarden kunnen tekst of cijfers zijn. Een optionele recordparameter, <code>options</code>, kan worden geleverd om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang de query op de server mag worden uitgevoerd voordat de query wordt geannuleerd. De standaardwaarde is tien minuten.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Een logische waarde (true/false) waarmee wordt bepaald of SQL Server-compatibele verbindingsreeksopties voor Windows-verificatie moeten worden geproduceerd. De standaardwaarde is true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "Retourneerd de rapportsuites in Adobe Analytics.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met multidimensionale pakketten geretourneerd uit de Adobe Analytics. U kunt een optionele recordparameter <code>options</code> opgeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : Een logische waarde (true/false) waarmee wordt ingesteld of de tabellen gegroepeerd op de schemanamen moeten worden weergegeven (de standaardinstelling is false).</li>\r\n<li><code>MaxRetryCount</code> : Het aantal nieuwe pogingen om uit te voeren wanneer wordt nagevraagd naar de resultaten van de query. De standaardwaarde is 120.</li>\r\n<li><code>RetryInterval</code> : De tijdsduur tussen nieuwe pogingen. De standaardwaarde is 1 seconde.</li>\r\n<li><code>Implementation</code> : Hiermee geeft u de Adobe Analytics API-versie op. Geldige waarden zijn: 2.0. Standaard wordt API-versie 1.4 gebruikt.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Hive LLAP",
        "Documentation.Caption": null,
        "Documentation.Description": "Gegevens importeren uit een Hive LLAP",
        "Documentation.LongDescription": "\r\nHiermee wordt een lijst met tabellen uit Hive LLAP geretourneerd die met het geselecteerde <code>protocol</code>zijn opgegeven door de <code>database</code> op de <code>server</code> met Hive LLAP. Optioneel kan er een poortnummer voor de server worden opgegeven, gescheiden door een dubbele punt. Het Thrift Transport Protocol is een geïnventariseerd type met de waarden Standard, HTTP. De optionele parameter <code>options</code> kan worden opgegeven om de volgende opties te controleren:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: Een tijdsduur die bepaalt hoe lang moet worden gewacht voordat een verbindingspoging met de server wordt afgebroken. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n        <li><code>CommandTimeout</code>: Een tijdsduur die bepaalt hoe lang de query aan de serverzijde mag worden uitgevoerd voordat deze wordt geannuleerd. De standaardwaarde is afhankelijk van het stuurprogramma.</li>\r\n</ul>\r\nDe parameter <code>options</code> wordt opgegeven in de vorm [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, samenvattingen van gegevens ophalen van 1-5-2017 tot en met 15-6-2017",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "De functie geeft als resultaat een samenvatting van de gegevens tussen 1-5-2017 en 15-6-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, samenvattingen van gegevens ophalen voor april 2017.",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "De functie geeft als resultaat de gegevens tussen 1-4-2017 en 30-4-2017"
          },
          {
            "Description": "Ervan uitgaande dat het vandaag 15-6-2017 is, samenvattingen van gegevens ophalen vanaf april 2017 tot nu.",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "De functie geeft als resultaat de gegevens tussen 1-4-2017 en 15-6-2017"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "Voer een organisatie en projectnamen in.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Hiermee wordt een tabel met OData-inhoud van Azure DevOps geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "Verbinding maken met uw Dataverse-instantie (Dynamics 365 en PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "Voegt de opgegeven dimensietabel samen met de filtercontext van de kubus en wijzigt de dimensionale granulatie van de filtercontext door de opgegeven set dimensiekenmerken uit te vouwen.",
        "Documentation.LongDescription": "Voegt de opgegeven dimensietabel <code>dimensionSelector</code> samen met de filtercontext van kubus <code>cube</code> en wijzigt de dimensionale granulatie door de opgegeven set <code>attributeNames</code> dimensiekenmerken uit te vouwen. De dimensiekenmerken worden toegevoegd aan de tabelweergaven met kolommen genaamd <code>newColumnNames</code>, of <code>attributeNames</code> indien niet opgegeven.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "Voegt een kolom toe aan de kubus die de resultaten bevat van de meting die is toegepast in de rijcontext van de rijen.",
        "Documentation.LongDescription": "Voegt een kolom met de naam <code>column</code> toe aan de <code>cube</code> die de resultaten bevat van de meting <code>measureSelector</code> die is toegepast in de rijcontext van de rijen. De toepassing van de meting wordt beïnvloed door wijzigingen in de dimensiegranulatie en segmentering. Metingwaarden worden bijgesteld nadat bepaalde kubusbewerkingen zijn uitgevoerd.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "Voer uw Dynamics 365 Business Central-omgeving en bedrijf in.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Hiermee wordt een tabel met relevante Dynamics 365 Business Central-gegevens geretourneerd. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "Voer uw Dynamics 365 Business Central-omgeving en bedrijf in.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Hiermee wordt een tabel met relevante Dynamics 365 Business Central-gegevens geretourneerd. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "Voer uw Dynamics 365 Business Central-omgeving en bedrijf in.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Hiermee wordt een tabel met relevante Dynamics 365 Business Central-gegevens geretourneerd. "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "Voer uw Dynamics 365 Business Central-omgeving en bedrijf in.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Hiermee wordt een tabel met relevante Dynamics 365 Business Central-gegevens geretourneerd. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "Hiermee wordt de inhoud van de huidige Excel-werkmap geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de inhoud van de huidige Excel-werkmap geretourneerd. Het retourneert tabellen, benoemde bereiken en dynamische matrices. In tegenstelling tot <code>Excel.Workbook-</code>, worden geen bladen geretourneerd.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Retourneert een tabel met inhoud van een Microsoft Exchange-account.",
        "Documentation.LongDescription": "Een tabel met inhoud uit het Microsoft Exchange-account <code>mailboxAddress</code> retourneren. Als <code>mailboxAddress</code> niet is opgegeven, wordt het standaardaccount voor de referentie gebruikt.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Warehouse",
        "Documentation.Caption": "Warehouse",
        "Documentation.Description": "Importeert gegevens uit Warehouse",
        "Documentation.LongDescription": "Importeert gegevens uit Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Retourneert Google Analytics-accounts.",
        "Documentation.LongDescription": "Retourneert Google Analytics-accounts die toegankelijk zijn met de huidige referentie.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Gegevens uit een Google BigQuery-database importeren.",
        "Documentation.LongDescription": "\r\n      Hiermee wordt een tabel geretourneerd met de beschikbare projecten in Google BigQuery. Een optionele recordparameter, <code>options</code>, kan worden opgegeven om de volgende opties te bepalen:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Een duur waarmee wordt bepaald hoe lang wordt gewacht voordat er wordt gestopt om te proberen verbinding te maken met de server. De standaardwaarde is de time-outwaarde voor de ODBC-verbinding.</li>\r\n        <li><code>CommandTimeout</code>: een duur waarmee wordt bepaald hoe lang de query aan de serverzijde kan worden uitgevoerd voordat deze wordt geannuleerd.</li>\r\n        <li><code>BillingProject</code>: De naam van het factureringsproject. De standaardwaarde is het eerste beschikbare project.</li>\r\n        <li><code>UseStorageApi</code>: Hiermee wordt aangegeven op de BigQuery Storage-API moet worden gebruikt voor grote resultatensets. De standaardwaarde is Waar, waarmee de Storage-API wordt gebruikt. Stel de waarde in op Onwaar als u de Storage-API niet wilt gebruiken.</li>\r\n      </ul>\r\n    De recordparameter wordt opgegeven als [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "De beschikbare projecten in Google BigQuery weergeven",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Lakehouse",
        "Documentation.Caption": "Gegevens importeren uit een Lakehouse",
        "Documentation.Description": "Gegevens importeren uit een Lakehouse",
        "Documentation.LongDescription": "Verbinding maken met alle Lakehouses waarvoor u toegang hebt en de entiteiten kiezen die u wilt gebruiken"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een tabel met belangrijke MailChimp-gegevens geretourneerd.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "Hiermee wordt een tabel met belangrijke MailChimp-gegevens geretourneerd.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met belangrijke MailChimp-gegevens geretourneerd.",
            "Code": "MailChimp.Tables()",
            "Result": "Een tabel met belangrijke MailChimp-gegevens."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "Hiermee wordt een tabel met leadactiviteiten geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt het eindpunt van de Marketo REST API op <code>url</code>/rest/v1/activities.json aangeroepen. Alle activiteiten in de lijst <code>activityIds</code> hebben plaatsgevonden sinds <code>startTime</code> is geretourneerd.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met alle activiteiten voor Webpagina bezoeken sinds 1 november 2015 opgehaald",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "Een tabel met details van alle activiteiten voor Webpagina bezoeken sinds 1 november"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"select * from PV_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Power BI-gegevensstromen (verouderd)",
        "Documentation.Caption": "Gegevens importeren uit een Power BI-gegevensstroom",
        "Documentation.LongDescription": "Verbinding maken met alle Power BI-gegevensstromen waarvoor u toegang hebt en de entiteiten kiezen die u wilt gebruiken."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Datamarts",
        "Documentation.Caption": "Datamarts",
        "Documentation.Description": "Importeert gegevens uit Datamarts",
        "Documentation.LongDescription": "Importeert gegevens uit Datamarts"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "Gegevensstromen",
        "Documentation.Caption": "Gegevens uit een gegevensstroom importeren.",
        "Documentation.Description": "Gegevens uit een gegevensstroom importeren.",
        "Documentation.LongDescription": "Verbinding maken met alle gegevensstromen waarvoor u toegang hebt en de entiteiten kiezen die u wilt gebruiken."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "Gegevens uit QuickBooks Online importeren.",
        "Documentation.LongDescription": "\r\n      Hiermee wordt een tabel geretourneerd met de beschikbare tabellen QuickBooks Online. Een optionele recordparameter, <code>options</code>, kan worden opgegeven om de volgende opties te bepalen:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Een duur waarmee wordt bepaald hoe lang wordt gewacht voordat er wordt gestopt te proberen verbinding te maken met de server.</li>\r\n        <li><code>CommandTimeout</code>: Een duur waarmee wordt bepaald hoe lang de query aan de serverzijde kan worden uitgevoerd voordat deze wordt geannuleerd</li>\r\n          </ul>\r\n        De recordparameter wordt opgegeven als [option1 = value1, option2 = value2...].\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "Retourneert de objecten uit het Salesforce-account.",
        "Documentation.LongDescription": "Hiermee worden de objecten in het Salesforce-account dat is opgegeven in de referenties, geretourneerd. De verbinding voor het account wordt gemaakt via de opgegeven omgeving <code>loginUrl</code>. Als er geen omgeving is opgegeven, wordt de verbinding voor het account gemaakt via productie (https://login.salesforce.com). U kunt een optionele recordparameter <code>options</code> gebruiken om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Een logische waarde (true/false) waarmee wordt ingesteld of navigatie-eigenschappen moeten worden gegenereerd op basis van de geretourneerde waarden (de standaardinstelling is false).</li>\r\n<li><code>ApiVersion</code> : De API-versie van Salesforce die wordt gebruikt voor deze query. API-versie 29.0 wordt gebruikt wanneer niets wordt opgegeven.</li>\r\n<li><code>Timeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een aanvraag voor de server wordt afgebroken. De standaardwaarde is afhankelijk van de bron.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "Retourneert de rapporten uit het Salesforce-account.",
        "Documentation.LongDescription": "Hiermee worden de rapporten in het Salesforce-account dat is opgegeven in de referenties, geretourneerd. De verbinding voor het account wordt gemaakt via de opgegeven omgeving <code>loginUrl</code>. Als er geen omgeving is opgegeven, wordt de verbinding voor het account gemaakt via productie (https://login.salesforce.com). U kunt een optionele recordparameter <code>options</code> gebruiken om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>ApiVersion</code> : De API-versie van Salesforce die wordt gebruikt voor deze query. API-versie 29.0 wordt gebruikt wanneer niets wordt opgegeven.</li>\r\n<li><code>Timeout</code> : Een waarde voor de duur waarmee wordt bepaald hoelang wordt gewacht voordat een aanvraag voor de server wordt afgebroken. De standaardwaarde is afhankelijk van de bron.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "Retourneert de InfoCubes en query's in een SAP Business Warehouse-systeem, gegroepeerd op InfoArea.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met InfoCubes en query's geretourneerd, gegroepeerd op InfoArea, uit een SAP Business Warehouse-exemplaar op server <code>server</code> met systeemnummer <code>systemNumberOrSystemId</code> en client-id <code>clientId</code>. U kunt een optionele recordparameter, <code>optionsOrLogonGroup</code>, opgeven om de volgende opties te bepalen:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een tabel met bladen, rapporten, mappen en werkruimten geretourneerd via de Smartsheet-API",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Hiermee wordt een geneste tabel met beschikbare bladen, rapporten, mappen en werkruimten geretourneerd via de Smartsheet-API.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden bladen, mappen, rapporten en werkruimten geretourneerd die beschikbaar zijn op het hoogste niveau van de Smartsheet-hiërarchie",
            "Code": "Smartsheet.Tables()",
            "Result": "Een tabel met mappen, rapporten en werkruimten op het hoogste niveau van de Smartsheet-hiërarchie"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een tabel met beschikbare metrische gegevens geretourneerd via de SparkPost-API v1",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "Deze functie kan worden gebruikt om gegevens op te halen van een specifiek eindpunt Metrische waarden van de SparkPost-API v1. Wanneer u deze tabellen vernieuwt of met deze connector een aanroep naar de SparkPost-API maakt, moet u er rekening mee houden dat de SparkPost-API een strikte API-tarieflimiet heeft. Als de statuscode 429 wordt geretourneerd van de SparkPost-server, hebt u de tarieflimiet bereikt en moet u enkele momenten wachten voordat u meer aanroepen kunt maken. Wanneer u een waarde kiest voor de parameter Aantal dagen, moet u er rekening mee houden dat de API slechts de gegevens van zes maanden opslaat.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee haalt u de metrische leveringswaarden count_sent en count_rejected op voor alle campaign_ids die de afgelopen drie dagen zijn verzameld. ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "tabel"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "De Stripe API aanroepen.",
        "Documentation.LongDescription": "Hiermee wordt de Stripe API op https://api.stripe.com/v1/<code>method</code> aangeroepen, waarbij de record <code>additionalParameters</code> als aanvullende parameters wordt doorgegeven en de lijst <code>ColumnNames</code> met de verwachte kolomnamen wordt geretourneerd. Stripe-versie 2015-10-16 wordt gebruikt.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel geretourneerd met gebeurtenissen die na 1 november 2015 zijn gemaakt",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "Een tabel met de opgegeven gebeurtenissen voor het huidige Stripe-account"
          },
          {
            "Description": "Hiermee wordt een tabel met alle voorraadeenheden geretourneerd",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "Een tabel met alle voorraadeenheden voor het huidige Stripe-account"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "Hiermee wordt een tabel met de beschikbare Stripe-tabellen en -functies weergegeven.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met de beschikbare Stripe-tabellen en -functies weergegeven."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Synapse Analytics-werkruimte",
        "Documentation.Caption": "Azure Synapse Analytics-werkruimte",
        "Documentation.LongDescription": "PQ-connector voor Azure Synapse Analytics-werkruimte",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "Voegt een kolom met de opgegeven naam toe. De waarde wordt berekend met behulp van de opgegeven selectiefunctie, waarbij elke rij als invoer wordt beschouwd.",
        "Documentation.LongDescription": "Voegt een kolom genaamd <code>newColumnName</code> toe aan de tabel <code>table</code>. De waarden voor de kolom worden berekend met behulp van de opgegeven selectiefunctie <code>columnGenerator</code>, waarbij elke rij als invoer wordt beschouwd.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Voeg een numerieke kolom met de naam 'TotalPrice' toe aan de tabel, waarbij elke waarde de som is van de kolommen [Prijs] en [Verzending].",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "Hiermee wordt een nieuwe kolom met representatieve waarden toegevoegd die zijn verkregen door fuzzy groeperingswaarden van de opgegeven kolom in de tabel.",
        "Documentation.LongDescription": "Hiermee wordt een nieuwe kolom <code>newColumnName</code> toegevoegd aan <code>table</code> met representatieve waarden van <code>columnName</code>. De representatieve waarden worden verkregen op basis van fuzzy overeenkomsten voor waarden in <code>columnName</code> voor de afzonderlijke rijen.\r\n    <p>Er kan een optionele set van <code>options</code> worden opgenomen om aan te geven hoe de sleutelkolommen moeten worden vergeleken. Opties zijn onder andere:\r\n    <ul>\r\n<li><code>Culture</code> : Hiermee kunt u records groeperen op basis van cultuurspecifieke regels. Dit kan elke geldige cultuurnaam zijn. Met de cultuuroptie nl-NL worden records bijvoorbeeld gegroepeerd op basis van de Nederlandse cultuur. De standaardwaarde is &quot;&quot;, waarbij wordt gegroepeerd op basis van de niet-variabele Engelse cultuur.</li>\r\n<li><code>IgnoreCase</code> : Een logische waarde (waar/onwaar) voor niet-hoofdlettergevoelige sleutelgroepering. Als de waarde op waar is ingesteld, wordt &#39;Druiven&#39; bijvoorbeeld gegroepeerd met &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>IgnoreSpace</code> : Een logische waarde (waar/onwaar) voor het combineren van tekstonderdelen om naar groepen te zoeken. Als de waarde op waar is ingesteld, wordt &#39;Drui ven&#39; bijvoorbeeld gegroepeerd met &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>SimilarityColumnName</code> : Een naam voor de kolom waarin de overeenkomst wordt weergegeven tussen een invoerwaarde en de representatieve waarde voor die invoer. De standaardwaarde is null. In dat geval wordt er geen nieuwe kolom voor overeenkomsten toegevoegd.</li>\r\n<li><code>Threshold</code> : Een getal tussen 0,00 en 1,00 dat de overeenkomstscore aangeeft waarbij twee waarden worden gegroepeerd.\r\n Bijvoorbeeld, &#39;Druiven&#39; en &#39;Druien&#39; (de &#39;v&#39; ontbreekt) worden alleen gegroepeerd als deze optie is ingesteld op minder dan 0,90.\r\n Een drempel van 1,00 staat alleen exacte overeenkomsten toe.\r\n (Merk op dat een vage &#39;exacte overeenkomst&#39; verschillen zoals hoofdletters, woordvolgorde en interpunctie kan negeren.)\r\n De standaardwaarde is 0,80.</li>\r\n<li><code>TransformationTable</code> : Een tabel waarmee u records kunt groeperen op basis van aangepaste waardetoewijzingen. De tabel moet een kolom Van en een kolom Naar bevatten. Zo wordt &#39;Druiven&#39; gegroepeerd met &#39;Rozijnen&#39; als er een transformatietabel wordt opgegeven met in de kolom Van de waarde &#39;Druiven&#39; en de in kolom Naar de waarde &#39;Rozijnen&#39;. De transformatie wordt toegepast op alle instanties van de tekst in de transformatietabel. Met de bovenstaande transformatietabel wordt &#39;Druiven zijn zoet&#39; dus ook gegroepeerd met &#39;Rozijnen zijn zoet&#39;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Zoek de representatieve waarden voor de locatie van de werknemers.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "Voert een koppeling tussen tabellen uit op opgegeven kolommen en plaatst het resultaat van die koppeling in een nieuwe kolom.",
        "Documentation.LongDescription": "Koppelt de rijen van <code>table1</code> aan de rijen van <code>table2</code> op basis van de gelijkheid van de waarden van de sleutelkolommen die zijn geselecteerd door <code>key1</code> (voor <code>table1</code>) en <code>key2</code> (voor <code>table2</code>). De resultaten komen in de kolom <code>newColumnName</code> te staan.\r\nDeze functie werkt zoals Table.Join met een JoinKind van LeftOuter, echter met dit verschil dat de resultaten van de koppeling genest en niet plat worden weergegeven.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Een koppelingskolom toevoegen aan  ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) genaamd \"prijs/voorraad\" vanuit de tabel ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) gekoppeld op [saleID].",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "Hiermee voegt u een sleutel toe aan een tabel.",
        "Documentation.LongDescription": "Hiermee voegt u een sleutel toe <code>table</code>, waarbij <code>columns</code> de lijst is met kolomnamen waarmee de sleutel wordt gedefinieerd en <code>isPrimary</code> geeft aan of de sleutel primair is.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Een primaire sleutel met één kolom toevoegen aan een tabel.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "Hiermee voegt u een kolom toe met de rangschikking van een of meer andere kolommen.",
        "Documentation.LongDescription": "Hiermee voegt u een kolom met de naam <code>newColumnName</code> toe aan de <code>table</code> met de rangschikking van een of meer andere kolommen die worden beschreven door <code>comparisonCriteria</code>.\r\nDe optie RankKind in <code>options</code> kan gebruikt worden door geavanceerde gebruikers om een specifiekere classificatiemethode te kiezen.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Een kolom met de naam 'OmzetRang' toevoegen aan de tabel die de kolom 'Omzet' van hoog naar laag rangschikt.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "Maakt een aggregatie van een kolom met tabellen in meerdere kolommen in de tabel die optreedt als container.",
        "Documentation.LongDescription": "Maakt een aggregatie van tabellen in <code>table</code>[<code>column</code>] in meerdere kolommen waarin aggregatiewaarden voor de tabellen staan. <code>aggregations</code> wordt gebruikt voor het opgeven van de kolommen die de te aggregeren tabellen bevatten, de aggregatiefuncties die moeten worden toegepast op de tabellen om de waarden voor die tabellen te generen, en de namen van de aggregatietabellen die moeten worden gemaakt.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "De tabelkolommen aggregeren in <code>[t]</code> in de tabel <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> in de som van <code>[t.a]</code>, het minimum en maximum van <code>[t.b]</code> en het aantal waarden in <code>[t.a]</code>.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "Houdt de aanvankelijke verschuiving aan en wisselt vervolgens tussen het accepteren en overslaan van de volgende rijen:",
        "Documentation.LongDescription": "Houdt de aanvankelijke verschuiving aan en wisselt vervolgens tussen het accepteren en overslaan van de volgende rijen:\r\n    <ul>\r\n       <li><code>table</code>: de invoertabel.</li>\r\n       <li><code>offset</code>: het aantal rijen dat moet worden aangehouden voordat er met de herhalingen wordt begonnen.</li>\r\n       <li><code>skip</code>: het aantal rijen dat bij elke herhaling moet worden verwijderd.</li>\r\n       <li><code>take</code>: het aantal rijen dat bij elke herhaling moet worden bewaard.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Een tabel van de tabel retourneren die vanaf de eerste rij één waarde overslaat en vervolgens één waarde aanhoudt.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "Voegt met behulp van de opgegeven combinatiefunctie de opgegeven kolommen samen tot een nieuwe kolom.",
        "Documentation.LongDescription": "Voegt met behulp van de opgegeven combinatiefunctie de opgegeven kolommen samen tot een nieuwe kolom.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Combineer de voor- en achternamen in een nieuwe kolom, gescheiden door een komma.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "Hiermee worden de opgegeven kolommen gecombineerd tot een nieuwe kolom met recordwaarden waarbij elke record veldnamen en waarden bevat die overeenkomen met de kolomnamen en -waarden van de oorspronkelijke kolommen.",
        "Documentation.LongDescription": "Hiermee worden de opgegeven kolommen van <code>table</code> gecombineerd in een nieuwe kolom met recordwaarden met de naam <code>newColumnName</code>, waarbij elke record over veldnamen en waarden beschikt die overeenkomen met de kolomnamen en waarden van de kolommen die zijn gecombineerd. Als er een record wordt opgegeven voor <code>options</code>, kunnen de volgende opties worden opgegeven:\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: wanneer deze waarde als tekst wordt opgegeven, geeft u hiermee aan dat de opgegeven kolomnaam moet worden gebruikt als de weergavenaam van de record. Dit hoeft niet een van de kolommen in de record zelf te zijn.</li>\r\n     <li> <code>TypeName</code>: wanneer deze waarde als tekst wordt opgegeven, wordt een logische typenaam opgegeven voor de resulterende record. Deze naam kan worden gebruikt wanneer u gegevens laadt om het gedrag in de laadomgeving te sturen.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "Dupliceert een kolom met de opgegeven naam. De waarden en het type worden uit de bronkolom gekopieerd.",
        "Documentation.LongDescription": "De kolom genaamd <code>columnName</code> naar de tabel <code>table</code> dupliceren. De waarden en het type worden uit kolom <code>newColumnName</code> naar kolom <code>columnName</code> gekopieerd.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De kolom \"a\" dupliceren naar een kolom met de naam \"gekopieerde kolom\" in de tabel <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "Breidt een kolom met records met elk van de waarden uit naar kolommen.",
        "Documentation.LongDescription": "Maakt aan de hand van de <code>column</code> met records in de invoer <code>table</code> een tabel met een kolom voor elk veld in de record. Optioneel kan <code>newColumnNames</code> worden opgegeven om ervoor te zorgen dat de namen voor de kolommen in de nieuwe tabel unieke namen zijn.\r\n    <ul>\r\n        <li><code>table</code>: De oorspronkelijke tabel met de recordkolom die moet worden uitgebreid. </li>\r\n        <li><code>column</code>: De kolom die moet worden uitgebreid.</li>\r\n        <li><code>fieldNames</code>: De lijst met velden die moet worden uitgebreid in kolommen in de tabel.</li>\r\n        <li><code>newColumnNames</code>: De lijst met kolomnamen voor de nieuwe kolommen. De nieuwe kolomnamen mogen niet voor andere kolommen in de nieuwe tabel worden gebruikt.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kolom [a] in de tabel <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> uitbreiden naar drie kolommen \"aa\", \"bb\" en \"cc\".",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "Breidt een kolom met records of een kolom met tabellen uit naar meerdere kolommen in de tabel die als een container fungeert.",
        "Documentation.LongDescription": "Breidt tabellen in <code>table</code>[<code>column</code>] naar meerdere rijen en kolommen uit. <code>columnNames</code> wordt gebruikt voor het selecteren van de kolommen die vanuit de interne tabel worden uitgebreid. Geef <code>newColumnNames</code> op om conflicten tussen bestaande en nieuwe kolommen te voorkomen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Tabelkolommen in <code>[a]</code> in de tabel <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> uitbreiden naar drie kolommen <code>[t.a]</code>, <code>[t.b]</code> en <code>[t.c]</code>.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "Hiermee groepeert u rijen in de tabel op basis van gedeeltelijke overeenkomsten van sleutels.",
        "Documentation.LongDescription": "Hiermee worden de rijen van <code>table</code> gegroepeerd op basis van fuzzy overeenkomsten met waarden in de opgegeven kolom <code>key</code> voor de afzonderlijke rijen.\r\n    Voor elke groep wordt een record samengesteld met de sleutelkolommen (en bijbehorende waarden), in combinatie met alle geaggregeerde kolommen die zijn opgegeven door <code>aggregatedColumns</code>.\r\n    Met deze functie wordt niet gegarandeerd dat rijen in een vaste volgorde worden geretourneerd.\r\n    <p>Er kan een optionele set van <code>options</code> worden opgenomen om aan te geven hoe de sleutelkolommen moeten worden vergeleken. Opties zijn onder andere:\r\n    <ul>\r\n<li><code>Culture</code> : Hiermee kunt u records groeperen op basis van cultuurspecifieke regels. Dit kan elke geldige cultuurnaam zijn. Met de cultuuroptie nl-NL worden records bijvoorbeeld gegroepeerd op basis van de Nederlandse cultuur. De standaardwaarde is &quot;&quot;, waarbij wordt gegroepeerd op basis van de niet-variabele Engelse cultuur.</li>\r\n<li><code>IgnoreCase</code> : Een logische waarde (waar/onwaar) voor niet-hoofdlettergevoelige sleutelgroepering. Als de waarde op waar is ingesteld, wordt &#39;Druiven&#39; bijvoorbeeld gegroepeerd met &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>IgnoreSpace</code> : Een logische waarde (waar/onwaar) voor het combineren van tekstonderdelen om naar groepen te zoeken. Als de waarde op waar is ingesteld, wordt &#39;Drui ven&#39; bijvoorbeeld gegroepeerd met &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>SimilarityColumnName</code> : Een naam voor de kolom waarin de overeenkomst wordt weergegeven tussen een invoerwaarde en de representatieve waarde voor die invoer. De standaardwaarde is null. In dat geval wordt er geen nieuwe kolom voor overeenkomsten toegevoegd.</li>\r\n<li><code>Threshold</code> : Een getal tussen 0,00 en 1,00 dat de overeenkomstscore aangeeft waarbij twee waarden worden gegroepeerd.\r\n Bijvoorbeeld, &#39;Druiven&#39; en &#39;Druien&#39; (de &#39;v&#39; ontbreekt) worden alleen gegroepeerd als deze optie is ingesteld op minder dan 0,90.\r\n Een drempel van 1,00 staat alleen exacte overeenkomsten toe.\r\n (Merk op dat een vage &#39;exacte overeenkomst&#39; verschillen zoals hoofdletters, woordvolgorde en interpunctie kan negeren.)\r\n De standaardwaarde is 0,80.</li>\r\n<li><code>TransformationTable</code> : Een tabel waarmee u records kunt groeperen op basis van aangepaste waardetoewijzingen. De tabel moet een kolom Van en een kolom Naar bevatten. Zo wordt &#39;Druiven&#39; gegroepeerd met &#39;Rozijnen&#39; als er een transformatietabel wordt opgegeven met in de kolom Van de waarde &#39;Druiven&#39; en de in kolom Naar de waarde &#39;Rozijnen&#39;. De transformatie wordt toegepast op alle instanties van de tekst in de transformatietabel. Met de bovenstaande transformatietabel wordt &#39;Druiven zijn zoet&#39; dus ook gegroepeerd met &#39;Rozijnen zijn zoet&#39;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Groepeer de tabel door een samengevoegde kolom [Count] toe te voegen. Deze kolom bevat het aantal medewerkers in elke locatie (\"each Table.RowCount(_))\").",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "Hiermee worden de rijen uit de twee tabellen gekoppeld op basis van fuzzy overeenkomsten voor de opgegeven sleutels.",
        "Documentation.LongDescription": "<p>Hiermee worden de rijen van <code>table1</code> gekoppeld aan de rijen van <code>table2</code> op basis van fuzzy overeenkomsten voor de waarden van de sleutelkolommen die zijn geselecteerd door <code>key1</code> (voor <code>table1</code>) en <code>key2</code> (voor <code>table2</code>).</p>\r\n<p>Bij fuzzy overeenkomsten wordt er vergeleken op basis van overeenkomstigheid van tekst in plaats van gelijkheid van tekst.</p>\r\n<p>Standaard wordt er een inner join uitgevoerd, maar een optionele <code>joinKind</code> kan worden opgenomen om het type join op te geven. De opties zijn onder andere:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Een optionele set van <code>joinOptions</code> kan worden opgenomen om op te geven hoe de sleutelkolommen moeten worden vergeleken. Opties zijn onder andere:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Een getal tussen 1 en 8 waarmee het aantal parallelle threads wordt opgegeven dat moet worden gebruikt voor fuzzy overeenkomsten. De standaardwaarde is 1.</li>\r\n<li><code>Culture</code> : Hiermee kunt u overeenkomende records zoeken op basis van cultuurspecifieke regels. Dit kan elke geldige cultuurnaam zijn. Met de cultuuroptie nl-NL worden overeenkomende records bijvoorbeeld gezocht op basis van de Nederlandse cultuur. De standaardwaarde is &quot;&quot;, waarbij wordt gezocht naar overeenkomsten op basis van de niet-variabele Engelse cultuur.</li>\r\n<li><code>IgnoreCase</code> : Een logische waarde (waar/onwaar) voor niet-hoofdlettergevoelige sleutelovereenkomsten. Als de waarde op waar is ingesteld, is &#39;Druiven&#39; bijvoorbeeld een overeenkomst met &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>IgnoreSpace</code> : Een logische waarde (waar/onwaar) voor het combineren van tekstonderdelen om naar overeenkomsten te zoeken. Als de waarde op waar is ingesteld, is &#39;Drui ven&#39; bijvoorbeeld een overeenkomst voor &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>NumberOfMatches</code> : Een geheel getal waarmee het maximumaantal overeenkomende rijen dat kan worden geretourneerd, wordt opgegeven voor iedere invoerrij. Met de waarde 1 wordt bijvoorbeeld maximaal &#233;&#233;n overeenkomende rij geretourneerd voor elke rij met invoer. Als deze optie niet is opgegeven, worden alle overeenkomende rijen geretourneerd.</li>\r\n<li><code>SimilarityColumnName</code> : Een naam voor de kolom waarin de overeenkomst wordt weergegeven tussen een invoerwaarde en de representatieve waarde voor die invoer. De standaardwaarde is null. In dat geval wordt er geen nieuwe kolom voor overeenkomsten toegevoegd.</li>\r\n<li><code>Threshold</code> : Een getal tussen 0,00 en 1,00 dat de overeenkomstscore aangeeft waarbij twee waarden worden vergeleken.\r\n Bijvoorbeeld, &#39;Druiven&#39; en &#39;Druien&#39; (de &#39;v&#39; ontbreekt) komen alleen overeen als deze optie is ingesteld op minder dan 0,90.\r\n Een drempel van 1,00 staat alleen exacte overeenkomsten toe.\r\n (Merk op dat een vage &#39;exacte overeenkomst&#39; verschillen zoals hoofdletters, woordvolgorde en interpunctie kan negeren.)\r\n De standaardwaarde is 0,80.</li>\r\n<li><code>TransformationTable</code> : Een tabel waarmee u overeenkomende records kunt zoeken op basis van aangepaste waardetoewijzingen. De tabel moet een kolom Van en een kolom Naar bevatten. Zo wordt &#39;Druiven&#39; gevonden als overeenkomst voor &#39;Rozijnen&#39; als er een transformatietabel wordt opgegeven met in de kolom Van de waarde &#39;Druiven&#39; en de in kolom Naar de waarde &#39;Rozijnen&#39;. De transformatie wordt toegepast op alle instanties van de tekst in de transformatietabel. Met de bovenstaande transformatietabel is &#39;Druiven zijn zoet&#39; dus ook een overeenkomst voor &#39;Rozijnen zijn zoet&#39;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Left inner fuzzy join voor twee tabellen op basis van [FirstName]",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "Hiermee wordt een fuzzy join uitgevoerd tussen tabellen voor de opgegeven kolommen en wordt het resultaat van de join in een nieuwe kolom weergegeven.",
        "Documentation.LongDescription": "<p>Hiermee worden de rijen van <code>table1</code> gekoppeld met de rijen van <code>table2</code> op basis van fuzzy overeenkomsten voor de waarden van de sleutelkolommen die zijn geselecteerd door <code>key1</code> (voor <code>table1</code>) en <code>key2</code> (voor <code>table2</code>). De resultaten worden geretourneerd in een nieuwe kolom met de naam <code>newColumnName</code>.</p>\r\n<p>Bij fuzzy overeenkomsten wordt gezocht naar een vergelijking op basis van vergelijkbaarheid van tekst in plaats van gelijkheid van tekst.</p>\r\n<p>Met het optionele item <code>joinKind</code> wordt het soort join opgegeven dat moet worden uitgevoerd. Standaard wordt een left outer join uitgevoerd als er geen waarde voor <code>joinKind</code> is opgegeven. Opties zijn onder andere:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Een optionele set van <code>joinOptions</code> kan worden opgenomen om aan te geven hoe de sleutelkolommen moeten worden vergeleken. Opties zijn onder andere:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Een getal tussen 1 en 8 waarmee het aantal parallelle threads wordt opgegeven dat moet worden gebruikt voor fuzzy overeenkomsten. De standaardwaarde is 1.</li>\r\n<li><code>Culture</code> : Hiermee kunt u overeenkomende records zoeken op basis van cultuurspecifieke regels. Dit kan elke geldige cultuurnaam zijn. Met de cultuuroptie nl-NL worden overeenkomende records bijvoorbeeld gezocht op basis van de Nederlandse cultuur. De standaardwaarde is &quot;&quot;, waarbij wordt gezocht naar overeenkomsten op basis van de niet-variabele Engelse cultuur.</li>\r\n<li><code>IgnoreCase</code> : Een logische waarde (waar/onwaar) voor niet-hoofdlettergevoelige sleutelovereenkomsten. Als de waarde op waar is ingesteld, is &#39;Druiven&#39; bijvoorbeeld een overeenkomst met &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>IgnoreSpace</code> : Een logische waarde (waar/onwaar) voor het combineren van tekstonderdelen om naar overeenkomsten te zoeken. Als de waarde op waar is ingesteld, is &#39;Drui ven&#39; bijvoorbeeld een overeenkomst voor &#39;druiven&#39;. De standaardwaarde is waar.</li>\r\n<li><code>NumberOfMatches</code> : Een geheel getal waarmee het maximumaantal overeenkomende rijen dat kan worden geretourneerd, wordt opgegeven voor iedere invoerrij. Met de waarde 1 wordt bijvoorbeeld maximaal &#233;&#233;n overeenkomende rij geretourneerd voor elke rij met invoer. Als deze optie niet is opgegeven, worden alle overeenkomende rijen geretourneerd.</li>\r\n<li><code>SimilarityColumnName</code> : Een naam voor de kolom waarin de overeenkomst wordt weergegeven tussen een invoerwaarde en de representatieve waarde voor die invoer. De standaardwaarde is null. In dat geval wordt er geen nieuwe kolom voor overeenkomsten toegevoegd.</li>\r\n<li><code>Threshold</code> : Een getal tussen 0,00 en 1,00 dat de overeenkomstscore aangeeft waarbij twee waarden worden vergeleken.\r\n Bijvoorbeeld, &#39;Druiven&#39; en &#39;Druien&#39; (de &#39;v&#39; ontbreekt) komen alleen overeen als deze optie is ingesteld op minder dan 0,90.\r\n Een drempel van 1,00 staat alleen exacte overeenkomsten toe.\r\n (Merk op dat een vage &#39;exacte overeenkomst&#39; verschillen zoals hoofdletters, woordvolgorde en interpunctie kan negeren.)\r\n De standaardwaarde is 0,80.</li>\r\n<li><code>TransformationTable</code> : Een tabel waarmee u overeenkomende records kunt zoeken op basis van aangepaste waardetoewijzingen. De tabel moet een kolom Van en een kolom Naar bevatten. Zo wordt &#39;Druiven&#39; gevonden als overeenkomst voor &#39;Rozijnen&#39; als er een transformatietabel wordt opgegeven met in de kolom Van de waarde &#39;Druiven&#39; en de in kolom Naar de waarde &#39;Rozijnen&#39;. De transformatie wordt toegepast op alle instanties van de tekst in de transformatietabel. Met de bovenstaande transformatietabel is &#39;Druiven zijn zoet&#39; dus ook een overeenkomst voor &#39;Rozijnen zijn zoet&#39;.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Left inner fuzzy join voor twee tabellen op basis van [FirstName]",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "Groepeert rijen in de tabel die dezelfde sleutel hebben.",
        "Documentation.LongDescription": "Hiermee worden de rijen gegroepeerd met <code>table</code> op basis van de sleutelkolommen die zijn gedefinieerd door <code>key</code>. De <code>key</code> kan één kolomnaam of een lijst met kolomnamen zijn.\r\n    Voor elke groep wordt een record gemaakt met de sleutelkolommen (en de bijbehorende waarden), samen met eventuele geaggregeerde kolommen die zijn gespecificeerd door <code>aggregatedColumns</code>.\r\n    Optioneel kunnen ook <code>groupKind</code> en <code>comparer</code> worden gespecificeerd. <br>\r\n    <br>\r\n    Als de gegevens al zijn gesorteerd op de sleutelkolommen, kan een <code>groupKind</code> van GroupKind.Local worden opgegeven. Dit kan de prestaties van het groeperen in bepaalde gevallen verbeteren,\r\n    aangezien alle rijen met een bepaalde set sleutelwaarden aaneengesloten worden geacht. <br>\r\n    <br>\r\n    Wanneer u een <code>comparer</code> doorgeeft, moet u er rekening mee houden dat als het verschillende sleutels als gelijk behandelt, en een rij wellicht wordt geplaatst in een groep waarvan de sleutels verschillen van hun eigen sleutels. <br>\r\n    <br>\r\n    Deze functie garandeert niet de volgorde van de geretourneerde rijen.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "De tabel groeperen door toevoeging van een aggregatiekolom [total] waarin het totaal van de prijzen (each List.Sum([price])) staat.",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "Voegt een lijst met rijen op de opgegeven positie in de tabel in.",
        "Documentation.LongDescription": "Retourneert een tabel met de lijst rijen, <code>rows</code>, die wordt ingevoegd in de <code>table</code> op de opgegeven positie, <code>offset</code>. Elke kolom die in de rij wordt ingevoegd, moet overeenkomen met de kolomtypen van de tabel.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De rij op positie 1 in de tabel invoegen.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Voegt twee rijen op positie 1 in de tabel in.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "Koppelt de rijen uit de twee tabellen die overeenkomen op basis van de opgegeven sleutels.",
        "Documentation.LongDescription": "<p>Hiermee worden de rijen van <code>table1</code> gekoppeld aan de rijen van <code>table2</code> op basis van de gelijkheid van de waarden van de sleutelkolommen die zijn geselecteerd met <code>key1</code> (voor <code>table1</code>) en <code>key2</code> (voor <code>table2</code>).</p>\r\n<p>Standaard wordt er een binnen-join uitgevoerd, maar een optionele <code>joinKind</code> kan worden opgenomen om het type join op te geven. De opties zijn onder andere:\r\n <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Een optionele set van <code>keyEqualityComparers</code> kan worden opgenomen om op te geven hoe de sleutelkolommen moeten worden vergeleken. Deze functie is momenteel uitsluitend bedoeld voor intern gebruik.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Twee tabellen samenvoegen met één sleutelkolom.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "Koppel twee tabellen met conflicterende kolomnamen met behulp van meerdere sleutelkolommen.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "Retourneert met behulp van de opgegeven criteria de grootste rij of rijen.",
        "Documentation.LongDescription": "Hiermee wordt/worden de grootste rij(en) in de <code>table</code> geretourneerd, waarbij de <code>comparisonCriteria</code> is opgegeven.\r\n Nadat de rijen zijn gesorteerd, moet de parameter <code>countOrCondition</code> worden opgegeven om de resultaten verder te filteren. Let op: het sorteeralgoritme biedt geen garantie voor vaste gesorteerde resultaten. De parameter <code>countOrCondition</code> kent meerdere weergaven:\r\n <ul>\r\n <li> Als een getal is opgegeven, wordt een lijst met maximaal <code>countOrCondition</code> items in oplopende volgorde geretourneerd. </li>\r\n <li> Als een voorwaarde is opgegeven, wordt een lijst met items geretourneerd die in eerste instantie aan de voorwaarde voldoen. Zodra een item niet aan de voorwaarde voldoet, worden geen verdere items meer behandeld. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De rij met de grootste waarde in kolom [a] met de voorwaarde [a] > 0 in de tabel zoeken. De rijen worden gesorteerd voordat het filter wordt toegepast.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "De rij met de grootste waarde in kolom [a] met de voorwaarde [b] > 0 in de tabel. De rijen worden gesorteerd voordat het filter wordt toegepast.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "Retourneert met behulp van de opgegeven criteria de kleinste rij of rijen.",
        "Documentation.LongDescription": "Retourneert aan de hand van de <code>comparisonCriteria</code> de kleinste rij of rijen in de <code>table</code>. Als de rijen zijn gesorteerd, moet de parameter <code>countOrCondition</code> worden opgegeven om het resultaat verder te filteren. Het sorteeralgoritme kan geen vast gesorteerd resultaat garanderen. De parameter <code>countOrCondition</code> kan diverse vormen aannemen:\r\n    <ul>\r\n        <li> Als er een getal wordt opgegeven, wordt er een lijst met maximaal <code>countOrCondition</code> items in oplopende volgorde geretourneerd. </li>\r\n        <li> Als er een voorwaarde wordt opgegeven, wordt er een lijst met items geretourneerd die in eerste instantie aan die voorwaarde voldoen. Wanneer een item niet aan die voorwaarde voldoet, stopt de bewerking. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De rij met de kleinste waarde in kolom [a] met de voorwaarde [a] > 3 in de tabel zoeken. De rijen worden gesorteerd voordat het filter wordt toegepast.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "De rij met de kleinste waarde in kolom [a] met de voorwaarde [b] > 0 in de tabel zoeken. De rijen worden gesorteerd voordat het filter wordt toegepast.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "Voert een koppeling tussen tabellen uit op opgegeven kolommen en plaatst het resultaat van die koppeling in een nieuwe kolom.",
        "Documentation.LongDescription": "<p>Hiermee worden de rijen van <code>table1</code> gekoppeld aan de rijen van <code>table2</code> op basis van de gelijkheid van de waarden van de sleutelkolommen die zijn geselecteerd met <code>key1</code> (voor <code>table1</code>) en <code>key2</code> (voor <code>table2</code>). De resultaten komen in de kolom <code>newColumnName</code> te staan.</p>\r\n<p>Met de optionele waarde <code>joinKind</code> wordt het type join opgegeven dat moet worden uitgevoerd. Er wordt standaard een outer join aan de linkerkant uitgevoerd als <code>joinKind</code> niet is opgegeven.</p>\r\n<p>Een optionele set van <code>keyEqualityComparers</code> kan worden opgenomen om te specificeren hoe de sleutelkolommen moeten worden vergeleken. Deze functie is momenteel uitsluitend bedoeld voor intern gebruik.</p>  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Twee tabellen samenvoegen met één sleutelkolom.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "Roteert aan de hand van kolommen die paren kenmerk-waarde vertegenwoordigen, de gegevens in de kenmerkkolom naar een kolomkop.",
        "Documentation.LongDescription": "Roteert aan de hand van kolommen die paren kenmerk-waarde vertegenwoordigen, de gegevens in de kenmerkkolom naar een kolomkop.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De waarden \"a\", \"b\" en \"c\" in de kenmerkkolom van de tabel <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> nemen en die draaien in hun eigen kolom.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "De waarden \"a\", \"b\" en \"c\" in de kenmerkkolom van de tabel <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> nemen en die draaien in hun eigen kolom.  Bij het kenmerk \"c\" voor sleutel \"x\" horen meerdere waarden, dus gebruik de functie List.Max om het conflict op te lossen.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "Vervangt het opgegeven bereik rijen door de aangeleverde rij of rijen.",
        "Documentation.LongDescription": "Vervangt het opgegeven aantal rijen, <code>count</code>, in de invoer <code>table</code> door de opgegeven <code>rows</code>, te beginnen na de <code>offset</code>. De parameter <code>rows</code> is een lijst met records.\r\n    <ul>\r\n       <li><code>table</code>: de tabel waar de vervanging wordt uitgevoerd.</li>\r\n       <li><code>offset</code>: het aantal rijen dat moet worden overgeslagen voordat er wordt vervangen.</li>\r\n       <li><code>count</code>: het aantal rijen dat u wilt vervangen.</li>\r\n       <li><code>rows</code>: de lijst met rijrecords die moet worden ingevoegd in de <code>table</code> op de locatie die wordt opgegeven door de <code>offset</code>.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Vanaf positie 1 drie rijen vervangen.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "Vervangt de ene waarde door een andere waarde in de opgegeven kolommen.",
        "Documentation.LongDescription": "Vervangt <code>oldValue</code> door <code>newValue</code> in de opgegeven kolommen van de <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Vervang de tekst 'tot ziens' door 'wereld' in kolom B, waarbij alleen de hele waarde overeenkomt.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "Vervang de tekst 'uw' door 'of' in kolom B, waarbij een gedeelte van de waarde overeenkomt.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "De namen van Amerikaanse werknemers anoniem maken.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "Alle kolommen van Amerikaanse werknemers anoniem maken.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "Splitst met behulp van de opgegeven splitsfunctie de opgegeven kolommen op in een set aanvullende kolommen.",
        "Documentation.LongDescription": "Splitst met behulp van de opgegeven splitsfunctie de opgegeven kolommen op in een set aanvullende kolommen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Splits de kolom [Name] bij positie 'i' in twee kolommen.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "Zet een set kolommen in een tabel om in paren kenmerk-waarde.",
        "Documentation.LongDescription": "Zet een set kolommen in een tabel om in paren kenmerk-waarde, gecombineerd met de rest van de waarden in elke rij.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De kolommen \"a\", \"b\" en \"c\" in de tabel <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> nemen en het draaien ervan naar paren kenmerk-waarde ongedaan maken.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "Zet alle kolommen behalve een opgegeven set om in paren met kenmerken en waarden.",
        "Documentation.LongDescription": "Zet alle kolommen behalve een opgegeven set om in paren met kenmerken en waarden, gecombineerd met de rest van de waarden in elke rij.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Zet alle kolommen behalve een opgegeven set om in paren met kenmerken en waarden, gecombineerd met de rest van de waarden in elke rij.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Persoonlijke analyse van Microsoft Teams",
        "Documentation.LongDescription": "<p>Met de Teams Analytics-connector kunt u inzicht krijgen in uw gebruik van Teams. Gegevens zijn beschikbaar voor zowel uw persoonlijke activiteiten in Teams als de activiteit in Teams waarvan u lid bent. </p>\r\n<p>Gegevens zijn beschikbaar van de voorgaande 90 dagen. </p>\r\n<p>Raadpleeg voor meer informatie over de beschikbare gegevenstypen de volgende Help-documentatie: </p>\r\n<ul>\r\n<li><b>Teams-gebruik</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Teams-gebruikersactiviteit:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "Voer een organisatie en projectnamen in.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Hiermee wordt een tabel met OData-inhoud van Azure DevOps geretourneerd."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "Retourneert een binaire indeling die een binaire waarde leest.",
        "Documentation.LongDescription": "Retourneert een binaire indeling die een binaire waarde leest.  Als <code>length</code> is opgegeven, bevat de binaire waarde dat aantal bytes.  Als <code>length</code> niet is opgegeven, bevat de binaire waarde de resterende bytes.  <code>length</code> kan worden opgegeven als een getal, of als een binaire indeling van de lengte die voorafgaat aan de binaire gegevens.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "Retourneert een logische waarde op basis van de gelijkheidscontrole tussen de twee gegeven waarden.",
        "Documentation.LongDescription": "Hiermee wordt een <code>logische</code> waarde geretourneerd op basis van de gelijkheidscontrole over de twee opgegeven waarden, <code>x</code> en <code>y</code>, met behulp van de opgegeven <code>comparer</code>.\r\n      <div>\r\n        <code>comparer</code> is een <code>vergelijker</code> die wordt gebruikt voor het aansturen van de vergelijking.\r\n        Een vergelijker is een functie die twee argumenten accepteert en -1, 0, of 1 retourneert op basis van of de eerste waarde kleiner dan, gelijk aan of groter is dan de tweede.\r\n        Vergelijkers kunnen gebruikt worden om hoofdletterongevoelige of cultuur- en lokalisatiebewuste vergelijkingen te maken.\r\n      </div>\r\n      <div>\r\n        De volgende ingebouwde vergelijkers zijn beschikbaar in de formuletaal:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: wordt gebruikt om een exacte, rangtelwoordelijke vergelijking uit te voeren</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: wordt gebruikt om een exacte, rangtelwoordelijke en hoofdletterongevoelige vergelijking uit te voeren</li>\r\n        <li> <code>Comparer.FromCulture</code>: wordt gebruikt om een cultuurbewuste vergelijking uit te voeren</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Vergelijk 1 en A aan de hand van de landinstelling en-US om te bepalen of de waarden gelijk zijn.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "Retourneert de huidige datum en tijd in de lokale tijdzone. Deze waarde is vast en verandert niet met opeenvolgende aanroepen.",
        "Documentation.LongDescription": "Retourneert een <code>datetime</code>waarde die is ingesteld op de huidige datum en tijd op het systeem. Deze waarde is vast en verandert niet met opeenvolgende aanroepen. Dit in tegenstelling tot DateTime.LocalNow waarmee verschillende waarden kunnen worden geretourneerd gedurende de uitvoering van een expressie.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "Retourneert de huidige datum en tijd in de lokale tijdzone.",
        "Documentation.LongDescription": "Retourneert een <code>datetime</code>waarde die is ingesteld op de huidige datum en tijd op het systeem.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "Retourneert de huidige datum en tijd in de lokale tijdzone. Deze waarde is vast en verandert niet met opeenvolgende aanroepen.",
        "Documentation.LongDescription": "Retourneert een <code>datetime</code>waarde die is ingesteld op de huidige datum en tijd op het systeem. De geretourneerde waarde bevat informatie over de tijdzone die de lokale tijdzone vertegenwoordigt. Deze waarde is vast en verandert niet met opeenvolgende aanroepen. Dit in tegenstelling tot DateTimeZone.LocalNow waarmee verschillende waarden kunnen worden geretourneerd gedurende de uitvoering van een expressie.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "Retourneert de huidige datum en tijd in UTC (de GMT-tijdzone). Deze waarde is vast en verandert niet met opeenvolgende aanroepen.",
        "Documentation.LongDescription": "Retourneert de huidige datum en tijd in UTC (de GMT-tijdzone). Deze waarde is vast en verandert niet met opeenvolgende aanroepen.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "Retourneert de huidige datum en tijd in de lokale tijdzone.",
        "Documentation.LongDescription": "Hiermee wordt een <code>datetimezone</code>-waarde geretourneerd die is ingesteld op de huidige datum en tijd van het systeem.\r\n De geretourneerde waarde bevat informatie over de tijdzone die de lokale tijdzone aangeeft.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "Retourneert de huidige datum en tijd in UTC (de GMT-tijdzone).",
        "Documentation.LongDescription": "Retourneert de huidige datum en tijd in UTC (de GMT-tijdzone).",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "De huidige datum en tijd in UTC ophalen.",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "Hiermee wordt een onduidelijke id geretourneerd voor de evaluatie die momenteel wordt uitgevoerd.",
        "Documentation.LongDescription": "Hiermee wordt een onduidelijke id geretourneerd voor de evaluatie die momenteel wordt uitgevoerd.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "Retourneert een ondoorzichtige id om binnenkomende aanvragen te correleren met uitgaande aanvragen.",
        "Documentation.LongDescription": "Retourneert een ondoorzichtige id om binnenkomende aanvragen te correleren met uitgaande aanvragen.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "Als tracering is ingeschakeld, wordt hiermee een traceervermelding geschreven en wordt de waarde geretourneerd.",
        "Documentation.LongDescription": "Als tracering is ingeschakeld, wordt hiermee een tracering (<code>message</code>) geschreven en wordt <code>value</code> geretourneerd. Er wordt met een optionele parameter (<code>delayed</code>) opgegeven of de evaluatie van <code>value</code> moet worden uitgesteld totdat het bericht is getraceerd. <code>traceLevel</code> kan een van de volgende waarden hebben:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Het bericht traceren voordat de functie Text.From wordt aangeroepen en het resultaat retourneren.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "De standaard-id-provider voor de huidige host.",
        "Documentation.LongDescription": "De standaard-id-provider voor de huidige host.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "Stelt een totale waarde samen van de items in de lijst.",
        "Documentation.LongDescription": "Stelt een totale waarde samen van de items in de lijst <code>list</code>, met behulp van <code>accumulator</code>.\r\n    Een optionele seedparameter, <code>seed</code>, kan worden ingesteld.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Stelt de totale waarde samen van de items in de lijst {1, 2, 3, 4, 5} met behulp van ((state, current) => state + current ).",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "Genereert een lijst met datetimezone-waarden op basis van een aanvankelijke waarde, telling en incrementele duurwaarde.",
        "Documentation.LongDescription": "Retourneert een lijst met <code>datetimezone</code>waarden van grootte <code>count</code>, te beginnen bij <code>start</code>. De opgegeven verhoging, <code>step</code>, is een <code>duration</code>waarde die aan elke waarde is toegevoegd.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met 10 waarden maken te beginnen bij 5 minuten voor nieuwjaarsdag (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) en oplopend in stappen van 1 minuut (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "Genereert een lijst met datetime-waarden op basis van een aanvankelijke waarde, telling en incrementele duurwaarde.",
        "Documentation.LongDescription": "Retourneert een lijst met <code>datetime</code>waarden van grootte <code>count</code>, te beginnen bij <code>start</code>. De opgegeven verhoging, <code>step</code>, is een <code>duration</code>waarde die aan elke waarde is toegevoegd.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met 10 waarden maken te beginnen bij 5 minuten voor nieuwjaarsdag (#datetime(2011, 12, 31, 23, 55, 0)) en oplopend in stappen van 1 minuut (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "Genereert een lijst met date-waarden op basis van een aanvankelijke waarde, telling en incrementele duurwaarde.",
        "Documentation.LongDescription": "Retourneert een lijst met <code>date</code>waarden van grootte <code>count</code>, te beginnen bij <code>start</code>.. De opgegeven verhoging, <code>step</code>, is een <code>duration</code>waarde die aan elke waarde wordt toegevoegd.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met vijf waarden maken te beginnen op oudejaarsavond (#date(2011, 12, 31)) en oplopend in stappen van 1 dag (#duration(1, 0, 0, 0)).",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "Genereert een lijst met duurwaarden op basis van een aanvankelijke waarde, telling en incrementele duurwaarde.",
        "Documentation.LongDescription": "Retourneert een lijst met <code>count</code> <code>duration</code>waarden, beginnend bij <code>start</code> en stapsgewijs verhoogd met de opgegeven <code>duration</code> <code>step</code>.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met 5 waarden maken te beginnen bij 1 uur en oplopend in stappen van een uur.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "Hiermee wordt een lijst met waarden gegenereerd.",
        "Documentation.LongDescription": "Genereert een lijst met waarden met behulp van de opgegeven functies. De functie <code>initial</code> genereert een beginwaarde voor de kandidaat, die vervolgens wordt getest op <code>condition</code>.\r\n    Als de kandidaatwaarde wordt goedgekeurd, wordt deze geretourneerd als onderdeel van de resulterende lijst en de volgende kandidaatwaarde wordt gegenereerd door de zojuist goedgekeurde waarde door te geven aan <code>next</code>.\r\n    Als een kandidaatwaarde niet overeenkomt met <code>condition</code>, stopt het proces voor het genereren van de lijst.\r\n    Een optionele parameter, <code>selector</code>, kan ook worden opgegeven om de items in de resulterende lijst te transformeren.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Maak een lijst door te beginnen bij tien, herhaaldelijk met één te verlagen en ervoor te zorgen dat elk item groter is dan nul.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "Een lijst genereren met records die x en y bevatten, waarbij x een waarde en y een lijst is. x moet kleiner dan 10 blijven en het aantal items in de lijst y voorstellen. Nadat de lijst is gegenereerd, alleen de x-waarden retourneren.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "Voegt waarden in de lijst bij de opgegeven index in.",
        "Documentation.LongDescription": "Retourneert een nieuwe lijst die ontstaat door het invoegen van de waarden in <code>values</code> in <code>list</code> bij <code>index</code>. De eerste positie in de lijst is bij index 0.\r\n      <ul>\r\n        <li><code>list</code>: De doellijst waar de waarden moeten worden ingevoegd.</li>\r\n        <li><code>index</code>: De index van de doellijst (<code>list</code>) waar de waarden moeten worden ingevoegd. De eerste positie in de lijst is bij index 0.</li>\r\n        <li><code>values</code>: De lijst met waarden die moet worden ingevoegd in <code>list</code>.</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Voegt de lijst ({3, 4}) in de doellijst ({1, 2, 5}) bij index 2 in.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "Voegt een lijst met een geneste lijst ({1, {1.1, 1.2}}) in de doellijst ({2, 3, 4}) bij index 0 in .",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "Vervangt het getelde aantal waarden, te beginnen bij de positie met de vervangende waarden.",
        "Documentation.LongDescription": "Vervangt <code>count</code> waarden in de <code>list</code> door de lijst <code>replaceWith</code>, te beginnen bij de opgegeven positie, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "{7, 8, 9} in de lijst {1, 2, 7, 8, 9, 5} vervangen door {3, 4}.",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "Zoekt een lijst voor de opgegeven waarde en vervangt die waarde.",
        "Documentation.LongDescription": "Zoekt een lijst met waarden, <code>list</code>, voor de waarde <code>oldValue</code> en vervangt elke instantie van die waarde door een de waarde <code>newValue</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Elke \"a\" in de lijst {\"a\", \"B\", \"a\", \"a\"} vervangen door een \"A\".",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "Genereert een lijst met time-waarden op basis van een aanvankelijke waarde, telling en incrementele duurwaarde.",
        "Documentation.LongDescription": "Retourneert een lijst met <code>time</code>-waarden van grootte <code>count</code>, te beginnen bij <code>start</code>. De opgegeven verhoging, <code>step</code>, is een <code>duration</code>-waarde die aan elke waarde wordt toegevoegd.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met vier waarden maken, te beginnen bij 12 uur 's middags (#time(12, 0, 0)) en oplopend in stappen van één uur (#duration(0, 1, 0, 0)).",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "Retourneert een lijst waarvan de elementen met behulp van de opgegeven functies zijn getransformeerd vanuit de invoerlijst.",
        "Documentation.LongDescription": "Retourneert een lijst waarvan de elementen worden geprojecteerd uit de invoerlijst.<br>\r\n    <br>\r\n     De <code>collectionTransform</code>-functie transformeert elk element naar een tussenliggende lijst en de <code>resultTransform</code>-functie ontvangt zowel het oorspronkelijke element als een item uit de tussenliggende lijst om het uiteindelijke resultaat samen te stellen.<br>\r\n     <br>\r\n    De <code>collectionTransform</code>-functie heeft de handtekening <code>(x as any) as list => ...</code>, waarbij <code>x</code> een element is in <code>list</code>.\r\n     The <code>resultTransform</code>-functie projecteert de vorm van het resultaat en heeft de handtekening <code>(x as any, y as any) as any => ...</code>, waarbij <code>x</code> een element is in <code>list</code> en <code>y</code> een element is uit de lijst die wordt gegenereerd door <code>x</code> door te geven aan <code>collectionTransform</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Maak een lijst met personen en hun huisdieren plat.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "Retourneert een willekeurig getal.",
        "Documentation.LongDescription": "Retourneert een willekeurig getal tussen de 0 en 1.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Een willekeurig getal ophalen.",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "Voegt een veld aan een record toe.",
        "Documentation.LongDescription": "Voegt een veld aan een record <code>record</code> toe op basis van de naam van het veld <code>fieldName</code> en de waarde <code>value</code>.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Het veld Adres toevoegen aan de record.",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "Vervangt tekst binnen de aangeleverde invoer.",
        "Documentation.LongDescription": "Vervangt de tekst <code>old</code> in de oorspronkelijke <code>text</code> door de tekst <code>new</code>. Deze vervangingsfunctie kan worden gebruikt in <code>List.ReplaceValue</code> en <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "De tekst \"hA\" vervangen door \"Ha\" in de tekenreeks \"hAllo wereld\".",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "Vervangt waarden binnen de aangeleverde invoer.",
        "Documentation.LongDescription": "Vervangt de waarde <code>old</code> in de oorspronkelijke <code>value</code> door de waarde <code>new</code>. Deze vervangingsfunctie kan worden gebruikt in <code>List.ReplaceValue</code> en <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "De waarde 11 vervangen door de waarde 10.",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een JSON-resultaat geretourneerd via de Smartsheet-API",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "Hiermee wordt een aanroep verzonden naar de Smartsheet 2.0 REST API op het opgegeven eindpunt en worden de resultaten geretourneerd als JSON-record.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden gegevens opgehaald uit de bladen op het Smartsheet-API-eindpunt waarvoor extra argumenten zijn opgegeven",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "Een tabel met bladgegevens die zijn geretourneerd door de Smartsheet-API"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.TestContents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "Hiermee wordt een functie geretourneerd die niet splitst en het argument als één elementlijst wordt geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een functie geretourneerd die niet splitst en het argument als één elementlijst wordt geretourneerd.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "Retourneert een functie die bij een witruimte tekst splitst in een lijst met tekst.",
        "Documentation.LongDescription": "Retourneert een functie die bij een witruimte tekst splitst in een lijst met tekst.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "De invoer splitsen op spaties, waarbij aanhalingstekens zoals elk ander teken worden behandeld.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "Maakt van de tabel partities in een lijst tabellen op basis van het aantal opgegeven groepen en de opgegeven kolom.",
        "Documentation.LongDescription": "Partitioneert de <code>table</code> in een lijst met <code>groups</code> tabellen op basis van de waarde van de <code>column</code> en een functie <code>hash</code>.\r\n    De functie <code>hash</code> wordt toegepast op de waarde van de rij <code>column</code> om een hash-waarde voor de rij te verkrijgen. De hash-waardemodulus <code>groups</code> bepaalt in welke van de geretourneerde tabellen de rij wordt geplaatst.\r\n    <ul>\r\n       <li><code>table</code>: de tabel die wordt gepartitioneerd.</li>\r\n       <li><code>column</code>: de kolom waarop de hash-bewerking wordt uitgevoerd, om te bepalen in welke geretourneerde tabel de rij wordt geplaatst.</li>\r\n       <li><code>groups</code>: het aantal tabellen waarin de invoertabel wordt gepartitioneerd.</li>\r\n       <li><code>hash</code>: de functie die wordt toegepast om een hash-waarde te verkrijgen.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Partitioneert de tabel <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> in twee tabellen op kolom [a] met behulp van de waarden van de kolommen als de hash-functie.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "Hiermee wordt het gedeelte van <code>text</code> tussen een opgegeven <code>startDelimiter</code> en <code>endDelimiter</code> geretourneerd.\r\n    Een optioneel numeriek item <code>startIndex</code> geeft aan welk exemplaar van <code>startDelimiter</code> moet worden gebruikt.\r\n    Een optionele lijst <code>startIndex</code> geeft aan welk exemplaar van <code>startDelimiter</code> moet worden gebruikt en of indexering moet worden uitgevoerd vanaf het begin of het einde van de invoer.\r\n    <code>endIndex</code> is vergelijkbaar, behalve dat indexering relatief aan <code>startIndex</code> wordt uitgevoerd.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Het gedeelte van 111 (222) 333 (444) ophalen dat tussen het (eerste) open haakje en het (eerste) gesloten haakje dat erop volgt, staat.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "Het gedeelte van 111 (222) 333 (444) ophalen dat tussen het tweede open haakje en het eerste gesloten haakje dat erop volgt, staat.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "Het gedeelte van 111 (222) 333 (444) ophalen dat tussen het tweede open haakje vanaf het einde en het tweede gesloten haakje dat erop volgt, staat.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "Voegt één tekstwaarde in een andere tekstwaarde op de opgegeven positie in.",
        "Documentation.LongDescription": "Retourneert het resultaat van het invoegen van tekstwaarde <code>newText</code> in de tekstwaarde <code>text</code> op positie <code>offset</code>. De positie begint bij nummer 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "\"C\" invoegen tussen \"B\" en \"D\" in \"ABD\".",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "Retourneert een nieuwe willekeurige GUID (globally unique identifier).",
        "Documentation.LongDescription": "Retourneert een nieuwe willekeurige GUID (globally unique identifier).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "Vervangt alle instanties van de opgegeven subtekenreeks in de tekst.",
        "Documentation.LongDescription": "Retourneert het resultaat van het vervangen van alle instanties van tekstwaarde <code>old</code> in tekstwaarde <code>text</code> door tekstwaarde <code>new</code>. Bij deze functie wordt onderscheid gemaakt tussen hoofdletters en kleine letters.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Elke instantie van het woord \"het\" in een zin vervangen door \"een\".",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "Verwijdert een bereik met tekens en voegt een nieuwe waarde op een opgegeven positie in.",
        "Documentation.LongDescription": "Retourneert het resultaat van het verwijderen van een aantal tekens, <code>count</code>, vanuit tekstwaarde <code>text</code>, te beginnen bij positie <code>offset</code> en voegt vervolgens de tekstwaarde <code>newText</code> op dezelfde positie in <code>text</code> in.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Een enkel teken op positie 2 in tekstwaarde \"ABGF\" vervangen door de nieuwe tekstwaarde \"CDE\".",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "Voegt een sleutel aan het opgegeven tabeltype toe.",
        "Documentation.LongDescription": "Voegt een sleutel aan het opgegeven tabeltype toe.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "Hiermee wordt een lijst met identiteiten geretourneerd die aan de voorwaarde voldoen.",
        "Documentation.LongDescription": "<p>Met behulp van de opgegeven <code>identityProvider</code> wordt de <code>condition</code> omgezet in de lijst met identiteiten waarvoor <code>condition</code> de waarde <code>waar</code> retourneert in alle autorisatiecontexten met <code>identityProvider</code> als id-provider. Er wordt een fout gegenereerd als het onmogelijk is om <code>condition</code> te converteren naar een lijst met identiteiten (bijvoorbeeld als <code>condition</code> andere kenmerken dan gebruikers- of groeps-id's raadpleegt om een beslissing te nemen). </p> <p>Houd er rekening mee dat de id-lijst de identiteiten bevat zoals ze worden weergegeven in <code>condition</code> en dat er geen normalisatie wordt toegepast (zoals groepsuitbreiding).\r\n </p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "Hiermee wordt een binaire waarde gecomprimeerd met het opgegeven compressietype.",
        "Documentation.LongDescription": "Hiermee wordt een binaire waarde gecomprimeerd met het opgegeven compressietype. Het resultaat van deze aanroep is een gecomprimeerde kopie van de invoer. Compressietypen zijn onder andere:\r\n <ul>\r\n <li><code>Compression.GZip</code></li>\r\n <li><code>Compression.Deflate</code></li>\r\n </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "De binaire waarde comprimeren.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "Decomprimeert een binaire waarde met het opgegeven compressietype.",
        "Documentation.LongDescription": "Hiermee wordt een binaire waarde gedecomprimeerd met het opgegeven compressietype. Het resultaat van deze aanroep is een gedecomprimeerde kopie van de invoer. Compressietypen zijn onder andere:\r\n <ul>\r\n <li><code>Compression.GZip</code></li>\r\n <li><code>Compression.Deflate</code></li>\r\n </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Decomprimeer de binaire waarde.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "Hiermee wordt een subset van de binaire waarde geretourneerd, te beginnen bij een marge.",
        "Documentation.LongDescription": "Hiermee wordt een subset van de binaire waarde geretourneerd, te beginnen bij de marge <code>binary</code>. Met een optionele parameter, <code>offset</code>, wordt de maximale lengte van de subset ingesteld.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een subset van de binaire waarde geretourneerd, te beginnen bij marge 6.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "Hiermee wordt een subset met lengte 2 geretourneerd vanaf marge 6 van de binaire waarde.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "Hiermee wordt het opgegeven binaire bestand gesplitst in een lijst met binaire bestanden met het opgegeven paginaformaat.",
        "Documentation.LongDescription": "Splitst <code>binary</code> in een lijst met binaire bestanden waarbij het eerste element van de uitvoerlijst een binair element is met de eerste <code>pageSize</code> bytes van\r\n het binaire bronbestand, het volgende element van de uitvoerlijst is een binair element met de volgende <code>pageSize</code> bytes uit het binaire bronbestand, enzovoort.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "Hiermee wordt een binair bestand gemaakt of uitgebreid met door de gebruiker gedefinieerde handlers voor query- en actiebewerkingen.",
        "Documentation.LongDescription": "<p>Hiermee wordt een weergave van <code>binary</code> geretourneerd waarin de functies in <code>handlers</code> worden gebruikt in plaats van het standaardgedrag van een bewerking wanneer de bewerking op de weergave wordt toegepast.</p>\r\n<p>Als <code>binary</code> is opgegeven, zijn alle handlerfuncties optioneel. Als <code>binary</code> niet is opgegeven, is de handlerfuncties <code>GetStream</code> vereist. Als er geen handlerfunctie voor een bewerking is opgegeven, wordt in plaats daarvan het standaardgedrag van de bewerking op <code>binary</code> toegepast (behalve bij <code>GetExpression</code>).</p>\r\n<p>Handlerfuncties moeten een waarde retourneren die semantisch equivalent is aan het resultaat van het toepassen van de bewerking op <code>binary</code> (of de resulterende weergave bij <code>GetExpression</code>).</p>\r\n<p>Als er met een handlerfunctie een fout wordt gegenereerd, wordt het standaardgedrag van de bewerking op de weergave toegepast.</p>\r\n<p><code>Binary.View</code> kan worden gebruikt om vouwen te implementeren naar een gegevensbron; de vertaling van M-query's naar bronspecifieke bewerkingen (bijvoorbeeld om een deel van een bestand te downloaden).</p>\\\r\n<p>Raadpleeg de gepubliceerde documentatie over de aangepaste connector van Power Query voor een uitgebreide beschrijving van <code>Binary.View</code>.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Maak een basisweergave waarvoor geen toegang tot de gegevens is vereist om de lengte te bepalen.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "Retourneert een binaire indeling met de bytevolgorde die is opgegeven door een functie.",
        "Documentation.LongDescription": "Retourneert een binaire indeling met de bytevolgorde die is opgegeven door <code>binaryFormat</code>.  De standaard-bytevolgorde is <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "Retourneert een binaire indeling die de volgende binaire indeling kiest op basis van een waarde die al is gelezen.",
        "Documentation.LongDescription": "Retourneert een binaire indeling die de volgende binaire indeling kiest op basis van een waarde die al is gelezen.  De waarde van een binaire indeling die door deze functie wordt geproduceerd, werkt in stadia:<ul>\r\n<li>De binaire indeling die is opgegeven met de parameter <code>binaryFormat</code> wordt gebruikt om een waarde te lezen.</li>\r\n<li>De waarde wordt doorgegeven aan de keuzefunctie die is opgegeven met de parameter <code>chooseFunction</code>.</li>\r\n<li>De keuzefunctie inspecteert de waarde en retourneert een secundaire binaire indeling.</li>\r\n<li>De secundaire binaire indeling wordt gebruikt om een tweede waarde te lezen.</li>\r\n<li>Als de combineerfunctie is opgegeven, worden de eerste en tweede waarden doorgegeven aan de combineerfunctie en wordt de resulterende waarde geretourneerd.</li>\r\n<li>Als de combineerfunctie niet is opgegeven, wordt de tweede waarde geretourneerd.</li>\r\n<li>De tweede waarde wordt geretourneerd.</li>\r\n</ul>De optionele parameter <code>type</code> geeft het type binaire indeling aan dat wordt geretourneerd door de keuzefunctie.  <code>type any</code>, <code>type list</code> of <code>type binary</code> kan worden opgegeven.  Als de parameter <code>type</code> niet is opgegeven, wordt <code>type any</code> gebruikt.   Als <code>type list</code> of <code>type binary</code> wordt gebruikt, kan het systeem een gestreamde <code>binary</code> waarde of <code>list</code>waarde retourneren in plaats van een gebufferde waarde waardoor de beschikbare hoeveelheid geheugen voor het lezen van de indeling kan worden verminderd.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met bytes lezen waarvan het aantal elementen wordt bepaald door de eerste byte.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "Een lijst met bytes lezen waarvan het aantal elementen wordt bepaald door de eerste byte, en de leesbewerking van de eerste byte bewaren.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "Een lijst met bytes lezen waarvan het aantal elementen wordt bepaald door de eerste byte met behulp van een gestreamde lijst.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "Retourneert een binaire indeling die een groep items leest.",
        "Documentation.LongDescription": "De parameters zijn als volgt:\r\n<ul>\r\n<li>De parameter <code>binaryFormat</code> specificeert de binaire indeling van de sleutelwaarde.</li>\r\n<li>De parameter <code>group</code> verschaft informatie over de groep met bekende items.</li>\r\n<li>De optionele parameter <code>extra</code> kan worden gebruikt om een functie op te geven die een waarde van een binaire indeling retourneert voor de waarde die volgt op een sleutel die niet werd verwacht. Als de parameter <code>extra</code> niet is opgegeven, treedt er een fout op als er onverwachte sleutelwaarden zijn.</li>\r\n</ul>\r\nMet de parameter <code>group</code> wordt een lijst met itemdefinities opgegeven. Elke itemdefinitie is een lijst die 3-5 van de volgende waarden bevat:\r\n<ul>\r\n<li>Sleutelwaarde. De waarde van de sleutel die overeenkomt met het item. Deze moet uniek zijn binnen de set met items.</li>\r\n<li>Itemindeling. De binaire indeling die overeenkomt met de waarde van het item. Op deze manier kan elk item een andere indeling hebben. </li>\r\n<li>Iteminstantie. De waarde <code>BinaryOccurrence.Type</code> geeft aan hoe vaak het item volgens verwachting in de groep verschijnt.  Vereiste items die niet aanwezig zijn, veroorzaken een fout. Vereiste of optionele dubbele items worden afgehandeld als onverwachte sleutelwaarden.</li>\r\n<li>Standaardwaarde van het item (optioneel). Als de standaardwaarde van het item in de lijst met itemdefinities verschijnt en niet null is, wordt dit gebruikt in plaats van de standaard. De standaard voor herhalende of optionele items is null en de standaard voor herhalende waarden is een lege lijst { }.</li>\r\n<li>Transformatie itemwaarde (optioneel).  Als de functie voor transformatie van de itemwaarde aanwezig is in de lijst met itemdefinities en niet null is, dan wordt deze functie aangeroepen om de itemwaarde te transformeren voordat de waarde wordt geretourneerd. De transformatiefunctie wordt alleen aangeroepen als het item verschijnt in de invoer (het wordt nooit aangeroepen met de standaardwaarde). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "Het volgende gaat uit van een sleutelwaarde die een enkele byte is en die 4 verwachte items in de groep heeft die allemaal een byte met gegevens hebben die volgt na de sleutel.  De items verschijnen als volgt in de invoer:\r\n<ul>\r\n<li>Sleutel 1 is verplicht en verschijnt met waarde 11.</li>\r\n<li>Sleutel 2 wordt herhaald en verschijnt twee keer met waarde 22 en heeft een waarde { 22, 22 } als resultaat.</li>\r\n<li>Sleutel 3 is optioneel, en verschijnt niet, en heeft de waarde null als resultaat.</li>\r\n<li>Sleutel 4 wordt herhaald maar verschijnt niet, en heeft de waarde{ } als resultaat.</li>\r\n<li>Sleutel 5 maakt geen deel uit van de groep maar verschijnt eenmalig met de waarde 55.  De extra functie wordt aangeroepen met de sleutelwaarde 5 en retourneert de indeling die overeenkomt met die waarde (BinaryFormat.Byte).  De waarde 55 wordt gelezen en genegeerd.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "Het volgende voorbeeld illustreert de transformatie van de itemwaarde en de standaardwaarde van het item.   Het herhalende item met sleutel 1 telt de lijst met waarden op die zijn gelezen met behulp van List.Sum.  Het optionele item met sleutel 2 geeft een standaardwaarde van 123 in plaats van null.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "Retourneert een binaire indeling die de hoeveelheid gegevens beperkt die kan worden gelezen.",
        "Documentation.LongDescription": "Retourneert een binaire indeling die de hoeveelheid gegevens beperkt die kan worden gelezen.  Zowel <code>BinaryFormat.List</code> als <code>BinaryFormat.Binary</code> kan worden gebruikt om tot het einde van de gegevens te lezen.  <code>BinaryFormat.Length</code> kan worden gebruikt om het aantal bytes te beperken dat wordt gelezen.  De parameter <code>binaryFormat</code> specificeert de binaire indeling die moet worden beperkt.  De parameter <code>length</code> specificeert het aantal bytes dat moet worden gelezen.  De parameter <code>length</code> kan een numerieke waarde of een waarde van een binaire indeling zijn die de indeling van de lengtewaarde definieert die verschijnt en voorafgaat aan de waarde die wordt gelezen.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "Het aantal bytes dat wordt gelezen tot 2 beperken wanneer er een lijst met bytes wordt gelezen.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Beperk het aantal bytes dat wordt gelezen bij het lezen van een lijst met bytes tot de bytewaarde die voorafgaat aan de lijst.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "Retourneert een binaire indeling die de waarden transformeert die door een andere binaire indeling zijn gelezen.",
        "Documentation.LongDescription": "Retourneert een binaire indeling die de waarden transformeert die door een andere binaire indeling zijn gelezen.  De parameter <code>binaryFormat</code> specificeert de binaire indeling die zal worden gebruikt om de waarde te lezen.  <code>function</code> wordt aangeroepen met de gelezen waarde en retourneert de getransformeerde waarde.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "Een byte lezen en hier één aan toevoegen.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "Retourneert een vergelijkingsfunctie waarbij rangtelwoordregels worden gebruikt om waarden te vergelijken.",
        "Documentation.LongDescription": "Hiermee wordt een vergelijkingsfunctie geretourneerd die rangtelwoordregels gebruikt om de opgegeven waarden <code>x</code> en <code>y</code> te vergelijken.<br>\r\n      <br>\r\n       Een vergelijkingsfunctie accepteert twee argumenten en retourneert -1, 0 of 1 op basis van of de eerste waarde kleiner dan, gelijk aan of groter is dan de tweede.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Vergelijk aan de hand van rangtelwoordregels of 'encyclopædia' en 'encyclopaedia' equivalent zijn. Houd er rekening mee dat deze equivalent zijn met <code>Comparer.FromCulture(\"en-US\")</code>. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "Retourneert een comparer-functie waarbij geen onderscheid wordt gemaakt tussen hoofdletters en kleine letters en waarbij ordinale regels worden gebruikt om waarden te vergelijken.",
        "Documentation.LongDescription": "Hiermee wordt een niet-hoofdlettergevoelige vergelijkingsfunctie geretourneerd die rangtelwoordregels gebruikt om de opgegeven waarden <code>x</code> en <code>y</code> te vergelijken.<br>\r\n        <br>\r\n        Een vergelijkingsfunctie accepteert twee argumenten en retourneert -1, 0 of 1 op basis van of de eerste waarde kleiner dan, gelijk aan of groter is dan de tweede waarde.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Abc met abc vergelijken met ordinale regels waarbij geen onderscheid worden gemaakt tussen hoofdletters en kleine letters. Abc is minder dan abc met <code>Comparer.Ordinal</code>. ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "Hiermee wordt een eigenschap van een dimensiekenmerk geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de eigenschap <code>propertyName</code> van het dimensiekenmerk <code>attribute</code> geretourneerd.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "Hiermee wordt een eigenschap van een meetwaarde (celeigenschap) geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de eigenschap <code>propertyName</code> van de meetwaarde <code>measure</code> geretourneerd.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL-querybron",
        "Documentation.LongDescription": "Een Databricks-gegevensbron definiëren voor het uitvoeren van SQL-query's"
      },
      "ReturnType": "Databricks SQL-query",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL-querybron",
        "Documentation.LongDescription": "Een Databricks-gegevensbron definiëren voor het uitvoeren van SQL-query's"
      },
      "ReturnType": "Databricks SQL-query",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "Voegt de opgegeven dagen toe aan de datum.",
        "Documentation.LongDescription": "Retourneert het resultaat van <code>date</code>, <code>datetime</code> of <code>datetimezone</code> dat volgt uit het toevoegen van <code>numberOfDays</code> dagen aan de <code>datetime</code>waarde <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> waaraan dagen worden toegevoegd.</li>\r\n      <li><code>numberOfDays</code>: het aantal dagen dat u wilt toevoegen.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5 dagen aan de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> toevoegen die de waarde 14/5/2011 vertegenwoordigt.",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "Voegt de opgegeven maanden toe aan de datum.",
        "Documentation.LongDescription": "Hiermee wordt het <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-resultaat geretourneerd van het toevoegen van <code>numberOfMonths</code> maanden aan de <code>datetime</code>-waarde <code>dateTime</code>.\r\n <ul>\r\n <li><code>dateTime</code>: de <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde waaraan maanden worden toegevoegd.</li>\r\n <li><code>numberOfMonths</code>: het aantal maanden dat moet worden toegevoegd.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5 maanden aan de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> toevoegen die de waarde 14/5/2011 vertegenwoordigt.",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "18 maanden aan de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> toevoegen die de datum 14/5/2011 en de tijd 08:15:22 AM vertegenwoordigt.",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "Voegt de opgegeven kwartalen toe aan de datum.",
        "Documentation.LongDescription": "Retourneert het resultaat van <code>date</code>, <code>datetime</code> of <code>datetimezone</code> dat volgt uit het toevoegen van <code>numberOfQuarters</code> kwartalen aan de <code>datetime</code>waarde <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> waaraan kwartalen worden toegevoegd.</li>\r\n      <li><code>numberOfQuarters</code>: het aantal kwartalen dat u wilt toevoegen.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "1 kwartaal aan de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> toevoegen die de waarde 14/5/2011 vertegenwoordigt.",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "Voegt de opgegeven weken toe aan de datum.",
        "Documentation.LongDescription": "Retourneert het resultaat van <code>date</code>, <code>datetime</code> of <code>datetimezone</code> dat volgt uit het toevoegen van <code>numberOfWeeks</code> weken aan de <code>datetime</code>waarde <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> waaraan weken worden toegevoegd.</li>\r\n      <li><code>numberOfWeeks</code>: het aantal weken dat u wilt toevoegen.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "2 weken aan de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> toevoegen die de waarde 14/5/2011 vertegenwoordigt.",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "Voegt de opgegeven jaren toe aan de datum.",
        "Documentation.LongDescription": "Hiermee wordt het <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-resultaat geretourneerd van het toevoegen van <code>numberOfYears</code> aan een <code>datetime</code>-waarde <code>dateTime</code>.\r\n <ul>\r\n <li><code>dateTime</code>: de <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde waaraan jaren worden toegevoegd.</li>\r\n <li><code>numberOfYears</code>: het aantal jaren dat moet worden toegevoegd.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "4 jaren aan de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> toevoegen die de waarde 14/5/2011 vertegenwoordigt.",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "10 jaren aan de waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> toevoegen die de datum 14/5/2011 en de tijd 08:15:22 AM vertegenwoordigt.",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende dagen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende dagen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>days</code>: Het aantal dagen.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de dag na de huidige systeemtijd plaatsvindt in de volgende twee dagen.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende maanden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende maanden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>months</code>: Het aantal maanden.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de maand na de huidige systeemtijd plaatsvindt in de volgende twee maanden.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende kwartalen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende kwartalen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>quarters</code>: Het aantal kwartalen.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het kwartaal na de huidige systeemtijd plaatsvindt in de volgende twee kwartalen.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende weken volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende weken volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>weeks</code>: Het aantal weken.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de week na de huidige systeemtijd plaatsvindt in de volgende twee weken.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende jaren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende jaren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>years</code>: Het aantal jaren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het jaar na de huidige systeemtijd plaatsvindt in de volgende twee jaar.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande dagen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande dagen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>days</code>: Het aantal dagen.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de dag voor de huidige systeemtijd plaatsvindt in de vorige twee dagen.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande maanden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande maanden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>months</code>: Het aantal maanden.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de maand voor de huidige systeemtijd plaatsvindt in de vorige twee maanden.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande kwartalen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande kwartalen volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>quarters</code>: Het aantal kwartalen.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het kwataal voor de huidige systeemtijd plaatsvindt in de vorige twee kwartalen.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande weken volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande weken volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>weeks</code>: Het aantal weken.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de week voor de huidige systeemtijd plaatsvindt in de vorige twee weken.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande jaren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande jaren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>years</code>: Het aantal jaren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het jaar voor de huidige systeemtijd plaatsvindt in de vorige twee jaar.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "Hiermee voegt u tijdzonegegevens toe aan de datum/tijd-waarde.",
        "Documentation.LongDescription": "Hiermee voegt u informatie over de tijdzone toe aan de <code>dateTime</code>-waarde. De informatie over de tijdzone bevat <code>timezoneHours</code> en optioneel <code>timezoneMinutes</code>, waarmee de gewenste verschil met de UTC-tijd wordt opgegeven.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Stel de tijdzone in op UTC+7:30 (7 uur en 30 minuten na UTC).",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de volgende uren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende uren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>hours</code>: Het aantal uur.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het uur na de huidige systeemtijd plaatsvindt in de volgende twee uren.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de volgende minuten volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende minuten volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>minutes</code>: Het aantal minuten.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de minuut na de huidige systeemtijd plaatsvindt in de volgende twee minuten.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de volgende seconden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende seconden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>seconds</code>: Het aantal seconden.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de seconde na de huidige systeemtijd plaatsvindt in de volgende twee seconden.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de voorgaande uren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande uren volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>hours</code>: Het aantal uur.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het uur vóór de huidige systeemtijd plaatsvindt in de vorige twee uren.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de voorgaande minuten volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande minuten volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>minutes</code>: Het aantal minuten.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de minuut vóór de huidige systeemtijd plaatsvindt in de vorige twee minuten.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de voorgaande seconden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande seconden volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      <li><code>seconds</code>: Het aantal seconden.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de seconde vóór de huidige systeemtijd plaatsvindt in de vorige twee seconden.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "Wijzigt de tijdzone van de waarde.",
        "Documentation.LongDescription": "Wijzigt informatie over de tijdzone van de datum-/tijdzonewaarde <code>dateTimeZone</code> in de nieuwe informatie over de tijdzone die wordt opgegeven door <code>timezoneHours</code> en optioneel door <code>timezoneMinutes</code>.\r\n    Als <code>dateTimeZone</code> geen tijdzonegedeelte heeft, wordt er een uitzondering gegenereerd.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Informatie over de tijdzone wijzigen voor #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) in 8 uur.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "Informatie over de tijdzone wijzigen voor #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) in -30 minuten",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "Opent een waarde op naam in een ingesloten mashup.",
        "Documentation.LongDescription": "Opent een waarde op naam in een ingesloten mashup.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "Hiermee maakt u een functie met een specifieke parameterhandtekening op een functie die een enkel lijstargument nodig heeft",
        "Documentation.LongDescription": "Hiermee neemt u een unaire functie <code>function</code> en maakt u een nieuwe functie van het type <code>functionType</code> die een lijst met argumenten opbouwt en deze doorgeeft aan <code>function</code>.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "List.Sum wordt omgezet in een functie met twee argumenten waarvan de argumenten bij elkaar zijn opgeteld",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "Hiermee converteert u een functie waarbij een lijst in een functie met twee argumenten wordt omgezet",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "Roept de opgegeven functie aan",
        "Documentation.LongDescription": "Roept de opgegeven functie aan met behulp van de opgegeven lijst met argumenten en retourneert het resultaat.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Roept Record.FieldNames aan met één argument [A=1, B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "Roept de ingestelde functie aan nadat de opgegeven periode is verstreken.",
        "Documentation.LongDescription": "Retourneert het resultaat van het aanroepen van <code>function</code> nadat <code>delay</code> is verstreken.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "Hiermee wordt een scalaire functie gemaakt die op een vectorfunctie wordt uitgevoerd voor batchverwerking van meerdere aanroepen.",
        "Documentation.LongDescription": "<p>Hiermee wordt een scalaire functie van het type <code>scalarFunctionType</code> geretourneerd waarmee <code>vectorFunction</code> wordt aangeroepen via één rij met argumenten waarna één uitvoerwaarde wordt geretourneerd. Daarnaast wordt <code>vectorFunction</code> één keer toegepast op alle invoerwaarden wanneer de scalaire functie herhaaldelijk op elke rij van een tabel met invoerwaarden, zoals bij Table.AddColumn, wordt toegepast.</p>\r\n<p>Er wordt aan <code>vectorFunction</code> een tabel doorgegeven met kolommen waarvan de naam en positie overeenkomen met de parameters van <code>scalarFunctionType</code>. Elke rij van deze tabel bevat de argumenten voor één aanroep van de scalaire functie, met de kolommen die overeenkomen met de parameters van <code>scalarFunctionType</code>.</p>\r\n<p>Met <code>vectorFunction</code> moet een lijst worden geretourneerd met dezelfde lengte als de invoertabel waarvan items op elke positie hetzelfde resultaat moeten bevatten als de evaluatie met de scalaire functie van de invoerrij op dezelfde positie.</p>\r\n<p>Voor de invoertabel wordt verwacht dat deze via streaming binnenkomt, waardoor voor <code>vectorFunction</code> wordt verwacht dat de uitvoer wordt gestreamd naarmate de invoer binnenkomt. Hierbij wordt één invoersegment tegelijk gebruikt. Het is met name belangrijk dat <code>vectorFunction</code> de eigen invoertabel niet vaker dan één keer opsomt.</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "Hiermee wordt een record gemaakt die een geografisch punt op basis van onderdelen aangeeft.",
        "Documentation.LongDescription": "Hiermee wordt een record gemaakt die een geografisch punt aangeeft op basis van de samenstellende onderdelen, zoals lengtegraad, breedtegraad en, indien aanwezig, hoogte (Z) en meting (M). Er kan een optionele ruimtelijke referentie-id (SRID) worden opgegeven als deze afwijkt van de standaardwaarde (4326).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "Hiermee wordt een record gemaakt die een geometrisch punt op basis van onderdelen aangeeft.",
        "Documentation.LongDescription": "Hiermee wordt een record gemaakt die een geometrisch punt aangeeft op basis van de samenstellende onderdelen, zoals X-coördinaat, Y-coördinaat en, indien aanwezig, Z-coördinaat en meting (M). Er kan een optionele ruimtelijke referentie-id (SRID) worden opgegeven als deze afwijkt van de standaardwaarde (0).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "Hiermee wordt een id gemaakt.",
        "Documentation.LongDescription": "Hiermee wordt een id gemaakt.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "Hiermee wordt bepaald of een id lid is van een identiteits-verzameling.",
        "Documentation.LongDescription": "Hiermee wordt bepaald of een id lid is van een identiteits-verzameling.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "Retourneert een lijst die bestaat uit alle oneven intervalelementen in een lijst.",
        "Documentation.LongDescription": "Retourneert een lijst die bestaat uit alle oneven intervalelementen in een lijst. Wisselt af tussen het gebruiken en overslaan van waarden uit de lijst <code>list</code> afhankelijk van de parameters.\r\n    <ul>\r\n    <li><code>count</code>: specificeert het aantal waarden dat elke keer wordt overgeslagen.</li>\r\n    <li><code>repeatInterval</code>: een optioneel herhalingsinterval om aan te geven hoeveel waarden tussen de overgeslagen waarden worden toegevoegd.</li>\r\n    <li><code>offset</code>: een optieparameter voor intervallen om met het overslaan van waarden te beginnen bij het eerste interval.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Een lijst van {1..10} maken waarbij het eerste getal wordt overgeslagen.",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "Een lijst van {1..10} maken waarbij getallen om en om worden overgeslagen.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "Een lijst van {1..10} maken die begint bij 1 en waarbij getallen om en om worden overgeslagen.",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "Een lijst van {1..10} maken die begint bij 1, één waarde overslaat, twee waarden behoudt, enzovoort.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "Geeft aan of de lijst de waarde bevat.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de lijst <code>list</code> de waarde <code>value</code> bevat.\r\n Retourneert true als er een waarde is gevonden in de lijst en anders false. Een optionele vergelijkingscriteriawaarde, <code>equationCriteria</code>, kan worden opgegeven voor het aansturen van gelijkheidstesten. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3, 4, 5} 3 bevat.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3, 4, 5} 6 bevat.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "Geeft aan of een lijst alle waarden in een andere lijst bevat.",
        "Documentation.LongDescription": "Geeft aan of de lijst <code>list</code> alle waarden in een andere lijst, <code>values</code> bevat.\r\n    Retourneert 'true' wanneer de waarde in de lijst wordt gevonden en 'false' als dit niet het geval is. Er kan een optionele waarde voor de vergelijkingsvoorwaarde, <code>equationCriteria</code>, voor het controleren van de gelijkheidstest worden opgegeven. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3, 4, 5} 3 en 4 bevat.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3, 4, 5} 5 en 6 bevat.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "Geeft aan of een lijst een van de waarden in een andere lijst bevat.",
        "Documentation.LongDescription": "Geeft aan of de lijst <code>list</code> een van de waarden in een andere lijst, <code>values</code> bevat.\r\n        Retourneert 'true' wanneer de waarde in de lijst wordt gevonden en 'false' als dit niet het geval is. Er kan een optionele waarde voor de vergelijkingsvoorwaarde, <code>equationCriteria</code>, voor het controleren van de gelijkheidstest worden opgegeven. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3, 4, 5} 3 of 9 bevat.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3, 4, 5} 6 of 7 bevat.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "Retourneert de covariantie tussen de twee lijsten met getallen.",
        "Documentation.LongDescription": "Retourneert de covariantie tussen de twee lijsten <code>numberList1</code> en <code>numberList2</code>. <code>numberList1</code> en <code>numberList2</code> moeten hetzelfde aantal <code>number</code>waarden bevatten.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "De covariantie tussen de twee lijsten berekenen.",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "Retourneert het verschil van de twee opgegeven lijsten.",
        "Documentation.LongDescription": "Hiermee worden de items in lijst <code>list1</code> geretourneerd die niet worden weergegeven in lijst <code>list2</code>. Dubbele waarden worden ondersteund.\r\n Een optionele vergelijkingscriteriawaarde, <code>equationCriteria</code>, kan worden opgegeven voor het aansturen van gelijkheidstesten. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Zoek de items in de lijst {1, 2, 3, 4, 5} die niet worden weergegeven in {4, 5, 3}.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "De items in de lijst {1, 2} zoeken die niet verschijnen in {1, 2, 3}.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "Retourneert een lijst met waarden (inclusief recordvelden) die de opgegeven tekst bevatten.",
        "Documentation.LongDescription": "Retourneert een lijst met de waarden uit de lijst <code>list</code> die de waarde <code>text</code> bevatten.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De tekstwaarden zoeken in de lijst {\"a\", \"b\", \"ab\"} die overeenkomen met \"a\". ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "Retourneert de eerste set met items in de lijst door op te geven hoeveel items er moeten worden geretourneerd of door een in aanmerking komende voorwaarde op te geven.",
        "Documentation.LongDescription": " <ul>\r\n  <li>Als er een getal wordt opgegeven, wordt er niet meer dan dat aantal items geretourneerd. </li>\r\n  <li>Als er een voorwaarde wordt opgegeven, worden alle items geretourneerd die in eerste instantie aan de voorwaarde voldoen. Wanneer een item niet aan de voorwaarde voldoet, stopt de bewerking. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De eerste waarden zoeken in de lijst {3, 4, 5, -1, 7, 8, 2} die groter zijn dan 0.",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "Retourneert 'true' als er door alle waarden uit de lijst wordt voldaan aan de voorwaardefunctie.",
        "Documentation.LongDescription": "Retourneert <code>true</code> als er door alle waarden uit de lijst <code>list</code> wordt voldaan aan de voorwaardefunctie, <code>condition</code>, of retourneert <code>false</code> als dat niet het geval is.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of alle waarden in de lijst {11, 12, 13} groter zijn dan 10.",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Bepalen of alle waarden in de lijst {1, 2, 3} groter zijn dan 10.",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "Retourneert 'true' als er door een willekeurige waarde wordt voldaan aan de voorwaardefunctie.",
        "Documentation.LongDescription": "Retourneert <code>true</code> als er door een van de waarden uit de lijst <code>list</code> wordt voldaan aan de voorwaardefunctie, <code>condition</code>, of retourneert <code>false</code> als dat niet het geval is.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken of een van de waarden in de lijst {9, 10, 11} groter is dan 10.",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of een van waarden in de lijst {1, 2, 3} groter is dan 10.",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "Retourneert de maximumwaarde(n) uit de lijst. Het aantal te retourneren waarden of de filtervoorwaarde moet worden opgegeven.",
        "Documentation.LongDescription": "Hiermee wordt de maximumwaarde(n) in de lijst, <code>list</code>.\r\n    geretourneerd. Nadat de rijen zijn gesorteerd, kunnen optionele parameters worden opgegeven om het resultaat verder te filteren. De optionele parameter, <code>countOrCondition</code>, geeft het aantal waarden dat moet worden geretourneerd of een filtervoorwaarde aan. De optionele parameter, <code>comparisonCriteria</code>, geeft aan hoe waarden in de lijst moeten worden vergeleken.\r\n <ul>\r\n        <li> <code>list</code>: de lijst met waarden.</li>\r\n        <li> <code>countOrCondition</code>: als een getal wordt opgegeven, wordt een lijst met maximaal <code>countOrCondition</code> items in oplopende volgorde geretourneerd. Als een voorwaarde is opgegeven, wordt een lijst geretourneerd met items die in eerste instantie aan de voorwaarde voldoen. Zodra een item niet aan de voorwaarde voldoet, worden geen verdere items meer behandeld.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Optioneel]</i> Een optionele <code>comparisonCriteria</code>-waarde, kan worden opgegeven om te bepalen hoe de items in de lijst moeten worden vergeleken. Als deze parameter null is, wordt de standaardvergelijkingsfunctie gebruikt.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "Retourneert de minimumwaarde(n) in de lijst. Het aantal te retourneren waarden of de filtervoorwaarde moet wellicht worden opgegeven.",
        "Documentation.LongDescription": "Hiermee wordt de minimumwaarde(n) in de lijst, <code>list</code>\r\n    geretourneerd. De parameter, <code>countOrCondition</code>, geeft het aantal waarden dat moet worden geretourneerd of een filtervoorwaarde aan. De optionele parameter, <code>comparisonCriteria</code>, geeft aan hoe waarden in de lijst moeten worden vergeleken.\r\n <ul>\r\n        <li> <code>list</code>: de lijst met waarden.</li>\r\n        <li> <code>countOrCondition</code>: als een getal wordt opgegeven, wordt een lijst met maximaal <code>countOrCondition</code> items in oplopende volgorde geretourneerd. Als een voorwaarde is opgegeven, wordt een lijst geretourneerd met items die in eerste instantie aan de voorwaarde voldoen. Zodra een item niet aan de voorwaarde voldoet, worden geen verdere items meer behandeld. Als deze parameter null is, wordt de kleinste waarde in de lijst geretourneerd.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Optioneel]</i> Een optionele <code>comparisonCriteria</code>-waarde, kan worden opgegeven om te bepalen hoe de items in de lijst moeten worden vergeleken. Als deze parameter null is, wordt de standaardvergelijkingsfunctie gebruikt.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De vijf kleinste waarden in de lijst <code>{3, 4, 5, -1, 7, 8, 2}</code> zoeken.",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "Retourneert een lijst met getallen op basis van een aanvankelijke waarde, telling en optionele incrementele waarde.",
        "Documentation.LongDescription": "Retourneert een lijst met getallen op basis van een aanvankelijke waarde, telling en optionele incrementele waarde. De standaard incrementele waarde is 1.\r\n<ul>\r\n   <li><code>start</code>: De aanvankelijke waarde in de lijst.</li>\r\n   <li><code>count</code>: Het aantal waarden dat moet worden gemaakt.</li>\r\n   <li><code>increment</code>: <i>[Optioneel]</i> De waarde waarmee moet worden verhoogd. Als weggelaten waarden worden verhoogd met 1.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met tien opeenvolgende getallen genereren, te beginnen bij 1.",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "Een lijst met tien opeenvolgende getallen genereren, te beginnen bij 1, met een toename van 2 voor elk volgend getal.",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "Hiermee worden een of meer samplepercentielen geretourneerd die overeenkomen met de opgegeven kansen.",
        "Documentation.LongDescription": "Hiermee worden een of meer samplepercentielen van de lijst <code>list</code> geretourneerd. Als de waarde <code>percentiles</code> een getal tussen 0,0 en 1,0 is, wordt de waarde beschouwd als een percentiel en is het resultaat\r\n    een enkele waarde die overeenkomt met de betreffende kans. Als de waarden <code>percentiles</code> een lijst met getallen is met waarden tussen 0,0 en 1,0, is het resultaat een lijst met percentielen\r\n    die overeenkomen met de ingevoerde kans. De optie PercentileMode in <code>options</code> kan door ervaren gebruikers worden gebruikt om een meer specifieke interpolatiemethode te kiezen, maar wordt voor de meeste gebruiksscenario's afgeraden.\r\n    De vooraf gedefinieerde symbolen <code>PercentileMode.ExcelInc</code> en <code>PercentileMode.ExcelExc</code> komen overeen met de interpolatiemethoden die worden gebruikt in de Excel-functies\r\n    <code>PERCENTILE.INC</code> en <code>PERCENTILE.EXC</code>. Het standaardgedrag komt overeen met <code>PercentileMode.ExcelInc</code>. De symbolen\r\n    <code>PercentileMode.SqlCont</code> en <code>PercentileMode.SqlDisc</code> komen overeen met het SQL Server-gedrag voor respectievelijk <code>PERCENTILE_CONT</code> en\r\n    <code>PERCENTILE_DISC</code>.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Zoek het eerste kwartiel van de lijst <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Zoek de kwartielen van de lijst <code>{5, 3, 1, 7, 9}</code> met behulp van een interpolatiemethode die overeenkomt met <code>PERCENTILE.EXC</code> van Excel.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "Retourneert de verschuiving of verschuivingen van een waarde in een lijst.",
        "Documentation.LongDescription": "Hiermee wordt de offset geretourneerd waarbij de waarde <code>value</code> wordt weergegeven in de lijst <code>list</code>. Retourneert -1 als de waarde niet wordt weergegeven.\r\n Een optionele herhalingsparameter <code>occurrence</code> kan worden opgegeven.\r\n<ul>\r\n <li><code>occurrence</code>: het maximumaantal herhalingen dat moet worden gerapporteerd.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "De positie in de lijst {1, 2, 3} opzoeken waar de waarde 3 staat.",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "Retourneert de eerste verschuiving van een waarde in een lijst.",
        "Documentation.LongDescription": "Hiermee wordt de offset in lijst <code>list</code> geretourneerd van de eerste herhaling van een waarde in een lijst <code>values</code>. Retourneert -1 als er geen herhaling is gevonden.\r\n Een optionele herhalingsparameter <code>occurrence</code> kan worden opgegeven.\r\n<ul>\r\n <li><code>occurrence</code>: het maximumaantal herhalingen dat kan worden geretourneerd.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "De eerste positie in de lijst {1, 2, 3} opzoeken waar de waarde 2 of 3 staat.",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "Retourneert een subset van de lijst, te beginnen bij een verschuiving.",
        "Documentation.LongDescription": "Retourneert een subset van de lijst, te beginnen bij de verschuiving <code>list</code>. Een optionele parameter, <code>offset</code>, stelt het maximum aantal items voor de subset in.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De subset opzoeken, te beginnen bij verschuiving 6 van de lijst met getallen van 1 t/m 10.",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "De subset met lengte 2 opzoeken vanaf verschuiving 6 van de lijst met getallen van 1 t/m 10.",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "Verwijdert items van list1 die in de lijst staan.",
        "Documentation.LongDescription": "Verwijdert alle instanties van de opgegeven waarden in de <code>list2</code> van <code>list1</code>. Als de waarden in <code>list2</code> niet in <code>list1</code> staan, wordt de oorspronkelijke lijst geretourneerd.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "De items in de lijst {2, 4, 6} uit de lijst {1, 2, 3, 4, 2, 5, 5} verwijderen.",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "Verwijdert alle instanties van de invoerwaarden.",
        "Documentation.LongDescription": "Verwijdert alle instanties van de opgegeven waarden in <code>list2</code> uit de lijst <code>list1</code>. Als de waarden in <code>list2</code> niet in <code>list1</code> staan, wordt de oorspronkelijke lijst geretourneerd.\r\n    Er kan een optionele waarde voor de vergelijkingsvoorwaarde, <code>equationCriteria</code>, voor het controleren van de gelijkheidstest worden opgegeven. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst van {1, 2, 3, 4, 5, 5} zonder {1, 5} maken.",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "Verwijdert het getelde aantal waarden, te beginnen bij de opgegeven positie.",
        "Documentation.LongDescription": "Verwijdert <code>count</code> waarden in de <code>list</code>, te beginnen bij de opgegeven positie, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Verwijdert drie waarden uit de lijst {1, 2, 3, 4, -6, -2, -1, 5}, te beginnen bij index 4.",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "Retourneert een lijst die een aantal herhalingen van de oorspronkelijke lijst is.",
        "Documentation.LongDescription": "Retourneert een lijst die <code>count</code> herhalingen van de oorspronkelijke lijst <code>list</code> is.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met drie keer herhaalde {1, 2} maken.",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "Past elke vervanging van { old, new } toe.",
        "Documentation.LongDescription": "Voert de opgegeven vervangingen door in de lijst <code>list</code>. Een vervanging <code>replacements</code> bestaat uit een lijst met twee waarden, de oude waarde en de nieuwe waarde, die worden aangeleverd als een lijst.\r\n    Er kan een optionele waarde voor de vergelijkingsvoorwaarde, <code>equationCriteria</code>, voor het controleren van de gelijkheidstest worden opgegeven.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst van {1, 2, 3, 4, 5} maken, waarmee de waarde 5 wordt vervangen door -5 en de waarde 1 door -1.",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "Retourneert een lijst met waarden die overeenkomen met de voorwaarde.",
        "Documentation.LongDescription": "Retourneert een lijst met waarden uit de lijst <code>list</code> die overeenkomen met de selectievoorwaarde <code>selection</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De waarden in de lijst {1, -3, 4, 9, -2} opzoeken die groter zijn dan 0.",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "Hiermee wordt de opgegeven lijst gesplitst in een lijst met lijsten met het opgegeven paginaformaat.",
        "Documentation.LongDescription": "Hiermee wordt <code>list</code> gesplitst in een lijst met lijsten, waarbij het eerste element van de uitvoerlijst een lijst is met de eerste <code>pageSize</code> elementen uit\r\n    de bronlijst, het volgende element van de uitvoerlijst is een lijst met de volgende <code>pageSize</code> elementen uit de bronlijst, enzovoort.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "Retourneert een nieuwe lijst met de waarden die op basis van deze lijst zijn berekend.",
        "Documentation.LongDescription": "Retourneert een nieuwe lijst met waarden door de transformatiefunctie <code>transform</code> op de lijst <code>list</code> toe te passen.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Het getal 1 aan elke waarde in de lijst {1, 2} toevoegen.",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "Retourneert de arctangens van de deling van de twee getallen.",
        "Documentation.LongDescription": "Retourneert de arctangens van de deling van de twee getallen <code>y</code> en <code>x</code>. De deling wordt neergezet als <code>y</code>/<code>x</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "Retourneert het resultaat van de uitvoering van een bitwise \"And\"-bewerking tussen de twee invoeren.",
        "Documentation.LongDescription": "Retourneert het resultaat van de uitvoering van een bitwise \"And\"-bewerking tussen <code>number1</code> en <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "Retourneert het resultaat van de uitvoering van een bitwise \"Or\"-bewerking tussen de twee invoeren.",
        "Documentation.LongDescription": "Retourneert het resultaat van de uitvoering van een bitwise \"Or\"-bewerking tussen <code>number1</code> en <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "Verschuift de bitset naar links.",
        "Documentation.LongDescription": "Retourneert het resultaat van een bitwise-verschuiving naar links op <code>number1</code> conform het aantal opgegeven bits <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "Verschuift de bitset naar rechts.",
        "Documentation.LongDescription": "Retourneert het resultaat van een bitwise-verschuiving naar rechts op <code>number1</code> conform het aantal opgegeven bits <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "Retourneert het resultaat van de uitvoering van een bitwise \"XOR\"-bewerking (Exclusive-OR) tussen de twee invoeren.",
        "Documentation.LongDescription": "Retourneert het resultaat van de uitvoering van een bitwise \"XOR\"-bewerking (Exclusive-OR) tussen <code>number1</code> en <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "Retourneert het aantal unieke combinaties.",
        "Documentation.LongDescription": "Retourneert het aantal unieke combinaties uit een lijst items, <code>setSize</code>, met de opgegeven combinatiegrootte, <code>combinationSize</code>.\r\n<ul>\r\n    <li><code>setSize</code>: het aantal items in de lijst.</li>\r\n    <li><code>combinationSize</code>: het aantal items in elke combinatie.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Het aantal combinaties opzoeken uit een totaal van vijf items wanneer elke combinatie een groep van drie items is.",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "Deelt twee getallen en retourneert het gehele getal van de uitkomst als resultaat.",
        "Documentation.LongDescription": "Hiermee wordt het deel met het gehele getal geretourneerd van het resultaat van het delen van een getal, <code>number1</code>, door een ander getal, <code>number2</code>.\r\n Als <code>number1</code> of <code>number2</code> null zijn, retourneert <code>Number.IntegerDivide</code> null.\r\n <ul>\r\n <li><code>number1</code>: de noemer.</li>\r\n <li><code>number2</code>: de deler.</li>\r\n </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "6 door 4 delen.",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "8,3 door 3 delen.",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "Geheel getal deelt twee getallen en retourneert de rest.",
        "Documentation.LongDescription": "Hiermee wordt de rest van de deling van het gehele getal van <code>number</code> door <code>divisor</code> geretourneerd. \r\n Als <code>number</code> of <code>divisor</code> null is, retourneert <code> Number.Mod</code> null.\r\n <ul> \r\n <li> <code>number</code>: het deeltal.</li> \r\n <li> <code>divisor</code>: de deler.</li> \r\n </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "De rest zoeken wanneer u 5 door 3 deelt.",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "Retourneert het aantal permutaties.",
        "Documentation.LongDescription": "Retourneert het aantal permutaties dat kan worden gegenereerd van een aantal items, <code>setSize</code>, met een opgegeven permutatiegrootte, <code>permutationSize</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Het aantal permutaties uit een totaal van vijf items in groepen van drie zoeken.",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "Verheft een getal tot de opgegeven macht.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat van het verheffen van <code>number</code> tot de macht <code>power</code> geretourneerd.\r\n Als <code>number</code> of <code>power</code> null is, retourneert <code>Number.Power</code> null.\r\n <ul>\r\n <li><code>number</code>: De basis.</li>\r\n <li><code>power</code>: De exponent.</li>\r\n </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "De waarde van 5 zoeken, verheven tot de macht 3 (5 tot de derde macht)",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "Retourneert een willekeurig getal tussen twee getallen.",
        "Documentation.LongDescription": "Retourneert een willekeurig getal tussen <code>bottom</code> en <code>top</code>.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Een willekeurig getal tussen 1 en 5 ophalen.",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "Retourneert de waarde uit het opgegeven veld in een record.",
        "Documentation.LongDescription": "Retourneert de waarde uit het opgegeven <code>field</code> in de <code>record</code>. Als het veld niet wordt gevonden, wordt er een uitzondering gegenereerd.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "De waarde van veld CustomerID in de record zoeken.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "Retourneert de waarde van het opgegeven veld in een record of de standaardwaarde als het veld niet wordt gevonden.",
        "Documentation.LongDescription": "Retourneert de waarde uit het opgegeven veld <code>field</code> in de record <code>record</code>. Als het veld niet wordt gevonden, wordt de optionele <code>defaultValue</code> geretourneerd.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "De waarde van veld Phone in de record zoeken of null retourneren als dat veld niet bestaat.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "De waarde van veld Phone in de record zoeken of de standaardwaarde retourneren als dat veld niet bestaat.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "Retourneert een record op basis van een lijst veldwaarden en een set velden.",
        "Documentation.LongDescription": "Retourneert een record op basis van een <code>list</code> veldwaarden en een set velden.  De <code>fields</code> kan worden opgegeven als een lijst met tekstwaarden of als een recordtype.  Er wordt een fout gegenereerd als de velden niet uniek zijn.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Een record samenstellen van een lijst veldwaarden en een lijst veldnamen.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Een record samenstellen van een lijst veldwaarden en een recordtype.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "Geeft aan of de opgegeven velden in de record staan.",
        "Documentation.LongDescription": "Geeft aan of in de record <code>record</code> de velden staan die zijn opgegeven in <code>fields</code>, door een logische waarde (true of false) te retourneren.\r\n    Er kunnen met behulp van een lijst meerdere veldwaarden worden opgegeven.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Controleren of in de record CustomerID voorkomt.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "Controleren of in de record de velden CustomerID en Address voorkomen.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "Verwijdert het opgegeven veld of de opgegeven velden uit de invoerrecord.",
        "Documentation.LongDescription": "Retourneert een record die alle velden die in de lijst <code>fields</code> zijn opgegeven, verwijdert uit de invoer <code>record</code>. Als het opgegeven veld niet bestaat, wordt er een uitzondering gegenereerd.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Het veld Price uit de record verwijderen.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "De velden Price en Item uit de record verwijderen.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "Past naamswijzigingen vanuit een lijst toe in de vorm { old, new }.",
        "Documentation.LongDescription": "Retourneert een record na het wijzigen van veldnamen in de invoer <code>record</code> naar de nieuwe veldnamen die zijn opgegeven in de lijst <code>renames</code>. Bij het wijzigen van meerdere veldnamen kan een geneste lijst ({ {old1, new1}, {old2, new2} } worden gebruikt.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Vanuit de record de naam van het veld UnitPrice wijzigen in Price.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "Vanuit de record de naam van het veld UnitPrice wijzigen in Price en de naam van het veld OrderNum in OrderID.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "De volgorde van de opgegeven velden in de nieuwe volgorde wijzigen.",
        "Documentation.LongDescription": "Retourneert een record na het wijzigen van de volgorde van de velden in <code>record</code> in de volgorde van de velden zoals opgegeven in de lijst <code>fieldOrder</code>. De veldnamen worden niet gewijzigd en de velden die niet in <code>fieldOrder</code> staan, veranderen niet van plaats.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "De volgorde van een aantal velden in de record wijzigen.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "Retourneert een record die alleen de opgegeven velden bevat.",
        "Documentation.LongDescription": "Retourneert een record die alleen de velden bevat die in de lijst <code>fields</code> uit de invoer <code>record</code> zijn opgegeven.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "De velden Item en Price in de record selecteren.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "Retourneert een record na het toepassen van de opgegeven transformaties.",
        "Documentation.LongDescription": "Hiermee wordt een record geretourneerd na het toepassen van transformaties die zijn opgegeven in lijst <code>transformOperations</code> tot en met <code>record</code>.\r\n Een of meer velden kunnen worden getransformeerd op een opgegeven tijdstip.\r\n <div>Als er één veld wordt getransformeerd, wordt verwacht dat <code>transformOperations</code> een lijst met twee items is. Het eerste item in <code>transformOperations</code> geeft een veldnaam aan en het tweede item in <code>transformOperations</code> geeft de functie aan die moet worden gebruikt voor de transformatie. Bijvoorbeeld <code>{\"Quantity\", Number.FromText}</code></div>\r\n <div>In het geval er meerdere velden worden getransformeerd, wordt verwacht dat <code>transformOperations</code> een lijst van lijsten is, waarbij elke interne lijst een combinatie is van een veldnaam en een transformatiebewerking. Bijvoorbeeld <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Het veld Prijs converteren naar een getal.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "De velden OrderID en Prijs naar nummers converteren.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "Hiermee wordt een functie geretourneerd die tekst in een lijst met tekst splitst volgens een overgang van het ene type teken naar het andere. De parameters {0} en {1} kunnen een lijst met tekens zijn of een functie die een teken verwerkt en waar/onwaar retourneert.",
        "Documentation.LongDescription": "Hiermee wordt een functie geretourneerd die tekst in een lijst met tekst splitst volgens een overgang van het ene type teken naar het andere. De parameters <code>before</code> en <code>after</code> kunnen een lijst met tekens zijn of een functie die een teken verwerkt en waar/onwaar retourneert.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Splits de invoer wanneer een hoofdletter of kleine letter wordt gevolgd door een cijfer.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "Hiermee wordt de opgegeven SQL-query geconverteerd naar M-code. Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Converteert de opgegeven <code>sql</code>-query naar M-code, met de beschikbare id's die zijn gedefinieerd door <code>environment</code>. Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "Retourneert een opgegeven kolom met gegevens vanuit de tabel als een lijst.",
        "Documentation.LongDescription": "Retourneert de door <code>column</code> opgegeven kolom met gegevens vanuit de tabel <code>table</code> als een lijst.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De gegevens in de kolom [Name] uit de tabel retourneren.",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "Retourneert een lijst met namen van de kolommen die overeenkomen met de opgegeven typen.",
        "Documentation.LongDescription": "Retourneert een lijst met namen van de kolommen uit tabel <code>table</code> die overeenkomen met de opgegeven typen in <code>listOfTypes</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Retourneert de namen van kolommen van het type Number.Type uit de tabel.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "Geeft aan of de opgegeven record als een rij in de tabel wordt weergegeven.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven record <code>row</code> als een rij in de <code>table</code> wordt weergegeven.\r\n    Er kan een optionele parameter <code>equationCriteria</code> worden opgegeven voor het aansturen van de vergelijking tussen de rijen van de tabel.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de tabel de rij bevat.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "Bepalen of de tabel de rij bevat.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "Bepalen of de tabel de rij bevat, waarbij alleen de kolom [Name] wordt vergeleken.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "Geeft aan of alle opgegeven records als rijen in de tabel worden weergegeven.",
        "Documentation.LongDescription": "Geeft aan of alle opgegeven records in de lijst met records <code>rows</code> als rijen in de <code>table</code> worden weergegeven.\r\n    Er kan een optionele parameter <code>equationCriteria</code> worden opgegeven voor het aansturen van de vergelijking tussen de rijen van de tabel.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de tabel alle rijen bevat waarbij alleen de kolom [CustomerID] wordt vergeleken.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Bepalen of de tabel alle rijen bevat.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "Geeft aan of willekeurig welke van de opgegeven records als rijen in de tabel worden weergegeven.",
        "Documentation.LongDescription": "Geeft aan of willekeurig welke van de opgegeven records in de lijst met records <code>rows</code> als rijen in de <code>table</code> worden weergegeven.\r\n    Er kan een optionele parameter <code>equationCriteria</code> worden opgegeven voor het aansturen van de vergelijking tussen de rijen van de tabel.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de tabel <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> de rij <code>[a = 1, b = 2]</code> of <code>[a = 3, b = 5]</code> bevat.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "Bepalen of de tabel <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> de rij <code>[a = 1, b = 3]</code> of <code>[a = 3, b = 5]</code> bevat.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "Bepalen of de tabel <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> de rij <code>[a = 1, b = 3]</code> of <code>[a = 3, b = 5]</code> bevat, waarbij alleen de kolom [a] wordt vergeleken.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "Geeft aan of de tabel de opgegeven kolom of kolommen bevat.",
        "Documentation.LongDescription": "Geeft aan of de <code>table</code> opgegeven kolom of kolommen, <code>columns</code>, bevat. Retourneert <code>waar</code> als de tabel de kolom of kolommen bevat. Als dat niet het geval is, wordt <code>onwaar</code> geretourneerd.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de tabel de kolom [Name] bevat.",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of de tabel de kolommen [Name] en [PhoneNumber] bevat.",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "Geeft aan of alle rijen in de tabel aan de opgegeven voorwaarde voldoen.",
        "Documentation.LongDescription": "Geeft aan of alle rijen in de <code>table</code> aan de opgegeven <code>condition</code> voldoen. Retourneert <code>true</code> als alle rijen overeenkomen en <code>false</code> als dat niet het geval is.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of alle rijwaarden in kolom [a] even waarden zijn in de tabel.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of alle rijwaarden [a = 1, b = 2] zijn in de tabel <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "Geeft aan of er rijen in de tabel aan de opgegeven voorwaarde voldoen.",
        "Documentation.LongDescription": "Geeft aan of er rijen in de <code>table</code> aan de opgegeven <code>condition</code> voldoen. Retourneert <code>true</code> als er rijen overeenkomen en <code>false</code> als dat niet het geval is.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of er rijwaarden in kolom [a] even waarden zijn in de tabel <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "Bepalen of er rijwaarden [a = 1, b = 2] zijn in de tabel <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "Retourneert met behulp van de opgegeven criteria de grootste rij of de standaardwaarde.",
        "Documentation.LongDescription": "Retourneert aan de hand van de <code>comparisonCriteria</code> de grootste rij in de <code>table</code>. Als de tabel leeg is, wordt de optionele waarde <code>default</code> geretourneerd. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De rij met de grootste waarde in kolom [a] in de tabel <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> zoeken.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "De rij met de grootste waarde in kolom [a] in de tabel <code>({})</code> zoeken. Als de rij leeg is, wordt -1 geretourneerd.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "Retourneert met behulp van de opgegeven criteria de kleinste rij of een standaardwaarde.",
        "Documentation.LongDescription": "Retourneert aan de hand van de <code>comparisonCriteria</code> de kleinste rij in de <code>table</code>. Als de tabel leeg is, wordt de optionele waarde <code>default</code> geretourneerd.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De rij met de kleinste waarde in kolom [a] in de tabel zoeken.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "De rij met de kleinste waarde in kolom [a] in de tabel zoeken. Als de rij leeg is, wordt -1 geretourneerd.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "Retourneert de positie of posities van de rij in de tabel.",
        "Documentation.LongDescription": "Hiermee wordt de rijpositie geretourneerd van de eerste herhaling van de <code>row</code> in de opgegeven <code>table</code>. Retourneert -1 als er geen herhaling wordt gevonden.\r\n <ul>\r\n <li><code>table</code>: de invoertabel.</li>\r\n <li><code>row</code>: de rij in de tabel waarvoor de positie moet worden gevonden.</li>\r\n <li><code>occurrence</code>: <i>[Optioneel]</i> Geeft aan welke herhalingen van de rij moeten worden geretourneerd.</li>\r\n <li><code>equationCriteria</code>: <i>[Optioneel]</i> Hiermee stuurt u de vergelijking tussen de tabelrijen aan.</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "De positie zoeken van de eerste instantie van [a = 2, b = 4] in de tabel <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "De positie zoeken van de tweede instantie van [a = 2, b = 4] in de tabel <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "De positie zoeken van alle instanties van [a = 2, b = 4] in de tabel <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "Retourneert de positie of posities van elk van de opgegeven rijen in de tabel.",
        "Documentation.LongDescription": "Hiermee wordt/worden de positie(s) geretourneerd van de rij(en) van de <code>table</code> van de eerste herhaling van de lijst met <code>rows</code>. Retourneert -1 als er geen herhaling wordt gevonden.\r\n <ul>\r\n <li><code>table</code>: de invoertabel.</li>\r\n <li><code>rows</code>: de lijst met rijen in de tabel waarvoor de posities moeten worden gevonden.</li>\r\n <li><code>occurrence</code>: <i>[Optioneel]</i> Geeft aan welke herhalingen van de rij moeten worden geretourneerd.</li>\r\n <li><code>equationCriteria</code>: <i>[Optioneel]</i> Hiermee stuurt u de vergelijking tussen de tabelrijen aan.</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "De positie zoeken van de eerste instantie van [a = 2, b = 4] of [a = 6, b = 8] in de tabel <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "De positie zoeken van alle instanties van [a = 2, b = 4] of [a = 6, b = 8] in de tabel <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "Hiermee wordt de opgegeven tabel gesplitst in een lijst met tabellen met het opgegeven paginaformaat.",
        "Documentation.LongDescription": "Hiermee wordt <code>table</code> gesplitst in een lijst met tabellen, waarbij het eerste element van de lijst een tabel is met de eerste <code>pageSize</code> rijen uit\r\n    de brontabel, het volgende element van de lijst is een tabel met de volgende <code>pageSize</code> rijen uit de brontabel, enzovoort.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met vijf records gesplitst in tabellen die elk twee records bevatten.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "Retourneert een lijst met de eerste N rijen die zijn opgegeven en de resterende rijen.",
        "Documentation.LongDescription": "Hiermee wordt een lijst geretourneerd met twee tabellen: een tabel met de eerste N rijen van <code>table</code> (zoals opgegeven door <code>count</code>) en een tabel met de resterende rijen van <code>table</code>.\r\n\r\nAls de tabellen van de resulterende lijst precies één keer en op volgorde worden genummerd, wordt de functie <code>table</code> slechts één keer genummerd.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Hiermee worden de eerste twee rijen van de tabel geretourneerd en de resterende rijen van de tabel.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "Transformeert de rijen van de tabel met behulp van de opgegeven transformatiefunctie.",
        "Documentation.LongDescription": "Hiermee maakt u een <code>lijst</code> door de bewerking <code>transform</code> toe te passen op elke rij in <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Transformeer de rijen van een tabel in een lijst met getallen.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "Transformeer de rijen van een numerieke tabel naar tekstrecords.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "Hiermee wordt het gedeelte van <code>text</code> na een opgegeven <code>delimiter</code> geretourneerd.\r\n    Een optioneel numeriek item <code>index</code> geeft aan welk exemplaar van <code>delimiter</code> moet worden gebruikt.\r\n    Een optionele lijst <code>index</code> geeft aan welk exemplaar van <code>delimiter</code> moet worden gebruikt en of indexering moet worden uitgevoerd vanaf het begin of het einde van de invoer.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Het gedeelte van 111-222-333 ophalen dat na het (eerste) afbreekstreepje staat.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "Het gedeelte van 111-222-333 ophalen dat na het tweede afbreekstreepje staat.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "Het gedeelte van 111-222-333 ophalen dat na het tweede afbreekstreepje vanaf het einde staat.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "Retourneert het teken op de opgegeven positie.",
        "Documentation.LongDescription": "Retourneert het teken in de tekstwaarde <code>text</code> op positie <code>index</code>. Het eerste teken in de tekst staat op positie 0.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Het teken op positie 4 in de tekenreeks \"Hallo wereld\" zoeken.",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "Hiermee wordt het gedeelte van <code>text</code> voor een opgegeven <code>delimiter</code> geretourneerd.\r\n    Een optioneel numeriek item <code>index</code> geeft aan welk exemplaar van <code>delimiter</code> moet worden gebruikt.\r\n    Een optionele lijst <code>index</code> geeft aan welk exemplaar van <code>delimiter</code> moet worden gebruikt en of indexering moet worden uitgevoerd vanaf het begin of het einde van de invoer.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Het gedeelte van 111-222-333 ophalen dat voor het (eerste) afbreekstreepje staat.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "Het gedeelte van 111-222-333 ophalen dat voor het tweede afbreekstreepje staat.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "Het gedeelte van 111-222-333 ophalen dat voor het tweede afbreekstreepje vanaf het einde staat.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "Retourneert of de tekst al dan niet de subtekenreeks bevat.",
        "Documentation.LongDescription": "Detecteert of <code>text</code> de waarde <code>substring</code> bevat. Retourneert true als de waarde wordt gevonden. Deze functie biedt geen ondersteuning voor jokertekens of reguliere expressies.\r\n      <br>\r\n      <br>\r\n      Het optionele argument <code>comparer</code> kan worden gebruikt om niet-hoofdlettergevoelige vergelijkingen of cultuur- en landspecifieke vergelijkingen op te geven.\r\n      De volgende ingebouwde vergelijkingsfuncties zijn beschikbaar in de formuletaal:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: wordt gebruikt om een hoofdlettergevoelige ordinale vergelijking uit te voeren</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: wordt gebruikt om een niet-hoofdlettergevoelige ordinale vergelijking uit te voeren</li>\r\n        <li> <code>Comparer.FromCulture-</code>: wordt gebruikt om een cultuurbewuste vergelijking uit te voeren</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken of de tekst \"Hallo wereld\" het woord \"Hallo\" bevat.",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of de tekst \"Hallo wereld\" het woord \"hallo\" bevat.",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Zoeken of de tekst \"Hallo wereld\" 'hallo' bevat, met behulp van een niet-hoofdlettergevoelige vergelijkingsfunctie.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "Retourneert de laatste tekens van de tekst.",
        "Documentation.LongDescription": "Retourneert een <code>text</code>waarde die de laatste <code>count</code> tekens van de <code>text</code>waarde <code>text</code> is.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "De laatste vijf tekens van de tekst \"Hallo, Wereld\" ophalen",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "Geeft aan of de tekst op de opgegeven waarde eindigt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven tekst, <code>text</code>, eindigt op de opgegeven waarde, <code>substring</code>. De indicatie is hoofdlettergevoelig.\r\n\r\n <div>\r\n  <code>comparer</code>is een <code>Comparer</code> die wordt gebruikt voor het aansturen van de vergelijking. Vergelijkingsfuncties kunnen worden gebruikt om bij de vergelijking geen onderscheid te hoeven maken tussen hoofdletters en kleine letters of om bij de vergelijking rekening te houden met de cultuur en aard van de omgeving.\r\n </div>\r\n <div>\r\n De volgende ingebouwde vergelijkingsfuncties kunnen in formules worden gebruikt:\r\n </div>\r\n <ul>\r\n <li><code>Comparer.Ordinal</code>: waarmee exacte ordinale vergelijkingen kunnen worden uitgevoerd</li>\r\n <li><code>Comparer.OrdinalIgnoreCase</code>: waarmee exacte ordinale vergelijkingen kunnen worden uitgevoerd waarbij geen onderscheid wordt gemaakt tussen hoofdletters en kleine letters</li>\r\n <li> <code>Comparer.FromCulture</code>: waarmee vergelijkingen met inachtneming van de cultuur kunnen worden uitgevoerd</li>\r\n </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Controleren of \"Hallo, Wereld\" eindigt op \"wereld\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "Controleren of \"Hallo, Wereld\" eindigt op \"Wereld\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "Retourneert opgemaakte tekst op basis van een tekenreeks en argumenten voor opmaak.",
        "Documentation.LongDescription": "Hiermee wordt opgemaakte tekst geretourneerd waarbij <code>arguments</code> uit een lijst of record wordt toegepast op een notatietekenreeks <code>formatString</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met getallen opmaken.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "Verschillende gegevenstypen van een record opmaken op basis van de cultuur Engels (Verenigde Staten).",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "De subtekenreeks tot een bepaalde lengte retourneren.",
        "Documentation.LongDescription": "<code>count</code> tekens retourneren of retourneren tot het einde van <code>text</code>; bij de verschuiving <code>start</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "De subtekenreeks in de tekst \"Hallo Wereld\" opzoeken die begint bij index 6 en vijf tekens omvat.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "De subtekenreeks in de tekst 'Hallo Wereld' opzoeken vanaf index 6 tot het einde.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "Retourneert tekst met een opgegeven lengte door de opgegeven tekst aan het einde op te vullen.",
        "Documentation.LongDescription": "Hiermee wordt een <code>text</code>-waarde geretourneerd die is aangevuld tot de lengte <code>count</code> door spaties in te voegen aan het einde van de tekstwaarde <code>text</code>.\r\n Een optioneel teken <code>character</code> kan worden gebruikt voor het opgeven van het teken dat wordt gebruikt voor de aanvulling. Het standaardteken voor aanvulling is een spatie.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Een tekstwaarde aan het einde opvullen tot een lengte van tien tekens.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "Een tekstwaarde aan het einde opvullen met het teken \"|\" zodat de tekst tien tekens lang is.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "Retourneert tekst met een opgegeven lengte door de opgegeven tekst aan het begin op te vullen.",
        "Documentation.LongDescription": "Hiermee wordt een <code>text</code>-waarde geretourneerd die is aangevuld tot de lengte <code>count</code> door spaties in te voegen aan het begin van de tekstwaarde <code>text</code>.\r\n Een optioneel teken <code>character</code> kan worden gebruikt voor het opgeven van het teken dat wordt gebruikt voor de aanvulling. Het standaardteken voor aanvulling is een spatie.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Een tekstwaarde aan het begin opvullen tot een lengte van tien tekens.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "Een tekstwaarde aan het begin opvullen met het teken \"|\" zodat de tekst tien tekens lang is.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "Retourneert de eerste positie van de waarde (-1 als er niets worden gevonden).",
        "Documentation.LongDescription": "Hiermee wordt de positie van de opgegeven herhaling geretourneerd van de tekstwaarde <code>substring</code> die is gevonden in <code>text</code>.\r\n Er kan een optionele parameter <code>occurrence</code> worden gebruikt om op te geven welke herhalingspositie moet worden geretourneerd (standaardwaarde is eerste herhaling).\r\n Retourneert -1 als <code>substring</code> niet is gevonden.\r\n\r\n <div>\r\n  <code>comparer</code> is een <code>Comparer</code> die kan worden gebruikt voor het aansturen van de vergelijking. Vergelijkingsfuncties kunnen worden gebruikt om bij de vergelijking geen onderscheid te hoeven maken tussen hoofdletters en kleine letters of om bij de vergelijking rekening te houden met de cultuur en aard van de omgeving.\r\n </div>\r\n <div>\r\n De volgende ingebouwde vergelijkingsfuncties kunnen in formules worden gebruikt:\r\n </div>\r\n <ul>\r\n <li><code>Comparer.Ordinal</code>: waarmee exacte ordinale vergelijkingen kunnen worden uitgevoerd</li>\r\n <li><code>Comparer.OrdinalIgnoreCase</code>: waarmee exacte ordinale vergelijkingen kunnen worden uitgevoerd waarbij geen onderscheid wordt gemaakt tussen hoofdletters en kleine letters</li>\r\n <li> <code>Comparer.FromCulture</code>: waarmee vergelijkingen met inachtneming van de cultuur kunnen worden uitgevoerd</li> \r\n </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "De positie ophalen van de eerste instantie van \"Wereld\" in de tekst \"Hallo, Wereld! Hallo, Wereld!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "De positie ophalen van de laatste instantie van \"Wereld\" in de tekst \"Hallo, Wereld! Hallo, Wereld!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "Retourneert de eerste positie in de tekstwaarde van een vermeld teken (-1 als er niets worden gevonden).",
        "Documentation.LongDescription": "Retourneert de eerste positie van een willekeurig teken in de lijst <code>characters</code>, die is gevonden in <code>text</code>.\n    Een optionele parameter<code>occurrence</code> kan worden gebruikt om op te geven welke exemplaarpositie moet worden geretourneerd.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Zoek de eerste positie van 'W' of 'H' in de tekst 'Hallo, wereld!'.",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "Zoek alle posities van 'W' of 'H' in de tekst 'Hallo, wereld!'.",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "Retourneert de subtekenreeks die is gevonden bij verschuiving.",
        "Documentation.LongDescription": "Hiermee wordt de subreeks van de tekst <code>text</code> geretourneerd die is aangetroffen bij de offset <code>offset</code>.\r\n Een optionele parameter, <code>count</code>, kan worden opgenomen voor het opgeven van het aantal te retourneren tekens. Retourneert een fout als er onvoldoende tekens zijn.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "De subtekenreeks in de tekst \"Hallo Wereld\" opzoeken die begint bij index 6.",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "De subtekenreeks in de tekst \"Hallo Wereld Hallo\" opzoeken die begint bij index 6 en vijf tekens omvat.",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "Verwijdert alle instanties van het opgegeven teken of de opgeven lijst met tekens uit de invoertekstwaarde.",
        "Documentation.LongDescription": "Retourneert een kopie van de tekstwaarde <code>text</code> waarbij alle tekens vanaf <code>removeChars</code> worden verwijderd.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "De tekens , en ; verwijderen uit de tekstwaarde.",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "Verwijdert een aantal tekens vanaf de opgegeven verschuiving.",
        "Documentation.LongDescription": "Hiermee wordt een kopie geretourneerd van de tekstwaarde <code>text</code> met waarbij tekens van positie <code>offset</code> zijn verwijderd.\r\n Een optionele parameter, <code>count</code> kan worden gebruikt voor het opgeven van het aantal tekens dat moet worden verwijderd. De standaardwaarde van <code>count</code> is 1. Positiewaarden beginnen bij 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Eén teken verwijderen uit de tekstwaarde \"ABEFC\" op positie 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "Twee tekens verwijderen uit de tekstwaarde \"ABEFC\", te beginnen bij positie 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "Retourneert een tekstwaarde die bestaat uit de invoertekst en die een bepaalde aantal malen wordt herhaald.",
        "Documentation.LongDescription": "Retourneert een tekstwaarde die bestaat uit de invoertekst <code>text</code> en die <code>count</code> malen wordt herhaald.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "De tekst \"een\" vijf keer herhalen.",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "De tekst \"hallowereld\" drie keer herhalen.",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "Hiermee worden alle instanties van het opgegeven teken of de lijst met tekens uit de invoertekstwaarde geselecteerd.",
        "Documentation.LongDescription": "Hiermee wordt een kopie van de tekstwaarde <code>text</code> geretourneerd waarbij alle tekens die niet in <code>selectChars</code> voorkomen worden verwijderd.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Alle tekens in het bereik a tot z selecteren in de tekstwaarde.",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "Splitst tekst in een lijst tekstwaarden op basis van een opgegeven scheidingsteken.",
        "Documentation.LongDescription": "Retourneert een lijst met tekstwaarden die het resultaat is van het splitsen van een tekstwaarde <code>text</code> op basis van het opgegeven scheidingsteken, <code>separator</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Een lijst maken van de volgende tekstwaarde met het scheidingsteken \"|\": \"Naam|Adres|Telefoonnummer\".",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "Retourneert een lijst met tekstwaarden, en splitst bij elk van de tekens in het scheidingsteken.",
        "Documentation.LongDescription": "Retourneert een lijst met tekstwaarden die het resultaat is van het splitsen van een tekstwaarde <code>text</code> op basis van een teken in het opgegeven scheidingsteken, <code>separators</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Een lijst maken van de tekstwaarde \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\".",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "Retourneert het begin van de tekst.",
        "Documentation.LongDescription": "Retourneert de eerste <code>count</code> tekens van <code>text</code> als een tekstwaarde.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "De eerste vijf tekens van de tekst \"Hallo, Wereld\" ophalen",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "Geeft aan of de tekst met een opgegeven waarde begint.",
        "Documentation.LongDescription": "Hiermee wordt true geretourneerd als de tekstwaarde <code>text</code> begint met de tekstwaarde <code>substring</code>.\r\n <ul>\r\n <li><code>text</code>: <i></i> Een <code>text</code>-waarde waarnaar moet worden gezocht</li>\r\n <li><code>substring</code>: <i></i> Een <code>text</code>-waarde die de subtekenreeks is waarnaar moet worden gezocht in <code>substring</code></li>\r\n <li><code>comparer</code>: <i>[Optioneel]</i>een <code>Comparer</code> die kan worden gebruikt voor het aansturen van de vergelijking. Bijvoorbeeld <code>Comparer.OrdinalIgnoreCase</code> kan worden gebruikt om zoekopdrachten uit te voeren die niet hoofdlettergevoelig zijn</li>\r\n      </ul>\r\n      <div>\r\n         <code>comparer</code> is een <code>Comparer</code> die wordt gebruikt om de vergelijking te bepalen. Vergelijkingsfuncties kunnen worden gebruikt om bij de vergelijking geen onderscheid te hoeven maken tussen hoofdletters en kleine letters of om bij de vergelijking rekening te houden met de cultuur en aard van de omgeving.\r\n </div>\r\n <div>\r\n De volgende ingebouwde vergelijkingsfuncties kunnen in formules worden gebruikt:\r\n </div>\r\n <ul>\r\n <li><code>Comparer.Ordinal</code>: waarmee exacte ordinale vergelijkingen kunnen worden uitgevoerd</li>\r\n <li><code>Comparer.OrdinalIgnoreCase</code>: waarmee exacte ordinale vergelijkingen die niet hoofdlettergevoelig zijn</li>\r\n <li> <code>Comparer.FromCulture</code>: waarmee vergelijkingen met inachtneming van de cultuur kunnen worden uitgevoerd</li>\r\n </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Controleren of de tekst \"Hallo, Wereld\" begint met \"hallo\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Controleren of de tekst \"Hallo, Wereld\" begint met \"Hallo\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "Retourneert een type dat functies met specifieke typebeperkingen voor parameters en retouren vertegenwoordigt.",
        "Documentation.LongDescription": "Maakt een <code>functietype</code> van <code>signature</code>, een record van <code>ReturnType</code> en <code>Parameters</code>, en <code>min</code>, het minimumaantal argumenten dat is vereist om de functie aan te roepen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt het type voor een functie gemaakt waarbij een cijferparameter met de naam X wordt gebruikt en een getal wordt geretourneerd.",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "Retourneert een type dat records met specifieke typebeperkingen voor velden vertegenwoordigt.",
        "Documentation.LongDescription": "Retourneert een type dat records met specifieke typebeperkingen voor velden vertegenwoordigt.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Dynamisch een tabeltype genereren.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "Hiermee wordt bepaald of een waarde van het eerste type altijd compatibel is met het tweede type.",
        "Documentation.LongDescription": "Hiermee wordt bepaald of de waarde van <code>type1</code> altijd compatibel is met <code>type2</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt bepaald of een waarde van het type Getal altijd ook als type kan worden behandeld.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "Hiermee wordt bepaald of een waarde van het type Altijd ook als type Getal kan worden behandeld.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "Hiermee worden de facetten van een type vervangen.",
        "Documentation.LongDescription": "Hiermee worden de facetten van <code>type</code> vervangen door de facetten in de record <code>facets</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "Retourneert een nieuw tabeltype met alle sleutels die door de opgeven lijst met sleutels worden vervangen.",
        "Documentation.LongDescription": "Retourneert een nieuw tabeltype met alle sleutels die zijn vervangen door de opgegeven lijst met sleutels.<br>\r\n    <br>\r\n    Elke sleutel wordt gedefinieerd met behulp van een record in de volgende vorm:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: een lijst met de namen van kolommen waarmee de sleutel\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> als de sleutel de primaire sleutel van de tabel is; anders <code>false</code>\r\n      </li>\r\n    </ul>\r\n    De opgegeven lijst met sleutels wordt gevalideerd om ervoor te zorgen dat er niet meer dan één primaire sleutel is gedefinieerd en dat alle namen van sleutelkolommen bestaan in het tabeltype.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Vervang de sleutelgegevens voor een tabeltype.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "Wis de sleutelgegevens die eerder zijn gedefinieerd voor een tabeltype.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "Retourneert het type van een kolom in een tabel.",
        "Documentation.LongDescription": "Retourneert het type van de kolom <code>column</code> in het tabeltype <code>tableType</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "Retourneert een absolute URI die de combinatie is van de basis-URI van de invoer en een relatieve URI.",
        "Documentation.LongDescription": "Retourneert een absolute URI die de combinatie is van de <code>baseUri</code> van de invoer en een <code>relativeUri</code>.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "Retourneert de som van de twee waarden.",
        "Documentation.LongDescription": "Retourneert de som van <code>value1</code> en <code>value2</code>. Er kan een optionele parameter <code>precision</code> worden opgegeven. Standaard wordt <code>Precision.Double</code> gebruikt.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "Retourneert de waarde als deze compatibel is met het opgegeven type.",
        "Documentation.LongDescription": "Retourneert de waarde als deze compatibel is met het opgegeven type. Dit is gelijk aan de operator 'is' in M, met de uitzondering dat het id-typeverwijzingen zoals Number.Type kan accepteren.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Een getal converteren naar een getal.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "Poging om een tekstwaarde te converteren naar een getal.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "Hiermee wordt -1, 0 of 1 geretourneerd op basis van of de eerste waarde kleiner is dan, gelijk is aan of groter is dan de tweede.",
        "Documentation.LongDescription": "Hiermee wordt -1, 0 of 1 geretourneerd op basis van of de eerste waarde kleiner is dan, gelijk is aan of groter is dan de tweede.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "Retourneert het resultaat van het delen van de eerste waarde door de tweede waarde.",
        "Documentation.LongDescription": "Retourneert het resultaat van het delen van <code>value1</code> door <code>value2</code>. Er kan een optionele parameter <code>precision</code> worden opgegeven. Standaard wordt <code>Precision.Double</code> gebruikt.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "Retourneert of twee waarden gelijk zijn.",
        "Documentation.LongDescription": "Retourneert 'true' wanneer de waarde <code>value1</code> gelijk is aan de waarde <code>value2</code> en 'false' als dit niet het geval is.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "Hiermee wordt bepaald of een waarde compatibel is met het opgegeven type.",
        "Documentation.LongDescription": "Hiermee wordt bepaald of een waarde compatibel is met het opgegeven type. Dit is gelijk aan de operator 'is' in M, met de uitzondering dat het id-typeverwijzingen zoals Number.Type kan accepteren.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Vergelijk twee manieren om te bepalen of een getal compatibel is met het type Getal.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "Retourneert het product van de twee waarden.",
        "Documentation.LongDescription": "Retourneert het product van de vermenigvuldiging van <code>value1</code> met <code>value2</code>. Er kan een optionele parameter <code>precision</code> worden opgegeven. Standaard wordt <code>Precision.Double</code> gebruikt.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "Hiermee evalueert u een query aan de hand van een doel.",
        "Documentation.LongDescription": "<p>Hiermee wordt <code>query</code> voor <code>target</code> geëvalueerd met de parameters die zijn opgegeven in <code>parameters</code> en de opties die zijn opgegeven in <code>options</code>.</p>\r\n<p>De uitvoer van de query wordt gedefinieerd door <code>target</code>.</p>\r\n<p><code>target</code> biedt context voor de bewerking die wordt beschreven door <code>query</code>.</p>\r\n<p><code>query</code> bevat een beschrijving van de query die moet worden uitgevoerd voor <code>target</code>. <code>query</code> wordt uitgedrukt op een manier die specifiek is voor <code>target</code> (bijvoorbeeld een T-SQL-instructie).</p>\r\n<p>De optionele <code>parameters</code>-waarde kan een lijst of record bevatten waarmee de parameterwaarden worden doorgegeven die worden verwacht door <code>query</code>.</p>\r\n<p>De optionele <code>options</code>-record bevat mogelijk opties die van invloed zijn op het evaluatiegedrag van <code>query</code> voor <code>target</code>. Deze opties zijn specifiek voor <code>target</code>.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "Retourneert of twee waarden gelijk zijn.",
        "Documentation.LongDescription": "Retourneert 'null' als een van de argumenten '<code>value1</code>', '<code>value2</code>' null is en anders het equivalent van Value.Equals als dat niet het geval is.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "Vervangt de informatie over de metagegevens van de invoer.",
        "Documentation.LongDescription": "Vervangt de informatie over de metagegevens van de invoer.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "Vervangt het type van de waarde.",
        "Documentation.LongDescription": "Vervangt het type van de <code>value</code>door de opgegeven <code>type</code>.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Vervang het standaardtype van een record door een specifieker type.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "Retourneert het verschil van de twee waarden.",
        "Documentation.LongDescription": "Retourneert het verschil van <code>value1</code> en <code>value2</code>. Er kan een optionele parameter <code>precision</code> worden opgegeven. Standaard wordt <code>Precision.Double</code> gebruikt.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "Hiermee wordt een actie gemaakt. Wanneer de actie wordt uitgevoerd, worden de resultaten van het uitvoeren van een HTTP-aanvraag geretourneerd als een binaire waarde.",
        "Documentation.LongDescription": "Hiermee maakt u een actie die, wanneer deze wordt uitgevoerd, de resultaten retourneert van het uitvoeren van een <code>method</code>-aanvraag voor <code>url</code> met behulp van HTTP als binaire waarde.\r\n    Er kan een optionele recordparameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>Query</code> : Via een programma queryparameters aan de URL toevoegen zonder gebruik van escapetekens.</li>\r\n<li><code>ApiKeyName</code> : Als de doelsite een notatie van een API-sleutel bevat, kan deze parameter worden gebruikt om de naam (niet de waarde) op te geven van de sleutelparameter die moet worden gebruikt in de URL. De daadwerkelijke sleutelwaarde wordt in de referentie gegeven.</li>\r\n<li><code>Headers</code> : Als deze waarde wordt opgegeven als een record, worden extra headers toegevoegd aan een HTTP-aanvraag.</li>\r\n<li><code>Timeout</code> : Als deze waarde wordt opgegeven als tijdsduur, wordt de time-out voor een HTTP-aanvraag gewijzigd. De standaardwaarde is 100 seconden.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Als u deze waarde opgeeft als een lijst, worden deze HTTP-headersleutels uitgesloten van de berekening voor het opslaan van gegevens in het cachegeheugen.</li>\r\n<li><code>IsRetry</code> : Als deze logische waarde wordt opgegeven als true, worden bestaande antwoorden in de cache genegeerd bij het ophalen van gegevens.</li>\r\n<li><code>ManualStatusHandling</code> : Als deze waarde wordt opgegeven als een lijst, wordt voorkomen dat de ingebouwde verwerking wordt uitgevoerd voor HTTP-aanvragen waarvoor het antwoord een van deze statuscodes bevat.</li>\r\n<li><code>RelativePath</code> : Als deze waarde wordt opgegeven als tekst, wordt de waarde toegevoegd aan de basis-URL voordat de aanvraag wordt uitgevoerd.</li>\r\n<li><code>Content</code> : Als deze waarde wordt opgegeven, wordt de inhoud ervan de hoofdtekst van de HTTP-aanvraag.</li>\r\n</ul>\r\n\r\n    <br>\r\n    Deze functie is in de meeste contexten uitgeschakeld. Overweeg in plaats daarvan Web.Contents of Web.Headers te gebruiken.\r\n    ",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "Een GET-aanvraag uitvoeren op Bing.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "Voer de URL van het Azure Enterprise REST API-eindpunt in dat is gekoppeld aan uw inschrijving",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Hiermee worden de binaire resultaten van de aanroep naar de opgegeven URL voor de Azure Enterprise API geretourneerd.",
        "Documentation.Examples": [
          {
            "Description": "De resultaten van een specifiek rapport retourneren met de functie AzureEnterprise.Contents.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "Tabel"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "Dit retourneert de inhoud van de opgegeven blob van een Azure-opslagkluis.",
        "Documentation.LongDescription": "Hiermee wordt de inhoud van de blob op de URL <code>url</code> geretourneerd uit een Azure-opslagkluis. <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>BlockSize</code> : Het aantal bytes dat moet worden gelezen voordat er op de gegevensverbruiker wordt gewacht. De standaardwaarde is 4 MB.</li>\r\n<li><code>RequestSize</code> : Het aantal bytes dat moet worden gelezen in &#233;&#233;n HTTP-aanvraag bij de server. De standaardwaarde is 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : De optie ConcurrentRequests ondersteunt het sneller downloaden van gegevens via het opgeven van het aantal aanvragen dat parallel moet worden uitgevoerd, ten koste van het geheugengebruik. Het vereiste geheugen is (ConcurrentRequest * RequestSize). De standaardwaarde is 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "Hiermee wordt de inhoud van het opgegeven bestand geretourneerd uit een Azure Data Lake Storage-bestandssysteem.",
        "Documentation.LongDescription": "Hiermee wordt de inhoud van het bestand op de URL <code>url</code> geretourneerd uit een Azure Data Lake Storage-bestandssysteem. <code>options</code> kan worden opgegeven om de volgende opties te bepalen:\r\n    <ul>\r\n<li><code>BlockSize</code> : Het aantal bytes dat moet worden gelezen voordat er op de gegevensverbruiker wordt gewacht. De standaardwaarde is 4 MB.</li>\r\n<li><code>RequestSize</code> : Het aantal bytes dat moet worden gelezen in &#233;&#233;n HTTP-aanvraag bij de server. De standaardwaarde is 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : De optie ConcurrentRequests ondersteunt het sneller downloaden van gegevens via het opgeven van het aantal aanvragen dat parallel moet worden uitgevoerd, ten koste van het geheugengebruik. Het vereiste geheugen is (ConcurrentRequest * RequestSize). De standaardwaarde is 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "Retourneert de geschatte lengte van het binaire bestand.",
        "Documentation.LongDescription": "Retourneert de geschatte lengte van <code>binary</code>of een fout als de gegevensbron geen geschatte lengte ondersteunt.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "De geschatte lengte van de binaire waarde ophalen.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "Buffert de binaire waarde in het geheugen.",
        "Documentation.LongDescription": "Buffert de binaire waarde in het geheugen. Het resultaat van deze aanroep is een stabiele binaire waarde, wat inhoudt dat deze een deterministische lengte en volgorde van de bytes heeft.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Een stabiele versie van de binaire waarde maken.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "Combineert een lijst met binaire waarden tot een enkele binaire waarde.",
        "Documentation.LongDescription": "Combineert een lijst met binaire waarden tot een enkele binaire waarde.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "Maakt een binaire waarde van de opgegeven waarde",
        "Documentation.LongDescription": "Hiermee wordt een <code>binary</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, retourneert <code>Binary.From</code> <code>null</code>. Als de opgegeven waarde <code>value</code> <code>binary</code> is, wordt <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>binary</code>-waarde:\r\n <ul>\r\n <li><code>text</code>: een <code>binary</code>-waarde van de tekstweergave. Raadpleeg <code>Binary.FromText</code> voor meer informatie.</li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt een fout geretourneerd.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "De <code>binary</code> waarde van <code>\"1011\"</code> ophalen.",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "Zet een lijst met getallen om in een binaire waarde.",
        "Documentation.LongDescription": "Zet een lijst met getallen om in een binaire waarde.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "Decodeert gegevens van tekst naar binair.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van het omzetten van een tekstwaarde <code>text</code> naar een binaire waarde (lijst met <code>number</code>). <code>encoding</code> kan worden opgegeven om de codering aan te geven die in de tekstwaarde is gebruikt.\r\n De volgende <code>BinaryEncoding</code>-waarden kunnen worden gebruikt voor <code>encoding</code>.\r\n <ul>\r\n <li><code>BinaryEncoding.Base64</code>: Base 64-codering</li>\r\n <li><code>BinaryEncoding.Hex</code>: hexadecimale codering</li>\r\n </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "\"1011\" decoderen naar binair.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "\"1011\" decoderen naar binair met hexadecimale codering.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "Leest de binaire stroom en probeert het inhoudstype en de indelingsinformatie van de stroom vast te stellen.",
        "Documentation.LongDescription": "Hiermee wordt een record met het veld Content.Type geretourneerd dat het afgeleide MIME-type bevat.\r\n Als het afgeleide inhoudstype text/* is en er een codetabel voor coderen wordt gedetecteerd, wordt ook het veld Content.Encoding geretourneerd, dat de codering van de stroom bevat.\r\n Als het afgeleide inhoudstype text/csv is en de indeling scheidingstekens bevat, wordt ook het veld Csv.PotentialDelimiter geretourneerd, dat een tabel voor het analyseren van potentiële scheidingstekens bevat.\r\n Als het afgeleide inhoudstype text/csv is en de indeling een vaste breedte heeft, wordt ook het veld Csv.PotentialPositions geretourneerd, dat een lijst bevat voor het analyseren van mogelijke kolomposities met een vaste breedte.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "Retourneert het aantal tekens.",
        "Documentation.LongDescription": "Retourneert het aantal tekens.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "Zet een binaire waarde om in een lijst met getallen.",
        "Documentation.LongDescription": "Zet een binaire waarde om in een lijst met getallen.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "Codeert binaire gegevens naar tekst.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van het omzetten van een binaire lijst met getallen <code>binary</code> naar een tekstwaarde. <code>encoding</code> kan optioneel worden opgegeven om de codering aan te geven die in de geproduceerde tekstwaarde moet worden gebruikt.\r\n De volgende <code>BinaryEncoding</code>-waarden kunnen worden gebruikt voor <code>encoding</code>.\r\n <ul>\r\n <li><code>BinaryEncoding.Base64</code>: Base 64-codering</li>\r\n <li><code>BinaryEncoding.Hex</code>: hexadecimale codering</li>\r\n </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "Hiermee maakt u een gewijzigde foutrecord die geen terugval activeert wanneer deze wordt gegenereerd door een handler die is gedefinieerd in een weergave (via Binary.View).",
        "Documentation.LongDescription": "Hiermee maakt u een gewijzigde foutrecord op basis van <code>errorRecord</code> die geen terugval activeert wanneer deze wordt gegenereerd door een handler die is gedefinieerd in een weergave (via Binary.View).",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "Hiermee wordt een functie gemaakt die kan worden onderschept door een handler die is gedefinieerd in een weergave (via Binary.View).",
        "Documentation.LongDescription": "<p>Hiermee wordt een functie op basis van <code>function</code> gemaakt die kan worden verwerkt in een weergave die is gemaakt met <code>Binary.View</code>.</p>\r\n<p>De handler <code>OnInvoke</code> van <code>Binary.View</code> kan worden gebruikt om een handler voor de weergavefunctie te definiëren.</p>\r\n<p>Net als bij handlers voor ingebouwde bewerkingen, wordt <code>function</code> boven op de weergave toegepast als de handler <code>OnInvoke</code> niet is opgegeven, als deze de weergavefunctie niet verwerkt of als een fout wordt geactiveerd door de handler.</p>\r\n<p>Raadpleeg de gepubliceerde documentatie over de aangepaste connector van Power Query voor een completere beschrijving van <code>Binary.View</code> en aangepaste weergavefuncties.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "Een binaire indeling die een 64-bits geheel getal met teken leest dat is gecodeerd met een 7-bits codering met variabele lengte.",
        "Documentation.LongDescription": "Een binaire indeling die een 64-bits geheel getal met teken leest dat is gecodeerd met een 7-bits codering met variabele lengte.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "Een binaire indeling die een 64-bits geheel getal zonder teken leest dat is gecodeerd met een 7-bits codering met variabele lengte.",
        "Documentation.LongDescription": "Een binaire indeling die een 64-bits geheel getal zonder teken leest dat is gecodeerd met een 7-bits codering met variabele lengte.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "Een binaire indeling die een 8-bits geheel getal zonder teken leest.",
        "Documentation.LongDescription": "Een binaire indeling die een 8-bits geheel getal zonder teken leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "Een binaire indeling die een .NET decimale waarde met een lengte van 16 bytes leest.",
        "Documentation.LongDescription": "Een binaire indeling die een .NET decimale waarde met een lengte van 16 bytes leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "Een binaire indeling die een IEEE zwevende-kommagetal met dubbele precisie met een lengte van 8 bytes leest.",
        "Documentation.LongDescription": "Een binaire indeling die een IEEE zwevende-kommagetal met dubbele precisie met een lengte van 8 bytes leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "Retourneert een binaire indeling die een reeks items leest en een lijst retourneert.",
        "Documentation.LongDescription": "Retourneert een binaire indeling die een reeks items leest en een <code>list</code> retourneert.  De parameter <code>binaryFormat</code> specificeert de binaire indeling van elk item.  Er zijn drie manieren voor het vaststellen van het aantal items dat wordt gelezen: <ul><li>Als de <code>countOrCondition</code> niet is opgegeven, leest de binaire indeling tot er geen items meer zijn.</li><li>Als de <code>countOrCondition</code> een getal is, leest de binaire indeling dat aantal items.</li><li>Als de <code>countOrCondition</code> een functie is, dan wordt die functie aangeroepen voor elk item dat wordt gelezen.  De functie retourneert de waarde 'true' op om door te gaan en 'false' om met het lezen van items te stoppen.  Het laatste item staat in de lijst.</li><li>Als de <code>countOrCondition</code> een binaire indeling is, dan wordt verwacht dat het aantal items aan de lijst voorafgaat en dat de opgegeven indeling wordt gebruikt om dit aantal te lezen.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "Bytes lezen tot het einde van de gegevens.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Twee bytes lezen.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Bytes lezen tot de bytewaarde groter is dan of gelijk is aan twee.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "Een binaire indeling die nul bytes leest en null retourneert.",
        "Documentation.LongDescription": "Een binaire indeling die nul bytes leest en null retourneert.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "Retourneert een binaire indeling die een record leest.",
        "Documentation.LongDescription": "Retourneert een binaire indeling die een record leest.  De parameter <code>record</code> specificeert de indeling van de record.  Elk veld in de record kan een andere binaire indeling hebben.  Als een veld een waarde bevat die geen waarde van een binaire indeling is, worden er voor dat veld geen gegevens gelezen en wordt de veldwaarde teruggestuurd naar het resultaat.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "Een record lezen dat één 16-bits geheel getal en één 32-bits geheel getal bevat.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "Een binaire indeling die een 16-bits geheel getal met teken leest.",
        "Documentation.LongDescription": "Een binaire indeling die een 16-bits geheel getal met teken leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "Een binaire indeling die een 32-bits geheel getal met teken leest.",
        "Documentation.LongDescription": "Een binaire indeling die een 32-bits geheel getal met teken leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "Een binaire indeling die een 64-bits geheel getal met teken leest.",
        "Documentation.LongDescription": "Een binaire indeling die een 64-bits geheel getal met teken leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "Een binaire indeling die een IEEE zwevende-kommagetal met enkele precisie met een lengte van 4 bytes leest.",
        "Documentation.LongDescription": "Een binaire indeling die een IEEE zwevende-kommagetal met enkele precisie met een lengte van 4 bytes leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "Retourneert een binaire indeling die een tekstwaarde leest.",
        "Documentation.LongDescription": "Retourneert een binaire indeling die een tekstwaarde leest.  <code>length</code> geeft het aantal bytes aan dat moet worden gedecodeerd of de binaire indeling van de lengte die voorafgaat aan de tekst.  De optionele waarde <code>encoding</code> specificeert de codering van de tekst.  Als de waarde <code>encoding</code> niet is opgegeven, wordt de codering bepaald op basis van de byte-volgordemarkeringen voor Unicode.  Als er geen byte-volgordemarkeringen aanwezig zijn, wordt <code>TextEncoding.Utf8</code> gebruikt.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "Twee bytes als ASCII-tekst decoderen.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "ASCII-tekst decoderen waarbij de lengte van de tekst in bytes vóór de tekst verschijnt als een byte.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "Een binaire indeling die een 16-bits geheel getal zonder teken leest.",
        "Documentation.LongDescription": "Een binaire indeling die een 16-bits geheel getal zonder teken leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "Een binaire indeling die een 32-bits geheel getal zonder teken leest.",
        "Documentation.LongDescription": "Een binaire indeling die een 32-bits geheel getal zonder teken leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "Een binaire indeling die een 64-bits geheel getal zonder teken leest.",
        "Documentation.LongDescription": "Een binaire indeling die een 64-bits geheel getal zonder teken leest.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "Hiermee maakt u een 8-bits geheel getal op basis van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een 8-bits <code>number</code>-waarde geretourneerd als geheel getal vanuit de opgegeven <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Byte.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code> is binnen het bereik van een 8-bits geheel getal zonder een fractioneel deel, wordt <code>value</code> geretourneerd. Als het cijfer een fractioneel deel heeft, wordt het afgerond volgens de opgegeven afrondingsmodus. De standaardafrondingsmodus is <code>RoundingMode.ToEven</code>. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>number</code> met behulp van <code>Number.FromText</code>. Raadpleeg <code>Number.Round</code> voor de beschikbare afrondingsmodi. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De 8-bits <code>number</code>-waarde als geheel getal uit <code>\"4\"</code> ophalen.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "De 8-bits <code>number</code>-waarde als geheel getal uit <code>\"4.5\"</code> ophalen met <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "Converteert een getal naar tekst.",
        "Documentation.LongDescription": "Retourneert het tekenequivalent van het getal.<br>\r\n    <br>\r\n    De opgegeven <code>number</code> moet een 21-bits Unicode-codepunt zijn.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Een getal naar de equivalente tekenwaarde converteren.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "Een teken naar een getal converteren en weer terug.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "Het hexadecimale codepunt voor de emoticon 'grijnzend gezicht' converteren naar het bijbehorende UTF-16-surrogaatpaar.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "Converteert een teken naar een getalwaarde.",
        "Documentation.LongDescription": "Retourneert het getalequivalent van de <code>character</code>.<br>\r\n    <br>\r\n    Het resultaat is het 21 bits Unicode-codepunt dat wordt vertegenwoordigd door het opgegeven teken of surrogaatpaar.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Een teken naar de overeenkomstige getalwaarde converteren.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "Het UTF-16-surrogaatpaar voor de emoticon 'grijnzend gezicht' converteren naar het equivalente hexadecimale codepunt.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "Retourneert een functie die een lijst met tekst combineert met behulp van het opgegeven scheidingsteken.",
        "Documentation.LongDescription": "Retourneert een functie die een lijst met tekstwaarden combineert tot één tekstwaarde met behulp van het opgegeven scheidingsteken.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met tekstwaarden combineren met behulp van een puntkommascheidingsteken.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "Combineer de tekst van twee kolommen met behulp van een kommascheidingsteken en aanhalingstekens in CSV-stijl.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "Retourneert een functie die een lijst met tekst combineert met behulp van een reeks scheidingstekens.",
        "Documentation.LongDescription": "Retourneert een functie die een lijst met tekstwaarden combineert tot één tekstwaarde met behulp van een reeks scheidingstekens.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met tekstwaarden combineren met behulp van een reeks scheidingstekens.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "Retourneert een functie die een lijst met tekst combineert met behulp van de opgegeven lengten.",
        "Documentation.LongDescription": "Retourneert een functie die een lijst met tekstwaarden combineert tot één tekstwaarde met behulp van de opgegeven lengten.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met tekstwaarden combineren door het opgegeven aantal tekens uit elke invoerwaarde te extraheren.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "Een lijst met tekstwaarden combineren door het opgegeven aantal tekens uit te pakken, nadat u het resultaat eerst vooraf hebt ingevuld met de sjabloontekst.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "Retourneert een functie die een lijst met tekst combineert met behulp van de opgegeven uitvoerposities.",
        "Documentation.LongDescription": "Retourneert een functie die een lijst met tekstwaarden combineert tot één tekstwaarde met behulp van de opgegeven uitvoerposities.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met tekstwaarden combineren door deze op de opgegeven posities in de uitvoer te plaatsen.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "Retourneert een functie die een lijst met tekst combineert met behulp van de opgegeven posities en lengten.",
        "Documentation.LongDescription": "Retourneert een functie die een lijst met tekstwaarden combineert tot één tekstwaarde met behulp van de opgegeven uitvoerposities en lengten. Een null-lengte geeft aan dat de volledige tekstwaarde moet worden opgenomen.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met tekstwaarden combineren met de opgegeven uitvoerposities en -lengten.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "Hiermee wordt een vergelijkingsfunctie geretourneerd op basis van de opgegeven cultuur en hoofdlettergevoeligheid.",
        "Documentation.LongDescription": "Hiermee wordt een vergelijkingsfunctie geretourneerd die de <code>culture</code> en de hoofdlettergevoeligheid gebruikt die is opgegeven door <code>ignoreCase</code> om vergelijkingen uit te voeren.<br>\r\n      <br>\r\n      Een vergelijkingsfunctie accepteert twee argumenten en retourneert -1, 0 of 1 op basis van of de eerste waarde kleiner is dan, gelijk is aan of groter is dan de tweede.<br>\r\n      <br>\r\n      De standaardwaarde voor <code>ignoreCase</code> is false. De <code>culture</code> moet een van de landinstellingen zijn die worden ondersteund door het .NET-framework (bijvoorbeeld: nl-NL).\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Vergelijk a en A aan de hand van de landinstelling en-US om te bepalen of de waarden gelijk zijn.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "Vergelijk a en A aan de hand van de landinstelling en-US waarbij de hoofdlettergevoeligheid wordt genegeerd, om te bepalen of de waarden gelijk zijn.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "Retourneert de unieke lid-id uit de eigenschapswaarde voor leden.",
        "Documentation.LongDescription": "Retourneert de unieke lid-id uit de eigenschapswaarde voor leden. <code>attribute</code>. Retourneert null voor alle overige waarden.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "Hiermee wordt de sleutel van een eigenschap geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de sleutel van de eigenschap <code>property</code> geretourneerd.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "Retourneert een valutawaarde van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>currency</code>-waarde geretourneerd vanuit de opgegeven <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Currency.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code> is binnen het valutabereik, wordt het fractionele deel van de <code>value</code> afgerond op vier decimalen en geretourneerd. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>number</code> met behulp van <code>Number.FromText</code>. Het geldige bereik voor valuta is <code>-922.337.203.685.477,5808</code> tot en met <code>922.337.203.685.477,5807</code>. Raadpleeg <code>Number.Round</code> voor de beschikbare afrondingsmodi; de standaardmodus is <code>RoundingMode.ToEven</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De<code>currency</code>-waarde van <code>\"1.23455\"</code> ophalen.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "De <code>currency</code>-waarde van <code>\"1.23455\"</code> ophalen met <code>RoundingMode.Down</code>.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "Retourneert het daggedeelte.",
        "Documentation.LongDescription": "Hiermee wordt de dagcomponent van een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde geretourneerd.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde op basis waarvan de dagcomponent wordt geëxtraheerd.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het daggedeelte van een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> ophalen die de datum 14/5/2011 en de tijd 05:00:00 PM vertegenwoordigt.",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "Hiermee wordt een getal (van 0 tot en met 6) geretourneerd waarmee de dag van de week wordt aangegeven van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een getal (van 0 tot en met 6) geretourneerd waarmee de dag van de week wordt aangeduid van de opgegeven <code>dateTime</code>.\r\n  <ul>\r\n        <li><code>dateTime</code>: Een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code>.</li>\r\n        <li><code>firstDayOfWeek</code>: Een waarde voor <code>Day</code> waarmee wordt aangegeven welke dag moet worden gezien als de eerste dag van de week. Toegestane waarden zijn Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday en Day.Saturday. Als deze waarde niet wordt opgegeven, wordt een cultuurafhankelijke standaard gebruikt.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "De dag van de week ophalen die wordt vertegenwoordigd door 21 februari 2011, waarbij zondag wordt gezien als de eerste dag van de week.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "De dag van de week ophalen die wordt vertegenwoordigd door maandag 21 februari 2011, waarbij maandag wordt gezien als de eerste dag van de week.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "Hiermee wordt de dag van de week geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de dag van de week geretourneerd voor de opgegeven <code>date</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt de naam van de dag van de week opgehaald.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "Retourneert een getal tussen 1 en 366 dat de dag van het jaar vertegenwoordigt.",
        "Documentation.LongDescription": "Retourneert een getal dat de dag van het jaar vertegenwoordigt in de opgegeven waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code>, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "De dag van het jaar voor 1 maart 2011.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "Retourneert een getal tussen 28 en 31 dat het aantal dagen in de maand aangeeft.",
        "Documentation.LongDescription": "Hiermee wordt het aantal dagen in de maand geretourneerd in de <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde <code>dateTime</code>.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde waarvoor het aantal dagen in de maand wordt geretourneerd.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Aantal dagen in de maand december zoals wordt weergegeven met <code>#date(2011, 12, 01)></code>.",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "Retourneert het einde van de dag.",
        "Documentation.LongDescription": "Retourneert het einde van de dag vertegenwoordigd door <code>dateTime</code>. Informatie over de tijdzone blijft behouden.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>datum</code>, <code>datum/tijd</code> of <code>datum/tijdzone</code> waarmee het einde van de dag wordt berekend.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het einde van de dag ophalen voor 14/5/2011 05:00:00 PM.",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "Het einde van de dag ophalen voor 17/5/2011 05:00:00 PM -7:00.",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "Retourneert het einde van de maand.",
        "Documentation.LongDescription": "Retourneert het einde van de maand die <code>dateTime</code>bevat.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>datum</code>, <code>datum/tijd</code> of <code>datum/tijdzone</code> waarmee het einde van de maand wordt berekend</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het einde van de maand ophalen voor 14/5/2011.",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "Het einde van de maand ophalen voor 17/5/2011 05:00:00 PM -7:00.",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "Retourneert het einde van het kwartaal.",
        "Documentation.LongDescription": "Retourneert het einde van het kwartaal dat <code>dateTime</code>bevat. Informatie over de tijdzone blijft behouden.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>datum</code>, <code>datum/tijd</code> of <code>datum/tijdzone</code> waarmee het einde van het kwartaal wordt berekend.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het einde van het kwartaal zoeken voor 10 oktober, 2011, 8:00 uur.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "Retourneert het einde van de week.",
        "Documentation.LongDescription": "Hiermee wordt het einde van de week in de opgegeven die <code>dateTime</code> bevat.\r\nDeze functie gebruikt een optionele <code>Day</code>, <code>firstDayOfWeek</code> om de eerste dag van de week in te stellen voor deze relatieve berekening. De standaardwaarde is <code>Day.Sunday</code>.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde op basis waarvan de laatste dag van de week wordt berekend</li>\r\n <li><code>firstDayOfWeek</code>: <i>[Optioneel]</i> Een <code>Day.Type</code>-waarde die de eerste dag van de week aanduidt. Mogelijke waarden zijn <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> en <code>Day.Saturday.</code>. De standaardwaarde is <code>Day.Sunday</code>.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het einde van de week ophalen voor 14/5/2011.",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "Het einde van de week ophalen voor 17/5/2011 05:00:00 PM -7:00, met zondag als de eerste dag van de week.",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "Retourneert het einde van het jaar.",
        "Documentation.LongDescription": "Retourneert het einde van het jaar dat <code>dateTime</code>bevat, inclusief fractionele seconden. Informatie over de tijdzone blijft behouden.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>datum</code>, <code>datum/tijd</code> of <code>datum/tijdzone</code> waarmee het einde van het jaar wordt berekend.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het einde van het jaar ophalen voor 14/5/2011 05:00:00 PM.",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "Het einde van het uur ophalen voor 17/5/2011 05:00:00 PM -7:00.",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "Maakt een datum van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>date</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).\r\nAls de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Date.From</code> <code>null</code> geretourneerd. Als de opgegeven waarde <code>value</code> <code>date</code> is, wordt <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>date</code>-waarde:\r\n <ul>\r\n <li><code>text</code>: een <code>date</code>-waarde van de tekstweergave. Raadpleeg <code>Date.FromText</code> voor meer informatie.</li>\r\n <li><code>datetime</code>: de datumcomponent van de <code>value</code>.</li>\r\n <li><code>datetimezone</code>: de datumcomponent van de lokale datetime-equivalent van <code>value</code>.</li>\r\n <li><code>number</code>: de datumcomponent van de datetime-equivalent van de OLE-automatiseringsdatum, uitgedrukt door <code>value</code>.</li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt een fout geretourneerd.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>43910</code> omzetten naar een <code>date</code>waarde.",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "<code>#datetime(1899, 12, 30, 06, 45, 12)</code> omzetten naar een <code>date</code>waarde.",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "Maakt een datum van lokale, universele en aangepaste datumnotaties.",
        "Documentation.LongDescription": "Hiermee wordt een <code>datum</code>-waarde van een tekstweergave <code>text</code> gemaakt. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>-waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, zal de datum naar beste vermogen worden geparseerd.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>'MMM'</code> bijvoorbeeld voor <code>'Jan', 'Feb', 'Mar', ...</code>, terwijl voor <code>'ru-RU'</code> <code>'MMM'</code> staat voor <code>'янв', 'фев', 'мар', ...</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of wordt weggelaten, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kan <code>options</code> ook een tekstwaarde zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = nul, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>'2010-12-31'</code> converteren naar een <code>date</code>-waarde.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "Converteren met een aangepaste indeling en de Duitse cultuur.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "Zoek de datum in de Gregoriaanse kalender die overeenkomt met het begin van 1400 in de Hijri-kalender.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "Geeft aan of deze datum plaatsvindt tijdens de huidige dag, zoals wordt bepaald door de huidige datum en tijd op het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datum-/tijdwaarde <code>dateTime</code> plaatsvindt tijdens de huidige dag, zoals wordt bepaald door de huidige datum en tijd op het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> die u wilt evalueren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de huidige systeemtijd binnen de huidige dag valt.",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "Geeft aan of deze datum plaatsvindt tijdens de huidige maand, zoals wordt bepaald door de huidige datum en tijd op het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datum-/tijdwaarde <code>dateTime</code> plaatsvindt tijdens de huidige maand, zoals wordt bepaald door de huidige datum en tijd op het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> die u wilt evalueren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de huidige systeemtijd binnen de huidige maand valt.",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "Geeft aan of deze datum plaatsvindt tijdens het huidige kwartaal, zoals wordt bepaald door de huidige datum en tijd op het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datum-/tijdwaarde <code>dateTime</code> plaatsvindt tijdens het huidige kwartaal, zoals wordt bepaald door de huidige datum en tijd op het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> die u wilt evalueren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de huidige systeemtijd binnen het huidige kwartaal valt.",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "Geeft aan of deze datum plaatsvindt tijdens de huidige week, zoals wordt bepaald door de huidige datum en tijd op het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datum-/tijdwaarde <code>dateTime</code> plaatsvindt tijdens de huidige week, zoals wordt bepaald door de huidige datum en tijd op het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> die u wilt evalueren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de huidige systeemtijd binnen de huidige week valt.",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "Geeft aan of deze datum plaatsvindt tijdens het huidige jaar, zoals wordt bepaald door de huidige datum en tijd op het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datum-/tijdwaarde <code>dateTime</code> plaatsvindt tijdens het huidige jaar, zoals wordt bepaald door de huidige datum en tijd op het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> die u wilt evalueren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de huidige systeemtijd binnen het huidige jaar valt.",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende dag volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende dag volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de dag na de huidige systeemtijd binnen de volgende dag valt.",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende maand volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende maand volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de maand na de huidige systeemtijd binnen de volgende maand valt.",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende het volgende kwartaal volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende het volgende kwartaal volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of het kwartaal na de huidige systeemtijd binnen het volgende kwartaal valt.",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de volgende week volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende week volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de week na de huidige systeemtijd binnen de volgende week valt.",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende het volgende jaar volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende het volgende jaar volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of het jaar na de huidige systeemtijd binnen het volgende jaar valt.",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande dag volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande dag volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige dag valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de dag vóór de huidige systeemtijd binnen de vorige dag valt.",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande maand volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande maand volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige maand valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de maand vóór de huidige systeemtijd binnen de vorige maand valt.",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende het voorgaande kwartaal volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende het voorgaande kwartaal volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige kwartaal valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of het kwartaal vóór de huidige systeemtijd binnen het vorige kwartaal valt.",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende de voorgaande week volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande week volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige week valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de week vóór de huidige systeemtijd binnen de vorige week valt.",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datum plaatsvindt gedurende het voorgaande jaar volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende het voorgaande jaar volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige jaar valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of het jaar vóór de huidige systeemtijd binnen het vorige jaar valt.",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "Geeft aan of deze datum plaatsvindt tijdens het huidige jaar en op of vóór de huidige dag valt, zoals wordt bepaald door de huidige datum en tijd op het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datum-/tijdwaarde <code>dateTime</code> plaatsvindt tijdens het huidige jaar en op of vóór de huidige dag valt, zoals wordt bepaald door de huidige datum en tijd op het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> die u wilt evalueren.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of de huidige systeemtijd binnen het jaar tot vandaag valt.",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "Geeft aan of deze datum in een schrikkeljaar valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> in een schrikkeljaar ligt.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>date</code>-, <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of het jaar 2012, zoals wordt weergegeven met <code>#date(2012, 01, 01)</code> een schrikkeljaar is.",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "Retourneert het maandgedeelte.",
        "Documentation.LongDescription": "Retourneert het maandgedeelte van de opgegeven <code>datetime</code>waarde, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "De maand zoeken in #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "Hiermee wordt de naam van het maandonderdeel geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de naam van het maandonderdeel geretourneerd voor de opgegeven <code>date</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt de naam van de maand opgehaald.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "Retourneert een getal dat aangeeft in welk kwartaal van het jaar de datum valt.",
        "Documentation.LongDescription": "Retourneert een getal van 1 tot 4 dat aangeeft in welk kwartaal van het jaar de datum <code>dateTime</code> valt. <code>dateTime</code> kan een waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code> zijn.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Zoeken in welk kwartaal van het jaar de datum #date(2011, 12, 31) valt.",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "Retourneert het begin van de dag.",
        "Documentation.LongDescription": "Retourneert het begin van de dag vertegenwoordigd door <code>dateTime</code>.\r\n <code>dateTime</code> moet een <code>datum</code>-, <code>datum/tijd</code>- of <code>datum/tijdzone</code>-waarde zijn.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het begin van de dag zoeken voor 10 oktober, 2011, 8:00 uur.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "Retourneert het begin van de maand.",
        "Documentation.LongDescription": "Retourneert het begin van de maand die <code>dateTime</code>bevat.\r\n <code>dateTime</code> moet een <code>datum</code>- of <code>datum/tijd</code>-waarde zijn.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het begin van de maand zoeken voor 10 oktober, 2011, 8:10:32 uur.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "Retourneert het begin van het kwartaal.",
        "Documentation.LongDescription": "Retourneert het begin van het kwartaal dat <code>dateTime</code>bevat.\r\n <code>dateTime</code> moet een <code>datum</code>-, <code>datum/tijd</code>- of <code>datum/tijdzone</code>-waarde zijn.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het begin van het kwartaal zoeken voor 10 oktober, 2011, 8:00 uur.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "Retourneert het begin van de week.",
        "Documentation.LongDescription": "Retourneert het begin van de week dat <code>dateTime</code>bevat.\r\n <code>dateTime</code> moet een <code>datum</code>-, <code>datum/tijd</code>- of <code>datum/tijdzone</code>-waarde zijn.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het begin van de week zoeken voor dinsdag 11 oktober 2011.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "Het begin van de week zoeken voor dinsdag, 11 oktober 2011, met maandag als begin van de week.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "Retourneert het begin van het jaar.",
        "Documentation.LongDescription": "Retourneert het begin van het jaar dat <code>dateTime</code>bevat.\r\n <code>dateTime</code> moet een <code>datum</code>-, <code>datum/tijd</code>- of <code>datum/tijdzone</code>-waarde zijn.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het begin van het jaar zoeken voor 10 oktober, 2011, 8:10:32 uur.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "Retourneert een record die onderdelen van de datumwaarde bevat.",
        "Documentation.LongDescription": "Hiermee wordt een record geretourneerd met de onderdelen van de opgegeven date-waarde, <code>date</code>.\r\n <ul>\r\n <li><code>date</code>: een <code>date</code>-waarde op basis waarvan de record of de onderdelen daarvan moeten worden berekend.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "De waarde voor de <code>#date(2011, 12, 31)</code> omzetten naar een record die gedeelten van de datumwaarde bevat.",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "Hiermee wordt een tekstweergave van de datumwaarde geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een tekstweergave van <code>date</code> geretourneerd. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. <code>culture</code> wordt alleen gebruikt voor verouderde werkstromen. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, wordt de datum opgemaakt aan de hand van de standaardwaarde die is gedefinieerd door <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>'MMM'</code> bijvoorbeeld voor <code>'Jan', 'Feb', 'Mar', ...</code>, terwijl voor <code>'ru-RU'</code> <code>'MMM'</code> staat voor <code>'янв', 'фев', 'мар', ...</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of niet wordt gebruikt, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kunnen <code>options</code> en <code>culture</code> ook tekstwaarden zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>#date(2010, 12, 31)</code> converteren naar een <code>text</code>-waarde. <i>De uitvoer van resultaten kan variëren, afhankelijk van de huidige culture.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "Converteren met een aangepaste indeling en de Duitse cultuur.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "Zoek het jaar in de Hijri-kalender die overeenkomt met 1 januari 2000 in de Gregoriaanse kalender.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "Retourneert een getal tussen 1 en 6 dat aangeeft in welke week van de maand deze datum valt.",
        "Documentation.LongDescription": "Retourneert een getal tussen 1 en 6 dat aangeeft in welke week van de maand de datum <code>dateTime</code> valt.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>datetime</code>-waarde waarvoor de week van de maand wordt bepaald.</li>\r\n</ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen in welke week 15 maart valt in 2011.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "Retourneert een getal van 1 tot 54 dat aangeeft in welke week van het jaar deze datum valt.",
        "Documentation.LongDescription": "Hiermee wordt een getal van 1 tot 54 geretourneerd dat aangeeft in welke week van het jaar de datum <code>dateTime</code> valt.\r\n <ul>\r\n <li><code>dateTime</code>: Een <code>datetime</code>-waarde waarvoor de week van het jaar wordt vastgesteld.</li>\r\n <li><code>firstDayOfWeek</code>: Een optionele <code>Day.Type</code> -waarde die aangeeft welke dag wordt beschouwd als het begin van een nieuwe week (bijvoorbeeld <code>Day.Sunday</code>). Als u niets opgeeft, wordt een cultuurafhankelijke standaard gebruikt.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Bepalen welke week van het jaar 27 maart 2011 bevat.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "Bepalen welke week van het jaar 27 maart 2011 bevat, met maandag als begin van de week.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "Retourneert het jaargedeelte.",
        "Documentation.LongDescription": "Retourneert het jaargedeelte van de opgegeven <code>datetime</code>waarde, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het jaar zoeken in #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "Retourneert het datumgedeelte van de opgegeven waarde voor date, datetime of datetimezone.",
        "Documentation.LongDescription": "Retourneert het datumgedeelte van <code>dateTime</code>, de opgegeven waarde voor <code>date</code>, <code>datetime</code> of <code>datetimezone</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Datumwaarde zoeken van #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "Maakt een datum-/tijd van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>datetime</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).\r\nAls de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>DateTime.From</code> <code>null</code> geretourneerd. Als de opgegeven waarde <code>value</code> <code>datetime</code> is, wordt <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>datetime</code>-waarde:\r\n <ul>\r\n <li><code>text</code>: een <code>datetime</code>-waarde van de tekstweergave. Raadpleeg <code>DateTimeZone.FromText</code> voor meer informatie.</li>\r\n <li><code>date</code>: een <code>datetime</code> met <code>value</code> als het datumcomponent en <code>12:00:00 AM</code> als het tijdcomponent.</li>\r\n <li><code>datetimezone</code>: het lokale <code>datetime</code>-equivalent van <code>value</code>.</li>\r\n <li><code>time</code>: een <code>datetime</code> met het datumequivalent van de OLE-automatiseringsdatum van <code>0</code> als het datumcomponent en <code>value</code> als het tijdcomponent.</li>\r\n <li><code>number</code>: een <code>datetime</code>-equivalent van de OLE-automatiseringsdatum die wordt uitgedrukt door <code>value</code>. </li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt er een fout geretourneerd.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>#time(06, 45, 12)</code> omzetten naar een <code>datetime</code>waarde.",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "<code>#date(1975, 4, 4)</code> omzetten naar een <code>datetime</code>waarde.",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "Maakt een datum-/tijd van een getal dat 64 bits lang is.",
        "Documentation.LongDescription": "Maakt een <code>datetime</code>waarde van de waarde <code>fileTime</code> en zet deze om in de lokale tijdzone. De bestandstijd is een tijdwaarde voor een Windows-bestand die het aantal intervallen van 100 nanoseconden vertegenwoordigt dat is verstreken sinds 0:00 middernacht, 1 januari 1601 A.D. (C.E.) Coordinated Universal Time (UTC).\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>129876402529842245</code> omzetten naar een datum-/tijdwaarde.",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "Maakt een datum-/tijdzone van lokale en universele datum-/tijdindelingen.",
        "Documentation.LongDescription": "Hiermee wordt een <code>datum/tijd</code>-waarde van een tekstweergave <code>text</code> gemaakt. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>-waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, zal de datum naar beste vermogen worden geparseerd.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>'MMM'</code> bijvoorbeeld voor <code>'Jan', 'Feb', 'Mar', ...</code>, terwijl voor <code>'ru-RU'</code> <code>'MMM'</code> staat voor <code>'янв', 'фев', 'мар', ...</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of wordt weggelaten, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kan <code>options</code> ook een tekstwaarde zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = nul, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>'2010-12-31T01:30:00'</code> converteren naar een datum/tijd-waarde.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "<code>'2010-12-31T01:30:00.121212'</code> converteren naar een datum/tijd-waarde.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "<code>'2010-12-31T01:30:00'</code> converteren naar een datum/tijd-waarde.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "<code>'20101231T013000'</code> converteren naar een datum/tijd-waarde.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "Geeft aan of deze datetime plaatsvindt in het huidige uur volgens de huidige datum en tijd van het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt in het huidige uur volgens de huidige datum en tijd van het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de huidige systeemtijd plaatsvindt in het huidige uur.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "Geeft aan of deze datetime plaatsvindt in de huidige minuut volgens de huidige datum en tijd van het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt in de huidige minuut volgens de huidige datum en tijd van het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de huidige systeemtijd plaatsvindt in de huidige minuut.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "Geeft aan of deze datetime plaatsvindt in de huidige seconde volgens de huidige datum en tijd van het systeem.",
        "Documentation.LongDescription": "Geeft aan of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt in de huidige seconde volgens de huidige datum en tijd van het systeem.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de huidige systeemtijd plaatsvindt in de huidige seconde.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende het volgende uur volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende het volgende uur volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het uur na de huidige systeemtijd plaatsvindt in het volgende uur.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de volgende minuut volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende minuut volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de minuut na de huidige systeemtijd plaatsvindt in de volgende minuut.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de volgende seconde volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de volgende seconde volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de seconde na de huidige systeemtijd plaatsvindt in de volgende seconde.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende in het voorgaande uur volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende het voorgaande uur volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in het huidige uur valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of het uur vóór de huidige systeemtijd plaatsvindt in het vorige uur.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de voorgaande minuut volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande minuut volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige minuut valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de minuut vóór de huidige systeemtijd plaatsvindt in de vorige minuut.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "Hiermee wordt aangegeven of deze datetime plaatsvindt gedurende de voorgaande seconde volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.",
        "Documentation.LongDescription": "Hiermee wordt aangegeven of de opgegeven datetime-waarde <code>dateTime</code> plaatsvindt gedurende de voorgaande seconde volgens de huidige datum en tijd op het systeem. Houd er rekening mee dat deze functie onwaar retourneert als een waarde wordt doorgegeven die in de huidige seconde valt.\r\n      <ul>\r\n      <li><code>dateTime</code>: Een <code>datetime</code>- of <code>datetimezone</code>-waarde die moet worden geëvalueerd.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de seconde vóór de huidige systeemtijd plaatsvindt in de vorige seconde.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "Retourneert het tijdgedeelte van de opgegeven datum-/tijdwaarde.",
        "Documentation.LongDescription": "Retourneert het tijdgedeelte van de opgegeven datum-/tijdwaarde, <code>dateTime</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "De tijdwaarde zoeken van #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "Retourneert een record die onderdelen van de datum-/tijdwaarde bevat.",
        "Documentation.LongDescription": "Hiermee wordt een record geretourneerd met de onderdelen van de opgegeven datetime-waarde, <code>dateTime</code>.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>datetime</code>-waarde op basis waarvan de record of de onderdelen daarvan moeten worden berekend.</li>\r\n </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "De waarde voor de <code>#datetime(2011, 12, 31, 11, 56, 2)</code> omzetten naar een record die waarden voor datum en tijd bevat.",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "Retourneert een tekstweergave van de datum-/tijdwaarde.",
        "Documentation.LongDescription": "Hiermee wordt een tekstweergave van <code>dateTime</code> geretourneerd. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. <code>culture</code> wordt alleen gebruikt voor verouderde werkstromen. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, wordt de datum opgemaakt aan de hand van de standaardwaarde die is gedefinieerd door <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>'MMM'</code> bijvoorbeeld voor <code>'Jan', 'Feb', 'Mar', ...</code>, terwijl voor <code>'ru-RU'</code> <code>'MMM'</code> staat voor <code>'янв', 'фев', 'мар', ...</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of niet wordt gebruikt, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kunnen <code>options</code> en <code>culture</code> ook tekstwaarden zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Converteer <code>#datetime(2010, 12, 31, 01, 30, 25)</code> naar een <code>text</code>-waarde. <i>Uitvoer van resultaten kan variëren afhankelijk van de huidige culture.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "Converteren met een aangepaste indeling en de Duitse cultuur.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "Converteren met het ISO 8601-patroon.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "Maakt een datum-/tijdzone van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>datetimezone</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).\r\nAls de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>DateTimeZone.From</code> <code>null</code> geretourneerd. Als de opgegeven waarde <code>value</code> <code>datetimezone</code> is, wordt de waarde <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>datetimezone</code>-waarde:\r\n\\ <ul>\r\n <li><code>text</code>: een <code>datetimezone</code>-waarde vanuit de tekstweergave. Raadpleeg <code>DateTimeZone.FromText</code> voor meer informatie.</li>\r\n <li><code>date</code>: een <code>datetimezone</code> met <code>value</code> als datumcomponent, <code>12:00:00 AM</code> als het tijdcomponent, en de offset die overeenkomt met de lokale tijdzone.</li>\r\n <li><code>datetime</code>: een <code>datetimezone</code> met <code>value</code> als de datetime en de offset die overeenkomt met de lokale tijdzone.</li>\r\n <li><code>time</code>: een <code>datetimezone</code> met het datumequivalent van OLE-automatiseringsdatum van <code>0</code> als het datumcomponent, <code>value</code> als het tijdcomponent, en de offset die overeenkomt met de lokale tijdzone.</li>\r\n <li><code>number</code>: Een <code>datetimezone</code> met het datetime-equivalent van de OLE-automatiseringsdatum die wordt uitgedrukt door <code>value</code> en de offset die overeenkomt met de lokale tijdzone.</li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt er een fout geretourneerd.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "<code>\"2020-10-30T01:30:00-08:00\"</code> omzetten naar een <code>datetimezone</code>waarde.",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "Maakt een datum-/tijdzone van een getal dat 64 bits lang is.",
        "Documentation.LongDescription": "Maakt een <code>datetimezone</code>-waarde van de waarde <code>fileTime</code> en zet deze om in de lokale tijdzone. De bestandstijd is een tijdwaarde voor een Windows-bestand dat het aantal intervallen van 100 nanoseconden vertegenwoordigt die zijn verstreken sinds 0:00 middernacht, 1 januari 1601 A.D. (C.E.) Coordinated Universal Time (UTC).\r\n     ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "<code>129876402529842245</code> omzetten naar een datum-/tijdzonewaarde.",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "Hiermee maakt u een datetimezone van lokale, universele en aangepaste datum-/tijdzone-indelingen.",
        "Documentation.LongDescription": "Hiermee wordt een <code>datum-/tijdzone</code>-waarde van een tekstweergave <code>text</code> gemaakt. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>-waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, zal de datum naar beste vermogen worden geparseerd.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>'MMM'</code> bijvoorbeeld voor <code>'Jan', 'Feb', 'Mar', ...</code>, terwijl voor <code>'ru-RU'</code> <code>'MMM'</code> staat voor <code>'янв', 'фев', 'мар', ...</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of wordt weggelaten, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kan <code>options</code> ook een tekstwaarde zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = nul, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Converteer <code>'2010-12-31T01:30:00-08:00'</code> naar een <code>datetimezone</code>-waarde.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "Converteren met een aangepaste indeling en de Duitse cultuur.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "Converteren met ISO 8601.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "Verwijdert informatie over de tijdzone uit de opgegeven datum-/tijdzonewaarde.",
        "Documentation.LongDescription": "Retourneert een waarde #datetime van <code>dateTimeZone</code> waaruit de informatie over de tijdzone is verwijderd.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Informatie over de tijdzone verwijderen uit de waarde #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0).",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "Zet het tijdzonegedeelte om naar de lokale tijdzone.",
        "Documentation.LongDescription": "Wijzigt informatie over de tijdzone van de datum-/tijdzonewaarde <code>dateTimeZone</code> in informatie over de lokale tijdzone.\r\n    Als <code>dateTimeZone</code> geen tijdzonegedeelte heeft, wordt de informatie over de lokale tijdzone toegevoegd.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Informatie over de tijdzone wijzigen voor #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) in lokale tijdzone (uitgaande van PST).",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "Retourneert een record die onderdelen van de datum-/tijdzonewaarde bevat.",
        "Documentation.LongDescription": "Hiermee wordt een record geretourneerd met de onderdelen van de opgegeven datetimezone-waarde, <code>dateTimeZone</code>.\r\n <ul>\r\n <li><code>dateTimeZone</code>: een <code>datetimezone</code>-waarde op basis waarvan de record of de onderdelen daarvan moeten worden berekend.</li>\r\n </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "De waarde voor de <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> omzetten naar een record die waarden voor datum, tijd en zone bevat.",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "Retourneert een tekstweergave van de datum-/tijdzonewaarde.",
        "Documentation.LongDescription": "Hiermee wordt een tekstweergave van <code>dateTimeZone</code> geretourneerd. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. <code>culture</code> wordt alleen gebruikt voor verouderde werkstromen. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, wordt de datum opgemaakt aan de hand van de standaardwaarde die is gedefinieerd door <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>'MMM'</code> bijvoorbeeld voor <code>'Jan', 'Feb', 'Mar', ...</code>, terwijl voor <code>'ru-RU'</code> <code>'MMM'</code> staat voor <code>'янв', 'фев', 'мар', ...</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of niet wordt gebruikt, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kunnen <code>options</code> en <code>culture</code> ook tekstwaarden zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Converteer <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> naar een <code>text</code>-waarde. <i>Uitvoer van resultaten kan variëren afhankelijk van de huidige culture.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "Converteren met een aangepaste indeling en de Duitse cultuur.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "Converteren met het ISO 8601-patroon.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "Zet het tijdzonegedeelte om naar de UTC-tijdzone.",
        "Documentation.LongDescription": "Wijzigt informatie over de tijdzone van de datum-/tijdwaarde <code>dateTimeZone</code> in informatie over de UTC- of Universal Time-tijdzone.\r\n    Als <code>dateTimeZone</code> geen tijdzonegedeelte heeft, wordt de informatie over de UTC-tijdzone toegevoegd.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Informatie over de tijdzone wijzigen voor #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) in UTC-tijdzone.",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "Wijzigt de tijdzone van de waarde.",
        "Documentation.LongDescription": "Wijzigt de tijdzone van de waarde.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "Wijzigt de tijdzone van de waarde.",
        "Documentation.LongDescription": "Wijzigt de tijdzone van de waarde.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "Maakt een waarde voor Decimaal van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een Decimale <code>number</code>-waarde geretourneerd vanuit de opgegeven <code>value</code>. Als de opgegeven <code>value</code> de waarde <code>null</code> heeft, wordt door <code>Decimal.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code>-waarde heeft binnen het bereik van Decimal, wordt <code>value</code> geretourneerd. In andere gevallen wordt een fout geretourneerd. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>number</code> met behulp van <code>Number.FromText</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De <code>number</code>-waarde voor Decimaal uit <code>\"4.5\"</code> ophalen.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "Retourneert de inhoud van de Delta Lake-tabel.",
        "Documentation.LongDescription": "Retourneert de inhoud van de Delta Lake-tabel.",
        "Documentation.Category": "Toegang tot gegevens",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "Maakt een waarde voor Dubbel van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een Double <code>number</code>-waarde geretourneerd vanuit de opgegeven <code>value</code>. Als de opgegeven <code>value</code> de waarde <code>null</code> heeft, wordt door <code>Double.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code>-waarde heeft binnen het bereik van Double, wordt <code>value</code> geretourneerd. In andere gevallen wordt een fout geretourneerd. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>number</code> met behulp van <code>Number.FromText</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De <code>number</code>-waarde voor Dubbel uit <code>\"4\"</code> ophalen.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "Retourneert het dagengedeelte van een duur.",
        "Documentation.LongDescription": "Retourneert het dagengedeelte van <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extraheer het aantal dagen tussen twee datums.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "Maakt een duur van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>duration</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, retourneert <code>Duration.From</code> <code>null</code>. Als de opgegeven waarde <code>value</code> <code>duration</code> is, wordt <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>duration</code>-waarde:\r\n <ul>\r\n <li><code>text</code>: een <code>duration</code>-waarde van tekstuele formulieren met verstreken tijd (d.h:m:s). Raadpleeg <code>Duration.FromText</code> voor meer informatie.</li>\r\n <li><code>number</code>: een <code>duration</code> equivalent voor het aantal gehele en gedeeltelijke dagen, uitgedrukt door <code>value</code>.</li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt een fout geretourneerd.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Zet <code>2.525</code> om naar een <code>duration</code>waarde.",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "Retourneert een duurwaarde uit tekst over verstreken tijd (d.u:m:s).",
        "Documentation.LongDescription": "Hiermee wordt een duur-waarde geretourneerd van de opgegeven tekst, <code>text</code>. De volgende indelingen kunnen worden geparseerd door deze functie:\r\n <ul>\r\n <li>(-)hh:mm(:ss(.ff)) </li>\r\n <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n <br>\r\n (alle bereiken zijn inclusief)<br>\r\n ddd: aantal dagen.<br>\r\n hh: aantal uur, tussen 0 en 23.<br>\r\n mm: aantal minuten, tussen 0 en 59.<br>\r\n ss: aantal seconden, tussen 0 en 59.<br>\r\n ff: fractie van seconden, tussen 0 en 9999999.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Zet <code>\"2.05:55:20\"</code> om naar een <code>duration</code>waarde.",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "Retourneert het urengedeelte van een duur.",
        "Documentation.LongDescription": "Retourneert het urengedeelte van <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extraheer de uren uit een duurwaarde.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "Retourneert het minutengedeelte van een duur.",
        "Documentation.LongDescription": "Retourneert het minutengedeelte van <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extraheer de minuten uit een duurwaarde.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "Retourneert het secondengedeelte van een duur.",
        "Documentation.LongDescription": "Retourneert het secondengedeelte van <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extraheer de seconden uit een duurwaarde.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "Retourneert een record die de onderdelen van de duur bevat.",
        "Documentation.LongDescription": "Hiermee wordt een record geretourneerd met de onderdelen van de duur-waarde, <code>duration</code>.\r\n <ul>\r\n <li><code>duration</code>: een <code>duration</code> op basis waarvan de record wordt gemaakt.</li>\r\n </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "<code>#duration(2, 5, 55, 20)</code> omzetten in een record van de onderdelen, inclusief dagen, uren, minuten en seconden, indien van toepassing.",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "Retourneert de tekst van de vorm \"d.u:m:s\".",
        "Documentation.LongDescription": "Hiermee wordt een tekstweergave geretourneerd in de vorm \"dag.uur:min:sec\" van de opgegeven duurwaarde <code>duration</code>.\r\n <ul> <li><code>duration</code>: een <code>duur</code> op basis waarvan de tekstweergave wordt berekend.</li>\r\n  <li><code>format</code>: <i>[Optioneel]</i> verouderd, genereert een fout als deze niet null is</li>\r\n      </ul>\r\n",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "<code>#duration(2, 5, 55, 20)</code> omzetten naar een tekstwaarde.",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "Retourneert het totale aantal dagen waaruit deze duur bestaat.",
        "Documentation.LongDescription": "Retourneert het totale aantal dagen dat is beslaan door <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Zoek het totale aantal dagen dat wordt beslaan door een duurwaarde.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "Retourneert het totale aantal uren waaruit deze duur bestaat.",
        "Documentation.LongDescription": "Retourneert het totale aantal uren dat is verdeeld door <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Zoek het totale aantal uren dat wordt beslaan door een duurwaarde.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "Retourneert het totale aantal minuten waaruit deze duur bestaat.",
        "Documentation.LongDescription": "Retourneert het totale aantal minuten dat door <code>duration</code> is verdeeld.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Zoek het totale aantal minuten dat wordt beslaan door een duurwaarde.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "Retourneert het totale aantal seconden waaruit deze duur bestaat.",
        "Documentation.LongDescription": "Retourneert het totale aantal seconden dat door <code>duration</code> is overspannen.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Zoek het totale aantal seconden dat wordt beslaan door een duurwaarde.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "Retourneert een foutrecord van de opgegeven tekstwaarden voor reden, bericht en details.",
        "Documentation.LongDescription": "Retourneert een foutrecord van de opgegeven tekstwaarden voor reden, bericht en details.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "Hiermee wordt de M-broncodeweergave van een constante waarde geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de M-broncodeweergave van een constante waarde geretourneerd.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "De M-broncodeweergave van een getalwaarde ophalen.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "De M-broncodeweergave van een datumwaarde ophalen.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "De M-broncodeweergave van een tekstwaarde ophalen.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "Hiermee wordt het resultaat van de evaluatie van een M-expressie geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van de evaluatie van de M-expressie <code>document</code> met de beschikbare id's waarnaar kan worden verwezen, gedefinieerd door <code>environment</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Een eenvoudige som evalueren.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "Een complexe som evalueren.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "De samenvoeging van een tekstwaarde en een id evalueren.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "Hiermee wordt de M-broncodeweergave van een id geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt de M-broncodeweergave van de id <code>name</code> geretourneerd.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "De M-broncodeweergave van een id ophalen.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "De M-broncodeweergave ophalen van een id die een spatie bevat.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "Retourneert de inhoud van het opgegeven bestand met een binaire indeling.",
        "Documentation.LongDescription": "Retourneert de inhoud van het bestand, <code>path</code>, als binair. De parameter <code>options</code> is momenteel alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "Wordt geretourneerd onafhankelijk van het feit of een bepaalde functie wordt beschouwd als gegevensbron.",
        "Documentation.LongDescription": "Wordt geretourneerd onafhankelijk van het feit of <code>function</code> wordt beschouwd als gegevensbron.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Hiermee wordt tekst die een geografische waarde aangeeft in WKT-indeling (Well-Known Text), omgezet in een gestructureerde record.",
        "Documentation.LongDescription": "Hiermee wordt tekst die een geografische waarde aangeeft in WKT-indeling (Well-Known Text), omgezet in een gestructureerde record. WKT is een standaardindeling gedefinieerd door Open Geospatial Consortium (OGC) die doorgaans als serialisatie-indeling wordt gebruikt door databases, waaronder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "Hiermee wordt een gestructureerde waarde voor een geografisch punt omgezet in de bijbehorende WKT-indeling (Well-Known Text).",
        "Documentation.LongDescription": "Hiermee wordt een gestructureerde waarde voor een geografisch punt omgezet in de bijbehorende WKT-indeling (Well-Known Text), zoals gedefinieerd door Open Geospatial Consortium (OGC), die ook als serialisatie-indeling wordt gebruikt door veel databases, waaronder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Hiermee wordt tekst die een geometrische waarde aangeeft in WKT-indeling (Well-Known Text), omgezet in een gestructureerde record.",
        "Documentation.LongDescription": "Hiermee wordt tekst die een geometrische waarde aangeeft in WKT-indeling (Well-Known Text), omgezet in een gestructureerde record. WKT is een standaardindeling gedefinieerd door Open Geospatial Consortium (OGC) die doorgaans als serialisatie-indeling wordt gebruikt door databases, waaronder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "Hiermee wordt een gestructureerde waarde voor een geometrisch punt omgezet in de bijbehorende WKT-indeling (Well-Known Text).",
        "Documentation.LongDescription": "Hiermee wordt een gestructureerde waarde voor een geometrisch punt omgezet in de bijbehorende WKT-indeling (Well-Known Text), zoals gedefinieerd door Open Geospatial Consortium (OGC), die ook als serialisatie-indeling wordt gebruikt door veel databases, waaronder SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "Hiermee wordt een guid-waarde geretourneerd voor een opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>Guid.Type</code>-waarde geretourneerd van de opgegeven <code>value</code>. Als de opgegeven <code>value</code> <code>null</code> is, retourneert <code>Guid.From</code> de waarde <code>null</code>. Er wordt een controle uitgevoerd om te bepalen of de opgegeven <code>value</code> een acceptabele indeling heeft. Acceptabele indelingen zijn opgegeven in de voorbeelden.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "De Guid kan worden opgegeven met 32 aaneengesloten hexadecimale cijfers.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "De Guid kan worden opgegeven met 32 hexadecimale cijfers, gescheiden door afbreekstreepjes in blokken van 8-4-4-4-12.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "De Guid kan worden opgegeven met 32 hexadecimale cijfers gescheiden door afbreekstreepjes en tussen accolades.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "De Guid kan worden opgegeven met 32 hexadecimale cijfers gescheiden door afbreekstreepjes en tussen haakjes.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "Maakt een 16-bits geheel getal van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een 16-bits <code>number</code>-waarde geretourneerd als geheel getal vanuit de opgegeven <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Int16.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code> is binnen het bereik van een 16-bits geheel getal zonder een fractioneel deel, wordt <code>value</code> geretourneerd. Als het cijfer een fractioneel deel heeft, wordt het afgerond volgens de opgegeven afrondingsmodus. De standaardafrondingsmodus is <code>RoundingMode.ToEven</code>. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>nummer</code> met behulp van <code>Number.FromText</code>. Raadpleeg <code>Number.Round</code> voor de beschikbare afrondingsmodi. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De 16-bits <code>number</code>-waarde als geheel getal uit <code>\"4\"</code> ophalen.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "De 16-bits <code>number</code>-waarde als geheel getal uit <code>\"4.5\"</code> ophalen met <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "Maakt een 32-bits geheel getal van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een 32-bits <code>number</code>-waarde geretourneerd als geheel getal vanuit de opgegeven <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Int32.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code> is binnen het bereik van een 32-bits geheel getal zonder een fractioneel deel, wordt <code>value</code> geretourneerd. Als het cijfer een fractioneel deel heeft, wordt het afgerond volgens de opgegeven afrondingsmodus. De standaardafrondingsmodus is <code>RoundingMode.ToEven</code>. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>nummer</code> met behulp van <code>Number.FromText</code>. Raadpleeg <code>Number.Round</code> voor de beschikbare afrondingsmodi. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De 32-bits <code>number</code>-waarde als geheel getal uit <code>\"4\"</code> ophalen.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "De 32-bits <code>number</code>-waarde als geheel getal uit <code>\"4.5\"</code> ophalen met <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "Maakt een 64-bits geheel getal van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een 64-bits <code>number</code>-waarde geretourneerd als geheel getal vanuit de opgegeven <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Int64.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code> is binnen het bereik van een 64-bits geheel getal zonder een fractioneel deel, wordt <code>value</code> geretourneerd. Als het cijfer een fractioneel deel heeft, wordt het afgerond volgens de opgegeven afrondingsmodus. De standaardafrondingsmodus is <code>RoundingMode.ToEven</code>. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>nummer</code> met behulp van <code>Number.FromText</code>. Raadpleeg <code>Number.Round</code> voor de beschikbare afrondingsmodi. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "64-bit <code>number</code>-waarde als geheel getal van <code>\"4\"</code> ophalen.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "64-bits <code>number</code>-waarde als geheel getal van <code>\"4.5\"</code> ophalen met <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "Maakt een 8-bits geheel getal met teken van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een ondertekende 8-bits <code>number</code>-waarde geretourneerd als geheel getal met teken uit opgegeven <code>value</code>. Als de opgegeven <code>value</code> de waarde <code>null</code> heeft, wordt door <code>Int8.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code>-waarde heeft binnen het bereik van een ondertekend 8-bits geheel getal met teken zonder een fractioneel deel, wordt <code>value</code> geretourneerd. Als het getal een fractioneel deel heeft, wordt het afgerond met de opgegeven afrondingsmodus. De standaardafrondingsmodus is <code>RoundingMode.ToEven</code>. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>nummer</code> met behulp van <code>Number.FromText</code>. Raadpleeg <code>Number.Round</code> voor de beschikbare afrondingsmodi. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De 8-bits <code>number</code>-waarde als geheel getal met teken uit <code>\"4\"</code> ophalen.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "De 8-bits <code>number</code>-waarde als geheel getal met teken uit <code>\"4.5\"</code> ophalen met <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "Retourneert de abstracte syntaxisstructuur (AST) voor de hoofdtekst van een functie.",
        "Documentation.LongDescription": "<p>Hiermee wordt de abstracte syntaxisstructuur (AST) voor de hoofdtekst van <code>function</code> geretourneerd en genormaliseerd in een <i>itemexpressie</i>:\r\n<ul>\r\n  <li>De functie moet een lambda met 1 argument zijn.</li>\r\n  <li>Alle verwijzingen naar de functieparameter worden vervangen door <code>ItemExpression.Item</code>.</li>\r\n  <li>De abstracte syntaxisstructuur wordt vereenvoudigd en bevat alleen de volgende soorten knooppunten:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Aanroep</code></li>\r\n      <li><code>Unair</code></li>\r\n      <li><code>Binair</code></li>\r\n      <li><code>Als</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Er treedt een fout op als rijexpressie AST niet kan worden geretourneerd naar de hoofdtekst van <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt de abstracte syntaxisstructuur geretourneerd voor de hoofdtekst van de functie <code>each _ <> null</code>",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "Retourneert de inhoud van het JSON-document.",
        "Documentation.LongDescription": "Retourneert de inhoud van het JSON-document.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "Hiervoor een JSON-weergave van een opgegeven waarde gegenereerd.",
        "Documentation.LongDescription": "<p>Hiermee wordt een JSON-weergave van een opgegeven waarde <code>value</code> gemaakt met een tekstcodering die wordt bepaald met <code>encoding</code>. Als <code>encoding</code> wordt weggelaten, wordt UTF8 gebruikt. Waarden worden als volgt weergegeven:</p>\r\n <ul>\r\n        <li>Null-, tekst- en logische waarden worden weergegeven als de overeenkomende JSON-typen</li>\r\n        <li>Getallen worden weergegeven als cijfers in JSON, maar <code>#infinity</code>, <code>-#infinity</code> en <code>#nan</code> worden geconverteerd naar null</li>\r\n        <li>Lijsten worden weergegeven als JSON-matrices.</li>\r\n        <li>Records worden weergegeven als JSON-objecten</li>\r\n        <li>Tabellen worden weergegeven als een matrix met objecten</li>\r\n        <li>Datums, tijden, datetimes, datetimezones en duur worden weergeven als ISO 8601-tekst</li>\r\n        <li>Binaire waarden worden weergegeven als tekst met Base 64-codering</li>\r\n        <li>Voor typen en functies wordt een fout gegenereerd</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Converteer een complexe waarde naar JSON.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "Hiermee wordt een binaire waarde omgezet naar een lijst met tekstwaarden die met regeleinden zijn opgesplitst. Als er een citaatstijl is opgegeven, kunnen de regeleinden tussen aanhalingstekens verschijnen. Als includeLineSeparators true is, worden de regeleindetekens opgenomen in de tekst.",
        "Documentation.LongDescription": "Hiermee wordt een binaire waarde omgezet naar een lijst met tekstwaarden die met regeleinden zijn opgesplitst. Als er een citaatstijl is opgegeven, kunnen de regeleinden tussen aanhalingstekens verschijnen. Als includeLineSeparators true is, worden de regeleindetekens opgenomen in de tekst.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "Zet een tekstwaarde om naar een lijst met tekstwaarden die met regeleinden zijn opgesplitst. Als includeLineSeparators 'true' is, worden de regeleindetekens opgenomen in de tekst.",
        "Documentation.LongDescription": "Converteert een tekstwaarde naar een lijst met tekstwaarden die worden gesplitst bij regeleinden. Als includeLineSeparators waar is, worden de regeleindetekens opgenomen in de tekst.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (standaard) er is geen citaatgedrag vereist.</li>\r\n            <li><code>QuoteStyle.Csv:</code> citaat overeenkomstig de CSV. Er wordt een dubbel aanhalingsteken gebruikt om dergelijke gebieden af te bakenen en een set dubbele aanhalingstekens wordt gebruik om één dubbel aanhalingsteken binnen een dergelijk gebied aan te duiden. </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "Zet een lijst met tekst om naar een binaire waarde met behulp van de opgegeven codering en lineSeparator. De opgegeven lineSeparator wordt aan elke regel toegevoegd.  Als deze niet is opgegeven, worden de Enter-tekens en regelinvoertekens gebruikt.",
        "Documentation.LongDescription": "Zet een lijst met tekst om naar een binaire waarde met behulp van de opgegeven codering en lineSeparator. De opgegeven lineSeparator wordt aan elke regel toegevoegd.  Als deze niet is opgegeven, worden de Enter-tekens en regelinvoertekens gebruikt.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "Zet een lijst met tekst om in een enkele tekst.  De opgegeven lineSeparator wordt aan elke regel toegevoegd.  Als deze niet is opgegeven, worden de Enter-tekens en regelinvoertekens gebruikt.",
        "Documentation.LongDescription": "Zet een lijst met tekst om in een enkele tekst.  De opgegeven lineSeparator wordt aan elke regel toegevoegd.  Als deze niet is opgegeven, worden de Enter-tekens en regelinvoertekens gebruikt.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "Retourneert 'true' wanneer alle expressies 'true' zijn.",
        "Documentation.LongDescription": "Retourneert 'true' wanneer alle expressies in de lijst <code>list</code> 'true' zijn.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of alle expressies in de lijst {true, true, 2 > 0} 'true' zijn.",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "Vaststellen of alle expressies in de lijst {true, true, 2 < 0} 'true' zijn.",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "Retourneert 'true' wanneer een bepaalde expressie 'true' is.",
        "Documentation.LongDescription": "Retourneert 'true' wanneer een bepaalde expressie in de lijst <code>list</code> 'true' is.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Vaststellen of een van de expressies in de lijst {true, false, 2 > 0} 'true' is.",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "Vaststellen of een van de expressies in de lijst {2 = 0, false, 2 < 0} 'true' is.",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "Retourneert het gemiddelde van de waarden. Werkt met waarden voor getal, datum, datum/tijd, datum-/tijdzone en duur.",
        "Documentation.LongDescription": "Retourneert de gemiddelde waarde van de items in de lijst, <code>list</code>. Het resultaat wordt gegeven in hetzelfde gegevenstype als de waarden in de lijst. Werkt alleen met waarden voor getal, datum, tijd, datum/tijd, datum-/tijdzone en duur.\r\n    Als de lijst leeg is, wordt null geretourneerd.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Het gemiddelde zoeken van de lijst met getallen, <code>{3, 4, 6}</code>.",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "Het gemiddelde zoeken van de datumwaarden 1 januari, 2011, 2 januari, 2011 en 3 januari, 2011.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "Buffert een lijst.",
        "Documentation.LongDescription": "Buffert de lijst <code>list</code> in het geheugen. Het resultaat van deze aanroep is een stabiele lijst.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Een stabiele kopie maken van de lijst {1..10}.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "Retourneert een enkele lijst door meerdere lijsten te combineren.",
        "Documentation.LongDescription": "Neemt een lijst met lijsten, <code>lists</code>, en voegt deze samen in een enkele nieuwe lijst.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "De twee eenvoudige lijsten {1, 2} en {3, 4} combineren.",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "De twee lijsten {1, 2} en {3, {4, 5}}, waarvan een van de twee een geneste lijst bevat, combineren.",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "Retourneert het aantal items in de lijst.",
        "Documentation.LongDescription": "Retourneert het aantal items in de lijst <code>list</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Het aantal waarden zoeken in de lijst {1, 2, 3}.",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "Retourneert een lijst met de waarden waarin dubbele waarden zijn verwijderd.",
        "Documentation.LongDescription": "Retourneert een lijst die alle waarden in de lijst <code>list</code> bevat en waarin dubbele waarden zijn verwijderd. Als de lijst leeg is, is het resultaat een lege lijst.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De dubbele waarden verwijderen uit de lijst {1, 1, 2, 3, 3, 3}.",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "Retourneert de eerste waarde van de lijst of de opgegeven standaardwaarde als de lijst leeg is.",
        "Documentation.LongDescription": "Retourneert het eerste item uit de lijst <code>list</code> of de optionele standaardwaarde <code>defaultValue</code> als de lijst leeg is.\r\n    Als de lijst leeg is en er geen standaardwaarde is opgegeven, wordt <code>null</code> door de functie geretourneerd.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De eerste waarde zoeken in de lijst {1, 2, 3}.",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "De eerste waarde zoeken in de lijst {}. Als de lijst leeg is, wordt -1 geretourneerd.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "Retourneert het snijpunt van de lijstwaarden die in de invoer zijn gevonden.",
        "Documentation.LongDescription": "Retourneert het snijpunt van de lijstwaarden die in de invoerlijst <code>lists</code> zijn gevonden. Er kan een optionele parameter, <code>equationCriteria</code>, worden opgegeven.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Het snijpunt van de lijsten {1..5}, {2..6}, {3..7} uitzoeken.",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "Geeft aan waar er dubbele waarden in de lijst staan.",
        "Documentation.LongDescription": "Retourneert een logische waarde als er dubbele waarden in de lijst <code>list</code> staan; <code>true</code> als de lijst uniek is, <code>false</code> als er dubbele waarden in de lijst staan. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3} uniek is (d.w.z. geen dubbele waarden).",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of de lijst {1, 2, 3, 3} uniek is (d.w.z. geen dubbele waarden).",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "Retourneert 'true' als de lijst leeg is.",
        "Documentation.LongDescription": "Retourneert <code>true</code> als de lijst <code>list</code> geen waarden bevat (lengte 0). Als de lijst waarden bevat (lengte > 0), wordt <code>false</code> geretourneerd.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken of de lijst {} leeg is.",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "Uitzoeken of de lijst {1, 2} leeg is.",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "Retourneert de laatste waarde van de lijst of de opgegeven standaardwaarde als de lijst leeg is.",
        "Documentation.LongDescription": "Retourneert het laatste item uit de lijst <code>list</code> of de optionele standaardwaarde <code>defaultValue</code> als de lijst leeg is.\r\n    Als de lijst leeg is en er is geen standaardwaarde opgegeven, wordt <code>null</code> door de functie geretourneerd.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De laatste waarde in de lijst {1, 2, 3} zoeken.",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "De laatste waarde in de lijst {} opzoeken of -1 als de lijst leeg is.",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "Retourneert de laatste waarde uit de lijst.  Hiermee kan worden opgegeven hoeveel waarden er moeten worden geretourneerd of kan een in aanmerking komende voorwaarde worden opgegeven.",
        "Documentation.LongDescription": "Retourneert het laatste item uit de lijst <code>list</code>. Als de lijst leeg is, wordt er een uitzondering gegenereerd.\r\n Bij deze functie wordt gebruik gemaakt van een optionele parameter, <code>countOrCondition</code>, als ondersteuning bij het verzamelen van meerdere items of filteritems. <code>countOrCondition</code> kan op drie manieren worden opgegeven:\r\n <ul>\r\n  <li>Als er een getal wordt opgegeven, wordt er niet meer dan dat aantal items geretourneerd. </li>\r\n  <li>Als er een voorwaarde wordt opgegeven, worden te beginnen bij het einde van de lijst alleen die items geretourneerd die in eerste instantie aan die voorwaarde voldoen. Wanneer een item niet aan die voorwaarde voldoet, stopt de bewerking. </li>\r\n  <li>Als deze parameter null is, wordt het laatste item uit de lijst geretourneerd.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De laatste waarde in de lijst {3, 4, 5, -1, 7, 8, 2} zoeken.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "De laatste waarden in de lijst {3, 4, 5, -1, 7, 8, 2} opzoeken die groter zijn dan 0.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "Retourneert de maximumwaarde of de standaardwaarde voor een lege lijst.",
        "Documentation.LongDescription": "Hiermee wordt het maximumitem in de lijst <code>list</code> geretourneerd of de optionele standaardwaarde <code>default</code> als de lijst leeg is.\r\n Een optionele comparisonCriteria-waarde, <code>comparisonCriteria</code>, kan worden opgegeven om te bepalen hoe de items in de lijst moeten worden vergeleken. Als deze parameter null is, wordt de standaardvergelijkingsfunctie gebruikt.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De maximale waarde in de lijst {1, 4, 7, 3, -2, 5} zoeken.",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "De maximale waarde in de lijst {} opzoeken of -1 retourneren als de lijst leeg is. ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "Retourneert de mediaanwaarde uit de lijst.",
        "Documentation.LongDescription": "Hiermee wordt het mediaanitem in de lijst <code>list</code> als resultaat geretourneerd. Deze functie retourneert <code>null</code> als de lijst geen andere waarden dan <code>null</code> bevat.\r\n Als er een even aantal items is, kiest de functie de kleinste van de twee mediaanitems, tenzij de lijst\r\n uitsluitend bestaat uit waarden voor datum/tijd, duur, getallen of tijden. In dat geval wordt het gemiddelde van de twee items berekend.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De mediaan van de lijst <code>{5, 3, 1, 7, 9}</code> zoeken.",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "Retourneert de minimumwaarde of de standaardwaarde voor een lege lijst.",
        "Documentation.LongDescription": "Hiermee wordt het minimumitem in de lijst <code>list</code> geretourneerd of de optionele standaardwaarde <code>default</code> als de lijst leeg is.\r\n Een optionele comparisonCriteria-waarde, <code>comparisonCriteria</code>, kan worden opgegeven om te bepalen hoe de items in de lijst moeten worden vergeleken. Als deze parameter null is, wordt de standaardvergelijkingsfunctie gebruikt.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De minimale waarde in de lijst {1, 4, 7, 3, -2, 5} zoeken.",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "De minimale waarde in de lijst {} opzoeken of -1 retourneren als de lijst leeg is. ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "Retourneert de meest voorkomende waarde uit de lijst.",
        "Documentation.LongDescription": "Hiermee wordt het item geretourneerd dat het vaakst in de lijst wordt weergegeven, <code>list</code>. Als de lijst leeg is, wordt een uitzondering geretourneerd. Als meerdere items worden weergegeven met dezelfde maximumfrequentie, wordt de laatste gekozen.\r\n Een optionele <code>comparisonCriteria</code>-waarde, <code>equationCriteria</code>, kan worden opgegeven voor het aansturen van gelijkheidstesten. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Het item opzoeken dat het meest voorkomt in de lijst <code>{\"A\", 1, 2, 3, 3, 4, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "Het item opzoeken dat het meest voorkomt in de lijst <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "Retourneert een lijst met de waarden die het meest voorkomen in de andere lijst.",
        "Documentation.LongDescription": "Hiermee wordt het item geretourneerd dat het vaakst in de lijst wordt weergegeven, <code>list</code>. Als de lijst leeg is, wordt een uitzondering geretourneerd. Als meerdere items worden weergegeven met dezelfde maximumfrequentie, wordt de laatste gekozen.\r\n Een optionele <code>comparisonCriteria</code>-waarde, <code>equationCriteria</code>, kan worden opgegeven voor het aansturen van gelijkheidstesten. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "De items worden opgegeven die het meeste voorkomen in de lijst <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "Retourneert het aantal items uit de lijst die niet gelijk zijn aan nul.",
        "Documentation.LongDescription": "Retourneert het aantal items uit de lijst <code>list</code> die niet gelijk zijn aan nul.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "Retourneert een lijst met verschuivingen voor de invoer.",
        "Documentation.LongDescription": "Hiermee wordt een lijst met offsets geretourneerd voor de invoerlijst <code>list</code>.\r\n Wanneer u List.Transform gebruikt voor het wijzigen van een lijst, kan de lijst met posities worden gebruikt om de transformatie toegang tot de positie te geven.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De verschuivingen van waarden in de lijst {1, 2, 3, 4, null, 5} zoeken.",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "Retourneert het product van de getallen in de lijst.",
        "Documentation.LongDescription": "Retourneert het product van de getallen in de lijst, <code>numbersList</code>, die niet gelijk zijn aan nul. Retourneert null als er in de lijst geen waarden staan die niet gelijk zijn aan nul.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Het product van de getallen in de lijst <code>{1, 2, 3, 3, 4, 5, 5}</code> zoeken.",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "Retourneert een lijst met willekeurige getallen.",
        "Documentation.LongDescription": "Hiermee wordt een lijst met willekeurige getallen tussen 0 en 1 geretourneerd, met het aantal opgegeven waarden om te genereren en een optionele seedwaarde.\r\n<ul>\r\n <li><code>count</code>: het aantal willekeurige waarden om te genereren.</li>\r\n <li><code>seed</code>: <i>[Optioneel]</i> Een numerieke waarde die wordt gebruikt om de willekeurige getallengenerator te seeden. Als dit wordt weggelaten, wordt een unieke lijst met willekeurige getallen gegenereerd wanneer u de functie aanroept. Als u de seedwaarde met een getal opgeeft, wordt bij elke aanroep naar de functie dezelfde lijst met willekeurige getallen gegenereerd.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met drie willekeurig getallen maken.",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "Een lijst met drie willekeurig getallen maken en daarvoor een basiswaarde opgeven.",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "Retourneert een lijst die het opgegeven aantal elementen aan het begin van de lijst overslaat.",
        "Documentation.LongDescription": "Hiermee wordt een lijst geretourneerd waarmee het eerste element van lijst <code>list</code> wordt verwijderd. Als <code>list</code> een lege lijst is, wordt een lege lijst geretourneerd.\r\nDeze functie gebruikt een optionele parameter, <code>countOrCondition</code>, voor het ondersteunen van het verwijderen van meerdere waarden zoals in de onderstaande lijst.\r\n <ul>\r\n <li>Als een getal is opgegeven, wordt maximaal dat aantal items verwijderd. </li>\r\n <li>Als een voorwaarde is opgegeven, begint de geretourneerde lijst met het eerste element in <code>list</code> dat aan de criteria voldoet. Zodra een item niet aan de voorwaarde voldoet, worden geen verdere items meer behandeld. </li>\r\n <li>Als deze parameter null is, wordt het standaardgedrag waargenomen. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst van {1, 2, 3, 4, 5} zonder de eerste drie getallen maken.",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Een lijst van {5, 4, 2, 6, 1} maken die begint met een getal kleiner dan 3.",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "Retourneert een lijst die het opgegeven aantal elementen van het einde van de lijst verwijdert.",
        "Documentation.LongDescription": "Retourneert een lijst die het de laatste <code>countOrCondition</code> elementen van het einde van lijst <code>list</code> verwijdert. Als <code>list</code> minder dan <code>countOrCondition</code> elementen heeft, wordt er een lege lijst geretourneerd.\r\n <ul>\r\n <li>Als er een getal wordt opgegeven, wordt er niet meer dan dat aantal items verwijderd. </li>\r\n <li>Als er een voorwaarde wordt opgegeven, eindigt de geretourneerde lijst met het eerste element van onderaf in <code>list</code> dat aan de criteria voldoet. Wanneer een item niet aan de voorwaarde voldoet, stopt de bewerking. </li>\r\n <li>Als deze parameter null is, wordt slechts één item verwijderd. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst van {1, 2, 3, 4, 5} zonder de laatste drie getallen maken.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Een lijst van {5, 4, 2, 6, 4} maken die eindigt met een getal kleiner dan 3.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "Verwijdert alle null-waarden uit de opgegeven lijst.",
        "Documentation.LongDescription": "Verwijdert alle instanties van null-waarden in de <code>list</code>. Als er geen null-waarden in de lijst staan, wordt de oorspronkelijke lijst geretourneerd.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "De null-waarden uit de lijst {1, 2, 3, null, 4, 5, null, 6} verwijderen.",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "Keert de volgorde van waarden in de lijst om.",
        "Documentation.LongDescription": "Retourneert een lijst met de waarden in de lijst <code>list</code> in omgekeerde volgorde.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst van {1..10} in omgekeerde volgorde maken.",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "Retourneert het enige lijstitem voor een lijst met lengte 1. In alle andere gevallen wordt er een uitzondering gegenereerd.",
        "Documentation.LongDescription": "Als er maar één item in de lijst <code>list</code> staat, wordt dat item geretourneerd.\r\n Als er meer dan één item in de lijst staat of de lijst leeg is, retourneert functie geeft een uitzondering.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De enkele waarde in de lijst {1} zoeken.",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "De enkele waarde in de lijst {1, 2, 3} zoeken.",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "Retourneert het enige lijstitem voor een lijst met lengte 1 en de standaardwaarde voor een lege lijst.",
        "Documentation.LongDescription": "Als er maar één item in de lijst <code>list</code> staat, wordt dat item geretourneerd.\r\n Als de lijst leeg is, retourneert de functie null tenzij een optionele <code>default</code> is opgegeven. Als er meer dan één item in de lijst staat, retourneert de functie een fout.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "De enkele waarde in de lijst {1} zoeken.",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "De enkele waarde in de lijst {} zoeken.",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "De enkele waarde in de lijst {} zoeken. Als deze lijst leeg is, wordt -1 geretourneerd.",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "Retourneert een lijst die het opgegeven aantal elementen aan het begin van de lijst overslaat.",
        "Documentation.LongDescription": "Hiermee wordt een lijst geretourneerd waarmee het eerste element van lijst <code>list</code> wordt overgeslagen. Als <code>list</code> een lege lijst is, wordt een lege lijst geretourneerd.\r\nDeze functie gebruikt een optionele parameter, <code>countOrCondition</code>, voor het ondersteunen van het overslaan van meerdere waarden zoals in de onderstaande lijst.\r\n <ul>\r\n <li>Als een getal is opgegeven, wordt maximaal dat aantal items overgeslagen. </li>\r\n <li>Als een voorwaarde is opgegeven, begint de geretourneerde lijst met het eerste element in <code>list</code> dat aan de criteria voldoet. Zodra een item niet aan de voorwaarde voldoet, worden geen verdere items meer behandeld. </li>\r\n <li>Als deze parameter null is, wordt het standaardgedrag is waargenomen. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Een lijst van {1, 2, 3, 4, 5} zonder de eerste drie getallen maken.",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Een lijst van {5, 4, 2, 6, 1} maken die begint met een getal kleiner dan 3.",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "Sorteert een lijst met gegevens volgens de opgegeven criteria.",
        "Documentation.LongDescription": "Hiermee wordt een lijst met gegevens, <code>list</code>, gesorteerd volgens de optionele criteria die zijn opgegeven. \r\n Er kan een optionele parameter, <code>comparisonCriteria</code>, worden opgegeven als vergelijkingscriterium. Deze kan de volgende waarden aannemen:\r\n <ul>\r\n <li> Om de volgorde te bepalen kan het vergelijkingscriterium een opsommingswaarde voor de volgorde zijn. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li> \r\n <li> Voor het berekenen van een sleutel voor de sortering kan een functie van één argument worden gebruikt. </li> \r\n <li> Voor zowel het selecteren van een sleutel als het bepalen van de volgorde kan het vergelijkingscriterium een lijst zijn met de sleutel en de volgorde (<code>{each 1 / _, Order.Descending}</code>). </li> \r\n <li> Voor het volledig bepalen van de vergelijking kan een functie met twee argumenten worden gebruikt. Aan deze functie worden twee item van een lijst doorgegeven (twee willekeurige items in een willekeurige volgorde). De functie moet een van de volgende waarden retourneren:\r\n <ul>\r\n <li> <code>-1</code>: Het eerste item is kleiner dan het tweede item.</li>\r\n <li> <code>0</code>: De items zijn gelijk.</li>\r\n <li> <code>1</code>: Het eerste item is groter dan het tweede item.</li>\r\n </ul>\r\n Value.Compare is een methode waarmee deze logica kan worden gedelegeerd. </li>\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "De lijst {2, 3, 1} sorteren.",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "De lijst {2, 3, 1} in aflopende volgorde sorteren.",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "De lijst {2, 3, 1} met behulp van de methode Value.Compare in aflopende volgorde sorteren.",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "Retourneert een steekproef op basis van de schatting van de standaarddeviatie.",
        "Documentation.LongDescription": "Hiermee wordt een op een voorbeeld gebaseerde schatting geretourneerd van de standaarddeviatie van de waarden in de lijst, <code>numbersList</code>.\r\n Als <code>numbersList</code> een lijst met getallen is, wordt een getal geretourneerd.\r\n Een uitzondering wordt geretourneerd voor een lege lijst of een lijst met items die niet van het type <code>number</code> is.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "De standaarddeviatie van de getallen 1 t/m 5 zoeken.",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "Retourneert de som van de items in de lijst.",
        "Documentation.LongDescription": "Retourneert de som van de waarden in de lijst <code>list</code> die niet gelijk zijn aan nul.  Retourneert null als er in de lijst geen waarden staan die niet gelijk zijn aan nul.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "De som van de getallen in de lijst <code>{1, 2, 3}</code> zoeken.",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "Retourneert de samenvoeging van de lijstwaarden die in de invoer zijn gevonden.",
        "Documentation.LongDescription": "Hiermee wordt een lijst met lijsten <code>lists</code> gebruikt, worden de items in de afzonderlijke lijsten gecombineerd en worden deze in de uitvoerlijst geretourneerd. De geretourneerde lijst bevat hierdoor alle items in alle invoerlijsten.\r\n Deze bewerking houdt traditionele bag-semantiek aan. Dubbele waarden worden gekoppeld als onderdeel van de combinatie.\r\n Een optionele vergelijkingscriteriawaarde, <code>equationCriteria</code>, kan worden opgegeven voor het aansturen van gelijkheidstesten. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Een samenvoeging van de lijst {1..5}, {2..6}, {3..7} maken.",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "Retourneert een lijst met lijsten door items te combineren die dezelfde positie hebben in meerdere lijsten.",
        "Documentation.LongDescription": "Neemt een lijst met lijsten, <code>lists</code> en retourneert een lijst met lijsten met items die dezelfde positie hebben in meerdere lijsten.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Zipt de twee eenvoudige lijsten {1, 2} en {3, 4}.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Zipt de twee eenvoudige lijsten met verschillende lengtes {1, 2} en {3}.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "Maakt van de opgegeven waarde een logische waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>logical</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Als de opgegeven waarde <code>value</code> <code>null</code> is, retourneert <code>Logical.From</code> <code>null</code>. Als de opgegeven waarde <code>value</code> <code>logical</code> is, wordt <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>logical</code>-waarde:\r\n <ul>\r\n <li><code>text</code>: een <code>logical</code>-waarde van de tekstwaarde, ofwel <code>\"true\"</code> of <code>\"false\"</code>. Raadpleeg <code>Logical.FromText</code> voor meer informatie.</li>\r\n <li><code>number</code>: <code>false</code> als <code>value</code> gelijk is aan <code>0</code>, anders <code>true</code>.</li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt een fout geretourneerd.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Het getal <code>2</code> converteren naar een <code>logical</code> waarde.",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "Maakt een logische waarde van de tekstwaarde \"true\" en \"false\".",
        "Documentation.LongDescription": "Maakt een logische waarde van de tekstwaarde <code>text</code>: \"true\" of \"false\". Als <code>text</code> een andere tekenreeks bevat, wordt er een uitzondering gegenereerd. De tekstwaarde <code>text</code> is hoofdlettergevoelig.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Een logische waarde van de tekenreeks \"true\" maken.",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "Een logische waarde van de tekenreeks \"a\" maken.",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "Retourneert de tekst \"true\" of \"false\", uitgaande van een logische waarde.",
        "Documentation.LongDescription": "Maakt een tekstwaarde van de logische waarde <code>logicalValue</code>: <code>true</code> of <code>false</code>. Als <code>logicalValue</code> geen logische waarde is, wordt er een uitzondering gegenereerd.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Een tekstwaarde van de logische <code>true</code> maken.",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "Retourneert de absolute waarde van het getal.",
        "Documentation.LongDescription": "Hiermee wordt de absolute waarde van <code>number</code> geretourneerd. Als <code>number</code> null is, retourneert <code>Number.Abs</code> null.\r\n <ul>\r\n <li><code>number</code>: een <code>number</code> waarvoor de absolute waarde moet worden berekend.</li>\r\n </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Absolute waarde van -3.",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "Retourneert de arccosinus van het getal.",
        "Documentation.LongDescription": "Retourneert de arccosinus van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "Retourneert de arcsinus van het getal.",
        "Documentation.LongDescription": "Retourneert de arcsinus van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "Retourneert de arctangens van het getal.",
        "Documentation.LongDescription": "Retourneert de arctangens van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "Retourneert een byte waar elke bit het tegenovergestelde van de invoer is.",
        "Documentation.LongDescription": "Retourneert het resultaat van de uitvoering van een bitwise \"Not\"-bewerking op <code>number</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "Retourneert de cosinus van het getal.",
        "Documentation.LongDescription": "Retourneert de cosinus van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "De cosinus van de hoek 0 zoeken.",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "Retourneert de hyperbolische cosinus van het getal.",
        "Documentation.LongDescription": "Retourneert de hyperbolische cosinus van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "Verheft e tot de opgegeven macht.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat van he verheffen van e tot de macht <code>number</code> (exponential function) geretourneerd.\r\n <ul>\r\n <li><code>number</code>: een <code>number</code> waarvoor de exponentiële functie moet worden berekend. Als <code>number</code> null is, retourneert <code>Number.Exp</code> null. </li>\r\n </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Verheft e tot de macht 3.",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "Retourneert de faculteit van het getal.",
        "Documentation.LongDescription": "Retourneert de faculteit van het getal <code>number</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "De faculteit van 10 zoeken.",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "Maakt een getal van de opgegeven waarde",
        "Documentation.LongDescription": "Hiermee wordt een <code>number</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).\r\nAls de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Number.From</code> <code>null</code> geretourneerd. Als de opgegeven waarde <code>value</code> <code>number</code> is, wordt <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>number</code>-waarde:\r\n <ul>\r\n <li><code>text</code>: een <code>number</code>-waarde van de tekstweergave. Algemene tekstindelingen worden verwerkt (15, 3.423,10, 5.0E-10). Raadpleeg <code>Number.FromText</code> voor meer informatie.</li>\r\n <li><code>logical</code>: 1 voor <code>true</code>, 0 voor <code>false</code>.</li>\r\n <li><code>datetime</code>: een zwevendekommagetal met dubbele nauwkeurigheid dat een OLE-automatiseringsdatumequivalent bevat.</li>\r\n <li><code>datetimezone</code>: een zwevendekommagetal met dubbele nauwkeurigheid dat een OLE-automatiseringsdatumequivalent bevat van de lokale datum en tijd van <code>value</code>.</li>\r\n <li><code>date</code>: een zwevendekommagetal met dubbele nauwkeurigheid dat een OLE-automatiseringsdatumequivalent bevat.</li>\r\n <li><code>time</code>: uitgedrukt in gedeeltelijke dagen.</li>\r\n <li><code>duration</code>: uitgedrukt in gedeeltelijke en gehele dagen.</li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt er een fout geretourneerd.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De <code>number</code> waarde van <code>\"4\"</code> ophalen.",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "De <code>number</code> waarde van <code>#datetime(2020, 3, 20, 6, 0, 0)</code> ophalen.",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "De waarde <code>number</code> ophalen uit <code>\"12.3%\"</code>.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "Maakt getallen van algemene tekstindelingen (\"15\", \"3,423.10\", \"5.0E-10\").",
        "Documentation.LongDescription": "Hiermee wordt een waarde voor <code>number</code> geretourneerd vanuit de opgegeven tekstwaarde, <code>text</code>.\r\n <ul>\r\n <li><code>text</code>: de tekstweergave van een number-waarde. De weergave moet een gewone getalnotatie hebben, bijvoorbeeld 15, 3.423,10 of 5.0E-10.</li>\r\n <li><code>culture</code>: een optionele cultuur die bepaalt hoe <code>text</code> wordt geïnterpreteerd (bijvoorbeeld: nl-NL).</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De getalwaarde van <code>\"4\"</code> ophalen.",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "De getalwaarde van <code>\"5.0e-10\"</code> ophalen.",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "Geeft aan of de waarde een even getal is.",
        "Documentation.LongDescription": "Geeft aan of de waarde <code>number</code> een even getal is door <code>true</code> te retourneren bij een even getal en <code>false</code> als de waarde geen even getal is.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Controleren of 625 een even getal is.",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "Controleren of 82 een even getal is.",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "Geeft aan of de waarde NaN (Not a number, geen getal) is.",
        "Documentation.LongDescription": "Geeft aan of de waarde NaN (Not a number, geen getal) is. Retourneert <code>true</code> als <code>number</code> gelijk is aan <code>Number.IsNaN</code> en <code>false</code> als dat niet het geval is.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Controleren of 0 gedeeld door 0 NaN is.",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "Controleren of 1 gedeeld door 0 NaN is.",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "Geeft aan of de waarde een oneven getal is.",
        "Documentation.LongDescription": "Geeft aan of de waarde een oneven getal is. Retourneert <code>true</code> als <code>number</code> een oneven getal is en <code>false</code> als dat niet het geval is.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Controleren of 625 een oneven getal is.",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "Controleren of 82 een oneven getal is.",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "Retourneert de natuurlijke logaritme van het getal.",
        "Documentation.LongDescription": "Retourneert de natuurlijke logaritme van een getal, <code>number</code>. Als <code>number</code> null is, retourneert <code>Number.Ln</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "De natuurlijke logaritme van 15 ophalen.",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "Retourneert de logaritme van het getal met het opgegeven grondtal (standaard is dat e).",
        "Documentation.LongDescription": "Hiermee wordt de logaritme van een getal, <code>number</code>, geretourneerd met het opgegeven grondtal <code>base</code>. Als <code>base</code> niet is opgegeven, is Number.E de standaardwaarde.\r\n Als <code>number</code> null is, retourneert <code>Number.Log</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "De logaritme met grondtal 10 van 2 ophalen.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "De logaritme met grondtal e van 2 ophalen.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "Hiermee retourneert u de logaritme met grondtal 10 van het getal.",
        "Documentation.LongDescription": "Hiermee retourneert u de logaritme met grondtal 10 van een getal <code>number</code>. Als <code>number</code> null is, wordt met <code>Number.Log10</code> null geretourneerd.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "De logaritme met grondtal 10 van 2 ophalen.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "Retourneert het afgeronde getal. Het aantal cijfers en de afrondingsmodus kunnen worden opgegeven.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd voor de afronding van <code>number</code> op het dichtstbijzijnde getal. Als <code>number</code> null is, wordt met <code>Number.Round</code> null geretourneerd.<br>\r\n      <br>\r\n      Standaard wordt <code>number</code> afgerond op het dichtstbijzijnde gehele getal en worden tiebreaks afgerond op het dichtstbijzijnde even getal (met behulp van <code>RoundingMode.ToEven</code>, ook wel 'bankiersafronding' genoemd).<br>\r\n      <br>\r\n      U kunt deze standaardwaarden echter overschrijven via de volgende optionele parameters.\r\n      <ul>\r\n        <li><code>digits</code>: hiermee wordt <code>number</code> afgerond op het opgegeven aantal decimale cijfers.</li>\r\n        <li><code>roundingMode</code>: hiermee wordt het standaardgedrag bij een tiebreak overschreven als <code>number</code> in het midden tussen twee mogelijke afgeronde waarden staat\r\n      (raadpleeg <code>RoundingMode.Type</code> voor mogelijke waarden).</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Het getal 1,234 afronden op het dichtstbijzijnde gehele getal.",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "Het getal 1,56 afronden op het dichtstbijzijnde gehele getal.",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "Het getal 1,2345 afronden op twee decimalen.",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "Het getal 1,2345 afronden op drie decimalen (naar boven afronden).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "Het getal 1,2345 afronden op drie decimalen (naar beneden afronden).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "Retourneert het resultaat van het naar boven afronden van positieve getallen en het naar beneden afronden van negatieve getallen. Het aantal cijfers kan worden opgegeven.",
        "Documentation.LongDescription": "Retourneert het resultaat van het afronden van <code>number</code> op basis van het teken bij het getal. Deze functie rondt positieve getallen naar boven en negatieve getallen naar beneden af.\r\n    Als <code>digits</code> is opgegeven, wordt <code>number</code> afgerond naar het <code>digits</code> aantal decimale cijfers.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Het getal -1,2 afronden, weg van nul.",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "Het getal 1,2 afronden, weg van nul.",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "Het getal -1,234 afronden naar twee decimalen vanaf nul.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "Retourneert het vorige, hoogste gehele getal. Het aantal cijfers kan worden opgegeven.",
        "Documentation.LongDescription": "Retourneert het resultaat van naar beneden afronden van <code>number</code> op het vorige hoogste gehele getal. Als <code>number</code> nul is, retourneert deze functie null.\r\n\r\n Als <code>digits</code> is opgegeven, wordt <code>number</code> afgerond op het opgegeven aantal decimale cijfers.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Het getal 1,234 afronden op een geheel getal.",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "Het getal 1,999 afronden op een geheel getal.",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "1,999 afronden naar twee decimalen.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "Retourneert het resultaat van het naar beneden afronden van positieve getallen en het naar boven afronden van negatieve getallen. Het aantal cijfers kan worden opgegeven.",
        "Documentation.LongDescription": "Retourneert het resultaat van het afronden van <code>number</code> op basis van het teken bij het getal. Deze functie rondt positieve getallen naar beneden en negatieve getallen naar boven af.\r\n    Als <code>digits</code> is opgegeven, wordt <code>number</code> afgerond naar het <code>digits</code> aantal decimale cijfers.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Het getal -1,2 afronden op nul.",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "Het getal 1,2 afronden op nul.",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "Het getal -1.234 afronden naar twee decimalen richting nul.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "Retourneert het volgende, hoogste gehele getal. Het aantal cijfers kan worden opgegeven.",
        "Documentation.LongDescription": "Retourneert het resultaat van naar boven afronden van <code>number</code> op het volgende hoogste gehele getal. Als <code>number</code> nul is, retourneert deze functie null.\r\n Als <code>digits</code> is opgegeven, wordt <code>number</code> afgerond op het opgegeven aantal decimale cijfers.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Het getal 1,234 naar boven afronden op een geheel getal.",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "Het getal 1,999 naar boven afronden op een geheel getal.",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "1,234 afronden naar twee decimalen.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "Retourneert 1 als het getal positief is, -1 als het getal negatief is en 0 als het getal nul is.",
        "Documentation.LongDescription": "Hiermee wordt 1 geretourneerd als <code>number</code> een positief getal is, -1 als het een negatief getal is en 0 als het nul is.\r\n Als <code>number</code> null is, retourneert <code>Number.Sign</code> null.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Het teken van 182 bepalen.",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "Het teken van -182 bepalen.",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "Het teken van 0 bepalen.",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "Retourneert de sinus van het getal.",
        "Documentation.LongDescription": "Retourneert de sinus van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "De sinus van de hoek 0 zoeken.",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "Retourneert de hyperbolische sinus van het getal.",
        "Documentation.LongDescription": "Retourneert de hyperbolische sinus van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "Retourneert de vierkantswortel van het getal.",
        "Documentation.LongDescription": "Hiermee wordt de vierkantswortel van <code>number</code> geretourneerd.\r\n Als <code>number</code> null is, retourneert <code>Number.Sqrt</code> null. Als het een negatieve waarde is, wordt <code>Number.NaN</code> geretourneerd (geen getal).",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "De vierkantswortel van 625 zoeken.",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "De vierkantswortel van 85 zoeken.",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "Retourneert de tangens van het getal.",
        "Documentation.LongDescription": "Retourneert de tangens van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "De tangens van de hoek 1 zoeken.",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "Retourneert de hyperbolische tangens van het getal.",
        "Documentation.LongDescription": "Retourneert de hyperbolische tangens van <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "Converteert het opgegeven getal naar tekst.",
        "Documentation.LongDescription": "Converteert de numerieke waarde <code>number</code> naar een tekstwaarde volgens de notatie die is opgegeven door <code>format</code>.<br>\r\n    <br>\r\n    De notatie is een tekstwaarde die aangeeft hoe het getal moet worden geconverteerd. Ga voor meer informatie over de ondersteunde opmaakwaarden naar https://go.microsoft.com/fwlink/?linkid=2241210 en https://go.microsoft.com/fwlink/?linkid=2240884.<br>\r\n    <br>\r\n    Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld nl-NL) om het cultuurafhankelijke gedrag van <code>format</code> te bepalen.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Converteer een getal naar tekst zonder een notatie op te geven.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "Converteer een getal naar exponentiële notatie.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "Converteer een getal naar een percentagenotatie met slechts één decimaalpositie.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "Retourneert een tabel met OData-feeds aangeboden door een OData-service.",
        "Documentation.LongDescription": "Hiermee wordt een tabel met OData-feeds geretourneerd die door een OData-service worden aangeboden via de URI <code>serviceUri</code>, headers <code>headers</code>. Er kan een booleaanse waarde worden opgegeven die aangeeft of gelijktijdige verbindingen of de optionele recordparameter <code>options</code> moeten worden gebruikt. Hiermee kunnen de volgende opties worden ingesteld:\r\n    <ul>\r\n    <li><code>Query</code>: via een programma queryparameters toevoegen aan de URL zonder het gebruik van escapetekens.  </li>\r\n    <li> <code>Headers</code>: als deze waarde als een record wordt opgegeven, worden extra headers toegevoegd aan een HTTP-aanvraag.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: als deze waarde wordt opgegeven als lijst, worden deze HTTP-headersleutels uitgesloten van de berekening voor het in de cache opslaan van gegevens.</li>\r\n    <li> <code>ApiKeyName</code> : Als de doelsite API-sleutels ondersteunt, kan deze parameter worden gebruikt om de naam (niet de waarde) van de sleutelparameter op te geven die in de URL moet worden gebruikt. De werkelijke sleutelwaarde wordt opgegeven in de referenties</li>\r\n    <li> <code>Timeout</code> : Als deze waarde wordt ingesteld als duur, wordt de time-out gewijzigd voor een HTTP-aanvraag. De standaardwaarde is 600 seconden.</li>\r\n    <li> <code>EnableBatch</code> : een logische waarde (true/false) waarmee wordt ingesteld of het maken van een OData $batch-aanvraag wordt toegestaan als de waarde voor MaxUriLength wordt overschreden (de standaardinstelling is false).</li>\r\n    <li> <code>MaxUriLength</code> : Een getal dat de maximumlengte bepaalt voor een geldige URI die naar een OData-service wordt verzonden. Als deze waarde wordt overschreden en EnableBatch is ingesteld op true, wordt de aanvraag uitgevoerd naar een OData $batch-eindpunt, anders mislukt de aanvraag (de standaardinstelling is 2048).</li>\r\n    <li> <code>Concurrent</code> :  een logische waarde (true/false). Als deze optie is ingesteld op true, worden aanvragen naar de service gelijktijdig uitgevoerd. Als deze optie is ingesteld op false, worden aanvragen na elkaar uitgevoerd. Als de waarde niet is opgegeven, wordt deze bepaald door de AsynchronousRequestsSupported-annotatie van de service. Als voor de service niet is opgegeven of AsynchronousRequestsSupported wordt ondersteund, worden aanvragen na elkaar uitgevoerd.</li>\r\n    <li> <code>ODataVersion</code> :  Een cijfer (3 of 4) dat bepaalt welke OData-protocolversie moet worden gebruikt voor deze OData-service. Als de waarde niet is opgegeven, worden alle ondersteunde versies aangevraagd. De serviceversie wordt bepaald door de header OData-Version die wordt geretourneerd door de service.</li>\r\n    <li> <code>FunctionOverloads</code> : een logische waarde (true/false). Als deze optie is ingesteld op true, worden overbelastingen bij functie-import in de navigator als afzonderlijke vermeldingen vermeld. Als deze optie is ingesteld op false, worden overbelastingen bij functie-import in de navigator als één Union-functie vermeld. De standaardwaarde voor V3 is false. De standaardwaarde voor V4 is true.</li>\r\n    <li> <code>MoreColumns</code> : een logische waarde (true/false). Als deze optie is ingesteld op true, wordt de kolom Meer kolommen toegevoegd aan elke entiteitsfeed die open of polymorfe typen bevat. De kolom bevat de velden die niet in het basistype zijn gedeclareerd. Als de optie is ingesteld op false, is dit veld niet aanwezig. De standaardinstelling is false.</li>\r\n    <li> <code>IncludeAnnotations</code> : een lijst met door komma's gescheiden waarden met termnamen of patronen met naamruimtekwalificatie die moeten worden opgenomen, met een sterretje (*) als jokerteken. Als standaardinstelling is geen van de aantekeningen opgenomen.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code> : Een lijst met door komma's gescheiden naamruimtegekwalificeerde termnamen of patronen die moeten worden opgenomen in aanvragen voor metagegevensdocumenten, met een sterretje (*) als jokerteken. Standaard zijn dezelfde aantekeningen opgenomen als bij IncludeAnnotations.</li>\r\n      <li> <code>OmitValues</code> : stelt de OData-service in staat om te voorkomen dat bepaalde waarden worden weggeschreven in antwoorden. Indien erkend door de service, zullen wij die waarden afleiden uit de weggelaten velden. Opties omvatten:\r\n   <ul>\r\n      <li><code>ODataOmitValues.Nulls</code> : staat de OData-service toe om null waarden te negeren. </li>\r\n    </ul>\r\n     </li>\r\n        <li> <code>Implementation</code> : specificeert de implementatie van de OData-connector die moet worden gebruikt. Geldige waarden zijn 2.0 of null.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Maak verbinding met de TripPin OData-service.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "Retourneert het resultaat van het afleiden van SQL-mogelijkheden voor een ODBC-stuurprogramma.",
        "Documentation.LongDescription": "Retourneert het resultaat van het afleiden van SQL-mogelijkheden met de verbindingsreeks <code>connectionString</code> met ODBC. <code>connectionString</code> kan tekst zijn of een record met eigenschapswaardeparen. Eigenschapswaarden kunnen tekst of cijfers zijn.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "De afgeleide SQL-mogelijkheden voor een verbindingsreeks retourneren.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "Hiermee wordt de inhoud van het CSV-document geretourneerd als een tabel.",
        "Documentation.LongDescription": "Retourneert de inhoud van het Parquet-document als een tabel. Opties zijn onder andere:\n    <ul>\n    <li> <code>TypeMapping</code>: een tekstwaarde waarmee de standaardtypetoewijzing wordt bepaald bij het lezen en schrijven van bestanden. De standaardwaarde is null en probeert zo betrouwbaar mogelijk te blijven ten opzichte van het oorspronkelijke type. Met de waarde 'Sql' worden resultaten geproduceerd die het meest compatibel zijn met SQL Server.</li>\n    </ul>",
        "Documentation.Category": "Toegang tot gegevens",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Toegang tot gegevens",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "Hiermee wordt een percentagewaarde geretourneerd voor een opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>percentage</code>-waarde geretourneerd voor de opgegeven <code>value</code>. Als de opgegeven <code>value</code> <code>null</code> is, wordt door <code>Percentage.From</code> <code>null</code> geretourneerd. Als een opgegeven <code>value</code> een <code>text</code>-waarde met een navolgend procentteken heeft, wordt het geconverteerde decimale getal geretourneerd. Anders wordt de waarde geconverteerd naar een <code>nummer</code> met behulp van <code>Number.From</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De waarde <code>percentage</code> ophalen uit <code>\"12.3%\"</code>.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "Hiermee wordt een record met gegevensframes uit het RData-bestand geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een record met gegevensframes uit het RData-bestand geretourneerd.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "Combineert de records uit de opgegeven lijst.",
        "Documentation.LongDescription": "Combineert de records uit de opgegeven <code>records</code>. Als <code>records</code> geen recordwaarden bevat, wordt er een fout geretourneerd.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Een gecombineerde record van de records maken.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "Retourneert het aantal velden uit de record.",
        "Documentation.LongDescription": "Retourneert het aantal velden uit de record <code>record</code>.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Het aantal velden in de record zoeken.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "Retourneert de namen van de velden.",
        "Documentation.LongDescription": "Retourneert de namen van de velden in de record <code>record</code> als tekst.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "De namen van de velden in de record zoeken.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "Retourneert een lijst met de veldwaarden.",
        "Documentation.LongDescription": "Retourneert een lijst met de veldwaarden in record <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "De veldwaarden in de record zoeken.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "Maakt een record van een tabel in de notatie {[Name = name, Value = value]}.",
        "Documentation.LongDescription": "Retourneert een record van een tabel met records <code>table</code> die veld- en waardenamen <code>{[Name = name, Value = value]}</code> bevatten. Er wordt een uitzondering gegenereerd als de veldnamen niet uniek zijn.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Een record van de tabel in de notatie Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}) maken.",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "Retourneert een lijst met waarden die de veldwaarden van de invoerrecord bevatten.",
        "Documentation.LongDescription": "Retourneert een lijst met waarden die de veldwaarden uit de invoer <code>record</code> bevatten.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "De veldwaarden uit een record extraheren.",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "Retourneert een abstracte syntaxisstructuur (AST) die de toegang tot een kolom binnen een rijexpressie vertegenwoordigt.",
        "Documentation.LongDescription": "Retourneert een abstracte syntaxisstructuur (AST) die de toegang tot de kolom <code>columnName</code> van de rij binnen een rijexpressie vertegenwoordigt.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een abstracte syntaxisstructuur gemaakt die de toegang tot de kolom CustomerName vertegenwoordigt.",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "Retourneert de abstracte syntaxisstructuur (AST) voor de hoofdtekst van een functie.",
        "Documentation.LongDescription": "<p>Hiermee wordt de abstracte syntaxisstructuur (AST) voor de hoofdtekst van <code>function</code> geretourneerd en genormaliseerd in een <i>rijexpressie</i>:\r\n<ul>\r\n  <li>De functie moet een lambda met 1 argument zijn.</li>\r\n  <li>Alle verwijzingen naar de functieparameter worden vervangen door <code>RowExpression.Row</code>.</li>\r\n  <li>Alle verwijzingen naar kolommen worden vervangen door <code>RowExpression.Column(<i>columnName</i>)</code>.</li>\r\n  <li>De abstracte syntaxisstructuur wordt vereenvoudigd en bevat alleen de volgende soorten knooppunten:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Aanroep</code></li>\r\n      <li><code>Unair</code></li>\r\n      <li><code>Binair</code></li>\r\n      <li><code>Als</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Er treedt een fout op als rijexpressie AST niet kan worden geretourneerd naar de hoofdtekst van <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt de abstracte syntaxisstructuur geretourneerd voor de hoofdtekst van de functie <code>each [CustomerID] = \"ALFKI\"</code>",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "Maakt een waarde voor Enkel van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een Single <code>number</code>-waarde geretourneerd vanuit de opgegeven <code>value</code>. Als de opgegeven <code>value</code> de waarde <code>null</code> heeft, wordt door <code>Single.From</code> de waarde <code>null</code> geretourneerd. Als de opgegeven <code>value</code> een <code>number</code>-waarde heeft binnen het bereik van Single, wordt <code>value</code> geretourneerd. In andere gevallen wordt een fout geretourneerd. Als <code>value</code> van een ander type is, wordt deze eerst geconverteerd naar een <code>number</code> met behulp van <code>Number.FromText</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "De <code>number</code>-waarde voor Enkel uit <code>\"1.5\"</code> ophalen.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "Hiermee wordt een tabel met gegevens van een Smartsheet-indexeindpunt geretourneerd.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "Hiermee wordt een aanroep verzonden naar de Smartsheet 2.0 REST API op het opgegeven eindpunt en wordt het geretourneerde gegevenselement omgezet in een tabel.",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt een tabel met gebruikersgegevens opgehaald via de Smartsheet-API",
            "Code": "Smartsheet.Content(\"users\")",
            "Result": "Een tabel met gebruikersgegevens die zijn geretourneerd door de Smartsheet-API"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "Retourneert een functie die bij elk van de opgegeven scheidingstekens tekst splitst in een lijst met tekst.",
        "Documentation.LongDescription": "Retourneert een functie die bij elk van de opgegeven scheidingstekens tekst splitst in een lijst met tekst.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Splits de invoer door komma's of puntkomma's, waarbij aanhalingstekens en scheidingstekens tussen citaten worden genegeerd en beginnend vanaf het begin van de invoer.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "Splits de invoer door komma's of puntkomma's, waarbij aanhalingstekens en scheidingstekens tussen citaten worden genegeerd en beginnend vanaf het einde van de invoer.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "Retourneert een functie die tekst splitst in een lijst met tekst conform het opgegeven scheidingsteken.",
        "Documentation.LongDescription": "Retourneert een functie die tekst splitst in een lijst met tekst conform het opgegeven scheidingsteken.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Splits de invoer door komma's, waarbij komma's met aanhalingstekens worden genegeerd.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "Retourneert een functie die bij elk opgegeven scheidingsteken in de reeks tekst splitst in een lijst met tekst.",
        "Documentation.LongDescription": "Retourneert een functie die bij elk opgegeven scheidingsteken in de reeks tekst splitst in een lijst met tekst.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Splits de invoer door komma's en vervolgens een puntkomma, te beginnen bij het begin van de invoer.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "Splits de invoer op komma's en vervolgens op puntkomma's, waarbij aanhalingstekens worden behandeld zoals elk ander teken en beginnend vanaf het einde van de invoer.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "Retourneert een functie die bij elke opgegeven lengte tekst splitst in een lijst met tekst.",
        "Documentation.LongDescription": "Retourneert een functie die bij elke opgegeven lengte tekst splitst in een lijst met tekst.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Splits de invoer in de eerste twee tekens, gevolgd door de volgende drie, te beginnen bij het begin van de invoer.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "Splits de invoer in de eerste drie tekens, gevolgd door de volgende twee, te beginnen bij het einde van de invoer.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "Retourneert een functie die op elke opgegeven positie tekst splitst in een lijst met tekst.",
        "Documentation.LongDescription": "Retourneert een functie die op elke opgegeven positie tekst splitst in een lijst met tekst.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Splits de invoer op de opgegeven posities, te beginnen bij het begin van de invoer.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "Splits de invoer op de opgegeven posities, te beginnen bij het einde van de invoer.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "Retourneert een functie die tekst splitst in een lijst met tekst conform de opgegeven verschuivingen en lengten.",
        "Documentation.LongDescription": "Retourneert een functie die tekst splitst in een lijst met tekst volgens de opgegeven verschuivingen en lengten. Een null-lengte geeft aan dat alle resterende invoer moet worden opgenomen.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Splits de invoer op basis van de opgegeven positie- en lengteparen, te beginnen bij het begin van de invoer. De bereiken in dit voorbeeld overlappen elkaar.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "Splits de invoer op basis van de opgegeven positie- en lengteparen, te beginnen bij het einde van de invoer.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "Splits de invoer in een postcode met vaste lengte, gevolgd door een plaatsnaam met variabele lengte.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "Retourneert een functie die bij de opgegeven lengte tekst steeds opnieuw splitst in een lijst met tekst.",
        "Documentation.LongDescription": "Retourneert een functie die bij de opgegeven lengte tekst steeds opnieuw splitst in een lijst met tekst.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "De invoer herhaaldelijk splitsen in segmenten van drie tekens, te beginnen bij het begin van de invoer.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "De invoer herhaaldelijk splitsen in segmenten van drie tekens, te beginnen bij het einde van de invoer.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "Hiermee wordt het juiste aantal rijen in de tabel geretourneerd.",
        "Documentation.LongDescription": "Retourneert het geschatte aantal rijen in de <code>table</code>, of een fout als de gegevensbron geen schatting ondersteunt.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Geef een schatting van het aantal unieke combinaties van plaats en staat in een grote tabel, die kan worden gebruikt als een kardinaliteitsschatting voor de kolommen. Kardinaliteitsramingen zijn belangrijk genoeg dat verschillende gegevensbronnen (zoals SQL Server) deze specifieke benadering ondersteunen, vaak met behulp van een algoritme met de naam HyperLogLog.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "Retourneert het aantal kolommen uit de tabel.",
        "Documentation.LongDescription": "Retourneert het aantal kolommen uit de tabel <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Het aantal kolommen in de tabel zoeken.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "Retourneert de kolomnamen als een lijst.",
        "Documentation.LongDescription": "Retourneert de kolomnamen uit de tabel <code>table</code> als een lijst met tekst.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "De kolomnamen van de tabel zoeken.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "Retourneert de eerste rij of een opgegeven standaardwaarde.",
        "Documentation.LongDescription": "Retourneert de eerste rij van de <code>table</code> of een optionele standaardwaarde, <code>default</code>, als de tabel leeg is.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De eerste rij van de tabel zoeken.",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "De eerst rij uit de tabel <code>({})</code> zoeken of [a = 0, b = 0] retourneren als de rij leeg is.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "De eerste kolom van de eerste rij in de tabel of een opgegeven standaardwaarde retourneren.",
        "Documentation.LongDescription": "De eerste kolom van de eerste rij in de tabel <code>table</code> of een opgegeven standaardwaarde retourneren.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "Geeft aan of de tabel alleen unieke rijen (geen duplicaten) bevat.",
        "Documentation.LongDescription": "Geeft aan of de <code>table</code> alleen unieke rijen (geen duplicaten) bevat. Retourneert <code>true</code> als de rijen uniek zijn. Als er dubbele rijen in de tabel staan, wordt <code>false</code> geretourneerd.\r\n    Een optionele parameter <code>comparisonCriteria</code> geeft aan van welke kolommen in de tabel wordt gezocht naar kopieën van die kolommen. Als <code>comparisonCriteria</code> niet is opgegeven, worden alle kolommen getest.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de tabel uniek is.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "Bepalen of de tabel uniek is in de kolom.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "Geeft aan of de tabel rijen bevat.",
        "Documentation.LongDescription": "Geeft aan of de <code>table</code> rijen bevat. Retourneert <code>true</code> als er geen rijen zijn (d.w.z. de tabel is leeg). Als de tabel niet leeg is, wordt <code>false</code> geretourneerd.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Bepalen of de tabel leeg is.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "Bepalen of de tabel <code>({})</code> leeg is.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "Retourneert de sleutels van de opgegeven tabel.",
        "Documentation.LongDescription": "Retourneert de sleutels van de opgegeven tabel.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "De lijst met sleutels voor een tabel ophalen.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "Retourneert de laatste rij of een opgegeven standaardwaarde.",
        "Documentation.LongDescription": "Retourneert de laatste rij van de <code>table</code> of een optionele standaardwaarde, <code>default</code>, als de tabel leeg is.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De laatste rij van de tabel zoeken.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "De laatste rij van de tabel <code>({})</code> zoeken of [a = 0, b = 0] retourneren als de rij leeg is.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "Retourneert het aantal rijen uit de tabel.",
        "Documentation.LongDescription": "Retourneert het aantal rijen uit de <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Het aantal rijen in de tabel zoeken.",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "Retourneert één rij uit de tabel.",
        "Documentation.LongDescription": "Retourneert de enkele rij in de ene rij <code>table</code>. Als er in de <code>table</code> meer rijen staan, wordt er een uitzondering gegenereerd.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "De rij in de tabel retourneren.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "Maakt een lijst met geneste lijsten met kolomwaarden uit een tabel.",
        "Documentation.LongDescription": "Maakt een lijst met geneste lijsten van de tabel, <code>table</code>.  Elk lijstitem is een interne lijst met de kolomwaarden.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met de kolomwaarden uit de tabel maken.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "Converteert een tabel naar een lijst door de opgegeven combinatiefunctie op elke rij met waarden in de tabel toe te passen.",
        "Documentation.LongDescription": "Converteert een tabel naar een lijst door de opgegeven combinatiefunctie op elke rij met waarden in de tabel toe te passen.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Combineer de tekst van elke rij met een komma.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "Converteert een tabel naar een lijst met records.",
        "Documentation.LongDescription": "Converteert een tabel, <code>table</code>, naar een lijst met records.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "De tabel converteren naar een lijst met records.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "Maakt een lijst met geneste lijsten met rijwaarden uit een tabel.",
        "Documentation.LongDescription": "Maakt een lijst met geneste lijsten van de tabel, <code>table</code>.  Elk lijstitem is een interne lijst met de rijwaarden.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met de rijwaarden uit de tabel maken.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "Hiermee maakt u een gewijzigde foutrecord die geen terugval activeert wanneer deze wordt gegenereerd door een handler die is gedefinieerd in een weergave (via Table.View).",
        "Documentation.LongDescription": "Hiermee maakt u een gewijzigde foutrecord op basis van <code>errorRecord</code> die geen terugval activeert wanneer deze wordt gegenereerd door een handler die is gedefinieerd in een weergave (via Table.View).",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "Hiermee wordt een functie gemaakt die kan worden onderschept door een handler die is gedefinieerd in een weergave (via Table.View).",
        "Documentation.LongDescription": "<p>Hiermee wordt een functie op basis van <code>function</code> gemaakt die kan worden verwerkt in een weergave die is gemaakt met <code>Table.View</code>.</p>\r\n<p>De handler <code>OnInvoke</code> van <code>Table.View</code> kan worden gebruikt om een handler voor de weergavefunctie te definiëren.</p>\r\n<p>Net als bij handlers voor ingebouwde bewerkingen, wordt <code>function</code> boven op de weergave toegepast als de handler <code>OnInvoke</code> niet is opgegeven, als deze de weergavefunctie niet verwerkt of als een fout wordt geactiveerd door de handler.</p>\r\n<p>Raadpleeg de gepubliceerde documentatie over de aangepaste connector van Power Query voor een completere beschrijving van <code>Table.View</code> en aangepaste weergavefuncties.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "Hiermee wordt de tekstwaarde geretourneerd waaruit alle stuurcodes zijn verwijderd.",
        "Documentation.LongDescription": "Hiermee wordt een tekstwaarde geretourneerd waaruit alle stuurcodes van <code>text</code> zijn verwijderd.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Verwijder regelinvoertekens en andere stuurcodes uit een tekstwaarde.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "Voegt een lijst met tekstwaarden samen tot één tekstwaarde.",
        "Documentation.LongDescription": "Retourneert het resultaat van het combineren van de lijst met tekstwaarden, <code>texts</code>, in één tekstwaarde. Alle <code>null</code> -waarden in <code>texts</code> worden genegeerd.\r\n    Er kan een optionele <code>separator</code> worden opgegeven die in de uiteindelijke gecombineerde tekst wordt gebruikt.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Tekstwaarden \"Seattle\" en \"WA\" combineren.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "Combineer de tekstwaarden 'Seattle' en 'WA', gescheiden door een komma en een spatie.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "Combineer de waarden 'Seattle', <code>null</code> en 'WA', gescheiden door een komma en een spatie. (De <code>null</code> wordt genegeerd.)",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "Maakt een tekstwaarde van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt de tekstweergave van <code>value</code> geretourneerd. De <code>value</code> kan een waarde van <code>number</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>datetimezone</code>, <code>logical</code>, <code>duration</code> of <code>binary</code> zijn.\r\n Als de opgegeven waarde null is, wordt door <code>Text.From</code> null geretourneerd. Een optionele <code>culture</code> kan ook worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Een tekstwaarde van het getal 3 maken.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "Decodeert gegevens vanuit een binaire vorm naar tekst.",
        "Documentation.LongDescription": "Decodeert gegevens, <code>binary</code>, met behulp van het type <code>encoding</code> vanuit een binaire waarde naar een tekstwaarde.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "Leidt het gedetailleerde getaltype (Int64.Type, Double.Type, enzovoort) af van een getal dat is gecodeerd in tekst.",
        "Documentation.LongDescription": "Leidt het gedetailleerde getaltype (Int64.Type, Double.Type, enzovoort) af van <code>text</code>. Er treedt een fout op als <code>text</code> geen getal is. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld 'en-US').",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "Retourneert het aantal tekens.",
        "Documentation.LongDescription": "Retourneert het aantal tekens uit de tekst <code>text</code>.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "Uitzoeken uit hoeveel tekens de tekst \"Hallo wereld\" bestaat.",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "Converteert alle tekens naar kleine letters.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van de conversie van alle tekens in <code>text</code> naar kleine letters. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "De tekst \"AbCd\" ophalen in kleine letters.",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "Maakt van de eerste letter van elk woord een hoofdletter.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van de conversie van de eerste letter van elk woord naar een hoofdletter in tekstwaarde <code>text</code>. Alle andere letters worden geretourneerd als kleine letters. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "<code>Text.Proper</code> op een eenvoudige zin gebruiken.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "Hiermee wordt de opgegeven <code>text</code> omgekeerd.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt de tekst '123' omgekeerd.",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "Codeert tekst in een binaire vorm.",
        "Documentation.LongDescription": "Codeert met behulp van de opgegeven <code>encoding</code> de opgegeven tekstwaarde, <code>text</code>, naar een binaire waarde.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "Retourneert een lijst met tekenwaarden uit de opgegeven tekstwaarde.",
        "Documentation.LongDescription": "Retourneert een lijst met tekenwaarden uit de opgegeven tekstwaarde <code>text</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Een lijst met tekenwaarden van de tekst \"Hallo Wereld\" maken.",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "Verwijdert alle voorloop- en volgspaties.",
        "Documentation.LongDescription": "Retourneert het resultaat van het verwijderen van alle voorloop- en volgspaties uit de tekstwaarde <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Voorloop- en volgspaties verwijderen uit \"     a b c d    \".",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "Verwijdert alle volgspaties.",
        "Documentation.LongDescription": "Retourneert het resultaat van het verwijderen van alle volgspaties uit de tekstwaarde <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Volgspaties verwijderen uit \"     a b c d    \".",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "Verwijdert alle voorloopspaties.",
        "Documentation.LongDescription": "Retourneert het resultaat van het verwijderen van alle voorloopspaties uit de tekstwaarde <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Voorloopspaties verwijderen uit \"     a b c d    \".",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "Converteert alle tekens naar hoofdletters.",
        "Documentation.LongDescription": "Hiermee wordt het resultaat geretourneerd van de conversie van alle tekens in <code>text</code> naar hoofdletters. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "De tekst \"aBcD\" ophalen in hoofdletters.",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "Retourneert het einde van het uur.",
        "Documentation.LongDescription": "Retourneert het einde van het uur dat wordt vertegenwoordigd door <code>dateTime</code>, inclusief fractionele seconden. Informatie over de tijdzone blijft behouden.\r\n <ul>\r\n <li><code>dateTime</code>: een <code>tijdstip</code>, <code>datum/tijd</code> of <code>datum/tijdzone</code> waarmee het einde van het uur wordt berekend.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het einde van het uur ophalen voor 14/5/2011 05:00:00 PM.",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "Het einde van het uur ophalen voor 17/5/2011 07:00:00 PM.",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "Maakt een tijd van de opgegeven waarde.",
        "Documentation.LongDescription": "Hiermee wordt een <code>time</code>-waarde geretourneerd van de opgegeven waarde <code>value</code>. Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).\r\nAls de opgegeven waarde <code>value</code> <code>null</code> is, wordt door <code>Time.From</code> <code>null</code> geretourneerd. Als de opgegeven waarde <code>value</code> <code>time</code> is, wordt <code>value</code> geretourneerd. Waarden van de volgende typen kunnen worden omgezet naar een <code>time</code>-waarde:\r\n <ul>\r\n <li><code>text</code>: een <code>time</code>-waarde van de tekstweergave. Raadpleeg <code>Time.FromText</code> voor meer informatie.</li>\r\n <li><code>datetime</code>: het tijdcomponent van de <code>value</code>.</li>\r\n <li><code>datetimezone</code>: het tijdcomponent van de lokale datetime-equivalent van <code>value</code>.</li>\r\n <li><code>number</code>: een <code>time</code>-equivalent voor het aantal gedeeltelijke dagen, uitgedrukt door <code>value</code>. Als <code>value</code> negatief of groter dan 1 is, wordt een fout geretourneerd.</li>\r\n </ul>\r\nAls <code>value</code> van een ander type is, wordt een fout geretourneerd.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Het getal <code>0.7575</code> converteren naar een <code>time</code>waarde.",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "<code>#datetime(1899, 12, 30, 06, 45, 12)</code> converteren naar een <code>time</code>waarde.",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "Hiermee maakt u een tijd op basis van lokale en universele en aangepaste tijdnotaties.",
        "Documentation.LongDescription": "Hiermee wordt een <code>tijd</code>-waarde van een tekstweergave <code>text</code> gemaakt. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>-waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, zal het tijdstip naar beste vermogen worden geparseerd.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>\"tt\"</code> bijvoorbeeld voor <code>'AM' of 'PM'</code>, terwijl voor <code>'ar-EG'</code> <code>\"tt\"</code> staat voor <code>'ص' of 'م'</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of wordt weggelaten, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kan <code>options</code> ook een tekstwaarde zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = nul, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "<code>\"10:12:31am\"</code> converteren naar een tijdwaarde.",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "<code>\"1012\"</code> converteren naar een tijdwaarde.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "<code>\"10\"</code> converteren naar een tijdwaarde.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "Retourneert het uurgedeelte.",
        "Documentation.LongDescription": "Retourneert het uurgedeelte van de opgegeven waarde <code>dateTime</code> voor <code>time</code>, <code>datetime</code> of <code>datetimezone</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Het uur zoeken in #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "Retourneert het minuutgedeelte.",
        "Documentation.LongDescription": "Retourneert het minuutgedeelte van de opgegeven waarde <code>dateTime</code> voor <code>time</code>, <code>datetime</code> of <code>datetimezone</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "De minuut zoeken in #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "Retourneert het secondegedeelte.",
        "Documentation.LongDescription": "Retourneert het secondegedeelte van de opgegeven waarde <code>dateTime</code> voor <code>time</code>, <code>datetime</code> of <code>datetimezone</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "De secondewaarde zoeken in een datum/tijdwaarde.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "Retourneert het begin van het uur.",
        "Documentation.LongDescription": "Retourneert het begin van het uur vertegenwoordigd door <code>dateTime</code>.\r\n <code>dateTime</code> moet een <code>tijdstip</code>-, <code>datum/tijd</code>- of <code>datum/tijdzone</code>-waarde zijn.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Het begin van het uur zoeken voor 10 oktober, 2011, 8:10:32 uur.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "Retourneert een record die onderdelen van de tijdwaarde bevat.",
        "Documentation.LongDescription": "Hiermee wordt een record met de onderdelen van de opgegeven Time-waarde, <code>time</code> geretourneerd.\r\n <ul>\r\n <li><code>time</code>: een <code>time</code>-waarde op basis waarvan de record of de onderdelen daarvan moeten worden berekend.</li>\r\n </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "De waarde voor de <code>#time(11, 56, 2)</code> converteren naar een record die waarden voor tijd bevat.",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "Retourneert een tekstweergave van de tijdwaarde.",
        "Documentation.LongDescription": "Hiermee wordt een tekstweergave van <code>time</code> geretourneerd. Er kan een optionele <code>record</code>-parameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. <code>culture</code> wordt alleen gebruikt voor verouderde werkstromen. De <code>record</code> kan de volgende velden bevatten:\r\n<ul>\r\n   <li><code>Format</code>: een <code>tekst</code>waarde die de indeling aangeeft die moet worden gebruikt. Ga naar https://go.microsoft.com/fwlink/?linkid=2180104 en https://go.microsoft.com/fwlink/?linkid=2180105 voor meer informatie. Als u dit veld weglaat of <code>nul</code> opgeeft, wordt de datum opgemaakt aan de hand van de standaardwaarde die is gedefinieerd door <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: als <code>Format</code> niet nul is, worden bepaalde indelingsaanduidingen bepaald door <code>Culture</code>. Voor <code>'en-US'</code> staat <code>\"tt\"</code> bijvoorbeeld voor <code>'AM' of 'PM'</code>, terwijl voor <code>'ar-EG'</code> <code>\"tt\"</code> staat voor <code>'ص' of 'م'</code>. Als <code>Format</code> gelijk is aan <code>nul</code>, bepaalt <code>Culture</code> de standaardindeling die moet worden gebruikt. Als <code>Culture</code> de waarde <code>nul</code> heeft of niet wordt gebruikt, wordt <code>Culture.Current</code> gebruikt.</li>\r\n</ul>\r\nAls u oudere werkstromen wilt ondersteunen, kunnen <code>options</code> en <code>culture</code> ook tekstwaarden zijn. Dit vertoont hetzelfde gedrag als <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "<code>#time(01, 30, 25)</code> converteren naar een <code>text</code>-waarde. <i>De uitvoer van resultaten kan variëren, afhankelijk van de huidige culture.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "Converteren met een aangepaste indeling en de Duitse cultuur.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "Converteren met standaardtijdnotatie.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "Retourneert een gesloten versie van het gegeven recordtype (of hetzelfde type indien dit reeds is gesloten).",
        "Documentation.LongDescription": "Retourneert een gesloten versie van het gegeven <code>record</code> <code>type</code> (of hetzelfde type indien dit reeds is gesloten).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Een gesloten versie maken van <code>type [ A = getal,…]</code>.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "Hiermee worden de facetten van een type geretourneerd.",
        "Documentation.LongDescription": "Hiermee wordt een record met de facetten van <code>type</code> geretourneerd.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "Retourneert een record met veldwaarden die zijn ingesteld op de naam van de parameters van een functietype, waarbij hun waarden zijn ingesteld op de overeenkomende typen.",
        "Documentation.LongDescription": "Retourneert een record met veldwaarden die zijn ingesteld op de naam van de parameters van <code>type</code>, waarbij hun waarden zijn ingesteld op de overeenkomende typen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Zoek de typen parameters voor de functie <code>(x als getal, y als tekst)</code>.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "Retourneert een getal waarmee het minimum aantal parameters wordt aangegeven dat is vereist om het type functie aan te roepen.",
        "Documentation.LongDescription": "Retourneert een getal waarmee het minimum aantal parameters wordt aangegeven dat is vereist om de invoer <code>type</code> van de functie aan te roepen.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Zoek het aantal vereiste parameters voor de functie <code>(x als getal, optioneel y als tekst)</code>.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "Retourneert een type dat wordt geretourneerd door een functietype.",
        "Documentation.LongDescription": "Retourneert een type dat wordt geretourneerd door een functie <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Zoek het retourtype van <code>() als willekeurig)</code>.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "Retourneert 'true' indien voor een type een null-waarde is toegestaan; anders wordt 'false' geretourneerd.",
        "Documentation.LongDescription": "Retourneert <code>true</code> indien voor een type een <code>null-waarde is toegestaan</code>; anders wordt <code>false</code> geretourneerd.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Bepaal of voor <code>getal</code> een null-waarde is toegestaan.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "Bepaal of voor <code>type getal waarvoor null-waarde is toegestaan</code> een null-waarde is toegestaan.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "Retourneert of een recordtype open is.",
        "Documentation.LongDescription": "Retourneert een <code>logische waarde</code> waarmee wordt aangegeven of een record <code>type</code> open is.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Bepaal of de record <code>type [ A = getal, ...]</code> open is.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "Retourneert een itemtype van een lijsttype.",
        "Documentation.LongDescription": "Retourneert een itemtype van een lijst <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Itemtype zoeken in de lijst <code>{number}</code>.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "Retourneert het type waarvoor geen null-waarde is toegestaan voor een type.",
        "Documentation.LongDescription": "Retourneert het type waarvoor geen <code>null-waarde is toegestaan</code> voor <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Retourneert het type waarvoor geen null-waarde is toegestaan van het <code>type getal waarvoor null-waarde is toegestaan</code>.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "Retourneert een geopende versie van het gegeven recordtype (of hetzelfde type indien dit reeds is geopend).",
        "Documentation.LongDescription": "Retourneert een geopende versie van het gegeven <code>record</code> <code>type</code> (of hetzelfde type indien dit reeds is geopend).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Maak een geopende versie van <code>type [ A = getal]</code>.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "Retourneert een record waarin de velden van een recordtype worden beschreven en waarbij elk veld van het geretourneerde recordtype een corresponderende naam en waarde heeft.",
        "Documentation.LongDescription": "Retourneert een record waarin de velden van een record <code>type</code> worden beschreven. Elk veld van het geretourneerde recordtype heeft een corresponderende naam en waarde, in de vorm van een record <code>[ Type = type, Optioneel = logische waarde ]</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Zoek de naam en waarde van de record <code>[ A = getal, optioneel B = willekeurig]</code>.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "Retourneert de mogelijk lege lijst met sleutels voor het opgegeven tabeltype.",
        "Documentation.LongDescription": "Retourneert de mogelijk lege lijst met sleutels voor het opgegeven tabeltype.<br>\r\n    <br>\r\n    Elke sleutel wordt gedefinieerd met behulp van een record in de volgende vorm:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: een lijst met de namen van kolommen waarmee de sleutel\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> als de sleutel de primaire sleutel van de tabel is; anders <code>false</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Retourneer de sleutelgegevens voor een tabeltype.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "Retourneert het rijtype van het tabeltype.",
        "Documentation.LongDescription": "Retourneert het rijtype van het opgegeven tabeltype. Het resultaat is altijd een recordtype.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "De rijtypegegevens voor een eenvoudige tabel retourneren.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "Retourneert de samenvoeging van een lijst met typen.",
        "Documentation.LongDescription": "Retourneert de samenvoeging van de typen in <code>types</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "Een record samenvoegen in een URI-queryreeks.",
        "Documentation.LongDescription": "Voeg de record <code>query</code> samen in een URI-queryreeks, waarbij tekens zo nodig worden voorzien van escape-tekens.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Een queryreeks coderen die een aantal speciale tekens bevat.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "Codeert speciale tekens in overeenstemming met RFC 3986.",
        "Documentation.LongDescription": "Codeert speciale tekens in de invoer <code>data</code> in overeenstemming met de regels van RFC 3986.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "De speciale tekens coderen in \"+money$\".",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "Retourneert de onderdelen van de absolute URI van de invoer als een record.",
        "Documentation.LongDescription": "Retourneert de onderdelen van de invoer <code>absoluteUri</code> als een record, met waarden zoals schema, host, poort, pad, query, fragment, gebruikersnaam en wachtwoord.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "De onderdelen vinden van de absolute URI \"www.adventure-works.com\".",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "Een tekenreeks met procentversleuteling ontsleutelen.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "Voer de URL van de Azure DevOps Analytics-service in.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Hiermee wordt de inhoud die is gedownload via de URL van de Azure DevOps Analytics-service, geretourneerd als binaire waarde. Deze functie gebruikt verschillende aanmeldgegevens voor verschillende organisaties."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "Voer de URL van de Azure DevOps Analytics-service in.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Hiermee wordt de inhoud die is gedownload via de URL van de Azure DevOps Analytics-service, geretourneerd als binaire waarde. Deze functie gebruikt algemene aanmeldgegevens voor alle toegankelijke organisaties."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "Hiermee worden alternatieve queryplannen uitgedrukt.",
        "Documentation.LongDescription": "Hiermee worden alternatieve queryplannen uitgedrukt in een queryplan-expressie met de waarde Value.Expression(Value.Optimize(...)). Niet bestemd voor andere doeleinden.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "Retourneert een abstracte syntaxisstructuur (AST) die de expressie van de waarde vertegenwoordigt.",
        "Documentation.LongDescription": "Retourneert een abstracte syntaxisstructuur (AST) die de expressie van de waarde vertegenwoordigt",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "Maakt een sterk getypeerde waarde van een tekstweergave.",
        "Documentation.LongDescription": "Hiermee wordt een waarde gedecoreerd van een tekstweergave, <code>text</code>, en wordt deze geïnterpreteerd als een waarde met een juist type.\r\n <code>Value.FromText</code> neemt een tekstwaarde en retourneert een getal, logische waarde, null-waarde, datetime-waarde, duration-waarde of text-waarde. De lege tekstwaarde wordt opgevat als een null-waarde.\r\n Er kan ook een optionele <code>culture</code> worden opgegeven (bijvoorbeeld: nl-NL).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "Retourneert een record die de metagegevens van de invoer bevat.",
        "Documentation.LongDescription": "Retourneert een record die de metagegevens van de invoer bevat.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "Hiermee krijgt Value.Expression de opdracht om de geoptimaliseerde expressie voor een waarde te retourneren.",
        "Documentation.LongDescription": "Als bij gebruik binnen Value.Expression <code>value</code> een query vertegenwoordigt die kan worden geoptimaliseerd, geeft deze functie aan dat de geoptimaliseerde expressie moet worden geretourneerd. Anders wordt <code>value</code> doorgevoerd zonder effect.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "Stript de invoer met metagegevens.",
        "Documentation.LongDescription": "Stript de invoer met metagegevens.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "Retourneert het type van de opgegeven waarde.",
        "Documentation.LongDescription": "Retourneert het type van de opgegeven waarde.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.LongDescription": "Deze functie is alleen bedoeld voor intern gebruik.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "Retourneert de HTML voor de opgegeven URL, zoals weergegeven door een webbrowser.",
        "Documentation.LongDescription": "Retourneert de HTML voor de opgegeven <code>url</code>, zoals weergegeven door een webbrowser. Er kan een optionele recordparameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n     <ul>\r\n        <li><code>ApiKeyName</code>: als de doelsite een API-sleutel heeft, kan deze parameter worden gebruikt om de naam (niet de waarde) op te geven van de sleutelparameter die moet worden gebruikt in de URL. De werkelijke sleutelwaarde wordt opgegeven in credential.</li>\r\n        <li><code>WaitFor</code>: hiermee geeft u een voorwaarde op waarop moet worden gewacht voordat de HTML wordt gedownload, naast wachten tot de pagina is geladen (wat altijd gebeurt). Kan een record zijn met time-out- en/of selectorvelden. Als er alleen een time-out is opgegeven, wacht de functie de opgegeven tijd voordat de HTML wordt gedownload. Als zowel een Kiezer als een time-out zijn opgegeven en de time-out verstrijkt voordat de Kiezer op de pagina bestaat, wordt er een fout gegenereerd. Als een Kiezer is opgegeven zonder time-out, wordt een standaardtime-out van 30 seconden toegepast.</li>\r\n      </ul>\r\n    ",
        "Documentation.Category": "Toegang tot gegevens",
        "Documentation.Examples": [
          {
            "Description": "Hiermee wordt de HTML voor https://microsoft.com geretourneerd.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Hiermee wordt de HTML voor https://microsoft.com geretourneerd nadat is gewacht op het weergeven van een CSS-selector.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div:visible\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Hiermee wordt de HTML voor https://microsoft.com geretourneerd nadat tien seconden is gewacht.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Hiermee wordt de HTML voor https://microsoft.com geretourneerd nadat maximaal tien seconden is gewacht op het weergeven van een CSS-selector.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div:visible\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "Retourneert de inhoud die via de URL in een binaire indeling is gedownload.",
        "Documentation.LongDescription": "Retourneert de inhoud die is gedownload van <code>url</code> als binair bestand. Er kan een optionele recordparameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>Query</code> : Via een programma queryparameters aan de URL toevoegen zonder gebruik van escapetekens.</li>\r\n<li><code>ApiKeyName</code> : Als de doelsite een notatie van een API-sleutel bevat, kan deze parameter worden gebruikt om de naam (niet de waarde) op te geven van de sleutelparameter die moet worden gebruikt in de URL. De daadwerkelijke sleutelwaarde wordt in de referentie gegeven.</li>\r\n<li><code>Headers</code> : Als deze waarde wordt opgegeven als een record, worden extra headers toegevoegd aan een HTTP-aanvraag.</li>\r\n<li><code>Timeout</code> : Als deze waarde wordt opgegeven als tijdsduur, wordt de time-out voor een HTTP-aanvraag gewijzigd. De standaardwaarde is 100 seconden.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Als u deze waarde opgeeft als een lijst, worden deze HTTP-headersleutels uitgesloten van de berekening voor het opslaan van gegevens in het cachegeheugen.</li>\r\n<li><code>IsRetry</code> : Als deze logische waarde wordt opgegeven als true, worden bestaande antwoorden in de cache genegeerd bij het ophalen van gegevens.</li>\r\n<li><code>ManualStatusHandling</code> : Als deze waarde wordt opgegeven als een lijst, wordt voorkomen dat de ingebouwde verwerking wordt uitgevoerd voor HTTP-aanvragen waarvoor het antwoord een van deze statuscodes bevat.</li>\r\n<li><code>RelativePath</code> : Als deze waarde wordt opgegeven als tekst, wordt de waarde toegevoegd aan de basis-URL voordat de aanvraag wordt uitgevoerd.</li>\r\n<li><code>Content</code> : Als u deze waarde opgeeft, wordt de webaanvraag van een GET naar een POST gewijzigd met de waarde van de optie als de inhoud van POST.</li>\r\n</ul>\r\n\r\n    De HTTP-aanvraag wordt gedaan als GET (wanneer er geen inhoud is opgegeven) of een POST (wanneer er inhoud is). POST-aanvragen kunnen alleen anoniem worden gedaan.\r\n    <br>\r\n    De headers van het HTTP-antwoord zijn beschikbaar als metagegevens voor het binaire resultaat. Buiten een aangepaste gegevensconnectorcontext is alleen een subset antwoordheaders beschikbaar (uit veiligheidsoverwegingen).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Haal de inhoud van <code>\"https://bing.com/search?q=Power+Query\"</code> op met behulp van de opties RelativePath en Query. Deze opties kunnen worden gebruikt om dynamisch een query voor een statische basis-URL uit te voeren.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "Voer een POST uit op een URL, waarbij een binaire JSON-nettolading wordt doorgegeven en het antwoord wordt geparseerd als JSON.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "Maak verbinding met een beveiligde URL die een verificatiesleutel accepteert als onderdeel van de queryreeks. In plaats van de geheime sleutel in M hard te coderen (wat een beveiligingsrisico vormt), \r\n kan de sleutel veilig worden geleverd door de naam (niet de waarde) in M op te geven, web-API-verificatie te kiezen en de sleutelwaarde in te voeren als onderdeel van de web-API-referentie.\r\n Bij gebruik op deze manier wordt in het volgende voorbeeld een aanvraag voor <code>\"https://contoso.com/api/customers/get?api_key=******\"</code> gegenereerd.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "Retourneert de HTTP-headers die van de URL zijn gedownload als recordwaarde.",
        "Documentation.LongDescription": "Retourneert de headers die zijn gedownload van <code>url</code> als record. Er kan een optionele recordparameter, <code>options</code>, worden opgegeven om aanvullende eigenschappen op te geven. De record kan de volgende velden bevatten:\r\n    <ul>\r\n<li><code>Query</code> : Via een programma queryparameters aan de URL toevoegen zonder gebruik van escapetekens.</li>\r\n<li><code>ApiKeyName</code> : Als de doelsite een notatie van een API-sleutel bevat, kan deze parameter worden gebruikt om de naam (niet de waarde) op te geven van de sleutelparameter die moet worden gebruikt in de URL. De daadwerkelijke sleutelwaarde wordt in de referentie gegeven.</li>\r\n<li><code>Headers</code> : Als deze waarde wordt opgegeven als een record, worden extra headers toegevoegd aan een HTTP-aanvraag.</li>\r\n<li><code>Timeout</code> : Als deze waarde wordt opgegeven als tijdsduur, wordt de time-out voor een HTTP-aanvraag gewijzigd. De standaardwaarde is 100 seconden.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Als u deze waarde opgeeft als een lijst, worden deze HTTP-headersleutels uitgesloten van de berekening voor het opslaan van gegevens in het cachegeheugen.</li>\r\n<li><code>IsRetry</code> : Als deze logische waarde wordt opgegeven als true, worden bestaande antwoorden in de cache genegeerd bij het ophalen van gegevens.</li>\r\n<li><code>ManualStatusHandling</code> : Als deze waarde wordt opgegeven als een lijst, wordt voorkomen dat de ingebouwde verwerking wordt uitgevoerd voor HTTP-aanvragen waarvoor het antwoord een van deze statuscodes bevat.</li>\r\n<li><code>RelativePath</code> : Als deze waarde wordt opgegeven als tekst, wordt de waarde toegevoegd aan de basis-URL voordat de aanvraag wordt uitgevoerd.</li>\r\n</ul>\r\n\r\n    De HTTP-aanvraag wordt gedaan met de HEAD-methode. Buiten een aangepaste gegevensconnectorcontext is alleen een subset antwoordheaders beschikbaar (uit veiligheidsoverwegingen).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Haal de HTTP-headers voor <code>\"https://bing.com/search?q=Power+Query\"</code> op met behulp van de opties RelativePath en Query.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "De autorisatiecontext waarvoor een ACE-voorwaarde (Access Control Entry) wordt geëvalueerd.",
        "Documentation.LongDescription": "De autorisatiecontext waarvoor een ACE-voorwaarde (Access Control Entry) wordt geëvalueerd.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "Een tabel met ACE's (Access Control Entries).",
        "Documentation.LongDescription": "Een geordende tabel met ACE's (access control entities) die autorisatieregels vertegenwoordigen. Elke rij wordt vergeleken met de huidige autorisatiecontext (op volgorde) en de eerste rij waarvoor de expressie <code>Condition</code> de waarde true retourneert, bepaalt welke regel van toepassing is. De kolom <code>Action</code> vertegenwoordigt het type actie waarop de regel van toepassing is. De kolom <code>AccessControlKind</code> bepaalt of er toegang moet worden verleend of geweigerd voor de actie.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "Hiermee wordt het type toegangsbeheer aangegeven.",
        "Documentation.LongDescription": "Hiermee wordt het type toegangsbeheer aangegeven.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "Het type dat alle waarden vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle waarden vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "Het type dat alle binaire waarden vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle binaire waarden vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "Hier kunt u het type binaire codering opgeven.",
        "Documentation.LongDescription": "Hier kunt u het type binaire codering opgeven.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "Hiermee wordt bepaald hoe vaak het item in de groep wordt verwacht.",
        "Documentation.LongDescription": "Hiermee wordt bepaald hoe vaak het item in de groep wordt verwacht.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "Beschrijft het type buffering dat moet worden uitgevoerd.",
        "Documentation.LongDescription": "Beschrijft het type buffering dat moet worden uitgevoerd.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "Het type dat alle bytes vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle bytes vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "Hiermee wordt de bytevolgorde bepaald.",
        "Documentation.LongDescription": "Hiermee wordt de bytevolgorde bepaald.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "Het type dat alle tekens vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle tekens vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "Hiermee wordt het type compressie bepaald.",
        "Documentation.LongDescription": "Hiermee wordt het type compressie bepaald.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Geeft de significantie aan van aanhalingstekens in csv-documenten.",
        "Documentation.LongDescription": "Geeft de significantie aan van aanhalingstekens in csv-documenten.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "Het type dat de valutawaarde vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat de valutawaarde vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "Het type dat alle datumwaarden vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle datumwaarden vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "Het type dat alle datum- en tijdwaarden vertegenwoordigt zonder een bijbehorende tijdzone.",
        "Documentation.LongDescription": "Het type dat alle datum- en tijdwaarden vertegenwoordigt zonder een bijbehorende tijdzone.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "Het type dat alle datum- en tijdwaarden vertegenwoordigt met betrekking tot een tijdzone.",
        "Documentation.LongDescription": "Het type dat alle datum- en tijdwaarden vertegenwoordigt met betrekking tot een tijdzone.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "Hiermee wordt de dag van de week bepaald.",
        "Documentation.LongDescription": "Hiermee wordt de dag van de week bepaald.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "Het type dat een decimaal getal met vaste komma vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een decimaal getal met vaste komma vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "Het type dat een drijvendekommagetal met dubbele precisie vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een drijvendekommagetal met dubbele precisie vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "Het type dat alle duurwaarden vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle duurwaarden vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "Hiermee wordt de verwachte actie bepaald voor extra waarden in een rij die meer waarden bevat dan verwacht.",
        "Documentation.LongDescription": "Hiermee wordt de verwachte actie bepaald voor extra waarden in een rij die meer waarden bevat dan verwacht.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "Het type dat alle functies vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle functies vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "Hiermee wordt het soort groepering bepaald.",
        "Documentation.LongDescription": "Er kunnen meerdere lokale groepen worden geproduceerd met dezelfde sleutelwaarde, maar er wordt slechts één globale groep geproduceerd voor een bepaalde sleutelwaarde.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "Het type dat de Guid-waarde vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat de Guid-waarde vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "Een id vertegenwoordigt een gebruiker, groep, apparaat of ander identificeerbaar item.",
        "Documentation.LongDescription": "Een id vertegenwoordigt een gebruiker, groep, apparaat of ander identificeerbaar item.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "Hiermee wordt een bereik gedefinieerd waarin id's worden gemaakt en vergeleken.",
        "Documentation.LongDescription": "Hiermee wordt een bereik gedefinieerd waarin id's worden gemaakt en vergeleken.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "Het type dat een 16-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een 16-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "Het type dat een 32-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een 32-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "Het type dat een 64-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een 64-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "Het type dat een 8-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een 8-bits geheel getal met teken vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "Hiermee wordt bepaald welk JOIN-algoritme moet worden gebruikt voor de JOIN-bewerking.",
        "Documentation.LongDescription": "Hiermee wordt bepaald welk JOIN-algoritme moet worden gebruikt voor de JOIN-bewerking.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "Hiermee wordt het soort JOIN-bewerking bepaald.",
        "Documentation.LongDescription": "Hiermee wordt het soort JOIN-bewerking bepaald.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "Hiermee wordt de linker- of rechtertabel van een join opgegeven.",
        "Documentation.LongDescription": "Hiermee wordt de linker- of rechtertabel van een join opgegeven.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "Hiermee wordt het type LIMIT-component beschreven dat wordt ondersteund door het SQL-dialect van de gegevensbron.",
        "Documentation.LongDescription": "Hiermee wordt het type LIMIT-component beschreven dat wordt ondersteund door het SQL-dialect van de gegevensbron.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "Het type dat alle lijsten vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle lijsten vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "Het type dat alle logische waarden vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle logische waarden vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "Hiermee wordt de verwachte actie bepaald voor ontbrekende waarden in een rij die minder waarden bevat dan verwacht.",
        "Documentation.LongDescription": "Hiermee wordt de verwachte actie bepaald voor ontbrekende waarden in een rij die minder waarden bevat dan verwacht.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "Het type dat null vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat null vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "Het type dat alle getallen vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle getallen vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "Geeft de soorten waarden aan die een OData-service mag weglaten.",
        "Documentation.LongDescription": "Geeft de soorten waarden aan die een OData-service mag weglaten.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "Hiermee wordt het aantal instanties van een element in een reeks bepaalt.",
        "Documentation.LongDescription": "Hiermee wordt het aantal instanties van een element in een reeks bepaalt.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "Hiermee wordt de sorteerrichting bepaald.",
        "Documentation.LongDescription": "Hiermee wordt de sorteerrichting bepaald.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "Het type dat een tekstwachtwoord vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een tekstwachtwoord vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "Het type dat de percentagewaarde vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat de percentagewaarde vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "Hiermee wordt het type van de percentielmodus aangegeven.",
        "Documentation.LongDescription": "Hiermee wordt het type van de percentielmodus aangegeven.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "Hiermee wordt de nauwkeurigheid van de vergelijking bepaald.",
        "Documentation.LongDescription": "Hiermee wordt de nauwkeurigheid van de vergelijking bepaald.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "Hiermee wordt de citaatstijl bepaald.",
        "Documentation.LongDescription": "Hiermee wordt de citaatstijl bepaald.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "Hiermee geeft u het type rangschikking op.",
        "Documentation.LongDescription": "Hiermee geeft u het type rangschikking op.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "Het type dat alle records vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle records vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "Hiermee wordt aangegeven of indexering moet worden uitgevoerd vanaf het begin of vanaf het einde van de invoer.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "Hiermee wordt de afrondingsrichting bepaalt wanneer naar beide kanten kan worden afgerond.",
        "Documentation.LongDescription": "Hiermee wordt de afrondingsrichting bepaalt wanneer naar beide kanten kan worden afgerond.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "Geldige opties voor de uitvoeringsmodusoptie in SAP Business Warehouse.",
        "Documentation.LongDescription": "Geldige opties voor de uitvoeringsmodusoptie in SAP Business Warehouse.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "Geldige opties voor de SAP HANA-distributieoptie.",
        "Documentation.LongDescription": "Geldige opties voor de SAP HANA-distributieoptie.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "Een bereikoperator voor SAP HANA-invoerparameters.",
        "Documentation.LongDescription": "Een bereikoperator voor SAP HANA-invoerparameters.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "Het type dat een drijvendekommagetal met enkele precisie vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een drijvendekommagetal met enkele precisie vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "Het te gebruiken protocol wanneer er verbinding wordt gemaakt met een instantie van Spark.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "Het type dat alle tabellen vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle tabellen vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "Het type dat alle tekstwaarden vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle tekstwaarden vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "Hiermee wordt het type tekstcodering bepaald.",
        "Documentation.LongDescription": "Hiermee wordt het type tekstcodering bepaald.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "Het type dat alle tijdwaarden vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle tijdwaarden vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "Hiermee wordt het traceerniveau opgegeven.",
        "Documentation.LongDescription": "Hiermee wordt het traceerniveau opgegeven.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "Het type dat alle typen vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat alle typen vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "Het type dat een tekst-URI vertegenwoordigt.",
        "Documentation.LongDescription": "Het type dat een tekst-URI vertegenwoordigt.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "Hiermee wordt een HTTP-methode opgegeven.",
        "Documentation.LongDescription": "Hiermee wordt een HTTP-methode opgegeven.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
