{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "पहुँच डेटाबेस की संरचनात्मक प्रस्तुति लौटाता है.",
        "Documentation.LongDescription": "Access डेटाबेस, <code>database</code> की संरचनात्मक प्रस्तुति लौटाता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> को निम्नलिखित विकल्पों को नियंत्रण करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : तार्किक (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] के रूप में निर्दिष्ट किया जाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "विशेष होस्ट पर Analysis सेवा डेटाबेस लौटाता है.",
        "Documentation.LongDescription": "Analysis सेवा इंस्टैंस, <code>server</code> पर डेटाबेस लौटाता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, अतिरिक्त गुण निर्दिष्ट करने के लिए प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड हो सकते हैं:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : ग़लत पर सेट होने पर, &#39;&#39;संख्या&#39;&#39; प्रकार का उपयोग सभी माप स्तंभों के लिए किया जाएगा. इस विकल्प के लिए डिफ़ॉल्ट मान ग़लत है.</li>\r\n<li><code>Culture</code> : कल्चर नाम डेटा के लिए कल्चर निर्दिष्ट करता है. यह &#39;लोकेल आइडेंटिफ़ायर&#39; कनेक्शन स्ट्रिंग गुण के समतुल्य होता है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द करने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>SubQueries</code> : एक संख्या (0, 1 या 2) जो कनेक्शन स्ट्रिंग में &quot;SubQueries&quot; गुण का मान सेट करती है. यह उपचयन या उपक्यूब्स पर परिकलित सदस्यों का व्यवहार नियंत्रित करता है. (डिफ़ॉल्ट मान 2 है).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "AtScale क्यूब",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "किसी AtScale से क्यूब डेटा आयात/DirectQuery करें.",
        "Documentation.LongDescription": "\r\nAtScale से सर्वर <code>सर्वर</code> पर क्यूब डेटा लौटाता है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>विकल्प</code>, निर्दिष्ट किया जा सकता है:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: एक तार्किक मान इंगित करता है कि जोड़े गए माप स्तंभों के प्रकारों के लिए बहुआयामी या तालिकाबद्ध मॉडल में निर्दिष्ट प्रकार उपयोग किए जाएँगे या नहीं. false पर सेट होने से प्रकार \"संख्या\" सभी माप स्तंभों के लिए उपयोग किया जाएगा. इस विकल्प के लिए डिफ़ॉल्ट मान false है.</li>\r\n        <li><code>CommandTimeout</code>: वह अवधि (सेकंड में), जो यह नियंत्रित करती है कि रद्द किए जाने से पहले सर्वर-साइड क्वेरी को कितनी देर तक चलाए जाने की अनुमति है. डिफ़ॉल्ट मान ड्राइवर-आश्रित है. </li>\r\n        <li><code>ConnectionTimeout</code>: वह अवधि (सेकंड में), जो यह नियंत्रित करती है कि सर्वर से कनेक्शन बनाने का प्रयास छोड़ने से पहले कितनी देर तक प्रतीक्षा करनी है. </li>\r\n\r\n</ul>\r\nरिकॉर्ड पैरामीटर [option1 = value1, option2 = value2...] के रूप में निर्दिष्ट है.",
        "Documentation.Examples": {
          "Description": "किसी AtScale क्यूब में क्यूब डेटा सूचीबद्ध करें.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Azure Data Explorer (Kusto) से डेटा आयात करता है",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "आपके Azure Data Explorer (Kusto) इंस्टैंस से डेटा आयात करता है",
        "Documentation.Examples": [
          {
            "Description": "स्टॉर्म ईवेंट्स संबंधी जानकारी की तालिका वापस करता है",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "\"मदद\" क्लस्टर में \"नमूना\" डेटाबेस के स्टॉर्म ईवेंट्स की तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "अपनी Azure DevOps विश्लेषणात्मक सेवा का Url दर्ज करें.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Azure DevOps विश्लेषणात्मक सेवा url से डाउनलोड की गई सामग्रियों को बाइनरी मान के रूप में लौटाता है. यह फ़ंक्शन विभिन्न संगठनों के लिए भिन्न क्रेडेंशियल्स का उपयोग करता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps सेवाएँ फ़ीड",
        "Documentation.DisplayName": "Azure DevOps सेवाएँ फ़ीड",
        "Documentation.Caption": "VSTS.फ़ीड",
        "Documentation.Name": "VSTS.फ़ीड",
        "Documentation.LongDescription": "Azure DevOps द्वारा प्रस्तावित OData फ़ीड्स की तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "अपने नामांकन से संबंधित Azure Enterprise REST API समाप्ति बिंदु का URL दर्ज करें",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Azure Enterprise API से उपलब्ध रिपोर्ट और महिनों की सूची लौटाता है",
        "Documentation.Name": "Azure Enterprise से डेटा आयात करें",
        "Documentation.Examples": [
          {
            "Description": "परिणाम प्राप्त करने के लिए AzureEnterprise.Tables फ़ंक्शन का उपयोग करके किसी विशिष्ट मान तक नेविगेट करें.",
            "Code": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents",
            "Result": "तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "स्टार्टर क्वेरी नमूनों के लिए https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli देखें.",
        "Documentation.Examples": [
          {
            "Description": "उपयोगकर्ता क्वेरी 'संसाधन' के क्वेरी परिणामों के साथ एक तालिका लौटाएँ",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "स्पार्क",
        "Documentation.Description": "Azure स्पार्क इंस्टैंस में तालिकाओं को सूचीबद्ध करें.",
        "Documentation.LongDescription": "Azure स्पार्क इंस्टैंस में तालिकाओं को सूचीबद्ध करें.",
        "Documentation.Examples": [
          {
            "Description": "Azure स्पार्क इंस्टैंस में तालिकाओं को सूचीबद्ध करें.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "ऐसी नेविगेशन संबंधी तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्ट से निर्दिष्ट खाते में प्राप्त कंटेनर शामिल होते हैं.",
        "Documentation.LongDescription": "Azure संग्रहण वॉल्ट से एक ऐसी नेविगेशन संबंधी तालिका लौटाता है जिसमें खाता URL <code>account</code> से प्राप्त प्रत्येक कंटेनर के लिए एक पंक्ति शामिल होती है. प्रत्येक पंक्ति में कंटेनर ब्लॉब का लिंक होता है. निम्नलिखित विकल्पों को नियंत्रित करने के लिए, <code>options</code> निर्दिष्ट किया जा सकता है: \r\n    <ul>\r\n<li><code>BlockSize</code> : डेटा उपभोक्ता की प्रतीक्षा करने से पहले पढ़ने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>RequestSize</code> : सर्वर से एक ही HTTP अनुरोध में पढ़ने का प्रयास करने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests विकल्प स्मृति के उपयोग की लागत पर समानांतर रूप से किए जाने वाले अनुरोधों की संख्या निर्दिष्ट करके, डेटा को तेजी से डाउनलोड करने का समर्थन करता है. आवश्यक मेमोरी (ConcurrentRequest * RequestSize) है. डिफ़ॉल्ट मान 16 है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Azure Data Lake Storage से एक ऐसी नेविगेशन तालिका लौटाता है, जिसमें निर्दिष्ट किए गए कंटेनर और उसके उप-फ़ोल्डर में पाए गए दस्तावेज़ शामिल हैं.",
        "Documentation.LongDescription": "Azure Data Lake Storage फ़ाइलसिस्टम से एक ऐसी नेविगेशन तालिका लौटाता है जिसमें खाता URL <code>endpoint</code> में निर्दिष्ट किए गए कंटेनर और उसके उप-फ़ोल्डर में पाए गए दस्तावेज़ शामिल हैं. निम्नलिखित विकल्पों को नियंत्रित करने के लिए, <code>options</code> निर्दिष्ट किया जा सकता है: \r\n    <ul>\r\n<li><code>BlockSize</code> : डेटा उपभोक्ता की प्रतीक्षा करने से पहले पढ़ने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>RequestSize</code> : सर्वर से एक ही HTTP अनुरोध में पढ़ने का प्रयास करने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests विकल्प स्मृति के उपयोग की लागत पर समानांतर रूप से किए जाने वाले अनुरोधों की संख्या निर्दिष्ट करके, डेटा को तेजी से डाउनलोड करने का समर्थन करता है. आवश्यक मेमोरी (ConcurrentRequest * RequestSize) है. डिफ़ॉल्ट मान 16 है.</li>\r\n<li><code>HierarchicalNavigation</code> : एक तार्किक (सही/गलत) जो यह नियंत्रित करता है कि फ़ाइलें एक ट्री जैसे डायरेक्टरी दृश्य में या किसी सपाट सूची में वापस लौटी या नहीं. डिफ़ॉल्ट मान गलत है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "ऐसी नेविगेशन संबंधी तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्ट से निर्दिष्ट खाते में प्राप्त तालिकाएँ शामिल होती हैं.",
        "Documentation.LongDescription": "किसी Azure संग्रहण कोष्ठ से <code>account</code>, खाता URL पर मिलने वाली प्रत्येक तालिका के लिए एक पंक्ति वाली नेविगेशन तालिका लौटाता है. प्रत्येक पंक्ति में azure तालिका के लिए एक लिंक होता है. अतिरिक्त गुण निर्दिष्ट करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड्स शामिल हो सकती हैं:\r\n    <ul>\r\n<li><code>Timeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर का अनुरोध छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान स्रोत-विशिष्ट है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure समय श्रृंखला इनसाइट्स"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "AKS Trino पर Azure HDInsight"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "यह फ़ंक्शन अनुपलब्ध है, क्योंकि इसके लिए .NET 4.5 की आवश्यकता होती है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (लीगेसी)",
        "Documentation.Caption": "Common Data Service (लीगेसी)",
        "Documentation.LongDescription": "अपने Common Data Service इंस्टैंस (Dynamics 365 और PowerApps) से कनेक्ट करें."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "CSV दस्तावेज़ की सामग्रियों को एक तालिका के रूप लौटाता है.",
        "Documentation.LongDescription": "CSV दस्तावेज़ की सामग्री को एक तालिका के रूप में लौटाता है.\r\n    <ul>\r\n     <li> \r\n        <code>columns</code> यह शून्य, कॉलम की संख्या, कॉलम के नामों की एक सूची या एक प्रकार की तालिका या विकल्पों का एक रिकॉर्ड हो सकता है.\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> कोई एक वर्ण या वर्णों की एक सूची या मान <code>\"\"</code>हो सकता है, जो इंगित करता है कि पंक्तियों को लगातार व्हाइटस्पेस वर्णों से विभाजित किया जाना चाहिए. डिफ़ॉल्ट: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n         <code>extraValues</code> के समर्थित मानों के लिए <code>ExtraValues.Type</code> देखें.\r\n      </li>\r\n      <li>\r\n        <code>encoding</code>टेक्स्ट एन्कोडिंग के प्रकार को निर्दिष्ट करता है.\r\n      </li>\r\n    </ul>\r\n\r\n    यदि किसी रिकॉर्ड को <code>columns</code> के लिए निर्दिष्ट किया जाता है (और <code>delimiter</code>, <code>extraValues</code> और <code>encoding</code> शून्य हों), तो नीचे लिखी हुई रिकॉर्ड फ़ील्ड प्रदान की जा सकती हैं:\r\n   <ul>\r\n      <li>\r\n     <code>Delimiter</code>: कॉलम डेलीमीटर। डिफ़ॉल्ट: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Columns</code>: शून्य हो सकता है, कॉलम की संख्या, कॉलम के नामों की एक सूची या एक प्रकार की तालिका हो सकती है. यदि कॉलम की संख्या इनपुट में पाई गई संख्या से कम है, तो अतिरिक्त कॉलम पर ध्यान नहीं दिया जाएगा. यदि कॉलम की संख्या इनपुट में पाई गई संख्या से ज़्यादा है, तो अतिरिक्त कॉलम शून्य हो जाएँगे. निर्दिष्ट न किए जाने पर, कॉलम की संख्या इनपुट में प्राप्त संख्या से निर्धारित की जाएगी.\r\n      </li>\r\n      <li>\r\n        <code>Encoding</code>: फ़ाइल के टेक्स्ट की एन्कोडिंग. डिफ़ॉल्ट: 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n      <code>CsvStyle</code>: निर्दिष्ट करता है कि कोट्स को कैसे हैंडल किया जाता है.\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (डिफ़ॉल्ट): किसी फ़ील्ड में कोट् केवल तभी महत्वपूर्ण होते हैं जब वे डिलीमीटर के ठीक बाद हों.\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: किसी फ़ील्ड में कोट्स हमेशा महत्वपूर्ण होते हैं चाहे वे जहाँ भी दिखाई दें.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code>: यह निर्दिष्ट करता है कि कोट किए गए पंक्ति विरामों को कैसे हैंडल किया जाता है..\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.None</code>  (डिफ़ॉल्ट): सभी पंक्ति विरामों को वर्तमान पंक्ति का अंत माना जाता है, भले ही वे किसी कोट किए गए मान के अंदर होंं.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code>: कोट किए गए पंक्ति विरामों को डेटा के भाग के रूप में माना जाता है, न कि वर्तमान पंक्ति के अंत के रूप में.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "स्तंभ शीर्षलेखों के साथ CSV पाठ संसाधित करें",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "उपलब्ध आयाम के सेट वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>cube</code> के अंतर्गत उपलब्ध आयाम के सेट वाली तालिका लौटाता है. प्रत्येक आयाम, आयाम विशेषताओं के सेट वाली एक तालिका है और प्रत्येक आयाम विशेषता को आयात तालिका के एक स्तंभ के रूप में प्रदर्शित किया जाता है. Cube.AddAndExpandDimensionColumn का उपयोग आयाम को क्यूब में विस्तृत किया जा सकता है. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "ऑब्जेक्ट्स (उदाहरण के लिए, आयाम और माप) के प्रदर्शन फ़ोल्डर पदानुक्रम का प्रतिनिधित्व करने वाली तालिकाओं का एक नेस्टेड ट्री लौटाता है.",
        "Documentation.LongDescription": "<code>cube</code> में उपयोग के लिए उपलब्ध ऑब्जेक्ट्स (उदाहरण के लिए, आयाम और माप) के प्रदर्शन फ़ोल्डर पदानुक्रम का प्रतिनिधित्व करने वाली तालिकाओं का एक नेस्टेड ट्री लौटाता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "घन में विस्तृत उपलब्ध माप गुणों के सेट वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "क्यूब में विस्तृत मापों के लिए उपलब्ध गुणों के सेट वाली एक तालिका लौटाता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "उपलब्ध माप के सेट वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>cube</code> में उपलब्ध मापों के सेट वाली एक तालिका लौटाता है.\r\n    प्रत्येक माप को एक फ़ंक्शन के रूप में दर्शाया जाता है. Cube.AddMeasureColumn का उपयोग करके मापों को क्यूब पर लागू किया जा सकता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "पैरामीटर के सेट वाली ऐसी तालिका लौटाता है, जिसे क्यूब पर लागू किया जा सकता है.",
        "Documentation.LongDescription": "पैरामीटर के सेट वाली ऐसी तालिका लौटाता है, जिसे <code>cube</code> पर लागू किया जा सकता है. प्रत्येक पैरामीटर ऐसा फ़ंक्शन है, जिसे पैरामीटर और उसके लागू किए गए तर्कों के साथ <code>cube</code> को प्राप्त करने के लिए इनवोक किया जा सकता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "वह तालिका जिसमें आयाम के लिए उपलब्ध गुणों का सेट है, जिनका क्यूब में विस्तार हुआ है।",
        "Documentation.LongDescription": "वह तालिका जिसमें आयाम के लिए उपलब्ध गुणों का सेट है, जिनका क्यूब में विस्तार हुआ है।",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "अपने Azure Data Lake Storage Gen1 खाते का URL दर्ज करें.",
        "Documentation.LongDescription": "Azure Data Lake Storage Gen1 से एक ऐसी नेविगेशन तालिका लौटाता है, जिसमें <code>url</code> में पाए जाने वाले प्रत्येक फ़ोल्डर और फ़ाइल के लिए एक पंक्ति शामिल है. प्रत्येक पंक्ति में फ़ोल्डर और फ़ाइल के गुण और इसकी सामग्री का एक लिंक शामिल है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "अपने Azure Data Lake Storage खाते का URL दर्ज करें.",
        "Documentation.LongDescription": "Azure Data Lake Storage Gen1 से एक ऐसी नेविगेशन तालिका लौटाता है, जिसमें <code>url</code> में पाई गई प्रत्येक फ़ाइल के लिए एक पंक्ति शामिल है. प्रत्येक पंक्ति में फ़ाइल के गुण और इसकी सामग्री का एक लिंक शामिल है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL API)",
        "Documentation.Description": "किसी Azure Cosmos DB खाते का URL दर्ज करें.",
        "Documentation.LongDescription": "<code>url</code> पर Azure Cosmos DB डेटाबेस की तालिका वापस करता है. अगर <code>डेटाबेस</code> निर्दिष्ट किया गया है, तो इसके बजाय संग्रह की तालिका वापस की जाएगी. इसके अतिरिक्त, अगर <code>विकल्प</code>रिकॉर्ड में <code>क्वेरी</code> फ़ील्ड निर्दिष्ट की गई है तो या तो निर्दिष्ट किए गए डेटाबेस और/या संग्रह पर निष्पादित की जा रही क्वेरी के परिणाम वापस किए जाएँगे."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV370",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV370(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "अपने Dynamics 365 Business Central (ऑन-प्रिमाइसेस) OData सेवा समाप्ति बिंदु का URL दर्ज करें.",
        "Documentation.DisplayName": "Dynamics 365 Business Central (ऑन-प्रिमाइसेस)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (ऑन-प्रिमाइसेस)",
        "Documentation.LongDescription": "प्रासंगिक Dynamics 365 Business Central (ऑन-प्रिमाइसेस) डेटा वाली तालिका वापस करता है. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "अपने Dynamics NAV Odata सेवा समाप्ति बिंदु का URL दर्ज करें.",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "प्रासंगिक Dynamics NAV डेटा के साथ तालिका लौटाता है. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Essbase सर्वर द्वारा समूहीकृत Essbase इंस्टैंस में क्यूब लौटाता है.",
        "Documentation.LongDescription": "APS सर्वर <code>url</code> पर Essbase इंस्टेंस से Essbase सर्वर द्वारा समूहीकृत क्यूब की तालिका लौटाता है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Excel कार्यपुस्तिका की सामग्रियों को लौटाता है.",
        "Documentation.LongDescription": "Excel कार्यपुस्तिका की सामग्री वापस करता है. \r\n    <ul>\r\n     <li> <code>useHeaders</code> नल हो सकता है, जो इंगित करता है कि प्रत्येक लौटाई गई तालिका की पहली पंक्ति को शीर्ष लेख के रूप में या एक विकल्प रिकॉर्ड के रूप में माना जाना चाहिए, एक तार्किक (सही/गलत) मान. डिफ़ॉल्ट: गलत. </li>\r\n     <li> <code>delayTypes</code> हो सकता है नल या तार्किक (सही/गलत) मान इंगित करता है कि प्रत्येक वापस की गई तालिका के स्तंभ लेबल्स को अनटाइप नहीं किया जाना चाहिए. डिफ़ॉल्ट: गलत. </li>\r\n    </ul>\r\n\r\n    यदि कोई रिकॉर्ड <code>useHeaders</code> (और <code>delayTypes</code> नल है) के लिए निर्दिष्ट किया गया है, तो निम्न रिकॉर्ड फ़ील्ड प्रदान की जा सकती हैं: \r\n    <ul>\r\n     <li> <code>UseHeaders</code>: नल या तार्किक (सही/गलत) मान यह इंगित करता है कि प्रत्येक वापस की गई तालिका की पहली पंक्ति को शीर्ष लेख के रूप में माना जाना चाहिए या नहीं. डिफ़ॉल्ट: false. </li>\r\n     <li> <code>DelayTypes</code>: नल या तार्किक (सही/गलत) मान यह इंगित कर सकता है कि प्रत्येक वापस की गई तालिका के स्तंभ लेबल्स को अनटाइप किया जाना चाहिए या नहीं. डिफ़ॉल्ट: गलत. </li>\r\n     <li> <code>InferSheetDimensions</code>: नल या लॉजिकल (सही/गलत) मान हो सकता है, जो इंगित करता है कि क्या किसी कार्यपत्रक का क्षेत्र जिसमें डेटा शामिल है, फ़ाइल से आयाम मेटाडेटा पढ़ने के बजाय कार्यपत्रक को स्वयं पढ़ कर अनुमान लगाया जाना चाहिए. यह उन मामलों में उपयोगी हो सकता है जहाँ आयाम मेटाडेटा गलत है. ध्यान दें कि यह विकल्प केवल Open XML Excel फ़ाइलों के लिए समर्थित है, न कि लीगेसी Excel फ़ाइलों के लिए. डिफ़ॉल्ट: गलत. </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Excel कार्यपुस्तिका से पत्रक1 की सामग्री वापस करें.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "निर्दिष्ट फ़ोल्डर में मिली फ़ाइलें और फ़ोल्डर के गुणों और सामग्रियों वाली एक तालिका लौटाता है.",
        "Documentation.LongDescription": "एक ऐसी तालिका लौटाता है जिसमें प्रत्येक फ़ोल्डर के लिए एक पंक्ति और फ़ोल्डर में मिली फ़ाइल होती है <code>path</code>. प्रत्येक पंक्ति में फ़ोल्डर या फ़ाइल के गुण और उसकी सामग्री का एक लिंक होता है. <code>options</code> पैरामीटर वर्तमान में केवल आंतरिक उपयोग के लिए अभिप्रेत है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "ऐसी तालिका लौटाता है जिसमें निर्दिष्ट फ़ोल्डर और उप-फ़ोल्डर में प्राप्त फ़ाइलों के गुण और उनकी सामग्रियाँ होती हैं.",
        "Documentation.LongDescription": "एक ऐसी तालिका लौटाता है जिसमें<code>path</code> फ़ोल्डर और इसके तमाम सबफ़ोल्डर्स में मिली प्रत्येक फ़ाइल के लिए एक पंक्ति होती है. प्रत्येक पंक्ति में फ़ोल्डर या फ़ाइल के गुण और उसकी सामग्री का एक लिंक होता है. <code>options</code> पैरामीटर वर्तमान में केवल आंतरिक उपयोग के लिए अभिप्रेत है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Azure AD का उपयोग करके Google BigQuery डेटाबेस से डेटा आयात करें",
        "Documentation.LongDescription": "\r\n      वह तालिका लौटाता है जो <code>बिलिंग प्रोजेक्ट ID</code> के लिए Azure AD का उपयोग करके Google BigQuery में उपलब्ध प्रोजेक्ट को सूचीबद्ध करती है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, निर्दिष्ट किया जा सकता है:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: वह अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान ODBC कनेक्शन टाइमआउट मान है.</li>\r\n        <li><code>CommandTimeout</code>: वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द करने से पहले उसे कितनी देर तक चलाने की अनुमति है.</li>\r\n        <li><code>UseStorageApi</code>:  निर्दिष्ट करता है कि बड़े परिणाम सेट के लिए BigQuery संग्रहण API का उपयोग करना है या नहीं. संग्रहण API का उपयोग करने के लिए डिफ़ॉल्ट मान सही है. संग्रहण API</li>\r\n        <li><code>AudienceUri</code> का उपयोग नहीं करने के लिए गलत पर सेट करें: यह ऑडियंस URI है जिसका उपयोग ODBC ड्राइवर अपने टोकन एक्सचेंज अनुरोधों के लिए कर सकता है. यह फ़ील्ड एक पूर्ण क्वालीफ़ाइड URI (उदाहरण //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/azuread) होना चाहिए, जहाँ pool_id वर्कफ़ोर्स पूल.</li>\r\n      </ul>\r\n    रिकॉर्ड पैरामीटर के रूप में निर्दिष्ट किया गया है [option1 = value1, option2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Azure AD का उपयोग करके Google BigQuery में उपलब्ध प्रोजेक्ट्स सूचीबद्ध करें",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Google Sheets",
        "Documentation.Caption": "Google Sheets",
        "Documentation.Description": "GoogleSheets से डेटा आयात करता है",
        "Documentation.LongDescription": "GoogleSheets से डेटा आयात करता है"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "ऐसी नेविगेशन संबंधी तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्ट से निर्दिष्ट खाते में प्राप्त कंटेनर शामिल होते हैं.",
        "Documentation.LongDescription": "ऐसी नेविगेशन संबंधी तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्ट से खाता URL, <code>account</code>, में प्राप्त प्रत्येक कंटेनर के लिए एक पंक्ति शामिल होती है. प्रत्येक पंक्ति में कंटेनर ब्लॉब का लिंक होता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "ऐसी नेविगेशन संबंधी तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्ट से निर्दिष्ट खाते में प्राप्त कंटेनर शामिल होते हैं.",
        "Documentation.LongDescription": "ऐसी नेविगेशन संबंधी तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्ट से खाता URL, <code>account</code>, में प्राप्त प्रत्येक कंटेनर के लिए एक पंक्ति शामिल होती है. प्रत्येक पंक्ति में कंटेनर ब्लॉब का लिंक होता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "ऐसी तालिका लौटाता है जिसमें किसी Hadoop फ़ाइल सिस्टम से निर्दिष्ट फ़ोल्डर में प्राप्त फ़ाइलों और फ़ोल्डर के गुण और उनकी सामग्रियाँ होती हैं.",
        "Documentation.LongDescription": "एक ऐसी तालिका लौटाता है जिसमें Hadoop फ़ाइल सिस्टम से फ़ोल्डर URL, <code>url</code>, में प्राप्त प्रत्येक फ़ोल्डर और फ़ाइल के लिए एक पंक्ति होती है. प्रत्येक पंक्ति में फ़ोल्डर या फ़ाइल के गुण और उसकी सामग्री का लिंक होता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "ऐसी तालिका लौटाता है जिसमें किसी Hadoop फ़ाइल सिस्टम से निर्दिष्ट फ़ोल्डर और उप-फ़ोल्डर में प्राप्त फ़ाइलों के गुण और उनकी सामग्रियाँ होती हैं.",
        "Documentation.LongDescription": "एक ऐसी तालिका लौटाता है जिसमें Hadoop फ़ाइल सिस्टम से फ़ोल्डर URL, <code>url</code>, और उप-फ़ोल्डर में प्राप्त प्रत्येक फ़ोल्डर और फ़ाइल के लिए एक पंक्ति होती है. प्रत्येक पंक्ति में फ़ाइल के गुण और उसकी सामग्री का लिंक होता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Impala क्लस्टर से डेटा आयात करें",
        "Documentation.LongDescription": "Impala क्लस्टर <code>server</code> से डेटा आयात करें. यदि कोई पोर्ट निर्दिष्ट नहीं था, तो डिफ़ॉल्ट पोर्ट 21050 का उपयोग किया जाएगा.",
        "Documentation.Examples": [
          {
            "Description": "Impala क्लस्टर में तालिकाएँ सूचीबद्ध करें.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Azure Data Explorer (Kusto) से डेटा आयात करता है",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "आपके Azure Data Explorer (Kusto) इंस्टैंस से डेटा आयात करता है",
        "Documentation.Examples": [
          {
            "Description": "स्टॉर्म ईवेंट्स संबंधी जानकारी की तालिका वापस करता है",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "\"मदद\" क्लस्टर में \"नमूना\" डेटाबेस के स्टॉर्म ईवेंट्स की तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "LinkedIn विक्रय नेविगेटर",
        "Documentation.LongDescription": "LinkedIn विक्रय नेविगेटर",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "MailChimp समाप्ति बिंदु से डेटा सहित तालिका लौटाता है.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "MailChimp API को कॉल करता है और परिणाम स्वरूप तालिका के रूप में डेटासेट लौटाता है. सभी परिणाम वाले पृष्ठों को स्वचालित रूप से खोजता है. ऐसे API समाप्ति बिंदु जहाँ पर JSON प्रतिसाद में मूल समाप्ति बिंदु और मुख्य entityName मेल न खाते हों, वहाँ पर वैकल्पिक entityName पैरामीटर का उपयोग किया जा सकता है.",
        "Documentation.Examples": [
          {
            "Description": "MailChimp API की सूची समाप्ति बिंदु से डेटा की तालिका को पुल करता है.",
            "Code": "MailChimp.Collection(\"सूचियाँ\")",
            "Result": "सूची डेटा सहित तालिका."
          },
          {
            "Description": "MailChimp API के अभियान-फ़ोल्डर समाप्ति बिंदु से डेटा की तालिका को पुल करता है.",
            "Code": "MailChimp.Collection(\"अभियान-फ़ोल्डर\", \"फ़ोल्डर\")",
            "Result": "अभियान-फ़ोल्डर डेटा सहित तालिका."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "MailChimp API समाप्ति बिंदु से अपरिष्कृत प्रतिसाद परिणाम लौटाता है.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "MailChimp API को कॉल करता है और अपरिष्कृत प्रतिसाद लौटाता है.",
        "Documentation.Examples": [
          {
            "Description": "दिए गए अभियान के लिए reports/click-details MailChimp API समाप्ति बिंदु से अपरिष्कृत डेटा लौटाता है.",
            "Code": "MailChimp.Instance(\"reports/{campaign_id}/click-details\")",
            "Result": "दिए गए अभियान से अपरिष्कृत क्लिक विवरण डेटा."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy for Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "उन्नत क्वेरी फ़ंक्शन प्रदान करें.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "उन्नत क्वेरी फ़ंक्शन प्रदान करें.",
        "Documentation.Examples": [
          {
            "Description": "आज को 2017-6-15 मानकर, 2017-5-1 से 2017-6-15 के बीच का सारांश डेटा प्राप्त करें",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "फ़ंक्शन 2017-5-1 से 2017-6-15 के बीच का सारांश डेटा देगा"
          },
          {
            "Description": "आज को 2017-6-15 मानकर, अप्रैल 2017 का सारांश डेटा प्राप्त करें.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "फ़ंक्शन से 2017-4-1 और 2017-4-30 के बीच का डेटा मिलेगा"
          },
          {
            "Description": "आज को 2017-6-15 मानकर, अब से लेकर अप्रैल 2017 तक का सारांश डेटा प्राप्त करें.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "फ़ंक्शन से 2017-4-1 से 2017-6-15 के बीच का डेटा मिलेगा"
          },
          {
            "Description": "आज को 2017-6-15 मानकर, पिछले दिसंबर से इस फरवरी तक का सारांश डेटा प्राप्त करें ",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      in     \r\n          result\r\n    ",
            "Result": "फ़ंक्शन से 2016-12-1 और 2017-2-28 के बीच का डेटा मिलेगा"
          },
          {
            "Description": "आज को 2017-6-15 मानकर, पिछले 18 महीने के मार्केटप्लेस शुल्क प्राप्त करें",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "फ़ंक्शन से 2017-6-15 और 2015-12-1 के बीच का डेटा मिलेगा"
          },
          {
            "Description": "आज को 2017-6-15 मानकर, जून 2017 और मई 2017 का विवरण शुल्क प्राप्त करें",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "फ़ंक्शन से 2017-5-1 और 2017-6-15 के बीच का डेटा मिलेगा"
          },
          {
            "Description": "आज को 2017-07-03 मानकर, जुलाई 2016 का विस्तृत शुल्क प्राप्त करें",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "फ़ंक्शन 2016-07-01 और 2016-07-31 के बीच का डेटा लौटाएगा"
          },
          {
            "Description": "आज को 2017-7-13 मानकर, पिछले 10 महीने और इस महीने के 13 दिनों का शेषराशि का सारांश प्राप्त करें",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "इस फ़ंक्शन से 2016-9-1 और 2017-7-13 के बीच का डेटा मिलेगा"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Microsoft Azure कंज़म्प्शन इनसाइट्स",
        "Documentation.Description": "Microsoft Azure कंज़म्प्शन इनसाइट्स",
        "Documentation.DisplayName": "Microsoft Azure कंज़म्प्शन इनसाइट्स",
        "Documentation.LongDescription": "Microsoft Azure कंज़म्प्शन इनसाइट्स",
        "Documentation.Name": "Microsoft Azure कंज़म्प्शन इनसाइट्स"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "ODBC डेटा स्रोत से SQL तालिकाओं की एक तालिका और दृश्य लौटाता है. ",
        "Documentation.LongDescription": "कनेक्शन स्ट्रिंग <code>connectionString</code> द्वारा निर्दिष्ट किए गए ODBC डेटा स्रोत से SQL तालिकाओं और दृश्यों की तालिका वापस करता है. <code>connectionString</code> कोई पाठ या गुण मान जोड़ियों का रिकॉर्ड हो सकता है. गुण मान पाठ या संख्या हो सकती हैं. हो सकता है कि अतिरिक्त गुणों को निर्दिष्ट करने के लिए वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> प्रदान किया जाए. रिकॉर्ड में निम्न फ़ील्ड शामिल हो सकते हैं:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n<li><code>ConnectionTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान 15 सेकंड है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : एक तार्किक (सही/गलत) है जो कि यह निर्धारित करता है कि Windows प्रमाणीकरण के लिए SQL Server संगत कनेक्शन स्ट्रिंग विकल्पों को निर्मित किया जाना है या नहीं. डिफ़ॉल्ट मान सही है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "दी गई कनेक्शन स्ट्रिंग से SQL तालिकाएँ और दृश्य लौटाना.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "OLE DB डेटा स्रोत से SQL तालिकाओं और दृश्यों की एक तालिका दर्शाता है.",
        "Documentation.LongDescription": "कनेक्शन स्ट्रिंग <code>connectionString</code> द्वारा निर्दिष्ट OLE DB डेटा स्रोत से SQL तालिकाओं और दृश्यों की एक तालिका लौटाता है. <code>connectionString</code> पाठ या गुण मान युग्मों का एक रिकॉर्ड हो सकता है. गुण मान, पाठ या संख्या हो सकते हैं. अतिरिक्त गुण निर्दिष्ट करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड हो सकती हैं:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों (डिफ़ॉल्ट सही है) के आधार पर समूहीकृत रूप में देखना है या नहीं.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : एक तार्किक (सही/गलत) है जो कि यह निर्धारित करता है कि Windows प्रमाणीकरण के लिए SQL Server संगत कनेक्शन स्ट्रिंग विकल्पों को निर्मित किया जाना है या नहीं. डिफ़ॉल्ट मान सही है.</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए, रिकॉर्ड पैरामीटर [option1 = value1, option2 = value2...] या [Query = \"select ...\"] के रूप में निर्दिष्ट होता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Oracle database से SQL तालिकाओं और दृश्यों की तालिका लौटाता है.",
        "Documentation.LongDescription": "सर्वर <code>server</code> पर Oracle database से SQL तालिकाओं और दृश्यों की तालिका लौटाता है. पोर्ट को कॉलन द्वारा अलग किए गए, सर्वर से वैकल्पिक रूप से निर्दिष्ट किया जा सकता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, को निम्नलिखित विकल्पों को नियंत्रण करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए रिकॉर्ड पैरामीटर [option1 = value1, option2 = value2...] या [Query = \"select ...\"] के रूप में निर्दिष्ट किया जाता है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "PDF फ़ाइल में मिली कोई भी तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>pdf</code> में मिली कोई भी तालिका लौटाता है. अतिरिक्त गुण निर्दिष्ट करने के लिए वैकल्पिक रिकॉर्ड पैरामीटर <code>options</code> प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड शामिल हो सकते हैं:\r\n    <ul>\r\n<li><code>Implementation</code> : तालिकाओं की पहचान करते समय उपयोग करने के लिए एल्गोरिथ्म का संस्करण. पुरानी क्वेरीज़ को एल्गोरिथ्म अद्यतनों द्वारा भंग किए जाने से रोकने के लिए केवल पश्चगामी संगतता के लिए पुराने संस्करण उपलब्ध हैं. नवीनतम संस्करण को हमेशा श्रेष्ठ परिणाम देने चाहिए. मान्य मान &quot;1.3&quot;, &quot;1.2&quot;, &quot;1.1&quot; या नल हैं.</li>\r\n<li><code>StartPage</code> : जाँच के लिए पृष्ठों की श्रेणी में से प्रथम पृष्ठ निर्दिष्ट किया जाता है. डिफ़ॉल्ट: 1.</li>\r\n<li><code>EndPage</code> : जाँच के लिए पृष्ठों की श्रेणी में से अंतिम पृष्ठ निर्दिष्ट किया जाता है. डिफ़ॉल्ट: दस्तावेज़ का अंतिम पृष्ठ.</li>\r\n<li><code>MultiPageTables</code> : यह नियंत्रित करता है कि क्रमिक पृष्ठों पर मौजूद समान तालिकाओं को स्वचालित रूप से एक तालिका में संयोजित करना है या नहीं. डिफ़ॉल्ट: True.</li>\r\n<li><code>EnforceBorderLines</code> : यह नियंत्रित करता है कि बॉर्डर की रेखाओं को हमेशा कक्ष सीमाओं के रूप में लागू करना है (जब True हो) या कई स्थितियाँ होने पर कक्ष सीमाएँ तय करने के लिए केवल एक संकेत के रूप में उपयोग करना है (जब False हो). डिफ़ॉल्ट: False.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "डेटा पर पहुँच प्राप्त करना",
        "Documentation.Examples": [
          {
            "Description": "sample.pdf में निहित तालिकाओं को लौटाता है.",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "अपने Planview Projectplace खाते का URL दर्ज करें।",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "प्रासंगिक Planview Projectplace डेटा वाली एक तालिका लौटाता है।"
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "Рŷтħθⁿ ŝčřіφτ",
        "Documentation.Description": "Έжèčúţê§ Рÿţнбп ѕčяїþţ ąпð гєťùѓñѕ ďăţã ƒѓąmз§",
        "Documentation.Examples": {
          "Description": "Έжèčúţê§ Рÿţнбп ѕčяїþţ ąпð гєťùѓñѕ ďăţã ƒѓąmз§",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "Ř śċгĭþτ",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "ऐसी तालिका लौटाता है जिसमें प्रत्येक पंक्ति एक फ़ील्ड नाम और इनपुट रिकॉर्ड का मान होती है.",
        "Documentation.LongDescription": "<code>record</code> की प्रत्येक फ़ील्ड के लिए एक पंक्ति के साथ <code>Name</code> और <code>Value</code> स्तंभों वाली एक तालिका लौटाता है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड से तालिका लौटाएँ.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "पैकेज, SAP HANA डेटाबेस में लौटाता है.",
        "Documentation.LongDescription": "SAP HANA डेटाबेस <code>server</code> से बहुआयामी पैकेज की तालिका लौटाता है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर <code>options</code> निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>Distribution</code> : SapHana वितरण कनेक्शन स्ट्रिंग में &quot;वितरण&quot; गुण का मान सेट करता है. स्टेटमेंट रूटिंग, स्टेटमेंट निष्पादन से पहले वितरित सिस्टम के सही सर्वर नोड का मूल्यांकन करने की विधि है. डिफ़ॉल्ट मान SapHanaDistribution.All है.</li>\r\n<li><code>Implementation</code> : उपयोग करने के लिए SAP HANA कनेक्टर के कार्यान्वयन को निर्दिष्ट करता है।</li>\r\n<li><code>EnableColumnBinding</code> : डेटा फ़ेच करते समय चरों को SAP HANA परिणाम सेट के स्तंभों से बाइंड करता है. थोड़ी अधिक मेमोरी उपयोग की लागत से संभावित रूप से प्रदर्शन में सुधार हो सकता है. डिफ़ॉल्ट मान गलत है.</li>\r\n<li><code>ConnectionTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान 15 सेकंड है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "SharePoint साइट से सामग्री वाली एक तालिका लौटाता है.",
        "Documentation.LongDescription": "एक ऐसी तालिका लौटाता है, जिसमें निर्दिष्ट SharePoint साइट, <code>url</code> में मिले प्रत्येक फ़ोल्डर और दस्तावेज़ के लिए एक पंक्ति होती है. प्रत्येक पंक्ति में फ़ोल्डर या फ़ाइल के गुण और उसकी सामग्री का लिंक होता है. निम्न विकल्पों को नियंत्रित करने के लिए <code>options</code> को निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>ApiVersion</code> : ऐसी संख्या (14 या 15) या पाठ &quot;स्वतः&quot; जो इस साइट के लिए उपयोग करने हेतु SharePoint API संस्करण को निर्दिष्ट करता है. निर्दिष्ट नहीं किए जाने पर, API संस्करण 14 का उपयोग किया जाता है. &#39;&#39;स्वतः&#39;&#39; निर्दिष्ट किए जाने पर, संभव होने पर सर्वर संस्करण का स्वचालित रूप से पता लगा लिया जाएगा, अन्यथा डिफ़ॉल्ट रूप से संस्करण 14 होता है. ग़ैर-अंग्रेज़ी SharePoint साइट को कम से कम संस्करण 15 की आवश्यकता होती है.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "SharePoint साइट से दस्तावेज़ों वाली एक तालिका लौटाता है.",
        "Documentation.LongDescription": "एक ऐसी तालिका लौटाता है जिसमें निर्दिष्ट SharePoint साइट, <code>url</code>, और सब-फ़ोल्डर में मिले प्रत्येक दस्तावेज़ के लिए एक पंक्ति होती है. प्रत्येक पंक्ति में फ़ोल्डर या फ़ाइल के गुण और उसकी सामग्री का लिंक होता है. निम्न विकल्पों को नियंत्रित करने के लिए <code>options</code> को निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>ApiVersion</code> : ऐसी संख्या (14 या 15) या पाठ &quot;स्वतः&quot; जो इस साइट के लिए उपयोग करने हेतु SharePoint API संस्करण को निर्दिष्ट करता है. निर्दिष्ट नहीं किए जाने पर, API संस्करण 14 का उपयोग किया जाता है. &#39;&#39;स्वतः&#39;&#39; निर्दिष्ट किए जाने पर, संभव होने पर सर्वर संस्करण का स्वचालित रूप से पता लगा लिया जाएगा, अन्यथा डिफ़ॉल्ट रूप से संस्करण 14 होता है. ग़ैर-अंग्रेज़ी SharePoint साइट को कम से कम संस्करण 15 की आवश्यकता होती है.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "SharePoint सूची से सामग्री वाली एक तालिका लौटाता है.",
        "Documentation.LongDescription": "एक ऐसी तालिका लौटाता है, जिसमें निर्दिष्ट SharePoint सूची, <code>url</code> में मिले प्रत्येक सूची आइटम के लिए एक पंक्ति होती है. प्रत्येक पंक्ति में सूची के गुण होते हैं. निम्न विकल्पों को नियंत्रित करने के लिए <code>options</code> को निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>ApiVersion</code> : ऐसी संख्या (14 या 15) या पाठ &quot;स्वतः&quot; जो इस साइट के लिए उपयोग करने हेतु SharePoint API संस्करण को निर्दिष्ट करता है. निर्दिष्ट नहीं किए जाने पर, API संस्करण 14 का उपयोग किया जाता है. &#39;&#39;स्वतः&#39;&#39; निर्दिष्ट किए जाने पर, संभव होने पर सर्वर संस्करण का स्वचालित रूप से पता लगा लिया जाएगा, अन्यथा डिफ़ॉल्ट रूप से संस्करण 14 होता है. ग़ैर-अंग्रेज़ी SharePoint साइट को कम से कम संस्करण 15 की आवश्यकता होती है.</li>\r\n<li><code>Implementation</code> : वैकल्पिक. निर्दिष्ट करता है कि SharePoint कनेक्टर के किस संस्करण का उपयोग करना है. स्वीकृत मान &quot;2.0&quot; या नल हैं. अगर मान &quot;2.0&quot; है, तो SharePoint कनेक्टर के 2.0 कार्यान्वयन का उपयोग किया जाता है. अगर मान नल है, तो SharePoint कनेक्टर के मूल कार्यान्वयन का उपयोग किया जाता है.</li>\r\n<li><code>ViewMode</code> : वैकल्पिक. यह विकल्प केवल कार्यान्वयन 2.0 के लिए मान्य है. स्वीकृत मान &quot;सभी&quot; और &quot;डिफ़ॉल्ट&quot; हैं. यदि कोई मान निर्दिष्ट नहीं है, तो मान &quot;सभी&quot; पर सेट रहेगा. जब &quot;सभी&quot; निर्दिष्ट किया जाता है, तो दृश्य में सभी उपयोगकर्ता-निर्मित और सिस्टम-परिभाषित स्तंभ शामिल होते हैं. &quot;डिफ़ॉल्ट&quot; निर्दिष्ट होने पर, उपयोगकर्ता द्वारा अपनी सेटिंग्स में डिफ़ॉल्ट के रूप में सेट किए जाने वाले उपयोगकर्ता को ऑनलाइन देखने पर दृश्य का मिलान होगा. यदि उपयोगकर्ता उपयोगकर्ता द्वारा बनाए गए या सिस्टम-निर्धारित स्तंभों को जोड़ने या निकालने के लिए या कोई नया दृश्य बनाकर और इसे डिफ़ॉल्ट के रूप में सेट करने के लिए उनके डिफ़ॉल्ट दृश्य को संपादित करता है, तो ये परिवर्तन कनेक्टर के माध्यम से प्रसारित होंगे.</li>\r\n<li><code>DisableAppendNoteColumns</code> : कनेक्टर को नोट स्तंभों के लिए एक अलग समाप्ति बिंदु का उपयोग करने से रोकता है.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "SODA 2.0 API के अनुसार स्वरूपित निर्दिष्ट URL पर स्थित सामग्रियों से तालिका लौटाता है.",
        "Documentation.LongDescription": "SODA 2.0 API के अनुसार स्वरूपित निर्दिष्ट URL <code>url</code> पर स्थित सामग्रियों से तालिका लौटाता है. URL को .csv एक्सटेंशन से समाप्त होने वाले मान्य SODA-संगत स्रोत की ओर संकेत करना चाहिए.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "इस फ़ंक्शन का उपयोग SparkPost API v1 द्वारा प्रस्तुत \"सूचियों\" के किसी भी समाप्ति बिंदु को कॉल करने के लिए किया जा सकता. इस फ़ंक्शन का उपयोग करके SparkPost API को कॉल करते समय, ध्यान रखें कि SparkPost API की निश्चित API दर सीमा है. यदि आपको SparkPost सर्वर से 429 स्थिति कोड मिलता है, तो इसका मतलब है कि आप दर सीमा तक पहुँच गए हैं और आपको अधिक कॉल करने के लिए कुछ क्षण प्रतीक्षा करनी होगी.",
        "Documentation.Examples": [
          {
            "Description": "किसी एक SparkPost API v1 \"सूची\" वाले समाप्ति बिंदु से डेटा से पॉप्यूलेट की गई एकल स्तंभ वाली तालिका लौटाता है (विवरण के लिए SparkPost दस्तावेज़ देखें).",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "दिनों की निर्दिष्ट संख्या के लिए एकीकृत किए गए डेटा के SparkPost कनेक्टर द्वारा दिखाई गई अंतर्निहित तालिकाएँ पुनर्प्राप्त करें. इन तालिकाओं को ताज़ा करते समय या इस कनेक्टर का उपयोग करके SparkPost API को कॉल करते समय, ध्यान रखें कि SparkPost API की API दर सीमा निश्चित है. यदि आपको एक 429 स्थिति कोड SparkPost सर्वर से लौटता हुआ दिखाई देता है, तो इसका मतलब है कि आप दर सीमा तक पहुँच गए हैं और आपको अधिक कॉल करने के लिए कुछ क्षण प्रतीक्षा करने होगी. दिन पैरामीटर की कुल संख्या के लिए किसी मान का चयन करते समय, ध्यान रखें कि API केवल 6 महीने का डेटा संग्रहीत करता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "किसी SQL Server के डेटाबेस की एक तालिका लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट SQL server, <code>server</code> पर डेटाबेस की एक तालिका लौटाता है. निम्नलिखित विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : एक संख्या जो कि जनरेट की गई SQL क्वेरी में &quot;maxdop&quot; पूछताछ वर्ग के मान को सेट करती है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n<li><code>MultiSubnetFailover</code> : तार्किक (सही/गलत) जो कि कनेक्शन स्ट्रिंग (डिफ़ॉल्ट गलत है) में &quot;MultiSubnetFailover&quot; गुण के मान को सेट करता है.</li>\r\n<li><code>UnsafeTypeConversions</code> : तार्किक (सही/गलत) जो यदि सही है, तो ऐसे रूपांतरणों को फ़ोल्ड करने का प्रयास करता है जो विफल हो सकता है और पूरी क्वेरी के विफल होने का कारण बन सकता है. सामान्य उपयोग के लिए अनुशंसित नहीं है.</li>\r\n<li><code>ContextInfo</code> : एक बाइनरी मान जिसका उपयोग हर आदेश को चलाने से पहले CONTEXT_INFO को सेट करने के लिए किया जाता है.</li>\r\n<li><code>OmitSRID</code> : एक लॉजिकल (सही/गलत) जो यदि सही है, तो ज्यामिति और भूगोल प्रकारों के भली-भाँति ज्ञात पाठ बनाते समय SRID को छोड़ देता है.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : एक तार्किक (सही/गलत) मान, जो सही होने पर, एक ही सर्वर पर डेटाबेस में क्वेरी फोल्डिंग की अनुमति देता है. डिफ़ॉल्ट मान गलत है.</li>\r\n</ul>\r\n\r\n     उदाहरण के लिए रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] के रूप में निर्दिष्ट किया जाता है.\r\n    <br>\r\n    SQL क्वेरी को सर्वर पर चलाने के लिए सेट करने का समर्थन नहीं करता है. कोई SQL क्वेरी चलाने के लिए, इसके बजाय <code>Sql.Database</code> का उपयोग किया जाना चाहिए.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "API को किए गए कॉल की संख्या सीमित करने के विकल्प के साथ, Stripe API को कॉल करता है.",
        "Documentation.LongDescription": "https://api.stripe.com/v1/<code>method</code> पर वैकल्पिक रिकॉर्ड <code>query</code> के अतिरिक्त पैरामीटर और वैकल्पिक <code>pageLimit</code> के API अनुरोधों की संख्या सीमा के रूप में पास होने के साथ Stripe API को कॉल करता है. सर्वाधिक नवीन डेटा पहले लौटाया जाता है. यदि <code>pageLimit</code> निर्दिष्ट नहीं किया गया है, तो सभी डेटा लौटा दिया जाता है. Stripe संस्करण 2015-10-16 का उपयोग किया गया है.",
        "Documentation.Examples": [
          {
            "Description": "सभी शुल्क डेटा लौटाता है",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "वर्तमान Stripe खाते के लिए सभी शुल्क डेटा वाली एक तालिका"
          },
          {
            "Description": "शुल्क डेटा का एक पृष्ठ लौटाता है",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "वर्तमान Stripe खाते के लिए नवीनतम शुल्क डेटा वाली एक तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "मूल्यांकन के दौरान तालिका को बाहरी परिवर्तनों से पृथक करते हुए मेमोरी में उसे बफ़र करता है.",
        "Documentation.LongDescription": "मूल्यांकन के दौरान तालिका को मेमोरी में बफ़र करता है. साथ ही, इसे बाहरी परिवर्तनों से अलग करता है.\r\n   बफ़रिंग धीमे होती है. यह सभी स्केलर कक्ष मानों के मूल्यांकन को बाध्य करता है, लेकिन उन मानों (रिकॉर्ड्स, सूचियाँ, तालिकाएँ इत्यादि) को वैसा ही रखती है जो स्केलर नहीं हैं.\r\n    <br>\r\n    <br>\r\n    नोट करें कि इस फ़ंक्शन का उपयोग करने से आपकी क्वेरी तेज़ी से चल सकती हैं या नहीं भी चल सकती हैं. कुछ मामलों में, \r\n    यह सभी डेटा को पढ़ने, इसे मेमोरी में संग्रहीत करने और बफ़रिंग के डाउनस्ट्रीम फ़ोल्डिंग को रोकने की वजह से आपकी क्वेरी अधिक धीमी चल सकती है. अगर डेटा को \r\n बफ़र करने की ज़रूरत नहीं है, लेकिन आप सिर्फ़ डाउनस्ट्रीम फ़ोल्डिंग को रोकना चाहते हैं, तो इसके बजाय <code>Table.StopFolding</code> का उपयोग करें.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "SQL तालिका की सभी पंक्तियों को मेमोरी में लोड करना, ताकि कोई भी डाउनस्ट्रीम कार्रवाइयांSQL सर्वर पर क्वेरी न कर सकें.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "वह तालिका लौटाता है जो तालिकाओं की सूची को मर्ज करने का परिणाम है.",
        "Documentation.LongDescription": "ऐसी तालिका को वापस लौटाएँ, जो तालिकाओं की सूची को मर्ज करने से बनी है, <code>tables</code>. यदि <code>columns</code> निर्दिष्ट नहीं है, तो इस परिणामी तालिका में <code>columns</code> या इनपुट प्रकार के किसी संघ द्वारा निर्धारित कोई पंक्ति प्रकार संरचना होगी.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तीनों तालिकाओं को एक साथ मर्ज करें.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "तीन तालिकाओं को भिन्न संरचनाओं के साथ मर्ज करें.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "दो तालिकाओं और प्रोजेक्ट को दिए गए प्रकार के साथ मर्ज करें.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "स्तंभ शीर्षलेखों को मानों की पहली पंक्ति में अवनत करता है.",
        "Documentation.LongDescription": "स्तंभ शीर्षलेखों (अर्थात् स्तंभ नाम) को मानों की पहली पंक्ति में अवनत करता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में मानों की पहली पंक्ति को अवनत करें.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "तालिका से डुप्लिकेट पंक्तियाँ निकालता है.",
        "Documentation.LongDescription": "यह तालिका से डुप्लिकेट पंक्तियाँ हटाता है.\r\n  एक वैकल्पिक पैरामीटर, <code>equationCriteria</code>, निर्दिष्ट करता है कि तालिका के किन स्तंभों का डुप्लिकेशन के लिए परीक्षण किया गया है. यदि <code>equationCriteria</code> निर्दिष्ट नहीं है, तो सभी स्तंभों का परीक्षण किया जाता है.<br>\r\n   <br>\r\n   क्योंकि Power Query कभी-कभी डेटा स्रोतों (जिसे \"फ़ोल्डिंग\" के रूप में जाना जाता है) को बैकएंड करने के लिए कुछ कार्रवाइयों को ऑफ़लोड करता है और कभी-कभी उन कार्रवाइयों को छोड़कर \r\n द्वारा क्वेरीज़ को ऑप्टिमाइज़ करता है जो आवश्यक नहीं हैं, सामान्य तौर पर कोई गारंटी नहीं है कि किस विशिष्ट डुप्लिकेट को संरक्षित किया जाएगा.\r\n  उदाहरण के लिए, आप यह नहीं मान सकते हैं कि तालिका में स्तंभ मानों के एक अद्वितीय सेट वाली पहली पंक्ति बनी रहेगी और नीचे की पंक्तियों को हटा दिया जाएगा.\r\n यदि आप चाहते हैं कि डुप्लिकेट निष्कासन अनुमानित रूप से व्यवहार करे, तो पहले <code>Table.Buffer</code> का उपयोग करके तालिका बफ़र करें.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "तालिका से डुप्लिकेट पंक्तियाँ निकालें.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "तालिका <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code> में मौजूद स्तंभ [b] से डुप्लिकेट पंक्तियाँ निकालें.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "स्तंभों की सूची से और निर्दिष्ट मानों से एक तालिका बनाता है.",
        "Documentation.LongDescription": "सूची <code>lists</code> से <code>columns</code> प्रकार की तालिका बनाता है, जिसमें स्तंभ नामों और मानों वाली नेस्टेड सूचियाँ मौजूद होती हैं.\r\n    यदि कुछ स्तंभों में दूसरों से अधिक मान हैं, तो स्तंभों के नल योग्य होने पर अनुपस्थित मानों को डिफ़ॉल्ट मान 'null' से भर दिया जाएगा.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "किसी सूची में ग्राहक नामों की सूची से तालिका लौटाएँ. ग्राहक सूची आइटम में प्रत्येक मान पंक्ति मान बन जाता है, और प्रत्येक सूची स्तंभ बन जाती है.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "स्तंभों की दी गई सूची और स्तंभ नामों की सूची से एक तालिका बनाएँ.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "प्रति पंक्ति में स्तंभों की भिन्न संख्या के साथ एक तालिका बनाएँ. पंक्ति का गुम मान नल है.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "सूची के प्रत्येक आइटम पर निर्दिष्ट विभाजन फ़ंक्शन लागू करके एक सूची को एक तालिका में कनवर्ट करता है.",
        "Documentation.LongDescription": "सूची के प्रत्येक आइटम पर वैकल्पिक विभाजन फ़ंक्शन, <code>splitter</code>, लागू करके एक सूची, <code>list</code>  को एक तालिका में कनवर्ट करता है. डिफ़ॉल्ट रूप से, सूची को ऐसे पाठ मानों की सूची माना जाता है जो अल्पविरामों से विभाजित है. वैकल्पिक <code>columns</code>, स्तंभों की संख्या, स्तंभों की सूची या TableType हो सकती है. वैकल्पिक <code>default</code> और <code>extraValues</code> भी निर्दिष्ट किए जा सकते हैं.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "डिफ़ॉल्ट विभाजक का उपयोग करके सूची से तालिका बनाएँ.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "कस्टम विभाजक का उपयोग करके सूची से एक तालिका बनाएँ.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "Record.FieldValues विभाजक का उपयोग करके सूची से एक तालिका बनाएँ.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "रिकॉर्ड की सूची को एक तालिका में रूपांतरित करता है.",
        "Documentation.LongDescription": "<code>records</code>, रिकॉर्ड की सूची, को एक तालिका में रूपांतरित करता है.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "स्तंभ नामों के रूप में रिकॉर्ड फ़ील्ड नामों का उपयोग करके, रिकॉर्ड से तालिका बनाएँ.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "लिखे गए स्तंभों के साथ रिकॉर्ड से तालिका बनाएँ और संख्या स्तंभ चुनें.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "पंक्ति मानों की सूची से एक तालिका बनाता है. स्तंभ नामों की एक वैकल्पिक सूची या एक तालिका प्रकार को दूसरे तर्क के रूप में प्रदान किया जा सकता है.",
        "Documentation.LongDescription": "सूची <code>rows</code> से एक तालिका बनाता है जहाँ सूची का प्रत्येक तत्व एक आंतरिक सूची होता है जिसमें एकल पंक्ति के स्तंभ मान होते हैं. स्तंभ नामों की एक वैकल्पिक सूची या एक तालिका प्रकार को दूसरे तर्क के रूप में प्रदान किया जा सकता है <code>columns</code>.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "मान {1, 2} वाले स्तंभ [CustomerID] वाली तालिका लौटाएँ, मान {\"Bob\", \"Jim\"} वाला स्तंभ [Name] और मान {\"123-4567\", \"987-6543\"} वाला स्तंभ [Phone].",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "मान {1, 2} वाले स्तंभ [CustomerID] की एक तालिका लौटाएँ, मान {\"Bob\", \"Jim\"} वाला स्तंभ [Name] और मान {\"123-4567\", \"987-6543\"} वाला स्तंभ [Phone], जहाँ [CustomerID] संख्या प्रकार हैं और [Name] और [Phone] पाठ प्रकार हैं.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "प्रदान किए मान(मानों) से एक स्तंभ वाली तालिका बनाता है.",
        "Documentation.LongDescription": "स्तंभ वाली ऐसी तालिका बनाता है जिसमें प्रदान किए गए मान या मानों की सूची, <code>value</code> होती है. कोई वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, निम्न विकल्पों को नियंत्रित करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : स्तंभ नाम का उपयोग जब किया जाता है जब सूची या स्केलर मान से तालिका बनाई जाती है.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "मान 1 से एक तालिका बनाएँ.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "सूची से तालिका बनाएँ.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "कस्टम स्तंभ नाम के साथ, मान 1 से तालिका बनाएँ.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "तालिका का किस प्रकार विभाजन किया गया है, उसके बारे में जानकारी लौटाता है.",
        "Documentation.LongDescription": "तालिका का किस प्रकार विभाजन किया गया है, उसके बारे में जानकारी लौटाता है.  जब मूल तालिका में प्रत्येक स्तंभ एक विभाजन स्तंभ होता है और मूल तालिका में प्रत्येक पंक्ति विभाजन से संबंधित होती है तो एक तालिका लौटाई जाती है.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "किसी तालिका के स्तंभों की प्रोफ़ाइल लौटाता है.",
        "Documentation.LongDescription": "<p><code>table</code> में स्तंभों के लिए प्रोफ़ाइल लौटाता है.</p>\r\n<p>प्रत्येक स्तंभ के लिए निम्न जानकारी लौटाई जाती है (लागू होने पर):\r\n<ul>\r\n  <li>न्यूनतम</li>\r\n  <li>अधिकतम</li>\r\n  <li>औसत</li>\r\n  <li>मानक विचलन</li>\r\n  <li>गणना</li>\r\n  <li>शून्य गणना</li>\r\n  <li>अलग गणना</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "मानों की पहली पंक्ति को नए स्तंभ शीर्षलेख (अर्थात स्तंभ नाम) के रूप में संवर्धित करता है.",
        "Documentation.LongDescription": "मानों की पहली पंक्ति को नए स्तंभ शीर्षलेख (अर्थात स्तंभ नाम) के रूप में संवर्धित करता है. शीर्षलेख के लिए डिफ़ॉल्ट रूप से केवल पाठ या संख्या मानों का प्रचार किया जाता है. मान्य विकल्प:\r\n    <div>\r\n      <code>PromoteAllScalars</code> : <code>सही</code> पर सेट होने पर, <code>संस्कृति</code> का उपयोग करके सभी स्केलर मानों का शीर्षलेख के लिए पहली पंक्ति में प्रचार किया जाता है, निर्दिष्ट होने पर (या मौजूदा स्थानीय लोकेल).\r\n    ऐसे मानों के लिए डिफ़ॉल्ट स्तंभ नाम का उपयोग किया जाएगा, जिन्हें पाठ में रूपांतरित नहीं किया जा सकता.\r\n    </div>\r\n    <div>\r\n    <code>संस्कृति</code> : डेटा की संस्कृति को निर्दिष्ट करने वाला संस्कृति नाम.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में मानों की पहली पंक्ति को उन्नत करें.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "तालिका की पहली पंक्ति से शीर्षलेखों तक सभी स्केलर का प्रचार करें.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "छोड़ी गई प्रथम गणना पंक्तियों के साथ एक तालिका लौटाता है.",
        "Documentation.LongDescription": "ऐसी तालिका लौटाता है, जिसमें तालिका <code>table</code> की पंक्तियों <code>countOrCondition</code> की प्रथम निर्दिष्ट संख्या नहीं होती है.\r\n    निकाली गई पंक्तियों की संख्या वैकल्पिक पैरामीटर <code>countOrCondition</code> पर निर्भर होती है.\r\n    <ul>\r\n    <li> यदि <code>countOrCondition</code> को छोड़ा जाता है, तो केवल प्रथम पंक्ति निकाली जाती है. </li>\r\n    <li> यदि <code>countOrCondition</code> कोई संख्या हो, तो उतनी पंक्तियाँ (शीर्ष से प्रारंभ करते हुए) निकाल दी जाएँगी. </li>\r\n    <li> यदि <code>countOrCondition</code> कोई शर्त हो, तो किसी एक पंक्ति के शर्त पूरा न करने तक, शर्त को पूरा करने वाली पंक्तियों को निकाल दिया जाएगा.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पहली पंक्ति निकालें.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "तालिका की पहली दो पंक्तियाँ निकालें.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "पहली दो पंक्तियाँ निकालें, जहाँ तालिका का [CustomerID] <=2 होता है.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "अंतिम N पंक्तियों के साथ एक तालिका लौटाता है.",
        "Documentation.LongDescription": "ऐसी तालिका लौटाता है, जिसमें तालिका <code>table</code> की अंतिम <code>countOrCondition</code> पंक्तियाँ नहीं होती हैं.\r\n        निकाली गई पंक्तियों की संख्या वैकल्पिक पैरामीटर <code>countOrCondition</code> पर निर्भर होती है.\r\n    <ul>\r\n    <li> यदि <code>countOrCondition</code> को छोड़ा जाता है, तो केवल अंतिम पंक्ति निकाली जाती है. </li>\r\n    <li> यदि <code>countOrCondition</code> कोई संख्या हो, तो उतनी पंक्तियाँ (नीचे से प्रारंभ करते हुए) निकाल दी जाएँगी. </li>\r\n    <li> यदि <code>countOrCondition</code> कोई शर्त हो, तो किसी पंक्ति के शर्त पूरा न करने तक, शर्त को पूरा करने वाली पंक्तियों को निकाल दिया जाएगा.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की अंतिम पंक्ति निकालें.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "अंतिम पंक्तियों को निकालें, जहाँ तालिका का [CustomerID] > 2 होता है.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "इनपुट तालिका में से निकाली गई पंक्तियों वाली तालिका लौटाता है और जिनके कम से कम एक कक्ष में त्रुटि हो. यदि स्तंभों की सूची निर्दिष्ट की गई होती है, तो निर्दिष्ट स्तंभों में केवल कक्षों का त्रुटियों के लिए निरीक्षण किया जाता है.",
        "Documentation.LongDescription": "इनपुट तालिका में से निकाली गई पंक्तियों वाली तालिका लौटाता है और जिनके कम से कम एक कक्ष में त्रुटि हो. यदि स्तंभों की सूची निर्दिष्ट की गई होती है, तो निर्दिष्ट स्तंभों में केवल कक्षों का त्रुटियों के लिए निरीक्षण किया जाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "पहली पंक्ति से त्रुटि मान निकालें.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "उलटे क्रम में पंक्तियों के साथ एक तालिका लौटाता है.",
        "Documentation.LongDescription": "इनपुट <code>table</code> से उलटे क्रम में पंक्तियों के साथ एक तालिका लौटाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पंक्तियों को उलटा करें.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "निर्दिष्ट तालिका के स्तंभों (अर्थात स्कीमा) के वर्णन वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "<p><code>table</code> के कालम्स का वर्णन करने वाली एक तालिका लौटाता है.</p>\r\n<p>तालिका की प्रत्येक पंक्ति <code>table</code> के किसी कालम के गुणों का वर्णन करती है:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>कालम का नाम</b></td>\r\n    <td><b>Description</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Name</code></td>\r\n    <td>कालम का नाम.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Position</code></td>\r\n    <td><code>table</code> में कालम की शून्य-आधारित स्थिति.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>कालम के प्रकार का नाम.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Kind</code></td>\r\n    <td>कालम के प्रकार की क़िस्म.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>क्या कालम में <code>null</code> मान हो सकते हैं.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td><code>NumericPrecision</code> और <code>NumericScale</code> फ़ील्ड्स के संख्यात्मक आधार (उदाहरण के लिए, आधार-2 या आधार-10).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td> <code>NumericPrecisionBase</code>द्वारा निर्दिष्ट आधार में किसी संख्यात्मक कालम की परिशुद्धता. इस प्रकार के मान द्वारा प्रतिनिधित्व किए जा सकने के लिए अंकों की यह अधिकतम संख्या है (इसमें दशमलव अंक शामिल हैं).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td> <code>NumericPrecisionBase</code>द्वारा निर्दिष्ट आधार में किसी संख्यात्मक कालम का स्केल. यह इस प्रकार के मान के दशमलव भाग में अंकों की संख्या है. <code>0</code> का मान, बिना किसी दशमलव अंकों वाले निश्चित स्केल को इंगित करता है.<code>null</code> का मान इंगित करता है कि स्केल ज्ञात नहीं है (या तो यह फ़्लोटिंग है या परिभाषित नहीं है).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>किसी दिनांक या समय मान के सेकंड भाग में समर्थित दशमलव अंकों की अधिकतम संख्या.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>किसी <code>text</code> कालम में अनुमत वर्णों की अधिकतम संख्या, या , किसी <code>binary</code> कालम में अनुमत बाइट्स की अधिकतम संख्या.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>इंगित करता है कि क्या यह कालम लंबाई में भिन्न हो सकता है (<code>MaxLength</code>की सीमा तक) या यह निश्चित आकार का है.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>स्रोत के नेटिव प्रकार सिस्टम में कालम के प्रकार का नाम (उदाहरण के लिए, SQL Server के लिए <code>nvarchar</code>).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>स्रोत की मूल व्यंजक भाषा में इस स्तंभ के मान के लिए डिफ़ॉल्ट व्यंजक (उदाहरण के लिए, SQL Server के लिए <code>42</code> or <code>newid()</code>).</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Description</code></td>\r\n    <td>कालम का वर्णन.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "इनपुट तालिका की केवल उन पंक्तियों के साथ एक तालिका लौटाता है जिनके कम से कम एक कक्ष में त्रुटि हो. यदि स्तंभों की सूची निर्दिष्ट की गई होती है, तो निर्दिष्ट स्तंभों में केवल कक्षों का त्रुटियों के लिए निरीक्षण किया जाता है.",
        "Documentation.LongDescription": "इनपुट तालिका की केवल उन पंक्तियों के साथ एक तालिका लौटाता है जिनके कम से कम एक कक्ष में त्रुटि हो. यदि स्तंभों की सूची निर्दिष्ट की गई होती है, तो निर्दिष्ट स्तंभों में केवल कक्षों का त्रुटियों के लिए निरीक्षण किया जाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ग्राहकों की पंक्तियों में त्रुटियों वाले ग्राहक के नाम चुनें.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "छोड़ी गई प्रथम गणना पंक्तियों के साथ एक तालिका लौटाता है.",
        "Documentation.LongDescription": "ऐसी तालिका लौटाता है जिसमें तालिका <code>table</code> की पंक्तियों <code>countOrCondition</code> की प्रथम निर्दिष्ट संख्या नहीं होती है.\r\n    छोड़ी गई पंक्तियों की संख्या वैकल्पिक पैरामीटर <code>countOrCondition</code> पर निर्भर होती है.\r\n    <ul>\r\n    <li> यदि <code>countOrCondition</code> को छोड़ा जाता है तो केवल प्रथम पंक्ति छोड़ी जाती है. </li>\r\n    <li> यदि <code>countOrCondition</code> कोई संख्या हो, तो उतनी पंक्तियाँ (शीर्ष से प्रारंभ करते हुए) छोड़ दी जाएँगी. </li>\r\n    <li> यदि <code>countOrCondition</code> कोई शर्त हो, तो किसी पंक्ति के शर्त पूरा न करने तक, शर्त को पूरा करने वाली पंक्तियों को छोड़ दिया जाएगा.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पहली पंक्ति को छोड़ें.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "तालिका की पहली दो पंक्तियों को छोड़ें.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "तालिका की दो पंक्तियों को छोड़ें जहाँ [Price] > 25 है.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "किसी भी डाउनस्ट्रीम कार्रवाई को डेटा के मूल स्रोत के विरुद्ध चलने से रोकता है.",
        "Documentation.LongDescription": "किसी भी डाउनस्ट्रीम कार्रवाई को <code>table</code> में डेटा के मूल स्रोत के विरुद्ध चलाए जाने से रोकता है.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "SQL, तालिका से इस तरह डेटा फ़ेच करता है जो किसी भी डाउनस्ट्रीम कार्रवाई को SQL सर्वर पर क्वेरी के रूप में चलने से रोकता है.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "स्तंभों को पंक्तियों में और पंक्तियों को स्तंभों में बदलता है.",
        "Documentation.LongDescription": "स्तंभों को पंक्तियों में और पंक्तियों को स्तंभों में बदलता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "नाम-मान युग्मों की तालिका की पंक्तियों को स्तंभों में बदलें.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "तालिकाओं के सेट के बीच रिलेशनशिप प्राप्त करता है.",
        "Documentation.LongDescription": "तालिकाओं के किसी सेट के बीच रिलेशनशिप प्राप्त करता है. सेट <code>tables</code> में नेविगेशन तालिका के समान संरचना होना माना गया है. <code>dataColumn</code> द्वारा निर्धारित स्तंभ में वास्तविक डेटा तालिकाएँ मौजूद हैं.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "Teradata डेटाबेस से SQL तालिकाओं और दृश्यों की तालिका लौटाता है.",
        "Documentation.LongDescription": "सर्वर <code>server</code> पर Teradata डेटाबेस से SQL तालिकाओं और दृश्यों की तालिका लौटाता है. पोर्ट को कोलोन द्वारा अलग किए गए, सर्वर से वैकल्पिक रूप से निर्दिष्ट किया जा सकता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> को निम्नलिखित विकल्पों को नियंत्रण करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] या [Query = \"select ...\"] के रूप में निर्दिष्ट किया जाता है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure समय श्रृंखला इनसाइट्स"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "पुनर्प्राप्त करने के लिए ऐतिहासिक Twilio डेटा के कुल महीने दर्ज करें.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "संबंधित Twilio डेटा सहित तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "ऐसी तालिका लौटाता है जिसमें निर्दिष्ट तालिका प्रकार के स्तंभों (उदा. स्कीमा) का विवरण शामिल है.",
        "Documentation.LongDescription": "<p><code>tableType</code> के स्तंभ लेबल्स का वर्णन करने वाली तालिका लौटाता है.</p>\r\n<p>परिणामी तालिका के विवरण के लिए <code>Table.Schema</code> का दस्तावेज़ देखें.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps सेवाएँ फ़ीड",
        "Documentation.DisplayName": "Azure DevOps सेवाएँ फ़ीड",
        "Documentation.Caption": "VSTS.फ़ीड",
        "Documentation.Name": "VSTS.फ़ीड",
        "Documentation.LongDescription": "Azure DevOps द्वारा प्रस्तावित OData फ़ीड्स की तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Viva Insights डेटा से कनेक्ट करें",
        "Documentation.LongDescription": "कार्यस्थल विश्लेषण से साप्ताहिक मेट्रिक्स और विशेषता डेटा को आयात करें.",
        "Documentation.Examples": [
          {
            "Description": "विभाजन में प्रत्येक मापित कर्मचारी के लिए दृश्यमान विशेषताओं और प्रत्येक सप्ताह के मैट्रिक्स वाली एक तालिका लौटाता है.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "अपनी घटक संरचनाओं में भंग HTML दस्तावेज़ की सामग्री, साथ ही टैग्स निकालने के बाद पूर्ण दस्तावेज़ और उसके पाठ का निरूपण लौटाता है.",
        "Documentation.LongDescription": "अपनी घटक संरचनाओं में भंग HTML दस्तावेज़ की सामग्री, साथ ही टैग्स निकालने के बाद पूर्ण दस्तावेज़ और उसके पाठ का निरूपण लौटाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "कुंजी Webtrends मैट्रिक्स वाली तालिका लौटाता है.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Webtrends KeyMetrics समाप्ति बिंदु के लिए कॉल करता है और समस्त डेटा को एक तालिका के रूप में लौटाता है.",
        "Documentation.Examples": [
          {
            "Description": "पिछले 30 दिनों में टैनेंट 98765 के लिए मुख्य मैट्रिक्स की तालिका पुल करता है",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "मुख्य मैट्रिक्स की एक तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "अपने Webtrends खाते से संबद्ध प्रोफ़ाइल ID दर्ज करें.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "प्रासंगिक Webtrends डेटा वाली एक तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Viva Insights डेटा से कनेक्ट करें",
        "Documentation.LongDescription": "कार्यस्थल विश्लेषण से साप्ताहिक मेट्रिक्स और विशेषता डेटा को आयात करें.",
        "Documentation.Examples": [
          {
            "Description": "विभाजन में प्रत्येक मापित कर्मचारी के लिए दृश्यमान विशेषताओं और प्रत्येक सप्ताह के मैट्रिक्स वाली एक तालिका लौटाता है.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "XML दस्तावेज़ की सामग्रियों को एक पदानुक्रमिक तालिका के रूप में लौटाता है.",
        "Documentation.LongDescription": "XML दस्तावेज़ की सामग्रियों को एक पदानुक्रमिक तालिका के रूप में लौटाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "XML दस्तावेज़ की सामग्रियों को एक फ्लैटेंड तालिका के नेस्टेड संग्रह के रूप में लौटाता है.",
        "Documentation.LongDescription": "XML दस्तावेज़ की सामग्रियों को एक फ्लैटेंड तालिका के नेस्टेड संग्रह के रूप में लौटाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "स्थानीय xml फ़ाइल की सामग्री को पुनर्प्राप्त करें.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "अपने Zendesk खाते का URL डालें.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "प्रासंगिक Zendesk डेटा के साथ तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "किसी ADO.NET डेटा स्रोत के लिए स्कीमा संग्रह प्रदान करता है.",
        "Documentation.LongDescription": "प्रदाता नाम <code>providerName</code> और कनेक्शन स्ट्रिंग <code>connectionString</code> सहित ADO.NET डेटा स्रोत के लिए स्कीमा संग्रह वापस करता है. <code>connectionString</code> पाठ या किसी गुण मान जोड़ी का रिकॉर्ड हो सकता है. गुण मान या तो पाठ या संख्या हो सकती हैं. हो सकता है कि अतिरिक्त गुणों को निर्दिष्ट करने के लिए वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> प्रदान किया जाए. रिकॉर्ड में निम्न फ़ील्ड शामिल हो सकते हैं:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : एक तार्किक (सही/गलत) है जो कि यह निर्धारित करता है कि Windows प्रमाणीकरण के लिए SQL Server संगत कनेक्शन स्ट्रिंग विकल्पों को निर्मित किया जाना है या नहीं. डिफ़ॉल्ट मान सही है.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (Beta)",
        "Documentation.Description": "Amazon Redshift डेटाबेस से डेटा आयात करें.",
        "Documentation.LongDescription": "डेटाबेस <code>database</code> में Amazon Redshift क्लस्टर <code></code> पर तालिकाओं को सूचीबद्ध करने वाली तालिका लौटाता है.  निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>विकल्प</code>, निर्दिष्ट किया जा सकता है:\r\n<ul>\r\n<li><code>प्रदाता नाम</code>: कनेक्शन के लिए प्रदाता नाम के रूप में उपयोग किया जाने वाला पाठ मान. इसका उपयोग Microsoft प्रमाणीकरण का उपयोग करते समय किया जाता है.</li>\r\n<li><code>बैच आकार</code>: पंक्तियों की संख्या जिन्हें एकल कॉल में सर्वर में फ़ेच किया जाता है. </li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Analysis सेवा डेटाबेस से बहुआयामी क्यूब की तालिका या तालिकाबद्ध मॉडल लौटाता है.",
        "Documentation.LongDescription": "सर्वर <code>server</code> पर Analysis सेवा डेटाबेस <code>database</code> से बहुआयामी क्यूब या तालिकाबद्ध मॉडल की तालिका लौटाता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> निम्न विकल्पों को नियंत्रित करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए उपयोग की गई मूल MDX क्वेरी.</li>\r\n<li><code>TypedMeasureColumns</code> : ग़लत पर सेट होने पर, &#39;&#39;संख्या&#39;&#39; प्रकार का उपयोग सभी माप स्तंभों के लिए किया जाएगा. इस विकल्प के लिए डिफ़ॉल्ट मान ग़लत है.</li>\r\n<li><code>Culture</code> : कल्चर नाम डेटा के लिए कल्चर निर्दिष्ट करता है. यह &#39;लोकेल आइडेंटिफ़ायर&#39; कनेक्शन स्ट्रिंग गुण के समतुल्य होता है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द करने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>SubQueries</code> : एक संख्या (0, 1 या 2) जो कनेक्शन स्ट्रिंग में &quot;SubQueries&quot; गुण का मान सेट करती है. यह उपचयन या उपक्यूब्स पर परिकलित सदस्यों का व्यवहार नियंत्रित करता है. (डिफ़ॉल्ट मान 2 है).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "स्पार्क",
        "Documentation.Caption": "स्पार्क",
        "Documentation.Description": "निर्दिष्ट स्पार्क क्लस्टर पर तालिकाओं को सूचीबद्ध करने वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>प्रोटोकॉल</code> का उपयोग करके स्पार्क क्लस्टर <code>होस्ट</code> पर तालिकाओं को सूचीबद्ध करने वाली तालिका लौटाता है.  मान्य प्रोटोकॉल हैं:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "निर्दिष्ट स्पार्क क्लस्टर पर तालिकाओं को सूचीबद्ध करने वाली तालिका लौटाता है.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "खाता और प्रोजेक्ट के नाम दर्ज करें.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (केवल बोर्ड)",
        "Documentation.LongDescription": "Azure DevOps द्वारा प्रस्तावित विश्लेषणात्मक दृश्यों की तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "HDInsight Interactive Query",
        "Documentation.Caption": null,
        "Documentation.Description": "HDInsight Interactive Query से डेटा आयात करें",
        "Documentation.LongDescription": "\r\nHDInsight Interactive Query <code>सर्वर</code> पर <code>डेटाबेस</code> द्वारा निर्दिष्ट HDInsight Interactive Query से तालिकाओं की सूची लौटाता है। कोलन द्वारा सेपरेडेट पोर्ट संख्या सर्वर के साथ वैकल्पिक रूप से निर्दिष्ट की जा सकती है। निम्न विकल्पों को नियंत्रित करने के लिए कोई वैकल्पिक <code>विकल्प</code> पैरामीटर निर्दिष्ट किए जा सकते हैं:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: वह अवधि, जो इस बात को नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है। डिफ़ॉल्ट मान ड्राइवर-आश्रित है।</li>\r\n        <li><code>CommandTimeout</code>: वह अवधि, जो इस बात को नियंत्रित करती है कि रद्द किए जाने से पहले सर्वर-साइड क्वेरी कितनी देर तक चलाने की अनुमति है। डिफ़ॉल्ट मान ड्राइवर-आश्रित है।</li>\r\n</ul>\r\n <code>विकल्प</code> पैरामीटर [option1 = value1, option2 = value2...] के रूप में निर्दिष्ट किया जाता है।"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "सामान्य डेटा मॉडल में किसी निकाय की विशेषताओं के लिए डेटा प्रकारों के साथ-साथ मैप किए गए स्तंभों वाली तालिका को लौटाता है.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "सामान्य डेटा मॉडल में किसी निकाय की विशेषताओं के लिए डेटा प्रकारों के साथ-साथ मैप किए गए स्तंभों वाली तालिका को लौटाता है. अगर मैप नहीं किया गया है, तो निकाय परिभाषा से स्तंभों को जोड़ दिया जाएगा और ऐसे सभी स्तंभों को निकाल दिया जाएगा जिन्हें मैप नहीं किया गया हो.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "CloudBluePSA",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "क्यूब पर पैरामीटर लागू करने के बाद उसे लौटाता है.",
        "Documentation.LongDescription": "<code>cube</code> पर <code>arguments</code> के साथ <code>parameter</code> लागू करने के बाद क्यूब लौटाता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "निर्दिष्ट स्तंभों पर मैप की गई विशेषताओं को संकुचित करके क्यूब के लिए फ़िल्टर संदर्भ की आयाम ग्रैन्युलैरिटी को बदलता है.",
        "Documentation.LongDescription": "निर्दिष्ट स्तंभों <code>columnNames</code> पर मैप की गई विशेषताओं को संकुचित करके <code>cube</code> के लिए फ़िल्टर संदर्भ की आयाम ग्रैन्युलैरिटी को बदलता है. क्यूब के तालिका दृश्य से स्तंभ भी हटाए गए हैं.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Cube.Dimensions द्वारा लौटाए गए आयामों के सेट को प्रतिस्थापित करता है.",
        "Documentation.LongDescription": "<code>Cube.Dimensions</code> द्वारा लौटाए गए आयामों के सेट को प्रतिस्थापित करता है.\r\n    उदाहरण के लिए, इस फ़ंक्शन का उपयोग किसी आयाम विशेषता में एक ID कालम जोड़ने के लिए किया जा सकता है, ताकि डेटा स्रोत प्रदर्शित मान के बजाय ID पर समूहीकृत कर सके.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "क्यूब फ़ंक्शन्स की एक सूची लागू करता है.",
        "Documentation.LongDescription": "क्यूब फ़ंक्शन्स, <code>transforms</code>, की सूची को <code>cube</code> पर लागू करता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "किसी Db2 डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की एक तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>database</code> नामक डेटाबेस इंस्टैंस में <code>server</code> सर्वर पर किसी Db2 डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की एक तालिका लौटाता है. पोर्ट को वैकल्पिक रूप से सर्वर के साथ निर्दिष्ट किया जा सकता है, जो एक कॉलन द्वारा अलग किया गया हो. किसी वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, को निम्न विकल्प नियंत्रित करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n<li><code>Implementation</code> : उपयोग किए जाने के लिए आंतरिक डेटाबेस प्रदाता कार्यान्वयन को निर्दिष्ट करता है. मान्य मान निम्न हैं: &quot;IBM&quot; और &quot;Microsoft&quot;.</li>\r\n<li><code>BinaryCodePage</code> : Db2 FOR BIT बाइनरी डेटा को वर्ण स्ट्रिंग्स में डिकोड करने के लिए CCSID (कोडेड कैरेक्टर सेट आइडेंटिफ़ायर) संख्या. कार्यान्वयन के लिए लागू होता है = “Microsoft”. रूपांतरण (डिफ़ॉल्ट) को अक्षम करने के लिए 0 सेट करें. डेटाबेस एन्कोडिंग के आधार पर रूपांतरण के लिए 1 सेट करें. एप्लीकेशन एन्कोडिंग में रूपांतरित करने के लिए अन्य CCSID संख्या सेट करें.</li>\r\n<li><code>PackageCollection</code> : SQL स्टेटमेंट को संसाधित करने के लिए आवश्यक साझा पैकेज का उपयोग सक्षम करने हेतु पैकेज संग्रहण (&quot;NULLID&quot; डिफ़ॉल्ट है) के लिए स्ट्रिंग मान को निर्दिष्ट करता है. Implementation = &quot;Microsoft&quot; पर लागू होता है.</li>\r\n<li><code>UseDb2ConnectGateway</code> : निर्दिष्ट करता है कि कनेक्शन Db2 कनेक्ट गेटवे के माध्यम से बनाया जा रहा है या नहीं. कार्यान्वयन = &quot;Microsoft&quot; पर लागू होता है.</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] या [Query = \"select ...\"] रूप में निर्दिष्ट किया गया है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Data.World से डेटासेट पुनर्प्राप्त करता है"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "डेटाब्रिक्स"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV370",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV370(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "ऐसी तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्‍ट से निर्दिष्ट कंटेनर में प्राप्त ब्‍लॉब के गुण और सामग्री शामिल होती है.",
        "Documentation.LongDescription": "वह तालिका लौटाता है जिसमें किसी Azure संग्रहण वॉल्‍ट से कंटेनर URL <code>account</code> में प्राप्त प्रत्‍येक ब्‍लॉब फ़ाइल के लिए पंक्ति शामिल होती है. प्रत्‍येक पंक्ति में फ़ाइल के गुण और उसकी सामग्री का लिंक होता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "प्रदान किए गए HTML के विरुद्ध निर्दिष्ट CSS चयनकर्ताओं को चलाने के परिणामों वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>html</code> के विरुद्ध निर्दिष्ट CSS चयनकर्ता चलाने के परिणामों सहित एक तालिका लौटाता है। एक वैकल्पिक रिकॉर्ड पैरामीटर <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किए जा सकते हैं। रिकॉर्ड में निम्न फ़ील्ड्स हो सकते हैं:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "डेटा पर पहुँच प्राप्त करना",
        "Documentation.Examples": [
          {
            "Description": "नमूना html पाठ मान से कोई तालिका लौटाता है।",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>प्रबंधक</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "सभी hrefs नमूना html पाठ मान से निकालता है.",
            "Code": "Html.Table(\"<a href=\"\"/test.html\"\">परीक्षण</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "एक Informix डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की तालिका को लौटाता है.",
        "Documentation.LongDescription": "<code>database</code> नामक डेटाबेस इंस्टैंस में सर्वर <code>server</code> पर Informix डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की तालिका लौटाता है. पोर्ट को कोलोन द्वारा अलग किए गए, सर्वर से वैकल्पिक रूप से निर्दिष्ट किया जा सकता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, को निम्नलिखित विकल्पों को नियंत्रण करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] या [Query = \"select ...\"] के रूप में निर्दिष्ट किया जाता है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "लीड विवरण वाली एक तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>url</code>/rest/v1/leads.json पर Marketo REST API एंडपॉइंट को कॉल करता है. सूची <code>leadIds</code> के सभी लीड लौटा दिए गए हैं.",
        "Documentation.Examples": [
          {
            "Description": "तीन लीड के लिए विवरण पुल करता है",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "आपूर्ति किए गए लीड के लिए विवरण वाली एक तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "अपने खाते से संबंधित Marketo REST API अंतिमबिंदु का URL दर्जे करें.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "संबद्ध Marketo डेटा वाली एक तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "MySQL डेटाबेस में उपलब्ध SQL तालिकाओं, दृश्यों और संग्रहीत स्केलर फ़ंक्शंस की तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>database</code> नामक डेटाबेस इंस्टेंस में सर्वर <code>server</code> पर MySQL डेटाबेस में उपलब्ध SQL तालिकाओं, दृश्यों और संग्रहीत स्केलर फ़ंक्शन की तालिका लौटाता है. पोर्ट को कॉलन द्वारा अलग किए गए, सर्वर से वैकल्पिक रूप से निर्दिष्ट किया जा सकता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, को निम्नलिखित विकल्पों को नियंत्रण करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>Encoding</code> : एक TextEncoding मान, जो सर्वर पर भेजी गई सभी क्वेरीज को एनकोड करने के लिए उपयोग किए गए वर्ण सेट निर्दिष्ट करता है (डिफ़ॉल्ट नल है).</li>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>TreatTinyAsBoolean</code> : तार्किक (सही/गलत) जो यह निर्धारित करता है कि सर्वर पर tinyint स्तंभों को तार्किक मानों के रूप में बलपूर्वक लागू किया जाना चाहिए या नहीं. डिफ़ॉल्ट मान सही है.</li>\r\n<li><code>OldGuids</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि वर्ण(36) स्तंभों (गलत होने पर) या बाइनरी(16) स्तंभों (सही होने पर) को GUID के रूप में माना जाएगा. डिफ़ॉल्ट मान गलत है.</li>\r\n<li><code>ReturnSingleDatabase</code> : तार्किक (सही/गलत) जो यह निर्धारित करता है कि सभी डेटाबेस की सभी तालिकाओं को लौटाना है (गलत होने पर) या निर्दिष्ट डेटाबेस की तालिकाओं और दृश्यों को लौटाना है (सही होने पर). डिफ़ॉल्ट मान गलत है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए, रिकॉर्ड पैरामीटर [option1 = value1, option2 = value2...] या [Query = \"select ...\"] के रूप में निर्दिष्ट किया जाता है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "किसी IBM Netezza डेटाबेस से डेटा आयात करें.",
        "Documentation.LongDescription": "\r\nNetezza सर्वर डेटाबेस <code>डेटाबेस</code> से <code>सर्वर </code> सर्वर पर Netezza तालिकाओं, दृश्यों और संग्रहीत कार्यों की एक तालिका लौटाता है. वैकल्पिक रूप से पोर्ट को सर्वर के साथ निर्दिष्ट किया जा सकता है, जो एक अपूर्ण विराम चिह्न द्वारा अलग किया जाता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>विकल्प</code>, निम्नलिखित विकल्पों को नियंत्रित करने के लिए निर्दिष्ट किया जा सकता है: :\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: ऐसा तार्किक (सही/गलत), जो यह सेट करता है कि वापस किए गए मानों पर नेविगेशन गुणों (डिफ़ॉल्ट सही है) को जनरेट करना है या नहीं </li>\r\n        <li><code>HierarchicalNavigation</code>:ऐसा तार्किक (सही/गलत) जो यह सेट करता है कि अपनी स्कीमा नामों के अनुसार समूहीकृत तालिकाओं को देखना है या नहीं (डिफ़ॉल्ट गलत है)</li>\r\n        <li><code>ConnectionTimeout</code>: वह अवधि, जो यह नियंत्रित करती है कि सर्वर से कनेक्शन बनाने का प्रयास छोड़ने से पहले कितने समय तक प्रतीक्षा करनी है. डिफ़ॉल्ट मान ड्राइवर-आधारित है.</li>\r\n        <li><code>CommandTimeout</code>: वह अवधि, जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले कितने समय तक चलाने की अनुमति है. डिफ़ॉल्ट मान ड्राइवर-आधारित है.</li>\r\n<li><code>NormalizeDatabaseName</code>:एक तार्किक (सही/गलत) जो सेट करता है कि डेटाबेस का नाम अपरकेस में सामान्य किया जाए या इसकी शाब्दिक व्याख्या की जाए (डिफ़ॉल्ट सत्य है).</li>\r\n</ul>\r\nरिकॉर्ड पैरामीटर को [विकल्प1 = मान1, विकल्प2 = मान2 ...] के रूप में निर्दिष्ट किया गया है.",
        "Documentation.Examples": [
          {
            "Description": "एक IBM Netezza प्रोजेक्ट में तालिकाएँ सूचीबद्ध करें.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "ODBC डेटा स्रोत पर नेटिव क्‍वेरी चलाने का परिणाम लौटाता है.",
        "Documentation.LongDescription": "ODBC का उपयोग करके कनेक्शन स्ट्रिंग <code>connectionString</code> के साथ <code>query</code> को चलाने का परिणाम वापस करता है. <code>connectionString</code>, गुण मान जोड़ियों का पाठ या रिकॉर्ड हो सकता है. गुण मान या तो पाठ या संख्या हो सकते हैं. हो सकता है कि अतिरिक्त गुणों को निर्दिष्ट करने के लिए वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> हो सकता है कि अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया गया हो. रिकॉर्ड में निम्न फ़ील्ड शामिल हो सकते हैं\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान 15 सेकंड है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : एक तार्किक (सही/गलत) है जो कि यह निर्धारित करता है कि Windows प्रमाणीकरण के लिए SQL Server संगत कनेक्शन स्ट्रिंग विकल्पों को निर्मित किया जाना है या नहीं. डिफ़ॉल्ट मान सही है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "दी गई कनेक्शन स्ट्रिंग के लिए साधारण क्वेरी चलाने का परिणाम लौटाना.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "OLE DB डेटा स्रोत पर नेटिव क्‍वेरी चलाने का परिणाम लौटाता है.",
        "Documentation.LongDescription": "ODBC का उपयोग करके कनेक्शन स्ट्रिंग <code>connectionString</code> के साथ <code>query</code> को चलाने का परिणाम वापस करता है. <code>connectionString</code>, गुण मान जोड़ी का पाठ या रिकॉर्ड हो सकता है. गुण मान या तो पाठ या संख्या हो सकती हैं. वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> प्रदान किया जाए. रिकॉर्ड में निम्न फ़ील्ड शामिल हो सकते हैं\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : एक तार्किक (सही/गलत) है जो कि यह निर्धारित करता है कि Windows प्रमाणीकरण के लिए SQL Server संगत कनेक्शन स्ट्रिंग विकल्पों को निर्मित किया जाना है या नहीं. डिफ़ॉल्ट मान सही है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "PostgreSQL डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की एक तालिका लौटाता है.",
        "Documentation.LongDescription": "सर्वर <code>database</code> पर स्थित <code>server</code> नामक डेटाबेस इंस्टेंस PostgreSQL डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की तालिका लौटाता है. पोर्ट को कोलोन द्वारा अलग किए गए, सर्वर से वैकल्पिक रूप से निर्दिष्ट किया जा सकता है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए, रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] या [Query = \"select ...\"] रूप में निर्दिष्ट किया गया है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Snowflake कंप्यूटिंग वेयरहाउस से डेटा आयात करें.",
        "Documentation.LongDescription": "<code>सर्वर</code> पर मौजूद Snowflake कंप्यूटिंग <code>वेयरहाउस</code> में तालिकाओं को सूचीबद्ध करने वाली कोई तालिका लौटाता है. निम्न विकल्पों को नियंत्रित करने के लिए कोई वैकल्पिक रिकॉर्ड पैरामीटर, <code>विकल्प</code>, निर्दिष्ट किया जा सकता है: \r\n<ul>\r\n<li><code>भूमिका</code>: कनेक्शन के लिए भूमिका नाम के रूप में उपयोग किए जाने के लिए एक पाठ मान.</li>\r\n<li><code>CreateNavigationProperties</code>: कोई तार्किक (सही/गलत) मान जो सेट करता है कि क्या लौटाए गए मानों पर नेविगेशन गुण जनरेट करना है (डिफ़ॉल्ट सही है) </li>\r\n<li><code>ConnectionTimeout</code>: Snowflake से नेटवर्क के जवाबों के लिए प्रतीक्षा समय के सेकंड की संख्या.</li>\r\n<li><code>CommandTimeout</code>: किसी क्वेरी के निष्पादित होने के प्रतीक्षा समय के सेकंड की संख्या.</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "किसी Snowflake वेयरहाउस में तालिकाओं को सूचीबद्ध करें.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "स्पार्क",
        "Documentation.Description": "निर्दिष्ट स्पार्क क्लस्टर पर तालिकाओं को सूचीबद्ध करने वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>प्रोटोकॉल</code> का उपयोग करके स्पार्क क्लस्टर <code>होस्ट</code> पर तालिकाओं को सूचीबद्ध करने वाली तालिका लौटाता है.  मान्य प्रोटोकॉल हैं:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Azure स्पार्क इंस्टैंस में तालिकाओं को सूचीबद्ध करें.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "SQL सर्वर डेटाबेस से SQL तालिकाओं, दृश्यों और संग्रहीत फ़ंक्शंस की तालिका लौटाता है.",
        "Documentation.LongDescription": "सर्वर <code>server</code> पर स्थित SQL Server डेटाबेस <code>database</code> से SQL तालिकाओं, दृश्यों और संग्रहीत फ़ंक्शंस की तालिका लौटाता है. पोर्ट को कोलोन या अल्पविराम द्वारा अलग किए गए, सर्वर से वैकल्पिक रूप से निर्दिष्ट किया जा सकता है. एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, को निम्नलिखित विकल्पों को नियंत्रित करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : एक संख्या जो कि जनरेट की गई SQL क्वेरी में &quot;maxdop&quot; पूछताछ वर्ग के मान को सेट करती है.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n<li><code>MultiSubnetFailover</code> : तार्किक (सही/गलत) जो कि कनेक्शन स्ट्रिंग (डिफ़ॉल्ट गलत है) में &quot;MultiSubnetFailover&quot; गुण के मान को सेट करता है.</li>\r\n<li><code>UnsafeTypeConversions</code> : तार्किक (सही/गलत) जो यदि सही है, तो ऐसे रूपांतरणों को फ़ोल्ड करने का प्रयास करता है जो विफल हो सकता है और पूरी क्वेरी के विफल होने का कारण बन सकता है. सामान्य उपयोग के लिए अनुशंसित नहीं है.</li>\r\n<li><code>ContextInfo</code> : एक बाइनरी मान जिसका उपयोग हर आदेश को चलाने से पहले CONTEXT_INFO को सेट करने के लिए किया जाता है.</li>\r\n<li><code>OmitSRID</code> : एक लॉजिकल (सही/गलत) जो यदि सही है, तो ज्यामिति और भूगोल प्रकारों के भली-भाँति ज्ञात पाठ बनाते समय SRID को छोड़ देता है.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : एक तार्किक (सही/गलत) मान, जो सही होने पर, एक ही सर्वर पर डेटाबेस में क्वेरी फोल्डिंग की अनुमति देता है. डिफ़ॉल्ट मान गलत है.</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए रिकॉर्ड पैरामीटर [option1 = value1, option2 = value2...] या [Query = \"select ...\"] के रूप में निर्दिष्ट किया जाता है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Sybase डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की एक तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>server</code> सर्वर पर <code>database</code> नामक डेटाबेस इंस्टैंस में स्थित Sybase डेटाबेस में उपलब्ध SQL तालिकाओं और दृश्यों की तालिका लौटाता है. पोर्ट को कोलन द्वारा अलग किए गए, सर्वर से वैकल्पिक रूप से निर्दिष्ट किया जा सकता है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर <code>options</code> निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : लॉजिकल (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट सही है).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : एक फ़ंक्शन जिसका उपयोग नेविगेशन गुणों के लिए नामों के निर्माण हेतु उपयोग किया जाता है.</li>\r\n<li><code>Query</code> : डेटा पुनर्प्राप्त करने के लिए मूल SQL क्वेरी उपयोग की गई. यदि क्वेरी परिणामों के एक से अधिक सेट प्रदान करती है, तो केवल पहला सेट लौटाया जाएगा.</li>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>ConnectionTimeout</code> : एक अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर पर निर्भर है.</li>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n</ul>\r\n\r\n    उदाहरण के लिए रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] या [Query = \"select ...\"] रूप में निर्दिष्ट किया गया है.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "स्पष्ट स्थिति मानों वाला एक स्तंभ जोड़ता है.",
        "Documentation.LongDescription": "स्पष्ट स्थिति मानों वाली <code>table</code> में <code>newColumnName</code> नाम का एक स्तंभ जोड़ता है.\r\n    एक वैकल्पिक मान, <code>initialValue</code>, आरंभिक अनुक्रमणिका मान होता है. एक वैकल्पिक मान, <code>increment</code>, निर्दिष्ट करता है कि प्रत्येक अनुक्रमणिका मान में कितनी वृद्धि करनी है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका में \"अनुक्रमणिका\" नाम से एक अनुक्रमणिका स्तंभ जोड़ें.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "तालिका में, मान 10 से शुरू और 5 तक वृद्धि करते हुए, \"अनुक्रमणिका\" नाम से अनुक्रमणिका स्तंभ जोड़ें.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "तालिका में सूचियों का स्तंभ दिया जाता है, उसकी सूची में मौजूद प्रत्येक मान के लिए एक पंक्ति की प्रतिलिपि बनाएँ.",
        "Documentation.LongDescription": "<code>table</code> दिया जाता है, जहाँ <code>column</code> मानों की सूची है, सूची को प्रत्येक मान के लिए एक पंक्ति में विभाजित करता है. बनाई गई प्रत्येक नई पंक्ति में अन्य स्तंभों के मानों के डुप्लिकेट बना दिए जाते हैं.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "सूची स्तंभ [Name] को तालिका में विभाजित करें.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "पिछले कक्ष के मान को नीचे स्तंभ में नल मान वाले कक्षों में वितरित करता है.",
        "Documentation.LongDescription": "<code>table</code> निर्दिष्ट से एक तालिका लौटाता है, जिसमें पिछले कक्ष के मान को <code>columns</code> निर्दिष्ट में नीचे दिए गए नल-मान वाले कक्षों में वितरित किया जाता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका से उनसे ऊपर के मान से भरे हुए स्तंभ [Place] में नल मान वाली तालिका लौटाएँ.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "किसी कक्ष के मान को ऊपर स्तंभ में नल मान वाले कक्षों में वितरित करता है.",
        "Documentation.LongDescription": "निर्दिष्ट <code>table</code> से एक तालिका लौटाता है, जिसमें अगले कक्ष के मान को निर्दिष्ट <code>columns</code> में ऊपर दिए गए नल-मान वाले कक्षों में वितरित किया जाता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका से उनसे नीचे के मान से भरे हुए स्तंभ [Column2] में नल मान वाली तालिका लौटाएँ.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "वे सभी पंक्तियाँ लौटाता है जिनमें तालिका में दिया गया पाठ है.",
        "Documentation.LongDescription": "तालिका <code>table</code> की वे पंक्तियाँ लौटाता है जिनमें पाठ <code>text</code> है. अगर पाठ नहीं मिलता है, तो एक रिक्त तालिका को लौटाया जाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की उन पंक्तियों को ढूँढें जिनमें \"Bob\" है.",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "निर्दिष्ट प्रथम गणना पंक्तियाँ लौटाता है.",
        "Documentation.LongDescription": "<code>table</code> के मान के आधार पर, तालिका <code>table</code> की पहली पंक्तियाँ लौटाता है:\r\n    <ul>\r\n    <li> यदि <code>countOrCondition</code> एक संख्या है, तो उतनी ही पंक्तियाँ (शीर्ष से प्रारंभ करके) लौटाई जाएँगी. </li>\r\n    <li> यदि <code>countOrCondition</code> एक शर्त है, तो किसी पंक्ति के शर्त पूरा न करने तक, शर्त को पूरा करने वाली पंक्तियों को लौटाया जाएगा.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पहली दो पंक्तियाँ ढूँढें.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "उन पहली पंक्तियों को ढूँढें जहाँ तालिका में [a] > 0 है.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "वह तालिका लौटाता है जो एक विभाजित की गई तालिकाओं के सेट के संयोजन का परिणाम है.",
        "Documentation.LongDescription": "वह तालिका लौटाता है जो विभाजित तालिकाओं <code>partitions</code> के संयोजन का परिणाम है. <code>partitionColumn</code> जोड़े जाने वाले स्‍तंभ का नाम है. स्‍तंभ का प्रकार डिफ़ॉल्‍ट रूप से <code>कोई भी</code> होता है, लेकिन <code>partitionColumnType</code> द्वारा निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{number}</code> से आइटम प्रकार ढूँढें.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "निर्दिष्ट संख्या के बराबर अंतिम पंक्तियाँ लौटाता है.",
        "Documentation.LongDescription": "<code>table</code> के मान के आधार पर, तालिका, <code>table</code>, की अंतिम पंक्तियाँ लौटाता है:\r\n    <ul>\r\n    <li> यदि <code>countOrCondition</code> एक संख्या है, तो उतनी ही पंक्तियाँ स्थिति (समाप्ति - <code>countOrCondition</code>) के आरंभ से लौटाई जाएँगी. </li>\r\n    <li> यदि <code>countOrCondition</code> एक शर्त है, तो किसी पंक्ति के शर्त पूरा न करने तक, शर्त को पूरा करने वाली पंक्तियों को आरोही स्थिति में लौटाया जाएगा.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की अंतिम दो पंक्तियाँ ढूँढें.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "उन अंतिम पंक्तियों को ढूँढें जहाँ तालिका में [a] > 0 है.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "तालिका लौटाता है जहाँ पर सभी स्तंभों को दिए गए पाठ के साथ उपसर्ग के रूप में शामिल किया गया है.",
        "Documentation.LongDescription": "एक तालिका लौटाता है जहाँ पर प्रदान किए गए <code>table</code> से सभी स्तंभ नामों को दिए गए पाठ, <code>prefix</code> के साथ उपसर्ग के रूप में शामिल किया गया है, साथ ही <code>prefix</code><code>.ColumnName</code> स्वरूप में पीरियड को शामिल किया गया है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में \"MyTable\" में स्तंभों को पहले लगाएँ.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "निर्दिष्ट ऑफ़सेट पर शुरू होने वाली पंक्तियों को लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट <code>offset</code> पर प्रारंभ होने वाली <code>table</code> की पंक्तियाँ लौटाता है. एक वैकल्पिक पैरामीटर, <code>count</code>, निर्दिष्ट करता है कि कितनी पंक्तियाँ लौटानी हैं. डिफ़ॉल्‍ट रूप से, ऑफ़सेट के बाद की सभी पंक्तियाँ लौटाई जाती हैं.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में ऑफ़सेट 1 पर प्रारंभ होने वाली सभी पंक्तियाँ लौटाएँ.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "तालिका में ऑफ़सेट 1 पर प्रारंभ होने वाली एक पंक्ति लौटाएँ.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "निर्दिष्ट स्तंभों को निकालता है.",
        "Documentation.LongDescription": "दिए गए <code>table</code> से निर्दिष्ट <code>columns</code> निकालता है.\r\n    यदि निर्दिष्ट स्तंभ मौजूद नहीं है, तो अगर वैकल्पिक पैरामीटर <code>missingField</code> द्वारा कोई वैकल्पिक व्यवहार निर्दिष्ट नहीं है तो एक त्रुटि उत्पन्न होती है (उदाहरण के लिए, <code>MissingField.UseNull</code> या <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका से स्तंभ [Phone] निकालें.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "तालिका से किसी गैर-मौजूद स्तंभ को निकालने का प्रयास करें.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "तालिका से निर्दिष्ट पंक्तियों की सभी आवृत्तियाँ निकालता है.",
        "Documentation.LongDescription": "<code>table</code> में से निर्दिष्ट <code>rows</code> की सभी आवृत्तियाँ निकालता है.\r\n    तालिका की पंक्तियों के बीच तुलना को नियंत्रित करने के लिए कोई वैकल्पिक पैरामीटर <code>equationCriteria</code> निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code> से कोई भी ऐसी पंक्ति निकालें जहाँ [a = 1] हो.",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "पंक्तियों की निर्दिष्ट संख्या निकालता है.",
        "Documentation.LongDescription": "निर्दिष्ट <code>offset</code> पर प्रारंभ होने वाले <code>table</code> के प्रारंभ से पंक्तियों के <code>count</code> निकालता है. यदि <code>count</code> पैरामीटर प्रदान नहीं किया गया होता है, तो 1 की डिफ़ॉल्ट गणना का उपयोग किया जाता है. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका से पहली पंक्ति निकालें.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "तालिका से स्थिति 1 पर स्थित पंक्ति निकालें.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "तालिका से स्थिति 1 पर प्रारंभ होने वाली दो पंक्तियाँ निकालें.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "फ़ॉर्म {old, new} के नाम बदलता है.",
        "Documentation.LongDescription": "तालिका <code>table</code> में स्तंभों पर दिए गए बदले हुए नाम लागू करता है. एक प्रतिस्थापन कार्रवाई <code>renames</code> की सूची में प्रदान किए गए दो मानों, पुराना स्तंभ नाम और नया स्तंभ नाम, की सूची होती है.\r\n    यदि स्तंभ मौजूद नहीं होता है, तो जब तक वैकल्पिक पैरामीटर <code>missingField</code> कोई विकल्प निर्दिष्ट नहीं कर देता एक अपवाद दिखाया जाता है (उदाहरण <code>MissingField.UseNull</code> या <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में स्तंभ नाम \"CustomerNum\" को \"CustomerID\" से बदलें.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "तालिका में स्तंभ नाम \"CustomerNum\" को \"CustomerID\" से और \"PhoneNum\" को \"फ़ोन\" से बदलें.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "तालिका स्तंभ नाम \"NewCol\" को \"NewColumn\" से बदलें, और यदि स्तंभ मौजूद नहीं होता है तो उस पर ध्यान न दें.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "निर्दिष्ट क्रम में स्तंभों के साथ एक तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>columnOrder</code> द्वारा निर्दिष्ट क्रम में स्तंभों के साथ इनपुट <code>table</code> की एक तालिका लौटाता है. सूची में निर्दिष्ट न किए गए स्तंभों को पुनः क्रमबद्ध नहीं किया जाएगा.\r\n     यदि स्तंभ मौजूद नहीं होता है, तो जबतक वैकल्पिक पैरामीटर <code>missingField</code> कोई विकल्प निर्दिष्ट नहीं कर देता एक अपवाद दिखाया जाता है (उदाहरण <code>MissingField.UseNull</code> या <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में स्तंभ [Phone] और [Name] का क्रम बदलें.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "तालिका में स्तंभ [Phone] और [Address] का क्रम बदलें या \"MissingField.Ignore\" का उपयोग करें. यह तालिका को नहीं बदलता है क्योंकि स्तंभ [Address] मौजूद नहीं है.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "तालिकाओं की पंक्तियों को निर्दिष्ट संख्या बार दोहराता है.",
        "Documentation.LongDescription": "इनपुट <code>table</code> की निर्दिष्ट <code>count</code> बार दोहराई गई पंक्तियों के साथ एक तालिका लौटाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में पंक्तियों को दो बार दोहराएँ.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "निर्दिष्ट स्‍तंभों में त्रुटि मानों को संबंधित निर्दिष्ट मान से बदलता है.",
        "Documentation.LongDescription": "<code>table</code> के निर्दिष्ट स्‍तंभों में त्रुटि मानों को <code>errorReplacement</code> सूची में नए मानों से बदलता है. सूची का फ़ॉर्मेट {{column1, value1}, …} है. इसमें प्रति स्‍तंभ केवल एक ही प्रतिस्‍थापन मान हो सकता है, स्‍तंभ को एक से अधिक बार निर्दिष्ट करने से त्रुटि आ सकती है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका में त्रुटि मान को पाठ \"world\" से बदलें.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "तालिका में स्‍तंभ A में त्रुटि मान को पाठ \"hello\" से बदलें और स्‍तंभ B में पाठ \"world\" से बदलें.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "निर्दिष्ट तालिका की कुंजियाँ बदलता है.",
        "Documentation.LongDescription": "निर्दिष्ट तालिका की कुंजियाँ बदलता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका की मौजूदा कुंजियों को बदलें.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "सभी निर्दिष्ट पंक्तियों को प्रदान की गई पंक्ति(यों) से बदलता है.",
        "Documentation.LongDescription": "<code>table</code> में निर्दिष्ट सभी पंक्तियों को प्रदान की गई पंक्तियों से बदलता है. बदली जाने वाली पंक्तियों और प्रतिस्थापन को {old, new} स्वरूपण का उपयोग करके <code>replacements</code> में निर्दिष्ट किया जाता है.\r\n    तालिका की पंक्तियों के बीच तुलना को नियंत्रित करने के लिए एक वैकल्पिक <code>equationCriteria</code> पैरामीटर निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "तालिका में पंक्तियों [a = 1, b = 2] और [a = 2, b = 3] को [a = -1, b = -2],[a = -2, b = -3] से बदलें.",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "केवल निर्दिष्ट स्तंभों के साथ एक तालिका लौटाता है.",
        "Documentation.LongDescription": "केवल निर्दिष्ट <code>columns</code> के साथ <code>table</code> लौटाता है.\r\n    <ul>\r\n       <li><code>table</code>: प्रदान की गई तालिका.</li>\r\n       <li><code>columns</code>: वापस करने के लिए तालिका <code>table</code> से कालम की सूची. <code>columns</code> में सूचीबद्ध ऑर्डर में वापस की गई तालिका में कालम.</li>\r\n       <li><code>missingField</code>: <i>(Optional)</i> कालम न होने पर क्या करें.  उदाहरण: <code>MissingField.UseNull</code> या <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "केवल स्तंभ [Name] शामिल करें.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "केवल स्तंभ [CustomerID] और [Name] शामिल करें.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "यदि शामिल किया गया कालम मौजूद नहीं है, तो डिफ़ॉल्ट परिणाम एक त्रुटि होता है.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "यदि शामिल किया गया कालम मौजूद न हो, तो विकल्प <code>MissingField.UseNull</code> नल मानों का एक कालम बनाता है.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "उन पंक्तियों को चुनता है जो शर्त फ़ंक्शन को पूरा करती हैं.",
        "Documentation.LongDescription": "<code>table</code> से उन पंक्तियों की तालिका को लौटाता है, जो चयन <code>condition</code> से मेल खाती हैं.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पंक्तियाँ चुनें जहाँ [CustomerID] स्तंभ के मान 2 से अधिक हों.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "तालिका की उन पंक्तियों को चुनें जहाँ नामों में \"B\" शामिल न हो.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "एक या अधिक स्तंभ नामों और तुलना मापदंड का उपयोग करके तालिका सॉर्ट करें.",
        "Documentation.LongDescription": "एक या अधिक स्तंभ नामों की सूची और { { col1, comparisonCriteria }, {col2} } रूप में वैकल्पिक <code>comparisonCriteria</code> का उपयोग करके <code>table</code> को सॉर्ट करता है.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "स्तंभ \"OrderID\" पर स्थित तालिका को सॉर्ट करें.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "स्तंभ \"OrderID\" पर स्थित तालिका को अवरोही क्रम में सॉर्ट करें.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "स्तंभ \"CustomerID\" पर स्थित तालिका को, फिर \"OrderID\" को \"CustomerID\" के साथ आरोही क्रम में सॉर्ट करें.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "दिए गए फ़ंक्शन का उपयोग करके स्तंभ नामों को परिवर्तित करता है.",
        "Documentation.LongDescription": "दिए गए <code>nameGenerator</code> फ़ंक्शन का उपयोग करके कालम नाम परिवर्तित करता है. मान्य विकल्प:\r\n    <div>\r\n      <code>MaxLength</code> नए कालम नाम की अधिकतम लंबाई निर्दिष्ट करता है. यदि दिए गए फ़ंक्शन के परिणामस्वरूप लंबे कालम नाम होते हैं, तो लंबा नाम छोटा कर दिया जाएगा.\r\n    </div>\r\n    <div>\r\n      एक <code>Comparer</code> है जिसका तुलना को नियंत्रित करने के लिए उपयोग किया जाता है. तुलनाकर्ता केस-असंवेदनशील या कल्चर और लोकेल-संवेदी तुलना प्रदान करने के लिए उपयोग किए जा सकते हैं.\r\n    </div>\r\n    <div>\r\n        निम्नलिखित बिल्ट-इन तुलनाकर्ता सूत्र भाषा में उपलब्ध है:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: सटीक क्रम तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: सटीक क्रम केस-असंवेदनशील तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n      <li> <code>Comparer.FromCulture</code>: कल्चर-संवेदी तुलना करने के लिए उपयोग किया गया</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "स्तंभ नामों से <code>#(tab)</code> वर्ण निकालें",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "लंबाई 6 वाले अक्षर-असंवेदनशील नामों को जनरेट करने के लिए स्तंभ नामों को परिवर्तित करता है.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "विशिष्ट कल्चर का उपयोग करके फ़ॉर्म { column, type } का प्रकार ट्रांसफ़ॉर्मेशन लागू करता है.",
        "Documentation.LongDescription": "वैकल्पिक पैरामीटर <code>culture</code> (उदाहरण के लिए, \"en-US\") के निर्दिष्ट कल्चर का उपयोग करके, पैरामीटर <code>typeTransformations</code> (जहाँ फ़ॉर्मेट { column name, type name} होता है) में निर्दिष्ट स्तंभों पर ट्रांसफ़ॉर्म कार्रवाई लागू करके, इनपुट <code>table</code> से तालिका को लौटाता है.\r\n    यदि स्तंभ मौजूद नहीं होता है, तो एक अपवाद दिखाया जाता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> के स्तंभ [a] के संख्या मानों को पाठ मानों में ट्रांसफ़ॉर्म करें.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "एक या अधिक स्तंभों के मानों को रूपांतरित करता है.",
        "Documentation.LongDescription": "<code>transformOperations</code> में सूचीबद्ध प्रत्येक स्तंभ कार्रवाई लागू करके <code>table</code> को रूपांतरित करता है (जहाँ स्वरूप { column name, transformation } या { column name, transformation, new column type }).\r\n    यदि कोई <code>defaultTransformation</code> निर्दिष्ट है, तो वह उन सभी स्तंभों पर लागू किया जाएगा जो <code>transformOperations</code> में सूचीबद्ध नहीं हैं.\r\n    यदि <code>transformOperations</code> में सूचीबद्ध कोई स्तंभ मौजूद नहीं है, तो एक अपवाद दिया जाता है जब तक कि वैकल्पिक पैरामीटर <code>missingField</code> द्वारा कोई विकल्प (उदाहरण के लिए, <code>MissingField.UseNull</code> या <code>MissingField.Ignore</code>) निर्दिष्ट नहीं किया जाता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "स्तंभ [A] के पाठ मानों को संख्या मानों में और स्तंभ [B] के संख्या मानों को पाठ मानों में रूपांतरित करें.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "गैर-मौजूद स्तंभों की उपेक्षा करते हुए, गुम स्तंभ [X] के संख्या मानों को पाठ मानों में रूपांतरित करें.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "गैर-मौजूद स्तंभों को नल पर डिफ़ॉल्ट रखते हुए, गुम स्तंभ [X] के संख्या मानों को पाठ मानों में रूपांतरित करें.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "स्तंभ [B] में संख्या मानों को वृद्धि करें और उन्हें पाठ मानों में रूपांतरित करें और अन्य सभी स्तंभों को संख्याओं में रूपांतरित करें.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "क्वेरी और कार्रवाइयों के निष्पादन के लिए उपयोगकर्ता-परिभाषित हैंडलर वाली तालिका बनाता है या विस्तारित करता है.",
        "Documentation.LongDescription": "<p><code>table</code> का एक दृश्य लौटाता है, जिसमें दृश्य पर कार्रवाई के लागू होने पर, <code>handlers</code> में निर्दिष्ट फ़ंक्शन का उपयोग कार्रवाई के डिफ़ॉल्ट व्यवहार के स्थान पर किया जाता है.</p>\r\n<p>यदि <code>table</code> प्रदान किया जाता है, तो सभी हैंडलर फ़ंक्शन्स वैकल्पिक होते हैं. यदि <code>table</code> प्रदान नहीं किया जाता है, तो <code>GetType</code> और <code>GetRows</code> हैंडलर फ़ंक्शन आवश्यक होते हैं. यदि किसी कार्रवाई के लिए हैंडलर फ़ंक्शन निर्दिष्ट नहीं किया जाता है, तो इसके बजाय <code>table</code> पर कार्रवाई का डिफ़ॉल्ट व्यवहार लागू किया जाता है (<code>GetExpression</code>की स्थिति को छोड़कर).</p>\r\n<p>हैंडलर फ़ंक्शन्स को ऐसा मान लौटाना चाहिए जो <code>table</code> (या <code>GetExpression</code> की स्थिति में परिणामी दृश्य) के लिए कार्रवाई को लागू करने के परिणाम के सीमेंटिक रूप से समतुल्य हो.</p>\r\n<p>यदि कोई हैंडलर फ़ंक्शन एक त्रुटि देता है, तो दृश्य पर कार्रवाई का डिफ़ॉल्ट व्यवहार लागू होता है.</p>\r\n<p><code>Table.View</code> का उपयोग डेटास्रोत पर फ़ोल्डिंग कार्यान्वित करने – M क्वेरीज़ का स्रोत-विशिष्ट क्वेरीज़ में रूपांतरण करने (उदाहरण के लिए, M क्वेरी से T-SQL विवरण बनाने) के लिए किया जा सकता है.</p>\r\n<p> <code>Table के अधिक पूर्ण विवरण के लिए Power Query कस्टम कनेक्टर का प्रकाशित दस्तावेज़ देखें.View</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "कोई ऐसा मूल दृश्य बनाएँ जिसे प्रकार या पंक्ति गणना निर्धारित करने के लिए पंक्तियों तक पहुँचने की आवश्यकता न हो.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "खाता और प्रोजेक्ट के नाम दर्ज करें.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps (केवल बोर्ड)",
        "Documentation.LongDescription": "Azure DevOps द्वारा प्रस्तावित विश्लेषणात्मक दृश्यों की तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Vertica से डेटा आयात करें",
        "Documentation.LongDescription": "<code>डेटाबेस</code> पैरामीटर द्वारा नामित डेटाबेस में <code>सर्वर</code>पैरामीटर द्वारा नामित सर्वर पर उपलब्ध स्कीमा की तालिका वापस करता है.\r\nअतिरिक्त गुण निर्दिष्ट करने के लिए, एक वैकल्पिक पैरामीटर, <code>विकल्प</code>, प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड्स हो सकती हैं:\r\n<ul>\r\n    <li><code>ConnectionTimeout</code>: वह अवधि, जो इस बात को नियंत्रित करती है कि सर्वर से कनेक्शन बनाने का प्रयास छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान, ड्राइवर आश्रित है. </li>\r\n    <li><code>CommandTimeout </code>: वह अवधि, जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले कितने समय तक चलने दिया जा सकता है. डिफ़ॉल्ट मान, ड्राइवर आश्रित है. </li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "Vertica में तालिकाओं को सूचीबद्ध करें"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "Webtrends से रिपोर्ट सामग्री वाली एक तालिका लौटाता है.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "दिए गए Webtrends रिपोर्टिंग समाप्ति बिंदु के लिए कॉल करता है और समस्त डेटा को एक तालिका के रूप में लौटाता है.",
        "Documentation.Examples": [
          {
            "Description": "Webtrends विज़िटर्स रिपोर्ट समाप्ति बिंदु के लिए पिछले 30 दिनों के डेटा के लिए कॉल करता है",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "विज़िटर डेटा की एक तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "समान फ़ॉरेस्ट में निर्दिष्ट डोमेन के रूप में सक्रिय निर्देशिका डोमेन की सूची लौटाता है या यदि कोई भी निर्दिष्ट नहीं की गई है तो वर्तमान मशीन के डोमेन की सूची लौटाता है.",
        "Documentation.LongDescription": "समान फ़ॉरेस्ट में निर्दिष्ट डोमेन के रूप में सक्रिय निर्देशिका डोमेन की सूची लौटाता है या यदि कोई भी निर्दिष्ट नहीं की गई है तो वर्तमान मशीन के डोमेन की सूची लौटाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "किसी ADO.NET डेटा स्रोत पर नेटिव क्वेरी चलाने का परिणाम लौटाता है.",
        "Documentation.LongDescription": "ADO.NET प्रदाता <code>providerName</code> का उपयोग करके कनेक्शन स्ट्रिंग <code>connectionString</code> के साथ <code>query</code> को चलाने का परिणाम वापस करता है. <code>connectionString</code>, गुण मान जोड़ियों का पाठ या रिकॉर्ड हो सकता है. गुण मान या तो पाठ या संख्या हो सकती हैं. हो सकता है कि अतिरिक्त गुणों को निर्दिष्ट करने के लिए वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code> प्रदान किया जाए. रिकॉर्ड में निम्न फ़ील्ड शामिल हो सकते हैं\r\n    <ul>\r\n<li><code>CommandTimeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले उसे कितनी देर तक चलाने की अनुमति दी गई है. डिफ़ॉल्ट मान दस मिनट होता है.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : एक तार्किक (सही/गलत) है जो कि यह निर्धारित करता है कि Windows प्रमाणीकरण के लिए SQL Server संगत कनेक्शन स्ट्रिंग विकल्पों को निर्मित किया जाना है या नहीं. डिफ़ॉल्ट मान सही है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "Adobe Analytics में रिपोर्ट सुइट्स लौटाता है.",
        "Documentation.LongDescription": "Adobe Analyics से बहुआयामी पैकेज की तालिका लौटाता है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : तार्किक (सही/गलत) जो कि यह निर्धारित करता है कि तालिकाओं को उनके स्कीमा नामों के आधार पर समूहीकृत रूप में देखना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n<li><code>MaxRetryCount</code> : क्वेरी के परिणाम के लिए पोलिंग करते समय पुनर्प्रयास की संख्या. डिफ़ॉल्ट मान 120 है.</li>\r\n<li><code>RetryInterval</code> : पुनर्प्रयास के बीच समय की अवधि. डिफ़ॉल्ट मान 1 सेकंड है.</li>\r\n<li><code>Implementation</code> : Adobe Analytics API संस्करण निर्दिष्ट करता है. मान्य मान हैं: &quot;2.0&quot;. डिफ़ॉल्ट API संस्करण 1.4 का उपयोग करता है.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "LLAP हाइव करें",
        "Documentation.Caption": null,
        "Documentation.Description": "किसी हाइव LLAP से डेटा आयात करें",
        "Documentation.LongDescription": "\r\nचयनित <code>प्रोटोकॉल</code> का उपयोग करके Hive LLAP <code>सर्वर</code> पर <code>डेटाबेस</code> द्वारा निर्दिष्ट Hive LLAP से तालिकाओं की सूची लौटाता है. पोर्ट संख्या सर्वर के साथ वैकल्पिक रूप से निर्दिष्ट हो सकती है, जो कोलन से विभाजित होती है. थ्रिफ़्ट ट्रांसपोर्ट प्रोटोकॉल \"मानर\", \"HTTP\" मान के साथ इन्युमरेटेड प्रकार है. निम्नलिखित विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक <code>विकल्प</code> पैरामीटर निर्दिष्ट हो सकता है:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: वह अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन बनाने का प्रयास करना छोड़ने से पहले कितने समय तक प्रतीक्षा करना है. डिफ़ॉल्ट मान ड्राइवर-आश्रित है.</li>\r\n        <li><code>CommandTimeout</code>: वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले कितने समय तक चलाए जाने की अनुमति है. डिफ़ॉल्ट मान ड्राइवर-आश्रित है.</li>\r\n</ul>\r\n<code>विकल्प</code>पैरामीटर [option1 = value1, option2 = value2...] के रूप में निर्दिष्ट है."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "आज को 2017-6-15 मानकर, 2017-5-1 से 2017-6-15 के बीच का सारांश डेटा प्राप्त करें",
            "Code": "मान लेते हैं कि\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          परिणाम = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      में\r\n          परिणाम",
            "Result": "फ़ंक्शन 2017-5-1 से 2017-6-15 के बीच का सारांश डेटा देगा"
          },
          {
            "Description": "आज को 2017-6-15 मानकर, अप्रैल 2017 का सारांश डेटा प्राप्त करें.",
            "Code": "मान लेते हैं\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          परिणाम = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n          में\r\n          परिणाम",
            "Result": "फ़ंक्शन से 2017-4-1 और 2017-4-30 के बीच का डेटा मिलेगा"
          },
          {
            "Description": "आज को 2017-6-15 मानकर, अब से लेकर अप्रैल 2017 तक का सारांश डेटा प्राप्त करें.",
            "Code": "मान लेते हैं\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"सारांश\" ],\r\n          परिणाम = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      में\r\n          परिणाम",
            "Result": "फ़ंक्शन से 2017-4-1 से 2017-6-15 के बीच का डेटा मिलेगा"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "खाता और प्रोजेक्ट के नाम दर्ज करें.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps सेवाएँ",
        "Documentation.LongDescription": "Azure DevOps द्वारा प्रस्तावित OData फ़ीड्स की तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "अपने Dataverse इंस्टैंस (Dynamics 365 और PowerApps) से कनेक्ट करें."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "निर्दिष्ट आयाम तालिका को क्यूब के फ़िल्टर संदर्भ में मर्ज करता है और आयाम विशेषताओं के निर्दिष्ट सेट को विस्तृत करके फ़िल्टर संदर्भ की आयाम ग्रैन्युलैरिटी को बदलता है.",
        "Documentation.LongDescription": "निर्दिष्ट आयाम तालिका, <code>dimensionSelector</code>, को क्यूब के, <code>cube</code>, फ़िल्टर संदर्भ में मर्ज करता है और आयाम विशेषताओं के निर्दिष्ट सेट, <code>attributeNames</code>, को विस्तृत करके फ़िल्टर संदर्भ की आयाम ग्रैन्युलैरिटी को बदलता है. यदि निर्दिष्ट नहीं किया गया होता है, तो आयाम विशेषताओं को <code>newColumnNames</code> या <code>attributeNames</code> नामित स्तंभों वाली तालिका दृश्य में जोड़ा जाता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "स्तंभ को उस क्यूब में जोड़ता है जिसमें प्रत्येक पंक्ति के पंक्ति संदर्भ में लागू माप के परिणाम होते हैं.",
        "Documentation.LongDescription": "नाम <code>column</code> वाले स्तंभ को <code>cube</code> में जोड़ता है जिसमें प्रत्येक पंक्ति के पंक्ति संदर्भ में लागू माप <code>measureSelector</code> के परिणाम होते हैं. माप अनुप्रयोग, आयाम ग्रैन्युलैरिटी और स्लाइसिंग में परिवर्तन करने से प्रभावित होता है. माप मानों को क्यूब की कुछ कार्रवाइयों को निष्पादित करने के बाद समायोजित किया जाएगा.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "अपना Dynamics 365 Business Central परिवेश और कंपनी दर्ज करें.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "प्रासंगिक Dynamics 365 Business Central डेटा वाली तालिका वापस करता है. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "अपना Dynamics 365 Business Central परिवेश और कंपनी दर्ज करें.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "प्रासंगिक Dynamics 365 Business Central डेटा वाली तालिका वापस करता है. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "अपना Dynamics 365 Business Central परिवेश और कंपनी दर्ज करें.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "प्रासंगिक Dynamics 365 Business Central डेटा वाली तालिका वापस करता है. "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "अपना Dynamics 365 Business Central परिवेश और कंपनी दर्ज करें.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "प्रासंगिक Dynamics 365 Business Central डेटा वाली तालिका वापस करता है. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "वर्तमान Excel कार्यपुस्तिका की सामग्रियों को लौटाता है.",
        "Documentation.LongDescription": "वर्तमान Excel कार्यपुस्तिका की सामग्री लौटाता है. यह तालिकाएँ, नामित श्रेणियाँ और डायनेमिक सरणियाँ लौटाता है. <code>Excel.Workbook</code> के विपरीत, यह पत्रक वापस नहीं करता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Microsoft Exchange खाते से सामग्रियों की तालिका लौटाता है.",
        "Documentation.LongDescription": "Microsoft Exchange खाते <code>mailboxAddress</code> से एक सामग्री की तालिका लौटाता है. यदि <code>mailboxAddress</code> निर्दिष्ट नहीं किया गया है, तो क्रेडेंशियल के लिए डिफ़ॉल्ट खाते का उपयोग किया जाएगा.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Warehouse",
        "Documentation.Caption": "Warehouse",
        "Documentation.Description": "Warehouse से डेटा आयात करता है",
        "Documentation.LongDescription": "Warehouse से डेटा आयात करता है"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Google Analytics खाते वापस करता है.",
        "Documentation.LongDescription": "ऐसे Google Analytics खाते वापस करता है जो वर्तमान क्रेडेंशियल से पहुँच योग्य हैं.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Google BigQuery डेटाबेस से डेटा आयात करें.",
        "Documentation.LongDescription": "\r\n      Google BigQuery में उपलब्ध प्रोजेक्ट्स को सूचीबद्ध करने वाली तालिका लौटाता है. निम्न विकल्पों को नियंत्रित करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, निर्दिष्ट किया जा सकता है:\r\n     <ul>\r\n        <li><code>ConnectionTimeout</code>: वह अवधि जो यह नियंत्रित करती है कि सर्वर से कनेक्शन करने की कोशिश छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान ODBC कनेक्शन टाइमआउट मान है.</li>\r\n        <li><code>CommandTimeout</code>: वह अवधि जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले कितनी देर तक चलाने की अनुमति है.</li>\r\n        <li><code>BillingProject</code>:  बिलिंग प्रोजेक्ट id. डिफ़ॉल्ट मान पहला उपलब्ध project.</li>\r\n <li><code>UseStorageApi</code>: निर्दिष्ट करता है कि बड़े परिणाम सेट के लिए BigQuery संग्रहण API का उपयोग करना है या नहीं. संग्रहण API का उपयोग करने के लिए डिफ़ॉल्ट मान सही है. संग्रहण API का उपयोग नहीं करने के लिए गलत पर सेट करें</li>\r\n      </ul>\r\n    रिकॉर्ड पैरामीटर को [option1 = value1, option2 = value2...] के रूप में निर्दिष्ट किया गया है.\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Google BigQuery में मौजूद प्रोजेक्‍ट्स को सूचीबद्ध करें",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "झील के पास बना घर",
        "Documentation.Caption": "किसी झील के पास बने घर से डेटा आयात करें",
        "Documentation.Description": "किसी झील के पास बने घर से डेटा आयात करें",
        "Documentation.LongDescription": "झील के पास बने उन सभी घरों से कनेक्ट करें जिन तक आपकी पहुँच है, और उन निकायों को चुनें जिनका आप उपयोग करना चाहते हैं"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "कुँजी MailChimp डेटा वाली तालिका लौटाता है.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "कुँजी MailChimp डेटा वाली तालिका लौटाता है.",
        "Documentation.Examples": [
          {
            "Description": "कुँजी MailChimp डेटा वाली तालिका लौटाता है.",
            "Code": "MailChimp.Tables()",
            "Result": "कुँजी MailChimp डेटा वाली तालिका."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "लीड गतिविधियों वाली तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>url</code>/rest/v1/activities.json पर Marketo REST API एंडपॉइंट को कॉल करता है. सूची <code>activityIds</code> में सभी गतिविधियाँ जो <code>startTime</code> के बाद उत्पन्न हुई हैं, वे लौटा दी गई हैं.",
        "Documentation.Examples": [
          {
            "Description": "1 नवंबर 2015 से \"वेबपृष्ठ पर जाएँ\" गतिविधियों की एक तालिका पुल करता है",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "1 नवंबर से सभी \"वेबपृष्ठ पर जाएँ\" गतिविधियों के विवरण वाली की एक तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "योजना दृश्य एंटरप्राइज़. क्वेरी सेवा को कॉल करें(\"https://contoso.com/planview\", \"pve\", \"select * from ip_user\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Power BI डेटा प्रवाह (लीगेसी)",
        "Documentation.Caption": "किसी Power BI डेटा प्रवाह से डेटा आयात करें",
        "Documentation.LongDescription": "अपनी पहुँच वाले सभी Power BI डेटा प्रवाहों से कनेक्ट करें और उन निकायों को चुनें, जिनका आप उपयोग करना चाहते हैं."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "डेटा मार्ट",
        "Documentation.Caption": "डेटा मार्ट",
        "Documentation.Description": "डेटा मार्ट से डेटा आयात करता है",
        "Documentation.LongDescription": "डेटा मार्ट से डेटा आयात करता है"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "डेटा प्रवाह",
        "Documentation.Caption": "किसी डेटा प्रवाह से डेटा आयात करें",
        "Documentation.Description": "किसी डेटा प्रवाह से डेटा आयात करें",
        "Documentation.LongDescription": "अपनी पहुँच वाले सभी डेटा प्रवाहों से कनेक्ट करें, और उन निकायों को चुनें, जिनका आप उपयोग करना चाहते हैं."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "QuickBooks Online से डेटा आयात करें.",
        "Documentation.LongDescription": "\r\n        QuickBooks Online में मौजूद तालिकाओं की तालिका सूची वापस करता है. एक वैकल्पिक रिकॉर्ड पैरामीटर <code>विकल्प</code> को निम्न विकल्पों को नियंत्रित करने के लिए निर्दिष्ट किया जा सकता है :\r\n          <ul>\r\n <li><code>ConnectionTimeout</code>: वह अवधि, जो इस बात को नियंत्रित करती है कि सर्वर से कनेक्शन बनाने का प्रयास करना छोड़ने से पहले कितनी देर प्रतीक्षा करनी है.</li>\r\n            <li><code>CommandTimeout</code>: वह अवधि, जो यह नियंत्रित करती है कि सर्वर-साइड क्वेरी को रद्द किए जाने से पहले कितनी अवधि के लिए चलने दिया जा सकता है.</li>\r\n          </ul>\r\n        रिकॉर्ड पैरामीटर [option1 = value1, option2 = value2...] के रूप में निर्दिष्ट किया गया है.\r\n"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "Salesforce खाते से ऑब्जेक्ट लौटाता है.",
        "Documentation.LongDescription": "क्रेडेंशियल में प्रदान किए गए Salesforce खाते पर ऑब्जेक्ट लौटाता है. खाते को प्रदान किए गए परिवेश <code>loginUrl</code> के द्वारा कनेक्ट किया जाएगा. यदि कोई परिवेश प्रदान नहीं किया जाता है, तब खाता निर्माण (https://login.salesforce.com) से कनेक्ट होगा. वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड हो सकते हैं:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : तार्किक (सही/गलत) जो यह निर्धारित करता है कि नेविगेशन गुणों को लौटाए गए मानों पर जनरेट करना है या नहीं (डिफ़ॉल्ट गलत है).</li>\r\n<li><code>ApiVersion</code> : इस क्वेरी के लिए उपयोग करने हेतु Salesforce API संस्करण. जब निर्दिष्ट नहीं किया गया हो, तो API संस्करण 29.0 उपयोग किया जाता है.</li>\r\n<li><code>Timeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर का अनुरोध छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान स्रोत-विशिष्ट है.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "Salesforce खाते से रिपोर्ट लौटाता है.",
        "Documentation.LongDescription": "क्रेडेंशियल में प्रदान किए गए Salesforce खाते पर रिपोर्ट्स लौटाता है. खाते को प्रदान किए गए परिवेश <code>loginUrl</code> के द्वारा कनेक्ट किया जाएगा. यदि कोई परिवेश प्रदान नहीं किया जाता है, तब खाता निर्माण (https://login.salesforce.com) से कनेक्ट होगा. वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड हो सकते हैं:\r\n    <ul>\r\n<li><code>ApiVersion</code> : इस क्वेरी के लिए उपयोग करने हेतु Salesforce API संस्करण. जब निर्दिष्ट नहीं किया गया हो, तो API संस्करण 29.0 उपयोग किया जाता है.</li>\r\n<li><code>Timeout</code> : वह अवधि जो यह नियंत्रित करती है कि सर्वर का अनुरोध छोड़ने से पहले कितनी देर प्रतीक्षा करनी है. डिफ़ॉल्ट मान स्रोत-विशिष्ट है.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "InfoArea द्वारा समूहीकृत SAP व्यवसाय वेयरहाउस सिस्टम में इन्फ़ोक्यूब और क्वेरी लौटायी जाती है.",
        "Documentation.LongDescription": "सिस्टम संख्या <code>systemNumberOrSystemId</code> और क्लाइंट आईडी <code>clientId</code> वाले सर्वर <code>server</code> पर SAP व्यवसाय वेयरहाउस इंस्टैंस से InfoArea द्वारा समूहीकृत InfoCubes और क्वेरी की तालिका लौटाता है. निम्न विकल्पों को नियंत्रित करने के लिए वैकल्पिक रिकॉर्ड पैरामीटर <code>optionsOrLogonGroup</code> को निर्दिष्ट किया जा सकता है:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Smartsheet API से पत्रकों, रिपोर्ट्स, फ़ोल्डर्स और कार्यस्थानों की एक तालिका लौटाता है",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Smartsheet API से उपलब्ध पत्रकों, रिपोर्ट्स, फ़ोल्डर्स और कार्यस्थानों की एक नेस्टेड तालिका लौटाता है.",
        "Documentation.Examples": [
          {
            "Description": "Smartsheet पदानुक्रम के शीर्ष स्तर पर उपलब्ध पत्रकों, रिपोर्ट्स, फ़ोल्डर्स और कार्यस्थानों की एक तालिका लौटाता है",
            "Code": "Smartsheet.Tables()",
            "Result": "Smartsheet पदानुक्रम के शीर्ष स्तर से पत्रकों, रिपोर्ट्स, फ़ोल्डर्स और कार्यस्थानों की एक तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "SparkPost API v1 से उपलब्ध मैट्रिक्स की एक तालिका लौटाता है",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "इस फ़ंक्शन का उपयोग SparkPost API v1 के विशेष \"मैट्रिक्स\" समाप्ति बिंदु से डेटा पुनर्प्राप्त करने के लिए किया जा सकता है. इन तालिकाओं को ताज़ा करते समय या इस कनेक्टर का उपयोग करके SparkPost API को कॉल करते समय, ध्यान रखें कि SparkPost API की निश्चित API दर सीमा है. यदि आपको SparkPost सर्वर से एक 429 स्थिति कोड मिलता है, तो इसका मतलब है कि आप दर सीमा तक पहुँच गए हैं और आपको अधिक कॉल करने के लिए कुछ क्षण प्रतीक्षा करनी होगी. दिन पैरामीटर की कुल संख्या के लिए किसी मान का चयन करते समय, ध्यान रखें कि API केवल 6 महीने का डेटा संग्रहीत करता है.",
        "Documentation.Examples": [
          {
            "Description": "पिछले तीन दिनों में एकीकृत किए गए सभी campaign_ids के लिए count_sent और count_rejected वितरण योग्यता मैट्रिक्स पुनर्प्राप्त करता है. ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "Stripe API को कॉल करता है.",
        "Documentation.LongDescription": "https://api.stripe.com/v1/<code>method</code> पर रिकॉर्ड <code>additionalParameters</code> के अतिरिक्त पैरामीटर के रूप में पास होने और अपेक्षित नामों की सूची <code>ColumnNames</code> के साथ Stripe API को कॉल करता है. Stripe संस्करण 2015-10-16 का उपयोग किया गया है.",
        "Documentation.Examples": [
          {
            "Description": "1 नवंबर 2015 के बाद निर्मित की गई ईवेंट वाली तालिका प्रदान करता है.",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "वर्तमान Stripe खाते के लिए निर्दिष्ट ईवेंट वाली एक तालिका"
          },
          {
            "Description": "सभी SKU वाली एक तालिका लौटाता है",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "वर्तमान Stripe खाते के लिए सभी SKU वाली एक तालिका"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "उपलब्ध Stripe तालिकाओं और प्रकार्यों को सूचीबद्ध करने वाली एक तालिका लौटाता है.",
        "Documentation.LongDescription": "उपलब्ध Stripe तालिकाओं और प्रकार्यों को सूचीबद्ध करने वाली एक तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Synapse विश्लेषण कार्यस्थान",
        "Documentation.Caption": "Azure Synapse विश्लेषण कार्यस्थान",
        "Documentation.LongDescription": "Azure Synapse विश्लेषण कार्यस्थान के लिए PQ कनेक्टर",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "निर्दिष्ट नाम का स्तंभ जोड़ता है. इनपुट के रूप में ली गई प्रत्येक पंक्ति के साथ निर्दिष्ट चयन फ़ंक्शन का उपयोग करके मान को संगणित किया जाता है.",
        "Documentation.LongDescription": "तालिका <code>table</code> में <code>newColumnName</code> नाम का स्तंभ जोड़ता है. इनपुट के रूप ली गई प्रत्येक पंक्ति के साथ निर्दिष्ट चयन फ़ंक्शन <code>columnGenerator</code> का उपयोग करके स्तंभ के लिए मान को संगणित किया जाता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका में \"TotalPrice\" नाम का एक संख्या स्तंभ जोड़ें, जिसका हर मान [Price] और [Shipping] स्तंभों का योग हो.",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "तालिका में निर्दिष्ट स्तंभ के फ़ज़ी समूहीकरण मानों द्वारा प्राप्त किए गए प्रतिनिधि मानों वाला एक नया स्तंभ जोड़ता है.",
        "Documentation.LongDescription": "<code>columnName</code> के प्रतिनिधि मानों वाले <code>table</code> में एक नया स्तंभ <code>newColumnName</code> जोड़ता है. प्रत्येक पंक्ति के लिए, <code>columnName</code> में फज़ी तौर पर मिलान मानों द्वारा प्रतिनिधियों को प्राप्त किया जाता है.\r\n    <p>कुंजी स्तंभ की तुलना करने के तरीके को निर्दिष्ट करने के लिए <code>options</code> का एक वैकल्पिक सेट शामिल किया जा सकता है. विकल्पों में शामिल हैं: \r\n    <ul>\r\n<li><code>Culture</code> : निर्दिष्ट कल्चर नियमों के आधार पर समूहीकरण वाले रिकॉर्ड्स को अनुमति देता है. यह कोई मान्य कल्चर नाम हो सकता है. उदाहरण के लिए, &quot;ja-JP&quot; का कल्चर विकल्प, जापानी संस्कृति पर आधारित रिकॉर्ड को समूहीकृत करता है. डिफ़ॉल्ट मान &quot;&quot; है, जो अपरिवर्तनीय अंग्रेज़ी कल्चर पर आधारित है.</li>\r\n<li><code>IgnoreCase</code> : एक तार्किक (सही/गलत) मान, जो केस-असंवेदी कुंजी समूहीकरण की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Grapes&quot; को &quot;grapes&quot; के साथ समूहीकृत किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>IgnoreSpace</code> : एक तार्किक (सही/गलत) मान, जो समूहों को ढूँढने के लिए पाठ भागों के संयोजन की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Gra pes&quot; को &quot;Grapes&quot; के साथ समूहीकृत किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>SimilarityColumnName</code> : उस स्तंभ का नाम, जो इनपुट मान और उस इनपुट के प्रतिनिधि मान के बीच की समानता को दर्शाता है. डिफ़ॉल्ट मान नल है, इस स्थिति में समानता के लिए एक नया स्तंभ नहीं जोड़ा जाएगा.</li>\r\n<li><code>Threshold</code> : 0.00 और 1.00 के बीच की संख्या जो समान होने का स्कोर दिखाती है जिस पर दो मान समूहीकृत किए जाएँगे.\r\n     उदाहरण के लिए, &quot;Grapes&quot; और &quot;Graes&quot; (अनुपलब्ध &quot;p&quot;) केवल तब ही समूहीकृत होते हैं जब यह विकल्प 0.90 से कम पर सेट हो.\r\n    1.00 का थ्रेशोल्ड केवल सटीक मिलान की अनुमति देता है.\r\n    (ध्यान दें कि एक फ़ज़ी &quot;सटीक मिलान&quot; आवरण, शब्द क्रम और विराम चिह्न जैसे अंतरों की उपेक्षा कर सकता है.)\r\n     डिफ़ॉल्ट मान 0.80 है.</li>\r\n<li><code>TransformationTable</code> : एक तालिका जो कस्टम मान मैपिंग के आधार पर रिकॉर्ड्स के समूहीकरण की अनुमति देती है. इसमें &quot;प्रेषक&quot; और &quot;प्रेषित&quot; स्तंभ शामिल होने चाहिए. उदाहरण के लिए, &quot;Grapes&quot; को &quot;Raisins&quot; के साथ समूहीकृत किया गया है, यदि कोई रूपांतरण तालिका &quot;प्रेषक&quot; स्तंभ वाले &quot;Grapes&quot; और &quot;प्रेषित&quot; स्तंभ वाले &quot;Raisins&quot; के साथ प्रदान की गई है. ध्यान दें कि रूपांतरण तालिका में पाठ की सभी पुनरावृत्तियों के लिए रूपांतरण लागू किया जाएगा. ऊपर दिए गए रूपांतरण तालिका के साथ, &quot;Grapes are sweet&quot; के साथ &quot;Raisins are sweet&quot; को भी समूहीकृत किया जाएगा.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "कर्मचारियों के स्थान के लिए प्रतिनिधि मान प्राप्त करें.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "प्रदत्त स्तंभों पर तालिकाओं के बीच एक जॉइन करता है और एक नए स्तंभ में जॉइन परिणाम देता है.",
        "Documentation.LongDescription": "<code>key1</code> (<code>table1</code> के लिए) और <code>key2</code> (<code>table2</code> के लिए) द्वारा चयनित कुंजी स्तंभ के मानों की गुणवत्ता पर आधारित <code>table1</code> की पंक्तियों को <code>table2</code> की पंक्तियों के साथ जॉइन करता है. परिणामों को <code>newColumnName</code> नाम के स्तंभ में दर्ज किया जाता है.\r\nयह फ़ंक्शन, LeftOuter के JoinKind के साथ Table.Join के समान व्यवहार करता है इसके अलावा जॉइन परिणामों को फ़्लैटेड की तुलना में नेस्टेड फ़ैशन में प्रस्तुत किया जाता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "[saleID] पर जॉइन की गई तालिका ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) से ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) में \"price/stock\" नाम का जॉइन स्तंभ जोड़ें.",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "दी गई तालिका के प्रकार में कुंजी जोड़ता है.",
        "Documentation.LongDescription": "<code>table</code> में कुंजी जोड़ता है जहाँ <code>columns</code> कालम नाम की सूची है जो कुंजी को परिभाषित करती है और <code>isPrimary</code> यह निर्दिष्ट करती है कि कुंजी प्राथमिक है या नहीं.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका में एकल-कालम प्राथमिक कुंजी जोड़ें.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "स्तंभ को एक या अधिक स्तंभों की रैंकिंग के साथ जोड़ता है.",
        "Documentation.LongDescription": "<code>comparisonCriteria</code>द्वारा वर्णित एक या अधिक स्तंभों की रैंकिंग के साथ <code>table</code> में <code>newColumnName</code> नाम का स्तंभ जोड़ता है.\r\n<code>options</code> में RankKind विकल्प का उपयोग उन्नत उपयोगकर्ताओं द्वारा अधिक-विशिष्ट रैंकिंग पद्धति चुनने के लिए किया जा सकता है.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "तालिका में \"RevenueRank\" नाम का एक स्तंभ जोड़ें, जो \"आय\" स्तंभ को उच्चतम से न्यूनतम की रैंक में रखता है.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "तालिकाओं के स्तंभ को तालिकाओं के एकाधिक स्तंभों में एग्रीगेट करता है.",
        "Documentation.LongDescription": "<code>table</code>[<code>column</code>] की तालिकाओं को तालिकाओं के लिए एग्रीगेट मानों वाले एकाधिक स्तंभों में एग्रीगेट करता है. <code>aggregations</code> का उपयोग उन स्तंभों को निर्दिष्ट करने के लिए किया जाता है जिनमें एग्रीगेट करने के लिए तालिकाएँ, अपने मान जनरेट करने के लिए तालिकाओं पर लागू करने के लिए एग्रीगेट फ़ंक्शन और बनाने के लिए एग्रीगेट स्तंभों का नाम होता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> में <code>[t]</code> के तालिका स्तंभों को <code>[t.a]</code> के योग, <code>[t.b]</code> के अधिकतम तथा न्यूनतम और <code>[t.a]</code> की संख्याओं की गणना को एग्रीगेट करें.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "आरंभिक ऑफ़सेट रखता है फिर निम्न पंक्तियाँ लेने और छोड़ने का विकल्प देता है.",
        "Documentation.LongDescription": "आरंभिक ऑफ़सेट रखता है फिर निम्न पंक्तियाँ लेने और छोड़ने का विकल्प देता है.\r\n    <ul>\r\n       <li><code>table</code>: इनपुट तालिका.</li>\r\n       <li><code>offset</code>: पुनरावृत्तियाँ प्रारंभ करने से पहले रखने के लिए पंक्तियों की संख्या.</li>\r\n       <li><code>skip</code>: प्रत्येक पुनरावृत्ति में निकालने के लिए पंक्तियों कि संख्या.</li>\r\n       <li><code>take</code>: प्रत्येक पुनरावृत्ति में रखने के लिए पंक्तियों कि संख्या.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "पहली पंक्ति से प्रारंभ होने वाली तालिका से एक तालिका लौटाएँ जो , 1 मान छोड़ देता है और 1 मान रखता है.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "निर्दिष्ट संयोजक फ़ंक्शन का उपयोग करके निर्दिष्ट स्तंभों को एक नए स्तंभ में संयोजित करता है.",
        "Documentation.LongDescription": "निर्दिष्ट संयोजक फ़ंक्शन का उपयोग करके निर्दिष्ट स्तंभों को एक नए स्तंभ में संयोजित करता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "नए कालम में अंतिम और पहला नाम को अल्पविराम से पृथक करके संयोजित करें.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "निर्दिष्ट स्तंभों को एक नए रिकॉर्ड-मान वाले स्तंभ में संयोजित करता है जहाँ प्रत्येक रिकॉर्ड में उन स्तंभ नामों और मानों के आधार पर स्तंभ नाम और मान हैं, जिन्हें संयोजित किया गया था.",
        "Documentation.LongDescription": "<code>table</code> के निर्दिष्ट स्तंभों को <code>newColumnName</code> नाम वाले नए रिकॉर्ड-मान वाले स्तंभ में संयोजित करता है, जहाँ प्रत्येक रिकॉर्ड में स्तंभ नाम और संयोजित किए गए स्तंभों के मानों से संबंधित फ़ील्ड नाम और मान हैं. यदि कोई रिकॉर्ड <code>options</code> के लिए निर्दिष्ट किया गया है, तो निम्न विकल्प प्रदान किए जा सकते हैं: :\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: पाठ के रूप में निर्दिष्ट किए जाने पर, यह इंगित करता है कि दिए गए स्तंभ नाम को रिकॉर्ड के डिस्प्ले नाम के रूप में माना जाना चाहिए. यह आवश्यक है कि रिकॉर्ड में मौजूद स्तंभों में से एक न हो. </li>\r\n     <li> <code>TypeName</code>: पाठ के रूप में निर्दिष्ट किए जाने पर, परिणामी रिकॉर्ड के लिए एक लॉजिकल प्रकार नाम की आपूर्ति करता है, जिसका उपयोग लोडिंग वातावरण द्वारा व्यवहार को ड्राइव करने के लिए डेटा लोड में किया जा सकता है.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "निर्दिष्ट नाम के स्तंभ का डुप्लिकेट बनाता है. मान और प्रकार की स्रोत स्तंभ से प्रतिलिपि बना ली जाती है.",
        "Documentation.LongDescription": "तालिका <code>table</code> में <code>columnName</code> नाम के स्तंभ का डुप्लिकेट बनाएँ. स्तंभ <code>newColumnName</code> के लिए मान और प्रकार की स्तंभ <code>columnName</code> से प्रतिलिपि बना ली जाती है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> में स्तंभ \"a\" को \"copied column\" नाम के स्तंभ में डुप्लिकेट करें.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "स्तंभों में मौजूद रिकॉर्ड के स्तंभ को प्रत्येक मान के साथ विस्तृत करता है.",
        "Documentation.LongDescription": "इनपुट <code>table</code> में रिकॉर्ड का दिया गया <code>column</code>, रिकॉर्ड की प्रत्येक फ़ील्ड के लिए स्तंभ वाली तालिका बनाता है. वैकल्पिक रूप से, नई तालिका में स्तंभों के लिए अद्वितीय नाम सुनिश्चित करने के लिए <code>newColumnNames</code> को निर्दिष्ट किया जा सकता है.\r\n    <ul>\r\n        <li><code>table</code>: विस्तृत किए जाने वाले रिकॉर्ड स्तंभ वाली मूल तालिका. </li>\r\n        <li><code>column</code>: विस्तृत किया जाने वाला स्तंभ.</li>\r\n        <li><code>fieldNames</code>: तालिका में मौजूद स्तंभों में विस्तृत की जाने वाली फ़ील्ड की सूची.</li>\r\n        <li><code>newColumnNames</code>: नए स्तंभ देने के लिए स्तंभ नामों की सूची. नए स्तंभ नाम, नई तालिका में किसी भी स्तंभ का डुप्लिकेट नहीं बना सकते.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> के स्तंभ [a] को 3 स्तंभों \"aa\", \"bb\" और \"cc\" में विस्तृत करें.",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "तालिकाओं के स्तंभ को तालिकाओं के एकाधिक स्तंभों में एग्रीगेट करता है.",
        "Documentation.LongDescription": "<code>table</code>[<code>column</code>] की तालिकाओं को एकाधिक पंक्तियों और स्तंभों में विभाजित करता है. आंतरिक तालिका से विस्तृत करने के लिए स्तंभों का चयन करने हेतु <code>columnNames</code> का उपयोग किया जाता है. मौजूदा स्तंभों और नए स्तंभों के बीच विरोध से बचने के लिए <code>newColumnNames</code> निर्दिष्ट करें.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> में मौजूद <code>[a]</code> के तालिका स्तंभों को 3 स्तंभों <code>[t.a]</code>, <code>[t.b]</code> और <code>[t.c]</code> में विस्तृत करें.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "कुंजियों के फ़ज़ी मिलान पर आधारित तालिका में पंक्तियों को समूहीकृत करता है.",
        "Documentation.LongDescription": "प्रत्येक पंक्ति के लिए निर्दिष्ट स्तंभ, <code>key</code>, में फज़ी तौर पर मिलान मानों द्वारा <code>table</code> की पंक्तियों को समूहीकृत करता है.\r\n    प्रत्येक समूह के लिए एक ऐसे रिकॉर्ड का निर्माण किया जाता है, जिसमें <code>aggregatedColumns</code> द्वारा निर्दिष्ट किए गए किसी भी एकीकृत स्तंभ के साथ कुंजी स्तंभ (और उनके मान) शामिल होते हैं.\r\n    यह फ़ंक्शन पंक्तियों के निश्चित क्रम को लौटाने की गारंटी नहीं दे सकता.\r\n    <p>कुंजी स्तंभ की तुलना करने के तरीके को निर्दिष्ट करने के लिए <code>options</code> का एक वैकल्पिक सेट शामिल किया जा सकता है. विकल्पों में शामिल हैं:\r\n    <ul>\r\n<li><code>Culture</code> : निर्दिष्ट कल्चर नियमों के आधार पर समूहीकरण वाले रिकॉर्ड्स को अनुमति देता है. यह कोई मान्य कल्चर नाम हो सकता है. उदाहरण के लिए, &quot;ja-JP&quot; का कल्चर विकल्प, जापानी संस्कृति पर आधारित रिकॉर्ड को समूहीकृत करता है. डिफ़ॉल्ट मान &quot;&quot; है, जो अपरिवर्तनीय अंग्रेज़ी कल्चर पर आधारित है.</li>\r\n<li><code>IgnoreCase</code> : एक तार्किक (सही/गलत) मान, जो केस-असंवेदी कुंजी समूहीकरण की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Grapes&quot; को &quot;grapes&quot; के साथ समूहीकृत किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>IgnoreSpace</code> : एक तार्किक (सही/गलत) मान, जो समूहों को ढूँढने के लिए पाठ भागों के संयोजन की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Gra pes&quot; को &quot;Grapes&quot; के साथ समूहीकृत किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>SimilarityColumnName</code> : उस स्तंभ का नाम, जो इनपुट मान और उस इनपुट के प्रतिनिधि मान के बीच की समानता को दर्शाता है. डिफ़ॉल्ट मान नल है, इस स्थिति में समानता के लिए एक नया स्तंभ नहीं जोड़ा जाएगा.</li>\r\n<li><code>Threshold</code> : 0.00 और 1.00 के बीच की संख्या जो समान होने का स्कोर दिखाती है जिस पर दो मान समूहीकृत किए जाएँगे.\r\n     उदाहरण के लिए, &quot;Grapes&quot; और &quot;Graes&quot; (अनुपलब्ध &quot;p&quot;) केवल तब ही समूहीकृत होते हैं जब यह विकल्प 0.90 से कम पर सेट हो.\r\n    1.00 का थ्रेशोल्ड केवल सटीक मिलान की अनुमति देता है.\r\n    (ध्यान दें कि एक फ़ज़ी &quot;सटीक मिलान&quot; आवरण, शब्द क्रम और विराम चिह्न जैसे अंतरों की उपेक्षा कर सकता है.)\r\n     डिफ़ॉल्ट मान 0.80 है.</li>\r\n<li><code>TransformationTable</code> : एक तालिका जो कस्टम मान मैपिंग के आधार पर रिकॉर्ड्स के समूहीकरण की अनुमति देती है. इसमें &quot;प्रेषक&quot; और &quot;प्रेषित&quot; स्तंभ शामिल होने चाहिए. उदाहरण के लिए, &quot;Grapes&quot; को &quot;Raisins&quot; के साथ समूहीकृत किया गया है, यदि कोई रूपांतरण तालिका &quot;प्रेषक&quot; स्तंभ वाले &quot;Grapes&quot; और &quot;प्रेषित&quot; स्तंभ वाले &quot;Raisins&quot; के साथ प्रदान की गई है. ध्यान दें कि रूपांतरण तालिका में पाठ की सभी पुनरावृत्तियों के लिए रूपांतरण लागू किया जाएगा. ऊपर दिए गए रूपांतरण तालिका के साथ, &quot;Grapes are sweet&quot; के साथ &quot;Raisins are sweet&quot; को भी समूहीकृत किया जाएगा.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "किसी एकीकृत स्तंभ [संख्या] जोड़कर तालिका को समूहीकृत करें, जिसमें प्रत्येक स्थान (\"each Table.RowCount(_))\") में कर्मचारियों की संख्या शामिल हों.",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "प्रदत्त कुंजियों के आधार पर फ़ज़ी मिलान वाली दो तालिकाओं की पंक्तियों को शामिल करता है.",
        "Documentation.LongDescription": "<p>(<code>table1</code> के लिए) <code>key1</code> और (<code>table2</code> के लिए) <code>key2</code> द्वारा चुने गए कुंजी स्तंभों के मानों के फ़ज़ी मिलान के आधार पर <code>table1</code> की पंक्तियों को <code>table2</code> की पंक्तियों के साथ जोड़ता है.</p>\r\n<p>फ़ज़ी मिलान पाठ की समरूपता के बजाय पाठ की समानता के आधार पर की जाने वाली एक तुलना है.</p>\r\n<p>डिफ़ॉल्ट रूप से एक आंतरिक जोड़ निष्पादित किया जाता है, हालाँकि जोड़ का प्रकार निर्दिष्ट करने के लिए एक वैकल्पिक <code>joinKind</code> को शामिल किया जा सकता है. विकल्पों में शामिल हैं:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>कुंजी स्तंभों की तुलना के तरीकों को निर्दिष्ट करने के लिए <code>joinOptions</code> का एक वैकल्पिक सेट शामिल किया जा सकता है. विकल्पों में शामिल हैं:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : 1 और 8 के बीच एक संख्या जो समानांतर थ्रेड्स की संख्या को फ़ज़ी मिलान के लिए उपयोग करने के लिए निर्दिष्ट करती है. डिफ़ॉल्ट मान 1 है.</li>\r\n<li><code>Culture</code> : निर्दिष्ट कल्चर नियमों के आधार पर मिलान वाले रिकॉर्ड्स की अनुमति देता है. यह कोई मान्य कल्चर नाम हो सकता है. उदाहरण के लिए, &quot;ja-JP&quot; का कल्चर विकल्प, जापानी संस्कृति पर आधारित रिकॉर्ड से मेल खाता है. डिफ़ॉल्ट मान &quot;&quot; है, जो अपरिवर्तनीय अंग्रेज़ी कल्चर के आधार पर मेल खाता है.</li>\r\n<li><code>IgnoreCase</code> : एक तार्किक (सही/गलत) मान, जो केस-असंवेदी कुंजी मिलान की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Grapes&quot; का मिलान &quot;grapes&quot; के साथ किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>IgnoreSpace</code> : एक तार्किक (सही/गलत) मान, जो मेल ढूँढने के लिए पाठ भागों के संयोजन की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Gra pes&quot; का मिलान &quot;Grapes&quot; के साथ किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>NumberOfMatches</code> : एक पूर्णांक उस मेल खाने वाली पंक्तियों की अधिकतम संख्या को निर्दिष्ट करती है, जो लौटाई जा सकती हैं. उदाहरण के लिए, 1 का मान प्रत्येक इनपुट पंक्ति के लिए ज़्यादा से ज़्यादा एक मेल खाने वाली पंक्ति लौटाएगा. यदि यह विकल्प प्रदान नहीं किया जाता है, तो सभी मेल खाने वाली पंक्तियाँ लौट आती हैं.</li>\r\n<li><code>SimilarityColumnName</code> : उस स्तंभ का नाम, जो इनपुट मान और उस इनपुट के प्रतिनिधि मान के बीच की समानता को दर्शाता है. डिफ़ॉल्ट मान नल है, इस स्थिति में समानता के लिए एक नया स्तंभ नहीं जोड़ा जाएगा.</li>\r\n<li><code>Threshold</code> : 0.00 और 1.00 के बीच की संख्या जो समान होने के स्कोर को दिखाती है जिस पर दो मानों का मिलान किया जाएगा.\r\n    उदाहरण के लिए, &quot;Grapes&quot; और &quot;Graes&quot; (अनुपलब्ध &quot;p&quot;) केवल तभी मेल खाते हैं जब यह विकल्प 0.90 से कम पर सेट हो.\r\n   1.00 का थ्रेशोल्ड केवल सटीक मिलान की अनुमति देता है.\r\n    (ध्यान दें कि एक फ़ज़ी &quot;सटीक मिलान&quot; आवरण, शब्द क्रम और विराम चिह्न जैसे अंतरों की उपेक्षा कर सकता है.)\r\n     डिफ़ॉल्ट मान 0.80 है.</li>\r\n<li><code>TransformationTable</code> : एक तालिका जो कस्टम मान मैपिंग के आधार पर रिकॉर्ड्स के मिलान की अनुमति देती है. इसमें &quot;प्रेषक&quot; और &quot;प्रेषित&quot; स्तंभ शामिल होने चाहिए. उदाहरण के लिए, &quot;Grapes&quot; को &quot;Raisins&quot; के साथ समूहीकृत किया गया है, यदि कोई रूपांतरण तालिका &quot;प्रेषक&quot; स्तंभ वाले &quot;Grapes&quot; और &quot;प्रेषित&quot; स्तंभ वाले &quot;Raisins&quot; के साथ प्रदान की गई है. ध्यान दें कि रूपांतरण तालिका में पाठ की सभी पुनरावृत्तियों के लिए रूपांतरण लागू किया जाएगा. ऊपर दिए गए रूपांतरण तालिका के साथ, &quot;Grapes are sweet&quot; के साथ &quot;Raisins are sweet&quot; को भी समूहीकृत किया जाएगा.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "[FirstName] पर आधारित दो तालिकाओं का बायां इनर फ़ज़ी जॉइन",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "प्रदत्त स्तंभों पर तालिकाओं के बीच एक फ़ज़ी जॉइन निष्पादित करता है और एक नए स्तंभ में जॉइन परिणाम निर्मित करता है.",
        "Documentation.LongDescription": "<p><code>key1</code> (<code>table1</code> के लिए) और <code>key2</code> (<code>table2</code> के लिए) द्वारा चुने गए कुंजी स्तंभों के मानों के फ़ज़ी मिलान के आधार पर <code>table1</code> की पंक्तियों को <code>table2</code> की पंक्तियों के साथ जोड़ता है. <code>newColumnName</code> नामक एक नए स्तंभ में परिणाम लौट आते हैं.</p>\r\n<p>फ़ज़ी मिलान पाठ की समरूपता के बजाय पाठ की समानता के आधार पर की जाने वाली एक तुलना है.</p>\r\n<p>वैकल्पिक <code>joinKind</code> निर्दिष्ट करता है कि किस प्रकार का जॉइन निष्पादित होना है. यदि <code>joinKind</code> निर्दिष्ट नहीं है, तो डिफ़ॉल्ट रूप से बायाँ आउटर जॉइन निष्पादित किया जाता है. विकल्पों में शामिल हैं:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p><code>joinOptions</code> का एक वैकल्पिक सेट यह निर्दिष्ट करने के लिए शामिल किया जा सकता है कि कुंजी स्तंभों की तुलना कैसे करें. विकल्पों में शामिल हैं:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : 1 और 8 के बीच एक संख्या जो समानांतर थ्रेड्स की संख्या को फ़ज़ी मिलान के लिए उपयोग करने के लिए निर्दिष्ट करती है. डिफ़ॉल्ट मान 1 है.</li>\r\n<li><code>Culture</code> : निर्दिष्ट कल्चर नियमों के आधार पर मिलान वाले रिकॉर्ड्स की अनुमति देता है. यह कोई मान्य कल्चर नाम हो सकता है. उदाहरण के लिए, &quot;ja-JP&quot; का कल्चर विकल्प, जापानी संस्कृति पर आधारित रिकॉर्ड से मेल खाता है. डिफ़ॉल्ट मान &quot;&quot; है, जो अपरिवर्तनीय अंग्रेज़ी कल्चर के आधार पर मेल खाता है.</li>\r\n<li><code>IgnoreCase</code> : एक तार्किक (सही/गलत) मान, जो केस-असंवेदी कुंजी मिलान की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Grapes&quot; का मिलान &quot;grapes&quot; के साथ किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>IgnoreSpace</code> : एक तार्किक (सही/गलत) मान, जो मेल ढूँढने के लिए पाठ भागों के संयोजन की अनुमति देता है. उदाहरण के लिए, जब सही होता है, तो &quot;Gra pes&quot; का मिलान &quot;Grapes&quot; के साथ किया जाता है. डिफ़ॉल्ट मान सही होता है.</li>\r\n<li><code>NumberOfMatches</code> : एक पूर्णांक उस मेल खाने वाली पंक्तियों की अधिकतम संख्या को निर्दिष्ट करती है, जो लौटाई जा सकती हैं. उदाहरण के लिए, 1 का मान प्रत्येक इनपुट पंक्ति के लिए ज़्यादा से ज़्यादा एक मेल खाने वाली पंक्ति लौटाएगा. यदि यह विकल्प प्रदान नहीं किया जाता है, तो सभी मेल खाने वाली पंक्तियाँ लौट आती हैं.</li>\r\n<li><code>SimilarityColumnName</code> : उस स्तंभ का नाम, जो इनपुट मान और उस इनपुट के प्रतिनिधि मान के बीच की समानता को दर्शाता है. डिफ़ॉल्ट मान नल है, इस स्थिति में समानता के लिए एक नया स्तंभ नहीं जोड़ा जाएगा.</li>\r\n<li><code>Threshold</code> : 0.00 और 1.00 के बीच की संख्या जो समान होने के स्कोर को दिखाती है जिस पर दो मानों का मिलान किया जाएगा.\r\n    उदाहरण के लिए, &quot;Grapes&quot; और &quot;Graes&quot; (अनुपलब्ध &quot;p&quot;) केवल तभी मेल खाते हैं जब यह विकल्प 0.90 से कम पर सेट हो.\r\n   1.00 का थ्रेशोल्ड केवल सटीक मिलान की अनुमति देता है.\r\n    (ध्यान दें कि एक फ़ज़ी &quot;सटीक मिलान&quot; आवरण, शब्द क्रम और विराम चिह्न जैसे अंतरों की उपेक्षा कर सकता है.)\r\n     डिफ़ॉल्ट मान 0.80 है.</li>\r\n<li><code>TransformationTable</code> : एक तालिका जो कस्टम मान मैपिंग के आधार पर रिकॉर्ड्स के मिलान की अनुमति देती है. इसमें &quot;प्रेषक&quot; और &quot;प्रेषित&quot; स्तंभ शामिल होने चाहिए. उदाहरण के लिए, &quot;Grapes&quot; को &quot;Raisins&quot; के साथ समूहीकृत किया गया है, यदि कोई रूपांतरण तालिका &quot;प्रेषक&quot; स्तंभ वाले &quot;Grapes&quot; और &quot;प्रेषित&quot; स्तंभ वाले &quot;Raisins&quot; के साथ प्रदान की गई है. ध्यान दें कि रूपांतरण तालिका में पाठ की सभी पुनरावृत्तियों के लिए रूपांतरण लागू किया जाएगा. ऊपर दिए गए रूपांतरण तालिका के साथ, &quot;Grapes are sweet&quot; के साथ &quot;Raisins are sweet&quot; को भी समूहीकृत किया जाएगा.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "[FirstName] पर आधारित दो तालिकाओं का बायां इनर फ़ज़ी जॉइन",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "तालिका की उन पंक्तियों को समूहीकृत करता है जिनमें समान कुंजी होती है.",
        "Documentation.LongDescription": "<code>table</code> की पंक्तियों का समूहीकरण <code>key</code> द्वारा परिभाषित कुंजी स्‍तंभों के अनुसार करता है. <code>key</code> या तो एकल स्तंभ नाम या स्तंभ नामों की सूची हो सकता है.\r\n    प्रत्येक समूह के लिए, कुंजी स्तंभ (और उनके मान) वाला रिकॉर्ड बनाया जाता है, इसमें <code>aggregatedColumns</code> द्वारा निर्दिष्ट कोई भी एकीकृत स्तंभ शामिल हो सकते हैं.\r\n    वैकल्पिक रूप से, <code>groupKind</code> और <code>comparer</code> भी निर्दिष्ट हो सकते हैं.<br>\r\n    <br>\r\n    यदि डेटा पहले से ही कुंजी स्तंभ के अनुसार सॉर्ट किया हुआ है, तो, GroupKind.Local का <code>groupKind</code> प्रदान किया जा सकता है. इससे कुछ केस में समूहीकरण के प्रदर्शन में सुधार हो सकता है,\r\n    क्योंकि कुंजी मान में दिए गए सेट वाली सभी पंक्तियों को क्रमिक माना जाता है.<br>\r\n    <br>\r\n    <code>comparer</code> पास करते समय, ध्यान रखें कि यदि वह भिन्न कुंजियों को बराबर मानता है, तो एक पंक्ति को उस समूह में रखा जा सकता है जिनकी कुंजियाँ उसके स्वंय से भिन्न होती हैं.<br>\r\n    <br>\r\n    यह फ़ंक्शन उन पंक्तियों को क्रम से रखने की गारंटी नहीं देता है जिन्हें वह वापस करता है.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "एक ऐसा एकीकरण स्तंभ [total] जोड़कर तालिका समूहीकृत करें जिसमें मूल्यों का योग (\"each List.Sum([price])\") हो.",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "निर्दिष्ट स्थिति पर तालिका में पंक्तियों की एक सूची सम्मिलित करें.",
        "Documentation.LongDescription": "दी गई स्थिति, <code>offset</code> पर <code>table</code> में सम्मिलित पंक्तियों, <code>rows</code>, की सूची वाली एक तालिका लौटाता है. सम्मिलित करने के लिए पंक्ति के प्रत्येक स्तंभ को तालिका के स्तंभ प्रकारों से मेल खाना चाहिए.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "स्थिति 1 पर तालिका में पंक्ति सम्मिलित करें.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "स्थिति 1 पर तालिका में दो पंक्तियाँ सम्मिलित करें.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "दी गई कुंजियों के आधार पर मेल खाने वाली दो तालिकाओं की पंक्तियों को जॉइन करता है.",
        "Documentation.LongDescription": "<p><code>key1</code>(<code>table1</code> के लिए) और <code>key2</code>(<code>table2</code> के लिए) द्वारा चयनित कुंजी कॉलम के मानों की समानता के आधार पर <code>table1</code> की पंक्तियों को <code>table2</code>की पंक्तियों के साथ जोड़ता है. </p>\r\n<p>डिफ़ॉल्ट रूप से, एक आंतरिक जुड़ाव किया जाता है, हालांकि जुड़ाव के प्रकार को निर्दिष्ट करने के लिए एक वैकल्पिक<code>joinKind</code> शामिल किया जा सकता है. विकल्पों में शामिल हैं: \r\n     <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n \r\n</p>\r\n<p>कुंजी कॉलम की तुलना करने का तरीका निर्दिष्ट करने के लिए <code>keyEqualityComparers</code> का एक वैकल्पिक सेट शामिल किया जा सकता है. यह पैरामीटर वर्तमान में केवल आंतरिक उपयोग के लिए है. </p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "एकल कुंजी स्‍तंभ का उपयोग करके दो तालिकाओं को जोड़ें.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "एक से ज्यादा कुंजी कॉलम का उपयोग करके, दो तालिकाओं को जोड़ें जिनमें परस्पर विरोधी नाम वाले कॉलम हैं.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "दिए गए मापदंड का उपयोग करके सबसे बड़ी पंक्ति(याँ) लौटाता है.",
        "Documentation.LongDescription": "दिए गए <code>comparisonCriteria</code> का उपयोग करके, <code>table</code> में सबसे बड़ी पंक्ति(पंक्तियाँ) लौटाता है.\r\n    पंक्तियों को सॉर्ट करने के बाद परिणाम को आगे फ़िल्टर करने के लिए <code>countOrCondition</code> पैरामीटर निर्दिष्ट किया जाना चाहिए. ध्यान दें लघुगणक को सॉर्ट करना सॉर्ट किए गए नियत परिणाम की गारंटी नहीं दे सकता है. पैरामीटर <code>countOrCondition</code> एकाधिक स्वरूप ले सकता है:\r\n    <ul>\r\n        <li> यदि कोई संख्या निर्दिष्ट है, तो <code>countOrCondition</code> आइटम्स तक की सूची आरोही क्रम में लौटाई जाती है. </li>\r\n        <li> यदि कोई शर्त निर्दिष्ट है, तो प्रारंभिक रूप से शर्त को पूरा करने वाले आइटम्स की सूची को लौटाई जाती है. एक बार आइटम द्वारा शर्त को पूरा न करने पर आगे किसी भी आइटम पर विचार नहीं किया जाता है. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "तालिका में वह पंक्ति ढूँढें जिसके स्तंभ [a] में स्थिति [a] > 0 वाला सबसे बड़ा मान है. फ़िल्टर लागू करने से पहले पंक्तियाँ सॉर्ट की गई हैं.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "तालिका की वह पंक्ति ढूँढें जिसके स्तंभ [a] में स्थिति [b] > 0 वाला सबसे बड़ा मान है. फ़िल्टर लागू करने से पहले पंक्तियाँ सॉर्ट की गई हैं.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "दिए गए मापदंड का उपयोग करके सबसे छोटी पंक्ति(याँ) लौटाता है.",
        "Documentation.LongDescription": "दिए गए <code>comparisonCriteria</code> का उपयोग करके, <code>table</code> की सबसे छोटी पंक्तियाँ लौटाता है. पंक्तियों को सॉर्ट करने के बाद, परिणाम को आगे फ़िल्टर करने के लिए <code>countOrCondition</code> पैरामीटर निर्दिष्ट किया जाना चाहिए. ध्यान दें एल्गोरिथ्म को सॉर्ट करना सॉर्ट किए गए नियत परिणाम की गारंटी नहीं देता. <code>countOrCondition</code> पैरामीटर एकाधिक फ़ॉर्म ले सकता है:\r\n    <ul>\r\n        <li> यदि कोई संख्या निर्दिष्ट है, तो <code>countOrCondition</code> आइटम्स तक की सूची आरोही क्रम में लौटाई जाती है. </li>\r\n        <li> यदि कोई शर्त निर्दिष्ट है, तो प्रारंभिक रूप से शर्त को पूरा करने वाले आइटमों की सूची को लौटाया जाता है. एकबार आइटम द्वारा शर्त को पूरा न करने पर, आगे किसी भी आइटम पर विचार नहीं किया जाता है. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "तालिका की वह पंक्ति ढूँढें जिसके स्तंभ [a] में स्थिति [a] < 3 वाला सबसे छोटा मान है. फ़िल्टर लागू करने से पहले पंक्तियाँ सॉर्ट की गई हैं.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "तालिका की वह पंक्ति ढूँढें जिसके स्तंभ [a] में स्थिति [b] < 0 वाला सबसे छोटा मान है. फ़िल्टर लागू करने से पहले पंक्तियाँ सॉर्ट की गई हैं.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "प्रदत्त स्तंभों पर तालिकाओं के बीच एक जॉइन करता है और एक नए स्तंभ में जॉइन परिणाम देता है.",
        "Documentation.LongDescription": "<p><code>key1</code> (<code>table1</code> के लिए)और <code>key2</code> (<code>table2</code> के लिए) द्वारा चयनित कुँजी स्तंभों के मानों की गुणवत्ता के आधार पर <code>table1</code> की पंक्तियों और <code>table2</code> की पंक्तियों को जॉइन करता है. परिणामों को <code>newColumnName</code> नाम वाले स्तंभ में दर्ज किया जाता है.</p>\r\n<p>वैकल्पिक <code>joinKind</code> निष्पादित किए जाने वाले जॉइन के प्रकार को निर्दिष्ट करता है. डिफ़ॉल्ट रूप से, यदि <code>joinKind</code> निर्दिष्ट नहीं किया जाता है, तो दायाँ बाह्य जॉइन निष्पादित किया जाता है.</p>\r\n<p>कुंजी स्तंभों की तुलना करने के तरीकों को निर्दिष्ट करने के लिए <code>keyEqualityComparers</code> का एक वैकल्पिक सेट भी शामिल किया जा सकता है.</p> ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "एकल कुंजी स्‍तंभ का उपयोग करके दो तालिकाओं को जोड़ें.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "विशेषता-मान युग्मों का प्रतिनिधित्व कर रहे स्तंभों का दिया गया युग्म, विशेषता स्तंभ के डेटा को स्तंभ शीर्षकों में घुमाता है.",
        "Documentation.LongDescription": "विशेषता-मान युग्मों का प्रतिनिधित्व कर रहे स्तंभों का दिया गया युग्म, विशेषता स्तंभ के डेटा को स्तंभ शीर्षकों में घुमाता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> के विशेषता स्तंभ में \"a\", \"b\" और \"c\" मानों को ले जाएँ और उन्हें उनके अपने स्तंभ में पिवट करें.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "तालिका <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> के विशेषता स्तंभ में \"a\", \"b\" और \"c\" मानों को ले जाएँ और उन्हें उनके अपने स्तंभ में पिवट करें.  कुंजी \"x\" के लिए विशेषता \"c\" में उससे संबद्ध एकाधिक मान हैं, इसलिए विरोध को हल करने के लिए फ़ंक्शन List.Max का उपयोग करें.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "पंक्तियों की निर्दिष्ट श्रेणी को प्रदान की गई पंक्ति(यों) से बदलता है.",
        "Documentation.LongDescription": "<code>offset</code> के बाद प्रारंभ होने वाले निर्दिष्ट <code>rows</code> के साथ इनपुट <code>table</code> में पंक्तियों, <code>count</code>, की निर्दिष्ट संख्या बदलता है. <code>rows</code> पैरामीटर रिकॉर्ड्स की एक सूची है.\r\n    <ul>\r\n       <li><code>table</code>: तालिका जहाँ पर प्रतिस्थापना निष्पादित की जाती है.</li>\r\n       <li><code>offset</code>: प्रतिस्थापना करने से पहले छोड़ी जाने वाली पंक्तियों की संख्या.</li>\r\n       <li><code>count</code>: बदली जाने वाली पंक्तियों की संख्या.</li>\r\n       <li><code>rows</code>: <code>offset</code> द्वारा निर्दिष्ट किए गए स्थान पर <code>table</code> में सम्मिलित की जाने वाली पंक्ति रिकॉर्ड्स की सूची.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "स्थिति 1 से प्रारंभ करते हुए, 3 पंक्तियों को बदलें.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "निर्दिष्ट स्तंभों में एक मान को दूसरे से बदलता है.",
        "Documentation.LongDescription": "<code>table</code> के निर्दिष्ट स्तंभों में <code>oldValue</code> को <code>newValue</code> से बदलता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "स्तंभ B में पाठ \"गुडबाय\" को \"world\" से बदलें, जो केवल संपूर्ण मान से मेल खाता है.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "मान के किसी भी भाग से मेल खाते हुए, स्तंभ B में पाठ \"ur\" को \"or\" से बदलें.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "अमेरिकी कर्मचारियों के नाम अनामीकृत करें.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "अमेरिकी कर्मचारियों के सभी स्तंभों को अनामीकृत करें.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "निर्दिष्ट विभाजक फ़ंक्शन का उपयोग करके निर्दिष्ट स्तंभों को अतिरिक्त स्तंभों के सेट में विभाजित करता है.",
        "Documentation.LongDescription": "निर्दिष्ट विभाजक फ़ंक्शन का उपयोग करके निर्दिष्ट स्तंभों को अतिरिक्त स्तंभों के सेट में विभाजित करता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "[Name] स्तंभ को दो स्तंभों में \"i\" की स्थिति पर विभाजित करें",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "तालिका में स्तंभों के सेट को विशेषता-मान युग्मों में परिवर्तित करता है.",
        "Documentation.LongDescription": "तालिका में स्तंभों के सेट को प्रत्येक पंक्ति में शेष मानों के साथ संयजित किए गए विशेषता-मान युग्मों में परिवर्तित करता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "स्तंभ \"a\", \"b\" और \"c\" को तालिका <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> में ले जाएँ और उन्हें विशेषता-मान युग्मों में अनपिवट करें.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "एक निर्दिष्ट सेट के अलावा अन्य सभी स्तंभों का विशेषता-मान जोड़े में अनुवाद करता है.",
        "Documentation.LongDescription": "प्रत्येक पंक्ति में मौजूद शेष मानों के साथ संयोजित, विशेषता-मान युग्मों में निर्दिष्ट सेट के अलावा अन्य सभी स्तंभों का अनुवाद करता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "प्रत्येक पंक्ति में मौजूद शेष मानों के साथ संयोजित, विशेषता-मान युग्मों में निर्दिष्ट सेट के अलावा अन्य सभी स्तंभों का अनुवाद करता है.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Teams व्यक्तिगत विश्लेषण",
        "Documentation.LongDescription": "<p>Teams Analytics कनेक्टर आपको अपनी Teams के उपयोग के बारे में इनसाइट्स प्राप्त करने में सक्षम बनाता है. Teams में आपकी व्यक्तिगत गतिविधि और साथ ही Teams की उस गतिविधि के लिए डेटा उपलब्ध है, जिसके आप एक सदस्य हैं.</p>\r\n<p>डेटा पहले 90 दिनों के लिए उपलब्ध है. </p>\r\n<p> उपलब्ध डेटा के प्रकारों के विवरण के लिए, कृपया निम्नलिखित सहायता दस्तावेज़ीकरण देखें: </p>\r\n<ul>\r\n<li><b>Teams उपयोग: </b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Teams उपयोगकर्ता गतिविधि:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "खाता और प्रोजेक्ट के नाम दर्ज करें.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps सेवाएँ",
        "Documentation.LongDescription": "Azure DevOps द्वारा प्रस्तावित OData फ़ीड्स की तालिका लौटाता है."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "बाइनरी मान को पढ़ने वाले बाइनरी स्वरूप को लौटाता है.",
        "Documentation.LongDescription": "बाइनरी मान को पढ़ने वाले बाइनरी फ़ॉर्मैट को लौटाता है.  यदि <code>length</code> निर्दिष्ट किया गया है, तो बाइनरी मान में उतने अधिक बाइट्स होंगे.  यदि <code>length</code> निर्दिष्ट नहीं किया गया है, तो बाइनरी मान में शेष बाइट्स होंगे.  <code>length</code> को या तो संख्या के रूप में निर्दिष्ट किया जा सकता है या उस लंबाई के बाइनरी फ़ॉर्मैट में निर्दिष्ट किया जा सकता है, जो बाइनरी डेटा से पहले होती है.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "दिए गए दो मानों पर समानता जाँच के आधार पर तार्किक मान लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>comparer</code> का उपयोग करके दिए गए दो मान, <code>x</code> और <code>y</code> पर समानता जाँच पर आधारित <code>logical</code> मान लौटाता है.\r      \n      <div>\r\n        <code>comparer</code> <code>तुलनाकर्ता</code> है जिसका तुलना को नियंत्रित करने के लिए उपयोग किया जाता है.\r\n        तुलनाकर्ता एक ऐसा फ़ंक्शन है जो दो तर्कों को स्वीकार करता है और -1, 0, या 1 लौटाता है जो इस आधार पर होता है कि पहला मान दूसरे से कम है, उसके बराबर है या उससे अधिक है.\r\n        तुलनाकर्ताओं का उपयोग केस-असंवेदनशील या संस्कृति और स्थानीय-जागरूक तुलना प्रदान करने के लिए किया जा सकता है.\r\n      </div>\r\n      <div>\r\n        निम्नलिखित बिल्ट-इन तुलनाकर्ता सूत्र भाषा में उपलब्ध हैं:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: सटीक क्रमिक तुलना करने के लिए उपयोग किया जाता है</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: सटीक क्रमिक केस-असंवेदनशील तुलना करने के लिए उपयोग किया जाता है</li>\r\n        <li> <code>Comparer.FromCulture</code>: संस्कृति-जागरूक तुलना करने के लिए उपयोग किया जाता है</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "यह निर्धारित करने के लिए कि मान समान हैं या नहीं \"en-US\" लोकेल का उपयोग करके \"1\" और \"A\" की तुलना करें.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "वर्तमान दिनांक और समय को स्थानीय समय क्षेत्र में लौटाता है. यह मान निश्चित होता है और अनुक्रमिक कॉल के साथ नहीं बदलता है.",
        "Documentation.LongDescription": "आपके सिस्टम के वर्तमान दिनांक और समय पर सेट <code>datetime</code> मान लौटाता है. DateTime.LocalNow के विपरीत, यह मान निश्चित होता है और अनुक्रमिक कॉल के साथ नहीं बदलेगा, जो कि किसी व्यंजक के निष्पादन के दौरान भिन्न मान लौटा सकता है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "वर्तमान दिनांक और समय को स्थानीय समय क्षेत्र में लौटाता है.",
        "Documentation.LongDescription": "आपके सिस्टम के वर्तमान दिनांक और समय पर सेट <code>datetime</code> मान लौटाता है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "वर्तमान दिनांक और समय को स्थानीय समय क्षेत्र में लौटाता है. यह मान निश्चित होता है और अनुक्रमिक कॉल के साथ नहीं बदलेगा.",
        "Documentation.LongDescription": "आपके सिस्टम के वर्तमान दिनांक और समय पर सेट <code>datetime</code> मान लौटाता है. लौटाए गए मान में स्थानीय समय क्षेत्र को दर्शाने वाली समय क्षेत्र जानकारी होती है. DateTimeZone.LocalNow के विपरीत, यह मान निश्चित होता है और अनुक्रमिक कॉल के साथ नहीं बदलेगा, जो कि किसी व्यंजक के निष्पादन के दौरान भिन्न मान लौटा सकता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "वर्तमान दिनांक और समय को UTC (GMT समय क्षेत्र) में लौटाता है. यह मान निश्चित होता है और अनुक्रमिक कॉल के साथ नहीं बदलेगा.",
        "Documentation.LongDescription": "वर्तमान दिनांक और समय को UTC (GMT समय क्षेत्र) में लौटाता है. यह मान निश्चित होता है और अनुक्रमिक कॉल के साथ नहीं बदलेगा.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "वर्तमान दिनांक और समय को स्थानीय समय क्षेत्र में लौटाता है.",
        "Documentation.LongDescription": "सिस्टम पर मौजूद वर्तमान तिथि और समय के लिए एक <code>datetimezone</code> मान सेट लौटाता है.\r\n    लौटाए गए मान में स्थानीय timezone को दर्शाने वाले timezone की जानकारी शामिल होती है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "वर्तमान दिनांक और समय को UTC (GMT समय क्षेत्र) में लौटाता है.",
        "Documentation.LongDescription": "वर्तमान दिनांक और समय को UTC (GMT समय क्षेत्र) में लौटाता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "वर्तमान दिनांक और समय को UTC में प्राप्त करें.",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "वर्तमान में चल रहे मूल्यांकन के लिए एक अस्पष्ट पहचानकर्ता लौटाता है.",
        "Documentation.LongDescription": "वर्तमान में चल रहे मूल्यांकन के लिए एक अस्पष्ट पहचानकर्ता लौटाता है.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "आने वाले अनुरोधों को आउटगोइंग अनुरोधों के साथ सहसंबंधित करने के लिए एक अपारदर्शी पहचानकर्ता लौटाता है.",
        "Documentation.LongDescription": "आने वाले अनुरोधों को आउटगोइंग अनुरोधों के साथ सहसंबंधित करने के लिए एक अपारदर्शी पहचानकर्ता लौटाता है.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "यदि ट्रेसिंग सक्षम है, तो एक ट्रेस प्रविष्टि लिखता है, और मान को वापस करता है.",
        "Documentation.LongDescription": "यदि ट्रेसिंग सक्षम है, तो एक ट्रेस <code>message</code> लिखता है, और <code>value</code> वापस करता है. एक वैकल्पिक पैरामीटर <code>delayed</code> निर्दिष्ट करता है कि संदेश को ट्रेस किए जाने तक <code>value</code> के मूल्यांकन को विलंबित करना है या नहीं. <code>traceLevel</code> निम्नलिखित में से किसी एक मान को ले सकता है:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Text.From को लागू करने से पहले संदेश को ट्रेस करता है और परिणाम वापस करता है.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "वर्तमान होस्ट के लिए डिफ़ॉल्ट पहचान प्रदाता.",
        "Documentation.LongDescription": "वर्तमान होस्ट के लिए डिफ़ॉल्ट पहचान प्रदाता.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "सूची के आइटमों से एक सारांश मान एकत्रित करता है.",
        "Documentation.LongDescription": "<code>accumulator</code> का उपयोग करके सूची <code>list</code>, के आइटमों से एक सारांश मान एकत्रित करता है.\r\n    एक वैकल्पिक मूल पैरामीटर, <code>seed</code>, सेट हो सकता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "((state, current) => state + current ) का उपयोग करके सूची {1, 2, 3, 4, 5} के आइटमों से सारांश मान एकत्रित करता है .",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "दिनांक समय क्षेत्र मानों की सूची जनरेट करता है जिसमें प्रारंभिक मान, गणना और वृद्धिशील अवधि मान दिया होता है.",
        "Documentation.LongDescription": "<code>start</code> से प्रारंभ होने वाले, आकार <code>count</code> के <code>datetimezone</code> मानों की सूची लौटाता है. दी गई वृद्धि, <code>step</code>, एक <code>duration</code> मान है जिसे प्रत्येक मान में जोड़ा जाता है.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "नव वर्ष के दिन (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) से 5 मिनट पहले प्रारंभ होने वाले 10 मानों, 1 मिनट (#duration(0, 0, 1, 0)) बढ़ते हुए, की एक सूची बनाएँ.",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "दिनांक समय मानों की सूची जनरेट करता है जिसमें प्रारंभिक मान, गणना और वृद्धिशील अवधि मान दिया होता है.",
        "Documentation.LongDescription": "<code>start</code> से प्रारंभ होने वाले, आकार <code>count</code> के <code>datetime</code> मानों की सूची लौटाता है. दी गई वृद्धि, <code>step</code>, एक <code>duration</code> मान है जिसे प्रत्येक मान में जोड़ा जाता है.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "नव वर्ष के दिन (#datetime(2011, 12, 31, 23, 55, 0)) से 5 मिनट पहले प्रारंभ होने वाले 10 मानों, 1 मिनट (#duration(0, 0, 1, 0)) बढ़ते हुए, की एक सूची बनाएँ.",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "दिनांक मानों की सूची जनरेट करता है जिसमें प्रारंभिक मान, गणना और वृद्धिशील अवधि मान दिया होता है.",
        "Documentation.LongDescription": "<code>start</code> से प्रारंभ होने वाले, आकार <code>count</code> के <code>date</code> मानों की सूची लौटाता है. दी गई वृद्धि, <code>step</code>, एक <code>duration</code> मान है जिसे प्रत्येक मान में जोड़ा जाता है.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "नव वर्ष की संध्या (#date(2011, 12, 31)) से प्रारंभ होने वाले 5 मानों की, 1 दिन (#duration(1, 0, 0, 0)) बढ़ते हुए, एक सूची बनाएँ.",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "अवधि मानों की सूची जनरेट करता है जिसमें प्रारंभिक मान, गणना और वृद्धिशील अवधि मान दिया जाता है.",
        "Documentation.LongDescription": "<code>start</code> से प्रारंभ होने वाले और दी गई <code>duration</code> <code>step</code> से बढ़े हुए, <code>count</code> <code>duration</code> मानों की सूची लौटाता है.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "1 घंटे से प्रारंभ होने वाले और एक घंटा बढ़ते हुए 5 मानों की सूची बनाएँ.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "मानों की सूची जनरेट करता है.",
        "Documentation.LongDescription": "प्रदान किए गए फ़ंक्शंस का उपयोग करके मानों की एक सूची जनरेट करता है. <code>initial</code> फ़ंक्शन एक प्रारंभिक कैंडिडेट मान जनरेट करता है, जिसका फिर <code>condition</code> के विरुद्ध परीक्षण किया जाता है.\r\n    यदि कैंडिडेट मान अनुमोदित है, तो यह परिणामी सूची के भाग के रूप में लौटाया जाता है और नया अनुमोदित मान <code>next</code> पर भेजकर अगला कैंडिडेट मान जनरेट किया जाता है.\r\n    एक बार किसी कैंडिडेट मान <code>condition</code> से मिलान करने में विफल होने पर सूची जनरेशन प्रक्रिया रुक जाती है.\r\n    परिणामी सूची में आइटम्स को रूपांतरित करने के लिए एक वैकल्पिक पैरामीटर, <code>selector</code> भी प्रदान किया जा सकता है.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "10 से शुरू करके एक सूची बनाएँ, फिर हर बार एक से कम करें और सुनिश्चित करें कि प्रत्येक आइटम शून्य से अधिक हो.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "x और y रिकॉर्ड्स वाली एक सूची जनरेट करें, जहाँ x एक मान हो और y एक सूची हो. x को 10 से कम रहना चाहिए और सूची y के आइटमों की संख्या को दर्शाना चाहिए. सूची जनरेट होने के बाद, केवल x मानों को लौटाएँ.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "दी गई अनुक्रमणिका की किसी सूची में मान सम्मिलित करता है.",
        "Documentation.LongDescription": "<code>values</code> के मानों को <code>index</code> के <code>list</code> में सम्मिलित करने से उत्पन्न एक नई सूची लौटाता है. सूची की पहली स्थिति, अनुक्रमणिका 0 में है.\r\n      <ul>\r\n        <li><code>list</code>: वह लक्ष्य सूची जहाँ मानों को सम्मिलित करना है.</li>\r\n        <li><code>index</code>: वह लक्ष्य सूची की वह अनुक्रमणिका (<code>list</code>) जहाँ मानों को सम्मिलित करना है. सूची की पहली स्थिति, अनुक्रमणिका 0 में है.</li>\r\n        <li><code>values</code>: उन मानों की सूची जिन्हें <code>list</code> में सम्मिलित करना है.</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची ({3, 4}) को अनुक्रमणिका 2 की लक्ष्य सूची ({1, 2, 5}) में सम्मिलित करें.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "नेस्टेड सूची ({1, {1.1, 1.2}}) वाली सूची को अनुक्रमणिका 0 की लक्ष्य सूची ({2, 3, 4}) में सम्मिलित करें.",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "स्थिति पर प्रारंभ होने वाले मानों की गणना संख्या को प्रतिस्थापन मानों के साथ प्रतिस्थापित करता है.",
        "Documentation.LongDescription": "<code>list</code> के <code>count</code> मानों को निर्दिष्ट स्थिति, <code>index</code> पर प्रारंभ होने वाली सूची <code>replaceWith</code>, के साथ प्रतिस्थापित करता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 7, 8, 9, 5} के {7, 8, 9} को {3, 4} के साथ प्रतिस्थापित करें.",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "निर्दिष्ट मान के लिए एक सूची खोजता है और उसे प्रतिस्थापित करता है.",
        "Documentation.LongDescription": "मान <code>oldValue</code> के लिए मानों की एक सूची, <code>list</code>, खोजता है और उसकी प्रत्येक आवृत्ति को प्रतिस्थापन मान <code>newValue</code> के साथ प्रतिस्थापित करता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {\"a\", \"B\", \"a\", \"a\"} के सभी \"a\" मानों को \"A\" के साथ प्रतिस्थापित करता है.",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "समय मानों की सूची जनरेट करता है जिसमें प्रारंभिक मान, गणना और वृद्धिशील अवधि मान दिया होता है.",
        "Documentation.LongDescription": "<code>start</code> से प्रारंभ होने वाले, आकार <code>count</code> के <code>time</code> मानों की सूची लौटाता है. दी गई वृद्धि, <code>step</code>, एक <code>duration</code> मान है जिसे प्रत्येक मान में जोड़ा जाता है.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "एक घंटा (#duration(0, 1, 0, 0)) की वृद्धि करते हुए दोपहर (#time(12, 0, 0)) से शुरू करके 4 मानों की एक सूची बनाएँ.",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "एक ऐसी सूची लौटाता है जिसके तत्वों को निर्दिष्ट फ़ंक्शनों का उपयोग करके इनपुट सूची से ट्रांसफ़ॉर्म किया जाता है.",
        "Documentation.LongDescription": "एक सूची लौटाता है जिसके तत्व इनपुट सूची से प्रक्षेपित होते हैं.<br>\r\n    <br>\r\n    <code>collectionTransform</code> फ़ंक्शन प्रत्येक तत्व को एक मध्यवर्ती सूची में बदल देता है, और अंतिम परिणाम बनाने के लिए <code>resultTransform</code> फ़ंक्शन मूल तत्व के साथ-साथ मध्यवर्ती सूची से एक आइटम प्राप्त करता है.<br>\r\n    <br>\r\n    <code>collectionTransform</code> फ़ंक्शन में हस्ताक्षर <code>(x as any) as list => ...</code> है, जहां <code>x</code> <code>list</code> में एक तत्व है.\r\n    <code>resultTransform</code> फ़ंक्शन परिणाम के आकार को प्रोजेक्ट करता है और इसमें सिग्नेचर होता है <code>(x as any, y as any) as any => ...</code>, जहाँ <code>x</code> एक एलिमेंट है <code>list</code> और <code>y</code> <code>x</code> को <code>collectionTransform</code> तक पास करके बनाई गई सूची का एक तत्व है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "लोगों और उनके पालतू पशुओं की सूची को समतल करें.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "यादृच्छिक संख्या लौटाता है.",
        "Documentation.LongDescription": "0 और 1 के बीच एक यादृच्छिक संख्या लौटाता है.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "यादृच्छिक संख्या प्राप्त करें.",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "किसी रिकॉर्ड में एक फ़ील्ड जोड़ता है.",
        "Documentation.LongDescription": "किसी रिकॉर्ड <code>record</code> में एक फ़ील्ड जोड़ता है, जिसमें फ़ील्ड <code>fieldName</code> का नाम और मान <code>value</code> दिया जाता है.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "फ़ील्ड पते को रिकॉर्ड में जोड़ें.",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "पाठ को प्रदान किए गए इनपुट के साथ प्रतिस्थापित करता है.",
        "Documentation.LongDescription": "मूल <code>text</code> के <code>old</code> पाठ को <code>new</code> पाठ के साथ प्रतिस्थापित करता है. इस प्रतिस्थापक का उपयोग <code>List.ReplaceValue</code> और <code>Table.ReplaceValue</code> में किया जा सकता है.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "स्ट्रिंग \"hEllo world\" में पाठ \"hE\" को \"He\" के साथ प्रतिस्थापित करें.",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "मान को प्रदान किए गए इनपुट के साथ प्रतिस्थापित करता है.",
        "Documentation.LongDescription": "मूल <code>value</code> के <code>old</code> मान को <code>new</code> मान के साथ प्रतिस्थापित करता है. इस प्रतिस्थापक का उपयोग <code>List.ReplaceValue</code> और <code>Table.ReplaceValue</code> में किया जा सकता है.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "मान 11 को मान 10 के साथ प्रतिस्थापित करें.",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Smartsheet API से JSON परिणाम लौटाता है",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "निर्दिष्ट समाप्ति बिंदु पर Smartsheet 2.0 REST API के लिए कॉल करता है और JSON रिकॉर्ड के रूप में परिणाम लौटाता है.",
        "Documentation.Examples": [
          {
            "Description": "पत्रक Smartsheet API समाप्ति बिंदु से अतिरिक्त निर्दिष्ट तर्कों के साथ डेटा पुल करता है",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "Smartsheet API द्वारा लौटाई गई पत्रक जानकारी वाली एक तालिका"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.ContentsV110",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "RangeStart": "datetime",
        "RangeEnd": "datetime"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो इसके तर्क को एकल तत्व सूची के रूप में लौटाते हुए कोई विभाजित नहीं करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो इसके तर्क को एकल तत्व सूची के रूप में लौटाते हुए कोई विभाजित नहीं करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो सफेद रिक्ति पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो सफेद रिक्ति पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "उद्धरणों को किसी अन्य वर्ण की तरह मानते हुए, इनपुट को श्वेत रिक्ति वर्णों से विभाजित करें.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "समूहों की संख्या और निर्दिष्ट स्तंभ के आधार पर तालिका का तालिकाओं की सूची में विभाजन करता है.",
        "Documentation.LongDescription": "<code>column</code> के मान और <code>hash</code> फ़ंक्शन के आधार पर, <code>table</code> का <code>groups</code> तालिकाओं की सूची में विभाजन करता है.\r\n    पंक्ति के लिए हैश मान को प्राप्त करने के लिए <code>hash</code> फ़ंक्शन <code>column</code> पंक्ति के मान पर लागू किया जाता है. हैश मान मॉड्यूलओ <code>groups</code> निर्धारित करता है कि लौटाई गई किस तालिका में पंक्ति को रखा जाएगा.\r\n    <ul>\r\n       <li><code>table</code>: विभाजित की जाने वाली तालिका.</li>\r\n       <li><code>column</code>: यह निर्धारित करने के लिए किस लौटाई गई तालिका में पंक्ति है, हैश किए जाने वाला स्तंभ.</li>\r\n       <li><code>groups</code>: तालिकाओं की संख्या जिनमें इनपुट तालिका को विभाजित किया जाएगा.</li>\r\n       <li><code>hash</code>: हैश मान प्राप्त करने के लिए फ़ंक्शन लागू किया गया.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> को, स्तंभों के मान का हैश फ़ंक्शन के रूप में उपयोग करके स्तंभ [a] पर 2 तालिकाओं में विभाजित करें.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "निर्दिष्ट <code>startDelimiter</code> और <code>endDelimiter</code> के बीच <code>text</code> का भाग लौटाता है.\r\n    एक वैकल्पिक संख्यिक <code>startIndex</code> इंगित करता है कि <code>startDelimiter</code> की किस आवृत्ति पर विचार करना चाहिए.\r\n    एक वैकल्पिक सूची <code>startIndex</code> इंगित करती है कि <code>startDelimiter</code> की किस आवृत्ति पर विचार किया जाना चाहिए, साथ ही साथ यह कि इनपुट के प्रारंभ या उसकी समाप्ति से अनुक्रमणिका संपन्न करना चाहिए या नहीं.\r\n    <code>endIndex</code> समान है, <code>startIndex</code> के संबंध में अनुक्रमणिका संपन्न करने के सिवाय.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "(पहले) खुले लघुकोष्ठक तथा (पहले) बंद लघुकोष्ठक जो उसके बाद है, के बीच \"111 (222) 333 (444)\" का भाग प्राप्त करें.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "दूसरे खुले लघुकोष्ठक तथा पहले बंद लघुकोष्ठक जो उसके बाद है, के बीच \"111 (222) 333 (444)\" का भाग प्राप्त करें.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "अंतिम से दूसरे खुले लघुकोष्ठक तथा दूसरे बंद लघुकोष्ठक जो उसके बाद है, के बीच \"111 (222) 333 (444)\" का भाग प्राप्त करें.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "दी गई स्थिति पर एक पाठ मान को अन्य में सम्मिलित करें.",
        "Documentation.LongDescription": "स्थिति <code>offset</code> पर पाठ मान <code>text</code> में सम्मिलित किए जाने वाले पाठ मान <code>newText</code> के परिणाम को लौटाता है. स्थिति, संख्या 0 पर प्रारंभ होती हैं.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "\"ABD\" में \"B\" और \"D\" के बीच \"C\" सम्मिलित करें.",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "एक नया, रेंडम ग्लोबली युनीक आइडेंटिफ़ायर (GUID) लौटाता है.",
        "Documentation.LongDescription": "एक नया, रेंडम ग्लोबली युनीक आइडेंटिफ़ायर (GUID) लौटाता है.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "पाठ में दी गई सबस्ट्रिंग की सभी आवृत्तियों को प्रतिस्थापित करता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> में पाठ मान <code>old</code> की सभी आवृत्तियों को पाठ मान <code>new</code> से प्रस्थापित करने का परिणाम लौटाता है. यह फ़ंक्शन केस संवेदी है.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "वाक्य में \"the\" की प्रत्येक आवृत्ति को \"a\" से बदलें.",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "वर्णों की श्रृंखला को निकालता है और निर्दिष्ट की गई स्थिति पर एक नया मान सम्मिलित करता है.",
        "Documentation.LongDescription": "स्थिति <code>offset</code> पर प्रारंभ होने वाले पाठ मान <code>text</code> से निकालने वाले वर्णों की संख्या <code>count</code> के परिणाम को लौटाता है और फिर <code>text</code> में समान स्थिति पर पाठ मान <code>newText</code> सम्मिलित करता है.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान \"ABGF\" में स्थिति 2 पर एक वर्ण को नए पाठ मान \"CDE\" के साथ बदलें.",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "दी गई तालिका के प्रकार में कुंजी जोड़ता है.",
        "Documentation.LongDescription": "दी गई तालिका के प्रकार में कुंजी जोड़ता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "पहचान सूची लौटाता है कि शर्त स्वीकार की जाएगी.",
        "Documentation.LongDescription": "<p>निर्दिष्ट <code>identityProvider</code> का उपयोग करते हुए, सभी प्राधिकृत संदर्भों में <code>identityProvider</code> पहचान प्रदाता के रूप में <code>condition</code> को पहचान सूची में परिवर्तित करता है, जिसके लिए <code>condition</code> को <code>सत्य</code> वापस लौटाना होगा. यदि <code>condition</code> को पहचान सूची में परिवर्तित करना संभव नहीं है, तो एक त्रुटि उत्पन्न होगी. उदाहरण के लिए, यदि <code>condition</code> निर्णय लेने के लिए उपयोगकर्ता या समूह की पहचान के अलावा अन्य विशेषताओं को शामिल करता है.</p>\r\n    <p>ध्यान दें कि पहचान सूची <code>condition</code> में दिखाई देने वाली पहचान का प्रतिनिधित्व करती है और उन पर कोई सामान्यीकरण (जैसे समूह विस्तार) नहीं किया जाता है.</p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "दिए गए संपीड़न प्रकार का उपयोग करके बाइनरी मान को संपीड़ित करता है.",
        "Documentation.LongDescription": "दिए गए कंप्रेशन प्रकार का उपयोग करके एक बाइनरी मान को कंप्रेस करता है. इस कॉल का परिणाम इनपुट की एक कंप्रेस की गई प्रतिलिपि होता है. कंप्रेशन प्रकारों में शामिल है:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "बाइनरी मान को संपीड़ित करें.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "दिए गए संपीड़न प्रकार का उपयोग करके बाइनरी मान को असंपीड़ित करता है.",
        "Documentation.LongDescription": "दिए गए कंप्रेशन प्रकार का उपयोग करके एक बाइनरी मान को असंम्पिड्य करता है. इस कॉल का परिणाम इनपुट की एक असंम्पिड्य की गई प्रतिलिपि होता है. कंप्रेशन प्रकारों में शामिल है:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "बाइनरी मान को असंपीड़ित करें.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "ऑफ़सेट पर शुरू होने वाले बाइनरी मान का सबसेट लौटाता है.",
        "Documentation.LongDescription": "ऑफ़सेट <code>binary</code> पर शुरू होने वाली सूची का सबसेट लौटाता है. एक वैकल्पिक पैरामीटर, <code>offset</code>, सबसेट के आइटमों की अधिकतम संख्या सेट करता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "ऑफ़सेट 6 से प्रारंभ होने वाले बाइनरी मान का सबसेट लौटाता है.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "बाइनरी मान की ऑफ़सेट 6 से लंबाई 2 का सबसेट लौटाता है.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "निर्दिष्ट बाइनरी को निर्दिष्ट पृष्ठ आकार का उपयोग करके बायनेरिज़ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "<code>binary</code> को बायनेरिज़ की सूची में विभाजित करता है जहाँ आउटपुट सूची का पहला तत्व एक बाइनरी है जिसमें \r से पहले <code>pageSize</code> बाइट्स होते हैं\n    स्रोत बाइनरी, आउटपुट सूची का अगला तत्व एक बाइनरी है जिसमें स्रोत बाइनरी से अगले <code>pageSize</code> बाइट होते हैं, और बहुत कुछ.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "क्वेरी और कार्रवाइयों के निष्पादन के लिए उपयोगकर्ता-परिभाषित हैंडलर वाली बाइनरी बनाता है या विस्तारित करता है.",
        "Documentation.LongDescription": "<p><code>binary</code> का एक दृश्य लौटाता है, जिसमें दृश्य पर कार्रवाई के लागू होने पर, <code>handlers</code> में निर्दिष्ट फ़ंक्शन का उपयोग कार्रवाई के डिफ़ॉल्ट व्यवहार के स्थान पर किया जाता है.</p>\r\n<p>यदि <code>binary</code> प्रदान किया जाता है, तो सभी हैंडलर फ़ंक्शन्स वैकल्पिक होते हैं. यदि <code>binary</code> प्रदान नहीं किया जाता है, तो <code>GetStream</code> हैंडलर फ़ंक्शन आवश्यक होता है. यदि किसी कार्रवाई के लिए हैंडलर फ़ंक्शन निर्दिष्ट नहीं किया जाता है, तो इसके बजाय <code>binary</code> पर कार्रवाई का डिफ़ॉल्ट व्यवहार लागू किया जाता है (<code>GetExpression</code>की स्थिति को छोड़कर).</p>\r\n<p>हैंडलर फ़ंक्शन्स को ऐसा मान लौटाना चाहिए जो <code>binary</code> (या <code>GetExpression</code> की स्थिति में परिणामी दृश्य) के लिए कार्रवाई को लागू करने के परिणाम के सीमेंटिक रूप से समतुल्य हो.</p>\r\n<p>यदि कोई हैंडलर फ़ंक्शन एक त्रुटि देता है, तो दृश्य पर कार्रवाई का डिफ़ॉल्ट व्यवहार लागू होता है.</p>\r\n<p><code>Binary.View</code> का उपयोग डेटास्रोत पर फ़ोल्डिंग कार्यान्वित करने – M क्वेरीज़ का स्रोत-विशिष्ट ऑपरेशंस में रूपांतरण करने (उदाहरण के लिए, किसी फ़ाइल का कोई अनुभाग डाउनलोड करने) के लिए किया जा सकता है.</p>\r\n<p> <code>Binary.View</code> के अधिक पूर्ण विवरण के लिए Power Query कस्टम कनेक्टर का प्रकाशित दस्तावेज़ देखें.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "कोई ऐसा मूल दृश्य बनाएँ जिसे लंबाई निर्धारित करने के लिए डेटा तक पहुँचने की आवश्यकता न हो.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "किसी फ़ंक्शन द्वारा निर्दिष्ट किए गए बाइट क्रम के साथ बाइनरी स्वरूप को लौटाता है.",
        "Documentation.LongDescription": "<code>binaryFormat</code> द्वारा निर्दिष्ट किए गए बाइट क्रम के साथ बाइनरी स्वरूप को लौटाता है.  डिफ़ॉल्ट बाइनरी क्रम है <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "ऐसे बाइनरी स्वरूप को लौटाता है जो पहले ही पढ़े गए मान के आधार पर अगले बाइनरी स्वरूप का चयन करता है.",
        "Documentation.LongDescription": "ऐसे बाइनरी स्वरूप को लौटाता है जो पहले ही पढ़े गए मान के आधार पर अगले बाइनरी स्वरूप का चयन करता है.  इस फ़ंक्शन द्वारा उत्पन्न बाइनरी मान इन अवस्थाओं में काम करता है:<ul>\r\n<li><code>binaryFormat</code> पैरामीटर द्वारा निर्दिष्ट किए गए बाइनरी स्वरूप का उपयोग मान को पढ़ने के लिए किया जाता है.</li>\r\n<li><code>chooseFunction</code> पैरामीटर द्वारा निर्दिष्ट किए गए चॉइस फ़ंक्शन में मान को पास किया जाता है.</li>\r\n<li>चॉइस फ़ंक्शन मान का निरीक्षण करता है और एक द्वितीय बाइनरी स्वरूप लौटाता है.</li>\r\n<li>द्वितीय बाइनरी स्वरूप का उपयोग द्वितीय मान को पढ़ने के लिए किया जाता है.</li>\r\n<li>यदि संयोजन फ़ंक्शन निर्दिष्ट किया गया होता है, तो पहले और दूसरे मानों को संयोजन फ़ंक्शन में पास किया जाता है और परिणामित मान को लौटाया जाता है.</li>\r\n<li>यदि संयोजन फ़क्शंन निर्दिष्ट नहीं किया गया होता है, तो द्वितीय मान को लौटाया जाता है.</li>\r\n<li>द्वितीय मान को लौटाया गया.</li>\r\n</ul>वैकल्पिक <code>type</code> पैरामीटर उस बाइनरी स्वरूप को इंगित करता है जो चॉइस फ़ंक्शन द्वारा लौटाया जाएगा.  या तो <code>type any</code>, <code>type list</code> या <code>type binary</code> निर्दिष्ट किए जा सकता हैं.  यदि <code>type</code> पैरामीटर निर्दिष्ट नहीं किया गया होता है, तो <code>type any</code> उपयोग किया जाता है.   यदि <code>type list</code> या <code>type binary</code> का उपयोग किया गया होता है, तो सिस्टम बफ़र्ड के बजाए एक स्ट्रीमिंग <code>binary</code> या <code>list</code> मान को लौटा सकता है, जो स्वरूप को पढ़ने के लिए आवश्यक स्मृति की मात्रा को कम कर सकता है.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "बाइट्स की सूची पढ़ें, जहाँ तत्वों की संख्या पहली बाइट से निर्धारित होती है.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "बाइट्स की सूची पढ़ें, जहाँ तत्वों की संख्या पहली बाइट से निर्धारित होती है और पढ़ी गई पहली बाइट को संरक्षित करें.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "बाइट्स की सूची पढ़ें, जहाँ तत्वों की संख्या स्ट्रीमिंग सूची का उपयोग करके पहली बाइट से निर्धारित होती है.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "आइटम्स के समूह को पढ़ने वाले बाइनरी स्वरूप को लौटाता है.",
        "Documentation.LongDescription": "पैरामीटर्स निम्न प्रकार हैं.\r\n<ul>\r\n<li><code>binaryFormat</code> पैरामीटर कुंजी मान के बाइनरी स्वरूप को निर्दिष्ट करता है.</li>\r\n<li><code>group</code> पैरामीटर ज्ञात आइटम्स के समूह के बारे में जानकारी प्रदान करता है.</li>\r\n<li>वैकल्पिक <code>extra</code> पैरामीटर का उपयोग ऐसा फ़ंक्शन को निर्दिष्ट करने के लिए किया जा सकता है जो किसी अनपेक्षित कुंजी का अनुसरण करने वाले मान के लिए एक बाइनरी स्वरूप मान लौटाएगा.  यदि <code>extra</code> पैरामीटर निर्दिष्ट नहीं है, तो अनपेक्षित कुंजी मान होने पर एक त्रुटि दी जाएगी.</li>\r\n</ul>\r\n<code>group</code> पैरामीटर आइटम परिभाषाओं की एक सूची निर्दिष्ट करता है.  प्रत्येक आइटम परिभाषा एक सूची होती है, जिसमें 3-5 मान होते हैं, जो निम्न प्रकार हैं:\r\n<ul>\r\n<li>कुंजी मान.  कुंजी का मान जो आइटम से संबंधित है.  यह आइटम्स के सेट के अंतर्गत अद्वितीय होना चाहिए.</li>\r\n<li>आइटम स्वरूप.  आइटम के मान से संबंधित बाइनरी स्वरूप.  यह प्रत्येक आइटम को भिन्न स्वरूप में होने की अनुमति देता है. </li>\r\n<li>आइटम आवृत्ति.  आइटम का समूह में कितनी बार प्रकट होना अपेक्षित है उसका <code>BinaryOccurrence.Type</code> मान.   अपेक्षित आइटम्स जो मौजूद नहीं हैं वे त्रुटि पहुँचाते हैं.  अपेक्षित या वैकल्पिक डुप्लिकेट आइटम्स को अनपेक्षित कुंजी मानों के समान हैंडल किया जाता है.</li>\r\n<li>डिफ़ॉल्ट आइटम मान (वैकल्पिक).  यदि डिफ़ॉल्ट आइटम, मान आइटम परिभाषा सूची में प्रकट होता है और नल नहीं होता है, तो डिफ़ॉल्ट के बजाए उसका उपयोग किया जाएगा.  दोहराए जाने वाले या वैकल्पिक आइटम्स के लिए डिफ़ॉल्ट नल है और दोहराए जाने वाले मानों के लिए डिफ़ॉल्ट एक रिक्त सूची { } है.</li>\r\n<li>आइटम मान ट्रांसफ़ॉर्म (वैकल्पिक).   यदि आइटम परिभाषा सूची में आइटम मान ट्रांसफ़ॉर्म फ़ंक्शन मौजूद होता है और नल नहीं होता है, तो इससे पहले कि उसे लौटाया जाए उसे आइटम मान को ट्रांसफ़ॉर्म करने के लिए कॉल किया जाएगा.  ट्रांसफ़ॉर्म फ़ंक्शन को आइटम के इनपुट में प्रकट होने पर ही कॉल किया जाता है (उसे डिफ़ॉल्ट मान के साथ कभी भी कॉल नहीं किया जाएगा). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "निम्न एकल बाइट का एक कुंजी मान ले लेता है, जिसमें समूह में 4 अपेक्षित आइटम्स होते हैं, जिनमें सभी में कुंजी के बाद एक बाइट का डेटा होता है.  इनपुट में आइटम्स निम्न प्रकार प्रकट होते हैं:\r\n<ul>\r\n<li>कुंजी 1 अपेक्षित होती है और मान 11 के साथ प्रकट नहीं होती.</li>\r\n<li>कुंजी 2 दोहराई जाती है और मान 22 के साथ दो बार प्रकट होती है और परिणामस्वरूप { 22, 22 } का मान देती है.</li>\r\n<li>कुंजी 3 वैकल्पिक होती है और प्रकट नहीं होती और परिणामस्वरूप नल मान देती है.</li>\r\n<li>कुंजी 4 दोहराई जाती है लेकिन प्रकट नहीं होती और परिणामस्वरूप { } का मान देती है.</li>\r\n<li>कुंजी 5 समूह का भाग नहीं होती लेकिन मान 55 के साथ एक बार प्रकट होती है.  अतिरिक्त फ़ंक्शन, कुंजी मान 5 के साथ कॉल किया जाता है और उस मान से संबंधित स्वरूप को लौटाता है (BinaryFormat.Byte).  मान 55 को पढ़ा गया और त्याग दिया गया.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "निम्न उदाहरण, आइटम मान ट्रांसफ़ॉर्म और डिफ़ॉल्‍ट आइटम मान की व्याख्या करता है.   कुंजी 1 के साथ दोहराया जाने वाला आइटम मानों की सूची के योग को List.Sum का उपयोग करके पढ़ता है.  कुंजी 2 के साथ वैकल्पिक आइटम में नल के बजाए 123 का एक डिफ़ॉल्‍ट मान है.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "बाइनरी स्वरूप लौटाता है जो ऐसे डेटा की मात्रा को सीमित करता है जिसे पढ़ा जा सकता है.",
        "Documentation.LongDescription": "वह बाइनरी फ़ॉर्मैट लौटाता है जो ऐसे डेटा की मात्रा को सीमित करता है जिसे पढ़ा जा सकता है.  <code>BinaryFormat.List</code> और <code>BinaryFormat.Binary</code> दोनों का उपयोग डेटा को अंत तक पढ़ने के लिए किया जा सकता है.  <code>BinaryFormat.Length</code> का उपयोग पढ़ी गई बाइट्स की संख्या को सीमित करने के लिए किया जा सकता है.  <code>binaryFormat</code> पैरामीटर, सीमित किए जाने वाले बाइनरी फ़ॉर्मैट को निर्दिष्ट करता है.  <code>length</code> पैरामीटर पढ़ी जाने वाली बाइट्स की संख्या को निर्दिष्ट करता है.  <code>length</code> पैरामीटर या तो संख्या मान हो सकता है या एक बाइनरी फ़ॉर्मैट मान हो सकता है जो उस लंबाई मान का फ़ॉर्मैट निर्दिष्ट करता है जो पढ़े जा रहे मान से पहले होता है.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "बाइट्स की सूची पढ़ने के दौरान पढ़ी गई बाइट्स की संख्या को 2 पर सीमित करें.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "बाइट्स की सूची पढ़ने के दौरान पढ़ी गई बाइट्स की संख्या को सूची से पहले वाले बाइट मान पर सीमित करें.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "ऐसे बाइनरी स्वरूप को लौटाता है जो अन्य बाइनरी स्वरूप द्वारा पढ़े गए मानों को ट्रांसफ़ॉर्म करेगा.",
        "Documentation.LongDescription": "ऐसे बाइनरी स्वरूप को लौटाता है जो अन्य बाइनरी स्वरूप द्वारा पढ़े गए मानों को ट्रांसफ़ॉर्म करेगा.  <code>binaryFormat</code> पैरामीटर उस बाइनरी स्वरूप को निर्दिष्ट करता है जिसका उपयोग मान को पढ़ने के लिए किया जाएगा.  <code>function</code> को पढ़े गए मान के साथ इनवोक किया जाता है और ट्रांसफ़ॉर्म किए गए मान को लौटाता है.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "एक बाइट पढ़ें और उसमें एक जोड़ें.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "वह तुलनाकर्ता फ़ंक्‍शन लौटाता है जो मानों की तुलना करने के लिए क्रमसूचक नियमों का उपयोग करता है.",
        "Documentation.LongDescription": "एक तुलनाकर्ता फ़ंक्शन लौटाता है जो दिए गए मान <code>x</code> और <code>y</code> की तुलना करने के लिए सामान्य नियमों का उपयोग करता है.<br>\r\n        <br>\r\n        दिए गए मानों की तुलना करने के लिए क्रमसूचक नियमों का उपयोग करता है. मिलानकर्ता फ़ंक्शन दो तर्कों को स्वीकार करता है और पहला मान दूसरे से कम, बराबर या अधिक है या नहीं इसके आधार पर -1, 0 या 1 लौटाता है.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "क्रमसूचक नियमों का उपयोग करके, तुलना करें कि क्या \"encyclopædia\" और \"encyclopaedia\" समान हैं. ध्यान दें कि ये <code>Comparer.FromCulture(\"en-US\")</code> का उपयोग करने पर समान होते हैं. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "केस-संवेदी तुलनाकर्ता फ़ंक्शन लौटाता है जो मानों की तुलना करने के लिए क्रमसूचक नियमों का उपयोग करता है.",
        "Documentation.LongDescription": "एक केस-असंवेदनशील तुलनाकर्ता फ़ंक्शन लौटाता है जो दिए गए मान <code>x</code> और <code>y</code> की तुलना करने के लिए सामान्य नियमों का उपयोग करता है.<br>\r\n        <br>\r\n        दिए गए मानों की तुलना करने के लिए क्रमसूचक नियमों का उपयोग करता है. मिलानकर्ता फ़ंक्शन दो तर्कों को स्वीकार करता है और पहला मान दूसरे से कम, बराबर या अधिक है या नहीं इसके आधार पर -1, 0 या 1 लौटाता है.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "केस-संवेदी क्रमसूचक नियमों का उपयोग करके, \"Abc\" की तुलना \"abc\" से करें. ध्यान दें <code>Comparer.Ordinal</code> का उपयोग करने वाले \"abc\" की तुलना में \"Abc\" कम है. ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "आयाम विशेषता का कोई गुण वापस करता है.",
        "Documentation.LongDescription": "आयाम विशेषता <code>attribute</code> का गुण <code>propertyName</code> वापस करता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "किसी माप का गुण (कक्ष गुण) लौटाता है.",
        "Documentation.LongDescription": "<code>measure</code> माप का <code>propertyName</code> गुण लौटाता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "डेटा ब्रिक SQL क्वेरी स्रोत",
        "Documentation.LongDescription": "SQL क्वेरी चलाने के लिए Databricks डेटा स्रोत निर्धारित करें"
      },
      "ReturnType": "Databricks SQL क्वेरी",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "डेटा ब्रिक SQL क्वेरी स्रोत",
        "Documentation.LongDescription": "SQL क्वेरी चलाने के लिए Databricks डेटा स्रोत निर्धारित करें"
      },
      "ReturnType": "Databricks SQL क्वेरी",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "निर्दिष्ट दिनों को दिनांक में जोड़ता है.",
        "Documentation.LongDescription": "<code>datetime</code> मान <code>dateTime</code> में <code>numberOfDays</code> दिन जोड़ने से आने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> परिणाम लौटाता है.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>, <code>datetime</code> या <code>datetimezone</code> वे मान हैं जिनमें दिनों को जोड़ा जा रहा है.</li>\r\n      <li><code>numberOfDays</code>: जोड़ने के लिए दिनों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "दिनांक 5/14/2011 का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान में 5 दिन जोड़ें.",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "निर्दिष्ट महीनों को दिनांक में जोड़ता है.",
        "Documentation.LongDescription": "<code>datetime</code> मान <code>dateTime</code> में <code>numberOfMonths</code> महीना जोड़ने से <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> परिणाम लौटाता है.\r\n      <ul>\r\n        <li><code>dateTime</code>: <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> वे मान हैं, जिनमें महीनों को जोड़ा जा रहा है.</li>\r\n        <li><code>numberOfMonths</code>: जोड़ने के लिए महीनों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "दिनांक 5/14/2011 का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान में 5 महीने जोड़ें.",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "दिनांक और समय 5/14/2011 08:15:22 पूर्वाह्न का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान में 18 महीने जोड़ें.",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "निर्दिष्ट तिमाहियों को दिनांक में जोड़ता है.",
        "Documentation.LongDescription": "<code>datetime</code> मान <code>dateTime</code> में <code>numberOfQuarters</code> तिमाहियाँ जोड़ने आने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> परिणाम लौटाता है.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>, <code>datetime</code> या <code>datetimezone</code> वे मान हैं जिनमें तिमाहियों को जोड़ा जा रहा है.</li>\r\n      <li><code>numberOfQuarters</code>: जोड़ने के लिए तिमाहियों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "दिनांक 5/14/2011 का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान में 1 तिमाही जोड़ें.",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "निर्दिष्ट सप्ताहों को दिनांक में जोड़ता है.",
        "Documentation.LongDescription": "<code>datetime</code> मान <code>dateTime</code> में <code>numberOfWeeks</code> सप्ताह जोड़ने से आने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> परिणाम लौटाता है.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>, <code>datetime</code> या <code>datetimezone</code> वे मान हैं जिनमें सप्ताहों को जोड़ा जा रहा है.</li>\r\n      <li><code>numberOfWeeks</code>: जोड़ने के लिए सप्ताहों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "दिनांक 5/14/2011 का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान में 2 सप्ताह जोड़ें.",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "निर्दिष्ट वर्षों को दिनांक में जोड़ता है.",
        "Documentation.LongDescription": "<code>datetime</code> मान <code>dateTime</code> में <code>numberOfYears</code> जोड़ने से <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> परिणाम लौटाता है.\r\n      <ul>\r\n        <li><code>dateTime</code>: <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> वे मान हैं, जिनमें वर्षों को जोड़ा जा रहा है.</li>\r\n        <li><code>numberOfYears</code>: जोड़ने के लिए वर्षों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "दिनांक 5/14/2011 का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान में 4 वर्ष जोड़ें.",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "दिनांक और समय 5/14/2011 08:15:22 पूर्वाह्न का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान में 10 वर्ष जोड़ें.",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ दिनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ दिनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>days</code>: दिनों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय के बाद वाला दिन अगले दो दिनों में से है या नहीं.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ महीनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ महीनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>months</code>: महीनों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय के बाद वाला माह अगले दो माह में से है या नहीं.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगली कुछ तिमाहियों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान तिमाही में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगली कुछ तिमाहियों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान तिमाही में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>quarters</code>: तिमाहियों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय के बाद वाली तिमाही अगली दो तिमाही में से है या नहीं.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ सप्ताह के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ सप्ताहों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>weeks</code>: सप्ताहों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय के बाद वाला सप्ताह अगले दो सप्ताहों में से है या नहीं.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ वर्षों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ वर्षों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>years</code>: वर्षों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय के बाद वाला वर्ष अगले दो वर्षों में से है या नहीं.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ दिनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ दिनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>days</code>: दिनों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय से पहले वाला दिन पिछले दो दिनों में से है या नहीं.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ महीनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ महीनों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>months</code>: महीनों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय से पहले वाला माह पिछले दो माह में से है या नहीं.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछली कुछ तिमाहियों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान तिमाही में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछली कुछ तिमाहियों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>quarters</code>: तिमाहियों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय से पहले वाली तिमाही पिछली दो तिमाही में से है या नहीं.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ सप्ताहों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ सप्ताहों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>weeks</code>: सप्ताहों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय से पहले वाला सप्ताह पिछले दो सप्ताहों में से है या नहीं.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ वर्षों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ वर्षों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>years</code>: वर्षों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्तमान सिस्‍टम समय से पहले वाला वर्ष पिछले दो वर्षों में से है या नहीं.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "datetime मान में समय क्षेत्र की जानकारी जोड़ता है.",
        "Documentation.LongDescription": "<code>dateTime</code> मान में समय क्षेत्र की जानकारी जोड़ता है. समय क्षेत्र की जानकारी में <code>timezoneHours</code> और वैकल्पिक रूप से <code>timezoneMinutes</code> शामिल है, जो UTC समय से इच्छित ऑफ़सेट निर्दिष्ट करता है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "समय क्षेत्र को UTC+7:30 (UTC के 7 घंटे और 30 मिनट बाद) पर सेट करें.",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ घंटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ घंटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>hours</code>: घंटों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का घंटा अगले दो घंटों में है.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ मिनटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ मिनटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>minutes</code>: मिनटों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का मिनट अगले दो मिनट में है.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले कुछ सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>seconds</code>: सेकंड की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का सेकंड अगले दो सेकंड में है.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ घंटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ घंटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>hours</code>: घंटों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के पहले का घंटा पिछले दो घंटों में है.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ मिनटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ मिनटों के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>minutes</code>: मिनटों की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के पहले का मिनट पिछले दो मिनट में है.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले कुछ सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      <li><code>seconds</code>: सेकंड की संख्या.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के पहले का सेकंड पिछले दो सेकंड में है.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "मान का समय क्षेत्र बदलता है.",
        "Documentation.LongDescription": "<code>timezoneHours</code> और वैकल्पिक रूप से <code>timezoneMinutes</code> द्वारा प्रदान की गई नई समय क्षेत्र जानकारी के लिए समय क्षेत्र जानकारी को datetimezone मान <code>dateTimeZone</code> में बदलता है.\r\n    अगर <code>dateTimeZone</code> में कोई समय क्षेत्र घटक नहीं है, तो एक अपवाद प्रस्तुत किया जाता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) के लिए समय क्षेत्र जानकारी को 8 घंटे में परिवर्तित करें.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) के लिए समय क्षेत्र जानकारी को -30 मिनट बदलें.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "एम्बेड किए गए मैशअप में नाम के अनुसार किसी मान तक पहुँचता है.",
        "Documentation.LongDescription": "एम्बेड किए गए मैशअप में नाम के अनुसार किसी मान तक पहुँचता है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "फ़ंक्शन के शीर्ष पर विशिष्ट मापदंड हस्ताक्षर के साथ फ़ंक्शन बनाता है जो एकल सूची तर्क लेता है",
        "Documentation.LongDescription": "यूनेरी फ़ंक्शन <code>function</code> लेता है और प्रकार <code>functionType</code> के साथ एक नया फ़ंक्शन बनाता है जो तर्कों से सूची की रचना करता है और उसे <code>function</code> ओ पास करता है.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "List.Sum जिसके तर्क एक साथ जोड़े जाते हैं को दो तर्क फ़ंक्शन में कनवर्ट करता है",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "सूची को दो-तर्क फ़ंक्शन में लेकर फ़ंक्शन को कन्वर्ट करता है",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "दिया गया फ़ंक्शन इनवोक करें",
        "Documentation.LongDescription": "तर्कों की निर्दिष्ट सूची का उपयोग करके दिए गए फ़ंक्शन इनवोक करता है और परिणाम लौटाता है.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Record.FieldNames को एक तर्क [A=1,B=2] से इनवोक करता है",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "निर्दिष्ट अवधि के गुज़र जाने के बाद दिए गए फ़ंक्शन को इनवोक करता है.",
        "Documentation.LongDescription": "अवधि <code>delay</code> के गुज़र जाने के बाद <code>function</code> इनवोक करने का परिणाम लौटाता है.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "एकाधिक इन्वोकेशन को बैच करते हुए किसी वेक्टर फ़ंक्शन के शीर्ष पर स्केलर फ़ंक्शन बनाता है.",
        "Documentation.LongDescription": "<p><code>scalarFunctionType</code> प्रकार का एक स्केलर फ़ंक्शन लौटाता है जो तर्कों की एकल पंक्ति के साथ <code>vectorFunction</code> को इनवोक करता है और अपना एकल आउटपुट लौटाता है. इसके अतिरिक्त, जब इनपुट की किसी तालिका की प्रत्येक पंक्ति के लिए स्केलर फ़ंक्शन बार-बार लागू किया जाता है, जैसे कि Table.AddColumn में, तो इसकी बजाय <code>vectorFunction</code> सभी इनपुट में एक बार लागू किया जाएगा. </p>\r\n<p><code>vectorFunction</code> ऐसी तालिका से पास किया जाएगा, जिसके स्तंभ नाम और स्थिति में <code>scalarFunctionType</code> के पैरामीटर मेल खाते हैं. इस तालिका की प्रत्येक पंक्ति में <code>scalarFunctionType</code> के पैरामीटर के अनुरूप स्तंभों के साथ स्केलर फ़ंक्शन की एक कॉल के लिए तर्क शामिल हैं.</p>\r\n<p><code>vectorFunction</code> को इनपुट तालिका की समान लंबाई वाली ऐसी सूची लौटाना अनिवार्य है, जिसकी प्रत्येक स्थिति पर आइटम का समान स्थिति की इनपुट पंक्ति पर स्केलर फ़ंक्शन का मूल्यांकन के रूप में समान परिणाम होना चाहिए.</p>\r\n<p>इनपुट तालिका का स्ट्रीम होना अपेक्षित है, इसलिए <code>vectorFunction</code> से इनपुट आते ही एक बार में इनपुट के केवल एक चंक के साथ कार्य करने वाले अपने ऑउटपुट को स्ट्रीम करना अपेक्षित है. विशेष रूप से, <code>vectorFunction</code> को अपनी इनपुट तालिका एक से अधिक बार इन्यूमरेट नहीं करना चाहिए.</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "भागों से भौगोलिक बिंदु को दर्शाने वाला एक रिकॉर्ड बनाता है.",
        "Documentation.LongDescription": "अपने घटक भाग, जैसे देशांतर, अक्षांश, और यदि मौजूद हो तो ऊँचाई (Z) और माप (M) से भौगोलिक बिंदु को दर्शाने वाला एक रिकॉर्ड बनाता. डिफ़ॉल्ट मान (4326) से भिन्न होने पर एक वैकल्पिक स्पेशल रेफ़रेंस आइडेंटिफ़ायर (SRID) दिया जा सकता है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "भागों से ज्यामितीय बिंदु दर्शाने वाला एक रिकॉर्ड बनाता है.",
        "Documentation.LongDescription": "अपने घटक भाग, जैसे X निर्देशांक, Y निर्देशांक, और यदि मौजूद हो तो Z निर्देशांक और माप (M) से ज्यामितीय बिंदु को दर्शाने वाला एक रिकॉर्ड बनाता है. डिफ़ॉल्ट मान (0) से भिन्न होने पर एक वैकल्पिक स्पेशल रेफ़रेंस आइडेंटिफ़ायर (SRID) दिया जा सकता है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "कोई पहचान बनाता है.",
        "Documentation.LongDescription": "कोई पहचान बनाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "निर्धारित करता है कि क्या कोई पहचान किसी पहचान संग्रह का एक सदस्य है.",
        "Documentation.LongDescription": "निर्धारित करता है कि क्या कोई पहचान किसी पहचान संग्रह का एक सदस्य है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "एक सूची में सभी विषम संख्या वाले ऑफ़सेट तत्वों से समाविष्ट सूची लौटाता है.",
        "Documentation.LongDescription": "एक सूची में सभी विषम संख्या वाले ऑफ़सेट तत्वों से समाविष्ट सूची लौटाता है. पैरामीटर के आधार पर सूची <code>list</code> के मान लेने और छोड़ने के बीच विकल्प प्रदान करता है.\r\n    <ul>\r\n    <li><code>count</code>: हर बार छोड़े जाने वाले मानों की संख्या निर्दिष्ट करता है.</li>\r\n    <li><code>repeatInterval</code>: यह इंगित करने के लिए एक वैकल्पिक पुनरावर्ती अंतराल कि छोड़े गए मानों के बीच में कितने मान जोड़े जाएँ.</li>\r\n    <li><code>offset</code>: आरंभिक ऑफ़सेट में मान छोड़ना शुरू करने के लिए एक वैकल्पिक ऑफ़सेट पैरामीटर.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "{1..10} से एक सूची बनाएँ जिसमें पहली संख्या छूट जाती है.",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "{1..10} से एक सूची बनाएँ जिसमें हर दूसरी संख्या छूट जाती है.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "{1..10} से एक सूची बनाएँ जो 1 से प्रारंभ होती है और जिसमें हर दूसरी संख्या छूट जाती है.",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "{1..10} से एक सूची बनाएँ जो 1 से प्रारंभ होती है, जिसमें एक मान छूट जाता है, दो मान रखे जाते हैं आदि.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "इंगित करता है कि क्या सूची में मान है.",
        "Documentation.LongDescription": "इंगित करता है कि <code>list</code> सूची में <code>value</code> मान शामिल है या नहीं.\r\n    यदि मान सूची में पाया जाता है, तो सत्य अन्यथा गलत लौटाता है. समानता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक समीकरण मानदंड मान <code>equationCriteria</code> निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "ढूँढें कि क्या सूची {1, 2, 3, 4, 5} में 3 है.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "ढूँढें कि क्या सूची {1, 2, 3, 4, 5} में 6 है.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "इंगित करता है कि क्या किसी सूची में किसी दूसरी सूची के सभी मान शामिल हैं.",
        "Documentation.LongDescription": "इंगित करता है कि क्या किसी सूची <code>list</code> में किसी दूसरी सूची, <code>values</code>, के सभी मान शामिल हैं.\r\n    अगर मान, सूची में पाया जाता है, तो true, अन्यथा false लौटाता है. गुणवत्ता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक समीकरण मापदंड मान, <code>equationCriteria</code>, निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3, 4, 5} में 3 और 4 होने पर ढूँढें.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "सूची {1, 2, 3, 4, 5} में 5 और 6 होने पर ढूँढें.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "इंगित करता है कि क्या किसी सूची में किसी दूसरी सूची का कोई भी मान शामिल है.",
        "Documentation.LongDescription": "इंगित करता है कि क्या किसी सूची <code>list</code> में किसी दूसरी सूची, <code>values</code>, का कोई भी मान शामिल है.\r\n        अगर मान, सूची में पाया जाता है, तो true, अन्यथा false लौटाता है. गुणवत्ता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक समीकरण मापदंड मान, <code>equationCriteria</code>, निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3, 4, 5} में 3 या 9 होने पर ढूँढें.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "सूची {1, 2, 3, 4, 5} में 6 या 7 होने पर ढूँढें.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "संख्याओं की दो सूचियों के बीच सहप्रसरण लौटाता है.",
        "Documentation.LongDescription": "दो सूचियों <code>numberList1</code> और <code>numberList2</code> के बीच सहप्रसरण लौटाता है. <code>numberList1</code> और <code>numberList2</code> में <code>number</code> मानों की समान संख्या होनी चाहिए.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "दो सूचियों के बीच सहप्रसरण का परिकलन करें.",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "दो दी गई सूचियों का अंतर लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list1</code> के वे आइटम लौटाता है, जो <code>list2</code> सूची में नहीं दिखाई देते हैं. डुप्लिकेट मान समर्थित हैं.\r\n    समानता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक समीकरण मानदंड मान <code>equationCriteria</code> निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3, 4, 5} में आइटम ढूँढें जो {4, 5, 3} में दिखाई नहीं देते हैं.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "सूची {1, 2} के वे आइटम प्राप्त करें जो {1, 2, 3} नहीं दिखाई देते हैं.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "मानों (रिकॉर्ड फ़ील्ड सहित) की ऐसी सूची लौटाता है जिसमें निर्दिष्ट पाठ होता है.",
        "Documentation.LongDescription": "उस सूची <code>list</code> से मानों की सूची लौटाता है जिसमें मान <code>text</code> होता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {\"a\", \"b\", \"ab\"} के वे पाठ मान प्राप्त करें जो \"a\" से मेल खाते हैं. ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "लौटाए जाने वाले आइटमों की संख्या या योग्य शर्त निर्दिष्ट करके सूची में मौजूद आइटमों का पहला सेट लौटाता है.",
        "Documentation.LongDescription": " <ul>\r\n  <li>यदि कोई संख्या निर्दिष्ट है, तो उस तक कई आइटम लौटाए जाते हैं. </li>\r\n  <li>यदि कोई शर्त निर्दिष्ट है, तो प्रारंभिक रूप से शर्त को पूरा करने वाले सभी आइटमों को लौटाया जाता है. एकबार आइटम द्वारा शर्त को पूरा न करने पर, आगे किसी भी आइटम पर विचार नहीं किया जाता है. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {3, 4, 5, -1, 7, 8, 2} के वे आरंभिक मान प्राप्त करें जो 0 से बड़े हैं.",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "अगर शर्त फ़ंक्शन सूची के सभी मानों से संतुष्ट है तो true लौटाता है.",
        "Documentation.LongDescription": "अगर शर्त फ़ंक्शन, <code>condition</code>, सूची <code>list</code> के सभी मानों से संतुष्ट है तो <code>true</code> अन्यथा <code>false</code> लौटाता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या सूची {11, 12, 13} के मान 10 से बड़े हैं.",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या सूची {1, 2, 3} के मान 10 से बड़े हैं.",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "अगर शर्त फ़ंक्शन किसी भी मान से संतुष्ट है तो true लौटाता है.",
        "Documentation.LongDescription": "अगर शर्त फ़ंक्शन, <code>condition</code>, सूची <code>list</code> के किसी भी मान से संतुष्ट है तो <code>true</code> अन्यथा <code>false</code> लौटाता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ढूँढें कि क्या सूची {9, 10, 11} का कोई भी मान 10 से बड़ा है.",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "ढूँढें कि क्या सूची {1, 2, 3} का कोई भी मान 10 से बड़ा है.",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "सूची के अधिकतम मान लौटाता है. लौटाए जाने वाले मानों की संख्या या फ़िल्टर करने की शर्त को निर्दिष्ट किया जाना चाहिए.",
        "Documentation.LongDescription": "सूची <code>list</code> के अधिकतम मान(मानों) को लौटाता है.\r\n      पंक्तियों को सॉर्ट करने के बाद परिणाम को आगे फ़िल्टर करने के लिए वैकल्पिक पैरामीटर निर्दिष्ट किए जा सकते हैं. वैकल्पिक पैरामीटर <code>countOrCondition</code> लौटाए जाने वाले मानों की संख्या या फ़िल्टर करने की शर्त निर्दिष्ट करता है. वैकल्पिक पैरामीटर <code>comparisonCriteria</code> निर्दिष्ट करता है कि सूची के मानों की तुलना कैसे करनी है.\r\n <ul>\r\n        <li> <code>list</code>: मानों की सूची.</li>\r\n        <li> <code>countOrCondition</code>:  यदि कोई संख्या निर्दिष्ट है, तो <code>countOrCondition</code> आइटमों तक की सूची आरोही क्रम में लौटाई जाती है. यदि कोई शर्त निर्दिष्ट है, तो प्रारंभिक रूप से शर्त को पूरा करने वाले आइटमों की सूची को लौटाया जाता है. एक बार आइटम द्वारा शर्त को पूरा न करने पर, आगे किसी भी आइटम पर विचार नहीं किया जाता है.</li>\r\n<li><code>comparisonCriteria</code>: <i>[वैकल्पिक]</i> यह निर्धारित करने के लिए एक वैकल्पिक <code>comparisonCriteria</code> मान निर्दिष्ट किया जा सकता है कि सूची के आइटमों की तुलना कैसे करनी है. यदि यह पैरामीटर नल है, तो डिफ़ॉल्ट तुलनाकर्ता का उपयोग किया जाता है\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "सूची के न्यूनतम मान लौटाता है. लौटाए जाने वाले मानों की संख्या या फ़िल्टर करने की शर्त को निर्दिष्ट किया जा सकता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के न्यूनतम मान(मानों) को लौटाता है.\r\n      पैरामीटर <code>countOrCondition</code> लौटाए जाने वाले मानों की संख्या या फ़िल्टर करने की शर्त निर्दिष्ट करता है. वैकल्पिक पैरामीटर <code>comparisonCriteria</code> निर्दिष्ट करता है कि सूची के मानों की तुलना कैसे करनी है.\r\n <ul>\r\n        <li> <code>list</code>: मानों की सूची.</li>\r\n        <li> <code>countOrCondition</code>:  यदि कोई संख्या निर्दिष्ट हो, तो <code>countOrCondition</code> आइटम तक की सूची आरोही क्रम में लौटाई जाती है. यदि कोई शर्त निर्दिष्ट हो, तो प्रारंभिक रूप से शर्त को पूरा करने वाले आइटम की सूची को लौटाया जाता है. एक बार आइटम द्वारा शर्त को पूरा न करने पर, आगे किसी भी आइटम पर विचार नहीं किया जाता है. यदि यह पैरामीटर नल है, तो सूची का सबसे छोटा एकल मान लौटाया जाता है.</li>\r\n<li><code>comparisonCriteria</code>: <i>[वैकल्पिक]</i> यह निर्धारित करने के लिए एक वैकल्पिक <code>comparisonCriteria</code> मान निर्दिष्ट किया जा सकता है कि सूची के आइटमों की तुलना कैसे करनी है. यदि यह पैरामीटर नल है, तो डिफ़ॉल्ट तुलनाकर्ता का उपयोग किया जाता है.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{3, 4, 5, -1, 7, 8, 2}</code> के 5 सबसे छोटे मान प्राप्त करें.",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "संख्याओं की सूची लौटाता है जिसमें प्रारंभिक मान, गणना और वैकल्पिक वृद्धि अवधि मान दिया जाता है.",
        "Documentation.LongDescription": "संख्याओं की सूची लौटाता है जिसमें प्रारंभिक मान, गणना और वैकल्पिक वृद्धि अवधि मान दिया जाता है. डिफ़ॉल्ट वृद्धि मान 1 है.\r\n<ul>\r\n   <li><code>start</code>: सूची का प्रारंभिक मान.</li>\r\n   <li><code>count</code>: बनाने के लिए मानों की संख्या.</li>\r\n   <li><code>increment</code>: <i>[वैकल्पिक]</i> वह मान जितने के अंतर से वृद्धि करनी है. अगर छोड़ दिया जाए, तो मानों में 1 के अंतर से वृद्धि की जाती है.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "1 से प्रारंभ 10 क्रमिक संख्याओं की एक सूची जनरेट करें.",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "1 से प्रारंभ 10 संख्याओं की एक सूची जनरेट करें जिसकी प्रत्येक अनुवर्ती संख्या में 2 की वृद्धि हो.",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "दी गई संभावनाओं से संबंधित एक या अधिक नमूना शतमक लौटाता है.",
        "Documentation.LongDescription": "<code>list</code> सूची का एक या अधिक नमूना शतमक लौटाता है. अगर मान <code>percentiles</code> 0.0 और 1.0 के बीच की कोई संख्या है, तो उसे शतमक के रूप में माना जाएगा और परिणाम उस संभाव्यता \r\n    से संबंधित एकल मान होगा. अगर मान <code>percentiles</code> 0.0 और 1.0 के बीच के मानों वाली संख्याओं की कोई सूची है, तो परिणाम इनपुट संभाव्यता के संगत शतमकों\r\n    की एक सूची होगी. <code>options</code> में PercentileMode विकल्प का उपयोग उन्नत उपयोगकर्ताओं द्वारा अधिक विशिष्ट इंटरपोलेशन विधि चुनने के लिए किया जाएगा लेकिन अधिकांश उपयोगकर्ताओं के लिए इसकी अनुशंसा नहीं की जाती.\r\n    पूर्वनिर्धारित प्रतीक <code>PercentileMode.ExcelInc</code> और <code>PercentileMode.ExcelExc</code>Excel फ़ंक्शन \r\n    <code>PERCENTILE.INC</code> और <code>PERCENTILE.EXC</code> द्वारा उपयोग की जाने वाली आंतरगणन विधियों से मेल खाते हैं. डिफ़ॉल्ट व्यवहार <code>PercentileMode.ExcelInc</code> से मेल खाता है. \r\n    <code>PercentileMode.SqlCont</code> और <code>PercentileMode.SqlDisc</code> प्रतीक क्रमशः <code>PERCENTILE_CONT</code> और\r\n    <code>PERCENTILE_DISC</code>के लिए SQL Server व्यवहार से मेल खाते हैं.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{5, 3, 1, 7, 9}</code> का पहला क्वार्टाइल ढूँढें.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Excel के <code>PERCENTILE.EXC</code> से मेल खाने वाली आंतरगणन विधि का उपयोग करके <code>{5, 3, 1, 7, 9}</code> सूची के क्वार्टाइल्स ढूँढें.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "सूची के मान का(के) ऑफ़सेट लौटाता है.",
        "Documentation.LongDescription": "वह ऑफ़सेट लौटाता है, जिस पर सूची <code>list</code> में <code>value</code> मान दिखाई देता है. मान के न दिखाई देने पर -1 लौटाता है.\r\n    एक वैकल्पिक आवृत्ति पैरामीटर <code>occurrence</code> निर्दिष्ट किया जा सकता है.\r\n<ul>\r\n   <li><code>occurrence</code>: रिपोर्ट होने वाली आवृत्तियों की अधिकतम संख्या.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3} की वह स्थिति प्राप्त करें, जिस पर मान 3 दिखाई देते हैं.",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "सूची के मान का पहला ऑफ़सेट लौटाता है.",
        "Documentation.LongDescription": "सूची <code>values</code> के मान की पहली आवृत्ति की सूची <code>list</code> का ऑफ़सेट लौटाता है. कोई आवृत्ति न मिलने पर -1 लौटाता है.\r\n    एक वैकल्पिक आवृत्ति पैरामीटर <code>occurrence</code> निर्दिष्ट किया जा सकता है.\r\n<ul>\r\n   <li><code>occurrence</code>: लौटाई जा सकने वाली आवृत्तियों की अधिकतम संख्या.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3} की वह पहली स्थिति प्राप्त करें, जिस पर मान 2 या 3 दिखाई देते हैं.",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "ऑफ़सेट पर शुरू होने वाली सूची का सबसेट लौटाता है.",
        "Documentation.LongDescription": "ऑफ़सेट <code>list</code> पर शुरू होने वाली सूची का सबसेट लौटाता है. एक वैकल्पिक पैरामीटर, <code>offset</code>, सबसेट के आइटमों की अधिकतम संख्या सेट करता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "1 से 10 तक की संख्याओं की सूची के ऑफ़सेट 6 पर प्रारंभ होने वाला सबसेट प्राप्त करें.",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "1 से 10 तक की संख्याओं की सूची के ऑफ़सेट 6 से लंबाई 2 का सबसेट प्राप्त करें.",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "सूची में मौजूद आइटमों को list1 से निकालता है.",
        "Documentation.LongDescription": "<code>list2</code> में दिए गए मानों की सभी आवृत्तियों को <code>list1</code> से निकालता है. अगर <code>list2</code> के मान <code>list1</code> में मौजूद नहीं हैं, तो मूल सूची को लौटाया जाता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {2, 4, 6} के आइटमों को सूची {1, 2, 3, 4, 2, 5, 5} से निकालें.",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "इनपुट मानों की सभी आवृत्तियाँ निकालता है.",
        "Documentation.LongDescription": "<code>list2</code> में दिए गए मानों की सभी आवृत्तियों को सूची <code>list1</code> से निकालता है. अगर <code>list2</code> के मान <code>list1</code> में मौजूद नहीं हैं, तो मूल सूची को लौटाया जाता है.\r\n    गुणवत्ता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक समीकरण मापदंड मान, <code>equationCriteria</code>, निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "{1, 2, 3, 4, 5, 5} से {1, 5} रहित सूची बनाएँ.",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "निर्दिष्ट स्थिति पर प्रारंभ होने वाले मानों की गणना संख्या निकालता है.",
        "Documentation.LongDescription": "निर्दिष्ट स्थिति, <code>index</code>, पर प्रारंभ होने वाले <code>list</code> के <code>count</code> मान निकालता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "अनुक्रमणिका 4 पर प्रारंभ होने वाली सूची {1, 2, 3, 4, -6, -2, -1, 5} के 3 मान निकालें.",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "एक ऐसी सूची लौटाता है जिसमें मूल सूची की गणना पुनरावृत्तियाँ होती हैं.",
        "Documentation.LongDescription": "एक ऐसी सूची लौटाता है जिसमें मूल सूची, <code>list</code>, की <code>count</code> पुनरावृत्तियाँ होती हैं.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "एक ऐसी सूची बनाएँ जिनमें {1, 2} को 3 बार दोहराया गया हो.",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "{ old, new } के प्रत्येक प्रतिस्थापन को लागू करता है.",
        "Documentation.LongDescription": "सूची <code>list</code> में दिए गए प्रतिस्थापन करता है. एक प्रतिस्थापन कार्रवाई <code>replacements</code> में एक सूची में प्रदान किए गए दो मानों, पुराना मान और नया मान, की सूची होती है.\r\n    गुणवत्ता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक समीकरण मापदंड मान, <code>equationCriteria</code>, निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "मान 5 को -5 के साथ और मान 1 को -1 के साथ प्रतिस्थापित करके {1, 2, 3, 4, 5} से एक सूची बनाएँ.",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "शर्त से मेल खाने वाले मानों की एक सूची लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के उन मानों को लौटाता है, जो चयन शर्त <code>selection</code> से मेल खाते हैं.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, -3, 4, 9, -2} के वे मान प्राप्त करें जो 0 से बड़े हैं.",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "यह निर्दिष्ट सूची को निर्दिष्ट पृष्ठ आकार का उपयोग करने वाली सूचियों की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "यह <code>list</code> को सूचियों की एक ऐसी सूची में विभाजित करता है, जहाँ आउटपुट सूची का पहला तत्व वह सूची होती है जिसमें \r\n    स्रोत सूची के प्रथम <code>pageSize</code> तत्व शामिल हों, आउटपुट सूची का अगला तत्व वह सूची होती है जिसमें स्रोत सूची के अगले <code>pageSize</code> तत्व शामिल होते हैं,इत्यादि.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "इस सूची से संगणित मानों की नई सूची लौटाता है.",
        "Documentation.LongDescription": "सूची, <code>list</code> पर ट्रांसफ़ॉर्म फ़ंक्शन <code>transform</code> लागू करके मानों की एक नई सूची लौटाता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2} के प्रत्येक मान में 1 जोड़ें.",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "दो संख्याओं के विभाजन का आर्कटेंजेंट लौटाता है.",
        "Documentation.LongDescription": "दो संख्याओं, <code>y</code> और <code>x</code>, के विभाजन का आर्कटेंजेंट लौटाता है. विभाजन को <code>y</code>/<code>x</code> के रूप में बनाया जाएगा.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "दो इनपुट के बीच बिटवाइज़ \"And\" कार्रवाई के निष्पादन का परिणाम लौटाता है.",
        "Documentation.LongDescription": "<code>number1</code> और <code>number2</code> के बीच बिटवाइज़ \"And\" कार्रवाई के निष्पादन का परिणाम लौटाता है.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "दो इनपुट के बीच बिटवाइज़ \"Or\" के निष्पादन का परिणाम लौटाता है.",
        "Documentation.LongDescription": "<code>number1</code> और <code>number2</code> के बीच बिटवाइज़ \"Or\" के निष्पादन का परिणाम लौटाता है.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "बिट सेट को बाएँ शिफ़्ट करता है.",
        "Documentation.LongDescription": "बिट <code>number2</code> की संख्या निर्दिष्ट करके, <code>number1</code> पर बिटवाइज़ बाएँ शिफ़्ट करें के निष्पादन का परिणाम लौटाता है.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "बिट सेट को दाएँ शिफ़्ट करता है.",
        "Documentation.LongDescription": "बिट <code>number2</code> की संख्या निर्दिष्ट करके, <code>number1</code> पर बिटवाइज़ दाएँ शिफ़्ट करें के निष्पादन का परिणाम लौटाता है.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "दो इनपुट के बीच बिटवाइज़ \"XOR\" (अनन्य-OR) के निष्पादन का परिणाम लौटाता है.",
        "Documentation.LongDescription": "<code>number1</code> और <code>number2</code> के बीच बिटवाइज़ \"XOR\" (अनन्य-OR) के निष्पादन का परिणाम लौटाता है.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "अद्वितीय संयोजनों की संख्या लौटाता है.",
        "Documentation.LongDescription": "आइटमों की एक सूची, <code>setSize</code> से निर्दिष्ट संयोजन आकार, <code>combinationSize</code> के साथ अद्वितीय संयोजनों की संख्या लौटाता है.\r\n<ul>\r\n    <li><code>setSize</code>: सूची के आइटमों की संख्या.</li>\r\n    <li><code>combinationSize</code>: प्रत्येक संयोजन के आइटमों की संख्या.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "जब प्रत्येक संयोजन, 3 के समूह में हों, तब कुल 5 आइटमों में से संयोजनों की संख्या प्राप्त करें.",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "दो संख्याओं को विभाजित करता है और परिणाम का पूर्णांक भाग लौटाता है.",
        "Documentation.LongDescription": "किसी संख्या <code>number1</code> को किसी अन्य संख्या <code>number2</code> से विभाजित करने पर आने वाले परिणाम का पूर्णांक भाग लौटाता है.\r\n    यदि <code>number1</code> या <code>number2</code> नल हैं, तो <code>Number.IntegerDivide</code> नल लौटाता है.\r\n      <ul>\r\n        <li><code>number1</code>: भाज्य.</li>\r\n        <li><code>number2</code>: भाजक.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "6 को 4 से विभाजित करें.",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "8.3 को 3 से विभाजित करें.",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "पूर्णांक, दो संख्याओं को विभाजित करता है और शेषफल लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का <code>divisor</code> से पूर्णांक विभाजन करने के परिणामस्वरूप प्राप्त शेषफल लौटाता है.\r\n    यदि <code>number</code> या <code>divisor</code> नल हैं, तो <code>Number.Mod</code> नल लौटाता है.\r\n      <ul>\r\n        <li><code>number</code>: भाज्य.</li>\r\n        <li><code>divisor</code>: भाजक.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "जब आप 5 को 3 से विभाजित करते हैं, तो शेषफल प्राप्त करें.",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "संख्या का क्रम संचय लौटाता है.",
        "Documentation.LongDescription": "आइटमों की संख्या, <code>setSize</code>, से निर्दिष्ट क्रम संचय आकार, <code>permutationSize</code> के साथ जनरेट किए जा सकने वाले क्रम संचयों की संख्या लौटाता है.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "कुल 5 आइटमों के 3 समूहों से क्रम संचयों की संख्या प्राप्त करें.",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "किसी संख्या को दी गई घात तक बढ़ाता है.",
        "Documentation.LongDescription": "<code>number</code> को <code>power</code> की घात तक बढ़ाने का परिणाम लौटाता है.\r\n    यदि <code>number</code> या <code>power</code> नल हैं, तो <code>Number.Power</code> नल लौटाता है.\r\n      <ul>\r\n        <li><code>number</code>: मूल.</li>\r\n        <li><code>power</code>: घातांक.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "5 का मान प्राप्त करें, जिसकी घात 3 (5 क्यूब तक) तक बढ़ी हुई हो.",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "दो संख्याओं के बीच की यादृच्छिक संख्या लौटाता है.",
        "Documentation.LongDescription": "<code>bottom</code> और <code>top</code> के बीच की यादृच्छिक संख्या लौटाता है.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "1 और 5 के बीच की यादृच्छिक संख्या प्राप्त करें.",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "किसी रिकॉर्ड में निर्दिष्ट फ़ील्ड का मान लौटाता है.",
        "Documentation.LongDescription": "<code>record</code> में निर्दिष्ट <code>field</code> का मान लौटाता है. अगर फ़ील्ड नहीं मिलता, तो एक अपवाद दिखाया जाता है.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड में फ़ील्ड \"CustomerID\" का मान ढूँढें.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "किसी रिकॉर्ड में निर्दिष्ट फ़ील्ड का मान या फ़ील्ड न मिलने पर डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "रिकॉर्ड <code>record</code> में निर्दिष्ट फ़ील्ड <code>field</code> का मान लौटाता है. अगर फ़ील्ड नहीं मिलती, तो वैकल्पिक <code>defaultValue</code> को लौटाया जाता है.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड फ़ील्ड \"फ़ोन\" का मान ढूँढें या यदि वह मौजूद नहीं है तो नल लौटाएँ.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "रिकॉर्ड में \"फ़ोन\" का मान ढूँढें या यदि वह मौजूद नहीं है तो डिफ़ॉल्ट लौटाएँ.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "ऐसा रिकॉर्ड लौटाता है, जिसमें फ़ील्ड मानों की एक सूची और फ़ील्ड का एक सेट दिया होता है.",
        "Documentation.LongDescription": "ऐसा रिकॉर्ड लौटाता है, जिसमें फ़ील्ड मानों की एक <code>list</code> और फ़ील्ड का एक सेट दिया होता है.  <code>fields</code> को पाठ मानों की किसी सूची या किसी रिकॉर्ड प्रकार द्वारा निर्दिष्ट किया जा सकता है.  अगर फ़ील्ड अद्वितीय नहीं हैं, तो एक त्रुटि दिखाई जाती है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "फ़ील्ड मानों की सूची और फ़ील्ड नामों की सूची से एक रिकॉर्ड बनाएँ.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "फ़ील्ड मानों और रिकॉर्ड प्रकार की सूची से एक रिकॉर्ड बनाएँ.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "संकेत देता है कि रिकॉर्ड में निर्दिष्ट फ़ील्ड हैं या नहीं.",
        "Documentation.LongDescription": "तार्किक मान (true या false) लौटाकर संकेत देता है कि रिकॉर्ड <code>record</code> में <code>fields</code> में निर्दिष्ट फ़ील्ड हैं या नहीं.\r\n    किसी सूची का उपयोग करके एकाधिक फ़ील्ड मान निर्दिष्ट किए जा सकते हैं.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "जाँचें कि क्या रिकॉर्ड में फ़ील्ड \"CustomerID\" है.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "जाँचें कि क्या रिकॉर्ड में फ़ील्ड \"CustomerID\" और \"पता\" है.",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "किसी रिकॉर्ड में निर्दिष्ट फ़ील्ड का मान लौटाता है.",
        "Documentation.LongDescription": "एक ऐसा रिकॉर्ड लौटाता है जो इनपुट <code>record</code> से <code>fields</code> में निर्दिष्ट सभी फ़ील्ड निकाल देता है. अगर निर्दिष्ट फ़ील्ड मौजूद नहीं है, तो एक अपवाद दिखाया जाता है.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड से फ़ील्ड \"मूल्य\" निकालें.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "रिकॉर्ड से फ़ील्ड \"मूल्य\" और \"आइटम\" निकालें.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "सूची के नाम(नामों) को { old, new } के रूप में बदलता है.",
        "Documentation.LongDescription": "इनपुट <code>record</code> की फ़ील्ड का नाम सूची <code>renames</code> में निर्दिष्ट फ़ील्ड नामों में बदलने के बाद एक रिकॉर्ड लौटाता है. एकाधिक नाम बदलने के लिए, एक नेस्टेड सूची का उपयोग किया जा सकता है ({ {old1, new1}, {old2, new2} }.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड से फ़ील्ड \"UnitPrice\" का नाम \"मूल्य\" में बदलें.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "रिकॉर्ड से फ़ील्ड \"UnitPrice\" का नाम \"मूल्य\" में और \"OrderNum\" का नाम \"OrderID\" में बदलें.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "नए क्रम में निर्दिष्ट फ़ील्ड रिकॉर्ड करता है.",
        "Documentation.LongDescription": "<code>record</code> की फ़ील्ड को सूची <code>fieldOrder</code> में निर्दिष्ट फ़ील्ड के क्रम में पुनः क्रमित करने के बाद एक रिकॉर्ड लौटाता है. फ़ील्ड मानों को बनाए रखा जाता है और <code>fieldOrder</code> में नहीं सूचीबद्ध फ़ील्ड को उनकी मूल स्थिति में छोड़ दिया जाता है.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड में कुछ फ़ील्ड पुनः क्रमित करें.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "ऐसा रिकॉर्ड लौटाता है जिसमें केवल निर्दिष्ट फ़ील्ड होती हैं.",
        "Documentation.LongDescription": "एक ऐसा रिकॉर्ड लौटाता है जिसमें इनपुट <code>record</code> से <code>fields</code> में निर्दिष्ट फ़ील्ड ही शामिल होते है.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड में फ़ील्ड \"आइटम\" और \"मूल्य\" चुनें.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "निर्दिष्ट ट्रांसफ़ॉर्मेशन लागू करने के बाद एक रिकॉर्ड लौटाता है.",
        "Documentation.LongDescription": "सूची <code>transformOperations</code> में निर्दिष्ट रूपांतरण <code>record</code> पर लागू करने के बाद एक रिकॉर्ड लौटाता है.\r\n    किसी दिए गए समय पर एक या अधिक फ़ील्ड रूपांतरित किए जा सकते हैं.\r\n      <div>किसी एकल फ़ील्ड को रूपांतरित किए जाने की स्थिति में, <code>transformOperations</code> से दो आइटम वाली सूची होना अपेक्षित है. <code>transformOperations</code> का पहला आइटम एक फ़ील्ड नाम निर्दिष्ट करता है और <code>transformOperations</code> का दूसरा आइटम रूपांतरण के लिए उपयोग किया जाने वाला फ़ंक्शन निर्दिष्ट करता है. उदाहरण के लिए, <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>एकाधिक फ़ील्ड को रूपांतरित किए जाने की स्थिति में, <code>transformOperations</code> से बहुत सारे आइटम की सूची होना अपेक्षित है, जहाँ प्रत्येक आंतरिक सूची फ़ील्ड नाम और रूपांतरण संचालन का युग्म है. उदाहरण के लिए, <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"मूल्य\" फ़ील्ड को संख्या में रूपांतरित करें.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "\"OrderID\" और \"मूल्य\" फ़ील्ड को संख्या में रूपांतरित करें.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "एक प्रकार के वर्ण से दूसरे प्रकार के वर्ण में अवस्थांतर के अनुसार, पाठ को पाठ की सूची में विभाजित करने वाले फ़ंक्शन को लौटाता है. {0} और {1} पैरामीटर या तो वर्णों की सूची हो सकते हैं या एक ऐसा फ़ंक्शन जो किसी वर्ण को लेता है और true/false लौटाता है.",
        "Documentation.LongDescription": "एक प्रकार के वर्ण से दूसरे प्रकार के वर्ण में अवस्थांतर के अनुसार, पाठ को पाठ की सूची में विभाजित करने वाले फ़ंक्शन को लौटाता है. <code>before</code> और <code>after</code> पैरामीटर या तो वर्णों की सूची हो सकते हैं या एक ऐसा फ़ंक्शन जो किसी वर्ण को लेता है और true/false लौटाता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "जब भी किसी अपर या लोअरकेस अक्षर के बाद कोई अंक हो, तो इनपुट को विभाजित करें.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "दी गई SQL क्वेरी को M कोड में रूपांतरित करता है. यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "दी गई <code>sql</code> क्वेरी को<code>environment</code> द्वारा परिभाषित पहचानकर्ताओं के साथ M कोड में रूपांतरित करता है. यह फ़ंक्शन सिर्फ़ आंतरिक उपयोग के लिए होता है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "तालिका से डेटा का एक निर्दिष्ट स्तंभ, सूची के रूप में लौटाता है.",
        "Documentation.LongDescription": "तालिका <code>table</code> से <code>column</code> द्वारा निर्दिष्ट डेटा का स्तंभ, सूची के रूप में लौटाता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में [Name] स्तंभ से मान लौटाता है.",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "ऐसे स्तंभों के नामों वाली सूची लौटाता है जिनका मिलान निर्दिष्ट प्रकारों से होता है.",
        "Documentation.LongDescription": "तालिका <code>table</code> से ऐसे स्तंभ नामों वाली सूची लौटाता है जिनका मिलान <code>listOfTypes</code> में निर्दिष्ट प्रकारों से होता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका से Number.Type प्रकार के स्तंभ के नाम लौटाएँ.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "संकेत देता है कि निर्दिष्ट रिकॉर्ड तालिका में एक पंक्ति के रूप में दिखाई देता है या नहीं.",
        "Documentation.LongDescription": "संकेत देता है कि निर्दिष्ट रिकॉर्ड, <code>row</code>, <code>table</code> में एक पंक्ति के रूप में दिखाई देता है या नहीं.\r\n    तालिका की पंक्तियों की तुलना को नियंत्रित करने के लिए कोई वैकल्पिक पैरामीटर <code>equationCriteria</code> निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या तालिका में पंक्ति है.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या तालिका में पंक्ति है.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "केवल स्तंभ [Name] से तुलना करते हुए निर्धारित करें कि क्या तालिका पंक्ति है.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "संकेत देता है कि सभी निर्दिष्ट रिकॉर्ड तालिका में पंक्तियों के रूप में दिखाई देते हैं या नहीं.",
        "Documentation.LongDescription": "संकेत देता है कि रिकॉर्ड की सूची <code>rows</code> में सभी निर्दिष्ट रिकॉर्ड, <code>table</code> में पंक्तियों के रूप में दिखाई देते हैं या नहीं.\r\n    तालिका की पंक्तियों की तुलना को नियंत्रित करने के लिए कोई वैकल्पिक पैरामीटर <code>equationCriteria</code> निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "केवल स्तंभ [CustomerID] से तुलना करते हुए निर्धारित करें कि क्या तालिका में सभी पंक्तियाँ हैं.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या तालिका में सभी पंक्तियाँ हैं.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "संकेत देता है कि कोई भी निर्दिष्ट रिकॉर्ड तालिका में पंक्तियों के रूप में दिखाई देता है या नहीं.",
        "Documentation.LongDescription": "संकेत देता है कि रिकॉर्ड की सूची <code>rows</code> में कोई भी निर्दिष्ट रिकॉर्ड, <code>table</code> में पंक्तियों के रूप में दिखाई देता है या नहीं.\r\n    तालिका की पंक्तियों की तुलना को नियंत्रित करने के लिए कोई वैकल्पिक पैरामीटर <code>equationCriteria</code> निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या तालिका <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> में <code>[a = 1, b = 2]</code> या <code>[a = 3, b = 5]</code> पंक्ति है.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या तालिका <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> में <code>[a = 1, b = 3]</code> या <code>[a = 3, b = 5]</code> पंक्ति है.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "केवल स्तंभ [a] से तुलना करते हुए निर्धारित करें कि क्या तालिका <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> में <code>[a = 1, b = 3]</code> या <code>[a = 3, b = 5]</code> पंक्ति है.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "संकेत देता है कि तालिका में निर्दिष्ट कॉलम है(हैं) या नहीं.",
        "Documentation.LongDescription": "संकेत देता है कि <code>table</code> में निर्दिष्ट कॉलम,<code>columns</code> है(हैं) या नहीं. यदि तालिका में कॉलम हैं, तो <code>true</code> आता है, या फिर <code>false</code> आता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या तालिका में [Name] स्तंभ है.",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "ढूँढें कि क्या तालिका में [Name] और [PhoneNumber] स्तंभ हैं.",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "इंगित करता है कि क्या तालिका की सभी पंक्तियाँ दी गई शर्त को पूरा करती हैं.",
        "Documentation.LongDescription": "इंगित करता है कि क्या <code>table</code> की सभी पंक्तियाँ दिए गए/दी गई <code>condition</code> को पूरा करती हैं. अगर सभी पंक्तियाँ मेल खाती हैं, तो <code>true</code> अन्यथा <code>false</code> लौटाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या तालिका [a] के सभी पंक्ति मान सम हैं.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "पता करें कि क्या तालिका <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> में सभी पंक्ति मान [a = 1, b = 2] हैं.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "इंगित करता है कि क्या तालिका की कोई भी पंक्ति दी गई शर्त को पूरा करती है.",
        "Documentation.LongDescription": "इंगित करता है कि क्या <code>table</code> की कोई भी पंक्ति दिए गए <code>condition</code> से मेल खाती है. किसी भी पंक्ति के मेल खाने पर <code>true</code> अन्यथा <code>false</code> लौटाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या तालिका <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> में स्तंभ [a] का कोई भी पंक्ति मान सम है.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "निर्धारित करें कि क्या तालिका <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> में कोई भी पंक्ति मान [a = 1, b = 2] हैं.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "दिए गए मापदंड का उपयोग करके सबसे बड़ी पंक्ति या डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "दिया गया <code>comparisonCriteria</code> का उपयोग करके, <code>table</code> की सबसे पड़ी पंक्ति लौटाता है. यदि तालिका रिक्त होती है, तो वैकल्पिक <code>default</code> मान लौटाया जाता है. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> की वह पंक्ति ढूँढें जिसके स्तंभ [a] में सबसे बड़ा मान है.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "तालिका <code>({})</code> की वह पंक्ति ढूँढें जिसके स्तंभ [a] में सबसे बड़ा मान है. यदि रिक्त है, तो -1 लौटाएँ.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "दिए गए मापदंड का उपयोग करके सबसे छोटी पंक्ति या डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "दिए गए <code>comparisonCriteria</code> का उपयोग करके, <code>table</code> की सबसे छोटी पंक्ति लौटाता है. यदि तालिका रिक्त होती है, तो वैकल्पिक <code>default</code> मान लौटाया जाता है.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "तालिका की वह पंक्ति ढूँढें जिसके स्तंभ [a] में सबसे छोटा मान है.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "तालिका की वह पंक्ति ढूँढें जिसके स्तंभ [a] में सबसे छोटा मान है. यदि रिक्त है, तो -1 लौटाएँ.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "तालिका के अंदर पंक्ति की स्थिति या स्थितियाँ लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट <code>table</code> में <code>row</code> की पहली आवृत्ति की पंक्ति स्थिति को लौटाता है. कोई आवृत्ति न मिलने पर -1 लौटाता है.\r\n    <ul>\r\n       <li><code>table</code>: इनपुट तालिका.</li>\r\n       <li><code>row</code>: स्थिति जानने के लिए तालिका में पंक्ति.</li>\r\n       <li><code>occurrence</code>: <i>[वैकल्पिक]</i> निर्दिष्ट करता है कि पंक्ति की कौन सी आवृत्तियाँ लौटानी हैं.</li>\r\n       <li><code>equationCriteria</code>: <i>[वैकल्पिक]</i> तालिका पंक्तियों के बीच तुलना को नियंत्रित करता है.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> में [a = 2, b = 4] की पहली आवृत्ति की स्थिति जानें.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "तालिका <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> में [a = 2, b = 4] की दूसरी आवृत्ति की स्थिति जानें.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "तालिका <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> में [a = 2, b = 4] की सभी आवृत्तियों की स्थिति जानें.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "तालिका के अंदर किसी भी निर्दिष्ट पंक्ति की स्थिति या स्थितियाँ लौटाता है.",
        "Documentation.LongDescription": "<code>rows</code> की सूची की पहली आवृत्ति की <code>table</code> से पंक्ति(पँक्तियों) की स्थिति(स्थितियाँ) लौटाता है. कोई आवृत्ति न मिलने पर -1 लौटाता है.\r\n    <ul>\r\n    <li><code>table</code>: इनपुट तालिका.</li>\r\n       <li><code>rows</code>:  स्थिति जानने के लिए तालिका में पंक्तियों की सूची.</li>\r\n       <li><code>occurrence</code>: <i>[वैकल्पिक]</i> निर्दिष्ट करता है कि पंक्ति की कौन सी आवृत्तियाँ लौटानी हैं.</li>\r\n       <li><code>equationCriteria</code>: <i>[वैकल्पिक]</i> तालिका पंक्तियों के बीच तुलना को नियंत्रित करता है.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "तालिका <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> में [a = 2, b = 4] या [a = 6, b = 8] की पहली आवृत्ति की स्थिति जानें.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "तालिका <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code> में [a = 2, b = 4] या [a = 6, b = 8] की सभी आवृत्तियों की स्थिति जानें.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "यह निर्दिष्ट तालिका को निर्दिष्ट पेज आकार का उपयोग करके तालिकाओं की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "यह <code>table</code> को तालिकाओं की एक ऐसी सूची में विभाजित करता है, जहाँ सूची का पहला तत्व वह तालिका होती है जिसमें \r\n    स्रोत तालिका की प्रथम <code>pageSize</code> पंक्तियाँ शामिल हों, सूची का अगला तत्व वह तालिका होती है जिसमें स्रोत तालिका की अगली <code>pageSize</code> पंक्तियाँ शामिल होती हैं,इत्यादि.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "पाँच रिकॉर्ड तालिकाओं को दो अलग-अलग रिकॉर्ड तालिकाओं में विभाजित करें.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "ऐसी सूची लौटाता है जिसमें निर्दिष्ट पहली गणना पंक्तियाँ और शेष पंक्तियाँ शामिल हैं.",
        "Documentation.LongDescription": "दो तालिकाओं वाली सूची लौटाता है: <code>table</code> की पहली N पंक्तियों वाली एक तालिका (जैसा कि <code>count</code> द्वारा निर्दिष्ट) और <code>table</code> की शेष पंक्तियों वाली तालिका.\r\n\r\nयदि परिणामी सूची की तलिकाओं की बिल्कुल एक बार प्रगणना की जाती हैं, तो फ़ंक्शन केवल एक बार <code>table</code> की गणना करेगा.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पहली दो पंक्तियों और तालिका की शेष पंक्तियों को वापस करें.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "निर्दिष्ट ट्रांसफ़ॉर्म फ़ंक्शन का उपयोग करके तालिका की पंक्तियों को ट्रांसफ़ॉर्म करता है.",
        "Documentation.LongDescription": "<code>table</code> की प्रत्येक पंक्ति में <code>transform</code> कार्रवाई लागू करके <code>सूची</code> बनाता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पंक्तियों को संख्याओं की सूची में रूपांतरित करें.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "संख्यात्मक तालिका की पंक्तियों को पाठ अभिलेखों में रूपांतरित करें.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "निर्दिष्ट <code>delimiter</code> के बाद <code>text</code> का भाग लौटाता है.\r\n    वैकल्पिक सांख्यिक <code>index</code> इंगित करता है कि <code>delimiter</code> की किस आवृत्ति पर विचार करना चाहिए.\r\n    वैकल्पिक सूची <code>index</code> इंगित करती है कि <code>delimiter</code> की किस आवृत्ति पर विचार किया जाना चाहिए, साथ ही साथ यह कि इनपुट के प्रारंभ या उसकी समाप्ति से इंडेक्सिंग संपन्न करना चाहिए या नहीं.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "(पहले) हायफ़न के बाद \"111-222-333\" का भाग प्राप्त करें.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "दूसरे हायफ़न के बाद \"111-222-333\" का भाग प्राप्त करें.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "अंतिम से दूसरे हायफ़न के बाद \"111-222-333\" का भाग प्राप्त करें.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "वर्ण को निर्दिष्ट स्थिति पर लौटाता है.",
        "Documentation.LongDescription": "वर्ण को स्थिति <code>index</code> पर पाठ मान, <code>text</code> में लौटाता है. पाठ में प्रथम वर्ण स्थिति 0 पर है.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "स्ट्रिंग \"Hello, World\" में स्थिति 4 पर वर्ण का पता करें.",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "निर्दिष्ट <code>delimiter</code> से पहले <code>text</code> का भाग लौटाता है.\r\n    एक वैकल्पिक संख्यिक <code>index</code> इंगित करता है कि <code>delimiter</code> की किस आवृत्ति पर विचार करना चाहिए.\r\n    एक वैकल्पिक सूची <code>index</code> इंगित करती है कि <code>delimiter</code> की किस आवृत्ति पर विचार किया जाना चाहिए, साथ ही साथ यह कि इनपुट के प्रारंभ या उसकी समाप्ति से अनुक्रमणिका संपन्न करना चाहिए या नहीं.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "(पहले) हायफ़न से पहले \"111-222-333\" का भाग प्राप्त करें.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "दूसरे हायफ़न से पहले \"111-222-333\" का भाग प्राप्त करें.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "अंतिम से दूसरे हायफ़न से पहले \"111-222-333\" का भाग प्राप्त करें.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "यदि पाठ में सबस्ट्रिंग है तो लौटाता है.",
        "Documentation.LongDescription": "पता लगाता है कि <code>text</code> में मान <code>substring</code> है या नहीं. यदि मान मिलता है, तो ट्रू वापस करता है. यह फ़ंक्शन वाइल्डकार्ड या नियमित अभिव्यक्ति का समर्थन नहीं करता है.\r\n      <br>\r\n      <br>\r\n      वैकल्पिक तर्क <code>comparer</code> का उपयोग केस-असंवेदनशील या कल्चर और लोकेल-संवेदी तुलनाओं को निर्दिष्ट करने के लिए उपयोग किया जा सकता है.\r\n      निम्नलिखित बिल्ट-इन तुलनाकर्ता सूत्र भाषाओं में उपलब्ध है:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: केस-संवेदनशील सटीक तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: केस-असंवेदनशील क्रम तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n        <li> <code>Comparer.FromCulture</code>: कल्चर-संवेदी तुलना करने के लिए उपयोग किया गया</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "पते करें कि क्या पाठ \"Hello World\" में \"Hello\" शामिल है.",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "पते करें कि क्या पाठ \"Hello World\" में \"hello\" शामिल है.",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "केस-असंवेदी तुलनाकर्ता का उपयोग करके ढूँढना कि क्या पाठ \"नमस्ते दुनिया\" में \"नमस्ते\" शामिल है.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "पाठ के अंतिम वर्ण लौटाता है.",
        "Documentation.LongDescription": "एक <code>text</code> मान लौटाता है जो <code>text</code> मान <code>text</code> का अंतिम <code>count</code> वर्ण है.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "पाठ \"Hello, World\" के अंतिम 5 वर्ण प्राप्त करें.",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "इंगित करता है कि क्या पाठ निर्दिष्ट मान पर समाप्त होता है.",
        "Documentation.LongDescription": "बताता है कि दिया गया पाठ, <code>text</code>, निर्दिष्ट मान से समाप्त होता है या नहीं, <code>substring</code>. संकेत केस संवेदनशील है.\r\n\r\n      <div>\r\n        <code>comparer</code> एक <code>Comparer</code> है जिसका तुलना को नियंत्रित करने के लिए उपयोग किया जाता है. तुलनाकर्ता केस-असंवेदनशील या कल्चर और लोकेल-संवेदी तुलना प्रदान करने के लिए उपयोग किए जा सकते हैं.\r\n      </div>\r\n      <div>\r\n          निम्नलिखित बिल्ट-इन तुलनाकर्ता सूत्र भाषा में उपलब्ध है:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: सटीक क्रम तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: सटीक क्रम केस-असंवेदनशील तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n        <li> <code>Comparer.FromCulture</code>: कल्चर-संवेदी तुलना करने के लिए उपयोग किया गया</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "जाँचें कि क्या \"Hello, World\", \"world\" पर समाप्त होता है.",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "जाँचें कि क्या \"Hello, World\", \"World\" पर समाप्त होता है.",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "फ़ॉर्मेट स्ट्रिंग और तर्कों से फ़ॉर्मेट किया गया पाठ लौटाता है.",
        "Documentation.LongDescription": "ऐसा फ़ॉर्मेट किया गया पाठ लौटाता है, जिसे स्ट्रिंग <code>formatString</code> को फ़ॉर्मेट करने के लिए सूची या रिकॉर्ड से <code>arguments</code> को लागू करके बनाया गया है. वैकल्पिक <code>culture</code> प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "संख्या सूची फ़ॉर्मेट करें.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "संयुक्त राज्य अंग्रेज़ी कल्चर के अनुसार रिकॉर्ड से भिन्न डेटा प्रकारों को फ़ॉर्मेट करें.",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "किसी निश्चित लंबाई तक की सबस्ट्रिंग लौटाता है.",
        "Documentation.LongDescription": "<code>count</code> वर्ण, या <code>text</code> के अंत के बाद से लौटाता है; ऑफ़सेट <code>start</code> पर.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "अनुक्रमणिका 6 से आरंभ होने वाले 5 वर्ण तक विस्तृत पाठ \"Hello World\" से सबस्ट्रिंग ढूँढें.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "अनुक्रमणिका 6 से आरंभ होकर अंत तक पाठ \"Hello World\" से सबस्ट्रिंग ढूँढें.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "दिए गए पाठ के अंत को पैड करके निर्दिष्ट लंबाई वाले पाठ को लौटाता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> के अंत में स्थान सम्मिलित करके <code>count</code> लंबाई पर पैड किए गए एक <code>पाठ</code> मान को लौटाता है.\r\n    पैडिंग के लिए उपयोग किए गए वर्ण को निर्दिष्ट करने हेतु एक वैकल्पिक वर्ण <code>character</code> का उपयोग किया जा सकता है. डिफ़ॉल्ट पैड वर्ण एक स्थान है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान के अंत को पैड करें ताकि वह 10 वर्ण लंबा हो.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "पाठ मान के अंत को \"|\" द्वारा पैड करें ताकि वह 10 वर्ण लंबा हो.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "दिए गए पाठ के प्रारंभ को पैड करके निर्दिष्ट लंबाई वाले पाठ को लौटाता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> के प्रारंभ में स्थान सम्मिलित करके <code>count</code> लंबाई पर पैड किए गए एक <code>पाठ</code> मान को लौटाता है.\r\n    पैडिंग के लिए उपयोग किए गए वर्ण को निर्दिष्ट करने हेतु एक वैकल्पिक वर्ण <code>character</code> का उपयोग किया जा सकता है. डिफ़ॉल्ट पैड वर्ण एक स्थान है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान के प्रारंभ को पैड करें ताकि वह 10 वर्ण लंबा हो.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "पाठ मान के प्रारंभ को \"|\" द्वारा पैड करें ताकि वह 10 वर्ण लंबा हो.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "मान की प्रथम स्थिति को लौटाता है (यदि -1 नहीं मिला होता है).",
        "Documentation.LongDescription": "<code>text</code> में मिले पाठ मान <code>substring</code> की निर्दिष्ट आवृत्ति की स्थिति वापस करता है.\r\n    वैकल्पिक पैरामीटर <code>occurrence</code> का यह निर्दिष्ट करने के लिए उपयोग किया जा सकता है कि कौन-सी आवृत्ति स्थिति वापस की जाती है (डिफ़ॉल्ट के रूप से पहली आवृत्ति).\r\n    यदि <code>substring</code> नहीं मिलता तो, -1 वापस करता है.\r\n\r\n      <div>\r\n        <code>comparer</code> एक <code>Comparer</code> है जिसका तुलना को नियंत्रित करने के लिए उपयोग किया जाता है. तुलनाकर्ता केस-असंवे दनशील या कल्चर और लोकेल-संवेदी तुलना प्रदान करने के लिए उपयोग किए जा सकते हैं.\r\n      </div>\r\n      <div>\r\n          निम्नलिखित बिल्ट-इन तुलनाकर्ता सूत्र भाषा में उपलब्ध है:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: सटीक क्रम तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: सटीक क्रम केस-असंवेदनशील तुलना पूरी करने के लिए उपयोग किया गया</li>\r\n        <li> <code>Comparer.FromCulture</code>: कल्चर-संवेदी तुलना करने के लिए उपयोग किया गया</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "पाठ \"Hello, World! में \"World\" की पहली आवृति की स्थिति पता करें Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "\"Hello, World! Hello, World!\" में \"World\" की अंतिम आवृति की स्थिति प्राप्त करें.",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "किसी भी सूचीबद्ध वर्ण के पाठ मान की प्रथम स्थिति को लौटाता है (यदि -1 नहीं मिला होता है).",
        "Documentation.LongDescription": "<code>text</code> में पाई जाने वाली सूची <code>characters</code> के किसी भी वर्ण की पहली स्थिति लौटाता है.\n    एक वैकल्पिक पैरामीटर <code>occurrence</code> का उपयोग यह निर्दिष्ट करने के लिए किया जा सकता है कि किस आवृति स्थिति को लौटाना है.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "पाठ \"Hello, World!\" में \"W\" या \"H\" की पहली स्थिति पता करें.",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "टेक्स्ट \"Hello, World!\" में \"W\" या \"H\" की सभी स्थितियाँ ढूँढें.",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "ऑफ़सेट पाया गया सबस्ट्रिंग लौटाता है.",
        "Documentation.LongDescription": "ऑफ़सेट <code>offset</code> पर पाए गए सबस्ट्रिंग को पाठ <code>text</code> से लौटाता है.\r\n    एक वैकल्पिक पैरामीटर <code>count</code> को यह निर्दिष्ट करने के लिए शामिल किया जा सकता है कि कितने वर्ण लौटाने हैं. पर्याप्त वर्ण नहीं होने पर त्रुटि दिखाता है.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "अनुक्रमणिका 6 से प्रारंभ होने वाले पाठ \"Hello World\" से सबस्ट्रिंग ढूँढें.",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "5 वर्ण विस्तार करते हुए अनुक्रमणिका 6 से प्रारंभ होने वाले पाठ \"Hello World Hello\" से सबस्ट्रिंग ढूँढें.",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "इनपुट पाठ मान से दिए गए वर्ण या वर्णों की सूची की सभी आवृत्तियों को निकालता है.",
        "Documentation.LongDescription": "<code>removeChars</code> से निकाले गए सभी वर्णों के साथ पाठ मान <code>text</code> की प्रति लौटाता है.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान से वर्ण और ; निकालें.",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "किसी दिए गए ऑफ़सेट से वर्णों की गिनती को निकालता है",
        "Documentation.LongDescription": "स्थिति <code>offset</code> से निकाले गए सभी वर्णों के साथ पाठ मान <code>text</code> की प्रतिलिपि लौटाता है.\r\n    निकाले जाने वाले वर्णों की संख्या को निर्दिष्ट करने के लिए एक वैकल्पिक पैरामीटर <code>count</code> का उपयोग किया जा सकता है. <code>count</code> का डिफ़ॉल्ट मान 1 है. स्थिति मान 0 से प्रारंभ होते हैं.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "स्थिति 2 पर पाठ मान \"ABEFC\"से 1 वर्ण निकालें.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "स्थिति 2 पर प्रारंभ होने वाले पाठ मान \"ABEFC\"से दो वर्ण निकालें.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "इनपुट की निर्दिष्ट बार दोहराई गई पंक्तियों के साथ एक तालिका लौटाता है.",
        "Documentation.LongDescription": "<code>count</code> बार दोहराए गए इनपुट पाठ <code>text</code> द्वारा संयोजित पाठ मान को लौटाता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "पाठ \"a\" को पाँच बार दोहराएँ.",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "पाठ \"helloworld\" को तीन बार दोहराएँ.",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "इनपुट पाठ मान से दिए गए वर्ण या वर्णों की सूची की सभी आवृत्तियों को चयनित करता है।",
        "Documentation.LongDescription": "निकाले गए <code>selectChars</code> में नहीं मौजूद सभी वर्णों के साथ पाठ मान <code>text</code> की प्रतिलिपि लौटाता है।  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान से 'ए' से लेकर 'ज़ेड' की श्रेणी में सभी वर्णों का चयन करें।",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "पाठ को निर्दिष्ट डीलिमिटर के आधार पर पाठ मानों की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "निर्दिष्ट डिलिमिटर <code>separator</code> के आधार पर पाठ मान <code>text</code> के विभाजित होने के परिणामस्वरूप प्राप्त होने वाले पाठ मानों की सूची लौटाता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"|\" डिलिमिटेड पाठ मान \"Name|Address|PhoneNumber\" से सूची बनाएँ.",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "डिलिमिटर में किसी भी वर्ण पर विभाजित पाठ मानों की सूची लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट डिलिमिटर <code>separators</code> में किसी भी वर्ण के आधार पर पाठ मान <code>text</code> के विभाजित होने के परिणामस्वरूप प्राप्त होने वाले पाठ मानों की सूची लौटाता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\" से सूची बनाएँ.",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "पाठ का प्रारंभ लौटाता है.",
        "Documentation.LongDescription": "पाठ मान के रूप में <code>text</code> के प्रथम <code>count</code> वर्ण लौटाता है.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "\"Hello, World\" के प्रथम 5 वर्ण प्राप्त करें.",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "इंगित करता है कि पाठ निर्दिष्ट मान से प्रारंभ हुआ है या नहीं.",
        "Documentation.LongDescription": "यदि पाठ मान <code>text</code> पाठ मान <code>substring</code> से प्रारंभ होता है, तो ट्रू वापस करता है.\r\n      <ul>\r\n        <li><code>text</code>: <i></i> एक <code>text</code> मान है जिसकी खोज करना है</li>\r\n        <li><code>substring</code>: <i></i> एक <code>पाठ</code> मान है जिसका <code>substring</code> में सबस्ट्रिंग की खोज करने के लिए </li>\r\n        <li><code>comparer</code>: <i>[Optional]</i> एक <code>तुलनाकर्ता</code> का तुलना नियंत्रित करने के लिए उपयोग किया जाता है. उदाहरण के लिए, <code>Comparer.OrdinalIgnoreCase</code> का केस-असंवेदनशील खोज पूरी करने के लिए उपयोग किया जा सकता है</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> एक <code>Comparer</code> है जिसका तुलना को नियंत्रित करने के लिए उपयोग किया जाता है. तुलनाकर्ता केस-असंवेदी या कल्चर और लोकेल-संवेदी तुलना प्रदान करने के लिए उपयोग किए जा सकते है.\r\n      </div>\r\n      <div>\r\n        निम्नलिखित बिल्ट-इन तुलनाकर्ता सूत्र भाषा में उपलब्ध है:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: सटीक क्रम तुलना पूरी करने के लिए उपयोग किया जाता है</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: सटीक क्रम केस-असंवेदनशील तुलना पूरी करने के लिए उपयोग किया जाता है.</li>\r\n        <li> <code>Comparer.FromCulture</code>: कल्चर-संवेदी तुलना पूरी करने के लिए उपयोग किया जाता है</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "जाँचें कि क्या पाठ \"Hello, World\" पाठ \"hello\" से प्रारंभ होता है.",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "जाँचें कि क्या पाठ \"Hello, World\" पाठ \"Hello\" से प्रारंभ होता है.",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "उस प्रकार को लौटाता है जो विशिष्ट पैरामीटर और वापसी प्रकार प्रतिबंध वाले फ़ंक्शन का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "<code>signature</code> से <code>फ़ंक्‍शन प्रकार</code>, <code>ReturnType</code> और <code>पैरामीटर</code> का रिकॉर्ड, और <code>min</code>, फ़ंक्‍शन को इनवोक करने के लिए आवश्‍यक तर्कों की न्‍यूनतम संख्‍या बनाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "किसी फ़ंक्शन के लिए ऐसे प्रकार बनाता है जो X नाम वाला पैरामीटर लेता है और कोई संख्या लौटाता है।",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "उस प्रकार को लौटाता है जो फ़ील्ड्स पर विशिष्ट प्रकार के प्रतिबंधों के साथ रिकॉर्ड्स का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "उस प्रकार को लौटाता है जो फ़ील्ड्स पर विशिष्ट प्रकार के प्रतिबंधों के साथ रिकॉर्ड्स का प्रतिनिधित्व करता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "गतिशील रूप से तालिका प्रकार जनरेट करें.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "निर्धारित करता है कि क्या प्रथम प्रकार का कोई मान हमेशा द्वितीय प्रकार के साथ संगत होता है.",
        "Documentation.LongDescription": "यह निर्धारित करता है कि क्या <code>type1</code> का कोई मान हमेशा <code>type2</code> के साथ संगत है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या प्रकार नंबर के किसी मान को हमेशा कोई भी प्रकार के रूप में भी माना जा सकता है.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या प्रकार के किसी मान को हमेशा प्रकार नंबर के रूप में भी माना जा सकता है.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "किसी प्रकार के फ़ैसिट बदल देता है.",
        "Documentation.LongDescription": "<code>type</code> प्रकार के फ़ैसिट को रिकॉर्ड <code>facets</code> में शामिल फ़ैसिट के साथ बदल देता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "कुंजियों की निर्दिष्ट की गई सूची द्वारा प्रतिस्थापित सभी कुंजियों के साथ एक नई तालिका प्रकार लौटाता है.",
        "Documentation.LongDescription": "कुंजियों की निर्दिष्ट सूची द्वारा प्रतिस्थापित सभी कुंजियों के साथ एक नया तालिका प्रकार लौटाता है.<br>\r\n    <br>\r\n    प्रत्येक कुंजी को निम्नलिखित रूप में एक रिकॉर्ड का उपयोग करके परिभाषित किया गया है:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: कॉलम नामों की एक सूची जो कुंजी \r को परिभाषित करती है\n      </li>\r\n      <li>\r\n        <code>प्राथमिक</code>: <code>सही</code> यदि कुंजी तालिका की प्राथमिक कुंजी है; अन्यथा, <code>गलत</code>\r\n      </li>\r\n    </ul>\r\n    कुंजियों की निर्दिष्ट सूची को यह सुनिश्चित करने के लिए मान्य किया गया है कि एक से अधिक प्राथमिक कुंजी परिभाषित नहीं की गई है और सभी कुंजी कॉलम नाम तालिका प्रकार पर मौजूद हैं.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "तालिका प्रकार पर मुख्य जानकारी बदलें.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "तालिका प्रकार पर पहले से परिभाषित मुख्य जानकारी साफ़ करें.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "तालिका में स्तंभ का प्रकार लौटाता है.",
        "Documentation.LongDescription": "तालिका प्रकार <code>tableType</code> में स्तंभ <code>column</code> का प्रकार लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "एक पूर्ण URI लौटाता है जो इनपुट आधारित URI और रिलेटिव URI का संयोजन होता है.",
        "Documentation.LongDescription": "एक पूर्ण URI लौटाता है जो इनपुट <code>baseUri</code> और <code>relativeUri</code> का संयोजन होता है.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "दो मानों का योग लौटाता है.",
        "Documentation.LongDescription": "<code>value1</code> और <code>value2</code> का योग लौटाता है. एक वैकल्पिक पैरामीटर, <code>precision</code>, भी निर्दिष्ट किया जा सकता है, डिफ़ॉल्ट रूप से <code>Precision.Double</code> का उपयोग किया जाता है.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "मान लौटाता है यदि यह निर्दिष्ट प्रकार के साथ संगत हो.",
        "Documentation.LongDescription": "मान लौटाता है यदि यह निर्दिष्ट प्रकार के साथ संगत हो. यह M में \"है\" ऑपरेटर के समकक्ष है, इस अपवाद के साथ कि यह Number. Type जैसे पहचानकर्ता प्रकार संदर्भों को स्वीकार कर सकता है.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "एक नंबर को किसी नंबर में कास्ट करें.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "किसी नंबर पर पाठ मान कास्ट करने की कोशिश करें.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "पहला मान दूसरे मान से कम, बराबर या अधिक है या नहीं, इसके आधार पर -1, 0, या 1 लौटाता है.",
        "Documentation.LongDescription": "पहला मान दूसरे मान से कम, बराबर या अधिक है या नहीं, इसके आधार पर -1, 0, या 1 लौटाता है.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "पहले मान को दूसरे मान द्वारा विभाजित करने पर प्राप्त होने वाले परिणाम को लौटाता है.",
        "Documentation.LongDescription": "<code>value1</code> का <code>value2</code> द्वारा भाग देने पर प्राप्त परिणाम को लौटाता है. एक वैकल्पिक पैरामीटर, <code>precision</code>, भी निर्दिष्ट किया जा सकता है, डिफ़ॉल्ट रूप से <code>Precision.Double</code> का उपयोग किया जाता है.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "लौटाता है कि क्या दो मान बराबर हैं या नहीं.",
        "Documentation.LongDescription": "अगर मान <code>value1</code> मान <code>value2</code> के बराबर है, तो true, अन्यथा false लौटाता है.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "निर्धारित करता है कि क्या कोई मान निर्दिष्ट प्रकार के साथ संगत है.",
        "Documentation.LongDescription": "यह निर्धारित करता है कि क्या कोई मान निर्दिष्ट प्रकार के साथ संगत है. यह M में \"है\" ऑपरेटर के समकक्ष है, इस अपवाद के साथ कि यह Number. Type जैसे पहचानकर्ता प्रकार संदर्भों को स्वीकार कर सकता है.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "क्या कोई नंबर, प्रकार नंबर के साथ संगत है, यह निर्धारित करने के दो तरीकों की तुलना करें.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "दो मानों का गुणनफल लौटाता है.",
        "Documentation.LongDescription": "<code>value1</code> का <code>value2</code> से गुणा कर गुणनफल लौटाता है. एक वैकल्पिक पैरामीटर, <code>precision</code> भी निर्दिष्ट किया जा सकता है, डिफ़ॉल्ट रूप से <code>Precision.Double</code> का उपयोग किया जाता है.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "किसी लक्ष्य के सापेक्ष किसी क्वेरी का मूल्यांकन करती है.",
        "Documentation.LongDescription": "<p><code>parameters</code> में निर्दिष्ट पैरामीटर्स और <code>options</code> में निर्दिष्ट विकल्पों का उपयोग करके <code>target</code>के लिए <code>query</code> का मूल्यांकन करता है.</p>\r\n<p>क्वेरी का आउटपुट <code>target</code> द्वारा परिभाषित किया जाता है.</p>\r\n<p><code>target</code> उस कार्रवाई के लिए संदर्भ प्रदान करता है जो <code>query</code> के द्वारा वर्णित होती है.</p>\r\n<p><code>query</code> उस क्वेरी का वर्णन करता है जो <code>target</code> के लिए निष्पादित की जानी है. <code>query</code> को <code>target</code> के लिए एक विशिष्ट तरीके से अभिव्यक्त किया जाता है (उदाहरण के लिए, कोई T-SQL Statement).</p>\r\n<p>वैकल्पिक <code>parameters</code> मान में <code>query</code> द्वारा अपेक्षित पैरामीटर मानों की आपूर्ति करने के लिए उपयुक्त रूप में या तो कोई सूची या रिकॉर्ड शामिल हो सकता है.</p>\r\n<p>वैकल्पिक <code>options</code> रिकॉर्ड में ऐसे विकल्प हो सकते हैं जो <code>target</code> के सामने <code>query</code> के मूल्यांकन व्यवहार को प्रभावित करते हैं. ये विकल्प <code>target</code> के लिए विशिष्ट होते हैं.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "लौटाता है कि क्या दो मान बराबर हैं या नहीं.",
        "Documentation.LongDescription": "अगर '<code>value1</code>', '<code>value2</code> में से कोई भी एक तर्क नल है तो नल, अन्यथा Value.Equals के समतुल्य लौटाता है.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "इनपुट के मेटाडेटा जानकारी को प्रतिस्थापित करता है.",
        "Documentation.LongDescription": "इनपुट के मेटाडेटा जानकारी को प्रतिस्थापित करता है.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "मान के प्रकार को बदलता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>type</code> से <code>value</code> का प्रकार बदलता है.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "अधिक विशिष्ट प्रकार से रिकॉर्ड का डिफ़ॉल्ट प्रकार बदलें.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "दो मानों का अंतर लौटाता है.",
        "Documentation.LongDescription": "<code>value1</code> और <code>value2</code> का अंतर लौटाता है. एक वैकल्पिक पैरामीटर <code>precision</code> भी निर्दिष्ट किया जा सकता है, डिफ़ॉल्ट रूप से <code>Precision.Double</code> का उपयोग किया जाता है.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "क्रियान्वित किए जाने पर, एक क्रिया निर्मित करता है, जो एक HTTP अनुरोध को बाइनरी मान के रूप में निष्पादित करने के परिणाम वापस करेगी.",
        "Documentation.LongDescription": "ऐसी कार्रवाई बनाता है, जो निष्पादित होने पर HTTP का बाइनरी मान के रूप में उपयोग करके <code>url</code> के विरुद्ध <code>method</code> अनुरोध पूरा करने के परिणाम वापस करेगा.\r\n    वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड हो सकती हैं:\r\n    <ul>\r\n<li><code>Query</code> : एस्केपिंग के बारे में चिंता किए बिना, प्रोग्राम द्वारा URL में क्वेरी पैरामीटर जोड़ें.</li>\r\n<li><code>ApiKeyName</code> : यदि लक्ष्य साइट में एक API कुंजी की धारणा है, तो इस पैरामीटर का उपयोग उस कुंजी पैरामीटर के नाम (न मान) को निर्दिष्ट करने के लिए किया जा सकता है जिसका उपयोग URL में किया जाना चाहिए. क्रेडेंशियल में वास्तविक कुंजी मान प्रदान किया गया है.</li>\r\n<li><code>Headers</code> : इस मान को रिकॉर्ड के रूप में निर्दिष्ट करने से किसी HTTP अनुरोध पर अतिरिक्त शीर्ष लेख प्रदान होंगे.</li>\r\n<li><code>Timeout</code> : इस मान को अवधि के रूप में निर्दिष्ट करना HTTP अनुरोध के लिए टाइमआउट को बदल देगा. डिफ़ॉल्ट मान १०० सेकंड है.</li>\r\n<li><code>ExcludedFromCacheKey</code> : इस मान को सूची के रूप में निर्दिष्ट करने से इन HTTP शीर्षलेख कुंजियों को डेटा कैशिंग के लिए परिकलन का भाग होने से बाहर किया जा सकेगा.</li>\r\n<li><code>IsRetry</code> : इस लॉजिकल मान को true के रूप में निर्दिष्ट करने से डेटा फ़ेच करते समय कैश में मौजूद किसी भी मौजूदा प्रतिसाद को अनदेखा कर दिया जाता है.</li>\r\n<li><code>ManualStatusHandling</code> : इस मान को सूची के रूप में निर्दिष्ट करने से उन HTTP अनुरोधों के लिए कोई भी अंतर्निहित हैंडलिंग को रोका जा सकेगा जिनके प्रतिसाद में इनमें से एक स्थिति कोड है.</li>\r\n<li><code>RelativePath</code> : इस मान को पाठ के रूप में निर्दिष्ट करने से अनुरोध करने से पहले उसे आधार URL में जोड़ता है.</li>\r\n<li><code>Content</code> : इस मान को निर्दिष्ट करने से उसकी सामग्रियाँ HTTP अनुरोध के मुख्य भाग के रूप में उत्पन्न हो जाएँगी.</li>\r\n</ul>\r\n\r\n    <br>\r\n    ध्यान दें कि यह फ़ंक्शन अधिकांश संदर्भ में अक्षम है. इसके बजाय Web.Contents या Web.Headers का उपयोग करने पर विचार करें.\r\n    ",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "Bing के विरुद्ध GET अनुरोध पूरा करें.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "अपने नामांकन से संबंधित Azure Enterprise REST API समाप्ति बिंदु का URL दर्ज करें",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Azure Enterprise API के लिए प्रदत्त url हेतु कॉल के बाइनरी परिणाम लौटाता है.",
        "Documentation.Examples": [
          {
            "Description": "किसी विशिष्ट रिपोर्ट के परिणाम लौटाने के लिए AzureEnterprise.Contents फ़ंक्शन का उपयोग करना.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "तालिका"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "Azure संग्रहण कोष्ठ से निर्दिष्ट ब्लॉब की सामग्री देता है।",
        "Documentation.LongDescription": "किसी Azure संग्रहण कोष्ठ से, URL <code>url</code> पर ब्लॉब की सामग्री लौटाता है. निम्नलिखित विकल्पों को नियंत्रित करने के लिए, <code>options</code> निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n<li><code>BlockSize</code> : डेटा उपभोक्ता की प्रतीक्षा करने से पहले पढ़ने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>RequestSize</code> : सर्वर से एक ही HTTP अनुरोध में पढ़ने का प्रयास करने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests विकल्प स्मृति के उपयोग की लागत पर समानांतर रूप से किए जाने वाले अनुरोधों की संख्या निर्दिष्ट करके, डेटा को तेजी से डाउनलोड करने का समर्थन करता है. आवश्यक मेमोरी (ConcurrentRequest * RequestSize) है. डिफ़ॉल्ट मान 16 है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "किसी Azure Data Lake Storage फ़ाइल सिस्टम से निर्दिष्ट फ़ाइल की सामग्री लौटाता है.",
        "Documentation.LongDescription": "एक Azure डेटा लेक संग्रहण फ़ाइल सिस्टम से URL की फ़ाइल की सामग्री, <code>url</code> पर लौटाता है. निम्नलिखित विकल्पों को नियंत्रित करने के लिए <code>options</code> को निर्दिष्ट किया जा सकता है: \r\n    <ul>\r\n<li><code>BlockSize</code> : डेटा उपभोक्ता की प्रतीक्षा करने से पहले पढ़ने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>RequestSize</code> : सर्वर से एक ही HTTP अनुरोध में पढ़ने का प्रयास करने के लिए बाइट्स की संख्या. डिफ़ॉल्ट मान 4 MB है.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests विकल्प स्मृति के उपयोग की लागत पर समानांतर रूप से किए जाने वाले अनुरोधों की संख्या निर्दिष्ट करके, डेटा को तेजी से डाउनलोड करने का समर्थन करता है. आवश्यक मेमोरी (ConcurrentRequest * RequestSize) है. डिफ़ॉल्ट मान 16 है.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "बाइनरी की अनुमानित लंबाई लौटाता है.",
        "Documentation.LongDescription": "<code>binary</code> की अनुमानित लंबाई लौटाता है, या यदि डेटा स्रोत अनुमानित लंबाई का समर्थन नहीं करता है, तो कोई त्रुटि लौटाता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "बाइनरी मान की अनुमानित लंबाई पाएँ.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "स्मृति में बाइनरी मान को बफ़र करता है.",
        "Documentation.LongDescription": "स्मृति में बाइनरी मान को बफ़र करता है.  इस कॉल का परिणाम एक स्थायी बाइनरी मान है, जिसका अर्थ है इसमें निर्धारणात्मक लंबाई और बाइट्स का क्रम होगा.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "बाइनरी मान का एक स्थायी संस्करण बनाएँ.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "बाइनरी की सूची को एकल बाइनरी में संयोजित करता है.",
        "Documentation.LongDescription": "बाइनरी की सूची को एकल बाइनरी में संयोजित करता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "दिए गए मान से एक बाइनरी बनाता है",
        "Documentation.LongDescription": "दिए गए <code>value</code> से <code>बाइनरी</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Binary.From</code> <code>नल</code> वापस करता है.  यदि दिया गया <code>value</code> <code>बाइनरी</code> है, तो <code>value</code> वापस किया जाता है. Values निम्न प्रकार के मान को <code>बाइनरी</code> मान का उपयोग करके रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>पाठ</code>: पाठ प्रस्तुतिकरण से <code>बाइनरी</code> मान. विवरण के लिए <code>Binary.FromText</code> का संदर्भ लें.</li>\r\n      </ul>\r\nयदि <code>value</code> किसी अन्य प्रकार का है, तो त्रुटि वापस की जाती है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "<code>\"1011\"</code> का <code>binary</code> मान प्राप्त करें.",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "संख्याओं की सूची को बाइनरी मान में रूपांतरित करता है.",
        "Documentation.LongDescription": "संख्याओं की सूची को बाइनरी मान में रूपांतरित करता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "डेटा को पाठ फ़ॉर्म से बाइनरी में डीकोड करता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> को रूपांतरित करने का परिणाम बाइनरी (<code>संख्या</code> की सूची) में लौटाता है. पाठ मान में उपयोग की गई एनकोडिंग को इंगित करने के लिए <code>encoding</code> को निर्दिष्ट किया जा सकता है.\r\n      निम्न <code>BinaryEncoding</code> मानों का उपयोग <code>encoding</code> के लिए किया जा सकता है.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: बेस 64 एनकोडिंग</li>\r\n        <li><code>BinaryEncoding.Hex</code>: हेक्स एनकोडिंग</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "\"1011\" को बाइनरी में डीकोड करें.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "\"1011\" को हेक्स एन्कोडिंग के साथ बाइनरी में डीकोड करें.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "बाइनरी स्ट्रीम पढ़ता है और स्ट्रीम के सामग्री प्रकार और फ़ॉर्मैट जानकारी का पता लगाने प्रयास करता है।",
        "Documentation.LongDescription": "फ़ील्ड Content.Type के साथ एक ऐसा रिकॉर्ड लौटाता है, जिसमें अनुमानित MIME-प्रकार शामिल है.\r\n    यदि अनुमानित सामग्री प्रकार पाठ/* है और किसी एनकोडिंग कोड पृष्ठ का पता चलता है, तो अतिरिक्त रूप से ऐसा Content.Encoding फ़ील्ड लौटाता है, जिसमें स्ट्रीम की एनकोडिंग शामिल होती है.\r\n    यदि अनुमानित सामग्री प्रकार पाठ/csv है और फ़ॉर्मैट डिलिमिटेड है, तो अतिरिक्त रूप से ऐसा Csv.PotentialDelimiter फ़ील्ड लौटाता है, जिसमें संभावित डिलिमिटर्स के विश्लेषण के लिए तालिका शामिल होती है.\r\n    यदि अनुमानित सामग्री पाठ/csv है और फ़ॉर्मैट की चौड़ाई निश्चित है, तो अतिरिक्त रूप से ऐसा Csv.PotentialPositions फ़ील्ड लौटाता है, जिसमें संभावित निश्चित चौड़ाई वाले स्तंभ के स्थानों के लिए विश्लेषण शामिल होता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "वर्णों की संख्‍या लौटाता है.",
        "Documentation.LongDescription": "वर्णों की संख्‍या लौटाता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "बाइनरी मान को संख्याओं की सूची में रूपांतरित करता है.",
        "Documentation.LongDescription": "बाइनरी मान को संख्याओं की सूची में रूपांतरित करता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "बाइनरी डेटा को पाठ फ़ॉर्म में एन्कोड करता है.",
        "Documentation.LongDescription": "<code>binary</code> संख्याओं की बाइनरी सूची को पाठ मान में रूपांतरित करने के परिणाम को लौटाता है. वैकल्पिक रूप से, उत्पन्न पाठ मान में उपयोग की जाने वाली एनकोडिंग को इंगित करने के लिए <code>encoding</code> को निर्दिष्ट किया जा सकता है\r\n      निम्न <code>BinaryEncoding</code> मानों का <code>encoding</code> के लिए उपयोग किया जा सकता है.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: बेस 64 एनकोडिंग</li>\r\n        <li><code>BinaryEncoding.Hex</code>: हेक्स एनकोडिंग</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "संशोधित त्रुटि रिकॉर्ड बनाता है जो किसी दृश्य (Binary.View के माध्यम से) पर परिभाषित हैंडलर द्वारा फेंके जाने पर फ़ॉलबैक ट्रिगर नहीं करता है.",
        "Documentation.LongDescription": "<code>errorRecord</code> से संशोधित त्रुटि रिकॉर्ड बनाता है जो किसी दृश्य (Binary.View के माध्यम से) पर परिभाषित हैंडलर द्वारा फेंके जाने पर फ़ॉलबैक ट्रिगर नहीं करता है.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "एक ऐसा फ़ंक्शन बनाता है, जिसे किसी दृश्य पर (Binary.View के माध्यम से) परिभाषित किए गए हैंडलर द्वारा बीच में रोका जा सकता है.",
        "Documentation.LongDescription": "<p><code>function</code> पर आधारित कोई ऐसा दृश्य फ़ंक्शन बनाता है, जिसे <code>Binary.View</code> द्वारा बनाए गए दृश्य में हैंडल किया जा सकता है.</p>\r\n<p> <code>Binary.View</code> के <code>OnInvoke</code> हैंडलर का उपयोग दृश्य फ़ंक्शन के लिए हैंडलर परिभाषित करने हेतु किया जा सकता है.</p>\r\n<p>अंतर्निहित कार्रवाइयों के हैंडलर्स की तरह, यदि कोई भी <code>OnInvoke</code> हैंडलर निर्दिष्ट नहीं है या यह दृश्य फ़ंक्शन को हैंडल नहीं करता है या हैंडलर द्वारा कोई त्रुटि उठाई जाती है, तो <code>function</code> को दृश्य के शीर्ष पर लागू किया जाता है.</p>\r\n<p> <code>Binary.View</code> और कस्टम दृश्य फ़ंक्शन के अधिक पूर्ण विवरण के लिए प्रकाशित Excel के लिए Microsoft Power Query कस्टम कनेक्टर दस्तावेज़ीकरण देखें.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "एक बाइनरी स्वरूप जो 64-बिट हस्ताक्षरित पूर्णांक को पढ़ता है, जिसको 7-बिट चर-लंबाई एन्कोडिंग का उपयोग करके एन्कोड किया गया था.",
        "Documentation.LongDescription": "एक बाइनरी स्वरूप जो 64-बिट हस्ताक्षरित पूर्णांक को पढ़ता है, जिसको 7-बिट चर-लंबाई एन्कोडिंग का उपयोग करके एन्कोड किया गया था.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "एक बाइनरी स्वरूप जो 64-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है, जिसको 7-बिट चर-लंबाई एन्कोडिंग का उपयोग करके एन्कोड किया गया था.",
        "Documentation.LongDescription": "एक बाइनरी स्वरूप जो 64-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है, जिसको 7-बिट चर-लंबाई एन्कोडिंग का उपयोग करके एन्कोड किया गया था.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "बाइनरी स्वरूप जो 8-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 8-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "बाइनरी स्वरूप जो .NET 16-बाइट दशमलव मान को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो .NET 16-बाइट दशमलव मान को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "बाइनरी स्वरूप जो 8-बाइट IEEE दोहरी-परिशुद्धता फ़्लोटिंग पॉइंट मान को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 8-बाइट IEEE दोहरी-परिशुद्धता फ़्लोटिंग पॉइंट मान को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "एक ऐसा बाइनरी स्वरूप लौटाता है जो आइटम्स के अनुक्रम को पढ़ता है और एक सूची लौटाता है.",
        "Documentation.LongDescription": "किसी ऐसे बाइनरी फॉर्मैट को लौटाता है जो आइटम्स का कोई अनुक्रम पढ़ता है और किसी <code>list</code> को लौटाता है.  <code>binaryFormat</code> पैरामीटर प्रत्येक आइटम के बाइनरी फॉर्मैट को निर्दिष्ट करता है.  पढ़ी गई आइटम्स की संख्या को निर्धारित करने के तीन तरीके होते हैं: <ul><li>यदि <code>countOrCondition</code> निर्दिष्ट नहीं है, तो बाइनरी फॉर्मैट, आइटम्स के समाप्त होते तक, उन्हें पढ़ेगा.</li><li>यदि <code>countOrCondition</code> कोई संख्या है, तो बाइनरी फॉर्मैट उतनी आइटम्स पढ़ेगा.</li><li>यदि <code>countOrCondition</code> एक फ़ंक्शन है, तो प्रत्येक पढ़ी गई आइटम के लिए, उसी फ़ंक्शन को इनवोक किया जाएगा.  आइटम्स को पढ़ना जारी रखने के लिए फ़ंक्शन ‘true’ लौटाता है, और पढना रोकने के लिए, ‘false’ लौटाता है.  अंतिम आइटम को सूची में शामिल किया जाता है.</li><li>यदि <code>countOrCondition</code> एक बाइनरी फॉर्मैट है, तो यह अपेक्षा की जाती है कि आइटम्स की गणना सूची से पहले हो, और गणना को पढ़ने के लिए निर्दिष्ट किए गए फॉर्मैट का उपयोग किया जाता है.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "डेटा के अंत तक बाइट्स पढ़ें.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "दो बाइट्स पढ़ें.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "जब तक बाइट मान दो से अधिक या उससे बराबर नहीं हो जाता, बाइट्स पढ़ें.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "एक बाइनरी स्वरूप जो शून्य बाइट्स पढ़ता है और नल लौटाता है.",
        "Documentation.LongDescription": "एक बाइनरी स्वरूप जो शून्य बाइट्स पढ़ता है और नल लौटाता है.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "रिकॉर्ड को पढ़ने वाले बाइनरी स्वरूप को लौटाता है.",
        "Documentation.LongDescription": "रिकॉर्ड को पढ़ने वाले बाइनरी स्वरूप को लौटाता है.  <code>record</code> पैरामीटर रिकॉर्ड के स्वरूप को निर्दिष्ट करता है.  रिकॉर्ड की प्रत्येक फ़ील्ड में एक भिन्न बाइनरी स्वरूप हो सकता है.  यदि फ़ील्ड में एक मान है जो बाइनरी स्वरूप मान नहीं है, तो उस फ़ील्ड के लिए कोई डेटा पढ़ा नहीं जाता है और फ़ील्ड मान परिणाम के लिए दोहराया जाता है.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "एक 16-बिट पूर्णांक और एक 32-बिट पूर्णांक वाले रिकॉर्ड को पढ़ें.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "बाइनरी स्वरूप जो 16-बिट हस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 16-बिट हस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "बाइनरी स्वरूप जो 32-बिट हस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 32-बिट हस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "बाइनरी स्वरूप जो 64-बिट हस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 64-बिट हस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "बाइनरी स्वरूप जो 4-बाइट IEEE एकल-परिशुद्धता फ़्लोटिंग पॉइंट मान को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 4-बाइट IEEE एकल-परिशुद्धता फ़्लोटिंग पॉइंट मान को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "पाठ मान को पढ़ने वाले बाइनरी स्वरूप को लौटाता है.",
        "Documentation.LongDescription": "पाठ मान को पढ़ने वाले बाइनरी फ़ॉर्मैट को लौटाता है.  <code>length</code> डिकोड की जाने वाली बाइट्स की संख्या को निर्दिष्ट करता है या पाठ से पहले वाली लंबाई के बाइनरी फ़ॉर्मैट को निर्दिष्ट करता है.  वैकल्पिक <code>encoding</code> मान पाठ की एन्कोडिंग को निर्दिष्ट करता है.  यदि <code>encoding</code> निर्दिष्ट नहीं होता है, तो एन्कोडिंग को यूनिकोड बाइट क्रम चिह्न से निर्धारित किया जाता है.  यदि कोई भी बाइट क्रम चिह्न मौजूद नहीं होते हैं, तो <code>TextEncoding.Utf8</code> का उपयोग किया जाता है.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "दो बाइट्स को ASCII पाठ के रूप में डीकोड करें.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "ASCII पाठ डीकोड करें जहाँ पर पाठ की बाइट्स में लंबाई, पाठ से पहले बाइट के रूप में प्रकट होती है.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "बाइनरी स्वरूप जो 16-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 16-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "बाइनरी स्वरूप जो 32-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 32-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "बाइनरी स्वरूप जो 64-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.LongDescription": "बाइनरी स्वरूप जो 64-बिट अहस्ताक्षरित पूर्णांक को पढ़ता है.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "दिए गए मान से 8-बिट पूर्णांक बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से 8-बिट पूर्णांक <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Byte.From</code> <code>नल</code> वापस करता है. यदि दिया गया <code>value</code> आंशिक भाग के बिना 8-बिट पूर्णांक की श्रेणी में <code>संख्या</code> है, तो <code>value</code> वापस किया जाता है. यदि उसमें आंशिक भाग है, तो संख्या को राउंडिंग मोड निर्दिष्ट करके राउंड किया जाता है. डिफ़ॉल्ट राउंडिंग मोड <code>RoundingMode.ToEven</code> है. यदि <code>value</code> किसी अन्य प्रकार का है, तो उसे पहले <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित किया जाएगा. उपलब्ध राउंडिंग मोड के लिए <code>Number.Round</code> का संदर्भ लें. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का 8-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "<code>RoundingMode.AwayFromZero</code> का उपयोग करके <code>\"4.5\"</code> का 8-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "किसी संख्या को टेक्स्ट वर्ण में कनवर्ट करता है.",
        "Documentation.LongDescription": "संख्या के समतुल्य वर्ण को लौटाता है.<br>\r\n    <br>\r\n    दिया गया <code>number</code>, 21-बिट यूनिकोड कोड पॉइंट होना चाहिए.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "किसी संख्या को उसके समतुल्य वर्ण मान में रूपांतरित करें.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "किसी वर्ण को किसी संख्या में कनवर्ट करें और फिर से वापस जाएँ.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "\"मुस्कुराता चेहरा\" इमोटिकॉन के लिए हेक्साडेसिमल कोड बिंदु को इसके समतुल्य UTF-16 सरोगेट युग्म में रूपांतरित करें.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "वर्ण को संख्या मान में रूपांतरित करता है.",
        "Documentation.LongDescription": "<code>character</code> के समतुल्य संख्या लौटाता है.<br>\r\n    <br>\r\n    परिणाम 21-बिट यूनिकोड कोड बिंदु होगा जो उपलब्ध कराए गए चरित्र या सरोगेट जोड़ी द्वारा दर्शाया जाएगा.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "किसी वर्ण को उसके समतुल्य संख्या मान में रूपांतरित करें.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "\"मुस्कुराते चेहरे\" वाले इमोटिकॉन के लिए UTF-16 सरोगेट युग्म को उसके समतुल्य हेक्साडेसिमल कोड पॉइंट में रूपांतरित करें.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "एक फ़ंक्शन लौटाता है जो निर्दिष्ट डिलिमिटर का उपयोग करके टेक्स्ट की सूची को जोड़ता है.",
        "Documentation.LongDescription": "एक ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट डिलिमिटर का उपयोग करके पाठ मूल्यों की एक सूची को किसी एकल पाठ मूल्य में संयोजित करता है.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "किसी अर्धविराम डिलिमिटर का उपयोग करके पाठ मानों की एक सूची संयोजित करें.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "किसी अल्पविराम डिलिमिटर और CSV-शैली के उद्धरण का उपयोग करके दो स्तंभों के पाठ को संयोजित करें.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो डिलिमिटर के अनुक्रम का उपयोग करके टेक्स्ट की सूची को संयोजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो डिलिमिटर के अनुक्रम का उपयोग करके टेक्स्ट मानों की सूची को एकल टेक्स्ट मान में संयोजित करता है.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "डिलिमिटर के क्रम का उपयोग करके टेक्स्ट मानों की सूची संयोजित करें.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "एक फ़ंक्शन लौटाता है जो निर्दिष्ट लंबाई का उपयोग करके टेक्स्ट की सूची को जोड़ता है.",
        "Documentation.LongDescription": "एक ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट लंबाई का उपयोग करके पाठ मानों की सूची को किसी एकल पाठ मान में संयोजित करता है.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "हर इनपुट मान से वर्णों की निर्दिष्ट संख्याओं को हटाकर टेक्स्ट मानों की सूची संयोजित करें.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "परिणाम को पहले टेम्पलेट टेक्स्ट से पहले भरने के बाद, वर्णों की निर्दिष्ट संख्याओं को हटाकर टेक्स्ट मानों की सूची संयोजित करें.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट आउटपुट स्थितियों का उपयोग करके टेक्स्ट की सूची को संयोजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट आउटपुट स्थितियों का उपयोग करके टेक्स्ट मानों की सूची को सिंगल टेक्स्ट मान में संयोजित करता है.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "टेक्स्ट मानों की सूची को निर्दिष्ट स्थितियों पर आउटपुट में रखकर संयोजित करें.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट स्थितियों और लंबाई का उपयोग करके टेक्स्ट की सूची को संयोजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट आउटपुट स्थितियों और लंबाई का उपयोग करके टेक्स्ट मानों की सूची को सिंगल टेक्स्ट मान में संयोजित करता है. शून्य लंबाई बताती है कि संपूर्ण टेक्स्ट मान शामिल किया जाना चाहिए.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "निर्दिष्ट आउटपुट स्थितियों और लंबाई का उपयोग करके टेक्स्ट मानों की सूची संयोजित करें.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "निर्दिष्ट कल्चर और केस-संवेदनशीलता के आधार पर तुलनाकर्ता फ़ंक्शन लौटाता है.",
        "Documentation.LongDescription": "एक तुलनाकर्ता फ़ंक्शन लौटाता है जो तुलना करने के लिए <code>culture</code> द्वारा निर्दिष्ट <code>ignoreCase</code> और केस-संवेदनशीलता का उपयोग करता है.<br>\r\n      <br>\r\n      एक तुलनाकर्ता फ़ंक्शन दो तर्कों को स्वीकार करता है और पहला मान दूसरे मान से कम, बराबर या अधिक है या नहीं, इसके आधार पर -1, 0, या 1 लौटाता है.<br>\r\n      <br>\r\n      <code>ignoreCase</code> के लिए डिफ़ॉल्ट मान गलत है. <code>culture</code> .NET फ़्रेमवर्क (उदाहरण के लिए, \"en-US\") द्वारा समर्थित भाषा में से एक होना चाहिए.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "यह निर्धारित करने के लिए कि मान समान हैं या नहीं, \"en-US\" लोकेल का उपयोग करके \"a\" और \"A\" की तुलना करें.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "यह निर्धारित करने के लिए कि मान समान हैं या नहीं, केस पर ध्‍यान न देते हुए \"en-US\" लोकेल का उपयोग करके \"a\" और \"A\" की तुलना करें.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "सदस्य गुण मान से अद्वितीय सदस्य पहचानकर्ता लौटाता है.",
        "Documentation.LongDescription": "सदस्य गुण मान से अद्वितीय सदस्य पहचानकर्ता लौटाता है. <code>attribute</code>. किसी अन्य मान के लिए नल लौटाता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "गुण की कुंजी वापस करता है.",
        "Documentation.LongDescription": "गुण <code>property</code> की कुंजी वापस करता है.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "दिए गए मूल्य से मुद्रा मूल्य लौटाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से <code>currency</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Currency.From</code> <code>नल</code> वापस करता है.  यदि दिया गया <code>value</code> मुद्रा की श्रेणी में <code>संख्या</code> है, तो <code>value</code> के आंशिक भाग को 4 दशमलव अंकों में पूरा बनाकर वापस किया जाता है. यदि<code>value</code> किसी अन्य प्रकार का है, तो उसे सबसे पहले <code>Number.FromText</code>का उपयोग करके <code>संख्या</code> में रूपांतरित किया जाएगा. मुद्रा के लिए मान्य श्रेणी <code>-922,337,203,685,477.5808</code> से लेकर <code>922,337,203,685,477.5807</code>है. उपलब्ध राउंडिंग मोड के लिए<code>Number.Round</code> देखें. डिफ़ॉल्ट <code>RoundingMode.ToEven</code> है. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"1.23455\"</code> का <code>मुद्रा</code> मूल्य प्राप्त करें.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "<code>RoundingMode.Down</code> का उपयोग करके <code>\"1.23455\"</code> का <code>मुद्रा</code> मान प्राप्त करें.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "दिन घटक लौटाता है.",
        "Documentation.LongDescription": "किसी <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> मान का दिन घटक लौटाता है.\r\n      <ul>\r\n        <li><code>dateTime</code>: एक ऐसा <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> मान, जिससे दिन घटक निकाला जाता है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5/14/2011 05:00:00 अपराह्न के दिनांक और समय का प्रतिनिधित्व करने वाले <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान का दिन घटक प्राप्त करें.",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "कोई ऐसी संख्या (0 से 6 के बीच) लौटाता है, जो प्रदत्त मान के लिए सप्ताह के दिन को इंगित करती है.",
        "Documentation.LongDescription": "कोई ऐसी संख्या (0 से 6 के बीच) लौटाता है, जो प्रदत्त <code>dateTime</code> के लिए सप्ताह के दिन को इंगित करती है.\r\n  <ul>\r\n        <li><code>dateTime</code>: कोई <code>दिनांक</code>, <code>तिथिसमय</code> या <code>datetimezone</code> मान.</li>\r\n        <li><code>firstDayOfWeek</code>: <code>दिन</code> का कोई मान, जो इंगित करता हो कि किस दिन को सप्ताह का पहला दिन माना जाए. अनुमत मान हैं दिन.रविवार, दिन.सोमवार, दिन.मंगलवार, दिन.बुधवार, दिन.गुरुवार, दिन.शुक्रवार या दिन.शनिवार. निर्दिष्ट न होने पर, संस्कृति-आधारित डिफ़ॉल्ट का उपयोग किया जाता है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "रविवार को सप्ताह का पहला दिन मानते हुए सोमवार, 21 फरवरी 2011 द्वारा दर्शाया गया साप्ताहिक दिन प्राप्त करें.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "सोमवार को सप्ताह का पहला दिन मानते हुए सोमवार, 21 फरवरी 2011 द्वारा दर्शाया गया साप्ताहिक दिन प्राप्त करें.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "सप्ताह के नाम का दिन लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>date</code> के लिए सप्ताह के नाम का दिन लौटाता है. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "सप्ताह के दिन का नाम प्राप्त करें.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "वर्ष के दिन का प्रतिनिधित्व करने वाली 1 से 366 तक की कोई संख्या लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान, <code>dateTime</code> में वर्ष के दिन का प्रतिनिधित्व करने वाली कोई संख्या लौटाता है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "1 मार्च, 2011 के लिए वर्ष का दिन.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "28 से 31 तक की संख्या लौटाता है जो महीने के दिनों की संख्या को इंगित करती है.",
        "Documentation.LongDescription": "महीने के दिनों की संख्या को <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> मान <code>dateTime</code> में लौटाता है.\r\n <ul>\r\n        <li><code>dateTime</code>: एक ऐसा <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> मान, जिसके लिए महीने के दिनों की संख्या लौटाई जाती है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>#date(2011, 12, 01)></code> द्वारा प्रस्तुत किए गए अनुसार दिसंबर महीने के दिनों की संख्या.",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "दिन के अंत में लौटाता है.",
        "Documentation.LongDescription": "उस दिन के अंत में लौटाता है जिसमें <code>dateTime</code> है. समय क्षेत्र की जानकारी संरक्षित है. \r\n      <ul>\r\n      <li><code>dateTime</code>: एक <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान जिससे महीने की समाप्ति की गणना की जाती है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5/14/2011 05:00:00 अपराह्न के लिए दिन की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "5/17/2011 05:00:00 अपराह्न -7:00 के लिए दिन की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "महीने के अंत में लौटाता है.",
        "Documentation.LongDescription": "उस महीने के अंत में लौटाता है जिसमें <code>dateTime</code>है.\r\n      <ul>\r\n        <li><code>dateTime</code>: एक <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान जिससे महीने की समाप्ति की गणना की जाती है</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5/14/2011 के लिए महीने की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "5/17/2011 05:00:00 अपराह्न -7:00 के लिए महीने की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "तिमाही के अंत में लौटाता है.",
        "Documentation.LongDescription": "उस महीने के अंत में लौटाता है जिसमें <code>dateTime</code>है. समय क्षेत्र की जानकारी संरक्षित है. \r\n      <ul>\r\n      <li><code>dateTime</code>: एक <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान जिससे महीने की समाप्ति की गणना की जाती है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "10 अक्टूबर, 2011, 8:00 पूर्वाह्न के लिए तिमाही की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "सप्ताह का अंत लौटाता है.",
        "Documentation.LongDescription": "उस सप्ताह के अंत में लौटाता है जिसमें <code>dateTime</code> होता है.\r\n    यह फ़ंक्शन इस सापेक्षिक परिकलन के लिए सप्ताह का पहला दिन सेट करने हेतु एक वैकल्पिक <code>Day</code> <code>firstDayOfWeek</code> लेता है. डिफ़ॉल्ट मान <code>Day.Sunday</code> है.\r\n      <ul>\r\n        <li><code>dateTime</code>: एक ऐसा <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान, जिससे सप्ताह के अंतिम दिन का परिकलन किया जाता है</li>\r\n        <li><code>firstDayOfWeek</code>: <i>[वैकल्पिक]</i> सप्ताह के पहले दिन को दर्शाने वाला <code>Day.Type</code> मान संभावित मान <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> और <code>Day.Saturday.</code> हैं. डिफ़ॉल्ट मान <code>Day.Sunday</code> है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5/14/2011 के लिए सप्ताह की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "प्राप्त करें कि सप्ताह का पहला दिन रविवार होने पर, 5/17/2011 05:00:00 अपराह्न -7:00, को सप्ताह का अंत कब होगा.",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "वर्ष के अंत में लौटाता है.",
        "Documentation.LongDescription": "उस साल के अंत में लौटाता है, जिसमें भिन्नात्मक सेकंड सहित <code>dateTime</code> होता है. समय क्षेत्र की जानकारी संरक्षित है.\r\n      <ul>\r\n        <li><code>dateTime</code>: एक ऐसा <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान, जिससे वर्ष की समाप्ति का परिकलन किया जाता है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5/14/2011 05:00:00 अपराह्न के लिए वर्ष की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "5/17/2011 05:00:00 अपराह्न -7:00 के लिए घंटे की समाप्ति प्राप्त करें.",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "दिए गए मान से एक दिनांक बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से एक <code>दिनांक</code> मान वापस करता है. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").\r\nयदि दिया गया <code>value</code> <code>नल</code> है, तो <code> Date.From</code> <code>नल</code> वापस करता है. यदि दिया गया <code>value</code> <code>दिनांक</code> है, तो <code>value</code> वापस किया जाता है. निम्न प्रकार के मानों को एक <code>दिनांक</code> मान में रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>पाठ</code>: पाठ प्रस्तुतिकरण से एक <code>दिनांक</code> मान. विवरण के लिए <code>Date.FromText</code> देखें.</li>\r\n <li><code>तिथिसमय</code>: <code>value</code> का तिथि घटक.</li>\r\n        <li><code>datetimezone</code>: स्थानीय तिथिसमय का तिथि घटक <code>value</code> के समतुल्य.</li>\r\n        <li><code>number</code>: तिथिसमय का दिनांक घटक जो OLE स्वचालन दिनांक के बराबर है, जिसे <code>value</code> द्वारा व्यक्त किया जाता है.</li>\r\n      </ul>\r\nयदि <code>value</code> किसी अन्य प्रकार का है, तो त्रुटि वापस की जाती है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>43910</code> को एक <code>date</code> मान में रूपांतरित करें.",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "<code>#datetime(1899, 12, 30, 06, 45, 12)</code> को एक <code>date</code> मान में रूपांतरित करें.",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "स्थानीय, वैश्विक और कस्टम दिनांक फ़ॉर्मेट से दिनांक बनाता है.",
        "Documentation.LongDescription": "पाठ प्रस्तुतिकरण, <code>text</code> से <code>date</code> मान बनाता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code> अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: उपयोग करने के लिए फ़ॉर्मेट को इंगित करने वाला <code>text</code> मान. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को छोड़ देने से या <code>नल</code> प्रदान करने के परिणामस्वरूप सर्वश्रेष्ठ प्रयास का उपयोग करके दिनांक पार्स होगी.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल नहीं होता है, तब <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"MMM\"</code> में यह <code>\"Jan\", \"Feb\", \"Mar\", ...</code> होता है, जबकि <code>\"ru-RU\"</code> <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> होता है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तब <code>कल्चर</code> उपयोग करने के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>Culture</code> <code>नल</code> होता है या छोड़ दिया जाता है, तब <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> पाठ मान भी हो सकता है. इसमें <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> जैसा समान व्यवहार होता है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>\"2010-12-31\"</code> को <code>दिनांक</code> मान में रूपांतरित करें.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "कस्टम फ़ॉन्ट और जर्मन कल्चर का उपयोग करके रूपांतरित करें.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "ग्रेगोरियन कैलेंडर में वह दिनांक ढूँढें जो हिजरी कैलेंडर में 1400 के प्रारंभ से संगत है.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "इंगित करता है कि क्या यह दिनांक, वर्तमान दिन के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया datetime मान <code>dateTime</code>, वर्तमान दिन के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकन किया जाने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय, वर्तमान दिन में मौजूद है.",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "इंगित करता है कि क्या यह दिनांक, वर्तमान महीने के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया datetime मान <code>dateTime</code>, वर्तमान महीने के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकन किया जाने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय, वर्तमान महीने में मौजूद है.",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "इंगित करता है कि क्या यह दिनांक, वर्तमान तिमाही के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया datetime मान <code>dateTime</code>, वर्तमान तिमाही के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकन किया जाने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय, वर्तमान तिमाही में मौजूद है.",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "इंगित करता है कि क्या यह दिनांक, वर्तमान सप्ताह के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया datetime मान <code>dateTime</code>, वर्तमान सप्ताह के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकन किया जाने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय, वर्तमान सप्ताह में मौजूद है.",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "इंगित करता है कि क्या यह दिनांक, वर्तमान वर्ष के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया datetime मान <code>dateTime</code>, वर्तमान वर्ष के दौरान आता है जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकन किया जाने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय, वर्तमान वर्ष में मौजूद है.",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले दिन के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले दिन के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का दिन, अगले दिन में मौजूद है.",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले महीने के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले महीने के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का महीना, अगले महीने में मौजूद है.",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले महीने के दौरान आता है या नहीं. ध्यान दें कि वर्तमान तिमाही में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगली तिमाही के दौरान आता है या नहीं. ध्यान दें कि वर्तमान तिमाही में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद की तिमाही, अगली तिमाही में मौजूद है.",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले सप्ताह के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले सप्ताह के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का सप्ताह, अगले सप्ताह में मौजूद है.",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले वर्ष के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले वर्ष के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का वर्ष, अगले वर्ष में मौजूद है.",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले दिन के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया तिथिसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले दिन के दौरान आता है या नहीं. ध्यान दें कि वर्तमान दिन में आने वाला मान पास किए जाने पर यह फ़ंक्शन फ़ॉल्स (0) मान लौटाएगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>तिथिसमय</code> या <code>तिथिसमयक्षेत्र</code> मान का मूल्यांकन किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय से पहले का दिन, पिछले दिन में मौजूद है.",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले महीने के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया तिथिसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले महीने के दौरान आता है या नहीं. ध्यान दें कि वर्तमान महीने में आने वाला मान पास किए जाने पर यह फ़ंक्शन फ़ॉल्स (0) मान लौटाएगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>तिथिसमय</code> या <code>तिथिसमयक्षेत्र</code> मान का मूल्यांकन किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय से पहले का महीना, पिछले महीने में मौजूद है.",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछली तिमाही के दौरान आता है या नहीं. ध्यान दें कि वर्तमान तिमाही में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछली तिमाही के दौरान आता है या नहीं. ध्यान दें कि वर्तमान तिमाही में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय से पहले की तिमाही, पिछली तिमाही में मौजूद है.",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले सप्ताह के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले सप्ताह के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सप्ताह में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांक</code>, <code>दिनांकसमय</code> या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय से पहले का सप्ताह, पिछले सप्ताह में मौजूद है.",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "दर्शाता है कि यह दिनांक, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले वर्ष के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया तिथिसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले वर्ष के दौरान आता है या नहीं. ध्यान दें कि वर्तमान वर्ष में आने वाला मान पास किए जाने पर यह फ़ंक्शन फ़ॉल्स (0) मान लौटाएगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>तिथि</code>, <code>तिथिसमय</code> या <code>तिथिसमयक्षेत्र</code> मान का मूल्यांकन किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय से पहले का वर्ष, पिछले वर्ष में मौजूद है.",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "इंगित करता है कि क्या यह दिनांक, वर्तमान वर्ष के दौरान आता है और वर्तमान दिन को या उससे पहले है, जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया datetime मान <code>dateTime</code>, वर्तमान वर्ष के दौरान आता है और वर्तमान दिन को या उससे+ पहले है, जैसा कि सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित किया गया था.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकन किया जाने वाला <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय, वर्ष से दिनांक में मौजूद है.",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "इंगित करता है कि क्या यह दिनांक एक लीप वर्ष में आता है.",
        "Documentation.LongDescription": "इंगित करता है कि दिया गया <code>dateTime</code> datetime मान किसी लीप वर्ष में तो नहीं आता है.\r\n <ul>\r\n        <li><code>dateTime</code>: मूल्यांकन करने के लिए <code>तिथि</code>, <code>datetime</code> या <code>datetimezone</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्ष 2012 एक लीप वर्ष है, जैसा कि <code>#date(2012, 01, 01)</code> द्वारा दर्शाया गया है.",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "महीना घटक लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>datetime</code> मान, <code>dateTime</code> का महीना घटक लौटाता है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "महीने को #datetime(2011, 12, 31, 9, 15, 36) में प्राप्त करें.",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "माह घटक का नाम लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>date</code> के लिए माह घटक का नाम लौटाता है. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "महीने का नाम प्राप्त करें.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "वह संख्या लौटाता है जो यह इंगित करती है कि दिनांक वर्ष की कौन सी तिमाही आता है.",
        "Documentation.LongDescription": "1 से 4 तक संख्या लौटाता है जो यह इंगित करती है कि दिनांक वर्ष <code>dateTime</code> की कौन सी तिमाही में आता है. <code>dateTime</code>, एक <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान हो सकता है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "प्राप्त करें कि दिनांक #date(2011, 12, 31) वर्ष की कौन सी तिमाही में आता है.",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "दिन के शुरू में लौटाता है.",
        "Documentation.LongDescription": "<code>dateTime</code> द्वारा दर्शाए गए दिन की शुरुआत में लौटाता है.\r\n    <code>dateTime</code> का एक <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान होना अनिवार्य है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "10 अक्टूबर, 2011, 8:00 पूर्वाह्न के लिए दिन के शुरू में प्राप्त करें.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "महीने के शुरू में लौटाता है.",
        "Documentation.LongDescription": "उस महीने क शुरू में लौटाता है जिसमें <code>dateTime</code> है.\r\n <code>dateTime</code> एक <code>date</code> या <code>datetime</code> मान होना चाहिए.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "10 अक्टूबर, 2011, 8:10:32 पूर्वाह्न के लिए महीने के शुरू में प्राप्त करें.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "तिमाही के शुरू में लौटाता है.",
        "Documentation.LongDescription": "उस तिमाही के प्रारंभ में लौटाता है जिसमें <code>dateTime</code> है.\r\n      <code>dateTime</code> एक <code>date</code>, <code>datetime</code>, या <code>datetimezone</code> मान होना चाहिए.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "10 अक्टूबर, 2011, 8:00 पूर्वाह्न के लिए तिमाही के शुरू में प्राप्त करें.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "सप्ताह की शुरुआत दिखाता है.",
        "Documentation.LongDescription": "उस हफ़्ते के प्रारंभ में लौटाता है जिसमें <code>dateTime</code> है.\r\n    <code>dateTime</code> एक <code>date</code>, <code>datetime</code>, या <code>datetimezone</code> मान होना चाहिए.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "मंगलवार, 11 अक्टूबर, 2011 के लिए सप्ताह की शुरुआत खोजें.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "सोमवार को सप्ताह की शुरुआत के रूप में उपयोग करके मंगलवार, 11 अक्टूबर 2011 के लिए सप्ताह की शुरुआत खोजें.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "वर्ष के शुरू में लौटाता है.",
        "Documentation.LongDescription": "उस साल के प्रारंभ में लौटाता है जिसमें <code>dateTime</code> है.\r\n    <code>dateTime</code> एक <code>date</code>, <code>datetime</code>, या <code>datetimezone</code> मान होना चाहिए.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "अक्टूबर 10, 2011, 8:10:32 पूर्वाह्न के लिए वर्ष की शुरुआत का पता लगाएँ.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "वह रिकॉर्ड लौटाता है, जिसमें दिनांक मान के भाग शामिल हैं.",
        "Documentation.LongDescription": "वह रिकॉर्ड लौटाता है, जिसमें दिए गए तिथि मान <code>date</code> के भाग शामिल हैं.\r\n <ul>\r\n        <li><code>date</code>: एक ऐसा <code>तिथि</code> मान, जिससे उसके भागों के रिकॉर्ड को परिकलित किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>#date(2011, 12, 31)</code> मान को उस रिकॉर्ड में रूपांतरित करें जिसमें दिनांक मान के भाग शामिल हैं.",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "दिनांक मान का पाठ प्रस्तुतिकरण लौटाता है.",
        "Documentation.LongDescription": "<code>date</code> का पाठ प्रस्तुतिकरण वापस करता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>culture</code> का केवल लीगेसी कार्यप्रवाह के लिए उपयोग किया जाता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: <code>पाठ</code> मान जो उपयोग करने के लिए फ़ॉर्मेट इंगित करता है. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को हटाने से या <code>नल</code> प्रदान करने से <code>कल्चर</code> द्वारा परिभाषित मान का उपयोग करके दिनांक फ़ॉर्मेट होगी.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल न हो, तो <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"MMM\"</code> में <code>\"Jan\", \"Feb\", \"Mar\", ...</code> है, जबकि <code>\"ru-RU\"</code> <code>\"MMM\"</code> में यह <code>\"янв\", \"фев\", \"мар\", ...</code> है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तो <code>कल्चर</code> उपयोग के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>कल्चर</code> <code>नल</code> होता है या हटा दिया जाता है, तो <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> और <code>culture</code> पाठ मान भी हो सकते हैं. इसका <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> जैसा समान व्यवहार हो सकता है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "<code>#date(2010, 12, 31)</code> को <code>पाठ</code> मान में रूपांतरित करें. <i>परिणाम आउटपुट वर्तमान कल्चर के आधार पर भिन्न हो सकता है.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "कस्टम फ़ॉन्ट और जर्मन कल्चर का उपयोग करके रूपांतरित करें.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "हिजरी कैलेंडर में वह वर्ष ढूँढें जो ग्रेगोरियन कैलेंडर में 1 जनवरी, 2000 से संगत है.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "1 से 6 की संख्या वापस करता है जो यह इंगित करता है कि इस दिनांक को महीने का कौन-सा सप्ताह आता है.",
        "Documentation.LongDescription": "1 से 6 की संख्या वापस करता है जो यह इंगित करता है कि दिनांक <code>dateTime</code> महीने के कौन-से सप्ताह में आती है.\r\n <ul>\r\n        <li><code>dateTime</code>: <code>तिथिसमय</code> मान, जिसके लिए महीने-का-सप्ताह निर्धारित किया गया है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि 15 मार्च, 2011 में किस सप्ताह पर आता है.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "1 से 54 तक संख्या लौटाता है जो यह इंगित करती है कि यह दिनांक वर्ष के किस सप्ताह में आता है.",
        "Documentation.LongDescription": "1 से 54 तक की कोई संख्या लौटाता है, जो इंगित करती है कि दिनांक, <code>dateTime</code>, वर्ष के किस सप्ताह में आता है.\r\n <ul>\r\n        <li><code>dateTime</code>: एक<code>तिथिसमय</code>मान, जिसके लिए वर्ष-का-सप्ताह निर्धारित किया जाता है.</li>\r\n        <li><code>firstDayOfWeek</code>:एक वैकल्पिक <code>दिन.प्रकार</code>मान, जो इंगित करता है कि एक नए सप्ताह के प्रारंभ के लिए किस दिन पर विचार किया जाता है (उदाहरण के लिए, <code>Day.Sunday</code>). यदि अनिर्दिष्ट है, तो एक कल्चर-निर्भर डिफ़ॉल्ट का उपयोग किया जाता है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि वर्ष के किस सप्ताह में 27 मार्च, 2011 शामिल है.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "सोमवार को सप्ताह के प्रारंभ के रूप में उपयोग करके निर्धारित करें कि वर्ष के किस सप्ताह में 27 मार्च, 2011 शामिल है.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "वर्ष घटक लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>datetime</code> मान, <code>dateTime</code> का वर्ष घटक लौटाता है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "वर्ष को #datetime(2011, 12, 31, 9, 15, 36) में प्राप्त करें.",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "किसी दी गई दिनांक, दिनांक समय, दिनांक समय क्षेत्र मान के दिनांक घटक को लौटाता है.",
        "Documentation.LongDescription": "<code>dateTime</code>, दिए गए <code>date</code>, <code>datetime</code> या <code>datetimezone</code> मान का दिनांक घटक लौटाता है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "#datetime(2010, 12, 31, 11, 56, 02) का दिनांक मान प्राप्त करें.",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "दिए गए मान से एक datetime बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से एक <code>तिथिसमय</code> मान वापस करता है. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").\r\nयदि दिया गया <code>value</code> <code>नल</code> है, तो <code>DateTime.From</code> <code>नल</code> वापस किया जाता है. यदि दिया गया <code>value</code> <code>तिथिसमय</code> है, तो <code>value</code> वापस किया जाता है. निम्न प्रकार के मानों को एक <code>तिथिसमय</code> मान में रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>पाठ</code>: पाठ प्रस्तुतिकरण से एक <code>तिथिसमय</code> मान. विवरण के लिए <code>DateTime.FromText</code> देखें.</li>\r\n        <li><code>तिथि</code>: तिथि घटक के रूप में <code>value</code> और समय घटक के रूप में <code>12:00:00 AM</code> वाला <code>तिथिसमय</code>.</li>\r\n        <li><code>datetimezone</code>: <code>value</code> के समतुल्य स्थानीय <code>तिथिसमय</code>.</li>\r\n        <li><code>समय</code>: तिथि घटक के रूप में <code>0</code> और समय घटक के रूप में <code>value</code> के OLE स्वचालन तिथि के समतुल्य तिथि वाला <code>तिथिसमय</code>.</li>\r\n        <li><code>संख्या</code>: <code>value</code> द्वारा व्यक्त OLE स्वचालन तिथि के समतुल्य तिथि वाला <code>तिथिसमय</code>.</li>\r\n      </ul>\r\nयदि <code>value</code> किसी भी अन्य प्रकार का है, तो एक त्रुटि वापस की जाती है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>#time(06, 45, 12)</code> को एक <code>datetime</code> मान में रूपांतरित करें.",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "<code>#date(1975, 4, 4)</code> को एक <code>datetime</code> मान में रूपांतरित करें.",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "64 बिट लंबी संख्या से एक datetime बनाता है.",
        "Documentation.LongDescription": "<code>fileTime</code> से एक <code>datetime</code> मान बनाता है और उसे स्थानीय समय क्षेत्र में रूपांतरित करता है. फ़ाइल नाम एक Windows फ़ाइल समय मान है जो उन 100-गैर-सेकंड अंतरालों की संख्या दर्शाता है जो मध्यरात्रि 12:00 बजे, 1 जनवरी 1601 ई.प. तक बीत चुके हैं. (C.E.) समन्वित वैश्विक समय (UTC).\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>129876402529842245</code> को एक datetime मान में रूपांतरित करें.",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "स्थानीय और वैश्विक datetime स्वरूपों से एक datetimezone बनाता है.",
        "Documentation.LongDescription": "पाठ प्रस्तुतिकरण, <code>text</code> से <code>datetime</code> मान बनाता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code> अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: उपयोग करने के लिए फ़ॉर्मेट को इंगित करने वाला <code>text</code> मान. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को छोड़ देने से या <code>नल</code> प्रदान करने के परिणामस्वरूप सर्वश्रेष्ठ प्रयास का उपयोग करके दिनांक पार्स होगी.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल नहीं होता है, तब <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"MMM\"</code> में यह <code>\"Jan\", \"Feb\", \"Mar\", ...</code> होता है, जबकि <code>\"ru-RU\"</code> <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> होता है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तब <code>कल्चर</code> उपयोग करने के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>Culture</code> <code>नल</code> होता है या छोड़ दिया जाता है, तब <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> पाठ मान भी हो सकता है. इसमें <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> जैसा समान व्यवहार होता है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>\"2010-12-31T01:30:00\"</code> को तिथिसमय मान में रूपांतरित करें.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "<code>\"2010-12-31T01:30:00.121212\"</code> को तिथिसमय मान में रूपांतरित करें.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "<code>\"2010-12-31T01:30:00\"</code> को तिथिसमय मान में रूपांतरित करें.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "<code>\"20101231T013000\"</code> को तिथिसमय मान में रूपांतरित करें.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "यह इंगित करता है कि क्या यह तिथिसमय, सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित वर्तमान घंटे के दौरान आता है.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया तिथिसमय मान <code>dateTime</code>, सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित वर्तमान घंटे के दौरान आता है.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकित किया जाने वाला <code>तिथिसमय</code>, या <code>तिथिसमयज़ोन</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय वर्तमान घंटे में है.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "यह इंगित करता है कि क्या यह तिथिसमय, सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित वर्तमान मिनट के दौरान आता है.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया तिथिसमय मान <code>dateTime</code>, सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित वर्तमान मिनट के दौरान आता है.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकित किया जाने वाला<code>तिथिसमय</code>, या <code>तिथिसमयज़ोन</code>.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय वर्तमान मिनट में है.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "यह इंगित करता है कि क्या यह तिथिसमय, सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित वर्तमान सेकंड के दौरान आता है.",
        "Documentation.LongDescription": "इंगित करता है कि क्या दिया गया तिथिसमय मान <code>dateTime</code> सिस्टम के वर्तमान दिनांक और समय द्वारा निर्धारित वर्तमान सेकंड के दौरान आता है.\r\n      <ul>\r\n      <li><code>dateTime</code>: मूल्यांकित किया जाने वाला <code>तिथिसमय</code>, या <code>तिथिसमयज़ोन</code> मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय वर्तमान सेकंड में है.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले घंटे के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले घंटे के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का घंटा अगले घंटे में है.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले मिनट के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले मिनट के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code>मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का मिनट अगले मिनट में है.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, अगले सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के बाद का सेकंड अगले सेकंड में है.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "दर्शाता है कि यह तिथिसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले घंटे के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाला मान पास किए जाने पर यह फ़ंक्शन गलत लौटाएगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले घंटे के दौरान आता है या नहीं. ध्यान दें कि वर्तमान घंटे में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के पहले का घंटा पिछले घंटे में है.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले मिनट के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले मिनट के दौरान आता है या नहीं. ध्यान दें कि वर्तमान मिनट में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के पहले का मिनट पिछले मिनट में है.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "दर्शाता है कि यह दिनांकसमय, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.",
        "Documentation.LongDescription": "दर्शाता है कि दिया गया दिनांकसमय मान <code>dateTime</code>, सिस्टम पर वर्तमान दिनांक और समय द्वारा निर्धारित किए गए अनुसार, पिछले सेकंड के दौरान आता है या नहीं. ध्यान दें कि वर्तमान सेकंड में आने वाले मान के निकल जाने पर यह फ़ंक्शन गलत परिणाम देगा.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>दिनांकसमय</code>, या <code>datetimezone</code> मूल्यांकित किया जाने वाला मान.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या वर्तमान सिस्टम समय के पहले का सेकंड पिछले सेकंड में है.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "दिए गए datetime मान का समय भाग लौटाता है.",
        "Documentation.LongDescription": "दिए गए datetime मान, <code>dateTime</code> का समय भाग लौटाता है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "#datetime(2010, 12, 31, 11, 56, 02) का समय मान प्राप्त करें.",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "वह रिकॉर्ड लौटाता है, जिसमें datetime मान के भाग शामिल हैं.",
        "Documentation.LongDescription": "वह रिकॉर्ड लौटाता है, जिसमें दिए गए datetime मान <code>dateTime</code> के भाग शामिल हैं.\r\n <ul>\r\n        <li><code>dateTime</code>: एक ऐसा <code>datetime</code> मान, जिससे उसके भागों के रिकॉर्ड को परिकलित किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>#datetime(2011, 12, 31, 11, 56, 2)</code> मान को उस रिकॉर्ड में रूपांतरित करें जिसमें दिनांक और समय मान शामिल हैं.",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "datetime मान का पाठ प्रस्तुतिकरण लौटाता है.",
        "Documentation.LongDescription": "<code>dateTime</code> का पाठ प्रस्तुतिकरण वापस करता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>culture</code> का केवल लीगेसी कार्यप्रवाह के लिए उपयोग किया जाता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: <code>पाठ</code> मान जो उपयोग करने के लिए फ़ॉर्मेट इंगित करता है. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को हटाने से या <code>नल</code> प्रदान करने से <code>कल्चर</code> द्वारा परिभाषित मान का उपयोग करके दिनांक फ़ॉर्मेट होगी.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल न हो, तो <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"MMM\"</code> में <code>\"Jan\", \"Feb\", \"Mar\", ...</code> है, जबकि <code>\"ru-RU\"</code> <code>\"MMM\"</code> में यह <code>\"янв\", \"фев\", \"мар\", ...</code> है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तो <code>कल्चर</code> उपयोग के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>कल्चर</code> <code>नल</code> होता है या हटा दिया जाता है, तो <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> और <code>culture</code> पाठ मान भी हो सकते हैं. इसका <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> जैसा समान व्यवहार हो सकता है.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "<code>#datetime(2010, 12, 31, 01, 30, 25)</code> को <code>text</code> मान में रूपांतरित करें. <i>परिणाम आउटपुट वर्तमान कल्चर के आधार पर भिन्न हो सकता है.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "कस्टम फ़ॉन्ट और जर्मन कल्चर का उपयोग करके रूपांतरित करें.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "ISO 8601 पैटर्न का उपयोग करके रूपांतरित करें.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "दिए गए मान से एक datetimezone बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से एक <code>datetimezone</code> मान वापस करता है. एक वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").\r\nयदि दिया गया <code>value</code> <code>नल</code> है, तो <code>DateTimeZone.From</code> <code>नल</code> वापस करता है. यदि दिया गया <code>value</code> <code>datetimezone</code> है, तो <code>value</code> लौटाया जाता है. निम्न प्रकार के मानों को एक <code>datetimezone</code> मान में रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>पाठ</code>: पाठ प्रस्तुतिकरण से एक <code>datetimezone</code> मान. विवरण के लिए <code>DateTimeZone.FromText</code> देखें.</li>\r\n        <li><code>तिथि</code>: तिथि घटक के रूप में <code>value</code>, समय घटक के रूप में <code>12:00:00 AM</code> और स्थानीय समय क्षेत्र के संगत ऑफ़सेट वाला <code>datetimezone</code>. </li>\r\n        <li><code> तिथिसमय </code>: तिथिसमय के रूप में <code>value</code> और स्थानीय समय क्षेत्र के संगत ऑफ़सेट वाला <code>datetimezone</code>.</li>\r\n        <li><code>समय</code>: तिथि घटक के रूप में <code>0</code>, समय घटक के रूप में <code>value</code> और स्थानीय समय क्षेत्र के संगत ऑफ़सेट के OLE स्वचालन तिथि के समतुल्य तिथि वाला <code>datetimezone</code>. </li>\r\n        <li><code>संख्या</code>: <code>value</code> द्वारा व्यक्त OLE स्वचालन तिथि के समतुल्य तिथिसमय और स्थानीय समय क्षेत्र के संगत ऑफ़सेट वाला <code>datetimezone</code>.</li>\r\n      </ul>\r\nयदि <code>value</code> किसी भी अन्य प्रकार का है, तो एक त्रुटि लौटाई जाती है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "<code>\"2020-10-30T01:30:00-08:00\"</code> को एक <code>datetimezone</code> मान में रूपांतरित करें.",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "64 बिट लंबी संख्या से एक datetimezone बनाता है.",
        "Documentation.LongDescription": "<code>fileTime</code> से एक <code>datetimezone</code> मान बनाता है और उसे स्थानीय समय क्षेत्र में रूपांतरित करता है. फ़ाइल नाम एक Windows फ़ाइल समय मान है जो उन 100-गैर-सेकंड अंतरालों की संख्या दर्शाता है जो मध्यरात्रि 12:00 बजे, 1 जनवरी 1601 ई.प. तक बीत चुके हैं. (C.E.) समन्वित वैश्विक समय (UTC).\r\n    ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "<code>129876402529842245</code> को एक datetimezone मान में रूपांतरित करें.",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "स्थानीय, वैश्विक और कस्टम datetimezone फ़ॉर्मेट से एक datetimezone बनाता है.",
        "Documentation.LongDescription": "पाठ प्रस्तुतिकरण, <code>text</code> से <code>datetimezone</code> मान बनाता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code> अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: उपयोग करने के लिए फ़ॉर्मेट को इंगित करने वाला <code>text</code> मान. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को छोड़ देने से या <code>नल</code> प्रदान करने के परिणामस्वरूप सर्वश्रेष्ठ प्रयास का उपयोग करके दिनांक पार्स होगी.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल नहीं होता है, तब <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"MMM\"</code> में यह <code>\"Jan\", \"Feb\", \"Mar\", ...</code> होता है, जबकि <code>\"ru-RU\"</code> <code>\"MMM\"</code> <code>\"янв\", \"фев\", \"мар\", ...</code> होता है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तब <code>कल्चर</code> उपयोग करने के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>Culture</code> <code>नल</code> होता है या छोड़ दिया जाता है, तब <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> पाठ मान भी हो सकता है. इसमें <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> जैसा समान व्यवहार होता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "<code>\"2010-12-31T01:30:00-08:00\"</code> को <code>datetimezone</code> मान में रूपांतरित करें.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "कस्टम फ़ॉन्ट और जर्मन कल्चर का उपयोग करके रूपांतरित करें.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "ISO 8601 का उपयोग करके रूपांतरित करें.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "समय क्षेत्र जानकारी को दिए गए datetimezone मान से निकाल देता है.",
        "Documentation.LongDescription": "समय क्षेत्र जानकारी को निकालकर <code>dateTimeZone</code> से #datetime मान लौटाता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "मान #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0) से समय क्षेत्र जानकारी निकालें.",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "समय क्षेत्र घटक को स्थानीय समय क्षेत्र में रूपांतरित करता है.",
        "Documentation.LongDescription": "datetimezone मान <code>dateTimeZone</code> की समय क्षेत्र जानकारी को स्थानीय समय क्षेत्र जानकारी में परिवर्तित करता है.\r\n    अगर <code>dateTimeZone</code> में कोई समय क्षेत्र घटक नहीं है, तो स्थानीय समय क्षेत्र जानकारी जोड़ी जाती है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) के लिए समय क्षेत्र जानकारी को स्थानीय समय क्षेत्र (PST मानकर) में परिवर्तित करें.",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "वह रिकॉर्ड लौटाता है, जिसमें datetimezone मान के भाग शामिल हैं.",
        "Documentation.LongDescription": "वह रिकॉर्ड लौटाता है, जिसमें दिए गए datetimezone मान <code>dateTimeZone</code> के भाग शामिल होते हैं.\r\n <ul>\r\n        <li><code>dateTimeZone</code>: एक ऐसा <code>datetimezone</code> मान, जिससे उसके भागों के रिकॉर्ड को परिकलित किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "<code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> मान को उस रिकॉर्ड में रूपांतरित करें जिसमें दिनांक, समय और क्षेत्र मान शामिल हैं.",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "datetimezone मान का पाठ प्रस्तुतिकरण लौटाता है.",
        "Documentation.LongDescription": "<code>dateTimeZone</code> का पाठ प्रस्तुतिकरण वापस करता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>culture</code> का केवल लीगेसी कार्यप्रवाह के लिए उपयोग किया जाता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: <code>पाठ</code> मान जो उपयोग करने के लिए फ़ॉर्मेट इंगित करता है. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को हटाने से या <code>नल</code> प्रदान करने से <code>कल्चर</code> द्वारा परिभाषित मान का उपयोग करके दिनांक फ़ॉर्मेट होगी.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल न हो, तो <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"MMM\"</code> में <code>\"Jan\", \"Feb\", \"Mar\", ...</code> है, जबकि <code>\"ru-RU\"</code> <code>\"MMM\"</code> में यह <code>\"янв\", \"фев\", \"мар\", ...</code> है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तो <code>कल्चर</code> उपयोग के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>कल्चर</code> <code>नल</code> होता है या हटा दिया जाता है, तो <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> और <code>culture</code> पाठ मान भी हो सकते हैं. इसका <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> जैसा समान व्यवहार हो सकता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "<code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> को <code>text</code> मान में रूपांतरित करें. <i>परिणाम आउटपुट वर्तमान कल्चर के आधार पर भिन्न हो सकता है.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "कस्टम फ़ॉन्ट और जर्मन कल्चर का उपयोग करके रूपांतरित करें.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "ISO 8601 पैटर्न का उपयोग करके रूपांतरित करें.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "समय क्षेत्र घटक को UTC समय क्षेत्र में रूपांतरित करता है.",
        "Documentation.LongDescription": "datetime मान <code>dateTimeZone</code> की समय क्षेत्र जानकारी को UTC या वैश्विक समय समय क्षेत्र जानकारी में परिवर्तित करता है.\r\n    अगर <code>dateTimeZone</code> में कोई समय क्षेत्र घटक नहीं है, तो UTC समय क्षेत्र जानकारी जोड़ी जाती है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) के लिए समय क्षेत्र जानकारी को UTC समय क्षेत्र में परिवर्तित करें.",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "मान का समय क्षेत्र बदलता है.",
        "Documentation.LongDescription": "मान का समय क्षेत्र बदलता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "मान का समय क्षेत्र बदलता है.",
        "Documentation.LongDescription": "मान का समय क्षेत्र बदलता है.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "दिए गए मान से दशमलव बनाएं.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से दशमलव <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Decimal.From</code> <code>नल</code> वापस करता है.  यदि दिया गया <code>value</code> <code>संख्या</code> है जो दशमलव की श्रेणी में है, तो <code>value</code> वापस किया जाता है अन्यथा त्रुटि वापस की जाती है. यदि <code>value</code> किसी अन्य प्रकार का है, तो पहले वह <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित होगा. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4.5\"</code> का दशमलव <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "डेल्टा लेक तालिका की सामग्री लौटाता है.",
        "Documentation.LongDescription": "डेल्टा लेक तालिका की सामग्री लौटाता है.",
        "Documentation.Category": "डेटा पर पहुँच प्राप्त करना",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "दिए गए मान से दोहरा मान बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से दशमलव <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Decimal.From</code> <code>नल</code> वापस करता है.  यदि दी गई <code>value</code> <code>संख्या</code> है जो दशमलव की श्रेणी में है, तो <code>value</code> वापस किया जाता है अन्यथा त्रुटि वापस की जाती है. यदि <code>value</code> किसी अन्य प्रकार का है, तो पहले वह <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित होगा. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का दोगुना <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "अवधि का दिनों वाला भाग लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> का दिनों वाला भाग लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "दो दिनांकों के बीच के दिनों की संख्या निकालें.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "दिए गए मान से एक अवधि बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से <code>अवधि</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Duration.From</code> <code>नल</code> वापस करता है.  यदि दिया गया <code>value</code> <code>अवधि</code> है, तो <code>value</code> वापस किया जाता है. निम्न प्रकार के मान को <code>अवधि</code> मान में रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>text</code>: पाठ व्यतीत समय स्वरूप (d.h:m:s) से <code>अवधि</code> मान . विवरण के लिए <code>Duration.FromText</code> का संदर्भ लें.</li>\r\n        <li><code>संख्या</code>: <code>अवधि</code> जो पूर्णांक और आंशिक दिनों की संख्या के समान है, जिसे <code>value</code> द्वारा व्यक्त किया जाता है.</li>\r\n      </ul>\r\nयदि <code>value</code> अन्य प्रकार का है, तो त्रुटि वापस होती है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "<code>2.525</code> को एक <code>duration</code> मान में रूपांतरित करें.",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "व्यतीत समय स्वरूप (d.h:m:s) पाठ से अवधि मान लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट पाठ <code>text</code> से एक अवधि मान लौटाता है. इस फ़ंक्शन द्वारा निम्न फ़ॉर्मैट्स को पार्स किया जा सकता है:\r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (सभी श्रेणियाँ समावेशी हैं)<br>\r\n        ddd: दिनों की संख्या.<br>\r\n        hh: 0 और 23 के बीच घंटों की संख्या.<br>\r\n        mm: 0 और 59 के बीच मिनट्स की संख्या.<br>\r\n        ss: 0 और 59 के बीच सेकंड्स की संख्या.<br>\r\n        ff: 0 और 9999999 के बीच सेकंड्स के अंश.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "<code>\"2.05:55:20\"</code> को एक <code>duration</code> मान में रूपांतरित करें.",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "अवधि का घंटों वाला भाग लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> का घंटों वाला भाग लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अवधि मान से घंटे निकालें.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "अवधि का मिनटों वाला भाग लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> का मिनटों वाला भाग लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अवधि मान से मिनट निकालें.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "अवधि का सेकंडों वाला भाग लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> का सेकंडों वाला भाग लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अवधि मान से सेकंड निकालें.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "अवधि के भागों वाला एक रिकॉर्ड लौटाता है.",
        "Documentation.LongDescription": "वह रिकॉर्ड लौटाता है, जिसमें अवधि मान <code>duration</code> के भाग शामिल हैं.\r\n  <ul>\r\n        <li><code>duration</code>: एक ऐसी <code>अवधि</code> जिससे रिकॉर्ड बनाया जाता है.</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अगर लागू हो, तो <code>#duration(2, 5, 55, 20)</code> को उसके भागों के रिकॉर्ड में रूपांतरित करें जिसमें दिन, घंटे, मिनट और सेकंड शामिल हैं.",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "\"d.h:m:s\" स्वरूप का पाठ लौटाता है.",
        "Documentation.LongDescription": "दिए गए अवधि मान <code>duration</code> के लिए \"day.hour:mins:sec\" के रूप में पाठ प्रस्तुतिकरण लौटता है.\r\n <ul>\r\n        <li><code>duration</code>: वह <code>अवधि</code> जिससे पाठ प्रस्तुतिकरण की गणना की जाती है.</li>\r\n  <li><code>format</code>: <i>[Optional]</i> डेप्रिकेटेड, नल नहीं होने पर एक त्रुटि भेजेगा</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "<code>#duration(2, 5, 55, 20)</code> को एक पाठ मान में रूपांतरित करें.",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "इस अवधि विस्तार के कुल दिन लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> द्वारा विस्तारित कुल दिन लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अवधि मान द्वारा विस्तारित कुल दिन ढूँढें.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "इस अवधि विस्तार के कुल घंटे लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> द्वारा विस्तारित कुल घंटे लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अवधि मान द्वारा विस्तारित कुल घंटे ढूँढें.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "इस अवधि विस्तार के कुल मिनट लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> द्वारा विस्तारित कुल मिनट लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अवधि मान द्वारा विस्तारित कुल मिनट ढूँढें.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "इस अवधि विस्तार के कुल सेकंड लौटाता है.",
        "Documentation.LongDescription": "<code>duration</code> द्वारा विस्तारित कुल सेकंड लौटाता है.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "अवधि मान द्वारा विस्तारित कुल सेकंड ढूँढें.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "कारण, संदेश और विवरण के लिए प्रदान किए गए पाठ मान से एक त्रुटि रिकॉर्ड लौटाता है.",
        "Documentation.LongDescription": "कारण, संदेश और विवरण के लिए प्रदान किए गए पाठ मान से एक त्रुटि रिकॉर्ड लौटाता है.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "किसी स्थिर मान का M स्रोत कोड प्रस्तुतिकरण लौटाता है.",
        "Documentation.LongDescription": "किसी स्थिर मान का M स्रोत कोड प्रस्तुतिकरण लौटाता है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "किसी सांख्यिक मान के M स्रोत कोड प्रस्तुतिकरण प्राप्त करें.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "किसी तिथि मान का M स्रोत कोड प्रस्तुतिकरण प्राप्त करें.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "किसी पाठ मान का M स्रोत कोड प्रस्तुतिकरण प्राप्त करें.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "किसी M व्यंजक के मूल्यांकन का परिणाम लौटाता है.",
        "Documentation.LongDescription": "ऐसे उपलब्ध पहचानकर्ताओं के साथ M व्यंजक <code>document</code> के मूल्यांकन का परिणाम लौटाता है, जिन्हें <code>environment</code> द्वारा परिभाषित रूप से संदर्भित किया जा सकता है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "किसी साधारण योग का मूल्यांकन करें.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "किसी अधिक जटिल योग का मूल्यांकन करें.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "किसी पहचानकर्ता के साथ पाठ मान के संयोजन का मूल्यांकन करें.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "किसी पहचानकर्ता का M स्रोत कोड प्रस्तुतिकरण लौटाता है.",
        "Documentation.LongDescription": "किसी पहचानकर्ता <code>name</code> का M स्रोत कोड प्रस्तुतिकरण लौटाता है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "किसी पहचानकर्ता का M स्रोत कोड प्रस्तुतिकरण प्राप्त करें.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "किसी ऐसे पहचानकर्ता का M स्रोत कोड प्रस्तुतिकरण प्राप्त करें जिसमें एक रिक्ति हो.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "निर्दिष्ट फ़ाइल की सामग्रियों को बाइनरी के रूप लौटाता है.",
        "Documentation.LongDescription": "बाइनरी के रूप में, <code>path</code> फ़ाइल की सामग्री लौटाता है. <code>options</code> पैरामीटर वर्तमान में केवल आंतरिक उपयोग के लिए अभिप्रेत है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "यह लौटाता है कि किसी विशेष फ़ंक्शन को डेटा स्रोत माना जाए या नहीं.",
        "Documentation.LongDescription": "यह लौटाता है कि <code>function</code> को डेटा स्रोत माना जाए या नहीं.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Well-Known Text (WKT) फ़ॉर्मेट में भौगोलिक मान को दर्शाने वाले पाठ का अनुवाद एक संरचित रिकॉर्ड में करता है.",
        "Documentation.LongDescription": "Well-Known Text (WKT) फ़ॉर्मेट में भौगोलिक मान को दर्शाने वाले पाठ का अनुवाद एक संरचित रिकॉर्ड में करता है. WKT मुक्त भू-स्थानिक संघ (OGC) द्वारा परिभाषित एक मानक फ़ॉर्मेट है और SQL Server सहित डेटाबेस द्वारा उपयोग किया जाने वाला विशिष्ट क्रमांकन फ़ॉर्मेट है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "संरचित भौगोलिक बिंदु मान का अनुवाद उसके Well-Known Text (WKT) प्रस्तुतीकरण में करता है.",
        "Documentation.LongDescription": "संरचित भौगोलिक बिंदु मान का अनुवाद उसके Well-Known Text (WKT) प्रस्तुतीकरण में करता है, जो कि मुक्त भू-स्थानिक संघ (OGC) द्वारा परिभाषित है, और SQL Server सहित कई डेटाबेस द्वारा उपयोग किया जाने वाले क्रमांकन फ़ॉर्मेट भी है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Well-Known Text (WKT) फ़ॉर्मेट में ज्यामितीय मान को दर्शाने वाले पाठ का अनुवाद एक संरचित रिकॉर्ड में करता है.",
        "Documentation.LongDescription": "Well-Known Text (WKT) फ़ॉर्मेट में ज्यामितीय मान को दर्शाने वाले पाठ का अनुवाद एक संरचित रिकॉर्ड में करता है. WKT मुक्त भू-स्थानिक संघ (OGC) द्वारा परिभाषित एक मानक फ़ॉर्मेट है और SQL Server सहित डेटाबेस द्वारा उपयोग किया जाने वाला विशिष्ट क्रमांकन फ़ॉर्मेट है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "संरचित ज्यामितीय बिंदु मान का अनुवाद उसके Well-Known Text (WKT) प्रस्तुतीकरण में करता है.",
        "Documentation.LongDescription": "संरचित ज्यामितीय बिंदु मान का अनुवाद उसके Well-Known Text (WKT) प्रस्तुतीकरण में करता है, जो कि मुक्त भू-स्थानिक संघ (OGC) द्वारा परिभाषित है, और SQL Server सहित कई डेटाबेस द्वारा उपयोग किया जाने वाले क्रमांकन फ़ॉर्मेट भी है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "दिए गए मान से guid मान लौटाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से <code>Guid.Type</code> वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Guid.From</code> <code>नल</code> वापस करता है.  यह देखने के लिए जाँच की जाएगी कि दिया गया <code>value</code> स्वीकार करने योग्य फ़ॉर्मेट में है या नहीं. स्वीकार करने योग्य फ़ॉर्मेट उदाहरणों में प्रदान किए गए हैं.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Guid 32 निरंतर हेक्साडेसिमल अंकों के रूप में प्रदान की जा सकती है.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid 32 हेक्साडेसिमल अंक के रूप में प्रदान की जा सकती है, जिसे 8-4-4-4-12 के खंडों में हायफ़न द्वारा पृथक किया जाता है.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid 32 हेक्साडेसिमल अंक के रूप में प्रदान की जा सकती है, जिसे हायफ़न द्वारा पृथक किया जाता है और धनुकोष्ठक में संलग्न होती है.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid 32 हेक्साडेसिमल अंक हाइफ़न से अलग कर दिया और कोष्ठक से घिरा के रूप में प्रदान की जा सकती.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "दिए गए मान से 16-बिट पूर्णांक बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से 16-बिट पूर्णांक <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Int16.From</code><code>नल</code> वापस करता है.  यदि दी गई <code>value</code> <code>संख्या</code> आंशिक भाग के बिना 16-बिट पूर्णांक की श्रेणी में है, तो <code>value</code> वापस किया जाता है. यदि उसमें आंशिक भाग है, तो संख्या को राउंडिंग मोड निर्दिष्ट करके राउंड किया जाता है. डिफ़ॉल्ट राउंडिंग कोड <code>RoundingMode.ToEven</code> है. यदि <code>value</code> किसी अन्य प्रकार का है, तो पहले उसे <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित किया जाएगा. उपलब्ध राउंडिंग मोड के लिए <code>Number.Round</code> देखें. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का 16-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "<code>RoundingMode.AwayFromZero</code> का उपयोग करके <code>\"4.5\"</code> का 16-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "दिए गए मान से 32-बिट पूर्णांक बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से 32-बिट पूर्णांक <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Int32.From</code><code>नल</code> वापस करता है.  यदि दी गई <code>value</code> <code>संख्या</code> आंशिक भाग के बिना 32-बिट पूर्णांक की श्रेणी में है, तो <code>value</code> वापस किया जाता है. यदि उसमें आंशिक भाग है, तो संख्या को राउंडिंग मोड निर्दिष्ट करके राउंड किया जाता है. डिफ़ॉल्ट राउंडिंग कोड <code>RoundingMode.ToEven</code> है. यदि <code>value</code> किसी अन्य प्रकार का है, तो पहले उसे <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित किया जाएगा. उपलब्ध राउंडिंग मोड के लिए <code>Number.Round</code> देखें. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का 32-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "<code>RoundingMode.AwayFromZero</code> का उपयोग करके <code>\"4.5\"</code> का 32-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "दिए गए मान से 64-बिट पूर्णांक बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से 64-बिट पूर्णांक <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Int64.From</code><code>नल</code> वापस करता है. यदि दी गई <code>value</code> <code>संख्या</code> आंशिक भाग के बिना 64-बिट पूर्णांक की श्रेणी में है, तो <code>value</code> वापस किया जाता है. यदि उसमें आंशिक भाग है, तो संख्या को राउंडिंग मोड निर्दिष्ट करके राउंड किया जाता है. डिफ़ॉल्ट राउंडिंग कोड <code>RoundingMode.ToEven</code> है. यदि <code>value</code> किसी अन्य प्रकार का है, तो पहले उसे <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित किया जाएगा. उपलब्ध राउंडिंग मोड के लिए <code>Number.Round</code> देखें. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का 64-बिट पूर्णांक <code>number</code> मान प्राप्त करें.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "<code>RoundingMode.AwayFromZero</code> का उपयोग करके <code>\"4.5\"</code> के 64-बिट पूर्णांक <code>संख्या</code> मान प्राप्त करें.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "दिए गए मान से साइन किए गए 8-बिट पूर्णांक बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से 8-बिट पूर्णांक <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Int8.From</code><code>नल</code> वापस करता है.  यदि दी गई <code>value</code> <code>संख्या</code> आंशिक भाग के बिना 8-बिट पूर्णांक की श्रेणी में है, तो <code>value</code> वापस किया जाता है. यदि उसमें आंशिक भाग है, तो संख्या को राउंडिंग मोड निर्दिष्ट करके राउंड किया जाता है. डिफ़ॉल्ट राउंडिंग मोड <code>RoundingMode.ToEven</code> है. यदि <code>value</code> किसी अन्य प्रकार का है, तो पहले उसे <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित किया जाएगा. उपलब्ध राउंडिंग मोड के लिए <code>Number.Round</code> देखें. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का साइन किया गया 8-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "<code>RoundingMode.AwayFromZero</code> का उपयोग करके <code>\"4.5\"</code> का साइन किया गया 8-बिट पूर्णांक <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "किसी फ़ंक्शन के मुख्य भाग के लिए सारांश सिंटैक्स ट्री (AST) वापस करता है.",
        "Documentation.LongDescription": "<p><code>function</code> के मुख्य भाग के लिए सारांश सिंटैक्स ट्री (AST) वापस करता है, जो <i>आइटम व्यंजक</i> में सामान्यीकृत होता है:\r\n<ul>\r\n  <li>फ़ंक्शन 1-तर्क lambda होना चाहिए.</li>\r\n  <li>फ़ंक्शन पैरामीटर के सभी संदर्भ <code>ItemExpression.Item</code> से बदल दिए गए हैं.</li>\r\n  <li>AST को केवल इस प्रकार के नोड्स रखने के लिए सरलीकृत किया जाएगा:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>त्रुटि उत्पन्न होती है, यदि <code>function</code> के मुख्य भाग के लिए आइटम व्यंजक AST लौटाया नहीं किया जा सकता.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "<code>each _ <> null</code> फ़ंक्‍शन के मुख्य संदेश के लिए AST लौटाता है",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "JSON दस्तावेज़ की सामग्री लौटाता है.",
        "Documentation.LongDescription": "JSON दस्तावेज़ की सामग्री लौटाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "दिए गए मान की JSON प्रस्तुति बनाता है.",
        "Documentation.LongDescription": "<p><code>encoding</code> द्वारा निर्दिष्ट पाठ एन्कोडिंग के साथ किसी दिए गए मान <code>value</code> की JSON प्रस्तुति बनाता है. यदि <code>encoding</code> को छोड़ा जाता है, तो UTF8 का उपयोग किया जाता है. मानों को निम्न प्रकार से प्रस्तुत किया जाता है:</p>\r\n <ul>\r\n        <li>नल, पाठ और तार्किक मानों को संगत JSON प्रकार के रूप में प्रस्तुत किया जाता है</li>\r\n        <li>संख्याओं को JSON में संख्याओं के रूप में प्रस्तुत किया जाता है, केवल <code>#infinity</code>, <code>-#infinity</code> और <code>#nan</code> नल में रूपांतरित किए जाते हैं</li>\r\n        <li>सूचियों को JSON सर्वर-समूह के रूप में प्रस्तुत किया जाता है </li>\r\n        <li>रिकॉर्ड JSON ऑब्जेक्ट के रूप में प्रस्तुत किया जाते हैं</li>\r\n        <li>तालिकाओं को ऑब्जेक्ट को सर्वर-समूह के रूप में प्रस्तुत किया जाता है</li>\r\n        <li>दिनांक, समय, तिथिसमय, तिथिसमयक्षेत्र और समयावधियों को ISO-8601 पाठ के रूप में प्रस्तुत किया जाता है</li>\r\n        <li>बाइनरी मान, बेस-64 एनकोडेड पाठ के रूप में प्रस्तुत किए जाते हैं</li>\r\n        <li>प्रकार और फ़ंक्शन कोई त्रुटि उत्पन्न करते हैं</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "जटिल मान को JSON में रूपांतरित करें.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "एक बाइनरी मान को पंक्ति विरामों पर विभाजित होने वाली पाठ मानों की सूची में रूपांतरित करता है.  अगर कोई उद्धरण शैली निर्दिष्ट की गई है, तो फिर पंक्ति विराम उद्धरण में दिखाई दे सकते हैं.  अगर includeLineSeparators सही है, तो फिर पंक्ति विराम वर्णों को पाठ में शामिल किया जाता है.",
        "Documentation.LongDescription": "एक बाइनरी मान को पंक्ति विरामों पर विभाजित होने वाली पाठ मानों की सूची में रूपांतरित करता है.  अगर कोई उद्धरण शैली निर्दिष्ट की गई है, तो फिर पंक्ति विराम उद्धरण में दिखाई दे सकते हैं.  अगर includeLineSeparators सही है, तो फिर पंक्ति विराम वर्णों को पाठ में शामिल किया जाता है.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "एक पाठ मान को पंक्ति विराम पर विभाजित होने वाली पाठ मानों की सूची में रूपांतरित करता है. यदि includeLineSeparators true है, तो फिर पंक्ति विराम वर्णों को पाठ में शामिल किया जाता है.",
        "Documentation.LongDescription": "पाठ मान को पंक्ति विरामों पर पाठ मान विभाजन की सूची में बदलता है. यदि includeLineSeparators सही है, तो पंक्ति विराम वर्ण पाठ में शामिल हो जाते हैं.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (डिफ़ॉल्ट) कोई उद्धरण व्यवहार आवश्यक नहीं.</li>\r\n            <li><code>QuoteStyle.Csv:</code> उद्धरण Csv के अनुसार है. दोहरे उद्धरण वर्ण ऐसे क्षेत्रों का सीमांकन करने के लिए उपयोग किए जाते हैं और दोहरे उद्धरण वर्णों के युग्म को ऐसे किसी क्षेत्र में एकल दोहरे उद्धरण वर्ण का संकेत देने के लिए उपयोग किया जाता है. </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "निर्दिष्ट एन्कोडिंग और lineSeparator का उपयोग करके पाठ की सूची को एक बाइनरी मान में रूपांतरित करता है. निर्दिष्ट lineSeparator को प्रत्येक पंक्ति में जोड़ा जाता है.  अगर निर्दिष्ट नहीं है, तो फिर पंक्ति की शुरुआत में जाएँ और पंक्ति फ़ीड वर्णों का उपयोग किया जाता है.",
        "Documentation.LongDescription": "निर्दिष्ट एन्कोडिंग और lineSeparator का उपयोग करके पाठ की सूची को एक बाइनरी मान में रूपांतरित करता है. निर्दिष्ट lineSeparator को प्रत्येक पंक्ति में जोड़ा जाता है.  अगर निर्दिष्ट नहीं है, तो फिर पंक्ति की शुरुआत में जाएँ और पंक्ति फ़ीड वर्णों का उपयोग किया जाता है.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "पाठ की सूची को एकल पाठ में रूपांतरित करता है.  निर्दिष्ट lineSeparator को प्रत्येक पंक्ति में जोड़ा जाता है.  अगर निर्दिष्ट नहीं है, तो फिर पंक्ति की शुरुआत में जाएँ और पंक्ति फ़ीड वर्णों का उपयोग किया जाता है.",
        "Documentation.LongDescription": "पाठ की सूची को एकल पाठ में रूपांतरित करता है.  निर्दिष्ट lineSeparator को प्रत्येक पंक्ति में जोड़ा जाता है.  अगर निर्दिष्ट नहीं है, तो फिर पंक्ति की शुरुआत में जाएँ और पंक्ति फ़ीड वर्णों का उपयोग किया जाता है.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "अगर सभी व्यंजक true हैं, तो true लौटाता है.",
        "Documentation.LongDescription": "अगर सूची <code>list</code> के सभी व्यंजक true हैं, तो true लौटाता है.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या सूची {true, true, 2 > 0} के सभी व्यंजक true हैं.",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या सूची {true, true, 2 < 0} के सभी व्यंजक true हैं.",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "अगर कोई भी व्यंजक true है, तो true लौटाता है.",
        "Documentation.LongDescription": "अगर सूची <code>list</code> का कोई भी व्यंजक true है, तो true लौटाता है.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या सूची {true, false, 2 > 0} का कोई भी व्यंजक true है.",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या सूची {2 = 0, false, 2 < 0} का कोई भी व्यंजक true है.",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "मान का औसत लौटाता है. संख्या, दिनांक, DateTime, datetimezone और अवधि मानों के साथ काम करता है.",
        "Documentation.LongDescription": "सूची, <code>list</code> के आइटमों के लिए औसत मान लौटाता है. परिणाम उसी प्रकार के डेटा प्रकार में दिया जाता है जिसमें सूची के मान हैं. केवल संख्या, दिनांक, समय, DateTime, datetimezone और अवधि मानों के साथ काम करता है.\r\n    अगर सूची रिक्त है, तो नल लौटाया जाता है.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "संख्याओं, <code>{3, 4, 6}</code> की सूची का औसत प्राप्त करें.",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "दिनांक मानों 1 जनवरी 2011, 2 जनवरी 2011 और 3 जनवरी 2011 का औसत प्राप्त करें.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "किसी सूची को बफ़र करता है.",
        "Documentation.LongDescription": "सूची <code>list</code> को स्मृति में बफ़र करता है. इस कॉल का परिणाम एक स्थिर सूची है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1..10} की एक स्थिर प्रतिलिपि बनाएँ.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "एकाधिक सूचियाँ संयोजित करके एकल सूची लौटाता है.",
        "Documentation.LongDescription": "सूचियों, <code>lists</code>, की एक सूची लेता है और उन्हें एक एकल नई सूची में मर्ज करता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "दो सरल सूचियों {1, 2} और {3, 4} को संयोजित करता है.",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "दो सूचियों, {1, 2} और {3, {4, 5}} को संयोजित करें, जिनमें से एक में नेस्ट की गई सूची होती है.",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "सूची के आइटमों की संख्या लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के आइटमों की संख्या लौटाता है.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3} के मानों की संख्या प्राप्त करें.",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "उन मानों की सूची लौटाता है जिनके डुप्लिकेट निकाल दिए गए हैं.",
        "Documentation.LongDescription": "वह सूची लौटाता है जिसमें सूची <code>list</code> के वे सभी मान होते हैं जिनका डुप्लिकेट निकाल दिए गए हैं. अगर सूची रिक्त हो, तो परिणाम भी एक रिक्त सूची होता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 1, 2, 3, 3, 3} से डुप्लिकेट निकालें",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "सूची का पहला मान या रिक्त होने पर निर्दिष्ट डिफ़ॉल्ट लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> का पहला आइटम या सूची रिक्त होने पर वैकल्पिक डिफ़ॉल्ट मान, <code>defaultValue</code>, लौटाता है.\r\n    अगर सूची रिक्त है और एक डिफ़ॉल्ट मान निर्दिष्ट नहीं है, तो फ़ंक्शन <code>null</code> लौटाता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3} का पहला मान प्राप्त करें.",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "सूची {} का पहला मान प्राप्त करें. अगर सूची रिक्त है, तो -1 लौटाएँ.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "इनपुट में पाए गए सूची मानों का प्रतिच्छेदन लौटाता है.",
        "Documentation.LongDescription": "इनपुट सूची <code>lists</code> में पाए गए सूची मानों का प्रतिच्छेदन लौटाता है. एक वैकल्पिक पैरामीटर, <code>equationCriteria</code>, निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "सूचियों {1..5}, {2..6}, {3..7} का प्रतिच्छेदन प्राप्त करें.",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "इंगित करता है कि क्या सूची में डुप्लिकेट हैं.",
        "Documentation.LongDescription": "सूची <code>list</code> में जहाँ भी डुप्लिकेट होते हैं वहाँ एक लॉजिकल मान लौटाता है; <code>true</code> अगर सूची विशिष्ट है, <code>false</code> अगर इसमें डुप्लिकेट मान हैं. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ढूँढें कि क्या सूची {1, 2, 3} विशिष्ट (अर्थात्, कोई डुप्लिकेट नहीं) है.",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "ढूँढें कि क्या सूची {1, 2, 3, 3} विशिष्ट (अर्थात्, कोई डुप्लिकेट नहीं) है.",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "अगर सूची रिक्त है, तो true लौटाता है.",
        "Documentation.LongDescription": "अगर सूची, <code>list</code>, में कोई मान लंबाई 0) नहीं है, तो <code>true</code> लौटाता है. अगर सूची में मान (लंबाई > 0) हैं, तो <code>false</code> लौटाता है.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "ढूँढें कि क्या सूची {} रिक्त है.",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "ढूँढें कि क्या सूची {1, 2} रिक्त है.",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "सूची का अंतिम मान या रिक्त होने पर निर्दिष्ट डिफ़ॉल्ट लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> का अंतिम आइटम या सूची रिक्त होने पर वैकल्पिक डिफ़ॉल्ट मान, <code>defaultValue</code>, लौटाता है.\r\n    अगर सूची रिक्त है और एक डिफ़ॉल्ट मान निर्दिष्ट नहीं है, तो फ़ंक्शन <code>null</code> लौटाता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3} का अंतिम मान प्राप्त करें.",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "सूची {} का अंतिम मान या रिक्त होने पर -1 प्राप्त करें.",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "सूची का अंतिम मान लौटाता है.  वैकल्पिक रूप से लौटाए जाने वाले मानों की संख्या या योग्य शर्त निर्दिष्ट कर सकते हैं.",
        "Documentation.LongDescription": "सूची <code>list</code> का अंतिम आइटम लौटाता है. यदि सूची रिक्त है, तो एक अपवाद दिखाया जाता है.\r\n यह फ़ंक्शन, एकाधिक आइटम एकत्रित करने या आइटम फ़िल्टर करने का समर्थन करने के लिए एक वैकल्पिक पैरामीटर <code>countOrCondition</code>, लेता है. <code>countOrCondition</code> को तीन तरीके से निर्दिष्ट किया जा सकता है:\r\n <ul>\r\n  <li>यदि कोई संख्या निर्दिष्ट है, तो उस तक कई आइटम लौटाए जाते हैं. </li>\r\n  <li>यदि कोई शर्त निर्दिष्ट है, तो प्रारंभिक रूप से शर्त को पूरा करने वाले सभी आइटमों को लौटाया जाता है, सूची की समाप्ति से प्रारंभ होकर. एकबार आइटम द्वारा शर्त को पूरा नहीं करने पर, आगे किसी भी आइटम पर विचार नहीं किया जाता है. </li>\r\n  <li>यदि यह पैरामीटर नल है, तो सूची के अंतिम आइटम को लौटाया जाता है.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {3, 4, 5, -1, 7, 8, 2} का अंतिम मान प्राप्त करें.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "सूची {3, 4, 5, -1, 7, 8, 2} के वे अंतिम मान प्राप्त करें जो 0 से बड़े हैं.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "सूची का अधिकतम मान या रिक्त सूची के लिए डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के अधिकतम आइटम या सूची रिक्त होने पर वैकल्पिक डिफ़ॉल्ट मान <code>default</code> लौटाता है.\r\n    यह निर्धारित करने के लिए एक वैकल्पिक comparisonCriteria मान <code>comparisonCriteria</code> निर्दिष्ट किया जा सकता है कि सूची के आइटम्स की तुलना कैसे करनी है. यदि यह पैरामीटर नल है, तो डिफ़ॉल्ट तुलनाकर्ता का उपयोग किया जाता है.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 4, 7, 3, -2, 5} में अधिकतम प्राप्त करें.",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "सूची {} में अधिकतम प्राप्त करें या रिक्त होने पर -1 लौटाएँ. ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "सूची का माध्य मान लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के मध्यमान आइटम लौटाता है. यदि सूची में कोई भी ग़ैर-<code>नल</code> मान नहीं हैं, तो यह फ़ंक्शन <code>null</code> लौटाता है.\r\n    यदि आइटम्स की संख्या विषम है, तो यह फ़ंक्शन दो मध्यमान आइटम्स से छोटा चुनता है जब तक कि सूची पूरी तरह ऐसे \r\n    datetimes, अवधियों, समयों की संख्या से नहीं बनी हो, जिसमें यह दो आइटम्स का औसत लौटाता हो.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{5, 3, 1, 7, 9}</code> का माध्य प्राप्त करें.",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "सूची का न्यूनतम मान या रिक्त सूची के लिए डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के न्यूनतम आइटम या सूची रिक्त होने पर वैकल्पिक डिफ़ॉल्ट मान <code>default</code> लौटाता है.\r\n    यह निर्धारित करने के लिए एक वैकल्पिक comparisonCriteria मान <code>comparisonCriteria</code> निर्दिष्ट किया जा सकता है कि सूची के मानों की तुलना कैसे करनी है. यदि यह पैरामीटर नल है, तो डिफ़ॉल्ट तुलनाकर्ता का उपयोग किया जाता है.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 4, 7, 3, -2, 5} में न्यूनतम प्राप्त करें.",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "सूची {} में न्यूनतम प्राप्त करें या रिक्त होने पर -1 लौटाएँ. ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "सूची में सर्वाधिक आवृत्ति वाला मान लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> में सर्वाधिक बार दिखने वाला आइटम लौटाता है. यदि सूची रिक्त है, तो कोई अपवाद लौटाया जाता है. यदि समान अधिकतम आवृत्ति वाले एकाधिक आइटम दिखाई देते हैं, तो अंतिम वाले आइटम को चुना जाता है.\r\n    समानता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक <code>comparisonCriteria</code> मान <code>equationCriteria</code> निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{\"A\", 1, 2, 3, 3, 4, 5}</code> में सर्वाधिक बार-बार आने वाला आइटम प्राप्त करें.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "सूची <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> में सर्वाधिक बार-बार आने वाला आइटम प्राप्त करें.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "सूची में सर्वाधिक आवृत्ति वाले मानों की सूची लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> में सर्वाधिक बार दिखने वाला आइटम लौटाता है. यदि सूची रिक्त है, तो कोई अपवाद लौटाया जाता है. यदि समान अधिकतम आवृत्ति वाले एकाधिक आइटम दिखाई देते हैं, तो अंतिम वाले आइटम को चुना जाता है.\r\n    समानता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक <code>comparisonCriteria</code> मान <code>equationCriteria</code> निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> में सर्वाधिक बार-बार आने वाले आइटम प्राप्त करें.",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "सूची के गैर-नल आइटमों की संख्या लौटाता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के गैर-नल आइटमों की संख्या लौटाता है.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "इनपुट के लिए ऑफ़सेट की सूची लौटाता है.",
        "Documentation.LongDescription": "इनपुट सूची <code>list</code> के लिए ऑफ़सेट की सूची लौटाता है.\r\n    किसी सूची को परिवर्तित करने के लिए List.Transform का उपयोग करते समय स्थिति तक रूपांतरित करने की पहुँच देने के लिए स्थितियों की सूची का उपयोग किया जा सकता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3, 4, null, 5} के मानों के ऑफ़सेट प्राप्त करें.",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "सूची की संख्याओं का उत्पाद लौटाता है.",
        "Documentation.LongDescription": "सूची, <code>numbersList</code> की गैर-नल संख्याओं का उत्पाद लौटाता है. सूची में गैर-नल मान न होने पर नल लौटाता है.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{1, 2, 3, 3, 4, 5, 5}</code> की संख्याओं का उत्पाद प्राप्त करें.",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "यादृच्छिक संख्याओं की सूची लौटाता है.",
        "Documentation.LongDescription": "0 और 1 के बीच यादृच्छिक संख्याओं की एक ऐसी सूची लौटाता है, जिसमें जनरेट किए जाने वाले मानों की संख्या और एक वैकल्पिक सीड मान दिया हुआ होता है.\r\n<ul>\r\n   <li><code>count</code>: जनरेट किए जाने वाले यादृच्छिक मानों की संख्या.</li>\r\n   <li><code>seed</code>:  <i>[वैकल्पिक]</i> यादृच्छिक संख्या जनरेटर को सीड करने के लिए एक सांख्यिक मान का उपयोग किया जाता है. यदि छोड़ दिया जाए, तो आप जितनी बार फ़ंक्शन को कॉल करते हैं, उतनी बार यादृच्छिक संख्याओं की एक अनन्य सूची जनरेट की जाती है. यदि आप किसी संख्या वाला सीड मान निर्दिष्ट करते हैं, तो फ़ंक्शन को की जाने वाली प्रत्येक कॉल यादृच्छिक संख्याओं की समान सूची जनरेट करती है.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "3 यादृच्छिक संख्याओं की सूची बनाएँ.",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "मूल मान निर्दिष्ट करते हुए, 3 यादृच्छिक संख्याओं की सूची बनाएँ.",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "ऐसी सूची लौटाता है जो सूची की शुरुआत में तत्वों की निर्दिष्ट संख्या को छोड़ देती है.",
        "Documentation.LongDescription": "एक सूची लौटाता है जो सूची <code>list</code> का पहला तत्व हटा देती है. यदि <code>list</code> कोई खाली सूची है तो एक खाली सूची लौटा दी जाती है.\r\nयह फ़ंक्शन, नीचे सूचीबद्ध कई मानों को हटाने के लिए एक वैकल्पिक पैरामीटर, <code>countOrCondition</code>, की मदद लेता है.\r\n <ul>\r\n <li>यदि कोई संख्या निर्दिष्ट है, तो उतनी संख्या तक आइटम हटा दिए जाते हैं. </li>\r\n <li>यदि कोई शर्त निर्दिष्ट की गई है, तो <code>list</code> की शुरुआत में कोई भी लगातार मेल खाने वाली वस्तु हटा दी जाती है.</li>\r\n <li>यदि यह पैरामीटर शून्य है, तो डिफ़ॉल्ट व्यवहार देखा जाता है. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "पहली 3 संख्याओं के बिना {1, 2, 3, 4, 5} से एक सूची बनाएँ.",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "{5, 4, 2, 6, 1} से एक सूची बनाएँ, जो 3 से छोटी संख्या से प्रारंभ होती है.",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "ऐसी सूची लौटाता है जो सूची की समाप्ति तत्वों की निर्दिष्ट संख्या को निकाल देती है.",
        "Documentation.LongDescription": "ऐसी सूची लौटाता है जो सूची <code>list</code> की समाप्ति से अंतिम <code>countOrCondition</code> तत्वों को हटा देती है. यदि <code>list</code> में <code>countOrCondition</code> से कम तत्व हैं, तो एक खाली सूची लौटा दी जाती है.\r\n <ul>\r\n <li>यदि कोई संख्या निर्दिष्ट है, तो उतनी संख्या तक आइटम हटा दिए जाते हैं. </li>\r\n <li> यदि कोई शर्त निर्दिष्ट की गई है, तो <code>list</code> के अंत में कोई भी लगातार मेल खाने वाली वस्तु हटा दी जाती है.</li>\r\n <li> यदि यह पैरामीटर शून्य है, तो केवल एक आइटम हटाया जाता है. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "अंतिम 3 संख्याओं के बिना {1, 2, 3, 4, 5} से एक सूची बनाएँ.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "{5, 4, 2, 6, 4} से एक सूची बनाएँ जो 3 से छोटी संख्या पर समाप्त होती है.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "निर्दिष्ट सूची से सभी \"null\" मान निकालता है.",
        "Documentation.LongDescription": "<code>list</code> में \"null\" मानों की सभी आवृत्तियाँ निकालता है. अगर सूची में कोई 'null' मान नहीं है, तो मूल सूची को लौटाया जाता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "सूची {1, 2, 3, null, 4, 5, null, 6} से \"null\" मान निकालें.",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "सूची के मानों का क्रम उलटा करता है.",
        "Documentation.LongDescription": "सूची <code>list</code> के मानों वाली एक सूची उलटे क्रम में लौटाता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "{1..10} से उलटे क्रम में एक सूची बनाएँ.",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "लंबाई एक की सूची के लिए एक सूची आइटम लौटाता है अन्यथा एक अपवाद दिखाता है.",
        "Documentation.LongDescription": "यदि सूची <code>list</code> में केवल एक आइटम है, तो उस आइटम को लौटाता है.\r\n    यदि एक से अधिक आइटम हैं या सूची रिक्त है, तो फ़ंक्शन एक अपवाद लौटाता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1} का एकल मान प्राप्त करें.",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "सूची {1, 2, 3} का एकल मान प्राप्त करें.",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "लंबाई एक की सूची के लिए एक सूची आइटम और एक रिक्त सूची के लिए डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "यदि सूची <code>list</code> में केवल एक आइटम है, तो उस आइटम को लौटाता है.\r\n    यदि सूची रिक्त है, तो फ़ंक्शन नल लौटाता है, जब तक कि एक वैकल्पिक <code>default</code> निर्दिष्ट न किया जाए. यदि सूची में एक से अधिक आइटम हैं, तो फ़ंक्शन एक त्रुटि लौटाता है.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "सूची {1} का एकल मान प्राप्त करें.",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "सूची {} का एकल मान प्राप्त करें.",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "सूची {} का एकल मान प्राप्त करें. अगर रिक्त है, तो -1 लौटाएँ.",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "ऐसी सूची लौटाता है जो सूची की शुरुआत में तत्वों की निर्दिष्ट संख्या को छोड़ देती है.",
        "Documentation.LongDescription": "एक ऐसी सूची लौटाता है जो सूची <code>list</code> के पहले तत्व को छोड़ देती है. यदि <code>list</code> कोई खाली सूची है तो एक खाली सूची लौटा दी जाती है.\r\nयह फ़ंक्शन नीचे सूचीबद्ध कई मानों को छोड़ने का समर्थन करने के लिए एक वैकल्पिक पैरामीटर, <code>countOrCondition</code>, लेता है.\r\n <ul>\r\n <li>यदि कोई संख्या निर्दिष्ट है, तो उस तक कई आइटम छोड़ दिए जाते हैं. </li>\r\n <li>यदि कोई शर्त निर्दिष्ट की गई है, तो <code>list</code> की शुरुआत में किसी भी लगातार मिलान वाले आइटम को छोड़ दिया जाता है.</li>\r\n <li>यदि यह पैरामीटर शून्य है, तो डिफ़ॉल्ट व्यवहार देखा जाता है. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "पहली 3 संख्याओं के बिना {1, 2, 3, 4, 5} से एक सूची बनाएँ.",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "{5, 4, 2, 6, 1} से एक सूची बनाएँ, जो 3 से छोटी संख्या से प्रारंभ होती है.",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "निर्दिष्ट किए गए मापदंड के अनुसार डेटा की सूची को सॉर्ट करता है.",
        "Documentation.LongDescription": "निर्दिष्ट वैकल्पिक मापदंड के आधार पर डेटा की सूची <code>list</code> को सॉर्ट करता है.\r\n वैकल्पिक पैरामीटर <code>comparisonCriteria</code> को तुलना मापदंड के रूप में निर्दिष्ट किया जा सकता है. इसमें निम्नलिखित मान हो सकते हैं:\r\n    <ul>\r\n    <li> ऑर्डर नियंत्रित करने के लिए तुलना मानदंड ऑर्डर एनम मान हो सकता है.. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> सॉर्टिंग के लिए उपयोग की जाने वाली कुंजी का कंप्यूट का उपयोग करने के लिए, 1 तर्क के फ़ंक्शन का उपयोग किया जा सकता है. </li>\r\n    <li> कुंजी और नियंत्रण ऑर्डर दोनों का चयन करने के लिए तुलना मानदंड कुंजी और ऑर्डर वाली सूची हो सकती है (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> तुलना को पूरी तरह से नियंत्रित करने के लिए 2 तर्क के फ़ंक्शन का उपयोग किया जा सकता है. यह फ़ंक्शन सूची में से दो आइटम पास करेगा (कोई भी दो आइटम, किसी भी क्रम में). फ़ंक्शन को निम्नलिखित में से एक मान वापस करना होगा:\r\n        <ul>\r\n            <li> <code>-1</code>: पहला आइटम दूसरे आइटम से कम है.</li>\r\n            <li> <code>0</code>: आइटम बराबर हैं.</li>\r\n            <li> <code>1</code>: पहला आइटम दूसरे आइटम से बड़ा है.</li>\r\n        </ul>\r\n        मान.तुलना विधि है जिसका इस लॉजिक का प्रतिनिधित्व करने के लिए उपयोग किया जा सकता है. </li>\r\n    </ul>.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "सूची {2, 3, 1} सॉर्ट करें.",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "सूची को {2, 3, 1} अवरोही क्रम में सॉर्ट करें.",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "Value.Compare विधि का उपयोग करके सूची {2, 3, 1} को आरोही क्रम में सॉर्ट करें.",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "मानक विचलन का नमूना आधारित अनुमान लौटाता है.",
        "Documentation.LongDescription": "सूची <code>numbersList</code> में मौजूद मानों के मानक विचलन का नमूना आधारित अनुमान लौटाता है.\r\n    यदि <code>numbersList</code> संख्याओं की एक सूची है, तो एक संख्या लौटाई जाती है.\r\n    एक रिक्त सूची या उन आइटमों की सूची, जिसका प्रकार <code>संख्या</code> नहीं है, पर एक अपवाद लौटाया जाता है.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "1 से 5 तक की संख्याओं का मानक विचलन प्राप्त करें.",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "सूची के आइटमों का योग लौटाता है.",
        "Documentation.LongDescription": "सूची, <code>list</code> के गैर-नल मानों का योग लौटाता है.  सूची में गैर-नल मान न होने पर नल लौटाता है.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{1, 2, 3}</code> की संख्याओं का योग प्राप्त करें.",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "इनपुट में पाए गए सूची मानों का यूनियन लौटाता है.",
        "Documentation.LongDescription": "सूचियों <code>lists</code> की एक सूची लेता है, व्यक्तिगत सूचियों में आइटम का संयोजन करता है और उन्हें आउटपुट सूची में लौटाता है. परिणामरूप, लौटाई गई सूची में किसी भी इनपुट सूची के सभी आइटम शामिल होते हैं.\r\n    यह कार्रवाई पारंपरिक बैग सिमैंटिक्स को बनाए रखती है, इसलिए डुप्लिकेट मान संयोजन के हिस्से के रूप में मेल खा जाते हैं.\r\n    समानता परीक्षण नियंत्रित करने के लिए एक वैकल्पिक समीकरण मापदंड मान <code>equationCriteria</code> निर्दिष्ट किया जा सकता है. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "सूची {1..5}, {2..6}, {3..7} का यूनियन बनाएँ.",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "एक ही स्थान पर एकाधिक सूचियों के आइटमों को संयोजित करके सूचियों की सूची लौटाता है.",
        "Documentation.LongDescription": "सूचियों की सूची लेता है, <code>lists</code> और एक ही स्थान पर आइटमों को संयोजित करके सूचियों की सूची लौटाता है.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "दो सरल सूचियों {1, 2} और {3, 4} को ज़िप करता है.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "अलग-अलग लंबाई की दो सरल सूचियों {1, 2} और {3} को ज़िप करता है.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "दिए गए मान से एक तार्किक मान बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से एक <code>तार्किक</code> मान लौटाता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code> Logical.From</code> <code>नल</code> लौटाता है.  यदि दिया गया <code>value</code> <code>तार्किक</code> है, तो <code>value</code> लौटाया जाता है. निम्न प्रकार के मानों को एक <code>तार्किक</code> मान में रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>पाठ</code>: पाठ मान से एक <code>तार्किक</code> मान, या तो <code>\"true\"</code> या <code>\"false\"</code>. विवरण के लिए <code>Logical.FromText</code> देखें.</li>\r\n        <li><code>संख्या</code>: यदि <code>value</code> <code>0</code> के बराबर है तो <code>गलत</code> अन्यथा<code>सत्य</code>.</li>\r\n      </ul>\r\nयदि <code>value</code> किसी भी अन्य प्रकार का है, तो एक त्रुटि लौटाई जाती है.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "<code>2</code> को एक <code>logical</code> मान में रूपांतरित करें.",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "पाठ मानों \"true\" और \"false\" से एक तार्किक मान बनाता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code>, से एक तार्किक मान \"true\" या \"false\" बनाता है. अगर <code>text</code> में एक भिन्न स्ट्रिंग है, तो एक अपवाद दिखाया जाता है. पाठ मान <code>text</code>, केस संवेदी है.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "पाठ स्ट्रिंग \"true\" से एक तार्किक मान बनाएँ.",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "पाठ स्ट्रिंग \"a\" से एक तार्किक मान बनाएँ.",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "पाठ \"true\" या \"false\" लौटाता है जिसमें एक तार्किक मान दिया हुए होता है.",
        "Documentation.LongDescription": "पाठ मान <code>logicalValue</code>, से एक पाठ मान <code>true</code> या <code>false</code> बनाता है. अगर <code>logicalValue</code> एक तार्किक मान नहीं है, एक अपवाद दिखाया जाता है.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "तार्किक <code>true</code> से एक पाठ मान बनाएँ.",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "संख्या का निरपेक्ष मान लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का निरपेक्ष मान लौटाता है. यदि <code>number</code> नल है, तो <code>Number.Abs</code> नल लौटाता है.\r\n    <ul>\r\n        <li><code>number</code>: एक ऐसी <code>संख्या</code> जिसके लिए निरपेक्ष मान का परिकलन किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "-3 का निरपेक्ष मान.",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "संख्या का arccosine लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का arccosine लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "संख्या का arcsine लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का arcsine लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "संख्या का आर्कटेंजेंट लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का आर्कटेंजेंट लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "जहाँ प्रत्येक बिट, इनपुट के विपरीत होता है, वहाँ एक बाइट लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> पर बिटवाइज़ \"Not\" कार्रवाई के निष्पादन का परिणाम लौटाता है.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "संख्या का कोसिन लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का कोसिन लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "0 कोण का कोसिन प्राप्त करें.",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "संख्या का हाइपरबोलिक कोसिन लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का हाइपरबोलिक कोसिन लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "e को दी गई घात तक बढ़ाता है.",
        "Documentation.LongDescription": "e को <code>number</code> (घातांक फंक्शन) की घात तक बढ़ाने का परिणाम लौटाता है.\r\n      <ul>\r\n        <li><code>number</code>: एक ऐसी <code>संख्या</code> जिसके लिए घातांक फ़ंक्शन का परिकलन किया जाना है. यदि <code>number</code> नल है, तो <code>Number.Exp</code> नल लौटाता है. </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "e को 3 की घात तक बढ़ाएँ.",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "संख्या का क्रमगुणन लौटाता है.",
        "Documentation.LongDescription": "संख्या <code>number</code> का क्रमगुणन लौटाता है.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "10 का क्रमगुणन प्राप्त करें.",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "दिए गए मान से एक संख्या बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से एक <code>संख्या</code> मान वापस करता है.एक वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").\r\nयदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Number.From</code> <code>नल</code> वापस करता है. यदि दिया गया <code>value</code> <code>संख्या</code> है, तो <code>value</code> लौटाया जाता है. निम्न प्रकार के मानों को एक <code>संख्या</code> मान में रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>पाठ</code>: पाठ प्रस्तुतिकरण से एक <code>संख्या</code> मान. सामान्य पाठ फ़ॉर्मेंट संभाले जाते हैं (\"15\", \"3,423.10\", \"5.0E-10\"). विवरण के लिए <code>Number.FromText</code> देखें.</li>\r\n        <li><code>तार्किक</code>: <code>सत्य</code> के लिए 1, <code>गलत</code> के लिए 0.</li>\r\n        <li><code> तिथिसमय</code>: एक दोहरी-परिशुद्धता फ़्लोटिंग पॉइंट संख्या जिसमें समतुल्य OLE स्वचालन तिथि शामिल होती है. </li>\r\n        <li><code>datetimezone</code>: एक दोहरी-परिशुद्धता फ़्लोटिंग पॉइंट संख्या जिसमें <code>value</code> के स्थानीय तिथि और समय के समतुल्य OLE स्वचालन तिथि शामिल होती है. </li>\r\n        <li><code>तिथि</code>: एक दोहरी-परिशुद्धता फ़्लोटिंग पॉइंट संख्या जिसमें समतुल्य OLE स्वचालन तिथि शामिल होती है.</li>\r\n        <li><code>समय</code>:  आंशिक दिनों में व्यक्त.</li>\r\n        <li><code>अवधि</code>: पूर्णांक और आंशिक दिनों में व्यक्त.</li>\r\n         </ul>\r\n/यदि <code>value</code> किसी भी अन्य प्रकार का है, तो एक त्रुटि लौटाई जाती है.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का <code>number</code> मान प्राप्त करें.",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "<code>#datetime(2020, 3, 20, 6, 0, 0)</code> का <code>number</code> मान प्राप्त करें.",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "<code>\"12.3%\"</code> का मान <code>संख्या</code> प्राप्त करें.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "सामान्य पाठ स्वरूपों (\"15\", \"3,423.10\", \"5.0E-10\") से संख्याएँ बनाता है.",
        "Documentation.LongDescription": "दिए गए पाठ मान, <code>text</code> से एक <code>संख्या</code> मान लौटाता है.\r\n <ul>\r\n  <li><code>text</code>: किसी संख्या मान का पाठ प्रस्तुतिकरण. प्रस्तुतिकरण एक सामान्य संख्या स्वरूप में होना चाहिए, जैसे \"15\", \"3,423.10\", या \"5.0E-10\".</li>\r\n  <li><code>culture</code>: एक वैकल्पिक संस्कृति जो नियंत्रित करती है कि <code>text</code> की व्याख्या कैसे की जाए (उदाहरण के लिए, \"en-US\").</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"4\"</code> का संख्या मान प्राप्त करें.",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "<code>\"5.0e-10\"</code> का संख्या मान प्राप्त करें.",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "अगर मान सम है, तो संकेत देता है.",
        "Documentation.LongDescription": "अगर मान सम है, तो <code>true</code> अन्यथा <code>false</code> लौटाकर संकेत देता है कि मान, <code>number</code>, सम है.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "जाँचें कि क्या 625 एक सम संख्या है.",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "जाँचें कि क्या 82 एक सम संख्या है.",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "अगर मान NaN (कोई संख्या नहीं) है, तो संकेत देता है.",
        "Documentation.LongDescription": "अगर मान NaN (कोई संख्या नहीं) है, तो संकेत देता है. अगर <code>number</code>, <code>Number.IsNaN</code> के बराबर है, तो <code>true</code> अन्यथा <code>false</code> लौटाता है.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "जाँचें कि क्या 0 को 0 से भाग करने पर NaN आता है.",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "जाँचें कि क्या 1 को 0 से भाग करने पर NaN आता है.",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "अगर मान विषम है, तो संकेत देता है.",
        "Documentation.LongDescription": "अगर मान विषम है, तो संकेत देता है. अगर <code>number</code> एक विषम संख्या है, तो <code>true</code> अन्यथा <code>false</code> लौटाता है.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "जाँचें कि क्या 625 एक विषम संख्या है.",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "जाँचें कि क्या 82 एक विषम संख्या है.",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "संख्या का प्राकृतिक लघुगणक लौटाता है.",
        "Documentation.LongDescription": "संख्या, <code>number</code>, का प्राकृतिक लॉगेरिथ्म लौटाता है. यदि <code>number</code> नल है, तो <code>Number.Ln</code> नल लौटाता है.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "15 का प्राकृतिक लघुगणक प्राप्त करें.",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "निर्दिष्ट आधार (डिफ़ॉल्ट e) की संख्या का लघुगणक लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट <code>base</code> आधार के लिए एक संख्या <code>number</code> का लघुगणक लौटाता है. यदि <code>base</code> निर्दिष्ट नहीं है, तो डिफ़ॉल्ट मान Number.E होता है.\r\n    यदि <code>number</code> नल है, तो <code>Number.Log</code> नल लौटाता है.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "2 का आधार-10 लघुगणक प्राप्त करें.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "2 का आधार-e लघुगणक प्राप्त करें.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "संख्या का आधार-10 लघुगणक लौटाता है.",
        "Documentation.LongDescription": "संख्या, <code>number</code> का आधार-10 लघुगणक लौटाता है. अगर <code>number</code> नल है, तो <code>Number.Log10</code> नल लौटाता है.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "2 का आधार-10 लघुगणक प्राप्त करें.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "पूर्णांक संख्या लौटाता है. अंकों की संख्या और पूर्णन मोड निर्दिष्ट किए जा सकते हैं.",
        "Documentation.LongDescription": "निकटतम संख्या में पूर्णांक <code>number</code> का परिणाम लौटाता है. यदि <code>number</code> नल है, तो <code>Number.Round</code> नल लौटाता है.<br>\r\n      <br>\r\n      डिफ़ॉल्ट के रूप में, <code>number</code> को निकटतम पूर्णांक में बदला जाता है और युग्म को निकटतम सम संख्या में पूर्णांकन करके तोड़ दिया गया है (<code>RoundingMode.ToEven</code> का उपयोग करके, जिसे \"बैंकर्स राउडिंग” के नाम से भी जाना जाता है).<br>\r\n      <br>\r\n      हालाँकि, इन डिफ़ॉल्ट को निम्न वैकल्पिक पैरामीटर के माध्यम से ओवरराइड किया जा सकता है.\r\n      <ul>\r\n        <li><code>digits</code>: इससे <code>number</code> को दशमलव अंकों की विशिष्ट संख्या तक पूर्णांकन करना होगा.</li>\r\n        <li><code>roundingMode</code>:जब <code>number</code> दो संभावित पूर्णांक मानों\r\n के बीच मध्यबिंदु पर होता है, तो युग्म-तोड़ने के डिफ़ॉल्ट व्यवहार को ओवरराइड करता है      (संभावित मानों के लिए <code>RoundingMode.Type</code> देखें).</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "1.234 को निकटतम छोटे पूर्णांक तक पूर्णांक बनाता है.",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "1.56 को निकटतम छोटे पूर्णांक तक पूर्णांक बनाता है.",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "1.2345 को दो दशमलव स्थान तक पूर्णांक बनाएँ.",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "1.2345 को तीन दशमलव स्थान तक पूर्णांक बनाएँ (बढ़ाकर पूर्णांक बनाकर).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "1.2345 को तीन दशमलव स्थान तक पूर्णांक बनाएँ (घटाकर पूर्णांक बनाकर).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "धनात्मक संख्याओं को बढ़ाकर और ऋणात्मक संख्याओं को कम करके पूर्णांक बनाने का परिणाम लौटाता है. अंकों की संख्या निर्दिष्ट की जा सकती है.",
        "Documentation.LongDescription": "संख्या के चिह्न के आधार पर <code>number</code> को पूर्णांक का परिणाम लौटाता है. यह फ़ंक्शन, धनात्मक संख्याओं को बढ़ाकर और ऋणात्मक संख्याओं को कम करके पूर्णांक बना देगा.\r\n    यदि <code>digits</code> निर्दिष्ट हो, तो <code>number</code> को <code>digits</code> दशमलव अंकों तक पूर्णांक बनाया जाता है.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "संख्या -1.2 को शून्य से अधिक का पूर्णांक बनाता है.",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "संख्या 1.2 को शून्य से अधिक का पूर्णांक बनाता है.",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "संख्या -1.234 को शून्य से दूर दो दशमलव स्थानों तक पूर्णांक बनाएँ.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "पिछली सबसे बड़ी संख्या लौटाता है. अंकों की संख्या निर्दिष्ट की जा सकती है.",
        "Documentation.LongDescription": "<code>number</code> नीचे वाले पिछले उच्चतम पूर्णांक तक पूर्णांक बनाने का परिणाम लौटाता है. यदि <code>number</code> नल है, तो यह फ़ंक्शन नल लौटाता है.\r\n\r\n यदि <code>digits</code> प्रदान किया जाता है, तो <code>number</code> को निर्दिष्ट दशमलव अंकों तक पूर्णांक बना दिया जाता है.\r\n ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "1.234 को घटाकर पूर्णांक बनाएँ.",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "1.999 को कम करके पूर्णांक बनाएँ.",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "1.999 को दो दशमलव स्थानों तक पूर्णांक बनाएँ.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "धनात्मक संख्याओं को कम करके और ऋणात्मक संख्याओं को बढ़ाकर पूर्णांक बनाने का परिणाम लौटाता है. अंकों की संख्या निर्दिष्ट की जा सकती है.",
        "Documentation.LongDescription": "संख्याओं के चिह्न के आधार पर <code>number</code> को पूर्णांक बनाने का परिणाम लौटाता है. यह फ़ंक्शन, धनात्मक संख्याओं को कम करके और ऋणात्मक संख्याओं को बढ़ाकर पूर्णांक बना देगा.\r\n    यदि <code>digits</code> निर्दिष्ट हो, तो <code>number</code> को <code>digits</code> दशमलव अंकों तक पूर्णांक बनाया जाता है.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "-1.2 को शून्य की ओर पूर्णांक बनाएँ.",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "1.2 को शून्य की ओर पूर्णांक बनाएँ.",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "संख्या -1.234 को शून्य से दो दशमलव स्थानों तक पूर्णांक बनाएँ.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "अगली सबसे बड़ी संख्या लौटाता है. अंकों की संख्या निर्दिष्ट की जा सकती है.",
        "Documentation.LongDescription": "अगले उच्चतम पूर्णांक तक <code>number</code> पूर्णांक बनाने का परिणाम लौटाता है. यदि <code>number</code> नल है, तो यह फ़ंक्शन नल लौटाता है.\r\n यदि <code>digits</code> प्रदान किया जाता है, तो <code>number</code> को दशमलव अंकों की निर्दिष्ट संख्या तक पूर्णांक बना दिया जाता है.\r\n",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "1.234 को बढ़ाकर पूर्णांक बनाएँ.",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "1.999 को बढ़ाकर पूर्णांक बनाएँ.",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "1.234 को दो दशमलव स्थानों तक पूर्णांक बनाएँ.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "संख्या के धनात्मक होने पर 1, ऋणात्मक होने पर -1 और शून्य होने पर 0 लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> के धनात्मक संख्या होने पर 1, ऋणात्मक संख्या होने पर -1 और शून्य होने पर 0 लौटाता है.\r\n    यदि <code>number</code> नल है, तो <code>Number.Sign</code> नल लौटाता है.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "182 का चिह्न निर्धारित करें.",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "-182 का चिह्न निर्धारित करें.",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "0 का चिह्न निर्धारित करें.",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "संख्या का सिन लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का सिन लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "0 कोण का सिन प्राप्त करें.",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "संख्या का हाइपरबोलिक सिन लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का हाइपरबोलिक सिन लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "संख्‍या का वर्गमूल लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> का वर्गमूल लौटाता है.\r\n    यदि <code>number</code> नल है, तो <code>Number.Sqrt</code> नल लौटाता है. यदि यह एक ऋणात्मक मान है, तो <code>Number.NaN</code> (संख्या नहीं) लौटाया जाता है.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "625 का वर्गमूल प्राप्त करें.",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "85 का वर्गमूल प्राप्त करें.",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "संख्या की स्पर्श रेखा लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> की स्पर्श रेखा लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "1 कोण की स्पर्श रेखा प्राप्त करें.",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "संख्या की हाइपरबोलिक स्पर्श रेखा लौटाता है.",
        "Documentation.LongDescription": "<code>number</code> की हाइपरबोलिक स्पर्श रेखा लौटाता है.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "दी गई संख्या को टेक्स्ट में कन्वर्ट करता है.",
        "Documentation.LongDescription": "सांख्यिक मान <code>number</code> को <code>format</code> द्वारा बताए गए फ़ॉर्मेट में टेक्स्ट मान में बदलता है.<br>\r\n    <br>\r\n    फ़ॉर्मेट एक टेक्स्ट मान है जो इंगित करता है कि संख्या कैसे कन््र्ट की जानी चाहिए. समर्थित फ़ॉर्मेट मानों पर अधिक विवरण के लिए, https://go.microsoft.com/fwlink/?linkid=2241210 और https://go.microsoft.com/fwlink/?linkid=2240884 पर जाएँ.<br>\r\n    <br>\r\n    <code>format</code> के कल्चर पर निर्भर व्यवहार को नियंत्रित करने के लिए एक वैकल्पिक <code>culture</code> भी उपलब्ध कराया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "किसी स्वरूप को निर्दिष्ट किए बिना किसी संख्या को टेक्स्ट में कन्वर्ट करें.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "किसी संख्या को घातांक स्वरूप में रूपांतरित करें.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "किसी संख्या को केवल एक दशमलव स्थान के साथ प्रतिशत स्वरूप में कन्वर्ट करें.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "OData सेवा द्वारा प्रस्तावित OData फ़ीड की तालिका लौटाता है.",
        "Documentation.LongDescription": "किसी URI <code>serviceUri</code>, शीर्षलेख <code>headers</code>की OData सेवा द्वारा प्रदत्त OData फ़ीड वाली कोई तालिका लौटाता है. समवर्ती कनेक्शन का उपयोग किया जाए या किसी वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, का, यह निर्दिष्ट करने वाला बूलियन मान, निम्नलिखित विकल्पों को नियंत्रित करने के लिए निर्दिष्ट किया जा सकता है:\r\n    <ul>\r\n    <li><code>क्वेरी</code>: ऐस्केपिंग की चिंता किए बिना प्रोग्राम के ज़रिए URL में क्वेरी पैरामीटर जोड़ें. </li>\r\n    <li> <code>शीर्षलेख</code> : इस मान को किसी रिकॉर्ड के रूप में निर्दिष्ट करना किसी HTTP अनुरोध को अतिरिक्त शीर्षलेख प्रदान करेगा.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: इस मान को किसी सूची के रूप में निर्दिष्ट करना इन HTTP शीर्षलेख कुंजियों को कैशिंग डेटा के परिकलन का भाग होने से निकाल देगा </li>\r\n    <li> <code>ApiKeyName</code> : यदि लक्ष्य साइट में एक API कुंजी की धारणा है, तो इस पैरामीटर का उस कुंजी पैरामीटर के नाम को (मान को नहीं) निर्दिष्ट करने के लिए उपयोग किया जा सकता है जिसका URL में अवश्य उपयोग किया जाना चाहिए. वास्तविक कुँजी मान क्रेडेंशियल में प्रदान किया जाता है.</li>\r\n    <li> <code>टाइमआउट</code> :  इस मान को किसी अवधि के रूप में निर्दिष्ट करना किसी HTTP अनुरोध के टाइमआउट को बदल देगा. डिफ़ॉल्ट मान 600 सेकंड है.</li>\r\n    <li> <code>EnableBatch</code> : कोई तार्किक (true/false) जो यह सेट करता है कि MaxUriLength की सीमा पार हो जाने पर किसी OData $batch अनुरोध के जनरेशन की अनुमति देनी है या नहीं (डिफ़ॉल्ट false है).</li>\r\n    <li> <code>MaxUriLength</code> : कोई संख्या जो किसी OData सेवा को प्रेषित किसी अनुमत URI की अधिकतम लंबाई को इंगित करती है. यदि इसकी सीमा पार हो जाए और EnableBatch यदि true हो, तो अनुरोध OData $batch समाप्ति बिंदु को किया जाएगा, अन्यथा यह विफल हो जाएगा (डिफ़ॉल्ट 2048 है).</li>\r\n    <li> <code>Concurrent</code> : कोई तार्किक (true/false) जब true पर सेट किया गया हो, तो सेवा के लिए अनुरोध एक साथ ही किए जाएँगे. False पर सेट होने पर, अनुरोध क्रमिक रूप से किए जाएँगे. निर्दिष्ट नहीं किए जाने पर, सेवा के AsynchronousRequestsSupported एनोटेशन द्वारा मान को निर्धारित किया जाएगा. यदि सेवा यह निर्दिष्ट नहीं करती है कि AsynchronousRequestsSupported समर्थित है या नहीं, तो अनुरोध क्रमिक रूप से किए जाएँगे.</li>\r\n    <li> <code>ODataVersion</code> : कोई संख्या (3 या 4) जो इस OData सेवा के लिए उपयोग होने वाले OData प्रोटोकॉल संस्करण को निर्दिष्ट करती है. निर्दिष्ट नहीं किए जाने पर, सभी समर्थित संस्करणों का अनुरोध किया जाएगा. सेवा संस्करण को सेवा द्वारा लौटाए गए OData-संस्करण के शीर्षलेख द्वारा निर्धारित किया जाएगा.</li>\r\n    <li> <code>FunctionOverloads</code> : तार्किक (true/false) जब true पर सेट किया गया हो, तो फ़ंक्शन आयात ओवरलोड्स को नेविगेटर में अलग-अलग प्रविष्टियों के रूप में सूचीबद्ध किया जाएगा, false पर सेट होने पर, फ़ंक्शन आयात ओवरलोड को नेविगेटर में एक यूनियन फ़ंक्शन के रूप में सूचीबद्ध किया जाएगा. V3 के लिए डिफ़ॉल्ट मान: false. V4 के लिए डिफ़ॉल्ट मान: true है.</li>\r\n    <li> <code>MoreColumns</code> : कोई तार्किक (true/false) जब true पर सेट किया गया हो, तो खुले प्रकारों और बहुरूपी प्रकारों वाले प्रत्येक निकाय फ़ीड में एक \"अधिक कालम\" वाले कालम को जोड़ता है. इसमें वे फ़ील्ड शामिल होंगे जो आधार प्रकार में घोषित नहीं हैं. False होने पर, यह फ़ील्ड मौजूद नहीं होता है. False.पर डिफ़ॉल्ट कर जाता है.</li>\r\n    <li> <code>IncludeAnnotations</code> : \"*\" के साथ किसी वाइल्डकार्ड के रूप में शामिल करने के लिए योग्य शब्द नामों या प्रतिमानों की कॉमा सेपरेटेड सूची. डिफ़ॉल्ट रूप से, एनोटेशन में से किसी को भी शामिल नहीं किया गया है.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code> :  \"*\" के साथ किसी वाइल्डकार्ड के रूप में मेटाडेटा दस्तावेज़ अनुरोधों में शामिल करने के लिए योग्य शब्द नामों या प्रतिमानों की कॉमा सेपरेटेड सूची. डिफ़ॉल्ट रूप से, IncludeAnnotations जैसे ही एनोटेशन शामिल होते हैं.</li>\r\n    <li> <code>OmitValues</code> : OData सेवा को, प्रतिसादों में कुछ मानों को लिखने से बचने की, अनुमति देता है. यदि सेवा द्वारा इसे स्वीकार किया जाता है, तो हम छोड़े गए फ़ील्ड से उन मानों का अनुमान लगाएँगे. विकल्पों में शामिल हैं:\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code> : OData सेवा को नल मानों को छोड़ देने की अनुमति देता है.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>कार्यान्वयन</code> : उपयोग में लिए जाने वाले OData कनेक्टर का कार्यान्वयन निर्दिष्ट करता है. मान्य मान \"2.0\" या null हैं.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "TripPin OData सेवा से कनेक्ट करें.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "यह ODBC ड्राइवर के लिए SQL क्षमताओं को इनफ़र करने का प्रयास करने वाले परिणाम को लौटा देता है.",
        "Documentation.LongDescription": "यह ODBC का उपयोग करके कनेक्शन स्ट्रिंग <code>connectionString</code> के साथ SQL क्षमताओं को इंफ़र करने के प्रयास के परिणाम को लौटाता है. <code>connectionString</code> गुण के मान युग्मों का पाठ या रिकॉर्ड हो सकता है. गुण के मान या तो पाठ हो सकते हैं या फिर संख्या.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "कनेक्शन स्ट्रिंग के लिए अनुमानित SQL क्षमताएँ लौटाना.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "पार्के दस्तावेज़ को एक तालिका के रूप लौटाता है.",
        "Documentation.LongDescription": "Parquet दस्तावेज़ की सामग्रियों को तालिका के रूप में लौटाता है. विकल्पों में शामिल हैं: <ul> <li> <code>TypeMapping</code> : वह टेक्स्ट मान जो फ़ाइलों को पढ़ते और लिखते समय डिफ़ॉल्ट प्रकार की मैपिंग को नियंत्रित करता है. डिफ़ॉल्ट मान शून्य है और मूल प्रकार के प्रति जितनी हो सके उतनी निष्ठा बनाएँ रखने का प्रयास करता है. \"Sql\" का एक मूल्य Sql सर्वर के साथ सबसे अधिक संगत परिणाम देगा.</li> </ul>",
        "Documentation.Category": "डेटा पर पहुँच प्राप्त करना",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "डेटा पर पहुँच प्राप्त करना",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "दिए गए मान से प्रतिशत मान वापस देता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से <code>प्रतिशत</code> मान लौटाता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Percentage.From</code> <code>नल</code> लौटाता है. यदि दिया गया <code>value</code> ट्रेलिंग प्रतिशत चिह्न वाला <code>पाठ</code> है, तो रूंपातरित दशमलव वाली संख्या लौटायी जाएगी. अन्यथा, इसको <code>संख्या</code>  मान में रुपांतरित करने के लिए <code>Number.From</code> देखें. एक वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"12.3%\"</code> का मान <code>प्रतिशत</code> प्राप्त करें.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "RData फ़ाइल से डेटा फ़्रेम का रिकॉर्ड लौटाता है.",
        "Documentation.LongDescription": "RData फ़ाइल से डेटा फ़्रेम का रिकॉर्ड लौटाता है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "दी गई सूची के रिकॉर्ड संयोजित करता है.",
        "Documentation.LongDescription": "दी गई <code>records</code> के रिकॉर्ड संयोजित करता है. अगर <code>records</code> में गैर-रिकॉर्ड वाले मान हैं, तो एक त्रुटि लौटाई जाती है.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड से एक संयोजित रिकॉर्ड बनाएँ.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "रिकॉर्ड की फ़ील्ड की संख्या लौटाता है.",
        "Documentation.LongDescription": "रिकॉर्ड <code>record</code> की फ़ील्ड की संख्या लौटाता है.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड में फ़ील्ड की संख्या ढूँढें.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "फ़ील्ड के नाम लौटाता है.",
        "Documentation.LongDescription": "रिकॉर्ड <code>record</code> की फ़ील्ड के नामों को पाठ के रूप में लौटाता है.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड में फ़ील्ड का नाम ढूँढें.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "फ़ील्ड मान की सूची लौटाता है.",
        "Documentation.LongDescription": "रिकॉर्ड <code>record</code> के फ़ील्ड मान की सूची लौटाता है.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड में फ़ील्ड मान ढूँढें.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "किसी तालिका से {[Name = name, Value = value]} के रूप में एक रिकॉर्ड बनाता है.",
        "Documentation.LongDescription": "रिकॉर्ड की तालिका <code>table</code> से एक रिकॉर्ड लौटाता है, जिसमें फ़ील्ड नाम और मान नाम <code>{[Name = name, Value = value]}</code> होते हैं. अगर फ़ील्ड नाम अद्वितीय नहीं हैं, तो एक अपवाद दिखाया जाता है.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "फ़ॉर्म तालिका की तालिका से एक रिकॉर्ड बनाएँ.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}).",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "ऐसे मानों की एक सूची लौटाता है जिनमें इनपुट रिकॉर्ड के फ़ील्ड मान होते हैं.",
        "Documentation.LongDescription": "ऐसा मानों की सूची लौटाता है जिनमें इनपुट <code>record</code> के फ़ील्ड मान होते हैं.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "किसी रिकॉर्ड से फ़ील्ड मान निकालें.",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "एक सारांश सिंटैक्स ट्री (AST) वापस करता है जो पंक्ति व्यंजक के भीतर पंक्ति के कालम तक पहुँच का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "एक सारांश सिंटैक्स ट्री (AST) वापस करता है जो पंक्ति व्यंजक के भीतर पंक्ति के कालम <code>columnName</code> तक पहुँच का प्रतिनिधित्व करता है.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "\"CustomerName\" स्तंभ की पहुँच प्रस्तुत करने वाला AST बनाता है.",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "किसी फ़ंक्शन के मुख्य भाग के लिए सारांश सिंटैक्स ट्री (AST) वापस करता है.",
        "Documentation.LongDescription": "<p><code>function</code> के मुख्य भाग के लिए अमूर्त सिंटैक्स ट्री (AST) देता है, जो <i>row व्यंजक में सामान्यीकृत होता है</i>:\r\n<ul>\r\n  <li>फ़ंक्शन एक 1-तर्क lambda होना चाहिए</li>\r\n  <li>फ़ंक्शन पैरामीटर के सभी संदर्भ <code>RowExpression.Row</code> से बदल दिए गए हैं.</li>\r\n  <li>कॉलम के सभी संदर्भ <code>RowExpression.Column(<i>columnName</i>)</code> से बदल दिए गए हैं.</li>\r\n  <li>AST को इस प्रकार के केवल नोड्स रखने के लिए सरलीकृत किया जाएगा:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>यदि पंक्ति व्यंजक AST को <code>function</code> के मुख्य भाग के लिए लौटाता नहीं जा सकता, तो कोई त्रुटि उत्पन्न होती है.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "फ़ंक्शन <code>each [CustomerID] = \"ALFKI\"</code> के मुख्य भाग के लिए AST लौटाता है",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "दिए गए मान से एकल बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से दशमलव <code>संख्या</code> मान वापस करता है. यदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Decimal.From</code> <code>नल</code> वापस करता है.  यदि दिया गया <code>value</code> <code>संख्या</code> है जो दशमलव की श्रेणी में है, तो <code>value</code> वापस किया जाता है अन्यथा त्रुटि वापस की जाती है. यदि <code>value</code> किसी अन्य प्रकार का है, तो पहले वह <code>Number.FromText</code> का उपयोग करके <code>संख्या</code> में रूपांतरित होगा. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "<code>\"1.5\"</code> का एकल <code>संख्यात्मक</code> मान प्राप्त करें.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "एक Smartsheet अनुक्रमणिका समाप्ति बिंदु से डेटा की एक तालिका लौटाता है.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "निर्दिष्ट समाप्ति बिंदु पर Smartsheet 2.0 REST API के लिए कॉल करता है और तालिका में लौटाए गए डेटा तत्व को रूपांतरित करता है.",
        "Documentation.Examples": [
          {
            "Description": "Smartsheet API से उपयोगकर्ता जानकारी की एक तालिका पुल करता है",
            "Code": "Smartsheet.Content(\"उपयोगकर्ता\")",
            "Result": "Smartsheet API द्वारा लौटाई गई उपयोगकर्ता जानकारी वाली एक तालिका"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो किसी भी निर्दिष्ट डीलिमीटर पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो किसी भी निर्दिष्ट डीलिमीटर पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "उद्धरणों और उद्धरित डिलिमिटर्स पर ध्यान न देते हुए और इनपुट की शुरुआत से प्रारंभ करते हुए, इनपुट को अल्पविराम या अर्धविराम से विभाजित करें.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "उद्धरणों और उद्धरित डिलिमिटर्स पर ध्यान न देते हुए और इनपुट के अंत से प्रारंभ करते हुए, इनपुट को अल्पविराम या अर्धविराम से विभाजित करें.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट डीलिमीटर के अनुसार पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट डीलिमीटर के अनुसार पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "उद्धृत अल्पविरामों पर ध्यान न देते हुए, इनपुट को अल्पविराम द्वारा विभाजित करें.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो अनुक्रम में प्रत्येक निर्दिष्ट डीलिमीटर पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो अनुक्रम में प्रत्येक निर्दिष्ट डीलिमीटर पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "इनपुट की शुरुआत से प्रारंभ करते हुए, इनपुट को अल्पविराम, फिर अर्धविराम द्वारा, विभाजित करें.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "उद्धरणों को किसी अन्य वर्ण की तरह मानते हुए और इनपुट के अंत से प्रारंभ करते हुए, इनपुट को अल्पविराम, फिर अर्धविराम द्वारा विभाजित करें.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो प्रत्येक निर्दिष्ट लंबाई पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो प्रत्येक निर्दिष्ट लंबाई पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "इनपुट की शुरुआत से प्रारंभ करते हुए, इनपुट को पहले के दो वर्णों में, और उसके बाद अगले तीन वर्णों में, विभाजित करें.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "इनपुट के अंत से प्रारंभ करते हुए, इनपुट को पहले के तीन वर्णों में, और उसके बाद अगले दो वर्णों में, विभाजित करें.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो प्रत्येक निर्दिष्ट स्थिति पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो प्रत्येक निर्दिष्ट स्थिति पर पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "इनपुट की शुरुआत से प्रारंभ करते हुए, इनपुट को निर्दिष्ट स्थितियों पर विभाजित करें.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "इनपुट के अंत से प्रारंभ करते हुए, इनपुट को निर्दिष्ट स्थितियों पर विभाजित करें.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो निर्दिष्ट ऑफ़सेट और लंबाइयों के अनुसार पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन देता है जो टेक्स्ट को खास ऑफ़सेट और लंबाई के अनुसार टेक्स्ट की सूची में बाँटता है. नल लंबाई बताती है कि सभी बचे हुए इनपुट शामिल किए जाने चाहिए.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "इनपुट के की शुरुआत से प्रारंभ करते हुए, निर्दिष्ट स्थिति और लंबाई के युग्मों के अनुसार इनपुट को विभाजित करें. ध्यान दें कि इस उदाहरण की श्रेणियाँ अधिव्यापन करती हैं.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "इनपुट के अंत से प्रारंभ करते हुए, निर्दिष्ट स्थिति और लंबाई के युग्मों के अनुसार इनपुट को विभाजित करें.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "इनपुट को किसी निश्चित-लंबाई वाले पोस्टल कोड के बाद चर-लंबाई वाले शहर के नाम में बाँटें.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "ऐसा फ़ंक्शन लौटाता है जो बार-बार निर्दिष्ट लंबाई के बाद पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.LongDescription": "ऐसा फ़ंक्शन लौटाता है जो बार-बार निर्दिष्ट लंबाई के बाद पाठ को पाठ की सूची में विभाजित करता है.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "इनपुट की शुरुआत से प्रारंभ करके, इनपुट को तीन वर्णों के टुकड़ों में बार-बार विभाजित करें.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "इनपुट के अंत से प्रारंभ करते हुए, इनपुट को तीन वर्णों के टुकड़ों में बार-बार विभाजित करें.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "तालिका में अनुमानित पंक्तियों की संख्या वापस करता है.",
        "Documentation.LongDescription": "<code>table</code> में लगभग पंक्तियों की संख्या को, या यदि डेटा स्रोत अनुमान का समर्थन नहीं करता ह, तो किसी त्रुटि को, लौटाता है.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "किसी बड़ी तालिका में, जिसका उपयोग कालम्स के लिए कार्डिनालिटी अनुमान के रूप में किया जा सकता है, शहर और राज्य के विशिष्ट संयोजनों की संख्या का अनुमान लगाएँ. कार्डिनालिटी अनुमान पर्याप्त रूप से महत्वपूर्ण होते हैं क्योंकि विभिन्न डेटा स्रोत (जैसे कि SQL Server), अक्सर HyperLog नामक एल्गोरिथ्म का उपयोग करते हुए, इस विशेष अनुमान का समर्थन करते हैं.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "तालिका में मौजूद स्तंभों की संख्या लौटाता है.",
        "Documentation.LongDescription": "तालिका <code>table</code> में मौजूद स्तंभों की संख्या लौटाता है.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "तालिका में मौजूद स्तंभों की संख्या ढूँढें.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "स्तंभ नामों को एक सूची के रूप में लौटाता है.",
        "Documentation.LongDescription": "तालिका <code>table</code> में मौजूद स्तंभ नामों को पाठ की सूची के रूप में लौटाता है.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका के स्तंभ नाम ढूँढें.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "पहली पंक्ति या कोई निर्दिष्ट डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "<code>table</code> की पहली पंक्ति या तालिका रिक्त होने पर वैकल्पिक डिफ़ॉल्ट मान, <code>default</code>, लौटाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की पहली पंक्ति प्राप्त ढूँढें.",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "तालिका <code>({})</code> की पहली पंक्ति प्राप्त करें या रिक्त होने पर [a = 0, b = 0] दें.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "तालिका या निर्दिष्ट डिफ़ॉल्ट मान की पहली पंक्ति का पहला स्तंभ लौटाता है.",
        "Documentation.LongDescription": "तालिका <code>table</code> या निर्दिष्ट डिफ़ॉल्ट मान की पहली पंक्ति का पहला स्तंभ लौटाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "इंगित देता है कि तालिका में केवल विशिष्ट पंक्तियाँ (कोई डुप्लिकेट नहीं) हैं या नहीं.",
        "Documentation.LongDescription": "इंगित करता है कि <code>table</code> में केवल विशिष्ट पंक्तियाँ (कोई डुप्लिकेट नहीं) हैं या नहीं. पंक्तियों के विशिष्ट होने पर <code>सत्य</code> अन्यथा <code>असत्य</code> लौटाता है.\r\n    एक वैकल्पिक पैरामीटर, <code>comparisonCriteria</code>, निर्दिष्ट करता है कि डुप्लिकेशन के लिए तालिका के किन स्तंभों का परीक्षण किया जाए. यदि <code>comparisonCriteria</code> को निर्दिष्ट नहीं किया जाता है, तो सभी स्तंभों का परीक्षण किया जाता है.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या तालिका विशिष्ट है.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "निर्धारित करें कि क्या तालिका स्तंभ में विशिष्ट है.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "इंगित करता है कि क्या तालिका में कोई पंक्ति है.",
        "Documentation.LongDescription": "इंगित करता है कि <code>table</code> में कोई पंक्ति है या नहीं. यदि कोई पंक्ति नहीं है (अर्थात् तालिका रिक्त है) तो <code>असत्य</code> लौटाता है, अन्यथा <code>सत्य</code> लौटाता.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि क्या तालिका रिक्त है.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "निर्धारित करें कि क्या तालिका <code>({})</code> रिक्त है.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "निर्दिष्ट तालिका की कुंजियाँ वापस करता है.",
        "Documentation.LongDescription": "निर्दिष्ट तालिका की कुंजियाँ वापस करता है.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "तालिका के लिए कुंजियों की सूची प्राप्त करें.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "अंतिम पंक्ति या कोई निर्दिष्ट डिफ़ॉल्ट मान लौटाता है.",
        "Documentation.LongDescription": "<code>table</code> की अंतिम पंक्ति या तालिका रिक्त होने पर वैकल्पिक डिफ़ॉल्ट मान, <code>default</code>, लौटाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका की अंतिम पंक्ति ढूँढें.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "तालिका <code>({})</code> की अंतिम पंक्ति ढूँढें या रिक्त होने पर [a = 0, b = 0] दें.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "तालिका की पंक्तियों की संख्या लौटाता है.",
        "Documentation.LongDescription": "<code>table</code> की पंक्तियों की संख्या लौटाता है.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "तालिका में पंक्तियों की संख्या ढूँढें.",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "तालिका में एकल पंक्ति लौटाता है.",
        "Documentation.LongDescription": "एक पंक्ति <code>table</code> में एकल पंक्ति लौटाता है. यदि <code>table</code> में एक से अधिक पंक्ति होती हैं, तो एक अपवाद दिखाया जाता है.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "तालिका में एकल पंक्ति लौटाएँ.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "तालिका से स्तंभ मानों की नेस्टेड सूचियों से एक सूची बनाता है.",
        "Documentation.LongDescription": "तालिका, <code>table</code> की नेस्टेड सूचियों से एक सूची बनाता है.  प्रत्येक सूचीबद्ध आइटम एक आंतरिक सूची होती है जिनमें स्तंभ मान होते हैं.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "तालिका के स्तंभ मानों की एक सूची बनाएँ.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "तालिका में मानों की प्रत्येक पंक्ति पर निर्दिष्ट संयोजन फ़ंक्शन लागू करके तालिक को एक सूची में रूपांतरित करता है.",
        "Documentation.LongDescription": "तालिका में मानों की प्रत्येक पंक्ति पर निर्दिष्ट संयोजन फ़ंक्शन लागू करके तालिक को एक सूची में रूपांतरित करता है.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "प्रत्येक पंक्ति के पाठ को अर्द्धविराम के साथ संयोजित करें.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "तालिका को रिकॉर्ड की सूची में रूपांतरित करता है.",
        "Documentation.LongDescription": "तालिका, <code>table</code>, को रिकॉर्ड की सूची में रूपांतरित करता है.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "तालिका को रिकॉर्ड की सूची में रूपांतरित करें.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "तालिका से पंक्ति मानों की नेस्टेड सूचियों से एक सूची बनाता है.",
        "Documentation.LongDescription": "तालिका, <code>table</code> की नेस्टेड सूचियों से एक सूची बनाता है.  प्रत्येक सूचीबद्ध आइटम एक आंतरिक सूची होती है जिनमें पंक्ति मान होते हैं.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "तालिका के पंक्ति मानों की एक सूची बनाएँ.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "एक संशोधित त्रुटि रिकॉर्ड बनाता है जो किसी दृश्य (Table.View के माध्यम से) पर निर्धारित हैंडलर द्वारा फेंके जाने पर फ़ॉलबैक ट्रिगर नहीं करता है.",
        "Documentation.LongDescription": "<code>errorRecord</code> से संशोधित त्रुटि रिकॉर्ड बनाता है जो किसी दृश्य (Table.View के माध्यम से) पर परिभाषित हैंडलर द्वारा फेंके जाने पर फ़ॉलबैक ट्रिगर नहीं करता है.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "एक ऐसा फ़ंक्शन बनाता है, जिसे किसी दृश्य पर (Table.View के माध्यम से) परिभाषित किए गए हैंडलर द्वारा बीच में रोका जा सकता है.",
        "Documentation.LongDescription": "<p><code>function</code> पर आधारित कोई ऐसा दृश्य फ़ंक्शन बनाता है, जिसे <code>Table.View</code> द्वारा बनाए गए दृश्य में हैंडल किया जा सकता है.</p>\r\n<p> <code>Table.View</code> के <code>OnInvoke</code> हैंडलर का उपयोग दृश्य फ़ंक्शन के लिए हैंडलर परिभाषित करने हेतु किया जा सकता है.</p>\r\n<p>अंतर्निहित कार्रवाइयों के हैंडलर्स की तरह, यदि कोई भी <code>OnInvoke</code> हैंडलर निर्दिष्ट नहीं है या यह दृश्य फ़ंक्शन को हैंडल नहीं करता है या हैंडलर द्वारा कोई त्रुटि उठाई जाती है, तो <code>function</code> को दृश्य के शीर्ष पर लागू किया जाता है.</p>\r\n<p> <code>Table.View</code> और कस्टम दृश्य फ़ंक्शन के अधिक पूर्ण विवरण के लिए प्रकाशित Excel के लिए Microsoft Power Query कस्टम कनेक्टर दस्तावेज़ देखें.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "निकाले गए सभी नियंत्रण वर्णों के साथ पाठ मान लौटाता है.",
        "Documentation.LongDescription": "<code>text</code> के निकाले गए सभी नियंत्रण वर्णों के साथ एक पाठ मान लौटाता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान से पंक्ति फ़ीड और अन्य नियंत्रण वाले वर्ण निकालें.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "पाठ मानों की सूची को एक पाठ मान में श्रृंखलाबद्ध करता है.",
        "Documentation.LongDescription": "टेक्स्ट मानों, <code>texts</code>, की सूची को एकल टेक्स्ट मान में संयोजित करने के परिणाम को लौटाता है. <code>texts</code> में मौजूद किसी भी <code>null</code> मान की उपेक्षा की जाती है.\r\n    अंतिम संयुक्त टेक्स्ट में उपयोग किए गए वैकल्पिक <code>separator</code> को निर्दिष्ट किया जा सकता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "पाठ मान \"Seattle\" और \"WA\" को संयोजित करें.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "कॉमा और रिक्ति से विभाजित टेक्स्ट मान \"Seattle\" और \"WA\" को संयोजित करें.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "अल्पविराम और रिक्ति से विभाजित मानों \"Seattle\", <code>null</code> और \"WA\" को संयोजित करें. (ध्यान दें कि <code>null</code> की उपेक्षा की गई है.)",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "दिए गए मान से एक पाठ मान बनाता है.",
        "Documentation.LongDescription": "<code>value</code> का पाठ प्रस्तुतिकरण लौटाता है. <code>value</code> एक <code>संख्या</code>, <code>दिनांक</code>, <code>समय</code>, <code>तिथिसमय</code>, <code>datetimezone</code>, <code>तार्किक</code>, <code>अवधि</code> या <code>बाइनरी</code> मान हो सकता है.\r\n    यदि दिया गया मान नल होता है, तो <code>Text.From</code> नल लौटाता है. एक वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "संख्या 3 से एक पाठ मान बनाएँ.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "डेटा को बाइनरी फ़ॉर्म से पाठ में डीकोड करता है.",
        "Documentation.LongDescription": "<code>encoding</code> प्रकार का उपयोग करके डेटा, <code>binary</code>, को बाइनरी मान से पाठ मान में डीकोड करता है.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "पाठ में एन्कोड की गई संख्या के ग्रैन्युलर नंबर प्रकार (Int64.Type, Double.Type, इत्यादि.) का अनुमान लगाता है.",
        "Documentation.LongDescription": "<code>text</code> के ग्रैन्युलर नंबर के प्रकार (Int64.Type, Double.Type, इत्यादि.) का अनुमान लगाता है. यदि <code>text</code> कोई संख्या न हो, तो एक त्रुटि उत्पन्न की जाती है. एक वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "वर्णों की संख्‍या लौटाता है.",
        "Documentation.LongDescription": "पाठ <code>text</code> के वर्णों की संख्या लौटाता है.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "खोजें कि पाठ \"Hello World\" में कितने वर्ण हैं.",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "सभी वर्णों को लोअरकेस में रूपांतरित करता है.",
        "Documentation.LongDescription": "<code>text</code> के सभी वर्णों को लोअरकेस में रूपांतरित करने वाला परिणाम लौटाता है. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"AbCd\" का लोअरकेस संस्करण प्राप्त करें.",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "प्रत्येक शब्द का पहला अक्षर कैपिटल करता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> के प्रत्येक शब्द के केवल पहले अक्षर को कैपिटलाइज़ करने वाले परिणाम को लौटाता है. सभी अन्य अक्षर लोअरकेस में लौटाए जाते हैं. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "साधारण वाक्य पर <code>Text.Proper</code> का उपयोग करें.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "उपलब्ध कराए गए <code>text</code> को रिवर्स कर देता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"123\" पाठ को रिवर्स करें.",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "पाठ को बाइनरी फ़ॉर्म में एन्कोड करता है.",
        "Documentation.LongDescription": "निर्दिष्ट <code>encoding</code> का उपयोग कर दिए गए पाठ मान <code>text</code> को बाइनरी मान में एन्कोड करता है.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "दिए गए पाठ मान से वर्ण मानों की सूची लौटाता है.",
        "Documentation.LongDescription": "दिए गए पाठ मान <code>text</code> से वर्ण मानों की सूची लौटाता है.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "पाठ \"Hello World\" से वर्ण मानों की सूची बनाएँ.",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "अगले और पिछले सभी सफेद रिक्त स्थान निकालता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> से निकाले गए सभी अगले और पिछले सफेद रिक्त स्थान का परिणाम लौटाता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"     a b c d    \" से अगले और पिछले सफेद रिक्त स्थान निकालें.",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "पिछले सभी सफेद रिक्त स्थान निकालता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> से निकाले गए सभी पिछले सफेद रिक्त स्थान का परिणाम लौटाता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"     a b c d    \" से पिछले सफेद रिक्त स्थान निकालें.",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "अगले सभी सफेद रिक्त स्थान निकालता है.",
        "Documentation.LongDescription": "पाठ मान <code>text</code> से निकाले गए सभी अगले सफेद रिक्त स्थान का परिणाम लौटाता है.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"     a b c d    \" से अगले सफेद रिक्त स्थान निकालें.",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "सभी वर्णों को अपरकेस में कनवर्ट करता है.",
        "Documentation.LongDescription": "<code>text</code> के सभी वर्णों को अपरकेस में रूपांतरित करने वाला परिणाम लौटाता है. वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "\"aBcD\" का अपरकेस संस्करण प्राप्त करें.",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "घंटे का अंत लौटाता है.",
        "Documentation.LongDescription": "आंशिक सेकंड सहित, <code>dateTime</code> द्वारा दर्शाए गए घंटे के अंत में लौटाता है. समय क्षेत्र की जानकारी संरक्षित है.\r\n      <ul>\r\n        <li><code>dateTime</code>: एक ऐसा <code>time</code>, <code>datetime</code> या <code>datetimezone</code> मान, जिससे घंटे की समाप्ति का परिकलन किया जाता है.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "5/14/2011 05:00:00 अपराह्न के लिए घंटे की समाप्ति प्राप्त करें.",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "5/17/2011 05:00:00 अपराह्न -7:00 के लिए घंटे की समाप्ति प्राप्त करें.",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "दिए गए मान से एक समय बनाता है.",
        "Documentation.LongDescription": "दिए गए <code>value</code> से एक <code>समय</code> मान लौटाता है. एक वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").\r\nयदि दिया गया <code>value</code> <code>नल</code> है, तो <code>Time.From</code> <code>नल</code> लौटाता है. यदि दिया गया <code>value</code> <code>समय</code> है, तो <code>value</code> लौटाया जाता है. निम्न प्रकार के मानों को एक <code>समय</code> मान में रूपांतरित किया जा सकता है:\r\n      <ul>\r\n        <li><code>पाठ</code>: पाठ प्रस्तुतिकरण से एक <code>समय</code> मान. विवरण के लिए <code>Time.FromText</code> देखें.</li>\r\n        <li><code>तिथिसमय</code>: <code>value</code> का समय घटक.</li>\r\n        <li><code>datetimezone</code>: <code>value</code> के समतुल्य स्थानीय तिथिसमय का समय घटक.</li>\r\n        <li><code>संख्या</code>: <code>value</code> द्वारा व्यक्त आंशिक दिनों की संख्या के समतुल्य <code>समय</code>. अगर <code>value</code> ऋणात्मक या 1 से बड़ा या उसके बराबर है, तो एक त्रुटि लौटाई जाती है.</li>\r\n      </ul>\r\nअगर <code>value</code> किसी भी अन्य प्रकार का है, तो एक त्रुटि लौटाई जाती है.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "<code>0.7575</code> को एक <code>time</code> मान में रूपांतरित करें.",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "<code>#datetime(1899, 12, 30, 06, 45, 12)</code> को एक <code>time</code> मान में रूपांतरित करें.",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "स्थानीय और वैश्विक, कस्टम समय फ़ॉर्मेट से समय बनाता है.",
        "Documentation.LongDescription": "पाठ प्रस्तुतिकरण, <code>text</code> से <code>time</code> मान बनाता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code> अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: उपयोग करने के लिए फ़ॉर्मेट को इंगित करने वाला <code>text</code> मान. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को छोड़ देने से या <code>नल</code> प्रदान करने के परिणामस्वरूप सर्वश्रेष्ठ प्रयास का उपयोग करके समय पार्स होगा.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल नहीं होता है, तब <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"tt\"</code> में यह <code>\"AM\" या \"PM\",</code> होता है, जबकि <code>\"ar-EG\"</code> <code>\"tt\"</code> <code>\"ص\" या \"م\"</code> होता है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तब <code>कल्चर</code> उपयोग करने के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>Culture</code> <code>नल</code> होता है या छोड़ दिया जाता है, तब <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> पाठ मान भी हो सकता है. इसमें <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code> जैसा समान व्यवहार होता है.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "<code>\"10:12:31am\"</code> को एक समय मान में रूपांतरित करें.",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "<code>\"1012\"</code> को समय मान में रूपांतरित करें.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "<code>\"10\"</code> को समय मान में रूपांतरित करें.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "घंटा घटक लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>time</code>, <code>datetime</code>, या <code>datetimezone</code> मान का घंटा घटक लौटाता है, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "घंटे को #datetime(2011, 12, 31, 9, 15, 36) में प्राप्त करें.",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "मिनट घटक लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>time</code>, <code>datetime</code>, या <code>datetimezone</code> मान का मिनट घटक लौटाता है, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "मिनट को #datetime(2011, 12, 31, 9, 15, 36) में ढूँढें.",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "सेकंड घटक लौटाता है.",
        "Documentation.LongDescription": "प्रदान किए गए <code>time</code>, <code>datetime</code>, या <code>datetimezone</code> मान का सेकंड घटक लौटाता है, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "तिथिसमय मान से दूसरा मान प्राप्त करें.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "घंटे के प्रारंभ में लौटाता है.",
        "Documentation.LongDescription": "<code>dateTime</code> द्वारा दर्शाए गए दिन की शुरुआत में लौटाता है.\r\n    <code>dateTime</code> का एक <code>time</code>, <code>datetime</code> or <code>datetimezone</code> मान होना अनिवार्य है.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "10 अक्टूबर, 2011, 8:10:32 पूर्वाह्न के लिए घंटे के प्रारंभ में प्राप्त करें.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "वह रिकॉर्ड लौटाता है, जिसमें समय मान के भाग शामिल हैं.",
        "Documentation.LongDescription": "वह रिकॉर्ड लौटाता है, जिसमें दिए गए समय मान <code>time</code> के भाग शामिल हैं.\r\n <ul>\r\n        <li><code>time</code>: एक ऐसा <code>समय</code> मान, जिससे उसके अंशों के रिकॉर्ड को परिकलित किया जाना है.</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "<code>#time(11, 56, 2)</code> मान को उस रिकॉर्ड में रूपांतरित करें जिसमें समय मान शामिल हैं.",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "समय मान का पाठ प्रस्तुतिकरण लौटाता है.",
        "Documentation.LongDescription": "<code>time</code> का पाठ प्रस्तुतिकरण वापस करता है. वैकल्पिक <code>रिकॉर्ड</code> पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. <code>culture</code> का केवल लीगेसी कार्यप्रवाह के लिए उपयोग किया जाता है. <code>रिकॉर्ड</code> में निम्न फ़ील्ड हो सकती हैं:\r\n<ul>\r\n   <li><code>फ़ॉर्मेट</code>: <code>पाठ</code> मान जो उपयोग करने के लिए फ़ॉर्मेट इंगित करता है. https://go.microsoft.com/fwlink/?linkid=2180104 और https://go.microsoft.com/fwlink/?linkid=2180105 पर जाएँ. इस फ़ील्ड को हटाने से या <code>नल</code> प्रदान करने से <code>कल्चर</code> द्वारा परिभाषित मान का उपयोग करके दिनांक फ़ॉर्मेट होगी.</li>\r\n   <li><code>कल्चर</code>: जब <code>फ़ॉर्मेट</code> नल न हो, तो <code>कल्चर</code> कुछ फ़ॉर्मेट निर्दिष्टकर्ताओं को नियंत्रित करता है. उदाहरण के लिए, <code>\"en-US\"</code> <code>\"tt\"</code> <code>\"AM\" या \"PM\"</code> होता है, जबकि <code>\"ar-EG\"</code> <code>\"tt\"</code> <code>\"ص\" या \"م\"</code> होता है. जब <code>फ़ॉर्मेट</code> <code>नल</code> होता है, तो <code>कल्चर</code> उपयोग के लिए डिफ़ॉल्ट फ़ॉर्मेट को नियंत्रित करता है. जब <code>कल्चर</code> <code>नल</code> होता है या हटा दिया जाता है, तो <code>Culture.Current</code> का उपयोग किया जाता है.</li>\r\n</ul>\r\nलीगेसी कार्यप्रवाह का समर्थन करने के लिए, <code>options</code> और <code>culture</code> पाठ मान भी हो सकते हैं. इसका <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code> जैसा समान व्यवहार हो सकता है.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "<code>#time(01, 30, 25)</code> को <code>पाठ</code> मान में रूपांतरित करें. <i>परिणाम आउटपुट वर्तमान कल्चर के आधार पर भिन्न हो सकता है.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "कस्टम फ़ॉन्ट और जर्मन कल्चर का उपयोग करके रूपांतरित करें.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "मानक समय फ़ॉर्मेट का उपयोग करके रूपांतरित करें.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "दिए गए रिकॉर्ड प्रकार (या समान प्रकार, यदि वह पहले से बंद हो) का बंद संस्‍करण लौटाता है.",
        "Documentation.LongDescription": "दिए गए <code>रिकॉर्ड</code> <code>type</code> (या समान प्रकार, यदि पहले से बंद हो) का बंद संस्‍करण लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "<code>type [ A = number,…]</code> का बंद संस्‍करण बनाएँ.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "किसी प्रकार के फ़ैसिट लौटाता है.",
        "Documentation.LongDescription": "<code>type</code> के फ़ैसिट वाला रिकॉर्ड लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "फ़ंक्‍शन प्रकार के पैरामीटर के नाम पर सेट किए गए फ़ील्‍ड मानों, और उनसे संबंधित प्रकारों पर सेट किए गए उनके मानों के साथ रिकॉर्ड लौटाता है.",
        "Documentation.LongDescription": "<code>type</code> के पैरामीटर के नाम पर सेट किए गए फ़ील्‍ड मानों, और उनसे संबंधित प्रकारों पर सेट किए गए उनके मानों के साथ रिकॉर्ड लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "फ़ंक्‍शन <code>(x as number, y as text)</code> के लिए पैरामीटर के प्रकार ढूँढें.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "वह संख्‍या लौटाता है जो फ़ंक्‍शन प्रकार को इनवोक करने के लिए आवश्यक पैरामीटर की न्‍यूनतम संख्‍या दर्शाती है.",
        "Documentation.LongDescription": "वह संख्‍या लौटाता है जो फ़ंक्‍शन के इनपुट <code>type</code> को इनवोक करने के लिए आवश्‍यक पैरामीटर की न्‍यूनतम संख्‍या दर्शाती है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "फ़ंक्‍शन <code>(x as number, optional y as text)</code> के लिए आवश्‍यक पैरामीटर की संख्‍या ढूँढें.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "फ़ंक्‍शन प्रकार द्वारा लौटाया गया प्रकार लौटाता है.",
        "Documentation.LongDescription": "फ़ंक्‍शन <code>type</code> द्वारा लौटाया गया प्रकार लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "<code>() as any)</code> का वापसी प्रकार ढूँढें.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "यदि प्रकार निरर्थक प्रकार हो, तो सही लौटाता है; अन्‍यथा, गलत लौटाता है.",
        "Documentation.LongDescription": "यदि प्रकार <code>निरर्थक</code> प्रकार हो, तो <code>सही</code> लौटाता है; अन्‍यथा, <code>गलत</code> लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि <code>संख्‍या</code> निरर्थक है या नहीं.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "निर्धारित करें कि <code>type nullable number</code> निरर्थक है या नहीं.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "यह बताता है कि रिकॉर्ड प्रकार खुला है या नहीं.",
        "Documentation.LongDescription": "वह <code>तार्किक</code> लौटाता है जो यह संकेत करता है कि रिकॉर्ड <code>type</code> खुला है या नहीं.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "निर्धारित करें कि <code>type [ A = number, ...]</code> रिकॉर्ड खुला है या नहीं.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "सूची प्रकार से आइटम प्रकार लौटाता है.",
        "Documentation.LongDescription": "सूची <code>type</code> से आइटम प्रकार लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "सूची <code>{number}</code> से आइटम प्रकार ढूँढें.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "किसी प्रकार से गैर निरर्थक प्रकार लौटाता है.",
        "Documentation.LongDescription": "<code>type</code> से गैर <code>निरर्थक</code> प्रकार लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "<code>type nullable number</code> का गैर निरर्थक प्रकार लौटाएँ.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "दिए गए रिकॉर्ड प्रकार (या समान प्रकार, यदि वह पहले से खुला हुआ हो) का खुला हुआ संस्‍करण लौटाता है.",
        "Documentation.LongDescription": "दिए गए <code>रिकॉर्ड</code> <code>type</code> (या समान प्रकार, यदि पहले से खुला हुआ हो, तो) का खुला हुआ संस्‍करण लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "<code>type [ A = number]</code> का खुला हुआ संस्‍करण बनाएँ.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "वह रिकॉर्ड लौटाता है जो संबंधित नाम और मान वाले लौटाए गए रिकॉर्ड प्रकार के प्रत्‍येक फ़ील्‍ड के साथ रिकॉर्ड प्रकार के फ़ील्‍ड का वर्णन करता है.",
        "Documentation.LongDescription": "वह रिकॉर्ड लौटाता है जो <code>type</code> रिकॉर्ड के फ़ील्‍ड का वर्णन करता है. लौटाए गए रिकॉर्ड प्रकार के प्रत्‍येक फ़ील्‍ड में रिकॉर्ड <code>[ Type = type, Optional = logical ]</code> के फ़ॉर्म में संबंधित नाम और मान होता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "रिकॉर्ड <code>[ A = number, optional B = any]</code> का नाम और मान ढूँढें.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "दिए गए तालिका प्रकार के लिए कुंजियों की संभावित रिक्त सूची लौटाता है.",
        "Documentation.LongDescription": "दिए गए तालिका प्रकार के लिए कुंजियों की संभवतः खाली सूची लौटाता है.<br>\r\n    <br>\r\n    प्रत्येक कुंजी को निम्नलिखित रूप में एक रिकॉर्ड का उपयोग करके परिभाषित किया गया है:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: कॉलम नामों की एक सूची जो कुंजी \r को परिभाषित करती है\n      </li>\r\n      <li>\r\n        <code>प्राथमिक</code>: <code>सही</code> यदि कुंजी तालिका की प्राथमिक कुंजी है; अन्यथा, <code>गलत</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "तालिका प्रकार के लिए मुख्य जानकारी लौटाएँ.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "तालिका प्रकार का स्तंभ प्रकार लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट तालिका प्रकार का पंक्ति प्रकार लौटाता है. परिणाम हमेशा एक रिकॉर्ड प्रकार होगा.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "किसी साधारण तालिका के लिए पंक्ति प्रकार जानकारी लौटाता है.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "सूची के प्रकारों का समुच्चय लौटाता है.",
        "Documentation.LongDescription": "<code>types</code> में प्रकारों का समुच्चय लौटाता है.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "किसी रिकॉर्ड को URI क्वेरी स्ट्रिंग पर असेंबल करें.",
        "Documentation.LongDescription": "वर्णों को आवश्यकतानुसार ऐस्केप करते हुए, रिकॉर्ड <code>query</code> को URI क्वेरी स्ट्रिंग पर असेंबल करें.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "उस क्वेरी स्ट्रिंग को एन्कोड करें जिसमें कुछ विशेष वर्ण हैं.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "RFC 3986 के अनुसार विशेष वर्णों को एन्कोड करता है.",
        "Documentation.LongDescription": "RFC 3986 के नियमों के अनुसार इनपुट <code>data</code> में विशेष वर्णों को एन्कोड करता है.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "\"+money$\" में विशेष वर्णों को एन्कोड करें.",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "रिकॉर्ड के रूप में इनपुट पूर्ण URI के भाग लौटाता है.",
        "Documentation.LongDescription": "रिकॉर्ड के रूप में इनपुट <code>absoluteUri</code> के भागों को लौटाता है, जिसमें मान जैसे कि स्कीम, होस्ट, पोर्ट, पथ, क्वेरी, फ़्रैगमेंट, उपयोगकर्ता नाम और पासवर्ड शामिल होते हैं.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "पूर्ण URI \"www.adventure-works.com\" के भागों को ढूँढें.",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "प्रतिशत द्वारा एनकोड किया गया स्ट्रिंग डिकोड करें.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "अपनी Azure DevOps विश्लेषणात्मक सेवा का Url दर्ज करें.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Azure DevOps विश्लेषणात्मक सेवा url से डाउनलोड की गई सामग्रियों को बाइनरी मान के रूप में लौटाता है. यह फ़ंक्शन विभिन्न संगठनों के लिए भिन्न क्रेडेंशियल्स का उपयोग करता है."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "अपनी Azure DevOps विश्लेषणात्मक सेवा का Url दर्ज करें.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Azure DevOps विश्लेषणात्मक सेवा url से डाउनलोड की गई सामग्रियों को बाइनरी मान के रूप में लौटाता है. यह फ़ंक्शन सभी पहुँच योग्य संगठनों के लिए ग्लोबल क्रेडेंशियल्स का उपयोग करता है."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "वैकल्पिक क्वेरी योजनाएँ व्यक्त करता है.",
        "Documentation.LongDescription": "Value. व्यंजक (Value. अनुकूलन (...)) के माध्यम से प्राप्त क्वेरी योजना व्यंजक में वैकल्पिक क्वेरी योजनाएँ व्यक्त करता है. अन्य उपयोगों के लिए लक्षित नहीं है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "मान के व्यंजक का प्रतिनिधित्व करने वाला सारांश सिंटेक्स ट्री (AST) वापस करता है.",
        "Documentation.LongDescription": "मान के व्यंजक का प्रतिनिधित्व करने वाला सारांश सिंटेक्स ट्री (AST) वापस करता है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "पाठ प्रस्तुतिकरण से पुरज़ोर मान बनाता है.",
        "Documentation.LongDescription": "पाठ प्रस्तुतिकरण, <code>text</code> से एक मान को डिकोड करता है, और एक उपयुक्त प्रकार वाले एक मान के रूप में इसकी व्याख्या करता है.\r\n    <code>Value.FromText</code>एक पाठ मान को लेता है और एक संख्या, तार्किक मान, नल मान, तिथिसमय मान, अवधि मान या पाठ मान लौटाता है. रिक्त पाठ मान की व्याख्या एक नल मान के रूप में की कई है.\r\n    एक वैकल्पिक <code>culture</code> भी प्रदान किया जा सकता है (उदाहरण के लिए, \"en-US\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "वह रिकॉर्ड लौटाता है, जिसमें इनपुट का मेटाडेटा शामिल है.",
        "Documentation.LongDescription": "वह रिकॉर्ड लौटाता है, जिसमें इनपुट का मेटाडेटा शामिल है.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "मान के लिए ऑप्टिमाइज़ किया गया व्यंजक लौटाने के लिए मान. व्यंजक का संकेत करता है.",
        "Documentation.LongDescription": "मान. व्यंजक के भीतर उपयोग किए जाने पर, यदि <code>value</code> एक ऐसी क्वेरी का प्रतिनिधित्व करता है जिसे ऑप्टिमाइज़ किया जा सकता है, तो यह फ़ंक्शन इंगित करता है कि ऑप्टिमाइज़ किया गया व्यंजक लौटाया जाना चाहिए. अन्यथा, <code>value</code> बिना किसी प्रभाव के साथ पास हो जाएगा.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "मेटाडेटा के इनपुट को निकाल देता है.",
        "Documentation.LongDescription": "मेटाडेटा के इनपुट को निकाल देता है.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "दिए गए मान का प्रकार लौटाता है.",
        "Documentation.LongDescription": "दिए गए मान का प्रकार लौटाता है.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.LongDescription": "यह फ़ंक्शन केवल आंतरिक उपयोग के लिए है.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "किसी वेब ब्राउज़र द्वारा देखे गए अनुसार निर्दिष्ट URL के लिए HTML लौटाता है.",
        "Documentation.LongDescription": "निर्दिष्ट <code>url</code> के लिए HTML लौटाता है, जैसा कि किसी वेब ब्राउजर द्वारा देखा जाता है. अतिरिक्त गुणों को निर्दिष्ट करने के लिए एक वैकल्पिक रिकॉर्ड पैरामीटर <code>options</code> उपलब्ध कराया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड शामिल हो सकते हैं:\r\n     <ul>\r\n        <li><code>ApiKeyName</code>: अगर लक्ष्य साइट में API कुंजी का कोई नोशन है, तो इस पैरामीटर का उपयोग उस कुंजी पैरामीटर का नाम (मान नहीं) निर्दिष्ट करने के लिए किया जा सकता है जिसका URL में उपयोग किया जाना आवश्यक है. वास्तविक कुंजी मान क्रेडेंशियल में दिया गया है.</li>\r\n        <li><code>WaitFor</code>: पेज लोड होने के लिए की जाने वाली प्रतीक्षा (जो हमेशा की जाती है) के अतिरिक्त HTML डाउनलोड करने से पहले प्रतीक्षा करने की किसी शर्त को निर्दिष्ट करता है. Timeout और/या Selector फ़ील्ड शामिल रहने वाला कोई रिकॉर्ड हो सकता है. अगर केवल कोई Timeout निर्दिष्ट किया गया है, तो फ़ंक्शन HTML डाउनलोड होने से पहले निर्दिष्ट समय की मात्रा के अनुसार प्रतीक्षा करेगा. अगर कोई Selector और Timeout दोनों निर्दिष्ट किए गए हैं और पृष्ठ पर Selector की मौजूदगी बने रहने से पहले ही Timeout समाप्त हो जाता है, तो एक त्रुटि दिखाई जाएगी. अगर Selector को बिना किसी Timeout के निर्दिष्ट किया गया है, तो 30 सेकंड का एक डिफॉल्ट Timeout लागू होता है.</li>\r\n      </ul>\r\n    ",
        "Documentation.Category": "डेटा पर पहुँच प्राप्त करना",
        "Documentation.Examples": [
          {
            "Description": "https://microsoft.com के लिए HTML लौटाता है.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "CSS चयनकर्ता दिखने की प्रतीक्षा करने के बाद https://microsoft.com के लिए HTML लौटाता है.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "दस सेकंड प्रतीक्षा करने के बाद https://microsoft.com के लिए HTML लौटाता है.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [[टाइमऑउट = #अवधि(0,0,0,10)] = के लिए प्रतीक्षा करें])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "CSS चयनकर्ता दिखने की 10 सेकंड तक प्रतीक्षा करने के बाद https://microsoft.com के लिए HTML लौटाता है.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "url से डाउनलोड की गई सामग्रियों को बाइनरी के रूप में लौटाता है.",
        "Documentation.LongDescription": "बाइनरी के रूप में <code>url</code> से डाउनलोड की गई सामग्री वापस करता है. वैकल्पिक रिकॉर्ड पैरामीटर,<code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड हो सकती हैं:\r\n    <ul>\r\n<li><code>Query</code> : एस्केपिंग के बारे में चिंता किए बिना, प्रोग्राम द्वारा URL में क्वेरी पैरामीटर जोड़ें.</li>\r\n<li><code>ApiKeyName</code> : यदि लक्ष्य साइट में एक API कुंजी की धारणा है, तो इस पैरामीटर का उपयोग उस कुंजी पैरामीटर के नाम (न मान) को निर्दिष्ट करने के लिए किया जा सकता है जिसका उपयोग URL में किया जाना चाहिए. क्रेडेंशियल में वास्तविक कुंजी मान प्रदान किया गया है.</li>\r\n<li><code>Headers</code> : इस मान को रिकॉर्ड के रूप में निर्दिष्ट करने से किसी HTTP अनुरोध पर अतिरिक्त शीर्ष लेख प्रदान होंगे.</li>\r\n<li><code>Timeout</code> : इस मान को अवधि के रूप में निर्दिष्ट करना HTTP अनुरोध के लिए टाइमआउट को बदल देगा. डिफ़ॉल्ट मान १०० सेकंड है.</li>\r\n<li><code>ExcludedFromCacheKey</code> : इस मान को सूची के रूप में निर्दिष्ट करने से इन HTTP शीर्षलेख कुंजियों को डेटा कैशिंग के लिए परिकलन का भाग होने से बाहर किया जा सकेगा.</li>\r\n<li><code>IsRetry</code> : इस लॉजिकल मान को true के रूप में निर्दिष्ट करने से डेटा फ़ेच करते समय कैश में मौजूद किसी भी मौजूदा प्रतिसाद को अनदेखा कर दिया जाता है.</li>\r\n<li><code>ManualStatusHandling</code> : इस मान को सूची के रूप में निर्दिष्ट करने से उन HTTP अनुरोधों के लिए कोई भी अंतर्निहित हैंडलिंग को रोका जा सकेगा जिनके प्रतिसाद में इनमें से एक स्थिति कोड है.</li>\r\n<li><code>RelativePath</code> : इस मान को पाठ के रूप में निर्दिष्ट करने से अनुरोध करने से पहले उसे आधार URL में जोड़ता है.</li>\r\n<li><code>Content</code> : इस मान को निर्दिष्ट करने से पोस्ट की सामग्री के रूप में विकल्प के मान का उपयोग करके पोस्ट पर प्राप्त होने वाले वेब अनुरोध को परिवर्तित करता है.</li>\r\n</ul>\r\n\r\n    HTTP अनुरोध या तो GET (जब सामग्री निर्दिष्ट न हो) या POST (जब सामग्री हो) के रूप में किया जाता है. POST अनुरोध अनाम रूप से किए जा सकते हैं.\r\n    <br>\r\n    HTTP प्रतिसाद के शीर्षलेख बाइनरी परिणाम पर मेटाडेटा के रूप में उपलब्ध हैं. कस्टम डेटा कनेक्टर संदर्भ के बाहर केवल प्रतिसाद शीर्षलेख का सबसेट उपलब्ध है (सुरक्षा कारणों के लिए).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "RelativePath और Query विकल्पों का उपयोग करके <code>\"https://bing.com/search?q=Power+Query\"</code> की सामग्री पुनर्प्राप्त करें. इन विकल्पों को डायनेमिक रूप से स्टैटिक बेस URL क्वेरी करने के लिए उपयोग किया जा सकता है.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "बाइनरी JSON पेलोड पास करके और JSON के रूप में प्रतिसाद को पार्स करते हुए URL के विरुद्ध पोस्ट निष्पादित करें.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "किसी ऐसे सुरक्षित URL से कनेक्ट करें जो किसी प्रमाणीकरण कुंजी को उसकी क्वेरी स्ट्रिंग के भाग के रूप में स्वीकार करता है. M में गुप्त कुंजी को हार्ड-कोडिंग करने के बजाय (जिससे सुरक्षा को खतरा हो सकता है) \r\n    कुंजी को M में अपना नाम (इसका मान नहीं) निर्दिष्ट करके, वेब API प्रमाणीकरण चुनकर और कुंजी मान को वेब API क्रेडेंशियल के भाग के रूप में दर्ज करके सुरक्षित रूप से प्रदान किया जा सकता है.\r\n    इस तरीके में उपयोग किए जाने पर, निम्न उदाहरण <code>\"https://contoso.com/api/customers/get?api_key=******\"</code> करने के लिए एक अनुरोध जनरेट करेगा.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "रिकॉर्ड मान के रूप में url से डाउनलोड किए गए HTTP शीर्षलेख वापस करता है.",
        "Documentation.LongDescription": "रिकॉर्ड के रूप में <code>url</code> से डाउनलोड किए गए शीर्षलेख वापस करता है. वैकल्पिक रिकॉर्ड पैरामीटर, <code>options</code>, अतिरिक्त गुणों को निर्दिष्ट करने के लिए प्रदान किया जा सकता है. रिकॉर्ड में निम्न फ़ील्ड हो सकती हैं:\r\n    <ul>\r\n<li><code>Query</code> : एस्केपिंग के बारे में चिंता किए बिना, प्रोग्राम द्वारा URL में क्वेरी पैरामीटर जोड़ें.</li>\r\n<li><code>ApiKeyName</code> : यदि लक्ष्य साइट में एक API कुंजी की धारणा है, तो इस पैरामीटर का उपयोग उस कुंजी पैरामीटर के नाम (न मान) को निर्दिष्ट करने के लिए किया जा सकता है जिसका उपयोग URL में किया जाना चाहिए. क्रेडेंशियल में वास्तविक कुंजी मान प्रदान किया गया है.</li>\r\n<li><code>Headers</code> : इस मान को रिकॉर्ड के रूप में निर्दिष्ट करने से किसी HTTP अनुरोध पर अतिरिक्त शीर्ष लेख प्रदान होंगे.</li>\r\n<li><code>Timeout</code> : इस मान को अवधि के रूप में निर्दिष्ट करना HTTP अनुरोध के लिए टाइमआउट को बदल देगा. डिफ़ॉल्ट मान १०० सेकंड है.</li>\r\n<li><code>ExcludedFromCacheKey</code> : इस मान को सूची के रूप में निर्दिष्ट करने से इन HTTP शीर्षलेख कुंजियों को डेटा कैशिंग के लिए परिकलन का भाग होने से बाहर किया जा सकेगा.</li>\r\n<li><code>IsRetry</code> : इस लॉजिकल मान को true के रूप में निर्दिष्ट करने से डेटा फ़ेच करते समय कैश में मौजूद किसी भी मौजूदा प्रतिसाद को अनदेखा कर दिया जाता है.</li>\r\n<li><code>ManualStatusHandling</code> : इस मान को सूची के रूप में निर्दिष्ट करने से उन HTTP अनुरोधों के लिए कोई भी अंतर्निहित हैंडलिंग को रोका जा सकेगा जिनके प्रतिसाद में इनमें से एक स्थिति कोड है.</li>\r\n<li><code>RelativePath</code> : इस मान को पाठ के रूप में निर्दिष्ट करने से अनुरोध करने से पहले उसे आधार URL में जोड़ता है.</li>\r\n</ul>\r\n\r\n    HTTP अनुरोध HEAD विधि से बनाया जाता है. कस्टम डेटा कनेक्टर संदर्भ के बाहर केवल प्रतिसाद शीर्षलेख का सबसेट उपलब्ध है (सुरक्षा कारणों के लिए).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "RelativePath और क्वेरी विकल्पों का उपयोग करके <code>\"https://bing.com/search?q=Power+Query\"</code> के लिए HTTP शीर्षलेख पुनर्प्राप्त करें.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "प्रमाणीकरण संदर्भ जिसके विरुद्ध एक पहुँच नियंत्रण प्रविष्टि (ACE) शर्त का मूल्यांकन किया गया है.",
        "Documentation.LongDescription": "प्रमाणीकरण संदर्भ जिसके विरुद्ध एक पहुँच नियंत्रण प्रविष्टि (ACE) शर्त का मूल्यांकन किया गया है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "पहुँच नियंत्रण प्रविष्टियों (ACEs) की तालिका.",
        "Documentation.LongDescription": "प्राधिकरण नियमों का प्रतिनिधित्व करने वाली पहुँच नियंत्रण प्रविष्टियों (ACE) की एक क्रमबद्ध तालिका. प्रत्येक पंक्ति का मूल्यांकन वर्तमान प्राधिकरण संदर्भ (क्रम में) और पहली पंक्ति के लिए किया जाता है, जिसके लिए <code>शर्त</code>अभिव्यक्ति सही तरीके से निर्धारित होती है कि कौन सा नियम लागू होगा. <code>क्रिया</code> स्तंभ, उस क्रिया का प्रतिनिधित्व करता है, जिस पर नियम लागू होता है. <code>AccessControlKind</code> स्तंभ यह निर्धारित करता है कि क्या कार्रवाई के लिए पहुँच को स्वीकृत या अस्वीकृत किया जाना चाहिए.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "पहुँच नियंत्रण का प्रकार निर्दिष्ट करता है.",
        "Documentation.LongDescription": "पहुँच नियंत्रण का प्रकार निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "प्रकार जो सभी मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "वह प्रकार जो सभी बाइनरी मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो सभी बाइनरी मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "बाइनरी एन्कोडिंग का प्रकार निर्दिष्ट करता है.",
        "Documentation.LongDescription": "बाइनरी एन्कोडिंग का प्रकार निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "निर्दिष्ट करता है कि आइटम, समूह में कितनी बार दिखाई देना अपेक्षित है.",
        "Documentation.LongDescription": "निर्दिष्ट करता है कि आइटम, समूह में कितनी बार दिखाई देना अपेक्षित है.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "निष्पादित की जाने वाले बफ़रिंग के प्रकार का वर्णन करता है.",
        "Documentation.LongDescription": "निष्पादित की जाने वाले बफ़रिंग के प्रकार का वर्णन करता है.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "प्रकार जो सभी बाइट्स का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी बाइट्स का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "बाइट का क्रम निर्दिष्ट करता है.",
        "Documentation.LongDescription": "बाइट का क्रम निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "वह प्रकार जो सभी वर्णों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो सभी वर्णों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "संपीडन का प्रकार निर्दिष्ट करता है.",
        "Documentation.LongDescription": "संपीडन का प्रकार निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Csv दस्तावेज़ों में उद्धरण का महत्व निर्दिष्ट करता है.",
        "Documentation.LongDescription": "Csv दस्तावेज़ों में उद्धरण का महत्व निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "मुद्रा का मूल्य दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "मुद्रा का मूल्य दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "प्रकार जो सभी दिनांक मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी दिनांक मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "वह प्रकार जो किसी संबद्ध समय क्षेत्र रहित सभी दिनांक और समय मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो किसी संबद्ध समय क्षेत्र रहित सभी दिनांक और समय मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "वह प्रकार जो किसी समय क्षेत्र से संबंधित सभी दिनांक और समय मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो किसी समय क्षेत्र से संबंधित सभी दिनांक और समय मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "सप्ताह का दिन निर्दिष्ट करता है.",
        "Documentation.LongDescription": "सप्ताह का दिन निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "नियत-पॉइंट दशमलव संख्या दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "नियत-पॉइंट दशमलव संख्या दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "दोहरी परिशुद्धता फ़्लोटिंग पॉइंट संख्या दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "दोहरी परिशुद्धता फ़्लोटिंग पॉइंट संख्या दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "प्रकार जो सभी अवधियों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी अवधियों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "उस पंक्ति के अतिरिक्त मानों के लिए अपेक्षित कार्रवाइयाँ निर्दिष्ट करता है जिसमें अपेक्षा से अधिक स्तंभ शामिल होते हैं.",
        "Documentation.LongDescription": "उस पंक्ति के अतिरिक्त मानों के लिए अपेक्षित कार्रवाइयाँ निर्दिष्ट करता है जिसमें अपेक्षा से अधिक स्तंभ शामिल होते हैं.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "वह प्रकार जो सभी फ़ंक्शनों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो सभी फ़ंक्शनों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "समूहीकरण का प्रकार निर्दिष्ट करता है.",
        "Documentation.LongDescription": "एकाधिक स्थानीय समूह समान कुंजी मान के साथ उत्पादित किए जा सकते हैं लेकिन दिए गए कुंजी मान के लिए केवल एकल वैश्विक समूह उत्पन्न किया गया है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "वह प्रकार जो Guid मान का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो Guid मान का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "पहचान किसी उपयोगकर्ता, समूह, डिवाइस या किसी अन्य पहचान योग्य चीज़ का प्रतिनिधित्व करती है.",
        "Documentation.LongDescription": "पहचान किसी उपयोगकर्ता, समूह, डिवाइस या किसी अन्य पहचान योग्य चीज़ का प्रतिनिधित्व करती है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "एक ऐसे दायरे को परिभाषित करता है, जिसमें पहचान बनाई या तुलना की जाती है.",
        "Documentation.LongDescription": "एक ऐसे दायरे को परिभाषित करता है, जिसमें पहचान बनाई या तुलना की जाती है.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "साइन किए गए 16 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "साइन किए गए 16 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "साइन किए गए 32 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "साइन किए गए 32 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "साइन किए गए 64 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "साइन किए गए 64 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "साइन किए गए 8 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "साइन किए गए 8 बिट पूर्णांक दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "जॉइन कार्रवाई में उपयोग किए जाने के लिए जॉइन एल्गोरिथ्म को निर्दिष्ट करता है.",
        "Documentation.LongDescription": "जॉइन कार्रवाई में उपयोग किए जाने के लिए जॉइन एल्गोरिथ्म को निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "जॉइन कार्रवाई का प्रकार निर्दिष्ट करता है.",
        "Documentation.LongDescription": "जॉइन कार्रवाई का प्रकार निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "किसी ज्वॉइन की बाईं या दाईं तालिका निर्दिष्ट करता है.",
        "Documentation.LongDescription": "किसी ज्वॉइन की बाईं या दाईं तालिका निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "यह SQL डायलेक्ट द्वारा समर्थित सीमा शर्त के प्रकार का वर्णन करता है जिसका उपयोग इस डेटा स्रोत द्वारा किया गया.",
        "Documentation.LongDescription": "यह SQL डायलेक्ट द्वारा समर्थित सीमा शर्त के प्रकार का वर्णन करता है जिसका उपयोग इस डेटा स्रोत द्वारा किया गया.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "वह प्रकार जो सभी प्रकारों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो सभी प्रकारों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "वह प्रकार जो सभी तार्किक मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो सभी तार्किक मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "उस पंक्ति के अनुपलब्ध मानों के लिए अपेक्षित कार्रवाई निर्दिष्ट करता है जिसमें अपेक्षा से कम स्तंभ होते हैं.",
        "Documentation.LongDescription": "उस पंक्ति के अनुपलब्ध मानों के लिए अपेक्षित कार्रवाई निर्दिष्ट करता है जिसमें अपेक्षा से कम स्तंभ होते हैं.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "प्रकार जो नल का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो नल का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "प्रकार जो सभी संख्याओं का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी संख्याओं का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "उस प्रकार के मानों को निर्दिष्ट करता है, जिन्हें OData सेवा छोड़ सकती है.",
        "Documentation.LongDescription": "उस प्रकार के मानों को निर्दिष्ट करता है, जिन्हें OData सेवा छोड़ सकती है.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "तत्व की पुनरावृत्ति को एक क्रम में निर्दिष्ट करता है.",
        "Documentation.LongDescription": "तत्व की पुनरावृत्ति को एक क्रम में निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "सॉर्टिंग की दिशा निर्दिष्ट करता है.",
        "Documentation.LongDescription": "सॉर्टिंग की दिशा निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "वह प्रकार जो पाठ पासवर्ड को दर्शाता है।",
        "Documentation.LongDescription": "वह प्रकार जो पाठ पासवर्ड को दर्शाता है।",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "वह प्रकार जो प्रतिशत मान का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो प्रतिशत मान का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "शतमक मोड प्रकार निर्दिष्ट करता है.",
        "Documentation.LongDescription": "शतमक मोड प्रकार निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "तुलना की स्पष्टता को निर्दिष्ट करता है.",
        "Documentation.LongDescription": "तुलना की स्पष्टता को निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "उद्धरण की शैली निर्दिष्ट करता है.",
        "Documentation.LongDescription": "उद्धरण की शैली निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "रैंक का प्रकार स्पष्ट करता है.",
        "Documentation.LongDescription": "रैंक का प्रकार स्पष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "प्रकार जो सभी रिकॉर्ड का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी रिकॉर्ड का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "इंगित करता है कि इनपुट की समाप्ति होने पर अनक्रमणिका को संपन्न करना चाहिए या नहीं.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "संभावित संख्याओं को पूर्णांक बनाने के लिए उनके बीच समानता होने पर पूर्णांकन के निर्देश निर्दिष्ट करता है.",
        "Documentation.LongDescription": "संभावित संख्याओं को पूर्णांक बनाने के लिए उनके बीच समानता होने पर पूर्णांकन के निर्देश निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "SAP बिजनेस वेयरहाउस कार्यान्वयन मोड विकल्प हेतु मान्य विकल्प.",
        "Documentation.LongDescription": "SAP बिजनेस वेयरहाउस कार्यान्वयन मोड विकल्प हेतु मान्य विकल्प.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "SAP HANA वितरण विकल्प के लिए मान्य विकल्प.",
        "Documentation.LongDescription": "SAP HANA वितरण विकल्प के लिए मान्य विकल्प.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "SAP HANA श्रेणी इनपुट पैरामीटर के लिए एक श्रेणी ऑपरेटर.",
        "Documentation.LongDescription": "SAP HANA श्रेणी इनपुट पैरामीटर के लिए एक श्रेणी ऑपरेटर.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "एकल परिशुद्धता फ़्लोटिंग पॉइंट संख्या दर्शाने वाला प्रकार.",
        "Documentation.LongDescription": "एकल परिशुद्धता फ़्लोटिंग पॉइंट संख्या दर्शाने वाला प्रकार.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "किसी स्पार्क की घटना में कनेक्ट करते समय उपयोग करने के लिए प्रोटोकॉल.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "प्रकार जो सभी तालिकाओं का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी तालिकाओं का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "वह प्रकार जो सभी पाठ मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो सभी पाठ मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "पाठ एन्कोडिंग प्रकार को निर्दिष्ट करता है.",
        "Documentation.LongDescription": "पाठ एन्कोडिंग प्रकार को निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "वह प्रकार जो सभी समय मानों का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "वह प्रकार जो सभी समय मानों का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "ट्रेस स्तर को निर्दिष्ट करता है.",
        "Documentation.LongDescription": "ट्रेस स्तर को निर्दिष्ट करता है.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "प्रकार जो सभी प्रकार का प्रतिनिधित्व करता है.",
        "Documentation.LongDescription": "प्रकार जो सभी प्रकार का प्रतिनिधित्व करता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "वह प्रकार जो पाठ URI को दर्शाता है.",
        "Documentation.LongDescription": "वह प्रकार जो पाठ URI को दर्शाता है.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "एक HTTP विधि निर्दिष्ट करता है.",
        "Documentation.LongDescription": "एक HTTP विधि निर्दिष्ट करता है.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
