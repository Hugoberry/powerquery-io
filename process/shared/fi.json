{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "Palauttaa Access-tietokannan rakenteellisen esityksen.",
        "Documentation.LongDescription": "Palauttaa Access-tietokannan <code>database</code> rakenteellisen esityksen. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on false).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "Palautta jonkin tietyn isännän Analysis Services -tietokannat.",
        "Documentation.LongDescription": "Palauttaa Analysis Services -esiintymän <code>server</code> tietokannat. Valinnainen tietueparametri <code>options</code> voidaan antaa määrittämään lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : Looginen arvo, joka ilmaisee, k&#228;ytet&#228;&#228;nk&#246; moniulotteisessa mallissa tai taulukkomallissa m&#228;&#228;ritettyj&#228; tyyppej&#228; lis&#228;ttyjen mittarisarakkeiden k&#228;ytt&#228;mille tyypeille. Kun asetus on false, tyyppi&#228; number k&#228;ytet&#228;&#228;n kaikille mittarisarakkeille. T&#228;m&#228;n asetuksen oletusarvo on false.</li>\r\n<li><code>Culture</code> : Maa-asetuksen nimi, joka m&#228;&#228;ritt&#228;&#228; tietojen maa-asetuksen. T&#228;m&#228; vastaa yhteysmerkkijonon kielialueen tunnuksen ominaisuutta.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>SubQueries</code> : Luku (0, 1 tai 2), joka asettaa SubQueries-ominaisuuden arvon yhteysmerkkijonossa. T&#228;m&#228; ohjaa alivalintojen tai alikuutioiden laskettujen j&#228;senten toimintaa. (Oletusarvo on 2.)</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "AtScale-kuutiot",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "Tuonnin/DirectQuery-kuution tiedot AtScale-kohteesta.",
        "Documentation.LongDescription": "\r\nPalauttaa kuutiotiedot AtScale-kohteesta palvelimessa <code>server</code>. Valinnainen tietueparametri <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: Looginen arvo, joka ilmaisee, käytetäänkö monidimensioisessa tai taulukkomuotoisessa mallissa määritettyjä tyyppejä lisättyjen mittayksikkösarakkeiden tyypeille. Kun asetus on false, tyyppiä number käytetään kaikille mittayksikkösarakkeille. Tämä asetuksen oletusarvo on false.</li>\r\n        <li><code>CommandTimeout</code>: kesto (sekunteina), joka määrittää, miten kauan palvelinpuolen kyselyä sallitaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on ohjainsidonnainen. </li>\r\n        <li><code>ConnectionTimeout</code>: Kesto (sekunteina), joka määrittää, miten kauan odotetaan, ennen kuin keskeytetään yritys muodostaa yhteys palvelimeen. Oletusarvo on ohjainsidonnainen. </li>\r\n\r\n</ul>\r\nTietueparametri määritetään muodossa [asetus1 = arvo1, asetus2 = arvo2...].",
        "Documentation.Examples": {
          "Description": "Luettelo kuution tiedoista AtScale-kuutiossa.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Tuo tietoja Azure Data Explorerista (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Tuo tietoja Azure Data Explorer (Kusto) -esiintymästä",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa myrskytapahtumatietojen taulukon",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Ohjeklusterin Näytteet-tietokannan taulukko, joka sisältää tietoja myrskytapahtumista"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "Anna Azure DevOps Analytics Servicesi URL-osoite.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Palauttaa Azure DevOps Analytics Servicen URL-osoitteesta ladatun sisällön binaariarvona. Tämä funktio käyttää eri tunnistetietoja eri organisaatioille."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Servicesin syöte",
        "Documentation.DisplayName": "Azure DevOps Servicesin syöte",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Palauttaa Azure DevOpsin tarjoamien OData-syötteiden taulukon."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "Anna rekisteröintiisi liittyvän Azure Enterprise REST -sovellusrajapinnan päätepisteen URL-osoite",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Palauttaa Azure Enterprise -ohjelmointirajapinnasta käytettävissä olevien raporttien ja kuukausien luettelon",
        "Documentation.Name": "Tuo tietoja Azure Enterprisestä",
        "Documentation.Examples": [
          {
            "Description": "Käytetään AzureEnterprise.Tables-funktiota ja siirrytään tiettyyn arvoon tulosten saamista varten.",
            "Code": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents",
            "Result": "Taulukko"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "See https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli for starter query samples.",
        "Documentation.Examples": [
          {
            "Description": "Return a table with query results of user query 'resources'",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Näytä luettelo Azure Spark -esiintymän taulukoista.",
        "Documentation.LongDescription": "Näytä luettelo Azure Spark -esiintymän taulukoista.",
        "Documentation.Examples": [
          {
            "Description": "Näytä luettelo Azure Spark -esiintymän taulukoista.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "Palauttaa siirtymistaulukon, joka sisältää Azure-tallennustilasäilön määritetyltä tililtä löytyneet säilöt.",
        "Documentation.LongDescription": "Palauttaa siirtymistaulukon, joka sisältää rivin kullekin Azure-tallennustilasäilön tilin URL-osoitteesta <code>account</code> löytyneelle säilölle. Kukin rivi sisältää linkin säilön blob-objekteihin. <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>BlockSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka luetaan ennen tietokuluttajan odottamista. Oletus arvo on 4 megatavua.</li>\r\n<li><code>RequestSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka yritet&#228;&#228;n lukea yksitt&#228;isess&#228; HTTP-pyynn&#246;ss&#228; palvelimeen. Oletusarvo on 4 megatavua.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-asetus tukee tietojen tavallista nopeampaa lataamista palvelimesta m&#228;&#228;ritt&#228;m&#228;ll&#228; samanaikaisesti tehtyjen pyynt&#246;jen m&#228;&#228;r&#228;n muistin k&#228;yt&#246;n kustannuksella. Vaadittu muisti on (ConcurrentRequest * Request size). Oletusarvo on 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Palauttaa siirtymistaulukon, joka sisältää määritetystä säilöstä ja sen alikansioista löytyneet tiedostot Azure Data Lake Storagesta.",
        "Documentation.LongDescription": "Palauttaa siirtymistaulukon, joka sisältää määritetystä säilöstä ja sen alikansioista tilin URL-osoitteessa <code>endpoint</code> löytyneet tiedostot Azure Data Lake Storage -tiedostojärjestelmästä. <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>BlockSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka luetaan ennen tietokuluttajan odottamista. Oletus arvo on 4 megatavua.</li>\r\n<li><code>RequestSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka yritet&#228;&#228;n lukea yksitt&#228;isess&#228; HTTP-pyynn&#246;ss&#228; palvelimeen. Oletusarvo on 4 megatavua.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-asetus tukee tietojen tavallista nopeampaa lataamista palvelimesta m&#228;&#228;ritt&#228;m&#228;ll&#228; samanaikaisesti tehtyjen pyynt&#246;jen m&#228;&#228;r&#228;n muistin k&#228;yt&#246;n kustannuksella. Vaadittu muisti on (ConcurrentRequest * Request size). Oletusarvo on 16.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, palautetaanko tiedostot puumaisena hakemiston&#228;kym&#228;n&#228; vai litte&#228;n&#228; luettelona. Oletusarvo on false.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "Palauttaa siirtymistaulukon, joka sisältää Azure-tallennustilasäilön määritetyltä tililtä löytyneet taulukot.",
        "Documentation.LongDescription": "Palauttaa Azure-tallennustilasäilöstä siirtymistaulukon, joka sisältää rivin kullekin taulukolle, joka löytyy tilin URL-osoitteesta <code>account</code>. Kukin rivi sisältää linkin Azure-taulukkoon. Valinnainen tietueparametri <code>options</code> voidaan antaa lisäominaisuuksien määrittämistä varten. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>Timeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin pyynt&#246; palvelimeen lopetetaan. Oletusarvo on l&#228;hdekohtainen.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure-aikasarjan merkitykselliset tiedot"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight AKS Trinossa"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "Tämä funktio ei ole käytettävissä, koska se vaatii .NET 4.5:n.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Yleinen tietopalvelu (vanha)",
        "Documentation.Caption": "Yleinen tietopalvelu (vanha)",
        "Documentation.LongDescription": "Muodosta yhteys Common Data Service -esiintymääsi (Dynamics 365 ja PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "Palauttaa CSV-tiedoston sisällön taulukkona.",
        "Documentation.LongDescription": "Palauttaa CSV-tiedoston sisällön taulukkona.\r\n    <ul>\r\n      <li>\r\n        <code>columns</code> voi olla tyhjäarvo, sarakkeiden määrä, sarakkeiden nimien luettelo, taulukkotyyppi tai asetustietue.\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> voi olla yksittäinen merkki tai merkkiluettelo, tai arvo <code>\"\"</code>, joka kertoo, että rivien jakajana tulisi olla yhtenäiset välilyönnit. Oletusarvo: <code>\"\"</code>.\r\n      </li>\r\n      <li>\r\n        Määritä tekstin koodaustyyppi <code>ExtraValues.Type</code> tuettujen arvojen <code>extraValues</code>.\r\n      </li>\r\n      <li>\r\n        <code>encoding</code> määrittää tekstin koodaustyypin.\r\n      </li>\r\n    </ul>\r\n\r\n    Jos tietue määritetään <code>columns</code> (ja <code>delimiter</code>, <code>extraValues</code> ja <code>encoding</code> ovat tyhjäarvoja), seuraavat tietuekentät voidaan antaa:\r\n    <ul>\r\n      <li>\r\n        <code>Erotin</code>: Sarake-erotin. Oletusarvo: <code>\"\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Sarakkeet</code>: Voi olla tyhjäarvo, sarakkeiden määrä, sarakkeiden nimien luettelo tai taulukkotyyppi. Jos sarakkeiden määrä on pienempi kuin syötteessä oleva luku, lisäsarakkeet ohitetaan. Jos sarakkeiden määrä on suurempi kuin syötteessä oleva luku, lisäsarakkeet ovat tyhjäarvoisia. Kun tätä ei määritetä, sarakkeiden määrä määräytyy sen mukaan, mitä kohteesta syötetään.\r\n      </li>\r\n      <li>\r\n        <code>Encoding</code>: tiedoston tekstin koodaus. Oletusarvo: 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle-</code>: Määrittää lainausmerkkien käsittelyn.\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (oletus): kentän lainausmerkit ovat merkitseviä vain heti erottimen jälkeen.\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: Lainausmerkit kentässä ovat aina merkitseviä riippumatta niiden sijainnista.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle-</code>: Määrittää, miten lainausmerkissä olevat rivinvaihdot käsitellään.\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code> (oletus): lainausmerkeissä olevia rivinvaihtoja käsitellään osana tietoja, eikä nykyisen rivin loppuna.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.None</code>: kaikkia rivinvaihtoja käsitellään nykyisen rivin loppuna, vaikka ne ovat lainausmerkeissä olevan arvon sisällä.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Käsittele CSV-teksti, jossa on sarakeotsikoita",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää käytettävissä olevien dimensioiden joukon.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää kohteessa <code>cube</code> käytettävissä olevien dimensioiden joukon. Kukin dimensio on taulukko, joka sisältää dimensiomääritteiden joukon, ja kukin dimensiomäärite on esitetty dimensiotaulukon sarakkeena. Dimensiot voi laajentaa kuutiossa käyttämällä menetelmää Cube.AddAndExpandDimensionColumn. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "Palauttaa sisäkkäisen taulukoiden puun, joka edustaa objektien näyttökansiohierarkiaa (esimerkiksi dimensioita ja mittareita).",
        "Documentation.LongDescription": "Palauttaa sisäkkäisen taulukoiden puun, joka edustaa <code>cube</code>käytettävien objektien näyttökansiohierarkiaa (esimerkiksi dimensioita ja mittareita).",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää käytettävissä olevien kuutiossa laajennettujen mittayksiköiden ominaisuuksien joukon.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää kuutiossa laajennettujen mittayksiköiden käytettävissä olevien ominaisuuksien joukon.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää käytettävissä olevien mittayksiköiden joukon.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää kohteessa <code>cube</code> käytettävissä olevien mittayksiköiden joukon.\r\n    Kukin mittayksikkö on esitetty funktiona. Mittayksiköitä voi käyttää kuutiossa käyttämällä menetelmää Cube.AddMeasureColumn.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää joukon parametreja, joita voi käyttää kuutiolle.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää joukon parametreja, joita voi käyttää kohteelle <code>cube</code>. Kukin parametri on funktio, joka voidaan käynnistää, jotta saadaan <code>cube</code>, kun parametri ja sen argumentit ovat käytössä.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää kuutiossa laajennettujen dimensioiden käytettävissä olevien ominaisuuksien joukon.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää kuutiossa laajennettujen dimensioiden käytettävissä olevien ominaisuuksien joukon.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Anna Azure Data Lake Storage Gen1 -tilisi URL-osoite.",
        "Documentation.LongDescription": "Palauttaa Azure Data Lake Storage Gen1:stä taulukon, joka sisältää rivin kullekin kansiolle ja tiedostolle, jotka löytyvät <code>URL</code>-osoitteesta. Kukin rivi sisältää kansion tai tiedoston ominaisuudet ja linkin sen sisältöön."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Anna Azure Data Lake Storage -tilisi URL-osoite.",
        "Documentation.LongDescription": "Palauttaa Azure Data Lake Storage Gen1:stä taulukon, joka sisältää rivin kullekin tiedostolle, jotka löytyvät <code>URL</code>-osoitteesta. Kukin rivi sisältää tiedoston ominaisuudet ja linkin sen sisältöön."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL-ohjelmointirajapinta)",
        "Documentation.Description": "Anna Azure Cosmos DB -tilin URL-osoite.",
        "Documentation.LongDescription": "Palauttaa Azure Cosmos DB -tietokantojen taulukon kohteessa <code>url</code>. Jos <code>database</code> määritetään, palautetaan kokoelmien taulukko sen sijaan. Lisäksi jos kenttä <code>Query</code> on määritetty <code>options</code>-tietueessa, palautetaan määritetylle tietokannalle ja/tai kokoelmalle suoritettavan kyselyn tulokset."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "Anna Dynamics 365 Business Centralin (paikallinen) OData-palvelun päätepisteen URL-osoite.",
        "Documentation.DisplayName": "Dynamics 365 Business Central (paikallinen)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (paikallinen)",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää olennaiset Dynamics 365 Business Central (paikallinen) -tiedot. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "Anna Dynamics NAV:n OData-palvelun päätepisteesi URL-osoite.",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää olennaiset Dynamics NAV -tiedot. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Palauttaa Essbase-palvelimen Essbase-esiintymässä ryhmitellyt kuutiot.",
        "Documentation.LongDescription": "Palauttaa taulukon Essbase-palvelimen APS-palvelimen <code>url</code> Essbase-esiintymästä ryhmittelemistä kuutioista. Valinnainen tietueparametri <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia: \r\n    <ul>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Palauttaa Excel-työkirjan sisällön.",
        "Documentation.LongDescription": "Palauttaa Excel-työkirjan sisällön.\r\n    <ul>\r\n     <li> <code>useHeaders</code> voi olla tyhjäarvo, looginen arvo (true/false), joka ilmaisee, käsitelläänkö kunkin palautetun taulukon ensimmäinen rivi otsikkona, tai asetustietue. (Lisätietoja asetustietueesta on alla.) Oletusarvo: false.</li>\r\n     <li> <code>delayTypes</code> voi olla tyhjäarvo tai looginen arvo (true/false), joka ilmaisee, tuleeko kunkin palautetun taulukon sarakkeet jättää tyypittömiksi. Oletusarvo: false.</li>\r\n    </ul>\r\n\r\n    Jos tietue on määritetty kohteelle <code>useHeaders</code> (ja <code>delayTypes</code> on tyhjäarvo), seuraavat tietuekentät voidaan antaa:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: Voi olla tyhjäarvo tai looginen arvo (true/false), joka ilmaisee, tuleeko kunkin palautetun taulukon ensimmäistä riviä käsitellä otsikkona. Oletusarvo: false.</li>\r\n     <li> <code>DelayTypes</code>: Voi olla tyhjäarvo tai looginen arvo (true/false), joka ilmaisee, tuleeko kunkin palautetun taulukon sarakkeet jättää tyypittömiksi. Oletusarvo: false.</li>\r\n     <li> <code>InferSheetDimensions</code>: Voi olla tyhjäarvo tai looginen arvo (tosi/epätosi), joka ilmaisee, tuleeko tietoja sisältävä laskentataulukon alue johtaa itse laskentataulukosta sen sijaan, että dimension metatiedot luetaan tiedostosta. Tästä voi olla hyötyä tapauksissa, joissa dimensioiden metatiedot ovat virheelliset. Huomaa, että tätä asetusta tuetaan vain Open XML -Excel-tiedostoissa, ei vanhoissa Excel-tiedostoissa. Oletusarvo: false.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa Taul1:n sisällön Excel-työkirjasta.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää määritetystä kansiosta löytyneiden tiedostojen ja kansioiden ominaisuudet sekä sisällöt.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin kansiopolusta <code>path</code> löytyvälle kansiolle ja tiedostolle. Kukin rivi sisältää kansion tai tiedoston ominaisuudet ja linkin sen sisältöön. <code>options</code>-parametri on tällä hetkellä tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää määritetystä kansiosta ja määritetyistä alikansioista löytyneiden tiedostojen ominaisuudet sekä sisällöt.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin kansiopolusta <code>path</code> löytyvälle tiedostolle ja kaikille sen alikansiolle. Kukin rivi sisältää kansion tai tiedoston ominaisuudet ja linkin sen sisältöön. <code>options</code>-parametri on tällä hetkellä tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Tietojen tuominen Google BigQuery -tietokannasta Azure AD:n avulla",
        "Documentation.LongDescription": "\r\n      Palauttaa taulukon, jossa on Google BigQueryssä käytettävissä olevien Azure AD for <code>Billing Project ID</code> -projektien luettelo. Valinnainen tietueparametri, <code>asetukset</code>, voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Kesto, joka määrittää, miten kauan odotetaan, ennen kuin hylätään yritys muodostaa yhteys palvelimeen. Oletusarvo on ODBC-yhteyden aikakatkaisun arvo.</li>\r\n        <li><code>CommandTimeout</code>: Kesto, joka määrittää, miten kauan palvelinpuolen kyselyn suorittaminen sallitaan, ennen kuin se peruutetaan.</li>\r\n        <li><code>UseStorageApi</code>: Määrittää, käytetäänkö BigQuery Storage APIa suurissa tulosjoukoissa. Oletusarvo on määritetty arvoon tosi, jotta Storage APIa käytetään. Määritä arvoksi epätosi, jos et halua käyttää Storage APIa</li>\r\n        <li><code>AudienceUri</code>: Tämä on käyttäjäryhmän URI-merkkijono, jota ODBC-ohjain voi käyttää tunnuksen vaihtopyynnöissä. Tämän kentän on oltava täydellinen URI (eli //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/azuread), jossa pool_id on maailmanlaajuisesti yksilöivä nimi työvoimavarannon tunnistamiseksi.</li>\r\n      </ul>\r\n    Tietueparametri määritetään muodossa [asetus1 = arvo1, asetus2 = arvo2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Luettele käytettävissä olevat projektit Google BigQueryssä Azure AD:n avulla",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Google Sheets",
        "Documentation.Caption": "Google Sheets",
        "Documentation.Description": "Tuo tietoja Google Sheetsista",
        "Documentation.LongDescription": "Tuo tietoja Google Sheetsista"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "Palauttaa siirtymistaulukon, joka sisältää Azure-tallennustilasäilön määritetyltä tililtä löytyneet säilöt.",
        "Documentation.LongDescription": "Palauttaa siirtymistaulukon, joka sisältää rivin kullekin Azure-tallennustilasäilön tilin URL-osoitteesta <code>account</code> löytyneelle säilölle. Kukin rivi sisältää linkin säilön blob-objekteihin.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "Palauttaa siirtymistaulukon, joka sisältää Azure-tallennustilasäilön määritetyltä tililtä löytyneet säilöt.",
        "Documentation.LongDescription": "Palauttaa siirtymistaulukon, joka sisältää rivin kullekin Azure-tallennustilasäilön tilin URL-osoitteesta <code>account</code> löytyneelle säilölle. Kukin rivi sisältää linkin säilön blob-objekteihin.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää Hadoop-tiedostojärjestelmän määritetystä kansiosta löytyneiden tiedostojen ja kansioiden ominaisuudet sekä sisällöt.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin Hadoop-tiedostojärjestelmän kansion URL-osoitteesta <code>url</code> löytyvälle kansiolle ja tiedostolle. Kukin rivi sisältää kansion tai tiedoston ominaisuudet ja linkin sen sisältöön.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää Hadoop-tiedostojärjestelmän määritetystä kansiosta ja määritetyistä alikansioista löytyneiden tiedostojen ominaisuudet sekä sisällöt.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin Hadoop-tiedostojärjestelmän kansion URL-osoitteesta <code>url</code> ja alikansioista löytyvälle kansiolle ja tiedostolle. Kukin rivi sisältää tiedoston ominaisuudet ja linkin sen sisältöön.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Tuo tiedot Impala-klusterista",
        "Documentation.LongDescription": "Tuo tiedot Impala-klusterista <code>server</code>. Jos porttia ei määritetty, käytetään oletusporttia 21050.",
        "Documentation.Examples": [
          {
            "Description": "Näytä luettelo Impala-klusterin taulukoista.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Tuo tietoja Azure Data Explorerista (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Tuo tietoja Azure Data Explorer (Kusto) -esiintymästä",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa myrskytapahtumatietojen taulukon",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Ohjeklusterin Näytteet-tietokannan taulukko, joka sisältää tietoja myrskytapahtumista"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "LinkedIn Sales Navigator",
        "Documentation.LongDescription": "LinkedIn Sales Navigator",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "Palauttaa taulukon, jossa on tietoja MailChimp-päätepisteestä.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "Tekee kutsun MailChimpin ohjelmointirajapinnalle ja palauttaa tulokseksi saadun tietojoukon taulukkona. Selaa automaattisesti tulokset läpi. Valinnaista entityName-parametria voidaan käyttää niissä ohjelmointirajapinnan päätepisteissä, joissa pääasiallinen päätepiste ei vastaa JSON-vastauksen pääasiallista entityName-parametria.",
        "Documentation.Examples": [
          {
            "Description": "Noutaa tietotaulukon MailChimpin ohjelmointirajapinnan luettelot-päätepisteestä.",
            "Code": "MailChimp.Collection(\"luettelot\")",
            "Result": "Luettelotietoja sisältävä taulukko."
          },
          {
            "Description": "Noutaa tietotaulukon MailChimpin ohjelmointirajapinnan kampanjakansiot-päätepisteestä.",
            "Code": "MailChimp.Collection(\"kampanjakansiot\", \"kansiot\")",
            "Result": "Kampanjakansiotietoja sisältävä taulukko."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "Palauttaa raakavastaustulokset MailChimpin ohjelmointirajapinnan päätepisteestä.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "Tekee kutsun MailChimpin ohjelmointirajapinnalle ja palauttaa raakavastauksen.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa raakadataa määritetyn kampanjan raporteista/napsautustiedoista MailChimpin ohjelmointirajapinnan päätepisteestä.",
            "Code": "MailChimp.Instance(\"raportit/{campaign_id}/napsautustiedot\")",
            "Result": "Raakadataa tietyn kampanjan napsautustiedoista."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy for Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "Anna lisäkyselyfunktiot.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "Anna lisäkyselyfunktiot.",
        "Documentation.Examples": [
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae yhteenvetotiedot välillä 2017-5-1 ja 2017-6-15",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa yhteenvetotiedot välillä 2017-5-1 ja 2017-6-15"
          },
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae yhteenvetotiedot huhtikuulle 2017.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa tiedot välillä 2017-4-1 ja 2017-4-30"
          },
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae yhteenvetotiedot huhtikuusta 2017 tähän hetkeen.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa tiedot välillä 2017-4-1 ja 2017-6-15"
          },
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae yhteenvetotiedot viime joulukuusta tämän vuoden helmikuuhun ",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa tiedot välillä 2016-12-1 ja 2017-2-28"
          },
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae viimeisen 18 kuukauden Marketplace-veloitukset",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa tiedot välillä 2015-12-1 ja 2017-6-15"
          },
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae kesäkuun 2017 ja toukokuun 2017 yksityiskohtaiset veloitukset",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa tiedot välillä 2017-5-1 ja 2017-6-15"
          },
          {
            "Description": "Olettaen, että tänään on 2017-07-03, hae yksityiskohtaiset veloitukset heinäkuulle 2016",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa tiedot välillä 2016-07-01 ja 2016-07-31"
          },
          {
            "Description": "Olettaen, että tänään on 2017-7-13, hae viimeisten kymmenen kuukauden ja tämän kuun 13 päivän taseyhteenvedot",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "Funktio palauttaa tiedot välillä 2016-9-1 ja 2017-7-13"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Microsoft Azure Consumption Insights",
        "Documentation.Description": "Microsoft Azure Consumption Insights",
        "Documentation.DisplayName": "Microsoft Azure Consumption Insights",
        "Documentation.LongDescription": "Microsoft Azure Consumption Insights",
        "Documentation.Name": "Microsoft Azure Consumption Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "Palauttaa SQL-taulukkojen ja -näkymien taulukon ODBC-tietolähteestä. ",
        "Documentation.LongDescription": "Palauttaa SQL-taulukkojen ja -näkymien taulukon yhteysmerkkijonon <code>connectionString</code> määrittämästä ODBC-tietolähteestä. <code>connectionString</code> voi olla teksti tai ominaisuuden ja arvon parien tietue. Ominaisuusarvot voivat olla teksti tai luku. Valinnainen tietueparametri <code>options</code> voidaan antaa määrittämään lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on 15 sekuntia.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, tuotetaanko SQL Server -yhteensopivia yhteysmerkkijonovalitsimia Windows-todennukselle. Oletusarvo on true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Palauta SQL-taulukot ja -näkymät annetusta yhteysmerkkijonosta.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "Palauttaa SQL-taulukoiden ja näkymien taulukon OLE DB -tietolähteestä.",
        "Documentation.LongDescription": "Palauttaa yhteysmerkkijonon <code>connectionString</code> määrittämästä OLE DB -tietolähteestä SQL-taulukoiden ja näkymien taulukon. <code>connectionString</code> voi olla teksti tai ominaisuus–arvo-parien tietue. Ominaisuuksien arvot voivat olla tekstiä tai lukuja. Valinnainen tietueparametri <code>options</code> voidaan antaa lisäominaisuuksien määrittämistä varten. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on true).</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, tuotetaanko SQL Server -yhteensopivia yhteysmerkkijonovalitsimia Windows-todennukselle. Oletusarvo on true.</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...] tai [Query = \"select ...\"].",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Palauttaa Oracle Database -tietokannan SQL-taulukoiden ja näkymien taulukon.",
        "Documentation.LongDescription": "Palauttaa SQL-taulukoiden ja -näkymien taulukon palvelimen <code>server</code> Oracle Database -tietokannasta. Portti voidaan valinnaisesti määrittää palvelimen kanssa erotettuna kaksoispisteellä. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "Palauttaa PDF-tiedostosta löytyneet taulukot.",
        "Documentation.LongDescription": "Palauttaa kohteesta <code>pdf</code> löytyvät taulukot. Valinnainen tietueparametri <code>options</code> voidaan antaa määrittämään lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>Implementation</code> : Taulukoiden tunnistamisessa k&#228;ytett&#228;v&#228;n algoritmin versio. Vanhat versiot ovat k&#228;ytett&#228;viss&#228; vain taaksep&#228;in yhteensopivuuden varmistamiseksi, jotta algoritmip&#228;ivitykset eiv&#228;t riko vanhoja kyselyit&#228;. Uusimman version pit&#228;isi aina antaa parhaat tulokset. Kelvolliset arvot ovat 1.3, 1.2, 1.1 tai tyhj&#228;arvo.</li>\r\n<li><code>StartPage</code> : M&#228;&#228;ritt&#228;&#228; tarkasteltavan sivualueen ensimm&#228;isen sivun. Oletusarvo: 1.</li>\r\n<li><code>EndPage</code> : M&#228;&#228;ritt&#228;&#228; tarkasteltavan sivualueen viimeisen sivun. Oletusarvo: tiedoston viimeinen sivu.</li>\r\n<li><code>MultiPageTables</code> : M&#228;&#228;ritt&#228;&#228;, yhdistet&#228;&#228;nk&#246; samankaltaiset taulukot per&#228;kk&#228;isill&#228; sivuilla automaattisesti yksitt&#228;iseksi taulukoksi. Oletusarvo: true.</li>\r\n<li><code>EnforceBorderLines</code> : M&#228;&#228;ritt&#228;&#228;, pakotetaanko reunaviivat aina solun reunoina (kun arvo on true) vai k&#228;ytet&#228;&#228;nk&#246; niit&#228; yksinkertaisesti yhten&#228; vihjeen&#228; monien joukossa solun reunojen m&#228;&#228;ritt&#228;miseen (kun arvo on false). Oletusarvo: false.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Tietojen käyttö",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa sample.pdf-tiedoston sisältämät taulukot.",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "Anna Planview Projectplace -tilisi URL-osoite.",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa on asiaankuuluvia Planview Projectplace -tietoja."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "Ρŷťħбň š¢řįρŧ",
        "Documentation.Description": "Ę×έ¢ūтēş Рỳŧĥõή şĉяįρт ªⁿð ґεţμŕņ§ đǻта ƒѓámέš",
        "Documentation.Examples": {
          "Description": "Ę×έ¢ūтēş Рỳŧĥõή şĉяįρт ªⁿð ґεţμŕņ§ đǻта ƒѓámέš",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "Я ŝсŗϊφţ",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "Palauttaa taulukon, jonka kunkin rivi on syötetietueen kentän nimi ja arvo.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää sarakkeet <code>Name</code> ja <code>Value</code> sekä rivin kullekin kentälle kohteessa <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukko tietueesta.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "Palauttaa SAP HANA -tietokannan paketit.",
        "Documentation.LongDescription": "Palauttaa moniulotteisten pakettien taulukon SAP HANA -tietokannasta <code>server</code>. Valinnainen tietueparametri <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    <ul>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>Distribution</code> : SapHanaDistribution, joka asettaa yhteysmerkkijonon Distribution-ominaisuuden arvon. Lausekkeen reitityksen avulla arvioidaan hajautetun j&#228;rjestelm&#228;n oikea palvelinsolmu. Oletusarvo on SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : M&#228;&#228;ritt&#228;&#228; k&#228;ytett&#228;v&#228;n SAP HANA -liittimen toteutuksen.</li>\r\n<li><code>EnableColumnBinding</code> : Sitoo muuttujat SAP HANA -tulosjoukon sarakkeisiin tietoja noudettaessa. Saattaa parantaa suorituskyky&#228;, mutta muistia k&#228;ytet&#228;&#228;n enemm&#228;n. Oletusarvo on ep&#228;tosi.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on 15 sekuntia.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää SharePoint-sivuston sisällön.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin määritetystä SharePoint-sivustosta <code>url</code> löytyvälle kansiolle ja tiedostolle. Kukin rivi sisältää kansion tai tiedoston ominaisuudet ja linkin sen sisältöön. <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Luku (14 tai 15) tai teksti Auto, joka m&#228;&#228;ritt&#228;&#228; t&#228;lle sivustolle k&#228;ytett&#228;v&#228;n SharePoint-ohjelmointirajapinnan version. Kun t&#228;t&#228; ei m&#228;&#228;ritet&#228;, k&#228;ytet&#228;&#228;n ohjelmointirajapinnan versiota 14. Kun m&#228;&#228;ritet&#228;&#228;n Auto, palvelimen versio selvitet&#228;&#228;n automaattisesti, jos se on mahdollista, ja muussa tapauksessa k&#228;ytet&#228;&#228;n version oletusarvoa 14. Muut kuin englanninkieliset SharePoint-sivustot edellytt&#228;v&#228;t versiota 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää SharePoint-sivuston tiedostot.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin määritetystä SharePoint-sivustosta <code>url</code> ja alikansioista löytyvälle tiedostolle. Kukin rivi sisältää kansion tai tiedoston ominaisuudet ja linkin sen sisältöön. <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Luku (14 tai 15) tai teksti Auto, joka m&#228;&#228;ritt&#228;&#228; t&#228;lle sivustolle k&#228;ytett&#228;v&#228;n SharePoint-ohjelmointirajapinnan version. Kun t&#228;t&#228; ei m&#228;&#228;ritet&#228;, k&#228;ytet&#228;&#228;n ohjelmointirajapinnan versiota 14. Kun m&#228;&#228;ritet&#228;&#228;n Auto, palvelimen versio selvitet&#228;&#228;n automaattisesti, jos se on mahdollista, ja muussa tapauksessa k&#228;ytet&#228;&#228;n version oletusarvoa 14. Muut kuin englanninkieliset SharePoint-sivustot edellytt&#228;v&#228;t versiota 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää SharePoint-luettelon sisällön.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin määritetystä SharePoint-luettelosta <code>url</code> löytyvälle List-kohteelle. Kukin rivi sisältää List-kohteen ominaisuudet. <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Luku (14 tai 15) tai teksti Auto, joka m&#228;&#228;ritt&#228;&#228; t&#228;lle sivustolle k&#228;ytett&#228;v&#228;n SharePoint-ohjelmointirajapinnan version. Kun t&#228;t&#228; ei m&#228;&#228;ritet&#228;, k&#228;ytet&#228;&#228;n ohjelmointirajapinnan versiota 14. Kun m&#228;&#228;ritet&#228;&#228;n Auto, palvelimen versio selvitet&#228;&#228;n automaattisesti, jos se on mahdollista, ja muussa tapauksessa k&#228;ytet&#228;&#228;n version oletusarvoa 14. Muut kuin englanninkieliset SharePoint-sivustot edellytt&#228;v&#228;t versiota 15.</li>\r\n<li><code>Implementation</code> : Valinnainen. M&#228;&#228;ritt&#228;&#228; k&#228;ytett&#228;v&#228;n SharePoint-yhdistimen version. Hyv&#228;ksytyt arvot ovat 2.0 tai tyhj&#228; arvo. Jos arvo on 2.0, k&#228;ytet&#228;&#228;n SharePoint-yhdistimen 2.0-toteutusta. Jos arvo on tyhj&#228;, k&#228;ytet&#228;&#228;n SharePoint-yhdistimen alkuper&#228;ist&#228; toteutusta.</li>\r\n<li><code>ViewMode</code> : Valinnainen. T&#228;t&#228; asetusta sovelletaan vain toteutukselle 2.0. Hyv&#228;ksytyt arvot ovat Kaikki ja Oletus. Jos arvoa ei m&#228;&#228;ritet&#228;, arvoksi m&#228;&#228;ritet&#228;&#228;n Kaikki. Kun Kaikki on m&#228;&#228;ritetty, n&#228;kym&#228; sis&#228;lt&#228;&#228; kaikki k&#228;ytt&#228;j&#228;n luomat ja j&#228;rjestelm&#228;n m&#228;&#228;ritt&#228;m&#228;t sarakkeet. Kun Oletus on m&#228;&#228;ritetty, n&#228;kym&#228; vastaa n&#228;kym&#228;&#228;, jonka k&#228;ytt&#228;j&#228; n&#228;kee tarkastellessaan luetteloa verkossa n&#228;kym&#228;ss&#228;, jonka k&#228;ytt&#228;j&#228; m&#228;&#228;ritti oletusn&#228;kym&#228;ksi asetuksissaan. Jos k&#228;ytt&#228;j&#228; muokkaa oletusn&#228;kym&#228;&#228;ns&#228; joko k&#228;ytt&#228;j&#228;n luomien tai j&#228;rjestelm&#228;n m&#228;&#228;ritt&#228;mien sarakkeiden lis&#228;&#228;mist&#228; tai poistamista varten tai luomalla uuden n&#228;kym&#228;n ja m&#228;&#228;ritt&#228;m&#228;ll&#228; sen oletukseksi, n&#228;m&#228; muutokset tulevat voimaan yhdistimen kautta.</li>\r\n<li><code>DisableAppendNoteColumns</code> : Est&#228;&#228; yhdistint&#228; k&#228;ytt&#228;m&#228;st&#228; erillist&#228; p&#228;&#228;tepistett&#228; muistiinpanosarakkeille.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "Palauttaa taulukon määritetyn URL-osoitteen sisällöstä muotoiltuna SODA 2.0 -ohjelmointirajapinnan mukaisesti.",
        "Documentation.LongDescription": "Palauttaa taulukon määritetyn URL-osoitteen <code>url</code> sisällöstä muotoiltuna SODA 2.0 -ohjelmointirajapinnan mukaisesti. URL-osoitteen on osoitettava kelvolliseen SODA-yhteensopivaan lähteeseen, joka päättyy .csv-tiedostotunnisteeseen.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "Tämän funktion avulla voidaan tehdä kutsu mihin tahansa SparkPost-ohjelmointirajapinta v1:n tarjoamista luetteloiden päätepisteistä. Kun SparkPost-ohjelmointirajapinnalle tehdään kutsuja käyttäen tätä funktiota, muista, että SparkPost-ohjelmointirajapinnalla on tiukka ohjelmointirajapinnan nopeusraja. Jos näet tilakoodin 429 palautettuna SparkPost-palvelimesta, olet saavuttanut nopeusrajan ja sinun on odotettava jonkin aikaa ennen uusien kutsujen tekemistä.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa taulukon, jossa on yksittäinen sarake, jossa on tiedot jostakin SparkPost API v1:n luetteloiden päätepisteestä (lisätietoja on SparkPostin dokumentaatiossa).",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "Nouda SparkPost-liittimen paljastamat sisäiset taulukot ja käyttäjän määrittämän päivien määrän koostetut tiedot. Kun nämä taulukot päivitetään tai tehdään kutsuja SparkPost-ohjelmointirajapinnalle käyttäen tätä liitintä, muista, että SparkPost-ohjelmointirajapinnalla on tiukka ohjelmointirajapinnan nopeusraja. Jos näet tilakoodin 429 palautettuna SparkPost-palvelimesta, olet saavuttanut nopeusrajan ja sinun on odotettava jonkin aikaa ennen uusien kutsujen tekemistä. Kun valitset arvoa päivien määrän parametrille, huomaa, että ohjelmointirajapinta tallentaa tiedot vain kuudelta kuukaudelta."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "Palauttaa SQL Server -palvelimen tietokantojen taulukon.",
        "Documentation.LongDescription": "Palauttaa määritetyn SQL-palvelimen <code>server</code> tietokantojen taulukon. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Luku, joka asettaa maxdop-kyselylauseen arvon muodostetussa SQL-kyselyss&#228;.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n<li><code>MultiSubnetFailover</code> : Looginen arvo (true/false), joka asettaa MultiSubnetFailover-ominaisuuden arvon yhteysmerkkijonossa (oletusarvo on false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Looginen arvo (true/false), joka arvon ollessa true yritt&#228;&#228; delegoida l&#228;hteeseen tyyppimuunnoksia, mik&#228; voi ep&#228;onnistua ja aiheuttaa koko kyselyn ep&#228;onnistumisen. Ei suositella yleiseen k&#228;ytt&#246;&#246;n.</li>\r\n<li><code>ContextInfo</code> : Binaariarvo, jota k&#228;ytet&#228;&#228;n asettamaan CONTEXT_INFO ennen kunkin komennon suorittamista.</li>\r\n<li><code>OmitSRID</code> : Looginen arvo (true/false), joka arvon ollessa tosi j&#228;tt&#228;&#228; pois SRID-kohteen tuotettaessa Well-Known Texti&#228; geometria- ja maantiedetyypeist&#228;.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Looginen arvo (tosi/ep&#228;tosi), joka arvon ollessa tosi sallii kyselyn delegoinnin l&#228;hteeseen saman palvelimen eri tietokannoissa. Oletusarvo on ep&#228;tosi.</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...].\r\n    <br>\r\n    Ei tue SQL-kyselyn asettamista suoritettavaksi palvelimessa. SQL-kyselyn suorittamiseen tulee sen sijaan käyttää kohdetta <code>Sql.Database</code>.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "Tekee kutsun Stripen ohjelmointirajapinnalle niin, että tehtyjen ohjelmointirajapintakutsujen määrää voidaan rajoittaa.",
        "Documentation.LongDescription": "Tekee kutsun Stripe-ohjelmointirajapinnalle osoitteessa https://api.stripe.com/v1/<code>method</code> niin, että valinnainen tietue <code>query</code> voidaan välittää lisäparametreina ja valinnainen <code>pageLimit</code> ohjelmointirajapintapyyntöjen määrän rajana. Uusimmat tiedot palautetaan ensin. Jos kohdetta <code>pageLimit</code> ei määritetä, kaikki tiedot palautetaan. Stripe-versiota 2015-10-16 käytetään.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa charges-tiedot",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "Taulukko, jossa on nykyisen Stripe-tilin kaikki charges-tiedot"
          },
          {
            "Description": "Palauttaa yhden sivun charges-tiedoista",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "Taulukko, jossa on nykyisen Stripe-tilin uusimmat charges-tiedot"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "Puskuroi taulukon muistiin eristäen sen ulkosilta muutoksilta arvioinnin aikana.",
        "Documentation.LongDescription": "Puskuroi taulukon muistiin ja eristää sen ulkoisista muutoksista arvioinnin aikana.\r\n    Puskurointi on matala. Se pakottaa kaikkien skalaarisolujen arvojen arvioinnin, mutta jättää muut kuin skalaariarvot (tietueet, luettelot, taulukot jne.) ennalleen.\r\n    <br>\r\n    <br>\r\n    Huomaa, että tämän funktion käyttäminen saattaa nopeuttaa kyselyiden suorittamista. Joissakin tapauksissa se voi hidastaa kyselyiden suorittamista, koska kaikkien tietojen lukemisesta ja tallentamisesta muistiin aiheutuu \r\n    kustannuksia sekä siitä, että puskurointi estää alavirtaan delegoinnin. Jos tietoja ei tarvitse\r\n    puskuroida, mutta haluat vain estää alavirtaan delegoinnin, käytä sen sijaan <code>Table.StopFolding</code>-toimintoa.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Lataa kaikki SQL-taulukon rivit muistiin, jotta kaikki jatkotoiminnot eivät enää pysty tekemään kyselyjä SQL-palvelimelle.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "Palauttaa taulukon, joka on taulukkoluettelon yhdistämisen tulos.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka on taulukkoluettelon <code>tables</code> yhdistämisen tulos. Tuloksena saatavan taulukon rivityyppirakenteen on määrittänyt <code>columns</code> tai syöttötyyppien yhdistelmä, jos kohdetta <code>columns</code> ei ole määritetty.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä kolme taulukkoa.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Yhdistä kolme taulukkoa, joilla on eri rakenteet.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Yhdistä kaksi taulukkoa ja projisoi annettuun tyyppiin.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "Alentaa sarakeotsikot ensimmäiseksi arvoriviksi.",
        "Documentation.LongDescription": "Alentaa sarakeotsikot (eli sarakkeiden nimet) ensimmäiseksi arvoriviksi. Sarakkeiden oletusnimet ovat \"Column1\", \"Column2\" ja niin edelleen.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Alenna ensimmäinen arvorivi taulukossa.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "Poistaa rivien kaksoiskappaleet taulukosta.",
        "Documentation.LongDescription": "Poistaa rivien kaksoiskappaleet taulukosta.\r\n Valinnainen parametri <code>equationCriteria</code> määrittää, mitkä taulukon sarakkeet testataan kaksoiskappaleiden varalta. Jos kohdetta <code>equationCriteria</code> ei ole määritetty, kaikki sarakkeet testataan.<br>\r\n    <br>\r\n    Koska Power Query joskus purkaa tiettyjä toimintoja tietolähteiden taustaksi (kutsutaan “taittamiseksi”) ja joskus myös optimoi kyselyt \r\n ohittamalla toimintoja, jotka eivät ole täysin välttämättömiä, yleensä ei ole mitään takeita siitä, mikä tietty kaksoiskappale säilytetään.\r\n    Et esimerkiksi voi olettaa, että ensimmäinen rivi, jolla on yksilöllinen sarakearvojoukko, säilyy, ja taulukon alempana olevat rivit poistetaan.\r\n    Jos haluat kaksoiskappaleen poistamisen toimivan ennakoitavasti, puskuroi taulukko ensin käyttäen koodia <code>Table.Buffer</code>.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Poista rivien kaksoiskappaleet taulukosta.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "Poista rivien kaksoiskappaleet sarakkeesta [b] taulukossa <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code>.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "Luo taulukon sarakkeiden ja määritettyjen arvojen luettelosta.",
        "Documentation.LongDescription": "Luo luettelosta <code>lists</code> tyyppiä <code>columns</code> olevan taulukon, joka sisältää sisäkkäisiä luetteloita, joissa on sarakkeiden nimiä ja arvoja.\r\n    Jos joissakin sarakkeissa on enemmän arvoja kuin muissa, puuttuvat arvot täytetään oletusarvolla null, jos sarakkeet tukevat tyhjäarvoja.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukko luettelon asiakkaiden nimien luettelosta. Jokaisesta asiakasluettelon kohteen arvosta tulee riviarvo, ja jokaisesta luettelosta tulee sarake.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Luo taulukko annetusta sarakkeiden luettelosta ja sarakkeiden nimien luettelosta.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Luo taulukko, jolla on eri määrä sarakkeita riviä kohden. Puuttuva riviarvo on tyhjäarvo.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "Muuntaa luettelon taulukoksi käyttämällä määritettyä osiin jakamisen funktiota kullekin luettelon kohteelle.",
        "Documentation.LongDescription": "Muuntaa luettelon <code>list</code> taulukoksi käyttämällä valinnaista osiin jakamisen funktiota <code>splitter</code> kullekin luettelon kohteelle. Oletusarvon mukaan luettelon oletetaan olevan pilkuin eroteltujen tekstiarvojen luettelo. Valinnainen <code>columns</code> voi olla sarakkeiden määrä, sarakkeiden luettelo tai TableType. Myös valinnaiset <code>default</code> ja <code>extraValues</code> voidaan määrittää.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Luo taulukko luettelosta käyttämällä oletusjakajaa.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "Luo taulukko luettelosta käyttämällä mukautettua jakajaa.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "Luo taulukko luettelosta käyttämällä Record.FieldValues-jakajaa.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "Muuntaa tietueluettelon taulukoksi.",
        "Documentation.LongDescription": "Muuntaa tietueluettelon <code>records</code> taulukoksi.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Luo taulukko tietueista käyttäen tietuekenttien nimiä sarakkeiden niminä.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Luo taulukko tietueista käyttäen kirjoitettuja sarakkeita ja valitse lukusarakkeet.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "Luo taulukon riviarvojen ja valinnaisten sarakkeiden luettelosta",
        "Documentation.LongDescription": "Luo luettelosta <code>rows</code> taulukon, jossa luettelon kukin elementti on sisempi luettelo, joka sisältää yksittäisen rivin sarakearvot. Kohteelle <code>columns</code> voidaan antaa valinnainen sarakenimien luettelo, taulukkotyyppi tai sarakkeiden määrä.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukko, jonka sarakkeessa [CustomerID] on arvot {1, 2}, sarakkeessa [Name] on arvot {\"Bob\", \"Jim\"} ja sarakkeessa [Phone] on arvot {\"123-4567\", \"987-6543\"}.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Palauta taulukko, jonka sarakkeessa [CustomerID] on arvot {1, 2}, sarakkeessa [Name] on arvot {\"Bob\", \"Jim\"} ja sarakkeessa [Phone] on arvot {\"123-4567\", \"987-6543\"} ja jossa [CustomerID] on lukutyyppi ja [Name] sekä [Phone] ovat tekstityyppejä.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "Luo taulukon, jossa on sarake annetuista arvoista.",
        "Documentation.LongDescription": "Luo taulukon, jonka sarake sisältää annetun arvon tai arvoluettelon <code>value</code>. Valinnainen tietueparametri <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : sarakkeen nimi, jota käytetään muodostettaessa taulukko skalaariarvojen luettelosta.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Luo taulukko arvosta 1.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "Luo taulukko luettelosta.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "Luo taulukko arvosta 1 käyttäen mukautettua sarakkeen nimeä.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "Palauttaa tietoja siitä, miten taulukko on osioitu.",
        "Documentation.LongDescription": "Palauttaa tietoja siitä, miten taulukko on osioitu.  Palautetaan taulukko, jossa kukin sarake on alkuperäisen sarakkeen osiotaulukko ja kukin rivi vastaa jotakin alkuperäisen taulukon osiota.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "Palauttaa taulukon sarakkeiden profiilin.",
        "Documentation.LongDescription": "<p>Palauttaa profiilin sarakkeille kohteessa <code>table</code>.</p>\r\n<p>Seuraavat tiedot palautetaan kullekin sarakkeelle (tilanteen mukaan):\r\n<ul>\r\n  <li>vähimmäisarvo</li>\r\n  <li>enimmäisarvo</li>\r\n  <li>keskiarvo</li>\r\n  <li>keskihajonta</li>\r\n  <li>määrä</li>\r\n  <li>tyhjäarvojen määrä</li>\r\n  <li>erillisten määrä</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "Ylentää ensimmäisen arvorivin uusiksi sarakeotsikoiksi (eli sarakkeiden nimiksi).",
        "Documentation.LongDescription": "Ylentää ensimmäisen arvorivin uusiksi sarakeotsikoiksi (eli sarakkeiden nimiksi). Kaikkien ensimmäisen rivin solujen on sisällettävä tekstiä tai lukuarvoja. Kelvolliset vaihtoehdot:\r\n    <div>\r\n      <code>PromoteAllScalars</code>: jos asetus on <code>true</code>, kaikki ensimmäisen rivin skalaariarvot ylennetään otsikoiksi käyttäen kohdetta <code>Culture</code>, jos se on määritetty (tai nykyistä tiedoston maa-asetusta).\r\n    Jos arvoja ei voi muuntaa tekstiksi, käytetään oletusarvon mukaista sarakkeen nimeä.\r\n    </div>\r\n    <div>\r\n    <code>Culture</code>: maa-asetuksen nimi, joka määrittää tietojen maa-asetuksen.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ylennä ensimmäinen arvorivi taulukossa.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "Ylennä kaikki taulukon ensimmäisen rivin skalaariarvot otsikoiksi.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "Palauttaa taulukon, jonka ensimmäiset määrärivit ohitetaan.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka ei sisällä taulukon <code>table</code> ensimmäistä määritettyä määrää rivejä <code>countOrCondition</code>.\r\n    Poistettavien rivien määrä määräytyy valinnaisen parametrin <code>countOrCondition</code> mukaan.\r\n    <ul>\r\n    <li> Jos <code>countOrCondition</code> jätetään pois, vain ensimmäinen rivi poistetaan. </li>\r\n    <li> Jos <code>countOrCondition</code> on luku, kyseinen määrä rivejä (ylhäältä alkaen) poistetaan. </li>\r\n    <li> Jos <code>countOrCondition</code> on ehto, kyseisen ehdon täyttävät rivit poistetaan, kunnes jokin rivi ei täytä ehtoa.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Poista taulukon ensimmäinen rivi.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Poista taulukon ensimmäiset kaksi riviä.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Poista taulukon ensimmäiset rivit, joissa [CustomerID] <= 2.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "Palauttaa taulukon, jonka N viimeistä riviä on poistettu.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka ei sisällä taulukon <code>table</code> viimeistä <code>countOrCondition</code> riviä.\r\n        Poistettavien rivien määrä määräytyy valinnaisen parametrin <code>countOrCondition</code> mukaan.\r\n    <ul>\r\n    <li> Jos <code>countOrCondition</code> jätetään pois, vain viimeinen rivi poistetaan. </li>\r\n    <li> Jos <code>countOrCondition</code> on luku, kyseinen määrä rivejä (alhaalta alkaen) poistetaan. </li>\r\n    <li> Jos <code>countOrCondition</code> on ehto, kyseisen ehdon täyttävät rivit poistetaan, kunnes jokin rivi ei täytä ehtoa.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Poista taulukon viimeinen rivi.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Poista taulukon viimeiset rivit, joissa [CustomerID] > 2.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "Palauttaa taulukon, jonka virheen vähintään yhdessä solussa sisältävät rivit on poistettu syötetaulukosta. Jos sarakeluettelo määritetään, ainoastaan määritettyjen sarakkeiden solut tarkistetaan virheiden varalta.",
        "Documentation.LongDescription": "Palauttaa taulukon, jonka virheen vähintään yhdessä solussa sisältävät rivit on poistettu syötetaulukosta. Jos sarakeluettelo määritetään, ainoastaan määritettyjen sarakkeiden solut tarkistetaan virheiden varalta.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Poista virhearvo ensimmäiseltä riviltä.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "Palauttaa taulukon, jonka rivit ovat käänteisessä järjestyksessä.",
        "Documentation.LongDescription": "Palauttaa taulukon niin, että rivit syötteestä <code>table</code> ovat käänteisessä järjestyksessä.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Tee taulukon riveistä käänteiset.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää määritetyn taulukon sarakkeiden kuvauksen (eli rakenteen).",
        "Documentation.LongDescription": "<p>Palauttaa taulukon, joka kuvaa<code>table</code> sarakkeita.</p>\r\n<p>Kukin taulukon rivi kuvailee <code>table</code> sarakkeen ominaisuudet: :</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>Sarakkeen nimi</b></td>\r\n    <td><b>Kuvaus</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Nimi</code></td>\r\n    <td>Sarakkeen nimi.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Sijainti -</code></td>\r\n    <td>sarakkeen 0-pohjainen sijainti kohteessa <code>table</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>Sarakkeen nimi.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Kind</code></td>\r\n    <td>Sarakkeen tyyppi.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>, sarake voi sisältää <code>null-tyhjäarvoja</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>Numeerinen kanta (esimerkiksi 2- tai 10-kanta)<code>NumericPrecision</code> ja <code>NumericScale</code> kentät.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>NumericPrecision-kohteen numeerisen sarakkeen tarkkuus <code>NumericPrecisionBase-</code> määrittämässä kantaluvussa. Tämä on enimmäismäärä numeroita, joita tämän tyyppinen arvo voi edustaa (mukaan lukien murtolukunumerot).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>numeerisen sarakkeen asteikko kohteen <code>NumericPrecisionBase</code> määrittämässä pohjassa. Tämä on tämäntyyppisen arvon murtolukuosan numeroiden määrä. Arvo, joka on <code>0</code>, ilmaisee kiinteää asteikkoa ilman murtolukunumeroita. Arvo <code>null</code> ilmaisee, että asteikkoa ei tunneta (joko siksi, että se on irrallinen tai määrittämätön).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>Päivämäärä- tai aika-arvon sekuntien osassa tuettu murtolukunumeroiden enimmäismäärä.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength-</code></td>\r\n    <td><code>Tekstisarakkeessa</code> sallittujen merkkien enimmäismäärä sarake, tai <code>binaarisarakkeessa</code> sallittujen tavujen enimmäismäärä.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength-</code></td>\r\n    <td>ilmaisee, ilmaiseeko tämä sarake voi vaihdella pituutta (enintään <code>MaxLength</code>) tai jos sen koko on kiinteä.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>Sarakkeen tyypin nimi lähteen alkuperäisessä tyyppijärjestelmässä (esimerkiksi <code>nvarchar-</code> kohteelle SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n<td><code>NativeDefaultExpression</code></td>\r\n    <td>Tämän sarakkeen arvon oletuslauseke lähteen alkuperäisessä lausekekielessä (esimerkiksi  <code>42</code> tai <code>newid()</code> kohteelle SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Kuvaus</code></td>\r\n    <td>Sarakkeen kuvaus.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää vain ne syötetaulukon rivit, jotka sisältävät virheen vähintään yhdessä solussa. Jos sarakeluettelo määritetään, ainoastaan määritettyjen sarakkeiden solut tarkistetaan virheiden varalta.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää vain ne syötetaulukon rivit, jotka sisältävät virheen vähintään yhdessä solussa. Jos sarakeluettelo määritetään, ainoastaan määritettyjen sarakkeiden solut tarkistetaan virheiden varalta.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Valitse asiakkaiden nimet, joiden riveillä on virheitä.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "Palauttaa taulukon, jonka ensimmäiset määrärivit ohitetaan.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka ei sisällä taulukon <code>table</code> ensimmäistä määritettyä määrää rivejä <code>countOrCondition</code>.\r\n    Ohitettavien rivien määrä määräytyy valinnaisen parametrin <code>countOrCondition</code> mukaan.\r\n    <ul>\r\n    <li> Jos <code>countOrCondition</code> jätetään pois, vain ensimmäinen rivi ohitetaan. </li>\r\n    <li> Jos <code>countOrCondition</code> on luku, kyseinen määrä rivejä (ylhäältä alkaen) ohitetaan. </li>\r\n    <li> Jos <code>countOrCondition</code> on ehto, kyseisen ehdon täyttävät rivit ohitetaan, kunnes jokin rivi ei täytä ehtoa.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Ohita taulukon ensimmäinen rivi.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ohita taulukon ensimmäiset kaksi riviä.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ohita taulukon ensimmäiset rivit, joissa [Price] > 25.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "Estää jatkotoimintojen suorittamisen tietojen alkuperäiselle lähteelle.",
        "Documentation.LongDescription": "Estää jatkotoimintojen suorittamisen <code>table</code> tietojen alkuperäiselle lähteelle.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Noutaa tiedot SQL-taulukosta tavalla, joka estää jatkotoimintojen suorittamisen kyselynä SQL-palvelimessa.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "Tekee sarakkeista rivejä ja riveistä sarakkeita.",
        "Documentation.LongDescription": "Tekee sarakkeista rivejä ja riveistä sarakkeita.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Tee nimi–arvo-parien taulukon riveistä sarakkeita.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "Noutaa taulukkojoukon väliset suhteet.",
        "Documentation.LongDescription": "Noutaa taulukkojoukon väliset suhteet. Joukon <code>tables</code> rakenteen oletetaan olevan siirtymistaulukon rakenteen kaltainen. Kohteen <code>dataColumn</code> määrittämä sarake sisältää itse tietotaulukot.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "Palauttaa Teradata-tietokannan SQL-taulukoiden ja näkymien taulukon.",
        "Documentation.LongDescription": "Palauttaa SQL-taulukoiden ja -näkymien taulukon palvelimen <code>server</code> Teradata-tietokannasta. Portti voidaan valinnaisesti määrittää palvelimen kanssa erotettuna kaksoispisteellä. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure-aikasarjan merkitykselliset tiedot"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "Anna numeroarvo, joka määrittää, miten monelta kuukaudelta Twilio-historiatiedot haetaan.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa on asiaankuluvia Twilio-tietoja."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää määritetyn taulukkotyypin sarakkeiden kuvauksen (eli rakenteen).",
        "Documentation.LongDescription": "<p>Palauttaa taulukon, joka kuvaa kohteen <code>tableType</code> sarakkeet.</p>\r\n<p>Kohteen <code>Table.Schema</code> dokumentaatiossa on tuloksena olevan taulukon kuvaus.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Azure DevOps Servicesin syöte",
        "Documentation.DisplayName": "Azure DevOps Servicesin syöte",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Palauttaa Azure DevOpsin tarjoamien OData-syötteiden taulukon."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Yhteyden muodostaminen Viva Insights -tietoihin",
        "Documentation.LongDescription": "Tuo viikoittaiset mittari- ja määritetiedot Workplace Analyticsistä.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa taulukon, joka sisältää osion kunkin mitatun työntekijän näkyvät määritteet ja viikkokohtaiset mittarit.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "advancedParameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "Palauttaa HTML-tiedoston sisällön jaettuna sen muodostaviin rakenteisiin ja koko tiedoston sekä sen tekstin esityksen, kun tunnisteet on poistettu.",
        "Documentation.LongDescription": "Palauttaa HTML-tiedoston sisällön jaettuna sen muodostaviin rakenteisiin ja koko tiedoston sekä sen tekstin esityksen, kun tunnisteet on poistettu.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "Palauttaa tärkeiden Webtrends-mittareiden taulukon.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Tekee kutsun Webtrends KeyMetrics -päätepisteelle ja palauttaa kaikki tiedot taulukkona.",
        "Documentation.Examples": [
          {
            "Description": "Noutaa tärkeiden mittareiden taulukon vuokralaiselle 98765 viimeisten 30 päivän ajalta",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "Tärkeiden mittareiden taulukko"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "Anna Webtrends-tiliisi liittyvä profiilitunnus.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "Palauttaa olennaisia Webtrends-tietoja sisältävän taulukon."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Yhteyden muodostaminen Viva Insights -tietoihin",
        "Documentation.LongDescription": "Tuo viikoittaiset mittari- ja määritetiedot Workplace Analyticsistä.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa taulukon, joka sisältää osion kunkin mitatun työntekijän näkyvät määritteet ja viikkokohtaiset mittarit.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "Palauttaa XML-tiedoston sisällön hierarkkisena taulukkona.",
        "Documentation.LongDescription": "Palauttaa XML-tiedoston sisällön hierarkkisena taulukkona.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "Palauttaa XML-tiedoston sisällön liitteiden taulukoiden sisäkkäisenä kokoelmana.",
        "Documentation.LongDescription": "Palauttaa XML-tiedoston sisällön liitteiden taulukoiden sisäkkäisenä kokoelmana.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Nouda paikallisen XML-tiedoston sisältö.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "Anna Zendesk-tilisi URL-osoite.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää olennaiset Zendesk-tiedot."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "Palauttaa ADO.NET-tietolähteen rakennekokoelman.",
        "Documentation.LongDescription": "Palauttaa ADO.NET-tietolähteen rakennekokoelman sekä palvelun nimen <code>providerName</code> ja yhteysmerkkijonon <code>connectionString</code>. <code>connectionString</code> voi olla teksti tai ominaisuuden ja arvon parien tietue. Ominaisuuksien arvot voivat olla tekstiä tai numeroita. Valinnainen tietueparametri <code>options</code> voidaan antaa määrittämään lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, tuotetaanko SQL Server -yhteensopivia yhteysmerkkijonovalitsimia Windows-todennukselle. Oletusarvo on true.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (beeta)",
        "Documentation.Description": "Tuo tietoja Amazon Redshift -tietokannasta.",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa on luettelo Amazon Redshift -klusterin <code>palvelimen</code> tietokannan <code>tietokannan</code>.  Valinnainen tietueparametri <code>asetukset</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n<ul>\r\n<li><code>Palvelun nimi -</code>: Tekstiarvo, jota käytetään yhteyden palvelun nimenä. Tätä käytetään käytettäessä Microsoft Authentication.</li>\r\n<li><code>Batch Size -</code>: niiden rivien määrä, jotka noudetaan yksittäisessä kutsussa palvelimeen.</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Palauttaa monidimensioisten kuutioiden tai taulukkomallien taulukon Analysis Services -tietokannasta.",
        "Documentation.LongDescription": "Palauttaa moniulotteisten kuutioiden tai taulukkomallien taulukon Analysis Services -tietokannasta <code>database</code> palvelimessa <code>server</code>. Valinnainen tietueparametri <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    <ul>\r\n<li><code>Query</code> : Alkuper&#228;inen MDX-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen.</li>\r\n<li><code>TypedMeasureColumns</code> : Looginen arvo, joka ilmaisee, k&#228;ytet&#228;&#228;nk&#246; moniulotteisessa mallissa tai taulukkomallissa m&#228;&#228;ritettyj&#228; tyyppej&#228; lis&#228;ttyjen mittarisarakkeiden k&#228;ytt&#228;mille tyypeille. Kun asetus on false, tyyppi&#228; number k&#228;ytet&#228;&#228;n kaikille mittarisarakkeille. T&#228;m&#228;n asetuksen oletusarvo on false.</li>\r\n<li><code>Culture</code> : Maa-asetuksen nimi, joka m&#228;&#228;ritt&#228;&#228; tietojen maa-asetuksen. T&#228;m&#228; vastaa yhteysmerkkijonon kielialueen tunnuksen ominaisuutta.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>SubQueries</code> : Luku (0, 1 tai 2), joka asettaa SubQueries-ominaisuuden arvon yhteysmerkkijonossa. T&#228;m&#228; ohjaa alivalintojen tai alikuutioiden laskettujen j&#228;senten toimintaa. (Oletusarvo on 2.)</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Palauttaa taulukon, jossa on luettelo määritetyn Spark-klusterin taulukoista.",
        "Documentation.LongDescription": "Palauttaa Spark-klusterin <code>host</code>-kohteen taulukoiden taulukkoluettelon käyttäen <code>protocol</code>-kohdetta. Kelvolliset protokollat ovat seuraavat:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa taulukon, jossa on luettelo määritetyn Spark-klusterin taulukoista.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Anna organisaatioiden ja projektien nimet.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (vain taulut)",
        "Documentation.LongDescription": "Palauttaa Azure DevOpsin tarjoamien analyysinäkymien taulukon."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "HDInsight Interactive Query",
        "Documentation.Caption": null,
        "Documentation.Description": "Tuo tietoja HDInsight Interactive Querystä",
        "Documentation.LongDescription": "\r\nPalauttaa HDInsight Interactive Querystä luettelon taulukoita, jotka on määrittänyt <code>database</code> HDInsight Interactive Query <code>-palvelimessa</code>. Portin numero voidaan määrittää valinnaisesti palvelimen kanssa eroteltuna kaksoispisteellä. Valinnainen <code>options</code>-parametri voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: Kesto, joka määrittää, miten kauan odotetaan, ennen kuin hylätään yritys muodostaa yhteys palvelimeen. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n        <li><code>CommandTimeout</code>: Kesto, joka määrittää, miten kauan palvelinpuolen kyselyn suorittaminen sallitaan, ennen kuin se peruutetaan. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n</ul>\r\n<code>Options</code>määritetään muodossa [asetus1 = arvo1, asetus2 = arvo2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "Palauttaa taulukon, jonka sarakkeet on yhdistetty Common Data Modelin entiteetin määritteisiin, tietotyypit mukaan lukien.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "Palauttaa taulukon, jonka sarakkeet on yhdistetty Common Data Modelin entiteetin määritteisiin, tietotyypit mukaan lukien. Sarakkeet entiteetin määritelmästä lisätään, jos niitä ei ole yhdistetty, ja yhdistämättömät sarakkeet poistetaan.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "Retrieve all pages of data",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "Palauttaa kuution parametrin sille käyttämisen jälkeen.",
        "Documentation.LongDescription": "Palauttaa kuution sen jälkeen, kun kohdetta <code>parameter</code> ja kohdetta <code>arguments</code> käytettiin kohteelle <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "Muuttaa suodatinkontekstin dimension askelväliä kuutiossa kutistamalla määritettyihin sarakkeisiin yhdistetyt määritteet.",
        "Documentation.LongDescription": "Muuttaa suodatinkontekstin dimension askelväliä kuutiossa <code>cube</code> kutistamalla määritettyihin sarakkeisiin <code>columnNames</code> yhdistetyt määritteet. Sarakkeet poistetaan myös kuution taulukkonäkymästä.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Korvaa Cube.Dimensions-kohteen palauttaman dimensiojoukon.",
        "Documentation.LongDescription": "Korvaa <code>Cube.Dimensions</code> palauttaman dimensiojoukon.\r\n Tämän funktion avulla voidaan esimerkiksi lisätä tunnussarake dimensiomääritteeseen, jotta tietolähde voi ryhmitellä tunnuksen mukaan näytetyn arvon sijaan.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "Ottaa käyttöön kuutiofunktioiden luettelon.",
        "Documentation.LongDescription": "Ottaa käyttöön kuutiofunktioiden luettelon <code>transforms</code> kohteessa <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "Palauttaa Db2-tietokannassa käytettävissä olevien SQL-taulukoiden ja näkymien taulukon.",
        "Documentation.LongDescription": "Palauttaa tietokantaesiintymän <code>database</code> palvelimen <code>server</code> Db2-tietokannassa käytettävissä olevien SQL-taulukoiden ja -näkymien taulukon. Portti voidaan valinnaisesti määrittää palvelimen kanssa kaksoispisteellä eroteltuna. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n<li><code>Implementation</code> : M&#228;&#228;ritt&#228;&#228; k&#228;ytett&#228;v&#228;n sis&#228;isen tietokantapalvelun toteutuksen. Kelvolliset arvot ovat: IBM ja Microsoft.</li>\r\n<li><code>BinaryCodePage</code> : Luku CCSID:lle (Coded Character Set Identifier) Db2 FOR BIT -binaaritietojen koodauksen purkamiseen merkkimerkkijonoiksi. Koskee asetusta Implementation = &quot;Microsoft&quot;. Aseta arvoksi 0, jos haluat poistaa muuntamisen k&#228;yt&#246;st&#228; (oletus). Aseta arvoksi 1, jos haluat muuntaa tietokannan koodauksen perusteella. Aseta muu CCSID-luku, jos haluat muuntaa sovelluksen koodaukseksi.</li>\r\n<li><code>PackageCollection</code> : M&#228;&#228;ritt&#228;&#228; merkkijonoarvon pakettikokoelmalle (oletusarvo on NULLID), jotta SQL-lausekkeiden k&#228;sittelemiseen vaadittuja jaettuja paketteja voidaan k&#228;ytt&#228;&#228;. Koskee asetusta Implementation = &quot;Microsoft&quot;.</li>\r\n<li><code>UseDb2ConnectGateway</code> : M&#228;&#228;ritt&#228;&#228;, muodostetaanko yhteys Db2 Connectin yhdysk&#228;yt&#228;v&#228;n kautta. Koskee toteutusta Microsoft.</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi joko muodossa [vaihtoehto1 = arvo1, vaihtoehto2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Noutaa tietojoukon Data.Worldista"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää Azure-tallennustilasäilön määritetystä säilöstä löytyneiden blob-objektien ominaisuudet ja sisällön.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää rivin kullekin säilön URL-osoitteesta <code>account</code> löytyneelle blob-tiedostolle Azure-tallennustilasäilöstä. Kukin rivi sisältää tiedoston ominaisuudet ja linkin sen sisältöön.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää määritettyjen CSS-valitsimien suorittamisen tulokset annetulle HTML-koodille.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää määritettyjen CSS-valitsinten annetulle kohteelle <code>html</code> suorittamisen tulokset. Valinnainen tietueparametri <code>options</code> voidaan antaa märittämään lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n<ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Käytetään tietoja",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa taulukon html-tekstiarvoesimerkistä.",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>Esimies</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#table({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "Poimii kaikki hrefs-kohteet näytteen html-tekstiarvosta.",
            "Code": "Html.Table(\"<a href=\"\"/test.html\"\">Testi</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "Palauttaa Informix-tietokannassa käytettävissä olevien SQL-taulukoiden ja -näkymien taulukon.",
        "Documentation.LongDescription": "Palauttaa tietokantaesiintymässä <code>database</code> palvelimen <code>server</code> Informix-tietokannassa käytettävissä olevien SQL-taulukoiden ja -näkymien taulukon. Portti voidaan valinnaisesti määrittää palvelimen kanssa erotettuna kaksoispisteellä. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "Palauttaa liiditietojen taulukon.",
        "Documentation.LongDescription": "Tekee kutsun Marketo REST -ohjelmointirajapintapäätepisteelle osoitteessa <code>url</code>/rest/v1/leads.json. Kaikki liidit luettelossa <code>leadIds</code> palautetaan.",
        "Documentation.Examples": [
          {
            "Description": "Noutaa kolmen liidin tiedot",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "Taulukko annettujen liidien tiedoista"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "Anna tiliisi liittyvän Marketo REST API -päätepisteen URL-osoite.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa on asiaankuuluvia Marketo-tietoja."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "Palauttaa MySQL-tietokannassa käytettävissä olevien SQL-taulukoiden, näkymien ja tallennettujen skalaarifunktioiden taulukon.",
        "Documentation.LongDescription": "Palauttaa tietokantaesiintymässä <code>database</code> palvelimen <code>server</code> MySQL-tietokannassa käytettävissä olevien SQL-taulukoiden sekä -näkymien ja tallennettujen SQL-skalaarifunktioiden taulukon. Portti voidaan valinnaisesti määrittää palvelimen kanssa erotettuna kaksoispisteellä. Valinnainen tietueparametri <code>options</code> voidaan seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>Encoding</code> : TextEncoding-arvo, joka m&#228;&#228;ritt&#228;&#228; merkist&#246;n, jota k&#228;ytet&#228;&#228;n kaikkien palvelimeen l&#228;hetett&#228;vien kyselyiden koodaamiseen (oletusarvo on tyhj&#228;arvo).</li>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>TreatTinyAsBoolean</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, pakotetaanko palvelimen pienikokonaislukusarakkeet loogisiksi arvoiksi. Oletusarvo on true.</li>\r\n<li><code>OldGuids</code> : Looginen arvo (true/false), joka asettaa, k&#228;sitell&#228;&#228;nk&#246; char(36)-sarakkeita (jos false) tai binary(16)-sarakkeita (jos true) GUID-tunnuksina. Oletusarvo on false.</li>\r\n<li><code>ReturnSingleDatabase</code> : Looginen arvo (true/false), joka asettaa, palautetaanko kaikkien tietokantojen kaikki taulukot (jos false) vai m&#228;&#228;ritetyn tietokannan taulukot ja n&#228;kym&#228;t (jos true). Oletusarvo on false.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "Tuo tietoja IBM Netezza -tietokannasta.",
        "Documentation.LongDescription": "\r\nPalauttaa taulukon, joka sisältää Netezza-taulukot, -näkymät ja tallennetut funktiot palvelimen <code>server</code> Netezza Server -tietokannasta <code>database</code>. Portti voidaan määrittää valinnaisesti palvelimen kanssa eroteltuna kaksoispisteellä. Valinnainen <code>options</code>-tietueparametri voidaan määrittää seuraavien asetusten hallintaa varten:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true)</li>\r\n        <li><code>HierarchicalNavigation</code>: looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyinä niiden rakenteiden nimen mukaan (oletusarvo on false)</li>\r\n        <li><code>ConnectionTimeout</code>: Kesto, joka määrittää, miten kauan odotetaan, ennen kuin lopetetaan yritys tehdä yhteys palvelimeen. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n        <li><code>CommandTimeout</code>: Kesto, joka määrittää, miten kauan palvelinpuolen kyselyn suorittaminen sallitaan, ennen kuin se peruutetaan. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n<li><code>NormalizeDatabaseName</code>: looginen arvo (true/false), joka määrittää, normalisoidaanko tietokannan nimi isoiksi kirjaimiksi vai tulkitaanko se kirjaimellisesti (oletusarvo on true).</li>\r\n</ul>\r\nTietueparametri määritetään muodossa [asetus1 = arvo1, asetus2 = arvo2...].",
        "Documentation.Examples": [
          {
            "Description": "Näytä IBM Netezza -projektin taulukoiden luettelo.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "Palauttaa alkuperäisen kyselyn ODBC-tietolähteelle suorittamisen tuloksen.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>query</code> yhteysmerkkijonon <code>connectionString</code> kanssa suorittamisen tuloksen. <code>connectionString</code> voi olla teksti tai ominaisuuden ja arvon parien tietue. Ominaisuusarvot voivat olla teksti tai luku. Valinnainen tietueparametri <code>options</code> voidaan antaa määrittämään lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on 15 sekuntia.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, tuotetaanko SQL Server -yhteensopivia yhteysmerkkijonovalitsimia Windows-todennukselle. Oletusarvo on true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Palauta yksinkertaisen kyselyn suorittamisen tulos annetulle yhteysmerkkijonolle.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "Palauttaa alkuperäisen kyselyn OLE DB -tietolähteelle suorittamisen tuloksen.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>query</code> yhteysmerkkijonon <code>connectionString</code> kanssa suorittamisen tuloksen. <code>connectionString</code> voi olla teksti tai ominaisuuden ja arvon parien tietue. Ominaisuuksien arvot voivat olla teksti tai luku. Valinnainen tietueparametri <code>options</code> voidaan antaa lisäominaisuuksien määrittämistä varten. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, tuotetaanko SQL Server -yhteensopivia yhteysmerkkijonovalitsimia Windows-todennukselle. Oletusarvo on true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "Palauttaa PostgreSQL-tietokannassa käytettävissä olevien SQL-taulukoiden ja näkymien taulukon.",
        "Documentation.LongDescription": "Palauttaa tietokantaesiintymän <code>database</code> palvelimen <code>server</code> PostgreSQL-tietokannassa käytettävissä olevien SQL-taulukoiden ja näkymien taulukon. Portti voidaan valinnaisesti määrittää palvelimen kanssa kaksoispisteellä eroteltuna. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi joko muodossa [vaihtoehto1 = arvo1, vaihtoehto2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Tuo tietoja Snowflake Computing -varastosta.",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa on luettelo Snowflake Computing -<code>varastossa</code> <code>palvelimessa</code> sijaitsevista taulukoista. Valinnainen tietueparametri <code>options</code> voidaan myös määrittää seuraavien asetusten hallintaa varten:\r\n<ul>\r\n<li><code>Role</code>: tekstiarvo, jota käytetään roolin nimenä yhteydelle.</li>\r\n<li><code>CreateNavigationProperties</code>: totuusarvo (true/false), joka määrittää, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusasetus on true)</li>\r\n<li><code>ConnectionTimeout</code>: niiden sekuntien määrä, jotka odotetaan verkkovastauksia Snowflakesta.</li>\r\n<li><code>CommandTimeout</code>: niiden sekuntien määrä, jotka odotetaan kyselyn suorittamista.</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Näytä luettelo Snowflake-varaston taulukoista.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Palauttaa taulukon, jossa on luettelo määritetyn Spark-klusterin taulukoista.",
        "Documentation.LongDescription": "Palauttaa Spark-klusterin <code>host</code>-kohteen taulukoiden taulukkoluettelon käyttäen <code>protocol</code>-kohdetta. Kelvolliset protokollat ovat seuraavat:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Näytä luettelo Azure Spark -esiintymän taulukoista.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "Palauttaa SQL Server -tietokannan SQL-taulukoiden, näkymien ja tallennettujen funktioiden taulukon.",
        "Documentation.LongDescription": "Palauttaa SQL-taulukoiden sekä -näkymien ja tallennettujen SQL-funktioiden taulukon palvelimen <code>server</code> SQL Server -tietokannasta <code>database</code>. Portti voidaan valinnaisesti määrittää palvelimen kanssa erotettuna kaksoispisteellä tai pilkulla. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Luku, joka asettaa maxdop-kyselylauseen arvon muodostetussa SQL-kyselyss&#228;.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n<li><code>MultiSubnetFailover</code> : Looginen arvo (true/false), joka asettaa MultiSubnetFailover-ominaisuuden arvon yhteysmerkkijonossa (oletusarvo on false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Looginen arvo (true/false), joka arvon ollessa true yritt&#228;&#228; delegoida l&#228;hteeseen tyyppimuunnoksia, mik&#228; voi ep&#228;onnistua ja aiheuttaa koko kyselyn ep&#228;onnistumisen. Ei suositella yleiseen k&#228;ytt&#246;&#246;n.</li>\r\n<li><code>ContextInfo</code> : Binaariarvo, jota k&#228;ytet&#228;&#228;n asettamaan CONTEXT_INFO ennen kunkin komennon suorittamista.</li>\r\n<li><code>OmitSRID</code> : Looginen arvo (true/false), joka arvon ollessa tosi j&#228;tt&#228;&#228; pois SRID-kohteen tuotettaessa Well-Known Texti&#228; geometria- ja maantiedetyypeist&#228;.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Looginen arvo (tosi/ep&#228;tosi), joka arvon ollessa tosi sallii kyselyn delegoinnin l&#228;hteeseen saman palvelimen eri tietokannoissa. Oletusarvo on ep&#228;tosi.</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi muodossa [asetus1 = arvo1, asetus2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Palauttaa Sybase-tietokannassa käytettävissä olevien SQL-taulukoiden ja näkymien taulukon.",
        "Documentation.LongDescription": "Palauttaa tietokantaesiintymän <code>server</code> palvelimen <code>database</code> Sybase-tietokannassa käytettävissä olevien SQL-taulukoiden ja -näkymien taulukon. Portti voidaan valinnaisesti määrittää palvelmen kanssa kaksoispisteellä eroteltuna. Valinnainen tietueparametri <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Funktio, jota k&#228;ytet&#228;&#228;n luomaan nimi&#228; siirtymisominaisuuksia varten.</li>\r\n<li><code>Query</code> : Alkuper&#228;inen SQL-kysely, jota k&#228;ytet&#228;&#228;n tietojen noutamiseen. Jos kysely tuottaa useita tulosjoukkoja, vain ensimm&#228;inen palautetaan.</li>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>ConnectionTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin yritys yhdist&#228;&#228; palvelimeen lopetetaan. Oletusarvo on riippuvainen ohjaimesta.</li>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n</ul>\r\n\r\n    Tietueparametri määritetään esimerkiksi joko muodossa [vaihtoehto1 = arvo1, vaihtoehto2 = arvo2...] tai [Query = \"select ...\"].\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "Liittää sarakkeen, jolla on eksplisiittiset sijaintiarvot.",
        "Documentation.LongDescription": "Liittää kohteeseen <code>table</code> sarakkeen <code>newColumnName</code>, jolla on eksplisiittiset sijaintiarvot.\r\n    Valinnainen arvo <code>initialValue</code>, alkuindeksiarvo. Valinnainen arvo <code>increment</code>. Määrittää, miten paljon kutakin indeksiarvoa suurennetaan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lisää indeksisarake nimeltä \"index\" taulukkoon.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "Lisää indeksisarake nimeltä \"index\" alkaen arvosta 10 ja suurentaen viidellä taulukkoon.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "Kun annetaan taulukon sarakeluettelo, luo kopio rivistä kullekin arvolle sen luettelossa.",
        "Documentation.LongDescription": "Kun annetaan <code>table</code>, jossa <code>column</code> on arvojen luettelo, jakaa luettelon osiin niin, että kullekin arvolle on rivi. Muiden sarakkeiden arvot monistetaan kullekin uudelle luodulle riville.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Jaa luettelosarake [Name] taulukossa.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "Levittää edellisen solun arvo sarakkeessa alapuolella oleviin tyhjäarvoisiin soluihin.",
        "Documentation.LongDescription": "Palauttaa määritetystä kohteesta <code>table</code> taulukon, jossa edellisen solun arvo levitetään määritetyssä kohteessa <code>columns</code> alapuolella oleviin tyhjäarvoisiin soluihin.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukko, jonka tyhjäarvot sarakkeessa [Place] on täytetty niiden yllä olevalla arvolla taulukosta.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "Levittää solun arvon sarakkeessa yläpuolella oleviin tyhjäarvoisiin soluihin.",
        "Documentation.LongDescription": "Palauttaa määritetystä kohteesta <code>table</code> taulukon, jossa seuraavan solun arvo levitetään määritetyssä kohteessa <code>columns</code> yläpuolella oleviin tyhjäarvoisiin soluihin.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukko, jonka tyhjäarvot sarakkeessa [Column2] on täytetty niiden alla olevalla arvolla taulukosta.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "Palauttaa kaikki rivit, jotka sisältävät annetun tekstin taulukossa.",
        "Documentation.LongDescription": "Palauttaa taulukon <code>table</code> rivit, jotka sisältävät tekstin <code>text</code>. Jos tekstiä ei löydy, palautetaan tyhjä taulukko.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Etsi taulukon rivit, jotka sisältävät tekstin \"Bob\".",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "Palauttaa ensimmäiset määritetyt määrärivit.",
        "Documentation.LongDescription": "Palauttaa taulukon <code>table</code> ensimmäiset rivit kohteen <code>countOrCondition</code> arvon mukaan:\r\n    <ul>\r\n    <li> Jos <code>countOrCondition</code> on luku, kyseinen määrä rivejä (ylhäältä alkaen) palautetaan. </li>\r\n    <li> Jos <code>countOrCondition</code> on ehto, kyseisen ehdon täyttävät rivit palautetaan, kunnes jokin rivi ei täytä ehtoa.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Etsi taulukon ensimmäiset kaksi riviä.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Etsi taulukon ensimmäiset rivit, joissa [a] > 0.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "Palauttaa taulukon, joka on osioitujen taulukoiden joukon yhdistämisen tulos.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka on osioitujen taulukoiden joukon (<code>partitions</code>) yhdistämisen tulos. <code>partitionColumn</code> on lisättävän sarakkeen nimi. Sarakkeen tyypin oletusasetus on <code>any</code>, mutta <code>partitionColumnType</code> voi määrittää sen.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Etsi kohdetyyppi luettelosta <code>{number}</code>.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "Palauttaa viimeisen määritetyn rivien määrän.",
        "Documentation.LongDescription": "Palauttaa taulukon <code>table</code> viimeiset rivit kohteen <code>countOrCondition</code> arvon mukaan:\r\n    <ul>\r\n    <li> Jos <code>countOrCondition</code> on luku, kyseinen määrä rivejä palautetaan alkaen sijainnista (end - <code>countOrCondition</code>). </li>\r\n    <li> Jos <code>countOrCondition</code> on ehto, kyseisen ehdon täyttävät rivit palautetaan käyttäen nousevaa sijaintia, kunnes jokin rivi ei täytä ehtoa.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Etsi taulukon viimeiset kaksi riviä.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Etsi taulukon viimeiset rivit, joissa [a] > 0.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "Palauttaa taulukon, jossa kaikille sarakkeille on lisätty etuliitteeksi annettu teksti.",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa kaikkiin sarakkeiden nimiin annetusta kohteesta <code>table</code> lisätään etuliitteeksi annettu teksti <code>prefix</code> ja piste muodossa <code>prefix</code><code>.SarakkeenNimi</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Lisää sarakkeiden nimiin etuliitteeksi \"MyTable\" taulukossa.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "Palauttaa määritetystä siirtymästä alkavat rivit.",
        "Documentation.LongDescription": "Palauttaa määritetystä kohteesta <code>offset</code> alkavat rivit kohteesta <code>table</code>. Valinnainen parametri <code>count</code> määrittää palautettavien rivien määrän. Oletusarvon mukaan palautetaan kaikki siirtymän jälkeiset rivit.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Palauta kaikki rivit alkaen siirtymästä 1 taulukossa.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Palauta yksi rivi alkaen siirtymästä 1 taulukossa.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "Poistaa määritetyt sarakkeet.",
        "Documentation.LongDescription": "Poistaa määritetyn kohteen <code>columns</code> annetusta kohteesta <code>table</code>.\r\n    Jos määritettyä saraketta ei ole olemassa, aiheutuu virhe, ellei valinnainen parametri <code>missingField</code> määritä vaihtoehtoista toimintaa (esimerkiksi <code>MissingField.UseNull</code> tai <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Poista sarake [Phone] taulukosta.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Yritä poistaa taulukosta sarake, jota ei ole.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "Poistaa määritettyjen rivien kaikki esiintymät taulukosta.",
        "Documentation.LongDescription": "Poistaa määritetyn kohteen <code>rows</code> kaikki esiintymät kohteesta <code>table</code>.\r\n    Valinnainen parametri <code>equationCriteria</code> voidaan määrittää ohjaamaan taulukon rivien välistä vertailua.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Poista taulukosta <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code> kaikki rivit, joissa [a = 1].",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "Poistaa määritettyyn määrän rivejä.",
        "Documentation.LongDescription": "Poistaa kohteen <code>table</code> alusta rivejä (<code>count</code>) alkaen määritetystä kohteesta <code>offset</code>. Oletusmäärää 1 käytetään, jos parametria <code>count</code> ei ole annettu. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Poista ensimmäinen rivi taulukosta.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Poista taulukosta rivi, joka on sijainnissa 1.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Poista taulukosta kaksi riviä, jotka alkavat sijainnista 1.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "Ottaa käyttöön uudelleennimeämiset muodossa {old, new}.",
        "Documentation.LongDescription": "Suorittaa annetut uudelleennimeämiset taulukon <code>table</code> sarakkeille. Korvaamistoiminto <code>renames</code> muodostuu kahden arvon (vanha sarakkeen nimi ja uusi sarakkeen nimi) luettelosta.\r\n    Jos saraketta ei ole olemassa, aiheutuu poikkeus, ellei valinnainen parametri <code>missingField</code> määritä vaihtoehtoa (esimerkiksi <code>MissingField.UseNull</code> tai <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Korvaa sarakkeen nimi \"CustomerNum\" nimellä \"CustomerID\" taulukossa.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Korvaa sarakkeen nimi \"CustomerNum\" nimellä \"CustomerID\" ja \"PhoneNum\" nimellä \"Phone\" taulukossa.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Korvaa sarakkeen nimi \"NewCol\" nimellä \"NewColumn\" taulukossa ja ohita, jos saraketta ei ole olemassa.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "Palauttaa taulukon, jonka sarakkeet ovat määritetyssä järjestyksessä.",
        "Documentation.LongDescription": "Palauttaa taulukon syötteestä <code>table</code> niin, että sarakkeet ovat kohteen <code>columnOrder</code> määrittämässä järjestyksessä. Sarakkeita, joita ei ole määritetty luettelossa, ei järjestetä uudelleen.\r\n     Jos saraketta ei ole olemassa, aiheutuu poikkeus, ellei valinnainen parametri <code>missingField</code> määritä vaihtoehtoa (esimerkiksi <code>MissingField.UseNull</code> tai <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Vaihda sarakkeiden [Phone] ja [Name] järjestys taulukossa.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Vaihda sarakkeiden [Phone] ja [Address] järjestys tai käytä kohdetta MissingField.Ignore taulukossa. Se ei muuta taulukkoa, koska saraketta [Address] ei ole.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "Toistaa taulukoiden rivit määritetyn määrän kertoja.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää määritetyn <code>count</code> kertaa toistetut syötteen <code>table</code> rivit.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Toista taulukon rivit kahdesti.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "Korvaa määritettyjen sarakkeiden virhearvot vastaavalla määritetyllä arvolla.",
        "Documentation.LongDescription": "Korvaa kohteen <code>table</code> määritettyjen sarakkeiden virhearvot luettelon <code>errorReplacement</code> uusilla arvoilla. Luettelon muoto on {{column1, value1}, …}. Saraketta kohti voi olla vain yksi korvaava arvo, ja sarakkeen määrittäminen useammin kuin kerran antaa tulokseksi virheen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Korvaa virhearvo tekstillä \"world\" taulukossa.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "Korvaa virhearvo sarakkeessa A tekstillä \"hello\" ja sarakkeessa B tekstillä \"world\" taulukossa.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "Korvaa määritetyn taulukon avaimet.",
        "Documentation.LongDescription": "Korvaa määritetyn taulukon avaimet.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Korvaa taulukon olemassa olevat avaimet.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "Korvaa kaikki määritetyt rivit annetuilla riveillä.",
        "Documentation.LongDescription": "Korvaa kaikki määritetyt rivit annetuilla riveillä kohteessa <code>table</code>. Korvattavat rivit ja korvaavat rivit on määritetty kohteessa <code>replacements</code> käyttäen muotoilua {old, new}.\r\n    Valinnainen parametri <code>equationCriteria</code> voidaan määrittää ohjaamaan taulukon rivien välistä vertailua.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Korvaa rivit [a = 1, b = 2] ja [a = 2, b = 3] riveillä [a = -1, b = -2],[a = -2, b = -3] taulukossa.",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "Palauttaa taulukon, joka sisältää ainoastaan määritetyt sarakkeet.",
        "Documentation.LongDescription": "Palauttaa <code>table</code>:n, jolla on vain määritetty <code>columns</code>.\r\n    <ul>\r\n       <li><code>table</code>: Annettu taulukko.</li>\r\n       <li><code>columns</code>: Palautettava sarakkeiden luettelo taulukosta <code>table</code>. Palautetun taulukon sarakkeet ovat lueteltu kohdassa <code>columns</code>.</li>\r\n       <li><code>missingField</code>: <i>(Valinnainen)</i> Mitä tehdä, jos saraketta ei ole olemassa.  Esimerkki: <code>MissingField.UseNull</code> or <code>MissingField.Ignore</code>. \r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Sisällytä vain sarake [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "Sisällytä vain sarakkeet [CustomerID] ja [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Jos sisällytettyä saraketta ei ole, oletustulos on virhe.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "Jos sisällytettyä saraketta ei ole, asetus <code>MissingField.UseNull</code> luo tyhjäarvoja sisältävän sarakkeen.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "Valitse rivit, jotka täyttävät ehtofunktion.",
        "Documentation.LongDescription": "Palauttaa kohteesta <code>table</code> sellaisten rivien taulukon, jotka vastaavat valintaa <code>condition</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Valitse taulukon rivit, joissa arvot [CustomerID]-sarakkeessa ovat suuremmat kuin 2.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Valitse taulukon rivit, joissa nimet eivät sisällä kirjainta B.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "Lajittelee taulukon käyttäen vähintään yhtä sarakkeen nimeä ja vertailuehtoja.",
        "Documentation.LongDescription": "Lajittelee kohteen <code>table</code> käyttäen yhtä tai useampaa sarakkeen nimeä ja valinnaista kohdetta <code>comparisonCriteria</code> muodossa { { col1, comparisonCriteria }, {col2} }.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Lajittele taulukko sarakkeen \"OrderID\" mukaan.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "Lajittele taulukko sarakkeen \"OrderID\" mukaan laskevaan järjestykseen.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "Lajittele taulukko ensin sarakkeen \"CustomerID\" mukaan ja sitten sarakkeen \"OrderID\" mukaan niin, että \"CustomerID\" on nousevassa järjestyksessä.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "Muuntaa sarakkeiden nimet käyttäen annettua funktiota.",
        "Documentation.LongDescription": "Muuntaa sarakkeiden nimet käyttämällä annettua <code>nameGenerator</code> -toimintoa. Kelvolliset asetukset:\r\n    <div>\r\n      <code>MaxLength</code> määrittää uusien sarakkeiden nimien enimmäispituuden. Jos annetun funktion tuloksena on pidempi sarakkeen nimi, pitkä nimi rajataan.\r\n    </div>\r\n    <div>\r\n      <code>Vertailutoimintoa</code> käytetään ohjaamaan vertailua luotaessa uusia sarakkeiden nimiä. Vertailutoiminnoilla voidaan tarjota kirjainkoon ohittavia tai maa- ja aluekohtaiset asetukset huomioivia vertailua.\r\n    </div>\r\n    <div>\r\n      Seuraavat sisäiset vertailutoiminnot ovat saatavilla kaavan kielellä:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: Käytetään tarkan järjestyslukuvertailun suorittamiseen</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: Käytetään tarkan kirjainkoon ohittavan järjestyslukuvertailun suorittamiseen</li>\r\n<li> <code> Comparer.FromCulture</code>: Käytetään maa-asetukset huomioivan vertailun suorittamiseen</li>\r\n    </ul>\r \n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Poista merkki <code>#(tab)</code> sarakkeiden nimistä",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "Muodosta nimiä, joiden kirjainkoko ei ole merkitsevä ja joiden pituus on 6, muuntamalla sarakkeen nimet.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "Ottaa käyttöön tyyppimuunnokset muodossa { column, type } käyttäen määritettyä maa-asetusta.",
        "Documentation.LongDescription": "Palauttaa taulukon syötteestä <code>table</code> ottamalla käyttöön muunnostoiminnon parametrissa <code>typeTransformations</code> määritetyille sarakkeille (tässä muoto on { column name, type name}) käyttäen määritettyä maa-asetusta parametrissa <code>culture</code> (esimerkiksi en-US).\r\n    Jos saraketta ei ole, tapahtuu poikkeus.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Muunna sarakkeen [a] lukuarvot tekstiarvoiksi taulukosta <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "Muuntaa vähintään yhden sarakkeen arvot.",
        "Documentation.LongDescription": "Muuntaa kohteen <code>table</code> ottamalla käyttöön kunkin kohdassa <code>transformOperations</code> luetellun saraketoiminnon (jossa muoto on { column name, transformation } tai { column name, transformation, new column type }).\r\n    Jos <code>defaultTransformation</code> määritetään, sitä käytetään kaikissa sarakkeissa, joita ei ole lueteltu <code>transformOperations</code>.\r\n    Jos kohdassa <code>transformOperations</code> lueteltua saraketta ei ole olemassa, tapahtuu poikkeus, ellei valinnainen parametri <code>missingField</code> määritä vaihtoehtoa (esimerkiksi <code>MissingField.UseNull</code> tai <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Muunna sarakkeen tekstiarvot [A] lukuarvoiksi ja sarakkeen lukuarvot [B] tekstiarvoiksi.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "Muunna puuttuvan sarakkeen [X] lukuarvot tekstiarvoiksi ja ohita sarakkeet, joita ei ole olemassa.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "Muunna puuttuvan sarakkeen [X] lukuarvot tekstiarvoiksi ja käytä oletusarvona tyhjäarvoa sarakkeille, joita ei ole olemassa.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "Kasvata sarakkeen [B] lukuarvoja ja muunna ne tekstiarvoiksi ja muunna kaikki muut sarakkeet luvuiksi.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "Luo tai laajentaa taulukkoa käyttäen käyttäjän määrittämiä käsittelytoimintoja kysely- ja toimitoiminnoille.",
        "Documentation.LongDescription": "<p> Palauttaa <code>table</code> näkymän, jossa <code>handlers</code> määritettyjä funktioita käytetään toiminnon oletustoiminnan sijasta, kun toimintoa käytetään view.</p>\r\n<p>Jos <code>table</code> annetaan, kaikki käsittelijäfunktiot ovat valinnaisia. Jos <code>table</code> ei anneta, tarvitaan <code>GetType</code> ja <code>GetRows</code>käsittelijäfunktiot. Jos käsittelijäfunktiota ei ole määritetty toiminnolle, toiminnon oletustoimintaa käytetään sen sijaan <code>table</code> (paitsi jos kyseessä on <code>GetExpression</code>).</p>\r\n<p>Handler-funktioiden on palautettava arvo, joka vastaa semanttisesti toiminnon <code>table</code> (tai tuloksena olevaa näkymää, jos kyseessä on <code>GetExpression</code>).</p>\r\n<p>Jos käsittelijäfunktio aiheuttaa virheen, toiminnon oletustoimintaa käytetään view.</p>\r\n<p><code>Table.View</code> voidaan käyttää taittamiseen tietolähteeseen – M-kyselyiden muuntamiseksi lähdekohtaisiksi kyselyiksi (kohteelle esimerkiksi T-SQL-lausekkeiden luomiseksi M-kyselyistä).</p>\r\n<p>Näytä julkaistut Power Query mukautetun liittimen ohjeet, jotta saat kattavamman kuvauksen <code>Table.View</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Luo perusnäkymä, joka ei edellytä rivien käyttämistä tyypin tai rivimäärän määrittämiseksi.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Anna organisaatioiden ja projektien nimet.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps (vain taulut)",
        "Documentation.LongDescription": "Palauttaa Azure DevOpsin tarjoamien analyysinäkymien taulukon."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Tuo tietoja Verticasta",
        "Documentation.LongDescription": "Palauttaa käytettävissä olevien rakenteiden taulukon palvelimessa, joka on nimetty <code>server</code>-parametrilla, tietokannassa, joka on nimetty <code>database</code>-parametrilla.\r\nValinnainen tietueparametri <code>options</code> voidaan antaa lisäominaisuuksien määrittämistä varten. Tietue voi sisältää seuraavat kentät:\r\n<ul>\r\n    <li><code>ConnectionTimeout</code>: Kesto, joka määrittää, miten kauan odotetaan, ennen kuin hylätään yritys muodostaa yhteys palvelimeen. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n    <li><code>CommandTimeout </code>: Kesto, joka määrittää, miten kauan palvelinpuolen kyselyn sallitaan olla käynnissä, ennen kuin se peruutetaan. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "Näytä Vertican taulukoiden luettelo"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "Palauttaa taulukon, jossa on raporttisisältöä Webtrendsistä.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "Tekee kutsun annetulle Webtrends-raportoinnin päätepisteelle ja palauttaa kaikki tiedot taulukkona.",
        "Documentation.Examples": [
          {
            "Description": "Tekee kutsun Webtrends-vierailijaraportin päätepisteelle viimeisimpien 30 päivän tiedoista",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "Vierailijatietojen taulukko"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "Palauttaa luettelon Active Directory -toimialueista samassa toimialuepuuryhmässä, jossa määritetty toimialue on tai jossa nykyisen laitteen toimialue on, jos mitään ei määritetä.",
        "Documentation.LongDescription": "Palauttaa luettelon Active Directory -toimialueista samassa toimialuepuuryhmässä, jossa määritetty toimialue on tai jossa nykyisen laitteen toimialue on, jos mitään ei määritetä.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "Palauttaa alkuperäisen kyselyn ADO.NET-tietolähteelle suorittamisen tuloksen.",
        "Documentation.LongDescription": "Palauttaa tuloksen kohteen <code>query</code> suorittamisesta käyttäen yhteysmerkkijonoa <code>connectionString</code> ja ADO.NET-palvelua <code>providerName</code>. <code>connectionString</code> voi olla teksti tai ominaisuuden ja arvon parien tietue. Ominaisuusarvot voivat olla teksti tai luku. Valinnainen tietueparametri <code>options</code> voidaan antaa määrittämään lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan palvelinpuolen kysely&#228; saadaan suorittaa, ennen kuin se peruutetaan. Oletusarvo on kymmenen minuuttia.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Looginen arvo (true/false), joka m&#228;&#228;ritt&#228;&#228;, tuotetaanko SQL Server -yhteensopivia yhteysmerkkijonovalitsimia Windows-todennukselle. Oletusarvo on true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "Palauttaa raporttipaketit Adobe Analyticsissa.",
        "Documentation.LongDescription": "Palauttaa monidimensiopakettien taulukon Adobe Analyticsista. Valinnainen tietueparametri <code>options</code>voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : Looginen arvo (true/false), joka asettaa, tarkastellaanko taulukoita ryhmiteltyin&#228; niiden rakenteiden nimien mukaan (oletusarvo on false).</li>\r\n<li><code>MaxRetryCount</code> : Kyselyn tuloksen kyselyn aikana suoritettavien uudelleenyritysten m&#228;&#228;r&#228;. Oletusarvo on 120.</li>\r\n<li><code>RetryInterval</code> : Aika uudelleenyritysten v&#228;lill&#228;. Oletusarvo on yksi sekunti.</li>\r\n<li><code>Implementation</code> : M&#228;&#228;ritt&#228;&#228; Adobe Analytics -ohjelmointirajapinnan version. Kelvolliset arvot ovat: &quot;2.0&quot;. Oletusarvo k&#228;ytt&#228;&#228; ohjelmointirajapinnan versiota 1.4.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Hive LLAP",
        "Documentation.Caption": null,
        "Documentation.Description": "Tuo tietoja HIVE LLAP:stä",
        "Documentation.LongDescription": "\r\nPalauttaa Hive LLAP:stä luettelon taulukoita, jotka on määrittänyt <code>database</code>-kohde Hive LLAP <code>-palvelimessa</code> käyttäen valittua <code>protocol</code>-kohdetta. Portin numero voidaan määrittää valinnaisesti palvelimen kanssa eroteltuna kaksoispisteellä. Thrift Transport Protocol on luetteloitu tyyppi, jonka arvot ovat Standard ja HTTP. Valinnainen <code>options</code>-parametri voidaan määrittää seuraavien asetusten hallintaa varten:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: Kesto, joka määrittää, miten kauan odotetaan, ennen kuin lopetetaan yritys muodostaa yhteys palvelimeen. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n        <li><code>CommandTimeout</code>: Kesto, joka määrittää, miten kauan palvelinpuolen kyselyn suorittaminen sallitaan, ennen kuin se peruutetaan. Oletusarvo määräytyy ohjaimen mukaan.</li>\r\n</ul>\r\n<code>Options</code>-parametri määritetään muodossa [asetus1 = arvo1, asetus2 = arvo2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae yhteenvetotiedot välillä 2017-5-1 ja 2017-6-15",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "Funktio palauttaa yhteenvetotiedot välillä 2017-5-1 ja 2017-6-15"
          },
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae yhteenvetotiedot huhtikuulle 2017.",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "Funktio palauttaa tiedot välillä 2017-4-1 ja 2017-4-30"
          },
          {
            "Description": "Olettaen, että tänään on 2017-6-15, hae yhteenvetotiedot huhtikuusta 2017 tähän hetkeen.",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "Funktio palauttaa tiedot välillä 2017-4-1 ja 2017-6-15"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "Anna organisaatioiden ja projektien nimet.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Palauttaa Azure DevOpsin tarjoamien OData-syötteiden taulukon."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "Muodosta yhteys Dataverse-esiintymääsi (Dynamics 365 ja PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "Yhdistää määritetyn dimensiotaulukon kuution suodatinkontekstiin ja muuttaa suodatinkontekstin dimension askelväliä laajentamalla määritettyä dimensiomääritejoukkoa.",
        "Documentation.LongDescription": "Yhdistää määritetyn dimensiotaulukon <code>dimensionSelector</code> kuution <code>cube</code> suodatinkontekstiin ja muuttaa suodatinkontekstin dimension askelväliä laajentamalla määritettyä dimensiomääritejoukkoa <code>attributeNames</code>. Dimensiomääritteet lisätään taulukkonäkymän sarakkeisiin nimeltä <code>newColumnNames</code> tai <code>attributeNames</code>, jos saraketta ei ole määritetty.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "Lisää sarakkeen kuutioon, joka sisältää sen mittayksikön tulokset, jota on käytetty kunkin rivin rivikontekstissa.",
        "Documentation.LongDescription": "Lisää sarakkeen nimeltä <code>column</code> kuutioon <code>cube</code>, joka sisältää sen mittayksikön <code>measureSelector</code> tulokset, jota on käytetty kunkin rivin rivikontekstissa. Dimension askelvälin ja leikkauksen muutokset vaikuttavat mittaussovellukseen. Mitta-arvoja säädetään tiettyjen kuutiotoimintojen suorituksen jälkeen.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "Anna Dynamics 365 Business Central -ympäristösi ja -yrityksesi.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää olennaiset Dynamics 365 Business Central -tiedot. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "Anna Dynamics 365 Business Central -ympäristösi ja -yrityksesi.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää olennaiset Dynamics 365 Business Central -tiedot. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "Anna Dynamics 365 Business Central -ympäristösi ja -yrityksesi.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää olennaiset Dynamics 365 Business Central -tiedot. "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "Anna Dynamics 365 Business Central -ympäristösi ja -yrityksesi.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää olennaiset Dynamics 365 Business Central -tiedot. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "Palauttaa nykyisen Excel-työkirjan sisällön.",
        "Documentation.LongDescription": "Palauttaa nykyisen Excel-työkirjan sisällön. Palauttaa taulukot, nimetyt alueet ja dynaamiset matriisit.Toisin kuin<code> Excel.Workbook</code>, se ei palauta taulukoita.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Palauttaa sisällysluettelon Microsoft Exchange -tilistä.",
        "Documentation.LongDescription": "Palauttaa sisällysluettelon Microsoft Exchange -tililtä <code>mailboxAddress</code>. Jos kohdetta <code>mailboxAddress</code> ei määritetä, käytetään tunnistetiedon oletustiliä.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Varasto",
        "Documentation.Caption": "Varasto",
        "Documentation.Description": "Tuo dataa varastosta",
        "Documentation.LongDescription": "Tuo dataa varastosta"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Palauttaa Google Analytics -tilit.",
        "Documentation.LongDescription": "Palauttaa Google Analytics -tilit, joita voidaan käyttää nykyisestä tunnistetiedosta.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Tuo tiedot Google BigQuery-tietokannasta.",
        "Documentation.LongDescription": "\r\n      Palauttaa taulukon, jossa on Google BigQueryssä käytettävissä olevien projektien luettelo. Valinnainen tietueparametri, <code>asetukset</code>, voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: Kesto, joka määrittää, miten kauan odotetaan, ennen kuin hylätään yritys muodostaa yhteys palvelimeen. Oletusarvo on ODBC-yhteyden aikakatkaisun arvo.</li>\r\n        <li><code>CommandTimeout</code>: Kesto, joka määrittää, miten kauan palvelinpuolen kyselyn suorittaminen sallitaan, ennen kuin se peruutetaan.</li>\r\n        <li><code>BillingProject</code>: Laskutusprojektin nimi. Oletusarvo on ensimmäinen käytettävissä oleva projekti.</li>\r\n        <li><code>UseStorageApi</code>: Määrittää, käytetäänkö BigQuery Storage APIa suurissa tulosjoukoissa. Oletusarvo on määritetty arvoon tosi, jotta Storage APIa käytetään. Määritä arvoksi epätosi, jos et halua käyttää Storage APIa</li>\r\n      </ul>\r\n    Tietueparametri määritetään muodossa [asetus1 = arvo1, asetus2 = arvo2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Näytä Google BigQueryn käytettävissä olevien projektien luettelo",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Lakehouse",
        "Documentation.Caption": "Tietojen tuominen Lakehousesta",
        "Documentation.Description": "Tietojen tuominen Lakehousesta",
        "Documentation.LongDescription": "Muodosta yhteys kaikkiin Lakehouse-kohteisiin, joihin sinulla on käyttöoikeus, ja valitse entiteetit, joita haluat käyttää"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "Palauttaa taulukon, jossa on MailChimpin avaintietoja.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa on MailChimpin avaintietoja.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa taulukon, jossa on MailChimpin avaintietoja.",
            "Code": "MailChimp.Tables()",
            "Result": "MailChimpin avaintietoja sisältävä taulukko."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "Palauttaa liiditapahtumien taulukon.",
        "Documentation.LongDescription": "Tekee kutsun Marketo REST -ohjelmointirajapintapäätepisteelle osoitteessa <code>url</code>/rest/v1/activities.json. Kaikki luettelon <code>activityIds</code> toimet, jotka on tehty <code>startTime</code> jälkeen, palautetaan.",
        "Documentation.Examples": [
          {
            "Description": "Noutaa taulukon verkkosivulla vierailuista 1. marraskuuta 2015 jälkeen",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "Taulukko kaikista verkkosivulla vierailuista 1. marraskuuta jälkeen"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"select * from PV_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Power BI -tietovuot (vanha)",
        "Documentation.Caption": "Tuo tietoja Power BI -tietovuosta",
        "Documentation.LongDescription": "Yhdistä kaikkiin käytettävissäsi oleviin Power BI -tietovoihin ja valitse entiteetit, joita haluat käyttää."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Tietovaraston osajoukot",
        "Documentation.Caption": "Tietovaraston osajoukot",
        "Documentation.Description": "Tuo tietoja tietovarastojen osajoukoista",
        "Documentation.LongDescription": "Tuo tietoja tietovarastojen osajoukoista"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "Tietovuot",
        "Documentation.Caption": "Tuo tiedot tietovuosta",
        "Documentation.Description": "Tuo tiedot tietovuosta",
        "Documentation.LongDescription": "Yhdistä kaikkiin käytettävissäsi oleviin tietovoihin ja valitse entiteetit, joita haluat käyttää"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "Tuo tietoja QuickBooks Onlinesta.",
        "Documentation.LongDescription": "\r\n        Palauttaa taulukon, jossa on QuickBooks Onlinessa käytettävissä olevien taulukoiden luettelo. Valinnainen tietueparametri <code>options</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n          <ul>\r\n            <li><code>ConnectionTimeout</code>: Kesto, joka määrittää, miten kauan odotetaan, ennen kuin hylätään yritys muodostaa yhteys palvelimeen.</li>\r\n            <li><code>CommandTimeout</code>: kesto, joka määrittää, miten kauan palvelinpuolen kyselyn suorittaminen sallitaan, ennen kuin se peruutetaan.</li>\r\n          </ul>\r\n        Tietueparametri määritetään muodossa [asetus1 = arvo1, asetus2 = arvo2...].\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "Palauttaa objektit Salesforce-tilistä.",
        "Documentation.LongDescription": "Palauttaa tunnistetiedoissa annetun Salesforce-tilin objektit. Tili yhdistetään annetun ympäristön <code>loginUrl</code> kautta. Jos ympäristöä ei anneta, tili yhdistetään tuotantoon (https://login.salesforce.com). Valinnaisen tietueparametrin <code>options</code> avulla voidaan määrittää lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Looginen arvo (true/false), joka asettaa, muodostetaanko siirtymisominaisuudet palautetuille arvoille (oletusarvo on false).</li>\r\n<li><code>ApiVersion</code> : T&#228;lle kyselylle k&#228;ytett&#228;v&#228; Salesforce-ohjelmointirajapinnan versio. Kun sit&#228; ei m&#228;&#228;ritet&#228;, k&#228;ytet&#228;&#228;n ohjelmointirajapinnan versiota 29.0.</li>\r\n<li><code>Timeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin pyynt&#246; palvelimeen lopetetaan. Oletusarvo on l&#228;hdekohtainen.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "Palauttaa raportit Salesforce-tilistä.",
        "Documentation.LongDescription": "Palauttaa tunnistetiedoissa annetun Salesforce-tilin raportit. Tili yhdistetään annetun ympäristön <code>loginUrl</code> kautta. Jos ympäristöä ei anneta, tili yhdistetään tuotantoon (https://login.salesforce.com). Valinnaisen tietueparametrin <code>options</code> avulla voidaan määrittää lisäominaisuuksia. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>ApiVersion</code> : T&#228;lle kyselylle k&#228;ytett&#228;v&#228; Salesforce-ohjelmointirajapinnan versio. Kun sit&#228; ei m&#228;&#228;ritet&#228;, k&#228;ytet&#228;&#228;n ohjelmointirajapinnan versiota 29.0.</li>\r\n<li><code>Timeout</code> : Kesto, joka m&#228;&#228;ritt&#228;&#228;, miten kauan odotetaan, ennen kuin pyynt&#246; palvelimeen lopetetaan. Oletusarvo on l&#228;hdekohtainen.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "Palauttaa SAP Business Warehouse -järjestelmän InfoCube-kohteet ja kyselyt ryhmiteltynä InfoArea-kohteen mukaan.",
        "Documentation.LongDescription": "Palauttaa taulukon InfoCube-kohteista ja kyselyistä ryhmiteltynä InfoArea-kohteen mukaan SAP Business Warehouse -esiintymästä palvelimessa <code>server</code>, järjestelmänumero <code>systemNumberOrSystemId</code> ja asiakastunnus <code>clientId</code>. Valinnainen tietueparametri <code>optionsOrLogonGroup</code> voidaan määrittää ohjaamaan seuraavia asetuksia:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Palauttaa taulukoiden, raporttien, kansioiden ja työtilojen taulukon Smartsheet-ohjelmointirajapinnasta",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Palauttaa käytettävissä olevien taulukoiden, raporttien, kansioiden ja työtilojen upotetun taulukon Smartsheet-ohjelmointirajapinnasta.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa Smartsheet-hierarkian ylimmällä tasolla käytettävissä olevat taulukot, kansiot, raportit ja työtilat",
            "Code": "Smartsheet.Tables()",
            "Result": "Taulukoiden, kansioiden, raporttien ja työtilojen taulukko Smartsheet-hierarkian ylimmältä tasolta"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "Palauttaa käytettävissä olevien mittareiden taulukon SparkPost-ohjelmointirajapinnan versiosta v1",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "Tämän funktion avulla voidaan noutaa tietoja tietystä SparkPost-ohjelmointirajapinta v1:n mittareiden päätepisteestä. Kun nämä taulukot päivitetään tai tehdään kutsuja SparkPost-ohjelmointirajapinnalle käyttäen tätä funktiota, muista, että SparkPost-ohjelmointirajapinnalla on tiukka ohjelmointirajapinnan nopeusraja. Jos näet tilakoodin 429 palautettuna SparkPost-palvelimesta, olet saavuttanut nopeusrajan ja sinun on odotettava jonkin aikaa ennen uusien kutsujen tekemistä. Kun valitset arvoa päivien määrän parametrille, huomaa, että ohjelmointirajapinta tallentaa tiedot vain kuudelta kuukaudelta.",
        "Documentation.Examples": [
          {
            "Description": "Noutaa toimitettavuusmittarit count_sent ja count_rejected kaikille viimeisten kolmen päivän aikana koostetuille campaign_id-tunnuksille. ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "taulukko"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "Tekee kutsun Stripe-ohjelmointirajapinnalle.",
        "Documentation.LongDescription": "Tekee kutsun Stripe-ohjelmointirajapinnalle osoitteessa https://api.stripe.com/v1/<code>method</code> niin, että välitetään tietue <code>additionalParameters</code> lisäparametreina ja luettelo <code>ColumnNames</code> odotetuista sarakkeiden nimistä. Stripe-versiota 2015-10-16 käytetään.",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa taulukon tapahtumista, jotka on luotu 1. marraskuuta 2015 jälkeen",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "Taulukko, jossa on nykyisen Stripe-tilin määritetyt tapahtumat"
          },
          {
            "Description": "Palauttaa taulukon, jossa ovat kaikki varastointiyksiköt",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "Taulukko, jossa on nykyisen Stripe-tilin kaikki varastointiyksiköt"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "Palauttaa taulukon, jossa on luettelo käytettävissä olevista Stripe-taulukoista ja -funktioista.",
        "Documentation.LongDescription": "Palauttaa taulukon, jossa on luettelo käytettävissä olevista Stripe-taulukoista ja -funktioista."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Synapse Analytics -työtila",
        "Documentation.Caption": "Azure Synapse Analytics -työtila",
        "Documentation.LongDescription": "PQ Connector for Azure Synapse Analytics -työtila",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "Lisää sarakkeen, jolla on määritetty nimi. Arvo lasketaan käyttäen määritettyä valintafunktiota ja käyttäen kutakin otettua riviä syötteenä.",
        "Documentation.LongDescription": "Lisää sarakkeen <code>newColumnName</code> taulukkoon <code>table</code>. Sarakkeen arvot lasketaan käyttäen määritettyä valintafunktiota <code>columnGenerator</code> ja käyttäen kutakin otettua riviä syötteenä.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lisää taulukkoon lukusarake nimeltä \"TotalPrice\", jossa kukin arvo on [Price]- ja [Shipping]-sarakkeiden summa.",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "Lisää uuden sarakkeen, jonka edustavat arvot on hankittu taulukon määritetyn sarakkeen arvojen sumean ryhmittelyn avulla.",
        "Documentation.LongDescription": "Lisää uuden sarakkeen <code>newColumnName</code> kohteeseen <code>table</code> edustavilla arvoilla <code>columnName</code>. Edustajat saadaan sumealla kohteen <code>columnName</code> kunkin rivin arvojen vastaavuudella.\r\n    <p>Valinnainen <code>options</code>-joukko voidaan määrittää avainsarakkeiden vertaamista varten. Vaihtoehtoja ovat seuraavat: \r\n    <ul>\r\n<li><code>Culture</code> : Sallii tietueiden ryhmittelyn kulttuurikohtaisten s&#228;&#228;nt&#246;jen perusteella. Se voi olla mik&#228; tahansa kelvollinen maa-asetuksen nimi. Esimerkiksi maa-asetus ja-JP ryhmittelee tietueet japanilaisen kulttuurin perusteella. Oletusarvo on &quot;&quot;, joka ryhmittelee invariantin englantilaisen kulttuurin perusteella.</li>\r\n<li><code>IgnoreCase</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii kirjainkoosta riippumattoman avainryhmittelyn. Esimerkiksi kun arvo on tosi, Viiniryp&#228;leet ja viiniryp&#228;leet ryhmitelll&#228;&#228;n yhteen. Oletusarvo on tosi.</li>\r\n<li><code>IgnoreSpace</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii tekstiosien yhdist&#228;misen ryhmi&#228; etsitt&#228;ess&#228;. Esimerkiksi kun arvo on tosi, Viini ryp&#228;leet ja Viiniryp&#228;leet ryhmitelll&#228;&#228;n yhteen. Oletusarvo on tosi.</li>\r\n<li><code>SimilarityColumnName</code> : Sen sarakkeen nimi, joka n&#228;ytt&#228;&#228; sy&#246;tearvon ja kyseist&#228; sy&#246;tett&#228; edustavan arvon samankaltaisuuden. Oletusarvo on tyhj&#228;arvo, joten uutta saraketta samankaltaisuuksia varten ei lis&#228;t&#228;.</li>\r\n<li><code>Threshold</code> : Luku v&#228;lilt&#228; 0,00–1,00, joka m&#228;&#228;ritt&#228;&#228; samankaltaisuuspistem&#228;&#228;r&#228;n, jolla kaksi arvoa ryhmitell&#228;&#228;n.\r\n Esimerkiksi “Viiniryp&#228;leet” ja “viniryp&#228;leet” (i-kirjain puuttuu) on ryhmitelty yhteen vain, jos t&#228;m&#228;n asetuksen arvo on pienempi kuin 0,90.\r\n Raja-arvo 1,00 sallii vain tarkat vastaavuudet.\r\n (Huomaa, ett&#228; sumea “tarkka vastaavuus” saattaa ohittaa erot, kuten kirjainkoon, sanaj&#228;rjestyksen ja v&#228;limerkit.) \r\n Oletusarvo on 0,80.</li>\r\n<li><code>TransformationTable</code> : Taulukko, joka sallii tietueiden ryhmittelemisen mukautettujen arvojen yhdist&#228;mism&#228;&#228;ritysten perusteella. Sen tulee sis&#228;lt&#228;&#228; sarakkeet from ja to. Esimerkiksi viiniryp&#228;leet on ryhmitelty rusinoiden kanssa, jos muuntamistaulukossa on annettu &quot;from&quot;-sarake, joka sis&#228;lt&#228;&#228; viiniryp&#228;leet ja &quot;to&quot;-sarake, joka sis&#228;lt&#228;&#228; &quot;rusinat&quot;. Huomaa, ett&#228; muunnosta k&#228;ytet&#228;&#228;n kaikkiin muunnostaulukon tekstin esiintymiin. Edell&#228; mainitulla muunnostaulukolla &quot;ryp&#228;leet ovat makeita&quot; ryhmitell&#228;&#228;n my&#246;s lauseen &quot;rusinat ovat makeita&quot; kanssa.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Etsi työntekijöiden sijainnin edustavat arvot.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "Suorittaa liitoksen taulukoiden välillä annetuille sarakkeille ja tuo liitostuloksen uuteen sarakkeeseen.",
        "Documentation.LongDescription": "Liittää kohteen <code>table1</code> rivit ja kohteen <code>table2</code> rivit yhteen perustuen kohteen <code>key1</code> (kohteelle <code>table1</code>) ja <code>key2</code> (kohteelle <code>table2</code>) valitsemien avainsarakkeiden arvojen samanlaisuuden perusteella. Tulokset lisätään sarakkeeseen nimeltä <code>newColumnName</code>.\r\nTämä funktio toimii samankaltaisesti kuin Table.Join ja LeftOuter-kohteen JoinKind lukuun ottamatta sitä, että liitostulokset esitetään sisäkkäisinä litteinä esittämisen sijaan.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lisää kohteeseen ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) liitossarakkeen nimeltä \"price/stock\" taulukosta ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) liitettynä kohteeseen [saleID].",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "Lisää avaimen annettuun taulukkotyyppiin.",
        "Documentation.LongDescription": "Lisää avain kohteeseen <code>table</code>, kun <code>columns</code> on kohteen sarakkeiden nimien alijoukko, joka määrittää avaimen, ja <code>isPrimary</code> määrittää, onko avain perusavain.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Lisää yksisarakkeinen perusavain taulukkoon.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "Liittää sarakkeen, jossa on yhden tai useamman muun sarakkeen luokitus.",
        "Documentation.LongDescription": "Liittää <code>newColumnName</code>-nimisen sarakkeen <code>table</code><code>comparisonCriteria</code>kuvailemalla yhden tai useamman muun sarakkeen sijoituksella.\r\nedistyneet käyttäjät voivat käyttää <code>options</code> RankKind-vaihtoehtoa tarkemman luokitusmenetelmän valitsemiseen.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Lisää taulukkoon sarake nimeltä \"RevenueRank\", joka sijoittaa Tuotto-sarakkeen suurimmasta pienimpään.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "Koostaa taulukoiden sarakkeen sisältävän taulukon useisiin sarakkeisiin.",
        "Documentation.LongDescription": "Koostaa kohteen <code>table</code>[<code>column</code>] taulukot useisiin sarakkeisiin, jotka sisältävät koostearvoja taulukoille. Kohdetta <code>aggregations</code> käytetään määrittämään sarakkeet, jotka sisältävät kostettavat taulukot, taulukoille niiden arvojen muodostamista varten käytettävät koostefunktiot ja luotavien koostesarakkeiden nimet.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Koosta taulukkosarakkeet kohteessa <code>[t]</code> taulukossa <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> summaan <code>[t.a]</code>, vähimmäis- ja enimmäisarvoihin kohteelle <code>[t.b]</code> ja kohteen <code>[t.a]</code> arvojen määrään.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "Säilyttää alkusiirtymän ja ottaa ja ohittaa seuraavat rivit vuorotellen.",
        "Documentation.LongDescription": "Säilyttää alkusiirtymän ja ottaa ja ohittaa seuraavat rivit vuorotellen.\r\n    <ul>\r\n       <li><code>table</code>: syötetaulukko.</li>\r\n       <li><code>offset</code>: ennen iterointien aloittamista säilytettävien rivien määrä.</li>\r\n       <li><code>skip</code>: kussakin iteroinnissa poistettavien rivien määrä.</li>\r\n       <li><code>take</code>: kussakin iteroinnissa säilytettävien rivien määrä.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukosta taulukko, joka alkaen ensimmäiseltä riviltä ohittaa yhden arvon ja säilyttää sitten yhden arvon.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "Yhdistää määritetyt sarakkeet uudeksi sarakkeeksi käyttäen määritettyä yhdistämistoimintofunktiota.",
        "Documentation.LongDescription": "Yhdistää määritetyt sarakkeet uudeksi sarakkeeksi käyttäen määritettyä yhdistämistoimintofunktiota.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä suku- ja etunimet uuteen sarakkeeseen pilkuilla eroteltuina.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "Yhdistää määritetyt sarakkeet uuteen tietuearvoiseen sarakkeeseen, jossa kullakin tietueella on kenttien nimet ja arvot, jotka vastaavat yhdistettyjen sarakkeiden nimiä ja arvoja.",
        "Documentation.LongDescription": "Yhdistää määritetyt <code>table</code> sarakkeet uuteen tietuearvoiseen sarakkeeseen, jonka nimi on <code>newColumnName</code>, jossa kullakin tietueella on niiden kenttien nimet ja arvot, jotka vastaavat yhdistettyjen sarakkeiden nimiä ja arvoja. Jos tietue on määritetty kohteelle <code>options</code>, seuraavat asetukset voidaan antaa: \r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: tekstinä määritettynä tämä ilmaisee, että annettua sarakkeen nimeä tulee käsitellä tietueen näyttönimenä. Tämän ei tarvitse olla yksi tietueen sarakkeista. </li>\r\n     <li> <code>TypeName</code>: tekstinä määritettynä tämä antaa tulokseksi saatavan tietueen loogisen tyypin nimen, jota voidaan käyttää tietojen lataamisen aikana, jotta kuormitusympäristö voi ajaa toimintaa. </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "Monistaa sarakkeen, jolla on määritetty nimi. Arvot ja tyyppi kopioidaan lähdesarakkeesta.",
        "Documentation.LongDescription": "Monista sarake <code>columnName</code> taulukkoon <code>table</code>. Sarakkeen <code>newColumnName</code> arvot ja tyyppi kopioidaan sarakkeesta <code>columnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Monista sarake \"a\" sarakkeeksi nimeltä \"copied column\" taulukossa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "Laajentaa tietuesarakkeen sarakkeisiin kullekin arvolle.",
        "Documentation.LongDescription": "Kun annetaan tietueiden <code>column</code> syötteessä <code>table</code>, luo taulukon, jossa on sarake tietueen kullekin kentälle. Valinnaisesti <code>newColumnNames</code> voidaan määrittää, jotta varmistetaan, että uuden taulukon sarakkeilla on yksilöivät nimet.\r\n    <ul>\r\n        <li><code>table</code>: alkuperäinen taulukko, jossa on laajennettava tietuesarake. </li>\r\n        <li><code>column</code>: laajennettava sarake.</li>\r\n        <li><code>fieldNames</code>: luettelo kentistä, jotka laajennetaan taulukon uusiin sarakkeisiin.</li>\r\n        <li><code>newColumnNames</code>: luettelo sarakkeiden nimistä, jotka annetaan uusille sarakkeille. Uudet sarakkeiden nimiä eivät voi olla uuden taulukon minkään sarakkeen kaksoiskappaleita.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Laajenna sarake [a] taulukossa <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> kolmeksi sarakkeeksi, jotka ovat \"aa\", \"bb\" ja \"cc\".",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "Laajentaa saraketaulukon saraketietueen useiksi sarakkeiksi sisältävässä taulukossa.",
        "Documentation.LongDescription": "Laajentaa taulukot kohteessa <code>table</code>[<code>column</code>] useiksi riveiksi ja sarakkeiksi. Kohdetta <code>columnNames</code> käytetään valitsemaan sisemmästä taulukosta laajennettavat sarakkeet. Määritä <code>newColumnNames</code>, jotta voit välttää ristiriidat aiemmin luotujen sarakkeiden ja uusien sarakkeiden välillä.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Laajenna taulukkosarakkeet kohteessa <code>[a]</code> taulukossa <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> kolmeksi sarakkeeksi, jotka ovat <code>[t.a]</code>, <code>[t.b]</code> ja <code>[t.c]</code>.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "Ryhmittelee taulukon rivit avainten sumean vastaavuuden perusteella.",
        "Documentation.LongDescription": "Ryhmittelee kohteen <code>table</code> rivit siten, että ne vastaavat määritetyn sarakkeen <code>key</code> arvoja kullekin riville.\r\n    Kullekin ryhmälle on muodostettu tietue, joka sisältää avainsarakkeet (ja niiden arvot) sekä <code>aggregatedColumns</code> määritetyt yhdistetyt sarakkeet.\r\n    Tämä toiminto ei voi taata rivien kiinteän järjestyksen palauttamista.\r\n    <p>Valinnainen <code>options</code>-joukko voidaan määrittää avainsarakkeiden vertaamista varten. Vaihtoehtoja ovat seuraavat: \r\n    <ul>\r\n<li><code>Culture</code> : Sallii tietueiden ryhmittelyn kulttuurikohtaisten s&#228;&#228;nt&#246;jen perusteella. Se voi olla mik&#228; tahansa kelvollinen maa-asetuksen nimi. Esimerkiksi maa-asetus ja-JP ryhmittelee tietueet japanilaisen kulttuurin perusteella. Oletusarvo on &quot;&quot;, joka ryhmittelee invariantin englantilaisen kulttuurin perusteella.</li>\r\n<li><code>IgnoreCase</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii kirjainkoosta riippumattoman avainryhmittelyn. Esimerkiksi kun arvo on tosi, Viiniryp&#228;leet ja viiniryp&#228;leet ryhmitelll&#228;&#228;n yhteen. Oletusarvo on tosi.</li>\r\n<li><code>IgnoreSpace</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii tekstiosien yhdist&#228;misen ryhmi&#228; etsitt&#228;ess&#228;. Esimerkiksi kun arvo on tosi, Viini ryp&#228;leet ja Viiniryp&#228;leet ryhmitelll&#228;&#228;n yhteen. Oletusarvo on tosi.</li>\r\n<li><code>SimilarityColumnName</code> : Sen sarakkeen nimi, joka n&#228;ytt&#228;&#228; sy&#246;tearvon ja kyseist&#228; sy&#246;tett&#228; edustavan arvon samankaltaisuuden. Oletusarvo on tyhj&#228;arvo, joten uutta saraketta samankaltaisuuksia varten ei lis&#228;t&#228;.</li>\r\n<li><code>Threshold</code> : Luku v&#228;lilt&#228; 0,00–1,00, joka m&#228;&#228;ritt&#228;&#228; samankaltaisuuspistem&#228;&#228;r&#228;n, jolla kaksi arvoa ryhmitell&#228;&#228;n.\r\n Esimerkiksi “Viiniryp&#228;leet” ja “viniryp&#228;leet” (i-kirjain puuttuu) on ryhmitelty yhteen vain, jos t&#228;m&#228;n asetuksen arvo on pienempi kuin 0,90.\r\n Raja-arvo 1,00 sallii vain tarkat vastaavuudet.\r\n (Huomaa, ett&#228; sumea “tarkka vastaavuus” saattaa ohittaa erot, kuten kirjainkoon, sanaj&#228;rjestyksen ja v&#228;limerkit.) \r\n Oletusarvo on 0,80.</li>\r\n<li><code>TransformationTable</code> : Taulukko, joka sallii tietueiden ryhmittelemisen mukautettujen arvojen yhdist&#228;mism&#228;&#228;ritysten perusteella. Sen tulee sis&#228;lt&#228;&#228; sarakkeet from ja to. Esimerkiksi viiniryp&#228;leet on ryhmitelty rusinoiden kanssa, jos muuntamistaulukossa on annettu &quot;from&quot;-sarake, joka sis&#228;lt&#228;&#228; viiniryp&#228;leet ja &quot;to&quot;-sarake, joka sis&#228;lt&#228;&#228; &quot;rusinat&quot;. Huomaa, ett&#228; muunnosta k&#228;ytet&#228;&#228;n kaikkiin muunnostaulukon tekstin esiintymiin. Edell&#228; mainitulla muunnostaulukolla &quot;ryp&#228;leet ovat makeita&quot; ryhmitell&#228;&#228;n my&#246;s lauseen &quot;rusinat ovat makeita&quot; kanssa.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ryhmittele taulukko lisäämällä koostesarake [Count], joka sisältää kussakin sijainnissa olevien työntekijöiden määrän (each Table.RowCount(_))).",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "Liittää yhteen kahdesta taulukosta rivit, jotka täsmäävät sumeasti annettujen avainten perusteella.",
        "Documentation.LongDescription": "<p>Liittää taulukon <code>table1</code> rivit ja taulukon <code>table2</code> rivit yhteen sarakkeiden <code>key1</code> (taulukolle <code>table1</code>) ja <code>key2</code> (taulukolle <code>table2</code>) valitsemien avainsarakkeiden arvojen sumean vertailun perusteella.</p>\r\n<p>Sumea vastaavuus on vertailu, joka perustuu tekstin samankaltaisuuteen tekstin yhtäläisyyden sijaan.</p>\r\n<p>Oletusarvon mukaan suoritetaan sisäliitos, mutta voidaan sisällyttää valinnainen liitos <code>joinKind</code> määrittämään liittämistyyppi. Vaihtoehtoja ovat esimerkiksi seuraavat:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Valinnainen parametrien <code>joinOptions</code> joukko voidaan sisällyttää määrittämään, miten avainsarakkeita verrataan. Vaihtoehtoja ovat esimerkiksi seuraavat:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Luku 1–8, joka m&#228;&#228;ritt&#228;&#228; sumean vastaavuuden yhteydess&#228; k&#228;ytett&#228;vien rinnakkaisten s&#228;ikeiden m&#228;&#228;r&#228;n. Oletusarvo on 1.</li>\r\n<li><code>Culture</code> : Sallii tietueiden vastaavuuden kulttuurikohtaisten s&#228;&#228;nt&#246;jen perusteella. Se voi olla mik&#228; tahansa kelvollinen maa-asetuksen nimi. Esimerkiksi maa-asetus ja-JP vastaa tietueet japanilaisen kulttuurin perusteella. Oletusarvo on &quot;&quot;, joka vastaa invariantin englantilaisen kulttuurin perusteella.</li>\r\n<li><code>IgnoreCase</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii kirjainkoosta riippumattoman avainvastaavuuden. Esimerkiksi kun arvo on tosi, Viiniryp&#228;leet ja viiniryp&#228;leet vastaavat toisiaan. Oletusarvo on tosi.</li>\r\n<li><code>IgnoreSpace</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii tekstiosien yhdist&#228;misen vastaavuuksia etsitt&#228;ess&#228;. Esimerkiksi kun arvo on tosi, Viini ryp&#228;leet ja Viiniryp&#228;leet vastaavat toisiaan. Oletusarvo on tosi.</li>\r\n<li><code>NumberOfMatches</code> : Kokonaisluku, joka m&#228;&#228;ritt&#228;&#228; niiden vastaavien rivien enimm&#228;ism&#228;&#228;r&#228;n, jotka voidaan palauttaa kullekin sy&#246;teriville. Esimerkiksi arvo 1 palauttaa enint&#228;&#228;n yhden vastaavan rivin kullekin sy&#246;teriville. Jos t&#228;t&#228; asetusta ei anneta, kaikki vastaavat rivit palautetaan.</li>\r\n<li><code>SimilarityColumnName</code> : Sen sarakkeen nimi, joka n&#228;ytt&#228;&#228; sy&#246;tearvon ja kyseist&#228; sy&#246;tett&#228; edustavan arvon samankaltaisuuden. Oletusarvo on tyhj&#228;arvo, joten uutta saraketta samankaltaisuuksia varten ei lis&#228;t&#228;.</li>\r\n<li><code>Threshold</code> : Luku v&#228;lilt&#228; 0,00–1,00, joka m&#228;&#228;ritt&#228;&#228; samankaltaisuuspistem&#228;&#228;r&#228;n, jolla kaksi arvoa yhdistet&#228;&#228;n.\r\n Esimerkiksi “Viiniryp&#228;leet” ja “Viniryp&#228;leet” (i-kirjain puuttuu) t&#228;sm&#228;&#228;v&#228;t vain, jos t&#228;m&#228;n asetuksen arvo on pienempi kuin 0,90.\r\n Raja-arvo 1,00 sallii vain tarkat vastaavuudet.\r\n (Huomaa, ett&#228; sumea “tarkka vastine” saattaa ohittaa erot, kuten kirjainkoon, sanaj&#228;rjestyksen ja v&#228;limerkit.) \r\n Oletusarvo on 0,80.</li>\r\n<li><code>TransformationTable</code> : Taulukko, joka sallii tietueiden vastaamisen mukautettujen arvojen yhdist&#228;mism&#228;&#228;ritysten perusteella. Sen tulee sis&#228;lt&#228;&#228; sarakkeet from ja to. Esimerkiksi viiniryp&#228;leet muodostaa vastaavuuden rusinoiden kanssa, jos muuntamistaulukossa on annettu &quot;from&quot;-sarake, joka sis&#228;lt&#228;&#228; viiniryp&#228;leet ja &quot;to&quot;-sarake, joka sis&#228;lt&#228;&#228; &quot;rusinat&quot;. Huomaa, ett&#228; muunnosta k&#228;ytet&#228;&#228;n kaikkiin muunnostaulukon tekstin esiintymiin. Edell&#228; mainitulla muunnostaulukolla &quot;ryp&#228;leet ovat makeita&quot; vastaa my&#246;s lausetta &quot;rusinat ovat makeita&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kahden taulukon vasen sumea sisäliitos perustuen kohteeseen [FirstName]",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "Suorittaa sumean liitoksen taulukoiden välillä annetuille sarakkeille ja tuo liitostuloksen uuteen sarakkeeseen.",
        "Documentation.LongDescription": "<p>Liittää taulukon <code>table1</code> rivit ja taulukon <code>table2</code> rivit yhteen sarakkeiden <code>key1</code> (taulukolle <code>table1</code>) ja <code>key2</code> (taulukolle <code>table2</code>) valitsemien avainsarakkeiden arvojen sumean vertailun perusteella. Tulokset lisätään uuteen sarakkeeseen nimeltä <code>newColumnName</code>.</p>\r\n<p>Sumea vastaavuus on vertailu, joka perustuu tekstin samankaltaisuuteen tekstin yhtäläisyyden sijaan.</p>\r\n<p>Valinnainen liitos <code>joinKind</code> määrittää suoritettavan liitoksen tyypin. Oletusarvon mukaan vasen ulkoliitos suoritetaan, jos kohdetta <code>joinKind</code> ei määritetä. Vaihtoehtoja ovat seuraavat:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Valinnainen kohteen <code>joinOptions</code> joukko voidaan sisällyttää määrittämään, miten avainsarakkeita verrataan. Vaihtoehtoja ovat seuraavat:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Luku 1–8, joka m&#228;&#228;ritt&#228;&#228; sumean vastaavuuden yhteydess&#228; k&#228;ytett&#228;vien rinnakkaisten s&#228;ikeiden m&#228;&#228;r&#228;n. Oletusarvo on 1.</li>\r\n<li><code>Culture</code> : Sallii tietueiden vastaavuuden kulttuurikohtaisten s&#228;&#228;nt&#246;jen perusteella. Se voi olla mik&#228; tahansa kelvollinen maa-asetuksen nimi. Esimerkiksi maa-asetus ja-JP vastaa tietueet japanilaisen kulttuurin perusteella. Oletusarvo on &quot;&quot;, joka vastaa invariantin englantilaisen kulttuurin perusteella.</li>\r\n<li><code>IgnoreCase</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii kirjainkoosta riippumattoman avainvastaavuuden. Esimerkiksi kun arvo on tosi, Viiniryp&#228;leet ja viiniryp&#228;leet vastaavat toisiaan. Oletusarvo on tosi.</li>\r\n<li><code>IgnoreSpace</code> : Looginen arvo (tosi/ep&#228;tosi), joka sallii tekstiosien yhdist&#228;misen vastaavuuksia etsitt&#228;ess&#228;. Esimerkiksi kun arvo on tosi, Viini ryp&#228;leet ja Viiniryp&#228;leet vastaavat toisiaan. Oletusarvo on tosi.</li>\r\n<li><code>NumberOfMatches</code> : Kokonaisluku, joka m&#228;&#228;ritt&#228;&#228; niiden vastaavien rivien enimm&#228;ism&#228;&#228;r&#228;n, jotka voidaan palauttaa kullekin sy&#246;teriville. Esimerkiksi arvo 1 palauttaa enint&#228;&#228;n yhden vastaavan rivin kullekin sy&#246;teriville. Jos t&#228;t&#228; asetusta ei anneta, kaikki vastaavat rivit palautetaan.</li>\r\n<li><code>SimilarityColumnName</code> : Sen sarakkeen nimi, joka n&#228;ytt&#228;&#228; sy&#246;tearvon ja kyseist&#228; sy&#246;tett&#228; edustavan arvon samankaltaisuuden. Oletusarvo on tyhj&#228;arvo, joten uutta saraketta samankaltaisuuksia varten ei lis&#228;t&#228;.</li>\r\n<li><code>Threshold</code> : Luku v&#228;lilt&#228; 0,00–1,00, joka m&#228;&#228;ritt&#228;&#228; samankaltaisuuspistem&#228;&#228;r&#228;n, jolla kaksi arvoa yhdistet&#228;&#228;n.\r\n Esimerkiksi “Viiniryp&#228;leet” ja “Viniryp&#228;leet” (i-kirjain puuttuu) t&#228;sm&#228;&#228;v&#228;t vain, jos t&#228;m&#228;n asetuksen arvo on pienempi kuin 0,90.\r\n Raja-arvo 1,00 sallii vain tarkat vastaavuudet.\r\n (Huomaa, ett&#228; sumea “tarkka vastine” saattaa ohittaa erot, kuten kirjainkoon, sanaj&#228;rjestyksen ja v&#228;limerkit.) \r\n Oletusarvo on 0,80.</li>\r\n<li><code>TransformationTable</code> : Taulukko, joka sallii tietueiden vastaamisen mukautettujen arvojen yhdist&#228;mism&#228;&#228;ritysten perusteella. Sen tulee sis&#228;lt&#228;&#228; sarakkeet from ja to. Esimerkiksi viiniryp&#228;leet muodostaa vastaavuuden rusinoiden kanssa, jos muuntamistaulukossa on annettu &quot;from&quot;-sarake, joka sis&#228;lt&#228;&#228; viiniryp&#228;leet ja &quot;to&quot;-sarake, joka sis&#228;lt&#228;&#228; &quot;rusinat&quot;. Huomaa, ett&#228; muunnosta k&#228;ytet&#228;&#228;n kaikkiin muunnostaulukon tekstin esiintymiin. Edell&#228; mainitulla muunnostaulukolla &quot;ryp&#228;leet ovat makeita&quot; vastaa my&#246;s lausetta &quot;rusinat ovat makeita&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Kahden taulukon vasen sumea sisäliitos perustuen kohteeseen [FirstName]",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "Ryhmittelee taulukon rivit, joilla on sama avain.",
        "Documentation.LongDescription": "Ryhmittelee <code>table</code> rivit määrittämillä <code>key</code> avainsarakkeilla. <code>key</code> voi olla joko yksittäinen sarakkeen nimi tai sarakenimienluettelo.\r\n    Kullekin ryhmälle on muodostettu tietue, joka sisältää avainsarakkeet (ja niiden arvot) sekä  <code>aggregatedColumns</code> määrittämät koostetut sarakkeet.\r\n    Valinnaisesti myös <code>groupKind</code> ja <code>comparer</code> voidaan määrittää.<br>\r\n    <br>\r\n    Jos tiedot on jo lajiteltu avainsarakkeiden mukaan, niin <code>groupKind</code> GroupKind.Local voidaan antaa. Tämä voi parantaa ryhmittelyn suorituskykyä tietyissä tapauksissa,\r\n    koska kaikkien niiden rivien, joilla on määritetty avainarvo, oletetaan olevan peräkkäisiä.<br>\r\n    <br>\r\n    Kun ohitat <code>comparer</code>, Huomaa, että jos se kohtelee eri avaimia yhtä suurina, rivi voidaan sijoittaa ryhmään, jonka avaimet eroavat toisistaan.<br>\r\n    <br>\r\n    Tämä funktio ei takaa palautettujen rivien määrää.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Ryhmittele taulukko lisäämällä koostesarake [total], joka sisältää hintojen summan (\"each List.Sum([price])\").",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "Lisää riviluettelon taulukkoon määritettyyn sijaintiin.",
        "Documentation.LongDescription": "Palauttaa taulukon, joka sisältää riviluettelon <code>rows</code> lisättynä kohteeseen <code>table</code> annettuun sijaintiin <code>offset</code>. Kunkin lisättävän rivin sarakkeen on vastattava taulukon saraketyyppejä.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Lisää rivi taulukkoon sijaintiin 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Lisää kaksi riviä taulukkoon sijaintiin 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "Liittää yhteen kahdesta taulukosta rivit, jotka täsmäävät annettujen avainten perusteella.",
        "Documentation.LongDescription": "<p>Liittää kohteen <code>table1</code> rivit ja kohteen <code>table2</code> rivit yhteen perustuen kohteen <code>key1</code> (kohteelle <code>table1</code>) ja <code>key2</code> (kohteelle <code>table2</code>) valitsemien avainsarakkeiden arvojen samanlaisuuden perusteella.</p>\r\n<p>Oletusarvon mukaan suoritetaan sisäliitos, mutta voidaan sisällyttää valinnainen <code>joinKind</code> määrittämään liitostyyppi. Vaihtoehtoja ovat esimerkiksi seuraavat:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Valinnainen kohteen <code>keyEqualityComparers</code> joukko voidaan sisällyttää määrittämään, miten avainsarakkeita verrataan. Tämä parametri on tällä hetkellä tarkoitettu vain sisäiseen käyttöön.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Liitä kaksi taulukkoa käyttämällä yhtä avainsaraketta.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "Liitä kaksi taulukkoa, joilla on ristiriitaiset sarakkeiden nimet. Voit tehdä tämän useilla avainsarakkeilla.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "Palauttaa suurimmat rivit käyttäen annettua ehtoa.",
        "Documentation.LongDescription": "Palauttaa suurimmat rivit kohteessa <code>table</code>, kun <code>comparisonCriteria</code> on annettu.\r\n    Kun rivit on lajiteltu, parametri <code>countOrCondition</code> täytyy määrittää, jotta tulosta voidaan suodattaa lisää. Huomaa, että lajittelualgoritmi ei voi taata mitään kiinteää lajiteltua tulosta. Parametri <code>countOrCondition</code> voi olla useassa muodossa:\r\n    <ul>\r\n        <li> Jos luku määritetään, palautetaan enintään <code>countOrCondition</code> kohteen luettelo nousevassa järjestyksessä. </li>\r\n        <li> Jos ehto määritetään, palautetaan luettelo kohteita, jotka täyttävät kyseisen ehdon aluksi. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Etsi rivi, jolla on suurin arvo sarakkeessa [a] käyttäen ehtoa [a] > 0 taulukossa. Rivit lajitellaan, ennen kuin suodatin otetaan käyttöön.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Etsi rivi, jolla on suurin arvo sarakkeessa [a] käyttäen ehtoa [b] > 0 taulukossa. Rivit lajitellaan, ennen kuin suodatin otetaan käyttöön.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "Palauttaa pienimmät rivit käyttäen annettua ehtoa.",
        "Documentation.LongDescription": "Palauttaa pienimmät rivit kohteessa <code>table</code>, kun <code>comparisonCriteria</code> on annettu. Kun rivit on lajiteltu, parametri <code>countOrCondition</code> täytyy määrittää, jotta tulosta voidaan suodattaa lisää. Huomaa, että lajittelualgoritmi ei voi taata mitään kiinteää lajiteltua tulosta. Parametri <code>countOrCondition</code> voi olla useassa muodossa:\r\n    <ul>\r\n        <li> Jos luku määritetään, palautetaan enintään <code>countOrCondition</code> kohteen luettelo nousevassa järjestyksessä. </li>\r\n        <li> Jos ehto määritetään, palautetaan luettelo kohteita, jotka täyttävät kyseisen ehdon aluksi. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Etsi rivi, jolla on pienin arvo sarakkeessa [a] käyttäen ehtoa [a] < 3 taulukossa. Rivit lajitellaan, ennen kuin suodatin otetaan käyttöön.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Etsi rivi, jolla on pienin arvo sarakkeessa [a] käyttäen ehtoa [b] < 0 taulukossa. Rivit lajitellaan, ennen kuin suodatin otetaan käyttöön.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "Suorittaa liitoksen taulukoiden välillä annetuille sarakkeille ja tuo liitostuloksen uuteen sarakkeeseen.",
        "Documentation.LongDescription": "<p>Liittää kohteen <code>table1</code> rivit ja kohteen <code>table2</code> rivit yhteen perustuen kohteen <code>key1</code> (kohteelle <code>table1</code>) ja <code>key2</code> (kohteelle <code>table2</code>) valitsemien avainsarakkeiden arvojen samanlaisuuden perusteella. Tulokset lisätään sarakkeeseen nimeltä <code>newColumnName</code>.</p>\r\n<p>Valinnainen <code>joinKind</code> määrittää suoritettavan liitoksen tyypin. Oletusarvon mukaan vasen ulkoliitos suoritetaan, jos kohdetta <code>joinKind</code> ei määritetä.</p>\r\n<p>Valinnainen kohteen <code>keyEqualityComparers</code> joukko voidaan sisällyttää määrittämään, miten avainsarakkeita verrataan. Tämä ominaisuus on tällä hetkellä tarkoitettu vain sisäiseen käyttöön.</p>  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Liitä kaksi taulukkoa käyttämällä yhtä avainsaraketta.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "Kun annetaan määrite–arvo-pareja edustava sarakepari, kiertää määritesarakkeen tiedot sarakeotsikoiksi.",
        "Documentation.LongDescription": "Kun annetaan määrite–arvo-pareja edustava sarakepari, kiertää määritesarakkeen tiedot sarakeotsikoiksi.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ota arvot \"a\", \"b\" ja \"c\" taulukon <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> määritesarakkeessa ja käännä ne omaksi sarakkeekseen.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "Ota arvot \"a\", \"b\" ja \"c\" taulukon <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> määritesarakkeessa ja käännä ne omaksi sarakkeekseen.  Avaimen \"x\" määritteeseen \"c\" liittyy useita arvoja, joten selvitä ristiriita käyttämällä funktiota List.Max.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "Korvaa määritetyn rivialueen annetuilla riveillä.",
        "Documentation.LongDescription": "Korvaa määritetyn määrän rivejä (<code>count</code>) syötteessä <code>table</code> määritetyillä riveillä (<code>rows</code>) alkaen kohteen <code>offset</code> jälkeen. Parametri <code>rows</code> on tietueluettelo.\r\n    <ul>\r\n       <li><code>table</code>: taulukko, jossa korvaus suoritetaan.</li>\r\n       <li><code>offset</code>: ennen korvaamisen tekemistä ohitettavien rivien määrä.</li>\r\n       <li><code>count</code>: korvattavien rivien määrä.</li>\r\n       <li><code>rows</code>: luettelo rivitietueita, jotka lisätään kohteeseen <code>table</code> kohteen <code>offset</code> määrittämään sijaintiin.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Korvaa sijainnista 1 alkaen kolme riviä.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "Korvaa yhden arvon toisella määritetyissä sarakkeissa.",
        "Documentation.LongDescription": "Korvaa kohteen <code>oldValue</code> kohteella <code>newValue</code> kohteen <code>table</code> määritetyissä sarakkeissa.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Korvaa teksti \"näkemiin\" sarakkeen B tekstillä \"maailma\", vastaten vain koko arvon.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "Korvaa teksti \"oma\" sarakkeen B tekstillä \"soma\", vastaten mitä tahansa arvon osaa.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "Anonymisoi yhdysvaltalaisten työntekijöiden nimet.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "Anonymisoi kaikki yhdysvaltalaiset työntekijät.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "Jakaa määritetyt sarakkeet joukoksi uusia sarakkeita käyttäen määritettyä jakotoimintoa.",
        "Documentation.LongDescription": "Jakaa määritetyt sarakkeet joukoksi uusia sarakkeita käyttäen määritettyä jakotoimintoa.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Jaa [Name]-sarake kohteen i sijainnista kahteen sarakkeeseen",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "Kääntää taulukon sarakejoukon määrite–arvo-pareiksi.",
        "Documentation.LongDescription": "Kääntää taulukon sarakejoukon määrite–arvo-pareiksi yhdistettynä kunkin rivin muiden arvojen kanssa.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Ota sarakkeet \"a\", \"b\" ja \"c\" taulukossa <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> ja poista niiden pivotointi, jotta niistä tulee määrite–arvo-pareja.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "Kääntää määritettyä joukkoa lukuun ottamatta kaikki sarakkeet määrite-arvopareiksi.",
        "Documentation.LongDescription": "Kääntää määritettyä joukkoa lukuun ottamatta kaikki sarakkeet määrite-arvopareiksi ja yhdistää ne kunkin rivin muiden arvojen kanssa.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Kääntää määritettyä joukkoa lukuun ottamatta kaikki sarakkeet määrite-arvopareiksi ja yhdistää ne kunkin rivin muiden arvojen kanssa.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Teamsin henkilökohtainen analyysi",
        "Documentation.LongDescription": "<p>Teamsin Analytics-liittimen avulla voit saada merkityksellisiä tietoja Teamsin käytöstäsi. Tiedot ovat käytettävissä sekä henkilökohtaiseen toimintaasi Teamsissa että toimintaan Teamsissa, jonka jäsen olet.</p>\r\n<p>Tiedot ovat käytettävissä edelliseltä 90 päivältä. </p>\r\n<p> Tietoja käytettävissä olevista tietotyypeistä tietoja on seuraavassa ohjeessa: </p>\r\n<ul>\r\n<li><b>Teamsin käyttö:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Teamsin käyttäjätoiminta:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "Anna organisaatioiden ja projektien nimet.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Palauttaa Azure DevOpsin tarjoamien OData-syötteiden taulukon."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "Palauttaa binaarimuodon, joka lukee binaariarvon.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, joka lukee binaariarvon.  Jos <code>length</code> on määritetty, binaariarvo sisältää kyseisen määrän tavuja.  Jos <code>length</code> ei ole määritetty, binaariarvo sisältää jäljellä olevat tavut.  <code>length</code> voidaan määrittää joko lukuna tai binaaritietoja edeltävän pituuden binaarimuodossa.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "Palauttaa loogisen arvon kahden annetun arvon yhtäläisyystarkistuksen perusteella.",
        "Documentation.LongDescription": "Palauttaa <code>logical</code>-arvon kahden annetun arvon yhtäläisyystarkistuksen perusteella <code>x</code> ja <code>y</code> käyttämällä annettua <code>comparer</code>.\r\n      <div>\r\n        <code>comparer</code> on <code>vertailutoiminto</code>, jota käytetään vertailun hallintaan.\r\n        Vertailutoiminto on funktio, joka hyväksyy kaksi argumenttia ja palauttaa arvon -1, 0 tai 1 sen mukaan, onko ensimmäinen arvo pienempi, yhtä suuri tai suurempi kuin toinen.\r\n        Vertailutoiminnoilla voidaan tarjota kirjainkoolla ei-merkitystä tai maa-asetusta ja aluekohtaisia vertailuja.\r\n      </div>\r\n      <div>\r\n        Kaavakielellä on seuraavat valmiit vertailutoiminnot:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Käytetään tarkan järjestyslukuvertailun suorittamiseen</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Käytetään tarkan kirjainkokoa merkitsemättömän vertailun suorittamiseen</li>\r\n        <li> <code>Comparer.FromCulture</code>: Käytetään maa-asetusta käyttävän vertailun suorittamiseen</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Vertaa kohteita 1 ja A käyttäen kieliasetusta en-US ja selvitä, ovatko arvot yhtäläiset.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "Palauttaa nykyisen päivämäärän ja ajan paikallisella aikavyöhykkeellä. Tämä arvo on kiinteä, eikä se muutu peräkkäisten kutsujen myötä.",
        "Documentation.LongDescription": "Palauttaa <code>datetime</code>-arvon, joka on asetettu järjestelmän nykyiseksi päivämääräksi ja kellonajaksi. Tämä arvo on kiinteä, eikä se muutu peräkkäisten kutsujen myötä toisin kuin DateTime.LocalNow, joka saattaa palauttaa erilaisia arvoja lausekkeen suorituksen aikana.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "Palauttaa nykyisen päivämäärän ja ajan paikallisella aikavyöhykkeellä.",
        "Documentation.LongDescription": "Palauttaa <code>datetime</code>-arvon, joka on asetettu järjestelmän nykyiseksi päivämääräksi ja kellonajaksi.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "Palauttaa nykyisen päivämäärän ja ajan paikallisella aikavyöhykkeellä. Tämä arvo on kiinteä, eikä se muutu peräkkäisten kutsujen myötä.",
        "Documentation.LongDescription": "Palauttaa <code>datetime</code>-arvon, joka on asetettu järjestelmän nykyiseksi päivämääräksi ja kellonajaksi. Palautettu arvo sisältää paikallista aikavyöhykettä edustavia aikavyöhyketietoja. Tämä arvo on kiinteä, eikä se muutu peräkkäisten kutsujen myötä toisin kuin DateTimeZone.LocalNow, joka saattaa palauttaa erilaisia arvoja lausekkeen suorituksen aikana.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "Palauttaa nykyisen päivämäärän ja ajan UTC-ajassa (GMT-aikavyöhykkeellä). Tämä arvo on kiinteä, eikä se muutu peräkkäisten kutsujen myötä.",
        "Documentation.LongDescription": "Palauttaa nykyisen päivämäärän ja ajan UTC-ajassa (GMT-aikavyöhykkeellä). Tämä arvo on kiinteä, eikä se muutu peräkkäisten kutsujen myötä.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "Palauttaa nykyisen päivämäärän ja ajan paikallisella aikavyöhykkeellä.",
        "Documentation.LongDescription": "Palauttaa <code>datetimezone</code>-arvon, joka on asetettu järjestelmän nykyiseksi päivämääräksi ja kellonajaksi.\r\n    Palautettu arvo sisältää paikallista aikavyöhykettä edustavia aikavyöhyketietoja.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "Palauttaa nykyisen päivämäärän ja ajan UTC-ajassa (GMT-aikavyöhykkeellä).",
        "Documentation.LongDescription": "Palauttaa nykyisen päivämäärän ja ajan UTC-ajassa (GMT-aikavyöhykkeellä).",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Hae nykyinen päivämäärä ja aika UTC-muodossa.",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "Palauttaa läpinäkymättömän tunnisteen parhaillaan käynnissä olevalle arvioinnille.",
        "Documentation.LongDescription": "Palauttaa läpinäkymättömän tunnisteen parhaillaan käynnissä olevalle arvioinnille.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "Palauttaa läpinäkymättömän tunnuksen, joka korreloi saapuvat pyynnöt lähtevien pyyntöjen kanssa.",
        "Documentation.LongDescription": "Palauttaa läpinäkymättömän tunnuksen, joka korreloi saapuvat pyynnöt lähtevien pyyntöjen kanssa.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "Kirjoittaa jäljitysmerkinnän, jos jäljitys on käytössä, ja palauttaa arvon.",
        "Documentation.LongDescription": "Kirjoittaa jäljityksen <code>message</code>, jos jäljitys on käytössä, ja palauttaa kohteen <code>value</code>. Valinnainen parametri <code>delayed</code> määrittää, viivytetäänkö kohteen <code>value</code> arviointia, kunnes sanoma on jäljitetty. <code>traceLevel</code> voi saada jonkin seuraavista arvoista:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code> ja\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Jäljitä sanoma ennen funktion Text.From käynnistämistä ja palauta tulos.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "Nykyisen isännän oletusarvon mukainen käyttäjätietopalvelu.",
        "Documentation.LongDescription": "Nykyisen isännän oletusarvon mukainen käyttäjätietopalvelu.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "Kerää yhteenvetoarvon luettelon kohteista.",
        "Documentation.LongDescription": "Kerää yhteenvetoarvon luettelon <code>list</code> kohteista käyttäen kohdetta <code>accumulator</code>.\r\n    Valinnainen alkuarvoparametri <code>seed</code> voidaan asettaa.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Kerää yhteenvetoarvon luettelon {1, 2, 3, 4, 5} kohteista käyttäen kohdetta ((state, current) => state + current ).",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "Muodostaa luettelon datetimezone-arvoista, kun annetaan alkuarvo, määrä ja lisäävä keston arvo.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>datetimezone</code>-arvoista. Koko on <code>count</code> ja alkukohta <code>start</code>. Annettu lisäys <code>step</code> on <code>duration</code>-arvo, joka lisätään jokaiseen arvoon.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Luo kymmenestä arvosta luettelo, joka alkaa 5 minuuttia ennen uudenvuodenpäivää (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) ja käyttää yhden minuutin lisäystä (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "Muodostaa luettelon datetime-arvoista, kun annetaan alkuarvo, määrä ja lisäävä keston arvo.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>datetime</code>-arvoista. Koko on <code>count</code> ja alkukohta <code>start</code>. Annettu lisäys <code>step</code> on <code>duration</code>-arvo, joka lisätään jokaiseen arvoon.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Luo kymmenestä arvosta muodostuva luettelo, joka alkaa 5 minuuttia ennen uudenvuodenpäivää (#datetime(2011, 12, 31, 23, 55, 0)) ja käyttää yhden minuutin lisäystä (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "Muodostaa luettelon date-arvoista, kun annetaan alkuarvo, määrä ja lisäävä keston arvo.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>date</code>-arvoista. Koko on <code>count</code> ja alkukohta <code>start</code>. Annettu lisäys <code>step</code> on <code>duration</code>-arvo, joka lisätään jokaiseen arvoon.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Luo 5 arvosta muodostuva luettelo, joka alkaa uudenvuodenpäivästä (#date(2011, 12, 31, 23, 55, 0)) ja käyttää 1 päivän lisäystä (#duration(1, 0, 0, 0)).",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "Muodostaa luettelon duration-arvoista, kun annetaan alkuarvo, määrä ja lisäävä keston arvo.",
        "Documentation.LongDescription": "Palauttaa luettelon (<code>count</code>) <code>duration</code>-arvoista alkaen arvosta <code>start</code> ja lisättynä annetulla <code>duration</code>-arvolla <code>step</code>.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Luo 5 arvon luettelo alkaen yhdestä tunnista ja lisäten 1 tunnilla.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "Luo arvoluettelon.",
        "Documentation.LongDescription": "Luo arvoluettelon annettujen funktioiden avulla. Funktio <code>initial</code> luo aloitusehdotusarvon, joka testataan sitten arvoa <code>condition</code> vastaan.\r\n    Jos ehdotettu arvo hyväksytään, se palautetaan tuloksena olevaan luetteloon, ja seuraava ehdotettu arvo muodostetaan välittämällä äskettäin hyväksytty arvo kohteeseen <code>next</code>.\r\n    Kun ehdotettu arvo ei vastaa arvoa <code>condition</code>, luettelon luominen pysähtyy.\r\n    Valinnainen parametri <code>selector</code> voidaan antaa myös tuloksena olevan luettelon kohteiden muuntamista varten.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo aloittamalla kymmenestä ja heikentämällä sitä jatkuvasti yhdellä. Varmista, että kukin kohde on suurempi kuin nolla.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "Muodosta luettelo tietueista, jotka sisältävät kohteet x ja y (x on arvo ja y on luettelo). Kohteen x arvon tulee olla alle 10 ja edustaa luettelossa y olevien kohteiden määrää. Kun luettelo on muodostettu, palauta vain x-arvot.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "Lisää arvot luetteloon annettuun indeksiin.",
        "Documentation.LongDescription": "Palauttaa uuden luettelon, joka on tuloksena kohteen <code>values</code> arvojen lisäämisestä kohteen <code>list</code> kohtaan <code>index</code>. Luettelon ensimmäinen sijainti on indeksissä 0.\r\n      <ul>\r\n        <li><code>list</code>: kohdeluettelo, johon arvot lisätään.</li>\r\n        <li><code>index</code>: kohdeluettelon (<code>list</code>) indeksi, johon arvot lisätään. Luettelon ensimmäinen sijainti on indeksissä 0.</li>\r\n        <li><code>values</code>: luettelo arvoja, jotka lisätään kohteeseen <code>list</code>.</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Lisää luettelon ({3, 4}) kohdeluetteloon ({1, 2, 5}) indeksissä 2.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "Lisää luettelon, jolla on sisäkkäinen luettelo ({1, {1.1, 1.2}}), kohdeluetteloon ({2, 3, 4}) indeksissä 0.",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "Korvaa määritetyn määrän arvoja korvaavilla arvoilla sijainnista alkaen.",
        "Documentation.LongDescription": "Korvaa <code>count</code> arvoa kohteessa <code>list</code> luettelon <code>replaceWith</code> arvoilla alkaen määritetystä sijainnista <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Korvaa {7, 8, 9} luettelossa {1, 2, 7, 8, 9, 5} arvoilla {3, 4}.",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "Hakee luettelosta määritettyä arvoa ja korvaa sen.",
        "Documentation.LongDescription": "Hakee arvoluettelosta <code>list</code> arvoa <code>oldValue</code> ja korvaa kunkin esiintymän korvaavalla arvolla <code>newValue</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Korvaa kaikki \"a\"-arvot luettelossa {\"a\", \"B\", \"a\", \"a\"} \"A\"-arvolla.",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "Muodostaa luettelon time-arvoista, kun annetaan alkuarvo, määrä ja lisäävä keston arvo.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>time</code>-arvoista. Koko on <code>count</code> ja alkukohta <code>start</code>. Annettu lisäys <code>step</code> on <code>duration</code>-arvo, joka lisätään jokaiseen arvoon.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Luo neljästä arvosta muodostuva luettelo, joka alkaa keskipäivästä (#time(12, 0, 0)) ja käyttää yhden tunnin lisäystä (#duration(0, 1, 0, 0)).",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "Palauttaa luettelon, jonka elementit muunnetaan syöteluettelosta käyttäen määritettyjä funktioita.",
        "Documentation.LongDescription": "Palauttaa luettelon, jonka elementit on projisoitu syöteluettelosta.<br>\r\n    <br>\r\n    <code>collectionTransform</code> -funktio muuntaa kunkin elementin väliluetteloksi, ja <code>resultTransform</code> -funktio vastaanottaa alkuperäisen elementin ja kohteen väliluettelosta lopullisen tuloksen muodostamiseksi.<br>\r\n    <br>\r\n    <code>collectionTransform</code> -funktiolla on allekirjoitus <code>(x) muodossa luettelo =>... </code>, jossa <code>x</code> on elementti kohteessa <code>list</code>.\r\n    <code>resultTransform</code> -funktio projisoi tuloksen muodon, ja sillä on allekirjoitus <code>(x minä tahansa, y minä tahansa) kuin minä tahansa =>... </code>, jossa <code>x</code> on elementti kohteessa <code>list</code> ja <code>y</code> on elementti luettelossa, joka luodaan välittämällä <code>x</code> kohteeseen <code>collectionTransform</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Litistä ihmisten ja heidän lemmikkiensä luettelo.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "Palauttaa satunnaisluvun.",
        "Documentation.LongDescription": "Palauttaa satunnaisluvun välillä 0 ja 1.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Hae satunnaisluku.",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "Lisää kentän tietueeseen.",
        "Documentation.LongDescription": "Lisää kentän tietueeseen <code>record</code>, kun määritetään kentän <code>fieldName</code> nimi ja arvo <code>value</code>.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Lisää Address-kentän tietueeseen.",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "Korvaa tekstin annetun syötteen sisällä.",
        "Documentation.LongDescription": "Korvaa tekstin <code>old</code> alkuperäisessä kohteessa <code>text</code> tekstillä <code>new</code>. Tätä korvaustoimintoa voi käyttää kohteissa <code>List.ReplaceValue</code> ja <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Korvaa teksti \"hE\" tekstillä \"He\" merkkijonossa \"hEllo world\".",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "Korvaa arvot annetun syötteen sisällä.",
        "Documentation.LongDescription": "Korvaa arvon <code>old</code> alkuperäisessä kohteessa <code>value</code> arvolla <code>new</code>. Tätä korvaustoimintoa voi käyttää kohteissa <code>List.ReplaceValue</code> ja <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Korvaa arvo 11 arvolla 10.",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Palauttaa JSON-tuloksen Smartsheet-ohjelmointirajapinnasta",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "Tekee kutsun Smartsheet 2.0 REST -ohjelmointirajapinnalle määritetyssä päätepisteessä ja palauttaa tulokset JSON-tietueena.",
        "Documentation.Examples": [
          {
            "Description": "Noutaa tiedot taulukoiden Smartsheet-ohjelmointirajapinnan päätepisteestä käyttäen määritettyjä lisäargumentteja",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "Smartsheet-ohjelmointirajapinnan palauttama taulukkotietojen taulukko"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.TestContents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "Palauttaa funktion, jota ei jaeta osiin. Palauttaa argumenttinsa yksittäisenä elementtiluettelona.",
        "Documentation.LongDescription": "Palauttaa funktion, jota ei jaeta osiin. Palauttaa argumenttinsa yksittäisenä elementtiluettelona.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi välilyönnin kohdalla.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi välilyönnin kohdalla.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte välilyönnillä ja käsittele lainausmerkkejä muiden merkkien tavoin.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "Osioi taulukon taulukkoluetteloksi ryhmien määrän ja määritetyn sarakkeen perusteella.",
        "Documentation.LongDescription": "Osioi kohteen <code>table</code> luetteloksi <code>groups</code> taulukkoa kohteen <code>column</code> ja funktion <code>hash</code> arvon perusteella.\r\n    Funktiota <code>hash</code> käytetään rivin <code>column</code> arvolle, jotta saadaan rivin hajautusarvo. Hajautusarvon modulo <code>groups</code> määrittää, mihin palautetuista taulukoista rivi sijoitetaan.\r\n    <ul>\r\n       <li><code>table</code>: osioitava taulukko.</li>\r\n       <li><code>column</code>: sarake, josta määritetään hajautusarvo sen selvittämiseksi, missä palautetussa taulukossa rivi sijaitsee.</li>\r\n       <li><code>groups</code>: niiden taulukoiden määrä, joihin syötetaulukko osioidaan.</li>\r\n       <li><code>hash</code>: hajautusarvon saamiseksi käytettävä funktio.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Osioi taulukko <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> kahdeksi taulukoksi sarakkeessa [a] käyttäen sarakkeiden arvoa hajautusfunktiona.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "Palauttaa kohteen <code>text</code> osan määritettyjen kohteiden <code>startDelimiter</code> ja <code>endDelimiter</code> välillä.\r\n    Valinnainen luku <code>startIndex</code> ilmaisee, mitä kohteen <code>startDelimiter</code> esiintymää tulee käsitellä.\r\n    Valinnainen luettelo <code>startIndex</code> ilmaisee, mitä kohteen <code>startDelimiter</code> esiintymää tulee käsitellä, sekä pitääkö indeksointi tehdä syötteen alusta vai lopusta.\r\n    <code>endIndex</code> on samanlainen lukuun ottamatta sitä, että indeksointi tehdään suhteellisena kohteeseen <code>startIndex</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hae kohteen 111 (222) 333 (444) osa (ensimmäisen) avaavan sulkumerkin ja sen jälkeen olevan (ensimmäisen) sulkevan sulkumerkin välillä.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "Hae kohteen 111 (222) 333 (444) osa toisen avaavan sulkumerkin ja sen jälkeen olevan ensimmäisen sulkevan sulkumerkin välillä.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "Hae kohteen 111 (222) 333 (444) osa toisen avaavan sulkumerkin lopusta ja sen jälkeen olevan toisen sulkevan sulkumerkin välillä.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "Lisää yhden tekstiarvon toiseen annetussa sijainnissa.",
        "Documentation.LongDescription": "Palauttaa tekstiarvon <code>newText</code> tekstiarvoon <code>text</code> sijainnissa <code>offset</code> lisäämisen tuloksen. Sijainnit alkavat luvusta 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Lisää merkki \"C\" merkkien \"B\" ja \"D\" väliin merkkijonossa \"ABD\".",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "Palauttaa uuden, satunnaisen GUID-tunnuksen.",
        "Documentation.LongDescription": "Palauttaa uuden, satunnaisen GUID-tunnuksen.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "Korvaa annetun alimerkkijonon kaikki esiintymät tekstissä.",
        "Documentation.LongDescription": "Palauttaa tuloksen, joka on tekstiarvon <code>old</code> kaikkien esiintymien korvaamisesta tekstiarvolla <code>new</code> tekstiarvossa <code>text</code>. Tässä funktiossa kirjainkoko on merkitsevä.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Korvaa jokainen virkkeen tekstin \"the\" esiintymä tekstillä \"a\".",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "Poistaa tekstialueen ja lisää uuden arvon määritettyyn sijaintiin.",
        "Documentation.LongDescription": "Palauttaa tuloksen, joka seuraa <code>count</code> merkin poistamisesta tekstiarvosta <code>text</code> alkaen sijainnista <code>offset</code> ja tekstiarvon <code>newText</code> lisäämisen samaan sijaintiin kohteessa <code>text</code>.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Korvaa yksittäinen merkki sijainnissa 2 tekstiarvossa \"ABGF\" uudella tekstiarvolla \"CDE\".",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "Lisää avaimen annettuun taulukkotyyppiin.",
        "Documentation.LongDescription": "Lisää avaimen annettuun taulukkotyyppiin.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "Palauttaa luettelon käyttäjätiedoista, jotka ehto hyväksyy.",
        "Documentation.LongDescription": "<p>Käyttäen määritettyä kohdetta <code>identityProvider</code> muuntaa kohteen <code>condition</code> luetteloksi käyttäjätietoja, joille <code>condition</code> palauttaisi arvon <code>true</code> kaikissa valtuutuskonteksteissa, joissa <code>identityProvider</code> on käyttäjätietopalvelu. Virhe käynnistetään, jos kohdetta <code>condition</code> ei voi muuntaa käyttäjätietojen luetteloksi. Esimerkki tästä on tilanne, jossa <code>condition</code> hakee muista määritteistä kuin käyttäjän ja ryhmän käyttäjätiedoista tietoja päätöksen tekemistä varten.</p>\r\n    <p>Huomaa, että käyttäjätietojen luettelo edustaa käyttäjätietoja sellaisina kuin ne näkyvät kohteessa <code>condition</code>, eikä normalisointia (kuten ryhmän laajennusta) suoriteta niille.</p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "Pakkaa binaariarvon käyttäen annettua pakkaustyyppiä.",
        "Documentation.LongDescription": "Pakkaa binaariarvon käyttäen annettua pakkaustyyppiä. Tämän kutsun tulos on syötteen pakattu kopio. Pakkaustyyppejä ovat esimerkiksi seuraavat:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Pakkaa binaariarvon.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "Purkaa binaariarvon pakkauksen käyttämällä annettua pakkaustyyppiä.",
        "Documentation.LongDescription": "Purkaa binaariarvon pakkauksen käyttämällä annettua pakkaustyyppiä. Tämän kutsun tulos on syötteen purettu kopio. Pakkaustyyppejä ovat seuraavat:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Pura binaariarvon pakkaus.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "Palauttaa binaariarvon alijoukon siirtymästä alkaen.",
        "Documentation.LongDescription": "Palauttaa binaariarvon alijoukon siirtymästä <code>binary</code> alkaen. Valinnainen parametri <code>offset</code> asettaa alijoukon enimmäispituuden.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa binaariarvon alijoukon siirtymästä 6 alkaen.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "Palauttaa pituuden 2 alijoukon binaariarvon siirtymästä 6.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "Jakaa määritetyn binaarin binaariluetteloksi käyttäen määritettyä sivukokoa.",
        "Documentation.LongDescription": "Jakaa <code>binary</code>:n binaariluetteloksi, jossa tulosteluettelon ensimmäinen elementti on binaarinen, joka sisältää ensimmäiset <code>pageSize</code> tavua kohteesta \r\n    lähdebinaarista. Tulosteluettelon seuraava elementti on binaari, joka sisältää seuraavat <code>pageSize</code> tavua lähdebinaarista, ja niin edelleen.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "Luo tai laajentaa binary-kohdetta käyttäen käyttäjän määrittämiä käsittelytoimintoja kysely- ja toimitoiminnoille.",
        "Documentation.LongDescription": "<p> Palauttaa <code>binary</code> näkymän, jossa <code>handlers</code> määritettyjä funktioita käytetään toiminnon oletustoiminnan sijasta, kun toimintoa käytetään näkymään.</p>\r\n<p>Jos <code>binary</code> annetaan, kaikki käsittelijäfunktiot ovat valinnaisia. Jos <code>binary</code> ei anneta, tarvitaan <code>GetStream</code> -käsittelijäfunktio. Jos käsittelijäfunktiota ei ole määritetty toiminnolle, toiminnon oletustoimintaa käytetään sen sijaan <code>binary</code> (paitsi jos kyseessä on <code>GetExpression</code>).</p>\r\n<p>Handler-funktioiden on palautettava arvo, joka vastaa semanttisesti toiminnon <code>binary</code> (tai tuloksena olevaa näkymää, jos kyseessä on <code>GetExpression</code>).</p>\r\n<p>Jos käsittelijäfunktio aiheuttaa virheen, toiminnon oletustoimintaa käytetään view.</p>\r\n<p><code>Binary.View</code> voidaan käyttää taittamiseen tietolähteeseen – M-kyselyiden muuntamiseksi lähdekohtaisiksi toiminnoiksi (esimerkiksi tiedoston osan lataamiseksi).</p>\r\n<p>Näytä julkaistut Power Query mukautetun liittimen ohjeet, jotta saat kattavamman kuvauksen <code>Binary.View</code>.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Luo perusnäkymä, joka ei edellytä datan käyttämistä pituuden määrittämiseksi.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "Palauttaa binaarimuodon, jonka tavujärjestyksen määrittää funktio.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, jonka tavujärjestyksen määrittää <code>binaryFormat</code>.  Oletustavujärjestys on <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "Palauttaa binaarimuodon, joka valitsee seuraavan binaarimuodon jo luetun arvon perusteella.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, joka valitsee seuraavan binaarimuodon jo luetun arvon perusteella.  Tämän funktion tarjoama binaarimuotoarvo toimii vaiheittain:<ul>\r\n<li>Parametrin <code>binaryFormat</code> määrittämää binaarimuotoa käytetään arvon lukemiseen.</li>\r\n<li>Arvo välitetään parametrin <code>chooseFunction</code> määrittämällä choice-funktiolle.</li>\r\n<li>Choice-funktio tutkii arvon ja palauttaa toisen binaarimuodon.</li>\r\n<li>Toista binaarimuotoa käytetään toisen arvon lukemiseen.</li>\r\n<li>Jos combine-funktio määritetään, ensimmäinen ja toinen arvo välitetään combine-funktiolle, ja tulokseksi saatava arvo palautetaan.</li>\r\n<li>Jos combine-funktiota ei määritetä, toinen arvo palautetaan.</li>\r\n<li>Toinen arvo palautetaan.</li>\r\n</ul>Valinnainen parametri <code>type</code> ilmaisee choice-funktion palauttaman binaarimuodon tyypin.  Joko <code>type any</code>, <code>type list</code> tai <code>type binary</code> voidaan määrittää.  Jos parametria <code>type</code> ei määritetä, käytetään kohdetta <code>type any</code>.   Jos käytetään kohdetta <code>type list</code> tai <code>type binary</code>, järjestelmä saattaa pystyä palauttamaan virtautetun <code>binary</code>- tai <code>list</code>-arvon puskuroidun sijaan. Tämä saattaa pienentää muodon lukemiseen tarvittavan muistin määrää.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "Lue tavuluettelo, jossa ensimmäinen tavu määrittää elementtien määrän.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "Lue tavuluettelo, jossa ensimmäinen tavu määrittää elementtien määrän, ja säilytä ensimmäinen luettu tavu.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "Lue tavuluettelo, jossa ensimmäinen tavu määrittää elementtien määrän käyttämällä virtautusluetteloa.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "Palauttaa binaarimuodon, joka lukee kohteiden ryhmän.",
        "Documentation.LongDescription": "Parametrit ovat seuraavat:\r\n<ul>\r\n<li>Parametri <code>binaryFormat</code> määrittää avaimen arvon binaarimuodon.</li>\r\n<li>Parametri <code>group</code> antaa tietoja ryhmästä tunnettuja kohteita.</li>\r\n<li>Valinnaista parametria <code>extra</code> voidaan käyttää määrittämään funktio, joka palauttaa binaarimuotoarvon odottamattomia avaimia seuraaville arvoille. Jos parametria <code>extra</code> ei määritetä, ilmenee virhe, jos odottamattomia avainten arvoja on olemassa.</li>\r\n</ul>\r\nParametri <code>group</code> määrittää kohdemääritysten luettelon. Kukin kohdemääritys on luettelo, joka sisältää 3–5 arvoa seuraavasti:\r\n<ul>\r\n<li>Avaimen arvo. Kohdetta vastaavan avaimen arvo. Tämän on oltava yksilöivä kohteiden joukon sisällä.</li>\r\n<li>Kohteen muoto. Kohteen arvoa vastaava binaarimuoto. Tämä mahdollistaa sen, että kullakin kohteella voi olla eri muoto. </li>\r\n<li>Kohteen esiintyminen. <code>BinaryOccurrence.Type</code>-arvo sille, montako kertaa kohteen odotetaan esiintyvän ryhmässä. Vaaditut kohteet, joita ei ole, aiheuttavat virheen. Vaaditut tai valinnaiset kohteiden kaksoiskappaleita käsitellään samoin kuin odottamattomia avainten arvoja.</li>\r\n<li>Oletuskohdearvo (valinnainen). Jos oletuskohdearvo on kohdemääritysluettelossa, eikä se ole tyhjäarvo, sitä käytetään oletusarvon sijaan. Toistuvien tai valinnaisten kohteiden oletusarvo on tyhjäarvo, ja toistuvien arvojen oletusarvo on tyhjä luettelo { }.</li>\r\n<li>Kohteen arvon muunnos (valinnainen). Jos kohteen arvon muunnosfunktio on kohdemääritysluettelossa, eikä se ole tyhjäarvo, sitä kutsutaan muuntamaan kohteen arvo, ennen kuin se palautetaan. Muunnosfunktiota kutsutaan vain, jos kohde näkyy syötteessä (sitä ei koskaan kutsuta käyttäen oletusarvoa). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "Seuraavassa oletetaan avaimen arvo, joka on yksittäinen tavu, ja ryhmässä neljä odotettua kohdetta, joista kaikilla on tavu tietoja avaimen jälkeen.  Kohteet näkyvät syötteessä seuraavasti:\r\n<ul>\r\n<li>Avain 1 vaaditaan, ja se on olemassa käyttäen arvoa 11.</li>\r\n<li>Avain 2 toistetaan ja on olemassa kahdesti käyttäen arvoa 22. Tämän tuloksena on arvo { 22, 22 }.</li>\r\n<li>Avain 3 on valinnainen ja olemassa. Tämän tuloksena oleva arvo on tyhjäarvo.</li>\r\n<li>Avain 4 toistetaan, mutta se on olemassa. Tämän tuloksena oleva arvo on { }.</li>\r\n<li>Avain 5 ei ole osa ryhmää, mutta se on olemassa kerran käyttäen arvoa 55.  Lisäfunktiota kutsutaan käyttäen avaimen arvoa 5, ja se palauttaa kyseistä arvoa vastaavan muodon (BinaryFormat.Byte).  Arvo 55 luetaan ja hylätään.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "Seuraava esimerkki havainnollistaa kohteen arvon muunnoksen ja oletuskohdearvon.   Toistuva kohde, jolla on avain 1, laskee luettujen arvojen summan käyttäen kohdetta List.Sum.  Valinnaisella kohteella, jolla on arvo 2, on oletusarvo 123 tyhjäarvon sijaan.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "Palauttaa binaarimuodon, joka rajoittaa luettavissa olevien tietojen määrää.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, joka rajoittaa luettavissa olevien tietojen määrää.  Molempia kohteista <code>BinaryFormat.List</code> ja <code>BinaryFormat.Binary</code> voi käyttää tekemään lukeminen tietojen loppuun saakka.  Kohdetta <code>BinaryFormat.Length</code> voi käyttää rajoittamaan luettavien tavujen määrää.  Parametri <code>binaryFormat</code> määrittää rajoitettavan binaarimuodon.  Parametri <code>length</code> määrittää luettavien tavujen määrän.  Parametri <code>length</code> voi olla lukuarvo tai binaariarvo, joka määrittää olemassa olevan ja luettavaa arvoa ennen olevan pituusarvon muodon.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "Rajoita luettavien tavujen määräksi 2, kun luetaan tavuluetteloa.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Rajoita luettavien tavujen määrä tavuluetteloa luettaessa luetteloa edeltävään tavuarvoon.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "Palauttaa binaarimuodon, joka muuntaa toisen binaarimuodon lukemat arvot.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, joka muuntaa toisen binaarimuodon lukemat arvot.  Parametri <code>binaryFormat</code> määrittää binaarimuodon, jota käytetään arvon lukemiseen.  <code>function</code> käynnistetään käyttäen luettua arvoa, ja se palauttaa muunnetun arvon.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "Lue tavu ja lisää siihen yksi.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "Palauttaa vertailufunktion, joka käyttää arvojen vertaamiseen järjestyslukusääntöjä.",
        "Documentation.LongDescription": "Palauttaa vertailufunktion, joka käyttää järjestyslukusääntöjä annettuja arvoja <code>x</code> ja <code>y</code>.<br>\r\n      <br>\r\n      Vertailufunktio hyväksyy kaksi argumenttia ja palauttaa arvon -1, 0 tai 1 sen mukaan, onko ensimmäinen arvo pienempi, yhtä suuri tai suurempi kuin toinen.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Vertaa järjestyslukusääntöjen avulla, ovatko \"encyclopædia\" ja \"encyclopaedia\" samat. Huomaa, että nämä vastaavat <code>Comparer.FromCulture(\"en-US\")</code>. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "Palauttaa vertailufunktion, jonka kirjainkoko ei ole merkitsevä ja joka käyttää arvojen vertaamiseen järjestyslukusääntöjä.",
        "Documentation.LongDescription": "Palauttaa kirjainkokoa merkitsemättömän vertailufunktion, joka käyttää järjestyslukusääntöjä annettuja arvoja <code>x</code> ja <code>y</code>.<br>\r\n        <br>\r\n        Vertailufunktio hyväksyy kaksi argumenttia ja palauttaa arvon -1, 0 tai 1 sen mukaan, onko ensimmäinen arvo pienempi, yhtä suuri tai suurempi kuin toinen.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Vertaa käyttämällä järjestyslukusääntöjä, joissa kirjainkoko ei ole merkitsevä, kohdetta \"Abc\" ja \"abc\". Huomaa, että \"Abc\" on pienempi kuin \"abc\" käytettäessä kohdetta <code>Comparer.Ordinal</code>. ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "Palauttaa dimensiomääritteen ominaisuuden.",
        "Documentation.LongDescription": "Palauttaa dimensioattribuutin <code>attribute</code> ominaisuuden <code>propertyName</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "Palauttaa mittayksikön ominaisuuden (solun ominaisuuden).",
        "Documentation.LongDescription": "Palauttaa mittayksikön <code>measure</code> ominaisuuden <code>propertyName</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL -kyselylähde",
        "Documentation.LongDescription": "Databricks-tietolähteen määrittäminen SQL-kyselyiden suorittamista varten"
      },
      "ReturnType": "Databricks SQL -kysely",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "Databricks SQL -kyselylähde",
        "Documentation.LongDescription": "Databricks-tietolähteen määrittäminen SQL-kyselyiden suorittamista varten"
      },
      "ReturnType": "Databricks SQL -kysely",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "Lisää määritetyt päivät päivämäärään.",
        "Documentation.LongDescription": "Palauttaa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-tuloksen siitä, kun <code>numberOfDays</code> päivää lisätään <code>datetime</code>-arvoon <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo, johon päivät lisätään.</li>\r\n      <li><code>numberOfDays</code>: lisättävien päivien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lisää viisi päivää <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvoon, joka ilmaisee päivämäärää 14.5.2011.",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "Lisää määritetyt kuukaudet päivämäärään.",
        "Documentation.LongDescription": "Palauttaa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-tuloksen siitä, kun <code>numberOfMonths</code> kuukautta lisätään <code>datetime</code>-arvoon <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo, johon kuukaudet lisätään.</li>\r\n        <li><code>numberOfMonths</code>: lisättävien kuukausien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lisää viisi kuukautta <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvoon, joka ilmaisee päivämäärää 14.5.2011.",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "Lisää 18 kuukautta <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvoon, joka ilmaisee päivämäärää ja aikaa 14.5.2011 8.15.22.",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "Lisää määritetyt vuosineljännekset päivämäärään.",
        "Documentation.LongDescription": "Palauttaa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-tuloksen siitä, kun <code>numberOfQuarters</code> vuosineljännestä lisätään <code>datetime</code>-arvoon <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo, johon vuosineljännekset lisätään.</li>\r\n      <li><code>numberOfQuarters</code>: lisättävien vuosineljännesten määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lisää yksi vuosineljännes <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvoon, joka ilmaisee päivämäärää 14.5.2011.",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "Lisää määritetyt viikot päivämäärään.",
        "Documentation.LongDescription": "Palauttaa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-tuloksen siitä, kun <code>numberOfWeeks</code> viikkoa lisätään <code>datetime</code>-arvoon <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo, johon viikot lisätään.</li>\r\n      <li><code>numberOfWeeks</code>: lisättävien viikkojen määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lisää kaksi viikkoa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvoon, joka ilmaisee päivämäärää 14.5.2011.",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "Lisää määritetyt vuodet päivämäärään.",
        "Documentation.LongDescription": "Palauttaa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-tuloksen siitä, kun <code>numberOfYears</code> lisätään <code>datetime</code>-arvoon <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo, johon vuodet lisätään.</li>\r\n        <li><code>numberOfYears</code>: lisättävien vuosien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Lisää neljä vuotta <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvoon, joka ilmaisee päivämäärää 14.5.2011.",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "Lisää 10 vuotta <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvoon, joka ilmaisee päivämäärää ja aikaa 14.5.2011 8.15.22.",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan päivien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan päivien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>days</code>: päivien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko päivä nykyisen järjestelmän ajan jälkeen seuraavien kahden päivän aikana.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan kuukausien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan kuukausien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>months</code>: kuukausien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko kuukausi nykyisen järjestelmän ajan jälkeen seuraavien kahden kuukauden aikana.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan vuosineljännesten määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan vuosineljänneksien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>quarters</code>: vuosineljänneksien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko vuosineljännes nykyisen järjestelmän ajan jälkeen seuraavien kahden vuosineljänneksen aikana.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan viikkojen määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan viikon aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan viikkojen määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan viikon aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>weeks</code>: viikkojen määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko viikko nykyisen järjestelmän ajan jälkeen seuraavien kahden viikon aikana.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan vuosien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan vuosien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>years</code>: vuosien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko vuosi nykyisen järjestelmän ajan jälkeen seuraavien kahden vuoden aikana.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen päivien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen päivien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>days</code>: päivien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko päivä ennen nykyistä järjestelmän aikaa edellisten kahden päivän aikana.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen kuukausien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen kuukausien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>months</code>: kuukausien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko kuukausi ennen nykyistä järjestelmän aikaa edellisten kahden kuukauden aikana.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen vuosineljännesten määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen vuosineljännesien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>quarters</code>: vuosineljänneksien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko vuosineljännes ennen nykyistä järjestelmän aikaa edellisten kahden vuosineljänneksen aikana.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen viikkojen määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan viikon aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen viikkojen määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan viikon aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>weeks</code>: viikkojen määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko viikko ennen nykyistä järjestelmän aikaa edellisten kahden viikon aikana.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen vuosien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen vuosien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>years</code>: vuosien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko vuosi ennen nykyistä järjestelmän aikaa edellisten kahden vuoden aikana.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "Lisää aikavyöhyketiedot datetime-arvoon.",
        "Documentation.LongDescription": "Lisää aikavyöhyketiedot <code>dateTime</code>-arvoon. Aikavyöhyketietoihin kuuluu <code>timezoneHours</code> sekä valinnaisesti <code>timezoneMinutes</code>, joka määrittää halutun siirtymän UTC-ajasta.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Aseta aikavyöhykkeeksi UTC+7:30 (7 tuntia ja 30 minuuttia UTC-ajan jälkeen).",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo seuraavan tuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan tuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>hours</code>: tuntien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko tunti nykyisen järjestelmän ajan jälkeen seuraavien kahden tunnin aikana.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo seuraavan minuuttien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan minuuttien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>minutes</code>: minuuttien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko minuutti nykyisen järjestelmän ajan jälkeen seuraavien kahden minuutin aikana.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo seuraavan sekuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan sekuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>seconds</code>: sekuntien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko sekunti nykyisen järjestelmän ajan jälkeen seuraavien sekunnin viikon aikana.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo edellisen tuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen tuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>hours</code>: tuntien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko tunti ennen nykyistä järjestelmän aikaa edellisten kahden tunnin aikana.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo edellisen minuuttien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen minuuttien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>minutes</code>: minuuttien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko minuutti ennen nykyistä järjestelmän aikaa edellisten kahden minuutin aikana.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo edellisen sekuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen sekuntien määrän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      <li><code>seconds</code>: sekuntien määrä.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko sekunti ennen nykyistä järjestelmän aikaa edellisten kahden sekunnin aikana.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "Muuttaa arvon aikavyöhykettä.",
        "Documentation.LongDescription": "Muuttaa datetimezone-arvon <code>dateTimeZone</code> aikavyöhyketiedot uusiksi aikavyöhyketiedoiksi, jotka ovat antaneet <code>timezoneHours</code> ja valinnaisesti <code>timezoneMinutes</code>.\r\n    Jos kohteella <code>dateTimeZone</code> ei ole aikavyöhykeosaa, ilmenee poikkeus.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muuta kohteen #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) aikavyöhyketiedot kahdeksaksi tunniksi.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "Muuta kohteen #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) aikavyöhyketiedot arvoon -30 minuuttia.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "Käyttää arvoa nimen avulla upotetussa koosteessa.",
        "Documentation.LongDescription": "Käyttää arvoa nimen avulla upotetussa koosteessa.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "Luo tietyn parametriallekirjoituksen sisältävän funktion yksittäisen luetteloargumentin ottavan funktion päälle",
        "Documentation.LongDescription": "Ottaa yksiarvoisen funktion <code>function</code> ja luo uuden funktion, jonka tyyppi on <code>functionType</code> ja joka muodostaa luettelon argumenteistaan ja välittää sen kohteeseen <code>function</code>.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Muuntaa List.Sum-kohteen kaksiargumenttiseksi funktioksi, jonka argumentit lisätään yhteen",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "Muuntaa luettelon ottavan funktion kaksiargumenttiseksi funktioksi",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "Käynnistää annetun funktion",
        "Documentation.LongDescription": "Käynnistää annetun funktion käyttäen määritettyä argumenttiluetteloa ja palauttaa tuloksen.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Käynnistää funktion Record.FieldNames käyttäen yhtä argumenttia [A=1,B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "Käynnistää määritetyn funktion, kun määritetty kesto on kulunut.",
        "Documentation.LongDescription": "Palauttaa tulokset kohteen <code>function</code> käynnistämisestä, kun kesto <code>delay</code> on kulunut.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "Luo skalaarifunktion vektorifunktion päälle tehden useista kutsuista erän.",
        "Documentation.LongDescription": "<p>Palauttaa tyypin <code>scalarFunctionType</code> skalaarifunktion, joka kutsuu kohdetta <code>vectorFunction</code> käyttäen yksittäistä riviä argumentteja ja palauttaa sen yksittäisen tulosteen. Lisäksi, kun skalaarifunktiota käytetään toistuvasti jokaiselle riville syötetaulukossa, kuten Table.AddColumn, sen sijaan kohdetta <code>vectorFunction</code> käytetään kerran kaikille syötteille. </p>\r\n<p>Kohteelle <code>vectorFunction</code> välitetään taulukko, jonka sarakkeet vastaavat kohteen <code>scalarFunctionType</code> parametrien nimeä ja sijaintia. Tämän taulukon kukin rivi sisältää skalaarifunktion yhden kutsun argumentit niin, että sarakkeet vastaavat kohteen <code>scalarFunctionType</code> parametreja. </p>\r\n<p>Kohteen <code>vectorFunction</code> on palautettava luettelo, joka on saman pituinen kuin syötetaulukko, jonka kohteen kussakin sijainnissa on oltava sama tulos kuin skalaarifunktion arvioimisella samassa sijainnissa olevalla syöterivillä. </p>\r\n<p>Syötetaulukon odotetaan virtauttettavan sisään, joten kohteen <code>vectorFunction</code> odotetaan virtauttavan tulosteensa syötteen tullessa sisään käsitellen yhtä syötelohkoa kerrallaan. Tarkemmin sanottuna kohde <code>vectorFunction</code> ei saa luetteloida syötetaulukkoaan useammin kuin kerran.</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "Luo tietueen, joka edustaa maantieteellistä pistettä osista.",
        "Documentation.LongDescription": "Luo tietueen, joka edustaa maantieteellistä pistettä sen osista, joita ovat esimerkiksi pituusaste, leveysaste ja, jos ne ovat olemassa, korkeus (Z) ja mittayksikkö (M). Valinnainen koordinaattijärjestelmän viitetunnus (SRID) voidaan antaa, jos se poikkeaa oletusarvosta (4326).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "Luo tietueen, joka edustaa geometristä pistettä osista.",
        "Documentation.LongDescription": "Luo tietueen, joka edustaa maantieteellistä pistettä sen osista, joita ovat esimerkiksi X-koordinaatti, Y-koordinaatti ja, jos ne ovat olemassa, Z-koordinaatti ja mittayksikkö (M). Valinnainen koordinaattijärjestelmän viitetunnus (SRID) voidaan antaa, jos se poikkeaa oletusarvosta (0).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "Luo käyttäjätiedon.",
        "Documentation.LongDescription": "Luo käyttäjätiedon.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "Määrittää, onko käyttäjätieto käyttäjätietokokoelman jäsen.",
        "Documentation.LongDescription": "Määrittää, onko käyttäjätieto käyttäjätietokokoelman jäsen.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "Palauttaa luettelon, joka muodostuu kaikista luettelon parittomista siirtymäelementeistä.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka muodostuu kaikista luettelon parittomista siirtymäelementeistä. Vaihtelee luettelon <code>list</code> arvojen ottamisen ja ohittamisen välillä parametrien mukaan.\r\n    <ul>\r\n    <li><code>count</code>: määrittää kunakin kertana ohitettavien arvojen määrän.</li>\r\n    <li><code>repeatInterval</code>: valinnainen toistoväli, joka ilmaisee, montako arvoa lisätään ohitettujen arvojen väliin.</li>\r\n    <li><code>offset</code>: valinnainen siirtymäparametri arvojen ohittamisen alkamiseksi alkusiirtymässä.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Luo ensimmäisen luvun ohittava luettelo kohteesta {1..10}.",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "Luo joka toisen luvun ohittava luettelo kohteesta {1..10}.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "Luo luvusta 1 ja joka toisen luvun ohittava luettelo kohteesta {1..10}.",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "Luo kohteesta {1..10} luettelo, joka alkaa luvusta 1, ohittaa yhden arvon, säilyttää kaksi arvoa ja niin edelleen.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "Ilmaisee, sisältääkö luettelo arvon.",
        "Documentation.LongDescription": "Ilmaisee, sisältääkö luettelo <code>list</code> arvon <code>value</code>.\r\n    Palauttaa arvon true, jos arvo löytyy luettelosta, ja muutoin arvon false. Valinnainen laskutoimituksen ehtoarvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, sisältääkö luettelo {1, 2, 3, 4, 5} luvun 3.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, sisältääkö luettelo {1, 2, 3, 4, 5} luvun 6.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "Ilmaisee, missä luettelo sisältää kaikki toisen luettelon arvot.",
        "Documentation.LongDescription": "Ilmaisee, sisältääkö luettelo <code>list</code> kaikki toisen luettelon <code>values</code> arvot.\r\n    Palauttaa arvon true, jos arvo löytyy luettelosta, ja muutoin arvon false. Valinnainen laskutoimituksen ehtoarvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, sisältääkö luettelo {1, 2, 3, 4, 5} luvut 3 ja 4.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "Selvitä, sisältääkö luettelo {1, 2, 3, 4, 5} luvut 5 ja 6.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "Ilmaisee, missä luettelo sisältää minkä tahansa toisen luettelon arvoista.",
        "Documentation.LongDescription": "Ilmaisee, sisältääkö luettelo <code>list</code> mitään toisen luettelon <code>values</code> arvoista.\r\n        Palauttaa arvon true, jos arvo löytyy luettelosta, ja muutoin arvon false. Valinnainen laskutoimituksen ehtoarvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, sisältääkö luettelo {1, 2, 3, 4, 5} luvun 3 tai 9.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "Selvitä, sisältääkö luettelo {1, 2, 3, 4, 5} luvun 6 tai 7.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "Palauttaa kahden lukuluettelon välisen kovarianssin.",
        "Documentation.LongDescription": "Palauttaa kahden luettelon (<code>numberList1</code> ja <code>numberList2</code>) välisen kovarianssin. Luetteloiden <code>numberList1</code> ja <code>numberList2</code> on sisällettävä sama määrä <code>number</code>-arvoja.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Laske kahden luettelon välinen kovarianssi.",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "Palauttaa kahden annetun luettelon eron.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list1</code> kohteet, joita ei ole luettelossa <code>list2</code>. Arvojen kaksoiskappaleita tuetaan.\r\n    Valinnainen laskutoimituksen ehtoarvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1, 2, 3, 4, 5} kohteet, joita ei ole luettelossa {4, 5, 3}.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "Selvitä luettelon {1, 2} kohteet, joita ei ole luettelossa {1, 2, 3}.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "Palauttaa luettelon arvoista (mukaan lukien tietuekentät), jotka sisältävät määritetyn tekstin.",
        "Documentation.LongDescription": "Palauttaa luettelosta <code>list</code> luettelon arvoista, jotka sisälsivät arvon <code>text</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä arvoa \"a\" vastaavat tekstiarvot luettelosta {\"a\", \"b\", \"ab\"}. ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "Palauttaa luettelon ensimmäisen kohdejoukon määrittämällä, montako kohdetta palautetaan, tai ehdon.",
        "Documentation.LongDescription": " <ul>\r\n  <li>Jos luku määritetään, palautetaan enintään kyseinen määrä kohteita. </li>\r\n  <li>Jos ehto määritetään, palautetaan kaikki kohteet, jotka täyttävät kyseisen ehdon aluksi. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelosta {3, 4, 5, -1, 7, 8, 2} alkuarvot, jotka ovat suurempia kuin 0.",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "Palauttaa arvon true, jos kaikki luettelon arvot täyttävät ehtofunktion ehdot.",
        "Documentation.LongDescription": "Palauttaa arvon <code>true</code>, jos kaikki luettelon <code>list</code> arvot täyttävät ehtofunktion <code>condition</code> ehdot. Palauttaa muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, ovatko luettelon {11, 12, 13} kaikki arvot suurempia kuin 10.",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, ovatko luettelon {1, 2, 3} kaikki arvot suurempia kuin 10.",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "Palauttaa arvon true, jos mikä tahansa arvo täyttää ehtofunktion ehdot.",
        "Documentation.LongDescription": "Palauttaa arvon <code>true</code>, jos mikä tahansa luettelon <code>list</code> arvo täyttää ehtofunktion <code>condition</code> ehdot. Palauttaa muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko jokin luettelon {9, 10, 11} arvoista suurempi kuin 10.",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, onko jokin luettelon {1, 2, 3} arvoista suurempi kuin 10.",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "Palauttaa luettelon enimmäisarvot. Palautettavien arvojen määrä tai suodatusehto täytyy määrittää.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> enimmäisarvot.\r\n    Kun rivit on lajiteltu, valinnaisia parametreja voi määrittää, jotta tulosta suodatetaan lisää. Valinnainen parametri <code>countOrCondition</code> määrittää palautettavin arvojen määrän tai suodatusehdon. Valinnainen parametri <code>comparisonCriteria</code> määrittää, miten luettelon arvoja verrataan.\r\n <ul>\r\n        <li> <code>list</code>: arvojen luettelo.</li>\r\n        <li> <code>countOrCondition</code>: Jos luku määritetään, palautetaan enintään <code>countOrCondition</code> kohteen luettelo nousevassa järjestyksessä. Jos ehto määritetään, palautetaan luettelo kohteita, jotka täyttävät kyseisen ehdon aluksi. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida.</li>\r\n<li><code>comparisonCriteria</code>: <i>(Valinnainen)</i> Valinnainen <code>comparisonCriteria</code>-arvo voidaan määrittää luettelon kohteiden vertailutavan määrittämistä varten. Jos tämä parametri on tyhjäarvo, käytetään oletusvertailutoimintoa.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "Palauttaa luettelon vähimmäisarvot. Palautettavien arvojen määrä tai suodatusehto voidaan määrittää.",
        "Documentation.LongDescription": "Palauttaa luettelon vähimmäisarvot<code>list</code>.\r\n    Parametri <code>countOrCondition</code> määrittää palautettavien arvojen määrän tai suodatusehdon. Valinnainen parametri <code>comparisonCriteria</code> määrittää, miten luettelon arvoja verrataan.\r\n <ul>\r\n        <li> <code>list</code>: arvojen luettelo.</li>\r\n        <li> <code>countOrCondition</code>: jos luku määritetään, palautetaan enintään <code>countOrCondition</code> kohteen luettelo nousevassa järjestyksessä. Jos ehto määritetään, palautetaan luettelo kohteita, jotka täyttävät kyseisen ehdon aluksi. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. Jos tämä parametri on tyhjäarvo, palautetaan luettelon yksittäinen pienin arvo.</li>\r\n<li><code>comparisonCriteria</code>: <i>(valinnainen)</i> valinnainen <code>comparisonCriteria</code>-arvo voidaan määrittää luettelon kohteiden vertailutavan määrittämistä varten. Jos tämä parametri on tyhjäarvo, käytetään oletusvertailutoimintoa.\r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon <code>{3, 4, 5, -1, 7, 8, 2}</code> viisi pienintä arvoa.",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "Palauttaa lukuluettelon, kun annetaan alkuarvo, määrä ja valinnainen lisäysarvo.",
        "Documentation.LongDescription": "Palauttaa lukuluettelon, kun annetaan alkuarvo, määrä ja valinnainen lisäysarvo. Oletuslisäysarvo on 1.\r\n<ul>\r\n   <li><code>start</code>: luettelon alkuarvo.</li>\r\n   <li><code>count</code>: luotavien arvojen määrä.</li>\r\n   <li><code>increment</code>: <i>(valinnainen)</i> arvo, jonka mukaan lisätään. Jos jätetään pois, arvoja lisätään yhdellä.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Muodosta kymmenen peräkkäisen luvun luettelo luvusta 1 alkaen.",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "Muodosta kymmenen luvun luettelo alkaen luvusta 1 ja käyttäen kahden lisäystä kullekin seuraavalle luvulle.",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "Palauttaa vähintään yhden esimerkkiprosenttipisteen, joka vastaa annettuja todennäköisyyksiä.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> yhden tai useamman esimerkkiprosenttipisteen. Jos arvo <code>percentiles</code> on luku 0,0–1,0, sitä kohdellaan prosenttipisteenä, ja tulos on\r\n    yksittäinen arvo, joka vastaa kyseistä todennäköisyyttä. Jos arvo <code>percentiles</code> on luettelo lukuja, joiden arvot ovat 0,0–1,0, tulos on syötetodennäköisyyttä\r\n    vastaavien prosenttipisteiden luettelo. PercentileMode-asetusta kohteessa <code>options</code> voivat käyttää kokeneet käyttäjät valitsemaan yksityiskohtaisemman interpolointimenetelmän, mutta sitä ei suositella useimpiin käyttötarkoituksiin.\r\n    Esimääritetyt symbolit <code>PercentileMode.ExcelInc</code> ja <code>PercentileMode.ExcelExc</code> vastaavat interpolointimentelmiä, joita Excel-funktiot\r\n    <code>PERCENTILE.INC</code> ja <code>PERCENTILE.EXC</code> käyttävät. Oletustoiminta vastaa kohdetta <code>PercentileMode.ExcelInc</code>. Symbolit\r\n    <code>PercentileMode.SqlCont</code> ja <code>PercentileMode.SqlDisc</code> vastaavat SQL Serverin toimintaa kohteille <code>PERCENTILE_CONT</code> ja\r\n    <code>PERCENTILE_DISC</code> tässä järjestyksessä.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon <code>{5, 3, 1, 7, 9}</code> ensimmäinen neljännes.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Selvitä luettelon <code>{5, 3, 1, 7, 9}</code> neljännekset käyttämällä interpolointimenetelmään, joka vastaa Excelin kohdetta <code>PERCENTILE.EXC</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "Palauttaa luettelon arvon siirtymän tai siirtymät.",
        "Documentation.LongDescription": "Palauttaa siirtymän, jossa arvo <code>value</code> on luettelossa <code>list</code>. Palauttaa arvon -1, jos arvoa ei ole.\r\n    Valinnainen esiintymäparametri <code>occurrence</code> voidaan määrittää.\r\n<ul>\r\n   <li><code>occurrence</code>: enimmäismäärä esiintymiä, jotka voidaan raportoida.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelossa {1, 2, 3} oleva sijainti, jossa arvo 3 esiintyy.",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "Palauttaa luettelon arvon ensimmäisen siirtymän.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>values</code> arvon ensimmäisen esiintymän siirtymän luettelossa <code>list</code>. Palauttaa arvon -1, jos yhtään esiintymää ei löydy. \r\n    Valinnainen esiintymäparametri <code>occurrence</code> voidaan määrittää.\r\n<ul>\r\n   <li><code>occurrence</code>: enimmäismäärä esiintymiä, jotka voidaan palauttaa.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelossa {1, 2, 3} oleva ensimmäinen sijainti, jossa arvo 2 tai 3 esiintyy.",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "Palauttaa luettelon alijoukon siirtymästä alkaen.",
        "Documentation.LongDescription": "Palauttaa luettelon alijoukon siirtymästä <code>list</code> alkaen. Valinnainen parametri <code>offset</code> asettaa alijoukon kohteiden enimmäismäärän.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä lukujen 1–10 luettelon siirtymästä 6 alkava alijoukko.",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "Selvitä lukujen 1–10 luettelon siirtymästä 6 alkava alijoukon, jonka pituus on 2.",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "Poista luettelossa olevat kohteet kohteesta list1.",
        "Documentation.LongDescription": "Poistaa kohteessa <code>list2</code> annettujen arvojen kaikki esiintymät kohteesta <code>list1</code>. Jos kohteen <code>list2</code> arvoja ei ole kohteessa <code>list1</code>, palautetaan alkuperäinen luettelo.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Poistaa luettelon {2, 4, 6} kohteet luettelosta {1, 2, 3, 4, 2, 5, 5}.",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "Poistaa syötearvojen kaikki esiintymät.",
        "Documentation.LongDescription": "Poistaa kohteessa <code>list2</code> annettujen arvojen kaikki esiintymät luettelosta <code>list1</code>. Jos kohteen <code>list2</code> arvoja ei ole kohteessa <code>list1</code>, palautetaan alkuperäinen luettelo.\r\n    Valinnainen laskutoimituksen ehtoarvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo luettelosta {1, 2, 3, 4, 5, 5} ilman arvoja {1, 5}.",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "Poistaa määritetyn määrän määritetystä sijainnista alkavia arvoja.",
        "Documentation.LongDescription": "Poistaa <code>count</code> arvoa kohteesta <code>list</code> alkaen määritetystä sijainnista <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Poistaa kolme arvoa luettelosta {1, 2, 3, 4, -6, -2, -1, 5} alkaen indeksistä 4.",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "Palauttaa luettelon, joka on alkuperäisen luettelon määritetty määrä toistoja.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka on <code>count</code> toistoa alkuperäisestä luettelosta <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo, jossa {1, 2} toistuu kolme kertaa.",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "Ottaa käyttöön kunkin kohteen  { old, new } toiston.",
        "Documentation.LongDescription": "Suorittaa annetut korvaukset luettelolle <code>list</code>. Korvaamistoiminto <code>replacements</code> muodostuu kahden arvon (vanha arvo ja uusi arvo) luettelosta.\r\n    Valinnainen laskutoimituksen ehtoarvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo luettelosta {1, 2, 3, 4, 5} korvaamalla arvo 5 arvolla -5 ja arvo 1 arvolla -1.",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "Palauta ehtoa vastaavien arvojen luettelon.",
        "Documentation.LongDescription": "Palauttaa luettelosta <code>list</code> luettelon arvoista, jotka vastaavat valintaehtoa <code>selection</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelosta {1, -3, 4, 9, -2} arvot, jotka ovat suurempia kuin 0.",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "Jakaa määritetyn luettelon luetteloiden luetteloksi käyttäen määritettyä sivun kokoa.",
        "Documentation.LongDescription": "Jakaa <code>list</code> luetteloluetteloksi, jossa tulosteluettelon ensimmäinen elementti on luettelo, joka sisältää lähdeluettelon\r\n ensimmäiset <code>pageSize</code> elementit. Tulosteluettelon seuraava elementti on luettelo, joka sisältää lähdeluettelon seuraavat <code>pageSize</code> elementit.  ja niin edelleen.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "Palauttaa tästä luettelosta lasketun uuden arvojen luettelon.",
        "Documentation.LongDescription": "Palauttaa uuden arvojen luettelon käyttämällä muunnosfunktiota <code>transform</code> luettelolle <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Lisää 1 luettelon {1, 2} kuhunkin arvoon.",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "Palauttaa kahden luvun jakamisen arkustangentin.",
        "Documentation.LongDescription": "Palauttaa kahden luvun (<code>y</code> ja <code>x</code>) jakamisen arkustangentin. Jakaminen muodostetaan seuraavasti: <code>y</code>/<code>x</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "Palauttaa bittitason And-toiminnon kahden syötteen välillä suorittamisen tuloksen.",
        "Documentation.LongDescription": "Palauttaa bittitason And-toiminnon kohteiden <code>number1</code> ja <code>number2</code> välillä suorittamisen tuloksen.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "Palauttaa bittitason Or-toiminnon kahden syötteen välillä suorittamisen tuloksen.",
        "Documentation.LongDescription": "Palauttaa bittitason Or-toiminnon kohteiden <code>number1</code> ja <code>number2</code> välillä suorittamisen tuloksen.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "Siirtää bittijoukkoa vasemmalle.",
        "Documentation.LongDescription": "Palauttaa bittitason määritetyn bittien määrän <code>number2</code> verran vasemmalle kohteessa <code>number1</code> siirtämisen tuloksen.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "Siirtää bittijoukkoa oikealle.",
        "Documentation.LongDescription": "Palauttaa bittitason määritetyn bittien määrän <code>number2</code> verran kohteessa <code>number1</code> oikealle siirtämisen tuloksen.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "Palauttaa bittitason XOR (Exclusive-OR) -toiminnon kahden syötteen välillä suorittamisen tuloksen.",
        "Documentation.LongDescription": "Palauttaa bittitason XOR (Exclusive-OR) toiminnon kohteiden <code>number1</code> ja <code>number2</code> välillä suorittamisen tuloksen.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "Palauttaa yksilöivien yhdistelmien määrän.",
        "Documentation.LongDescription": "Palauttaa yksilöivien yhdistelmien määrän kohdeluettelosta <code>setSize</code> käyttäen määritettyä yhdistelmän kokoa <code>combinationSize</code>.\r\n<ul>\r\n    <li><code>setSize</code>: luettelon kohteiden määrä.</li>\r\n    <li><code>combinationSize</code>: kunkin yhdistelmän kohteiden määrä.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä yhdistelmien määrä yhteensä viidestä kohteesta, kun kukin yhdistelmä on kolmen ryhmä.",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "Jakaa kaksi lukua ja palauttaa tuloksen kokonaislukuosan.",
        "Documentation.LongDescription": "Palauttaa luvun <code>number1</code> toisella luvulla <code>number2</code> jakamisen tuloksen kokonaislukuosan.\r\n    Jos <code>number1</code> tai <code>number2</code> on tyhjäarvo, <code>Number.IntegerDivide</code> palauttaa tyhjäarvon.\r\n      <ul>\r\n        <li><code>number1</code>: jaettava.</li>\r\n        <li><code>number2</code>: jakaja.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Jaa luku 6 luvulla 4.",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "Jaa luku 8,3 luvulla 3.",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "Kokonaisluku jakaa kaksi lukua ja palauttaa jakojäännöksen.",
        "Documentation.LongDescription": "Palauttaa luvun <code>number</code> luvulla <code>divisor</code> kokonaisluvulla jakamisen jakojäännöksen.\r\n    Jos <code>number</code> tai <code>divisor</code> on tyhjäarvo, <code>Number.Mod</code> palauttaa tyhjäarvon.\r\n      <ul>\r\n        <li><code>number</code>: jaettava.</li>\r\n        <li><code>divisor</code>: jakaja.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä jakojäännös, kun luku 5 jaetaan luvulla 3.",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "Palauttaa permutaatioiden määrän.",
        "Documentation.LongDescription": "Palauttaa niiden permutaatioiden määrän, jotka voidaan luoda kohteiden määrästä <code>setSize</code> käyttäen määritettyä permutaatiokokoa <code>permutationSize</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä permutaatioiden määrä yhteensä viidestä kohteesta kolmen ryhmissä.",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "Korottaa luvun annettuun potenssiin.",
        "Documentation.LongDescription": "Palauttaa tuloksen, kun <code>number</code> korotetaan potenssiin <code>power</code>.\r\n    Jos <code>number</code> tai <code>power</code> on tyhjäarvo, <code>Number.Power</code> palauttaa tyhjäarvon.\r\n      <ul>\r\n        <li><code>number</code>: kantaluku.</li>\r\n        <li><code>power</code>: eksponentti.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä arvo, joka saadaan, kun 5 korotetaan kolmanteen potenssiin (5 kuutioituna).",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "Palauttaa satunnaisluvun kahden luvun väliltä.",
        "Documentation.LongDescription": "Palauttaa satunnaisluvun lukujen <code>bottom</code> ja <code>top</code> väliltä.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Hae satunnaisluku lukujen 1 ja 5 väliltä.",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "Palauttaa tietueen määritetyn kentän arvon.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>record</code> määritetyn kohteen <code>field</code> arvon. Jos kenttää ei löydy, tapahtuu poikkeus.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kentän CustomerID arvo tietueessa.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "Palauttaa tietueen määritetyn kentän arvon tai oletusarvon, jos kenttää ei löydy.",
        "Documentation.LongDescription": "Palauttaa tietueen <code>record</code> määritetyn kentän <code>field</code> arvon. Jos kenttää ei löydy, palautetaan valinnainen <code>defaultValue</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kentän \"Phone\" arvo tietueessa tai palauta tyhjäarvo, jos sitä ei ole olemassa.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "Selvitä kentän \"Phone\" arvo tietueessa tai palauta oletusarvo, jos sitä ei ole olemassa.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "Palauttaa tietueen, kun annetaan luettelo kenttien arvoja ja kenttien joukko.",
        "Documentation.LongDescription": "Palauttaa tietueen, kun annetaan kenttien arvoja (<code>list</code>) ja kenttien joukko.  <code>fields</code> voidaan määrittää joko tekstiarvojen luettelona tai tietuetyyppinä.  Tapahtuu virhe, jos kentät eivät ole yksilöivät.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Muodosta tietue luettelosta kenttien arvoja ja luettelosta kenttien nimiä.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Muodosta tietue luettelosta kenttien arvoja ja tietuetyypistä.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "Ilmaisee, onko tietueella määritetyt kentät.",
        "Documentation.LongDescription": "Ilmaisee, onko tietueella <code>record</code> kohteessa <code>fields</code> määritetyt kentät palauttamalla loogisen arvon (true tai false).\r\n    Useita kenttien nimiä voidaan määrittää luettelon avulla.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Tarkista, onko tietueella kenttä \"CustomerID\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "Tarkista, onko tietueella kentät \"CustomerID\" ja \"Address\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "Poistaa määritetyt kentät syötetietueesta.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka poistaa kaikki luettelossa <code>fields</code> määritetyt kentät syötteestä <code>record</code>. Jos määritettyä kenttää ei ole, tapahtuu poikkeus.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Poista kenttä \"Price\" tietueesta.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "Poista kentät \"Price\" ja \"Item\" tietueesta.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "Ottaa käyttöön uudelleennimeämiset luettelosta muodossa { old, new }.",
        "Documentation.LongDescription": "Palauttaa tietueen sen jälkeen, kun syötteen <code>record</code> kentät on nimetty uudelleen luettelossa <code>renames</code> määritetyillä uusilla kenttien nimillä. Jos kyseessä on useita uudelleennimeämisiä, voidaan käyttää sisäkkäistä luetteloa ({ {old1, new1}, {old2, new2} }.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Nimeä kenttä \"UnitPrice\" uudelleen nimellä \"Price\" tietueesta.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "Nimeä kenttä \"UnitPrice\" uudelleen nimellä \"Price\" ja kenttä \"OrderNum\" nimellä \"OrderID\" tietueesta.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "Järjestää määritetyt kentät uudelleen uuteen järjestykseen.",
        "Documentation.LongDescription": "Palauttaa tietueen sen jälkeen, kun kohteen <code>record</code> kentät on järjestetty uudelleen luettelossa <code>fieldOrder</code> määritetyllä kenttien järjestyksellä. Kenttien arvot säilytetään, ja kentät, joita ei ole lueteltu kohteessa <code>fieldOrder</code>, jätetään niiden alkuperäisiin sijainteihin.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Järjestä joitakin tietueen kenttiä uudelleen.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "Palauttaa tietueen, joka sisältää ainoastaan määritetyt kentät.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää ainoastaan luettelossa <code>fields</code> määritetyt kentät syötteestä <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Valitse kentät \"Item\" ja \"Price\" tietueessa.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "Palauttaa tietueen määritettyjen muunnosten käyttöönoton jälkeen.",
        "Documentation.LongDescription": "Palauttaa tietueen luettelossa <code>transformOperations</code> määritettyjen muunnosten kohteelle <code>record</code> käyttöön ottamisen jälkeen.\r\n    Yksi tai useampi kenttä voidaan muuntaa jonakin tiettynä ajankohtana.\r\n      <div>Jos muunnetaan yksittäistä kenttää, kohteen <code>transformOperations</code> odotetaan olevan kaksi kohdetta sisältävä luettelo. Kohteen <code>transformOperations</code> ensimmäinen kohde määrittää kentän nimen ja kohteen <code>transformOperations</code> toinen kohde määrittää muunnokselle käytettävän funktion. Esimerkki: <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>Jos muunnetaan useita kenttiä, kohteen <code>transformOperations</code> odotetaan olevan luetteloiden luettelo, jossa kukin sisempi luettelo on kentän nimen ja muunnostoiminnon pari. Esimerkki: <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Muunna kenttä Price luvuksi.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "Muunna kentät OrderID ja Price luvuiksi.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi yhdenlaisesta merkistä toisenlaiseen siirtymisen mukaan. Parametrit {0} ja {1} voivat olla joko merkkien luettelo tai funktio, joka ottaa merkin ja palauttaa arvon true tai false.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi yhdenlaisesta merkistä toisenlaiseen siirtymisen mukaan. Parametrit <code>before</code> ja <code>after</code> voivat olla joko merkkien luettelo tai funktio, joka ottaa merkin ja palauttaa arvon true tai false.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte aina, kun isoja tai pieniä kirjaimia seuraa numero.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "Muuntaa annetun SQL-kyselyn M-koodiksi. Tämä funktio on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Muuntaa annetun <code>sql</code>-kyselyn M-koodiksi <code>environment</code>:n määrittämien käytettävissä olevien tunnisteiden avulla. Tämä funktio on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "Palauttaa määritetyn tietosarakkeen taulukosta luettelona.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>column</code> määrittämän tietosarakkeen taulukosta <code>table</code> luettelona.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa arvot taulukon sarakkeesta [Name].",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "Palauttaa luettelon niiden sarakkeiden nimiä, jotka vastaavat määritettyjä tyyppejä.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka sisältää taulukon <code>table</code> kohteessa <code>listOfTypes</code> määritettyjä tyyppejä vastaavien sarakkeiden nimiä.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa tyyppiä Number.Type olevien sarakkeiden nimet taulukosta.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "Ilmaisee, näkyykö määritetty tietue taulukon rivinä.",
        "Documentation.LongDescription": "Ilmaisee, näkyykö määritetty tietue <code>row</code> rivinä kohteessa <code>table</code>.\r\n    Valinnainen parametri <code>equationCriteria</code> voidaan määrittää ohjaamaan taulukon rivien välistä vertailua.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, sisältääkö taulukko rivin.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, sisältääkö taulukko rivin.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "Selvitä, sisältääkö taulukko rivin, vertaamalla ainoastaan saraketta [Name].",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "Ilmaisee, näkyvätkö kaikki määritetyt tietueet taulukon riveinä.",
        "Documentation.LongDescription": "Ilmaisee, näkyvätkö kaikki tietueluettelon <code>rows</code> määritetyt tietueet kohteen <code>table</code> riveinä.\r\n    Valinnainen parametri <code>equationCriteria</code> voidaan määrittää ohjaamaan taulukon rivien välistä vertailua.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, sisältääkö taulukko kaikki rivit, vertaamalla ainoastaan saraketta [CustomerID].",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, sisältääkö taulukko kaikki rivit.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "Ilmaisee, näkyykö mikään määritetyistä tietueista taulukon riveinä.",
        "Documentation.LongDescription": "Ilmaisee, näkyykö mikään tietueluettelon <code>rows</code> määritetyistä tietueista kohteen <code>table</code> riveinä.\r\n    Valinnainen parametri <code>equationCriteria</code> voidaan määrittää ohjaamaan taulukon rivien välistä vertailua.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, sisältääkö taulukko <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> rivit <code>[a = 1, b = 2]</code> tai <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, sisältääkö taulukko <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> rivit <code>[a = 1, b = 3]</code> tai <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "Selvitä, sisältääkö taulukko <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> rivit <code>[a = 1, b = 3]</code> tai <code>[a = 3, b = 5]</code>, vertaamalla ainoastaan saraketta [a].",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "Ilmaisee, sisältääkö taulukko määritetyt sarakkeet.",
        "Documentation.LongDescription": "Ilmaisee, sisältääkö <code>table</code> määritetyt sarakkeet <code>columns</code>. Palauttaa arvon <code>tosi</code>, jos taulukko sisältää sarakkeet, ja muussa tapauksessa arvon <code>epätosi</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko taulukossa sarake [Name].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, onko taulukossa sarakkeet [Name] ja [PhoneNumber].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "Ilmaisee, täyttävätkö taulukon kaikki rivit annetun ehdon.",
        "Documentation.LongDescription": "Ilmaisee, täyttävätkö kohteen <code>table</code> kaikki rivit annetun ehdon <code>condition</code>. Palauttaa arvon <code>true</code>, jos kaikki rivit täsmäävät, ja muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, ovatko kaikki sarakkeen [a] rivien arvot parillisia taulukossa.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, ovatko kaikki rivien arvot [a = 1, b = 2] taulukossa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "Ilmaisee, täyttääkö mikään taulukon rivi annettua ehtoa.",
        "Documentation.LongDescription": "Ilmaisee, täyttääkö mikään kohteen <code>table</code> rivi annettua ehtoa <code>condition</code>. Palauttaa arvon <code>true</code>, jos mikä tahansa rivi täsmää, ja muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko mikään sarakkeen [a] rivien arvo parillinen taulukossa <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "Selvitä, onko minkään rivin arvo [a = 1, b = 2] taulukossa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "Palauttaa suurimman rivin tai oletusarvon käyttäen annettua ehtoa.",
        "Documentation.LongDescription": "Palauttaa suurimman rivin kohteessa <code>table</code>, kun <code>comparisonCriteria</code> on annettu. Jos taulukko on tyhjä, palautetaan valinnainen arvo <code>default</code>. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Etsi rivi, jolla on suurin arvo sarakkeessa [a] taulukossa <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "Etsi rivi, jolla on suurin arvo sarakkeessa [a] taulukossa <code>({})</code>. Palauta arvo -1, jos se on tyhjä.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "Palauttaa pienimmän rivin tai oletusarvon käyttäen annettua ehtoa.",
        "Documentation.LongDescription": "Palauttaa pienimmän rivin kohteessa <code>table</code>, kun <code>comparisonCriteria</code> on annettu. Jos taulukko on tyhjä, palautetaan valinnainen arvo <code>default</code>.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Etsi rivi, jolla on pienin arvo sarakkeessa [a] taulukossa.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "Etsi rivi, jolla on pienin arvo sarakkeessa [a] taulukossa. Palauta arvo -1, jos se on tyhjä.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "Palauttaa rivin sijainnin tai sijainnit taulukon sisällä.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>row</code> ensimmäisen esiintymän rivisijainnin määritetyssä kohteessa <code>table</code>. Palauttaa arvon -1, jos yhtään esiintymää ei löydy.\r\n    <ul>\r\n       <li><code>table</code>: syötetaulukko.</li>\r\n       <li><code>row</code>: taulukon rivi, jonka sijainti etsitään.</li>\r\n       <li><code>occurrence</code>: <i>(valinnainen)</i> määrittää, mitkä rivin esiintymät palautetaan.</li>\r\n       <li><code>equationCriteria</code>: <i>(valinnainen)</i> ohjaa taulukon rivien välistä vertailua.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Etsi kohteen [a = 2, b = 4] ensimmäisen esiintymän sijainti taulukossa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "Etsi kohteen [a = 2, b = 4] toisen esiintymän sijainti taulukossa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "Etsi kohteen [a = 2, b = 4] kaikkien esiintymien sijainnit taulukossa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "Palauttaa minkä tahansa määritetyn rivin sijainnin tai sijainnit taulukon sisällä.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>rows</code> ensimmäisen esiintymän rivien sijainnit kohteesta <code>table</code>. Palauttaa arvon -1, jos yhtään esiintymää ei löydy.\r\n    <ul>\r\n       <li><code>table</code>: syötetaulukko.</li>\r\n       <li><code>rows</code>: luettelo taulukon riveistä, joiden sijainnit etsitään.</li>\r\n       <li><code>occurrence</code>: <i>(valinnainen)</i> määrittää, mitkä rivin esiintymät palautetaan.</li>\r\n       <li><code>equationCriteria</code>: <i>(valinnainen)</i> ohjaa taulukon rivien välistä vertailua.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Etsi kohteen [a = 2, b = 4] tai [a = 6, b = 8] ensimmäisen esiintymän sijainti taulukossa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "Etsi kohteen [a = 2, b = 4] tai [a = 6, b = 8] kaikkien esiintymien sijainnit taulukossa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "Jakaa määritetyn taulukon taulukoiden luetteloksi käyttäen määritettyä sivun kokoa.",
        "Documentation.LongDescription": "Jakaa <code>table</code> taulukkoluetteloksi, jossa luettelon ensimmäinen elementti on taulukko, joka sisältää lähdetaulukon\r\n ensimmäiset <code>pageSize</code> rivit. Luettelon seuraava elementti on taulukko, joka sisältää lähdetaulukon seuraavat <code>pageSize</code> rivit.  ja niin edelleen.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Jaa viiden tietueen taulukko taulukoihin, joissa kussakin on kaksi tietuetta.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "Palauttaa luettelon, joka sisältää määritetyt ensimmäiset määrärivit ja loput rivit.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka sisältää kaksi taulukkoa: taulukon, jossa on kohteen <code>table</code> ensimmäiset N riviä (<code>count</code> määrittämä), ja taulukon, joka sisältää kohteen <code>table</code> jäljellä olevat rivit.\r\n\r\nJos tuloksena olevan luettelon taulukot lasketaan täsmälleen kerran ja järjestyksessä, toiminto laskee kohteen <code>table</code> vain kerran.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukon ensimmäiset kaksi riviä ja taulukon jäljellä olevat rivit.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "Muuntaa taulukon rivit käyttäen määritettyä muunnosfunktiota.",
        "Documentation.LongDescription": "Luo <code>luettelon</code> ottamalla <code>transform</code>-toiminnon käyttöön kullekin <code>table</code>:n riville.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Muunna taulukon rivit numeroluetteloksi.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "Muunna numeerisen taulukon rivit tekstitietueiksi.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "Palauttaa kohteen <code>text</code> osan määritetyn kohteen <code>delimiter</code> jälkeen.\r\n    Valinnainen luku <code>index</code> ilmaisee, mitä kohteen <code>delimiter</code> esiintymää tulee käsitellä.\r\n    Valinnainen luettelo <code>index</code> ilmaisee, mitä kohteen <code>delimiter</code> esiintymää tulee käsitellä, sekä pitääkö indeksointi tehdä syötteen alusta vai lopusta.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hae kohteen 111-222-333 osa (ensimmäisen) yhdysmerkin jälkeen.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "Hae kohteen 111-222-333 osa toisen yhdysmerkin jälkeen.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "Hae kohteen 111-222-333 osa toisen yhdysmerkin jälkeen lopusta.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "Palauttaa määritetyssä sijainnissa olevan merkin.",
        "Documentation.LongDescription": "Palauttaa sijainnissa <code>index</code> olevan tekstiarvon <code>text</code> merkin. Tekstin ensimmäinen merkki on sijainnissa 0.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Etsi merkkijonon \"Hello, World\" sijainnissa 4 oleva merkki.",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "Palauttaa kohteen <code>text</code> osan ennen määritettyä kohdetta <code>delimiter</code>.\r\n    Valinnainen luku <code>index</code> ilmaisee, mitä kohteen <code>delimiter</code> esiintymää tulee käsitellä.\r\n    Valinnainen luettelo <code>index</code> ilmaisee, mitä kohteen <code>delimiter</code> esiintymää tulee käsitellä, sekä pitääkö indeksointi tehdä syötteen alusta vai lopusta.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hae kohteen 111-222-333 osa ennen (ensimmäistä) yhdysmerkkiä.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "Hae kohteen 111-222-333 osa ennen toista yhdysmerkkiä.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "Hae kohteen 111-222-333 osa ennen toista yhdysmerkkiä lopusta.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "Palauttaa tiedon siitä, sisältääkö teksti alimerkkijonon.",
        "Documentation.LongDescription": "Tunnistaa, sisältääkö <code>text</code> arvon <code>substring</code>. Palauttaa tosi-arvon, jos arvo löytyy. Tämä funktio ei tue yleismerkkejä tai säännönmukaisia lausekkeita.\r\n      <br>\r\n     <br>\r\n      Valinnaista argumenttia <code>comparer</code> voidaan käyttää määrittämään kirjainkoko tai maa-asetus ja aluekohtaiset vertailut.\r\n      Kaavan kielellä on käytettävissä seuraavat sisäiset vertailutoiminnot:\r\n      <ul>\r\n       <li><code>Comparer.Ordinal</code>: Käytetään kirjainkoon huomioivan järjestyslukuvertailun suorittamiseen</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Käytetään kirjainkoosta riippumattoman järjestyslukuvertailun suorittamiseen</li>\r\n        <li> <code>Comparer.FromCulture</code>: Käytetään maa-asetukset huomioivan vertailun suorittamiseen</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, sisältääkö teksti \"Hello World\" tekstin \"Hello\".",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "Selvitä, sisältääkö teksti \"Hello World\" tekstin \"hello\".",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Selvitä, sisältääkö teksti \"Hei maailma\" sanan \"hei\", käyttämällä kirjainkokoa merkitsevää vertailutoimintoa.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "Palauttaa tekstin viimeiset merkit.",
        "Documentation.LongDescription": "Palauttaa <code>text</code>-arvon, joka on <code>text</code>-arvon <code>text</code> viimeiset <code>count</code> merkkiä.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hae tekstin \"Hello, World\" viimeiset viisi merkkiä.",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "Ilmaisee, päättyykö teksti määritettyyn arvoon.",
        "Documentation.LongDescription": "Ilmaisee, päättyykö annettu teksti <code>text</code> määritettyyn arvoon <code>substring</code>. Ilmaisin on kirjainkoon huomioiva.\r\n\r\n      <div>\r\n        <code>comparer</code> on <code> Vertailutoiminto</code>, jota käytetään vertailun hallintaan. Vertailutoiminnoilla voidaan tarjota kirjainkoon ohittavia tai maa- ja aluekohtaiset asetukset huomioivia vertailuja.\r\n      </div>\r\n      <div>\r\n        Seuraavat sisäiset vertailutoiminnot ovat saatavilla kaavan kielellä:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Käytetään tarkan järjestyslukuvertailun suorittamiseen</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Käytetään tarkan kirjainkoon ohittavan järjestyslukuvertailun suorittamiseen</li>\r\n        <li> <code>Comparer.FromCulture</code>: Käytetään maa-asetukset huomioivan vertailun suorittamiseen</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Tarkista, päättyykö teksti \"Hello, World\" tekstiin \"world\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "Tarkista, päättyykö teksti \"Hello, World\" tekstiin \"World\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "Palauttaa muotoillun tekstin muotoilumerkkijonosta ja argumenteista.",
        "Documentation.LongDescription": "Palauttaa muotoillun tekstin, joka luodaan käyttämällä kohdetta <code>arguments</code> tietueluettelosta muotoilumerkkijonoon <code>formatString</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Muotoile lukujen luettelo.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "Muotoile eri tietotyyppejä tietueesta Yhdysvaltain englannin maa-asetuksen mukaisesti.",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "Palauttaa alimerkkijonon määritettyyn pituuteen saakka.",
        "Documentation.LongDescription": "Palauttaa <code>count</code> merkkiä tai kohteen <code>text</code> loppuun saakka; siirtymä <code>start</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Etsi alimerkkijono tekstistä Hello World alkaen indeksistä 6 ja käsittäen 5 merkkiä.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "Etsi alimerkkijono tekstistä Hello World alkaen indeksistä 6 loppuun saakka.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "Palauttaa määritetyn pituisen tekstin täyttämällä annetun tekstin lopun.",
        "Documentation.LongDescription": "Palauttaa <code>text</code>-arvon täytettynä pituuteen <code>count</code> lisäämällä välilyöntejä tekstiarvon <code>text</code> loppuun.\r\n    Valinnaisen merkin <code>character</code> avulla voidaan määrittää täyttämiseen käytetty merkki. Oletusarvon mukainen täyttömerkki on välilyönti.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Täytä tekstiarvon loppu niin, että pituus on yhteensä 10 merkkiä.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "Täytä tekstiarvon loppu merkillä | niin, että pituus on yhteensä 10 merkkiä.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "Palauttaa määritetyn pituisen tekstin täyttämällä annetun tekstin alun.",
        "Documentation.LongDescription": "Palauttaa <code>text</code>-arvon täytettynä pituuteen <code>count</code> lisäämällä välilyöntejä tekstiarvon <code>text</code> alkuun.\r\n    Valinnaisen merkin <code>character</code> avulla voidaan määrittää täyttämiseen käytetty merkki. Oletusarvon mukainen täyttömerkki on välilyönti.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Täytä tekstiarvon alku niin, että pituus on yhteensä 10 merkkiä.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "Täytä tekstiarvon alku merkillä | niin, että pituus on yhteensä 10 merkkiä.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "Palauttaa arvon ensimmäisen sijainnin (-1, jos sitä ei löydy).",
        "Documentation.LongDescription": "Palauttaa tekstiarvon <code>substring</code> määritetyn esiintymän sijainnin, joka löytyy kohdasta <code>text</code>.\r\n    Valinnaista parametriä <code>occurrence</code>, voidaan käyttää määrittämään palautettava esiintymäsijainti (oletusarvoisesti ensimmäinen esiintymä).\r\n    Palauttaa arvon -1, jos arvoa <code>substring</code> ei löydy.\r\n\r\n      <div>\r\n        <code>comparer</code> on <code>vertailutoiminto</code>, jota käytetään vertailun hallintaan. Vertailutoiminnoilla voidaan tarjota kirjainkoon ohittavia tai maa- ja aluekohtaiset asetukset huomioivia vertailuja.\r\n      </div>\r\n      <div>\r\n        Seuraavat sisäiset vertailutoiminnot on saatavilla kaavan kielellä:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Käytetään tarkan järjestyslukuvertailun suorittamiseen</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Käytetään tarkan kirjainkoon ohittavan järjestyslukuvertailun suorittamiseen</li>\r\n        <li> <code>Comparer.FromCulture</code>: Käytetään maa-asetukset huomioivan vertailun suorittamiseen</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Hae tekstin \"World\" ensimmäisen esiintymän sijainti tekstissä \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "Hae tekstin \"World\" viimeisen esiintymän sijainti tekstissä \"Hello, World! Hello, World!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "Palauttaa minkä tahansa luettelossa olevan merkin tekstiarvon ensimmäisen sijainnin (-1, jos sitä ei löydy).",
        "Documentation.LongDescription": "Palauttaa minkä tahansa merkin ensimmäisen sijainnin luettelossa <code>characters</code>, joka löytyy kohteesta <code>text</code>.\n    Valinnaista parametria <code>occurrence</code> voidaan käyttää määrittämään palautettava esiintymäsijainti.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Selvitä merkin \"W\" tai \"H\" ensimmäinen sijainti tekstissä \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "Selvitä merkin \"W\" tai \"H\" sijainnit tekstissä \"Hello, World!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "Palauttaa siirtymästä löytyvän alimerkkijonon.",
        "Documentation.LongDescription": "Palauttaa siirtymästä <code>offset</code> löytyvän tekstin <code>text</code> alimerkkijonon.\r\n    Valinnainen parametri <code>count</code> voidaan sisällyttää määrittämään palautettavien merkkien määrä. Aiheuttaa virheen, jos merkkejä ei ole tarpeeksi.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Etsi indeksistä 6 alkava alimerkkijono tekstistä \"Hello World\".",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "Etsi indeksistä 6 alkava viiden merkin pituinen alimerkkijono tekstistä \"Hello World Hello\".",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "Poistaa annetun merkin tai merkkiluettelon kaikki esiintymät syötetekstiarvosta.",
        "Documentation.LongDescription": "Palauttaa tekstiarvon <code>text</code> kopion, josta on poistettu kaikki merkit kohteesta <code>removeChars</code>.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Poista merkit , ja ; tekstiarvosta.",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "Poistaa annetusta sijainnista alkavan määritetyn määrän merkkejä",
        "Documentation.LongDescription": "Palauttaa tekstiarvon <code>text</code> kopion, josta on poistettu kaikki merkit sijainnista <code>offset</code>.\r\n    Valinnaista parametria <code>count</code> voidaan käyttää määrittämään poistettavien merkkien määrä. Kohteen <code>count</code> oletusarvo on 1. Sijaintiarvot alkavat arvosta 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Poista yksi merkki tekstiarvosta \"ABEFC\" sijainnissa 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "Poista kaksi merkkiä tekstiarvosta \"ABEFC\" alkaen sijainnista 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "Palauttaa tekstiarvon, joka muodostuu määritetyn määrän kertoja toistetusta syötetekstistä.",
        "Documentation.LongDescription": "Palauttaa tekstiarvon, joka muodostuu <code>count</code> kertaa toistetusta syötetekstistä <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Toista teksti \"a\" viidesti.",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "Toista teksti \"helloworld\" kolmesti.",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "Valitsee annetun merkin tai merkkiluettelon kaikki esiintymät syötetekstiarvosta.",
        "Documentation.LongDescription": "Palauttaa tekstiarvon <code>text</code> kopion, josta on poistettu kaikki merkit, joita ei ole kohteessa <code>selectChars</code>.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Valitse tekstiarvosta kaikki merkit välillä a–z.",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "Jakaa tekstin tekstiarvoluetteloksi määritetyn erottimen perusteella.",
        "Documentation.LongDescription": "Palauttaa tekstiarvoluettelon, joka on tuloksena tekstiarvon <code>text</code> jakamisesta osiin määritetyn erottimen <code>separator</code> perusteella.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo merkillä \"|\" erotetusta tekstiarvosta \"Name|Address|PhoneNumber\".",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "Palauttaa tekstiarvoluettelon, joka on jaettu osiin jokaisen erottimen merkin kohdalta.",
        "Documentation.LongDescription": "Palauttaa tekstiarvoluettelon, joka on tuloksena tekstiarvon <code>text</code> jakamisesta osiin määritetyn erottimen <code>separators</code> jokaisen merkin perusteella.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo tekstiarvosta \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\".",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "Palauttaa tekstin alun.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>text</code> ensimmäiset <code>count</code> merkkiä tekstiarvona.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Hae tekstin \"Hello, World\" ensimmäiset viisi merkkiä.",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "Ilmaisee, alkaako teksti määritetyllä arvolla.",
        "Documentation.LongDescription": "Palauttaa tosi-arvon, jos tekstiarvo <code>text</code> alkaa tekstiarvolla <code>substring</code>.\r\n      <ul>\r\n       <li><code>text</code>: <i></i> A <code>tekstiarvo</code>, josta haetaan</li>\r\n        <li><code>substring</code>: <i></i> A <code>tekstiarvo</code>, jota haetaan kohteesta <code>substring</code></li>\r\n        <li><code>comparer</code>: <i>[Valinnainen]</i> <code>Vertailutoimintoa</code> käytetään vertailun hallintaan. Esimerkiksi, <code>Comparer.OrdinalIgnoreCase</code>-toimintoa voidaan käyttää kirjainkoon huomioon ottavien hakujen tekemiseen</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> on <code>Vertailutoiminto</code>, jota käytetään vertailun hallintaan. Vertailutoiminnoilla voidaan tarjota kirjainkokoon ohittavia tai maa- ja aluekohtaiset asetukset huomioivia vertailuja.\r\n      </div>\r\n      <div>\r\n        Seuraavat sisäiset vertailutoiminnot ovat saatavilla kaavan kielellä:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: Käytetään tarkan järjestyslukuvertailun suorittamiseen</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: Käytetään tarkan kirjainkoon ohittavan järjestyslukuvertailun suorittamiseen</li>\r\n        <li> <code>Comparer.FromCulture</code>: Käytetään maa-asetukset huomioivan vertailun suorittamiseen</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Tarkista, alkaako teksti \"Hello, World\" tekstillä \"hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Tarkista, alkaako teksti \"Hello, World\" tekstillä \"Hello\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "Palauttaa tyypin, joka edustaa funktioita, joilla on tiettyjä parametri- ja palautustyyppirajoituksia.",
        "Documentation.LongDescription": "Luo kohteen <code>function type</code> kohteesta <code>signature</code>, tietueen <code>ReturnType</code> ja <code>Parameters</code> sekä kohteen <code>min</code>, joka on vähimmäismäärä funktion käynnistämiseen tarvittavia argumentteja.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Luo funktiolle tyypin, joka ottaa lukuparametrin nimeltä X ja palauttaa luvun.",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "Palauttaa tyypin, joka edustaa tietueita, joilla on tiettyjä tyyppirajoituksia kentille.",
        "Documentation.LongDescription": "Palauttaa tyypin, joka edustaa tietueita, joilla on tiettyjä tyyppirajoituksia kentille.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Luo taulukkotyyppi dynaamisesti.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "Määrittää, onko ensimmäisen tyypin arvo aina yhteensopiva toisen tyypin kanssa.",
        "Documentation.LongDescription": "Määrittää, onko <code>type1</code> arvo aina yhteensopiva <code>type2</code> kanssa.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, voidaanko tyyppinumeron arvoa aina käsitellä myös tyyppinä mikä tahansa.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "Selvittää, voidaanko minkä tahansa tyyppistä arvoa käsitellä aina myös tyyppilukuna.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "Korvaa tyypin pinnat.",
        "Documentation.LongDescription": "Korvaa kohteen <code>type</code> pinnat tietueen <code>facets</code> sisältämillä pinnoilla.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "Palauttaa uuden taulukkotyypin, jonka kaikki avaimet on korvattu määritetyllä avainluettelolla.",
        "Documentation.LongDescription": "Palauttaa uuden taulukkotyypin, jonka kaikki avaimet on korvattu määritetyllä avainluettelolla.<br>\r\n    <br>\r\n    Jokainen avain määritetään seuraavan lomakkeen tietueen avulla:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: avaimen määrittävien sarakkeiden nimien luettelo\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code>, jos avain on taulukon perusavain; muussa tapauksessa <code>false</code>\r\n      </li>\r\n    </ul>\r\n    Määritetty avainluettelo vahvistetaan sen varmistamiseksi, että enintään yksi perusavain on määritetty ja että kaikki avainsarakkeiden nimet ovat taulukkotyypissä.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Korvaa taulukkotyypin avaintiedot.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "Tyhjennä taulukkotyypille aiemmin määritetyt avaintiedot.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "Palauttaa taulukon sarakkeen tyypin.",
        "Documentation.LongDescription": "Palauttaa sarakkeen <code>column</code> tyypin taulukkotyypissä <code>tableType</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "Palauttaa absoluuttisen URI-tunnuksen, joka on syötteen perus-URI-tunnuksen ja suhteellisen URI-tunnuksen yhdistelmä.",
        "Documentation.LongDescription": "Palauttaa absoluuttisen URI-tunnuksen, joka on syötteiden <code>baseUri</code> ja <code>relativeUri</code> yhdistelmä.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "Palauttaa kahden arvon summan.",
        "Documentation.LongDescription": "Palauttaa kohteiden <code>value1</code> ja <code>value2</code> summan. Valinnainen parametri <code>precision</code> voidaan määrittää. Oletusarvon mukaan käytetään kohdetta <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "Palauttaa arvon, jos se on yhteensopiva määritetyn tyypin kanssa.",
        "Documentation.LongDescription": "Palauttaa arvon, jos se on yhteensopiva määritetyn tyypin kanssa. Tämä vastaa M:n as-operaattoria lukuun ottamatta sitä, että se voi hyväksyä tunnistetyyppiviittauksia, kuten Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Luo luvun numeroon.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "Yritettiin lähettää tekstiarvo luvuksi.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "Palauttaa arvon -1, 0 tai 1 sen mukaan, onko ensimmäinen arvo pienempi, yhtä suuri tai suurempi kuin toinen.",
        "Documentation.LongDescription": "Palauttaa arvon -1, 0 tai 1 sen mukaan, onko ensimmäinen arvo pienempi, yhtä suuri tai suurempi kuin toinen.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "Palauttaa ensimmäisen arvon toisella arvolla jakamisen tuloksen.",
        "Documentation.LongDescription": "Palauttaa luvun <code>value1</code> luvulla <code>value2</code> jakamisen tuloksen. Valinnainen parametri <code>precision</code> voidaan määrittää. Oletusarvon mukaan käytetään kohdetta <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "Palauttaa tiedon siitä, ovatko kaksi arvoa yhtä suuret.",
        "Documentation.LongDescription": "Palauttaa arvon true, jos arvo <code>value1</code> on yhtä suuri kuin arvo <code>value2</code>, ja muutoin arvon false.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "Määrittää, onko arvo yhteensopiva määritetyn tyypin kanssa.",
        "Documentation.LongDescription": "Määrittää, onko arvo yhteensopiva määritetyn tyypin kanssa. Tämä vastaa M:n is-operaattoria lukuun ottamatta sitä, että se voi hyväksyä tunnistetyyppiviittauksia, kuten Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Vertaa kahta tapaa määrittää, onko luku yhteensopiva tyyppiluvun kanssa.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "Palauttaa kahden arvon tulon.",
        "Documentation.LongDescription": "Palauttaa arvon <code>value1</code> arvolla <code>value2</code> kertomisen tulon. Valinnainen parametri <code>precision</code> voidaan määrittää. Oletusarvon mukaan käytetään kohdetta <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "Laskee kyselyn suhteessa tavoitteeseen.",
        "Documentation.LongDescription": "<p>Arvostaa <code>query</code><code>target</code> käyttämällä <code>parameters</code> määritettyjä parametreja ja <code>options</code>.</p>\r\n<p>Kyselyn tulosteen määrittää <code>target</code>.</p>\r\n<p>><code>target</code> tarjoaa kontekstin @no__t_ kuvaamalle toiminnolle 10_ .</p>\r\n<p><code>query</code> kuvaa kyselyä, joka suoritetaan <code>target</code>. <code>query</code> ilmaistaan <code>target</code> (esimerkiksi T-SQL-lauseke). </p>\r\n<p> Valinnainen <code>parameters</code>-arvo voi sisältää joko luettelon tai tietueen, jonka avulla voidaan antaa <code>query</code>.</p>\r\n<p> Valinnainen <code>options</code> tietue voi sisältää -asetukset, jotka vaikuttavat <code>query</code> arviointitoimintaan <code>target</code>. Nämä asetukset koskevat <code>target</code>.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "Palauttaa tiedon siitä, ovatko kaksi arvoa yhtä suuret.",
        "Documentation.LongDescription": "Palauttaa tyhjäarvon, jos kumpi tahansa argumenteista <code>value1</code> tai <code>value2</code> on tyhjäarvo, ja muutoin kohdetta Value.Equals vastaavan arvon.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "Korvaa syötteen metatietotiedot.",
        "Documentation.LongDescription": "Korvaa syötteen metatietotiedot.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "Korvaa arvon tyypin.",
        "Documentation.LongDescription": "Korvaa <code>value</code>:n tyypin annetulla <code>type</code>:lla.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Korvaa tietueen oletustyypin tietyllä tyypillä.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "Palauttaa kahden arvon eron.",
        "Documentation.LongDescription": "Palauttaa kohteiden <code>value1</code> ja <code>value2</code> eron. Valinnainen parametri <code>precision</code> voidaan määrittää. Oletusarvon mukaan käytetään kohdetta <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "Luo toiminnon, joka suoritettuna palauttaa HTTP-pyynnön suorittamisen tulokset binaariarvona.",
        "Documentation.LongDescription": "Luo toiminnon, joka suoritettuna palauttaa <code>method</code> -pyynnön suorittamisen tulokset <code>url</code> käyttäen HTTP:tä binaariarvona.\r\n    Valinnainen tietueparametri, <code>options</code>, voidaan antaa lisäominaisuuksien määrittämistä varten. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>Query</code> : Lis&#228;&#228; kyselyparametreja ohjelmallisesti URL-osoitteeseen ilman, ett&#228; sinun pit&#228;&#228; huolehtia ohjauskoodeista.</li>\r\n<li><code>ApiKeyName</code> : Jos kohdesivustossa on ohjelmointirajapinta-avaimen k&#228;site, t&#228;m&#228;n parametrin avulla voidaan m&#228;&#228;ritt&#228;&#228; sen avainparametrin nimi (ei arvo), jota on k&#228;ytett&#228;v&#228; URL-osoitteessa. Todellinen avainarvo annetaan tunnistetiedoissa.</li>\r\n<li><code>Headers</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen tietueena antaa lis&#228;otsikoita HTTP-pyynn&#246;lle.</li>\r\n<li><code>Timeout</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen kestona muuttaa HTTP-pyynn&#246;n aikakatkaisua. Oletusarvo on 100 sekuntia.</li>\r\n<li><code>ExcludedFromCacheKey</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen luettelona j&#228;tt&#228;&#228; pois n&#228;m&#228; HTTP-otsikkoavaimet tietojen v&#228;limuistiin tallentamisen laskutoimituksesta.</li>\r\n<li><code>IsRetry</code> : T&#228;m&#228;n loogisen arvon m&#228;&#228;ritt&#228;minen true-arvoksi ohittaa v&#228;limuistissa olevan vastauksen noudettaessa tietoja.</li>\r\n<li><code>ManualStatusHandling</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen luettelona est&#228;&#228; kaiken sis&#228;isen k&#228;sittelyn HTTP-pyynn&#246;ille, joiden vastauksella on jokin n&#228;ist&#228; tilakoodeista.</li>\r\n<li><code>RelativePath</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen tekstin&#228; liitt&#228;&#228; sen URL-perusosoitteeseen ennen pyynn&#246;n tekemist&#228;.</li>\r\n<li><code>Content</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen aiheuttaa sen, ett&#228; sen sis&#228;ll&#246;st&#228; tulee HTTP-pyynn&#246;n leip&#228;teksti.</li>\r\n</ul>\r\n\r\n    <br>\r\n    Huomaa, että tämä funktio on poistettu käytöstä useimmissa konteksteissa. Harkitse Web.Contents- tai Web.Headers-kohteen käyttämistä sen sijaan.\r\n",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "Suorita GET-pyyntö Bingille.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "Anna rekisteröintiisi liittyvän Azure Enterprise REST -sovellusrajapinnan päätepisteen URL-osoite",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Palauttaa Azure Enterprise -sovellusrajapinnalle annetun URL-osoitteen kutsun binaaritulokset.",
        "Documentation.Examples": [
          {
            "Description": "Palautetaan määritetyn raportin tulokset käyttämällä AzureEnterprise.Contents-funktiota.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "Taulukko"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "Palauttaa määritetyn blob-objektin sisällön Azure-tallennustilasäilöstä.",
        "Documentation.LongDescription": "Palauttaa BLOB-objektin sisällön URL-osoitteessa (<code>url</code>) Azure-tallennustilasäilöstä. <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>BlockSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka luetaan ennen tietokuluttajan odottamista. Oletus arvo on 4 megatavua.</li>\r\n<li><code>RequestSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka yritet&#228;&#228;n lukea yksitt&#228;isess&#228; HTTP-pyynn&#246;ss&#228; palvelimeen. Oletusarvo on 4 megatavua.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-asetus tukee tietojen tavallista nopeampaa lataamista palvelimesta m&#228;&#228;ritt&#228;m&#228;ll&#228; samanaikaisesti tehtyjen pyynt&#246;jen m&#228;&#228;r&#228;n muistin k&#228;yt&#246;n kustannuksella. Vaadittu muisti on (ConcurrentRequest * Request size). Oletusarvo on 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "Palauttaa määritetyn tiedoston sisällön Azure Data Lake Storage -tiedostojärjestelmästä.",
        "Documentation.LongDescription": "Palauttaa URL-osoitteessa <code>url</code> olevan tiedoston sisällön Azure Data Lake Storage -tiedostojärjestelmästä. <code>options</code> voidaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n<li><code>BlockSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka luetaan ennen tietokuluttajan odottamista. Oletus arvo on 4 megatavua.</li>\r\n<li><code>RequestSize</code> : Niiden tavujen m&#228;&#228;r&#228;, jotka yritet&#228;&#228;n lukea yksitt&#228;isess&#228; HTTP-pyynn&#246;ss&#228; palvelimeen. Oletusarvo on 4 megatavua.</li>\r\n<li><code>ConcurrentRequests</code> : ConcurrentRequests-asetus tukee tietojen tavallista nopeampaa lataamista palvelimesta m&#228;&#228;ritt&#228;m&#228;ll&#228; samanaikaisesti tehtyjen pyynt&#246;jen m&#228;&#228;r&#228;n muistin k&#228;yt&#246;n kustannuksella. Vaadittu muisti on (ConcurrentRequest * Request size). Oletusarvo on 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "Palauttaa binaariarvon arvioidun pituuden.",
        "Documentation.LongDescription": "Palauttaa <code>binary</code>:n likimääräisen pituuden tai virheen, jos tietolähde ei tue arvioitua pituutta.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Hae binaariarvon arvioitu pituus.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "Puskuroi binaariarvon muistiin.",
        "Documentation.LongDescription": "Puskuroi binaariarvon muistiin. Tämän kutsun tulos on vakaa binaariarvo. Sillä on siis selvitettävissä oleva pituus ja tavujärjestys.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Luo vakaa versio binaariarvosta.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "Yhdistää binaariluettelon yksittäiseksi binaariksi.",
        "Documentation.LongDescription": "Yhdistää binaariluettelon yksittäiseksi binaariksi.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "Luo binaarin annetusta arvosta",
        "Documentation.LongDescription": "Palauttaa <code>binary</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>, <code>Binary.From</code> palauttaa kohteen <code>null</code>.  Jos annettu <code>value</code> on <code>binary</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>binary</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>binary</code>-arvo tekstiesityksestä. Jos haluat lisätietoja, katso <code>Binary.FromText</code>.</li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Hae kohteen <code>\"1011\"</code> <code>binary</code>-arvo.",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "Muuntaa lukuluettelon binaariarvoksi.",
        "Documentation.LongDescription": "Muuntaa lukuluettelon binaariarvoksi.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "Purkaa tietojen koodauksen tekstimuodosta binaariksi.",
        "Documentation.LongDescription": "Palauttaa tekstiarvon <code>text</code> binaariksi muuntamisen tuloksen (<code>number</code>-luettelo). <code>encoding</code> voidaan määrittää ilmaisemaan tekstiarvossa käytetty koodaus.\r\n      Seuraavia <code>BinaryEncoding</code>-arvoja voidaan käyttää kohteelle <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64 -koodaus</li>\r\n        <li><code>BinaryEncoding.Hex</code>: heksadesimaalikoodaus</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Pura kohteen \"1011\" koodaus binaariksi.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "Pura kohteen 1011 koodaus binaariksi käyttäen heksadesimaalikoodausta.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "Lukee binaarivirran ja yrittää selvittää virran sisällön tyypin ja muodon tiedot.",
        "Documentation.LongDescription": "Palauttaa tietueen, jossa on kenttä Content.Type, joka sisältää johdetun MIME-tyypin.\r\n    Jos johdettu sisällön tyyppi on text/* ja havaitaan koodauksen koodisivu, palauttaa lisäksi kentän Content.Encoding, joka sisältää virran koodauksen.\r\n    Jos johdettu sisällön tyyppi on text/csv ja muoto on erotettu, palauttaa lisäksi kentän Csv.PotentialDelimiter, joka sisältää taulukon mahdollisten erottimien analysointia varten.\r\n    Jos johdettu sisällön tyyppi on text/csv ja muoto on fixed-width, palauttaa lisäksi kentän Csv.PotentialPositions, joka sisältää luettelon mahdollisten kiinteänlevyisten sarakepaikkojen analysointia varten.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "Palauttaa merkkien määrän.",
        "Documentation.LongDescription": "Palauttaa merkkien määrän.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "Muuntaa binaariarvon lukuluetteloksi.",
        "Documentation.LongDescription": "Muuntaa binaariarvon lukuluetteloksi.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "Koodaa binaaritiedot tekstimuotoon.",
        "Documentation.LongDescription": "Palauttaa binaarilukuluettelon <code>binary</code> tekstiarvoksi muuntamisen tuloksen. Valinnaisesti <code>encoding</code> voidaan määrittää ilmaisemaan tuotetussa tekstiarvossa käytetty koodaus.\r\n      Seuraavia <code>BinaryEncoding</code>-arvoja voidaan käyttää kohteelle <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: Base 64 -koodaus</li>\r\n        <li><code>BinaryEncoding.Hex</code>: heksadesimaalikoodaus</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "Luo muokatun virhetietueen, joka ei käynnistä varatoimintoa, kun näkymässä (Binary.View-näkymän kautta) määritetty käsittelijä palauttaa sen.",
        "Documentation.LongDescription": "Luo muokatun virhetietueen <code>errorRecord</code>:stä, joka ei käynnistä varatoimintoa, kun näkymässä (Binary.View-näkymän kautta) määritetty käsittelijä palauttaa sen.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "Luo funktion, jonka näkymälle määritetty käsittelijä voi kaapata (Binary.View-funktion kautta).",
        "Documentation.LongDescription": "<p>Luo näkymäfunktion <code>function</code> perusteella, jota voidaan käsitellä <code>Binary.View</code>.</p>\r\n<p><code>Binary.View</code> käsittelijän <code>OnInvoke</code> avulla voidaan määrittää käsittelijä view-funktiolle.</p>\r\n<p>Toimintoja, joissa on valmiiden toimintojen käsittelijät, jos <code>OnInvoke</code>käsittelijää ei ole määritetty, tai jos se ei käsittele näkymäfunktiota tai jos käsittelijä aiheuttaa virheen, <code>function</code> otetaan käyttöön näkymän yläosassa.</p>\r\n<p>Lisätietoja on julkaistuissa Power Query mukautetun liittimen ohjeissa <code>Binary.View</code> ja mukautettujen näkymäfunktioiden täydellinen kuvaus.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "Binaarimuoto, joka lukee 64-bittisen etumerkillisen kokonaisluvun, joka koodattiin käyttäen 7-bittistä vaihtelevan pituista koodausta.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 64-bittisen etumerkillisen kokonaisluvun, joka koodattiin käyttäen 7-bittistä vaihtelevan pituista koodausta.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "Binaarimuoto, joka lukee 64-bittisen etumerkittömän kokonaisluvun, joka koodattiin käyttäen 7-bittistä vaihtelevan pituista koodausta.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 64-bittisen etumerkittömän kokonaisluvun, joka koodattiin käyttäen 7-bittistä vaihtelevan pituista koodausta.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "Binaarimuoto, joka lukee 8-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 8-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "Binaarimuoto, joka lukee .NETin 16-tavuisen desimaaliarvon.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee .NETin 16-tavuisen desimaaliarvon.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "Binaarimuoto, joka lukee kahdeksantavuisen kaksoistarkkuuksisen IEEE-liukulukuarvon.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee kahdeksantavuisen kaksoistarkkuuksisen IEEE-liukulukuarvon.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "Palauttaa binaarimuodon, joka lukee sarjan kohteita ja palauttaa luettelon.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, joka lukee kohdejonon ja palauttaa <code>luettelon</code>. Parametri <code>binaryFormat</code> määrittää kunkin kohteen binaarimuodon. Luettavien kohteiden määrän voi määrittää kolmella tapaa: <ul><li>Jos kohdetta <code>countOrCondition</code> ei määritetä, binaarimuotoa luetaan, kunnes kohteita ei ole enää jäljellä.</li><li>Jos <code>countOrCondition</code> on luku, binaarimuoto lukee kyseisen määrän kohteita.</li><li>Jos <code>countOrCondition</code> on funktio, kyseinen funktio käynnistetään kullekin luetulle kohteelle.  Funktio palauttaa arvon true, jos lukemista jatketaan, ja false, jos kohteiden lukeminen lopetetaan.  Viimeinen kohde sisältyy luetteloon.</li><li>Jos <code>countOrCondition</code> on binaarimuoto, kohteiden määrän odotetaan sijaitsevan ennen luetteloa, ja määritettyä muotoa käytetään määrän lukemiseen.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "Lue tavuja tietojen loppuun saakka.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Lue kaksi tavua.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Lue tavuja, kunnes tavuarvo on vähintään kaksi.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "Binaarimuoto, joka lukee nolla tavua ja palauttaa tyhjäarvon.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee nolla tavua ja palauttaa tyhjäarvon.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "Palauttaa binaarimuodon, joka lukee tietueen.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, joka lukee tietueen.  Parametri <code>record</code> määrittää tietueen muodon.  Kullakin tietueen kentällä voi olla eri binaarimuoto.  Jos kenttä sisältää arvon, joka ei ole binaarimuotoarvo, mitään tietoja ei lueta kyseisen kentän kohdalla, ja arvo kaiutetaan tulokseen.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "Lue tietue, joka sisältää yhden 16-bittisen kokonaisluvun ja yhden 32-bittisen kokonaisluvun.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "Binaarimuoto, joka lukee 16-bittisen etumerkillisen kokonaisluvun.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 16-bittisen etumerkillisen kokonaisluvun.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "Binaarimuoto, joka lukee 32-bittisen etumerkillisen kokonaisluvun.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 32-bittisen etumerkillisen kokonaisluvun.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "Binaarimuoto, joka lukee 64-bittisen etumerkillisen kokonaisluvun.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 64-bittisen etumerkillisen kokonaisluvun.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "Binaarimuoto, joka lukee nelitavuisen perustarkkuuksisen IEEE-liukulukuarvon.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee nelitavuisen perustarkkuuksisen IEEE-liukulukuarvon.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "Palauttaa binaarimuodon, joka lukee tekstiarvon.",
        "Documentation.LongDescription": "Palauttaa binaarimuodon, joka lukee tekstiarvon.  <code>length</code> määrittää niiden tavujen määrän, joiden koodaus puretaan, tai tekstiä edeltävän pituuden binaarimuodossa.  Valinnainen kohteen <code>encoding</code> arvo määrittää tekstin koodauksen.  Jos kohdetta <code>encoding</code> ei määritetä, koodaus selvitetään Unicode-tavujärjestysmerkinnöistä.  Jos tavujärjestysmerkkejä ei ole, käytetään kohdetta <code>TextEncoding.Utf8</code>.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "Dekoodaa kaksi tavua ASCII-tekstinä.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "Pura koodaus ASCII-tekstistä, jossa tekstin pituus tavuina on ennen tekstiä tavuna.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "Binaarimuoto, joka lukee 16-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 16-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "Binaarimuoto, joka lukee 32-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 32-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "Binaarimuoto, joka lukee 64-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.LongDescription": "Binaarimuoto, joka lukee 64-bittisen etumerkittömän kokonaisluvun.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "Luo 8-bittisen kokonaisluvun annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa 8-bittisen kokonaislukumuotoisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Byte.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on 8-bittisen kokonaisluvun alueella ilman murtolukuosaa, palautetaan <code>value</code>. Jos sillä on murtolukuosa, luku pyöristetään käyttäen määritettyä pyöristystilaa. Oletuspyöristystila on <code>RoundingMode.ToEven</code>. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytetään <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi.. Jos haluat tietoja käytettävissä olevista pyöristystiloista, katso <code>Number.Round</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki 8-bittinen kokonaislukumuotoinen <code>number</code>-arvo kohteesta <code>\"4\"</code>.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hanki kohteen <code>\"4.5\"</code> 8-bittinen kokonaislukumuotoinen <code>number</code>-arvo käyttämällä kohdetta <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "Muuntaa luvun tekstimerkiksi.",
        "Documentation.LongDescription": "Palauttaa lukua vastaavan merkin.<br>\r\n    <br>\r\n    Annetun kohteen <code>number</code> tulee olla 21-bittinen Unicode-koodipiste.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Muunna luku vastaavaksi merkkiarvoksi.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "Muunna merkki luvuksi ja takaisin merkiksi.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "Muunna virnistävän hymiön heksadesimaalikoodipiste vastaavaksi UTF-16-korvauspariksi.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "Muuntaa merkin lukuarvoksi.",
        "Documentation.LongDescription": "Palauttaa kohdetta <code>character</code> vastaavan luvun.<br>\r\n    <br>\r\n    Tuloksena on annetun merkki- tai korvausparin edustama 21-bittinen Unicode-koodipiste.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Muunna merkki vastaavaksi lukuarvoksi.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "Muunna virnistävän hymiön UTF-16-korvauspari vastaavaksi heksadesimaalikoodipisteeksi.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "Palauttaa funktion, joka yhdistää tekstiluettelon käyttäen määritettyä erotinta.",
        "Documentation.LongDescription": "Palauttaa funktion, joka yhdistää tekstiarvoluettelon yksittäiseksi tekstiarvoksi käyttäen määritettyä erotinta.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä tekstiarvojen luettelo puolipiste-erottimen avulla.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "Yhdistä kahden sarakkeen teksti käyttämällä pilkkuerotinta ja CSV-tyylistä lainausmerkkiä.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "Palauttaa funktion, joka yhdistää tekstiluettelon käyttäen erottimien sarjaa.",
        "Documentation.LongDescription": "Palauttaa funktion, joka yhdistää tekstiarvojen luettelon yksittäiseksi tekstiarvoksi käyttäen erotinsarjaa.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä tekstiarvojen luettelo käyttäen erotinsarjaa.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "Palauttaa funktion, joka yhdistää tekstiluettelon käyttäen määritettyjä pituuksia.",
        "Documentation.LongDescription": "Palauttaa funktion, joka yhdistää tekstiarvoluettelon yksittäiseksi tekstiarvoksi käyttäen määritettyjä pituuksia.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä tekstiarvojen luettelo poimimalla määritetyt merkkien luvut kustakin syötearvosta.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "Yhdistä tekstiarvojen luettelo poimimalla määritetyt merkkien luvut sen jälkeen, kun olet ensin täyttänyt tuloksen mallitekstillä.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "Palauttaa funktion, joka yhdistää tekstiluettelon käyttäen määritettyjä tulossijainteja.",
        "Documentation.LongDescription": "Palauttaa funktion, joka yhdistää tekstiarvoluettelon yksittäiseksi tekstiarvoksi käyttäen määritettyjä tulossijainteja.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä tekstiarvojen luettelo sijoittamalla ne tulokseen määritetyissä sijainneissa.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "Palauttaa funktion, joka yhdistää tekstiluettelon käyttäen määritettyjä sijainteja ja pituuksia.",
        "Documentation.LongDescription": "Palauttaa funktion, joka yhdistää tekstiarvoluettelon yksittäiseksi tekstiarvoksi käyttäen määritettyjä tulossijainteja ja -pituuksia. Tyhjäarvopituus ilmaisee, että koko tekstiarvo tulee sisällyttää.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä tekstiarvojen luettelo käyttäen määritettyjä tulossijainteja ja -pituuksia.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "Palauttaa vertailufunktion määritetyn maa-asetuksen ja kirjainkokoherkkyyden perusteella.",
        "Documentation.LongDescription": "Palauttaa vertailufunktion, joka käyttää <code>culture</code> ja <code>ignoreCase</code> määrittämää kirjainkoon luottamuksellisuutta vertailujen tekemiseen.<br>\r\n      <br>\r\n      Vertailufunktio hyväksyy kaksi argumenttia ja palauttaa arvon -1, 0 tai 1 sen perusteella, onko ensimmäinen arvo pienempi, yhtä suuri tai suurempi kuin toinen.<br>\r\n      <br>\r\n      <code>ignoreCase</code>:n oletusarvo on epätosi. <code>culture</code> on oltava yksi .NET Frameworkin tukemista aluekohtaisista asemista (esimerkiksi en-US).\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Vertaa kohteita a ja A käyttäen kieliasetusta en-US ja selvitä, ovatko arvot yhtäläiset.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "Vertaa kohteita a ja A käyttäen kieliasetusta en-US kirjainkoko ohittaen ja selvitä, ovatko arvot yhtäläiset.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "Palauttaa yksilöivän jäsentunnuksen jäsenten ominaisuuden arvosta.",
        "Documentation.LongDescription": "Palauttaa yksilöivän jäsentunnuksen jäsenen ominaisuuden arvosta. <code>attribute</code>. Palauttaa tyhjäarvon mille tahansa muille arvoille.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "Palauttaa ominaisuuden avaimen.",
        "Documentation.LongDescription": "Palauttaa ominaisuuden <code>property</code> avaimen.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "Palauttaa currency-arvon annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>currency</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Currency.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on currency-alueella, kohteen <code>value</code> murtolukuosa pyöristetään 4 desimaalia sisältäväksi luvuksi ja palautetaan. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytetään <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksiKelvollinen currency-alue on välillä <code>-922,337,203,685,477.5808</code> ja <code>922,337,203,685,477.5807</code>. Kohteessa <code>Number.Round</code> on tietoja käytettävissä olevista pyöristystiloista, oletusasetus on <code>RoundingMode.ToEven</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki kohteen <code>\"1.23455\"</code> <code>currency</code>-arvo.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "Hanki kohteen <code>\"1.23455\"</code> <code>currency</code>-arvo käyttämällä kohdetta <code>RoundingMode.Down</code>.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "Palauttaa päivämääräosan.",
        "Documentation.LongDescription": "Palauttaa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvon päivämääräosan.\r\n      <ul>\r\n        <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo, josta päivämääräosa poimitaan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hae päivämääräosa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvosta, joka edustaa päivämäärää ja aikaa 14.5.2011 17.00.00.",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "Palauttaa luvun (0–6), joka ilmaisee annetun arvon viikonpäivän.",
        "Documentation.LongDescription": "Palauttaa luvun (0–6), joka ilmaisee annetun arvon <code>dateTime</code> viikonpäivän.\r\n  <ul>\r\n        <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n        <li><code>firstDayOfWeek</code>: <code>Day</code>-arvo ilmaisee, mitä päivää tulee pitää viikon ensimmäisenä päivänä. Sallitut arvot ovat Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday ja Day.Saturday. Jos tätä ei määritetä, käytetään maa-asetuksesta riippuvaista oletusarvoa.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nouda viikonpäivä muodossa maanantai, 21. helmikuuta 2011 käsitellen sunnuntaita viikon ensimmäisenä päivänä.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "Nouda viikonpäivä muodossa maanantai, 21. helmikuuta 2011 käsitellen maanantaita viikon ensimmäisenä päivänä.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "Palauttaa viikon päivän nimen.",
        "Documentation.LongDescription": "Palauttaa annetun <code>date</code> viikon päivän nimen. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nouda viikon päivän nimi.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "Palauttaa vuoden päivää edustavan luvun 1–366",
        "Documentation.LongDescription": "Palauttaa luvun, joka edustaa vuoden päivää annetussa <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvossa <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Vuoden päivä 1. maaliskuulle 2011.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "Palauttaa kuukauden päivien määrää ilmaisevan luvun 28–31",
        "Documentation.LongDescription": "Palauttaa kuukauden päivien määrän <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvossa <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo, jonka kuukauden päivien määrä palautetaan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Joulukuun päivien määrä kohteen <code>#date(2011, 12, 01)></code> edustamana.",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "Palauttaa päivän lopun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>edustaman päivän lopun. Aikavyöhyketiedot säilytetään.\r\n <ul>\r\n <li><code>dateTime</code>: <code>päivämäärä</code> <code>datetime</code> tai <code>datetimezone</code> arvo, josta päivän loppu lasketaan.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hae päivän loppu kohteelle 14.5.2011 17.00.00.",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "Hae päivän loppu kohteelle 17.5.2011 17.00.00 -7.00.",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "Palauttaa kuukauden lopun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>sisältävän kuukauden lopun.\r\n <ul>\r\n <li><code>dateTime</code>: <code>päivämäärä</code> <code>datetime</code> tai <code>datetimezone</code> arvo, josta kuukauden loppu lasketaan</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hae kuukauden loppu kohteelle 14.5.2011.",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "Hae kuukauden loppu kohteelle 17.5.2011 17.00.00 -7.00.",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "Palauttaa neljänneksen lopun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>sisältävän vuosineljänneksen lopun. Aikavyöhyketiedot säilytetään.\r\n <ul>\r\n <li><code>dateTime</code>: <code>date</code>, <code>datetime</code> tai <code>datetimezone</code> arvo, josta vuosineljänneksen loppu lasketaan.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä vuosineljänneksen loppu kohteelle 10. lokakuuta 2011 klo 8.00.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "Palauttaa viikon lopun.",
        "Documentation.LongDescription": "Palauttaa viikon lopun, joka sisältää <code>dateTime</code>.\r\n Tämä funktio määrittää tämän suhteellisen laskutoimituksen viikon ensimmäiseksi päiväksi valinnaisen <code>Day</code> <code>firstDayOfWeek</code>. Oletusarvo on <code>Day.Sunday</code>.\r\n <ul>\r\n <li><code>dateTime</code>: <code>päivämäärä</code> <code>datetime</code> tai <code>datetimezone</code> arvo, josta viikon viimeinen päivä lasketaan</li>\r\n <li><code>firstDayOfWeek</code>:  <i>[Valinnainen]</i> viikon ensimmäistä päivää edustava <code>Day.Type</code>-arvo. Mahdollisia arvoja ovat <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code> <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> ja <code>Day.Saturday.</code> . Oletusarvo on <code>Day.Sunday</code>.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hae viikon loppu kohteelle 14.5.2011.",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "Hae viikon loppu kohteelle 17.5.2011 17.00.00 -7.00, kun sunnuntai on viikon ensimmäinen päivä.",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "Palauttaa vuoden lopun.",
        "Documentation.LongDescription": "Palauttaa vuoden lopun, joka sisältää <code>dateTime</code>, mukaan lukien murtoluvun sekunnit. Aikavyöhyketiedot säilytetään.\r\n <ul>\r\n <li><code>dateTime</code>: <code>date</code>, <code>datetime</code> tai <code>datetimezone</code> arvo, josta vuoden loppu lasketaan.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hae vuoden loppu kohteelle 14.5.2011 17.00.00.",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "Hae tunnin loppu kohteelle 17.5.2011 17.00.00 -7.00.",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "Luo päivämäärän annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>date</code>-arvon annetusta kohteesta <code>value</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).\r\nJos annettu <code>value</code> on <code>null</code>, <code>Date.From</code> palauttaa kohteen <code>null</code>. Jos annettu <code>value</code> on <code>date</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>date</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>date</code>-arvo tekstiesityksestä. Jos haluat lisätietoja, katso <code>Date.FromText</code>.</li>\r\n        <li><code>datetime</code>: kohteen <code>value</code> päivämääräosa.</li>\r\n        <li><code>datetimezone</code>: kohdetta <code>value</code> vastaavan paikallisen datetime-arvon päivämääräosa.</li>\r\n        <li><code>number</code>: kohteen <code>value</code> ilmaisema OLE-automaatiopäivämäärää vastaavan datetime-arvon päivämääräosa.</li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>43910</code> <code>date</code>-arvoksi.",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "Muunna <code>#datetime(1899, 12, 30, 06, 45, 12)</code> <code>date</code>-arvoksi.",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "Luo päivämäärän paikallisista, yleisistä ja mukautetuista päivämäärämuodoista.",
        "Documentation.LongDescription": "Luo <code>date</code>-arvon tekstimuotoisesta esityksestä <code>text</code>. Lisäominaisuuksien määrittämiseen voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry osoitteeseen https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>null</code>-arvoisen päivämäärän, se johtaa päivämäärän parhaaseen mahdolliseen muotoiluun.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muotomääritteitä. Esimerkiksi <code>\"en-US\"</code> <code>\"MMM\"</code> on <code>\"Jan\", \"Feb\", \"Mar\", ... </code>, kun taas <code>\"ru-RU\"</code> <code>\"MMM\"</code> on <code>\"янв\", \"фев\", \"мар\", ...</code>. Kun <code>Format</code> on <code>null</code>-arvoinen, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>null</code>-arvoinen tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> voi olla myös tekstiarvo. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>\"2010-12-31\"</code> <code>date</code>-arvoksi.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "Muunna käyttämällä mukautettua muotoa ja saksalaista maa-asetusta.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "Etsi gregoriaanisen kalenterin päivämäärä, joka vastaa vuoden 1400 alkua Islamilaisessa kalenterissa.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä kuluvana päivänä, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.",
        "Documentation.LongDescription": "Ilmaisee, onko annettu datetime-arvo <code>dateTime</code> kuluvana päivänä, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.\r\n      <ul>\r\n      <li><code>dateTime</code>: laskettava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika nykyisenä päivänä.",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä kuluvana kuukautena, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.",
        "Documentation.LongDescription": "Ilmaisee, onko annettu datetime-arvo <code>dateTime</code> kuluvana kuukautena, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.\r\n      <ul>\r\n      <li><code>dateTime</code>: laskettava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvana kuukautena.",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä kuluvana vuosineljänneksenä, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.",
        "Documentation.LongDescription": "Ilmaisee, onko annettu datetime-arvo <code>dateTime</code> kuluvana vuosineljänneksenä, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.\r\n      <ul>\r\n      <li><code>dateTime</code>: laskettava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvana vuosineljänneksenä.",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä kuluvalla viikolla, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.",
        "Documentation.LongDescription": "Ilmaisee, onko annettu datetime-arvo <code>dateTime</code> kuluvalla viikolla, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.\r\n      <ul>\r\n      <li><code>dateTime</code>: laskettava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvalla viikolla.",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä kuluvana vuotena, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.",
        "Documentation.LongDescription": "Ilmaisee, onko annettu datetime-arvo <code>dateTime</code> kuluvana vuotena, jonka järjestelmän nykyinen päivämäärä ja aika määrittävät.\r\n      <ul>\r\n      <li><code>dateTime</code>: laskettava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvana vuotena.",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan päivän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan päivän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyisen järjestelmän ajan jälkeen oleva päivä seuraavana päivänä.",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan kuukauden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan kuukauden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyisen järjestelmän ajan jälkeen oleva kuukausi seuraavana kuukautena.",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan vuosineljänneksen aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan vuosineljänneksen aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyisen järjestelmän ajan jälkeen oleva vuosineljännes seuraavana vuosineljänneksenä.",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan viikon aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan viikon aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan viikon aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvana viikkona.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyisen järjestelmän ajan jälkeen oleva viikko seuraavalla viikolla.",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä seuraavan vuoden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan vuoden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyisen järjestelmän ajan jälkeen oleva vuosi seuraavana vuotena.",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen päivän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen päivän aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan päivän aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyistä järjestelmän aikaa ennen oleva päivä edellisenä päivänä.",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen kuukauden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen kuukauden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan kuukauden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyistä järjestelmän aikaa ennen oleva kuukausi edellisenä kuukautena.",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen vuosineljänneksen aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen vuosineljänneksen aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuosineljänneksen aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyistä järjestelmän aikaa ennen oleva vuosineljännes edellisenä vuosineljänneksenä.",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen viikon aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan viikon aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisenä viikkona järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvana viikkona.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyistä järjestelmän aikaa ennen oleva viikko edellisellä viikolla.",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä edellisen vuoden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen vuoden aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan vuoden aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyistä järjestelmän aikaa ennen oleva vuosi edellisenä vuotena.",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä kuluvana vuotena ja kuluvana päivänä tai sitä ennen järjestelmän nykyisen päivämäärän ja ajan määrittämänä.",
        "Documentation.LongDescription": "Ilmaisee, onko annettu datetime-arvo <code>dateTime</code> kuluvana vuotena ja kuluvana päivänä tai sitä ennen järjestelmän nykyisen päivämäärän ja ajan määrittämänä.\r\n      <ul>\r\n      <li><code>dateTime</code>: laskettava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvana vuotena tähän mennessä.",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "Ilmaisee, onko tämä päivämäärä karkausvuotena.",
        "Documentation.LongDescription": "Ilmaisee, onko annettu datetime-arvo <code>dateTime</code> karkausvuotena.\r\n <ul>\r\n        <li><code>dateTime</code>: laskettava <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko vuosi 2012 kohteen <code>#date(2012, 01, 01)</code> ilmaisemana karkausvuosi.",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "Palauttaa kuukausiosan.",
        "Documentation.LongDescription": "Palauttaa annetun <code>datetime</code>-arvon <code>dateTime</code> kuukausiosan.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kuukausi kohteessa #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "Palauttaa kuukauden nimen osan.",
        "Documentation.LongDescription": "Palauttaa annetun kohteen <code>date</code> kuukausiosan nimen. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Nouda kuukauden nimi.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "Palauttaa luvun, joka ilmaisee, millä vuoden vuosineljänneksellä päivämäärä on.",
        "Documentation.LongDescription": "Palauttaa luvun 1–4, joka ilmaisee, minä vuoden vuosineljänneksenä päivämäärä <code>dateTime</code> on. <code>dateTime</code> voi olla <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvo.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, millä vuoden vuosineljänneksellä päivämäärä #date(2011, 12, 31) on.",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "Palauttaa päivän alun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>edustaman päivän alun.\r\n <code>dateTime</code> on oltava <code>date</code>, <code>datetime</code> tai <code>datetimezone</code> arvo.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä päivän alku kohteelle 10. lokakuuta 2011 klo 8.00.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "Palauttaa kuukauden alun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>sisältävän kuukauden alun.\r\n <code>dateTime</code> on oltava <code>date</code>- tai <code>datetime</code>-arvo.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kuukauden alku kohteelle 10. lokakuuta 2011 klo 8.10.32.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "Palauttaa vuosineljänneksen alun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>sisältävän vuosineljänneksen alun.\r\n <code>dateTime</code> on oltava <code>date</code>, <code>datetime</code> tai <code>datetimezone</code> arvo.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä vuosineljänneksen alku kohteelle 10. lokakuuta 2011 klo 8.00.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "Palauttaa viikon alun.",
        "Documentation.LongDescription": "Palauttaa viikon alun, joka sisältää <code>dateTime</code>.\r\n <code>dateTime</code> on oltava <code>date</code>, <code>datetime</code> tai <code>datetimezone</code> arvo.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä viikon alku tiistaille 11. lokakuuta 2011.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "Selvitä viikon alku tiistaille 11.10.2011 käyttämällä viikon alkuna maanantaita.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "Palauttaa vuoden alun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>sisältävän vuoden alun.\r\n <code>dateTime</code> on oltava <code>date</code>, <code>datetime</code> tai <code>datetimezone</code> arvo.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä vuoden alku kohteelle 10. lokakuuta 2011 klo 8.10.32.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "Palauttaa tietueen, joka sisältää päivämääräarvon osat.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää annetun päivämääräarvon <code>date</code> osat.\r\n <ul>\r\n        <li><code>date</code>: <code>date</code>-arvo, josta sen osien tietue lasketaan.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#date(2011, 12, 31)</code> -arvo tietueeksi, joka sisältää päivämääräarvon osat.",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "Palauttaa päivämääräarvon tekstiesityksen.",
        "Documentation.LongDescription": "Palauttaa tekstimuotoisen esityksen kohteesta <code>date</code>. Lisäominaisuuksien määrittämiseksi voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>culture</code> on käytössä vain vanhoissa työnkuluissa. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry kohtaan https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>tyhjäarvoisen</code> päivämäärän, se johtaa päivämäärän oletusarvoiseen muotoiluun, jonka määrittää <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muodon määrittimiä. Esimerkiksi <code>\"en-US\"</code> <code>\"MMM\"</code> on <code>\"Jan\", \"Feb\", \"Mar\", ... </code>, kun taas <code>\"ru-RU\"</code> <code>\"MMM\"</code> on <code>\"янв\", \"фев\", \"мар\", ...</code>. Kun <code>Format</code> on <code>tyhjäarvoinen</code>, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>tyhjäarvoinen</code> tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> ja <code>culture</code> voivat olla myös tekstiarvoja. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#date(2010, 12, 31)</code> <code>text</code>-arvoksi. <i>Tulos voi vaihdella nykyisen maa-asetuksen mukaan.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "Muunna käyttämällä mukautettua muotoa ja saksalaista maa-asetusta.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "Etsi Hijri-kalenterin vuosi, joka vastaa Gregoriaanisen kalenterin päivää 1. tammikuuta 2000.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "Palauttaa luvun 1–6, joka ilmaisee, mille kuukauden viikolle tämä päivämäärä osuu.",
        "Documentation.LongDescription": "Palauttaa luvun 1–6, joka ilmaisee, mille kuukauden viikolle päivämäärä <code>dateTime</code> osuu.\r\n <ul>\r\n        <li><code>dateTime</code>: <code>datetime</code>-arvo, jolle kuukauden viikko määritetään.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Määritä, millä viikolla maaliskuun 15. päivä on vuonna 2011.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "Palauttaa luvun 1–54, joka ilmaisee, millä vuoden viikolla tämä päivämäärä on.",
        "Documentation.LongDescription": "Palauttaa luvun 1–54, joka ilmaisee, mihin vuoden viikkoon päivämäärä <code>dateTime</code> osuu.\r\n <ul>\r\n        <li><code>dateTime</code>: <code>datetime</code>-arvo, jolle vuoden viikko selvitetään.</li>\r\n        <li><code>firstDayOfWeek</code>: Valinnainen <code>Day.Type</code>-arvo, joka ilmaisee, mitä päivää pidetään uuden viikon alkuna (esimerkiksi <code>Day.Sunday</code>). Jos tätä ei määritetä, käytetään maa-aluesidonnaista oletusarvoa.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kuukauden alku kohteelle 10. lokakuuta 2011 klo 8.10.32.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "Selvitä, mikä vuoden viikko sisältää 27. maaliskuuta 2011, käyttämällä viikon alkuna maanantaita.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "Palauttaa vuosiosan.",
        "Documentation.LongDescription": "Palauttaa annetun <code>datetime</code>-arvon <code>dateTime</code> vuosiosan.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä vuosi kohteessa #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "Palauttaa annetun date-, datetime- tai datetimezone-arvon päivämääräosan.",
        "Documentation.LongDescription": "Palauttaa päivämääräosan kohteesta <code>dateTime</code>, annetusta <code>date</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvosta.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kohteen #datetime(2010, 12, 31, 11, 56, 02) päivämääräarvo.",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "Luo datetime-arvon annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>datetime</code>-arvon annetusta kohteesta <code>value</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).\r\nJos annettu <code>value</code> on <code>null</code>, <code>DateTime.From</code> palauttaa kohteen <code>null</code>. Jos annettu <code>value</code> on <code>datetime</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>datetime</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>datetime</code>-arvo tekstiesityksestä. Jos haluat lisätietoja, katso <code>DateTime.FromText</code>.</li>\r\n        <li><code>date</code>: <code>datetime</code> ja <code>value</code> päivämääräosana sekä <code>12:00:00 AM</code> aikaosana.</li>\r\n        <li><code>datetimezone</code>: paikallinen <code>datetime</code>-vastaavuus <code>value</code>.</li>\r\n        <li><code>time</code>: <code>datetime</code> ja OLE-automaatiopäivämäärää <code>0</code> vastaava päivämäärä päivämääräosana sekä <code>value</code> aikaosana.</li>\r\n        <li><code>number</code>: <code>datetime</code>-vastine kohteen <code>value</code> ilmaisemasta OLE-automaatiopäivämäärästä. </li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#time(06, 45, 12)</code> <code>datetime</code>-arvoksi.",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "Muunna <code>#date(1975, 4, 4)</code> <code>datetime</code>-arvoksi.",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "Luo datetime-arvon 64 bittiä pitkästä numerosta.",
        "Documentation.LongDescription": "Luo <code>datetime</code>-arvon arvosta <code>fileTime</code> ja muuntaa sen paikalliseksi aikavyöhykkeeksi. Filetime on Windowsin tiedoston ajan arvo, joka edustaa niiden 100 nanosekunnin aikavälien määrää, jotka ovat kuluneet 1. tammikuuta 1601 (eaa) kello 00.00 UTC-aikaa (Coordinated Universal Time) jälkeen.\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>129876402529842245</code> datetime-arvoksi.",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "Luo datetimezone-arvon paikallisista ja yleisistä datetime-muodoista.",
        "Documentation.LongDescription": "Luo <code>datetime</code>-arvon tekstimuotoisesta esityksestä <code>text</code>. Lisäominaisuuksien määrittämiseen voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry osoitteeseen https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>tyhjäarvoisen</code> päivämäärän, se johtaa päivämäärän parhaaseen mahdolliseen muotoiluun.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muodon määrittimiä. Esimerkiksi <code>\"en-US\"</code> <code>\"MMM\"</code> on <code>\"Jan\", \"Feb\", \"Mar\", ... </code>, kun taas <code>\"ru-RU\"</code> <code>\"MMM\"</code> on <code>\"янв\", \"фев\", \"мар\", ...</code>. Kun <code>Format</code> on <code>tyhjäarvoinen</code>, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>tyhjäarvoinen</code> tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> voi olla myös tekstiarvo. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>\"2010-12-31T01:30:00\"</code> datetime-arvoksi.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "Muunna <code>\"2010-12-31T01:30:00.121212\"</code> datetime-arvoksi.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "Muunna <code>\"2010-12-31T01:30:00\"</code> datetime-arvoksi.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "Muunna <code>\"20101231T013000\"</code> datetime-arvoksi.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo kuluvan tunnin aikana järjestelmän nykyisen päivämäärän ja ajan määrittämänä.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> kuluvan tunnin aikana järjestelmän nykyisen päivämäärän ja ajan määrittämänä.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvalla tunnilla.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-kohde kuluvan minuutin aikana järjestelmän nykyisen päivämäärän ja ajan määrittämänä.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> kuluvan minuutin aikana järjestelmän nykyisen päivämäärän ja ajan määrittämänä.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvalla minuutilla.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-kohde kuluvan sekunnin aikana järjestelmän nykyisen päivämäärän ja ajan määrittämänä.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> kuluvan sekunnin aikana järjestelmän nykyisen päivämäärän ja ajan määrittämänä.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko nykyinen järjestelmän aika kuluvalla sekunnilla.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo seuraavan tunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan tunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko tunti nykyisen järjestelmän ajan jälkeen seuraavan tunnin aikana.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo seuraavan minuutin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan minuutin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko minuutti nykyisen järjestelmän ajan jälkeen seuraavan minuutin aikana.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo seuraavan sekunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> seuraavan sekunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko sekunti nykyisen järjestelmän ajan jälkeen seuraavan sekunnin aikana.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo edellisen tunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen tunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan tunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko tunti ennen nykyistä järjestelmän aikaa edellisen tunnin aikana.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo edellisen minuutin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen minuutin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan minuutin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko minuutti ennen nykyistä järjestelmän aikaa edellisen minuutin aikana.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "Ilmaisee, onko tämä datetime-arvo edellisen sekunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.",
        "Documentation.LongDescription": "Ilmaisee, onko määritetty datetime-arvo <code>dateTime</code> edellisen sekunnin aikana järjestelmän nykyisen päivämäärän ja ajan perusteella. Huomaa, että tämä funktio palauttaa arvon false, kun sille välitetään arvo, joka on kuluvan sekunnin aikana.\r\n      <ul>\r\n      <li><code>dateTime</code>: arvioitava <code>datetime</code>- tai <code>datetimezone</code>-arvo.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko sekunti ennen nykyistä järjestelmän aikaa edellisen sekunnin aikana.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "Palauttaa annetun datetime-arvon aikaosan.",
        "Documentation.LongDescription": "Palauttaa annetun datetime-arvon <code>dateTime</code> aikaosan.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kohteen #datetime(2010, 12, 31, 11, 56, 02) aika-arvo.",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "Palauttaa tietueen, joka sisältää datetime-arvon osat.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää annetun datetime-arvon <code>dateTime</code> osat.\r\n <ul>\r\n        <li><code>dateTime</code>: <code>datetime</code>-arvo, josta sen osien tietue lasketaan.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#datetime(2011, 12, 31, 11, 56, 2)</code> -arvo tietueeksi, joka sisältää Date- ja Time-arvot.",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "Palauttaa datetime-arvon tekstiesityksen.",
        "Documentation.LongDescription": "Palauttaa tekstimuotoisen esityksen kohteesta <code>dateTime</code>. Lisäominaisuuksien määrittämiseksi voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>culture</code> on käytössä vain vanhoissa työnkuluissa. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry kohtaan https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>tyhjäarvoisen</code> päivämäärän, se johtaa päivämäärän oletusarvoiseen muotoiluun, jonka määrittää <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muodon määrittimiä. Esimerkiksi <code>\"en-US\"</code> <code>\"MMM\"</code> on <code>\"Jan\", \"Feb\", \"Mar\", ... </code>, kun taas <code>\"ru-RU\"</code> <code>\"MMM\"</code> on <code>\"янв\", \"фев\", \"мар\", ...</code>. Kun <code>Format</code> on <code>tyhjäarvoinen</code>, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>tyhjäarvoinen</code> tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> ja <code>culture</code> voivat olla myös tekstiarvoja. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#datetime(2010, 12, 31, 01, 30, 25)</code> <code>text</code>-arvoksi. <i>Tulos voi vaihdella nykyisen maa-asetuksen mukaan.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "Muunna käyttämällä mukautettua muotoa ja saksalaista maa-asetusta.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "Muunna ISO 8601 -mallin avulla.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "Luo datetimezone-arvon annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>datetimezone</code>-arvon annetusta kohteesta <code>value</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).\r\nJos annettu <code>value</code> on <code>null</code>, <code>DateTimeZone.From</code> palauttaa kohteen <code>null</code>. Jos annettu <code>value</code> on <code>datetimezone</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>datetimezone</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>datetimezone</code>-arvo tekstiesityksestä. Jos haluat lisätietoja, katso <code>DateTimeZone.FromText</code>.</li>\r\n        <li><code>date</code>: <code>datetimezone</code> ja <code>value</code> päivämääräosana, <code>12:00:00 AM</code> aikaosana ja paikallista aikavyöhykettä vastaava siirtymä.</li>\r\n        <li><code>datetime</code>: <code>datetimezone</code> ja <code>value</code> datetime-arvona sekä paikallista aikavyöhykettä vastaava siirtymä.</li>\r\n        <li><code>time</code>: <code>datetimezone</code> ja OLE-automaatiopäivämäärää <code>0</code> vastaava päivämäärä päivämääräosana, <code>value</code> aikaosana ja paikallista aikavyöhykettä vastaava siirtymä.</li>\r\n        <li><code>number</code>: <code>datetimezone</code> ja kohteen <code>value</code> ilmaisemaa OLE-automaatiopäivämäärää vastaava datetime-arvo sekä paikallista aikavyöhykettä vastaava siirtymä.</li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>\"2020-10-30T01:30:00-08:00\"</code> <code>datetimezone</code>-arvoksi.",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "Luo datetimezone-arvon 64 bittiä pitkästä numerosta.",
        "Documentation.LongDescription": "Luo <code>datetimezone</code>-arvon arvosta <code>fileTime</code> ja muuntaa sen paikalliseksi aikavyöhykkeeksi. Filetime on Windowsin tiedoston ajan arvo, joka edustaa niiden 100 nanosekunnin aikavälien määrää, jotka ovat kuluneet 1. tammikuuta 1601 (jaa) kello 00.00 UTC-aikaa (Coordinated Universal Time) jälkeen.\r\n    ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>129876402529842245</code> datetimezone-arvoksi.",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "Luo datetimezone-arvon paikallisista, yleisistä ja mukautetuista datetimezone-muodoista.",
        "Documentation.LongDescription": "Luo <code>datetimezone</code>-arvon tekstimuotoisesta esityksestä <code>text</code>. Lisäominaisuuksien määrittämiseen voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry osoitteeseen https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>tyhjäarvoisen</code> päivämäärän, se johtaa päivämäärän parhaaseen mahdolliseen muotoiluun.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muodon määrittimiä. Esimerkiksi <code>\"en-US\"</code> <code>\"MMM\"</code> on <code>\"Jan\", \"Feb\", \"Mar\", ... </code>, kun taas <code>\"ru-RU\"</code> <code>\"MMM\"</code> on <code>\"янв\", \"фев\", \"мар\", ...</code>. Kun <code>Format</code> on <code>tyhjäarvoinen</code>, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>tyhjäarvoinen</code> tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> voi olla myös tekstiarvo. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>\"2010-12-31T01:30:00-08:00\"</code> <code>datetimezone</code>-arvoksi.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "Muunna käyttämällä mukautettua muotoa ja saksalaista maa-asetusta.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "Muunna ISO 8601:n avulla.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "Poistaa aikavyöhyketiedot annetusta datetimezone-arvosta.",
        "Documentation.LongDescription": "Palauttaa #datetime-arvon kohteesta <code>dateTimeZone</code> niin, että aikavyöhyketiedot on poistettu.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Poista aikavyöhyketiedot arvosta #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0).",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "Muuntaa aikavyöhykeosan paikalliseksi aikavyöhykkeeksi.",
        "Documentation.LongDescription": "Muuttaa datetimezone-arvon <code>dateTimeZone</code> aikavyöhyketiedot paikallisiksi aikavyöhyketiedoiksi.\r\n    Jos kohteella <code>dateTimeZone</code> ei ole aikavyöhykeosaa, paikalliset aikavyöhyketiedot lisätään.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muuta kohteen #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) aikavyöhyketiedot paikalliseksi aikavyöhykkeeksi (oletus on PST).",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "Palauttaa tietueen, joka sisältää datetimezone-arvon osat.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää annetun datetimezone-arvon <code>dateTimeZone</code> osat.\r\n <ul>\r\n        <li><code>dateTimeZone</code>: <code>datetimezone</code>-arvo, josta sen osien tietue lasketaan.</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> -arvo tietueeksi, joka sisältää Date-, Time- ja Zone-arvot.",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "Palauttaa datetimezone-arvon tekstiesityksen.",
        "Documentation.LongDescription": "Palauttaa tekstimuotoisen esityksen kohteesta <code>dateTimeZone</code>. Lisäominaisuuksien määrittämiseksi voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>culture</code> on käytössä vain vanhoissa työnkuluissa. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry kohtaan https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>tyhjäarvoisen</code> päivämäärän, se johtaa päivämäärän oletusarvoiseen muotoiluun, jonka määrittää <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muodon määrittimiä. Esimerkiksi <code>\"en-US\"</code> <code>\"MMM\"</code> on <code>\"Jan\", \"Feb\", \"Mar\", ... </code>, kun taas <code>\"ru-RU\"</code> <code>\"MMM\"</code> on <code>\"янв\", \"фев\", \"мар\", ...</code>. Kun <code>Format</code> on <code>tyhjäarvoinen</code>, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>tyhjäarvoinen</code> tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> ja <code>culture</code> voivat olla myös tekstiarvoja. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> <code>text</code>-arvoksi. <i>Tulos voi vaihdella nykyisen maa-asetuksen mukaan.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "Muunna käyttämällä mukautettua muotoa ja saksalaista maa-asetusta.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "Muunna ISO 8601 -mallin avulla.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "Muuntaa aikavyöhykeosan UTC-aikavyöhykkeeksi.",
        "Documentation.LongDescription": "Muuttaa datetime-arvon <code>dateTimeZone</code> aikavyöhyketiedot UTC-aikavyöhyketiedoiksi.\r\n    Jos kohteella <code>dateTimeZone</code> ei ole aikavyöhykeosaa, UTC-aikavyöhyketiedot lisätään.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Muuta kohteen #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) aikavyöhyketiedot UTC-aikavyöhykkeeksi.",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "Muuttaa arvon aikavyöhykettä.",
        "Documentation.LongDescription": "Muuttaa arvon aikavyöhykettä.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "Muuttaa arvon aikavyöhykettä.",
        "Documentation.LongDescription": "Muuttaa arvon aikavyöhykettä.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "Luo Decimal-kohteen annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa Decimal-tyyppisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Double.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on Decimal-alueella, palautetaan <code>value</code>, ja muussa tapauksessa palautetaan virhe. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytä <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi.Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki kohteen <code>\"4.5\"</code> Decimal-tyyppinen <code>number</code>-arvo.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "Palauttaa Delta Lake -taulukon sisällön.",
        "Documentation.LongDescription": "Palauttaa Delta Lake -taulukon sisällön.",
        "Documentation.Category": "Käytetään tietoja",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "Luo Double-kohteen annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa Double-tyyppisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Double.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on Double-alueella, palautetaan <code>value</code>, ja muussa tapauksessa palautetaan virhe. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytä <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi.Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki kohteen <code>\"4.5\"</code> Double-tyyppinen <code>number</code>-arvo.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "Palauttaa keston päiväosan.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> päiväosan.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Poimi kahden päivämäärän välisten päivien määrä.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "Luo keston annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>duration</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>, <code>Duration.From</code> palauttaa kohteen <code>null</code>.  Jos annettu <code>value</code> on <code>duration</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>duration</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>duration</code>-arvo tekstimuotoisista kuluneen ajan muodoista (d.h:m:s). Jos haluat lisätietoja, katso <code>Duration.FromText</code>.</li>\r\n        <li><code>number</code>: <code>duration</code>, joka vastaa kohteen <code>value</code> ilmaisemia kokonaisia päiviä ja päivien osia.</li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>2.525</code> <code>duration</code>-arvoksi.",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "Palauttaa kestoarvon tekstimuotoisista kuluneen ajan muodoista (d.h:m:s).",
        "Documentation.LongDescription": "Palauttaa kestoarvon määritetystä tekstistä <code>text</code>. Tämä funktio voi jäsentää seuraavia muotoja:\r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (Kaikkien arvovälien päätearvot sisältyvät alueisiin)<br>\r\n        ddd: päivien määrä.<br>\r\n        hh: tuntien määrä, arvo 0–23.<br>\r\n        mm: minuuttien määrä, arvo 0–59.<br>\r\n        ss: sekuntien määrä, arvo 0–59.<br>\r\n        ff: sekunnin murto-osat, arvo 0–9999999.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>\"2.05:55:20\"</code> <code>duration</code>-arvoksi.",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "Palauttaa keston tuntiosan.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> tuntiosan.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Poimi tunnit kestoarvosta.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "Palauttaa keston minuuttiosan.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> minuuttiosan.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Poimi minuutit kestoarvosta.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "Palauttaa keston sekuntiosan.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> sekuntiosan.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Poimi sekunnit kestoarvosta.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "Palauttaa tietueen, joka sisältää keston osat.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää kestoarvon <code>duration</code> osat. \r\n  <ul>\r\n        <li><code>duration</code>: <code>duration</code>, josta tietue luodaan.</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#duration(2, 5, 55, 20)</code> sen osien tietueeksi, mukaan lukien päivät, tunnit, minuutit ja sekunnit tilanteen mukaan.",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "Palauttaa tekstin muodossa \"d.h:m:s\".",
        "Documentation.LongDescription": "Palauttaa tekstiesityksen annetusta kestoarvosta <code>duration</code> muodossa päivä.tunti:minuutti:sekunti.\r\n <ul>\r\n        <li><code>duration</code>: <code>kesto</code>, josta tekstiesitys lasketaan. </li>\r\n  <li><code>format</code>: <i>(valinnainen)</i> vanhentunut ja aiheuttaa virheen, jos ei ole tyhjäarvo</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#duration(2, 5, 55, 20)</code> tekstiarvoksi.",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "Palauttaa tämän keston kattamat päivät yhteensä.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> kattamat päivät yhteensä.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kestoarvon kattamat päivät yhteensä.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "Palauttaa tämän keston kattamat tunnit yhteensä.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> kattamat tunnit yhteensä.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kestoarvon kattamat tunnit yhteensä.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "Palauttaa tämän keston kattamat minuutit yhteensä.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> kattamat minuutit yhteensä.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kestoarvon kattamat minuutit yhteensä.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "Palauttaa tämän keston kattamat sekunnit yhteensä.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>duration</code> kattamat sekunnit yhteensä.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kestoarvon kattamat sekunnit yhteensä.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "Palauttaa virhetietueen annetuista tekstiarvoista syylle, sanomalle ja tiedoille.",
        "Documentation.LongDescription": "Palauttaa virhetietueen annetuista tekstiarvoista syylle, sanomalle ja tiedoille.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "Palauttaa vakioarvon M-lähdekoodiesityksen.",
        "Documentation.LongDescription": "Palauttaa vakioarvon M-lähdekoodiesityksen.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Hae lukuarvon M-lähdekoodiesitys.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "Hae päivämääräarvon M-lähdekoodiesitys.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "Hae tekstiarvon M-lähdekoodiesitys.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "Palauttaa M-lausekkeen arvioinnin tuloksen.",
        "Documentation.LongDescription": "Palauttaa M-lausekkeen <code>document</code> arvioinnin tuloksen niiden käytettävissä olevien tunnisteiden avulla, joihin voidaan viitata kohteen <code>environment</code> määrittämänä.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Arvioi yksinkertainen summa.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "Arvioi monimutkaisempi summa.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "Arvioi tekstiarvon yhdistäminen tunnisteen kanssa.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "Palauttaa tunnisteen M-lähdekoodiesityksen.",
        "Documentation.LongDescription": "Palauttaa tunnisteen <code>name</code> M-lähdekoodiesityksen.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Hae tunnuksen M-lähdekoodiesitys.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "Hae välilyönnin sisältävän tunnisteen M-lähdekoodiesitys.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "Palauttaa määritetyn tiedoston sisällön binaarimuodossa.",
        "Documentation.LongDescription": "Palauttaa tiedoston sisällön binaarimuodossa <code>path</code>. <code>options</code>-parametri on tällä hetkellä tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "Palauttaa tiedon siitä, pidetäänkö jotakin tiettyä funktiota tietolähteenä.",
        "Documentation.LongDescription": "Palauttaa tiedon siitä, pidetäänkö funktiota <code>function</code> tietolähteenä.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Kääntää maantieteellistä arvoa Well-Known Text (WKT) -muodossa edustavan tekstin jäsennetyksi tietueeksi.",
        "Documentation.LongDescription": "Kääntää maantieteellistä arvoa Well-Known Text (WKT) -muodossa edustavan tekstin jäsennetyksi tietueeksi. WKT on Open Geospatial Consortiumin (OGC) määrittämä vakiomuoto ja tavallinen sarjoitusmuoto, jota käyttävät tietokannat, kuten SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "Kääntää jäsennetyn maantieteellisen pistearvon sen Well-Known Text (WKT) -esitykseen.",
        "Documentation.LongDescription": "Kääntää jäsennetyn maantieteellisen pistearvon sen Well-Known Text (WKT) -esitykseen Open Geospatial Consortiumin (OGC) määrittämällä tavalla. Se on myös monien tietokantojen, kuten SQL Serverin, käyttämä sarjoitusmuoto.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Kääntää geometristä arvoa Well-Known Text (WKT) -muodossa edustavan tekstin jäsennetyksi tietueeksi.",
        "Documentation.LongDescription": "Kääntää geometristä arvoa Well-Known Text (WKT) -muodossa edustavan tekstin jäsennetyksi tietueeksi. WKT on Open Geospatial Consortiumin (OGC) määrittämä vakiomuoto ja tavallinen sarjoitusmuoto, jota käyttävät tietokannat, kuten SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "Kääntää jäsennetyn geometrisen pistearvon sen Well-Known Text (WKT) -esitykseen.",
        "Documentation.LongDescription": "Kääntää jäsennetyn geometrisen pistearvon sen Well-Known Text (WKT) -esitykseen Open Geospatial Consortiumin (OGC) määrittämällä tavalla. Se on myös monien tietokantojen, kuten SQL Serverin, käyttämä sarjoitusmuoto.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "Palauttaa GUID-arvon annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>Guid.Type</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Guid.From</code> palauttaa <code>null</code>-tyhjäarvon.  Suoritetaan tarkistus, jotta voidaan selvittää, onko annettu <code>value</code> hyväksyttävässä muodossa. Hyväksyttävät muodot on annettu esimerkeissä.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "GUID-tunnus voidaan antaa 32 yhtenäisenä heksadesimaalimerkkinä.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID-tunnus voidaan antaa 32 heksadesimaalimerkkinä, jotka on eroteltu yhdysmerkkien avulla lohkoihin: 8-4-4-4-12.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID-tunnus voidaan antaa 32 heksadesimaalimerkkinä, jotka on eroteltu yhdysmerkeillä ja sisällytetty aaltosulkeisiin.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "GUID-tunnus voidaan antaa 32 heksadesimaalimerkkinä, jotka on eroteltu yhdysmerkeillä ja sisällytetty sulkeisiin.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "Luo 16-bittisen kokonaisluvun annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa 16-bittisen kokonaislukumuotoisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Int16.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on 16-bittisen kokonaisluvun alueella ilman murtolukuosaa, palautetaan <code>value</code>. Jos sillä on murtolukuosa, luku pyöristetään käyttäen määritettyä pyöristystilaa. Oletuspyöristystila on <code>RoundingMode.ToEven</code>. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytetään <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi. Jos haluat tietoja käytettävissä olevista pyöristystiloista, katso <code>Number.Round</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki 16-bittinen kokonaislukumuotoinen <code>number</code>-arvo kohteesta <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hanki kohteen <code>\"4.5\"</code> 16-bittinen kokonaislukumuotoinen <code>number</code>-arvo käyttämällä kohdetta <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "Luo 32-bittisen kokonaisluvun annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa 32-bittisen kokonaislukumuotoisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Int32.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on 32-bittisen kokonaisluvun alueella ilman murtolukuosaa, palautetaan <code>value</code>. Jos sillä on murtolukuosa, luku pyöristetään käyttäen määritettyä pyöristystilaa. Oletuspyöristystila on <code>RoundingMode.ToEven</code>. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytetään <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi. Jos haluat tietoja käytettävissä olevista pyöristystiloista, katso <code>Number.Round</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki kohteen <code>\"4\"</code> 32-bittinen kokonaislukumuotoinen <code>number</code>-arvo.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hanki kohteen <code>\"4.5\"</code> 32-bittinen kokonaislukumuotoinen <code>number</code>-arvo käyttämällä kohdetta <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "Luo 64-bittisen kokonaisluvun annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa 64-bittisen kokonaislukumuotoisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Int64.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on 64-bittisen kokonaisluvun alueella ilman murtolukuosaa, palautetaan <code>value</code>. Jos sillä on murtolukuosa, luku pyöristetään käyttäen määritettyä pyöristystilaa. Oletuspyöristystila on <code>RoundingMode.ToEven</code>. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytetään <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi. Jos haluat tietoja käytettävissä olevista pyöristystiloista, katso <code>Number.Round</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki 64-bittinen kokonaislukumuotoinen <code>number</code>-arvo kohteesta <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hanki kohteen <code>\"4.5\"</code> 64-bittinen kokonaislukumuotoinen <code>number</code>-arvo käyttämällä kohdetta <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "Luo allekirjoitetun 8-bittisen kokonaisluvun annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa 8-bittisen kokonaislukumuotoisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Int8.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on 8-bittisen kokonaisluvun alueella ilman murtolukuosaa, palautetaan <code>value</code>. Jos sillä on murtolukuosa, luku pyöristetään käyttäen määritettyä pyöristystilaa. Oletuspyöristystila on <code>RoundingMode.ToEven</code>. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytetään <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi. Jos haluat tietoja käytettävissä olevista pyöristystiloista, katso <code>Number.Round</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki allekirjoitettu 8-bittinen kokonaislukumuotoinen <code>number</code>-arvo kohteesta <code>\"4\"</code>.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hanki kohteen <code>\"4.5\"</code> allekirjoitettu 8-bittinen kokonaislukumuotoinen <code>number</code>-arvo käyttämällä kohdetta <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "Palauttaa funktion rungolle abstraktin syntaksipuun (AST).",
        "Documentation.LongDescription": "<p> Palauttaa kohteen <code>function</code> rungolle abstraktin syntaksipuun (AST) normalisoituna <i>kohdelausekkeeksi</i>:\r\n<ul>\r\n <li>Funktion on oltava yksiargumenttinen lambda.</li>\r\n <li>Kaikki viittaukset funktiob parametriin korvataan kohteella <code>ItemExpression.Item</code>.</li> \n\r<li>AST yksinkertaistetaan niin, että se sisältää vain seuraavia solmutyyppejä:\r\n <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code>.</li>\r\n </ul>\r\n </li>\r\n</ul>\r\n</p>\r\n</p>Tuloksena on virhe, jos kohdelausekkeen AST-kohdetta ei voi palauttaa kohteelle <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa AST:n funktion rungolle <code>each _ <> null</code>",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "Palauttaa JSON-tiedoston sisällön.",
        "Documentation.LongDescription": "Palauttaa JSON-tiedoston sisällön.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "Tuottaa JSON-esityksen annetusta arvosta.",
        "Documentation.LongDescription": "<p>Tuottaa JSON-esityksen annetusta arvosta <code>value</code> käyttäen kohteen <code>encoding</code> määrittämää tekstin koodausta. Jos <code>encoding</code> jätetään pois, käytetään UTF8:aa. Arvot esitetään seuraavasti:</p>\r\n <ul>\r\n        <li>Tyhjäarvot, teksti ja loogiset arvot esitetään vastaavina JSON-tyyppeinä</li>\r\n        <li>Luvut esitetään lukuina JSON-esityksessä lukuun ottamatta sitä, että <code>#infinity</code>, <code>-#infinity</code> and <code>#nan</code> muunnetaan tyhjäarvoiksi</li>\r\n        <li>Luettelot esitetään JSON-matriiseina</li>\r\n        <li>Tietueet esitetään JSON-objekteina</li>\r\n        <li>Taulukot esitetään objektien matriiseina</li>\r\n        <li>Päivämäärät, ajat, datetime-kohteet, datetimezone-kohteet ja kestot estetään ISO-8601-tekstinä</li>\r\n        <li>Binaariarvot esitetään base-64-koodattuna tekstinä</li>\r\n        <li>Tyypit ja funktiot antavat tulokseksi virheen</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Muunna monimutkainen arvo JSON-muotoon.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "Muuntaa binaariarvon luetteloksi tekstiarvoja, jotka on jaettu osiin rivinvaihtojen kohdalla.  Jos lainaustyyli määritetään, rivinvaihdot saattavat olla lainausmerkkien sisällä.  Jos includeLineSeparators-arvo on true, rivinvaihtomerkit sisältyvät tekstiin.",
        "Documentation.LongDescription": "Muuntaa binaariarvon luetteloksi tekstiarvoja, jotka on jaettu osiin rivinvaihtojen kohdalla.  Jos lainaustyyli määritetään, rivinvaihdot saattavat olla lainausmerkkien sisällä.  Jos includeLineSeparators-arvo on true, rivinvaihtomerkit sisältyvät tekstiin.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "Muuntaa tekstiarvon luetteloksi tekstiarvoja, jotka on jaettu osiin rivinvaihtojen kohdalla. Jos includeLineSeparators-arvo on true, rivinvaihtomerkit sisältyvät tekstiin.",
        "Documentation.LongDescription": "Muuntaa tekstiarvon luetteloksi tekstiarvoja, jotka on jaettu osiin rivinvaihtojen kohdalla. Jos includeLineSeparators-arvo on true, rivinvaihtomerkit sisältyvät tekstiin.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (oletus) mitään lainaustoimintaa ei tarvita.</li>\r\n            <li><code>QuoteStyle.Csv:</code> lainaus on CSV-kohtainen. Lainausmerkkiä käytetään rajaamaan kyseiset alueet, ja lainausmerkkiparilla ilmaistaan yksittäinen lainausmerkki kyseisellä alueella. </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "Muuntaa tekstiluettelon binaariarvoksi käyttäen määritettyä koodausta ja lineSeparator-kohdetta. Määritetty lineSeparator-kohde liitetään kuhunkin riviin.  Jos sitä ei määritetä, käytetään rivinvaihtomerkkejä (CR ja LF).",
        "Documentation.LongDescription": "Muuntaa tekstiluettelon binaariarvoksi käyttäen määritettyä koodausta ja lineSeparator-kohdetta. Määritetty lineSeparator-kohde liitetään kuhunkin riviin.  Jos sitä ei määritetä, käytetään rivinvaihtomerkkejä (CR ja LF).",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "Muuntaa tekstiluettelon yksittäiseksi tekstiksi.  Määritetty lineSeparator-kohde lisätään kullekin riville.  Jos sitä ei määritetä, käytetään rivinvaihtomerkkejä (CR ja LF).",
        "Documentation.LongDescription": "Muuntaa tekstiluettelon yksittäiseksi tekstiksi.  Määritetty lineSeparator-kohde lisätään kullekin riville.  Jos sitä ei määritetä, käytetään rivinvaihtomerkkejä (CR ja LF).",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "Palauttaa arvon true, jos kaikilla lausekkeilla on arvo true.",
        "Documentation.LongDescription": "Palauttaa arvon true, jos kaikilla lausekkeilla on arvo true luettelossa <code>list</code>.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko kaikilla lausekkeilla arvo true luettelossa {true, true, 2 > 0}.",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "Selvitä, onko kaikilla lausekkeilla arvo true luettelossa {true, true, 2 < 0}.",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "Palauttaa arvon true, jos millä tahansa lausekkeella on arvo true.",
        "Documentation.LongDescription": "Palauttaa arvon true, jos millä tahansa luettelon <code>list</code> lausekkeella on arvo true.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko millään lausekkeella arvo true luettelossa {true, false, 2 > 0}.",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "Selvitä, onko millään lausekkeella arvo true luettelossa {2 = 0, false, 2 < 0}.",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "Palauttaa arvojen keskiarvon. Toimii number-, date-, datetime-, datetimezone- ja duration-arvojen kanssa.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> kohteiden keskiarvon. Tulos annetaan samana tietotyyppiä, joka luettelon arvoilla on. Toimii vain number-, date-, time-, datetime-, datetimezone- ja duration-arvojen kanssa.\r\n    Jos luettelo on tyhjä, palautetaan tyhjäarvo.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon lukujen <code>{3, 4, 6}</code> keskiarvo.",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "Selvitä päivämääräarvojen 1. tammikuuta 2011, 2. tammikuuta 2011 ja 3. tammikuuta 2011 keskiarvo.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "Puskuroi luettelon.",
        "Documentation.LongDescription": "Puskuroi luettelon <code>list</code> muistiin. Tämän kutsun tulos on vakaa luettelo.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Luo vakaa kopio luettelosta {1..10}.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "Palauttaa yksittäisen luettelon yhdistämällä useita luetteloita.",
        "Documentation.LongDescription": "Ottaa luetteloiden luettelon <code>lists</code> ja yhdistää luettelot yksittäiseksi uudeksi luetteloksi.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä kaksi yksinkertaista luetteloa {1, 2} ja {3, 4}.",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "Yhdistä kaksi luetteloa {1, 2} ja {3, {4, 5}}, joista toinen sisältää sisäkkäisen luettelon.",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "Palauttaa luettelon kohteiden määrän.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> kohteiden määrän.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1, 2, 3} arvojen määrä",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "Palauttaa arvoluettelon, josta on poistettu kaksoiskappaleet.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka sisältää kaikki luettelon <code>list</code> arvot niin, että kaksoiskappaleet on poistettu. Jos luettelo on tyhjä, tulos on tyhjä luettelo.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Poista kaksoiskappaleet luettelosta {1, 1, 2, 3, 3, 3}.",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "Palauttaa luettelon ensimmäisen arvon tai määritetyn oletusarvon, jos se on tyhjä.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> ensimmäisen kohteen tai valinnaisen oletusarvon <code>defaultValue</code>, jos luettelo on tyhjä.\r\n    Jos luettelo on tyhjä, eikä oletusarvoa ole määritetty, funktio palauttaa arvon <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1, 2, 3} ensimmäinen arvo",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "Selvitä luettelon {} ensimmäinen arvo Jos luettelo on tyhjä, palauta arvo -1.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "Palauttaa syötteestä löydettyjen luetteloarvojen leikkauksen.",
        "Documentation.LongDescription": "Palauttaa syöteluettelosta <code>lists</code> löydettyjen luetteloarvojen leikkauksen. Valinnainen parametri <code>equationCriteria</code> voidaan määrittää.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luetteloiden {1..5}, {2..6}, {3..7} leikkaus.",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "Ilmaisee, onko luettelossa kaksoiskappaleita.",
        "Documentation.LongDescription": "Palauttaa loogisen arvon siitä, onko luettelossa <code>list</code> kaksoiskappaleita. Palauttaa arvon <code>true</code>, jos luettelon arvot ovat erillisiä, ja arvon <code>false</code>, jos siinä on arvojen kaksoiskappaleita. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko luettelossa {1, 2, 3} vain erillisiä arvoja (eli siinä ei ole kaksoiskappaleita).",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "Selvitä, onko luettelossa {1, 2, 3, 3} vain erillisiä arvoja (eli siinä ei ole kaksoiskappaleita).",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "Palauttaa arvon true, jos luettelo on tyhjä.",
        "Documentation.LongDescription": "Palauttaa arvon <code>true</code>, jos luettelo <code>list</code> ei sisällä arvoja (pituus on 0). Jos luettelo sisältää arvoja (pituus on suurempi kuin 0), palauttaa arvon <code>false</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko luettelo {} tyhjä.",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "Selvitä, onko luettelo {1, 2} tyhjä.",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "Palauttaa luettelon viimeisen arvon tai määritetyn oletusarvon, jos se on tyhjä.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> viimeisen kohteen tai valinnaisen oletusarvon <code>defaultValue</code>, jos luettelo on tyhjä.\r\n    Jos luettelo on tyhjä, eikä oletusarvoa ole määritetty, funktio palauttaa arvon <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1, 2, 3} viimeinen arvo.",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "Selvitä luettelon {} viimeinen arvo tai anna arvo -1, jos se on tyhjä.",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "Palauttaa luettelon viimeisen arvon.  Voi vaihtoehtoisesti määrittää, montako arvoa palautetaan, tai ehdon.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> viimeisen kohteen. Jos luettelo on tyhjä, tapahtuu poikkeus.\r\n Tämä funktio hyväksyy valinnaisen parametrin <code>countOrCondition</code>, jonka avulla tuetaan useiden kohteiden keräämistä tai kohteiden suodattamista. <code>countOrCondition</code> voidaan määrittää kolmella tavalla:\r\n <ul>\r\n  <li>Jos luku määritetään, palautetaan enintään kyseinen määrä kohteita. </li>\r\n  <li>Jos ehto määritetään, palautetaan kaikki kohteet, jotka täyttävät kyseisen ehdon aluksi, alkaen luettelon lopusta. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. </li>\r\n  <li>Jos tämä parametri on tyhjäarvo, palautetaan luettelon viimeinen kohde.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {3, 4, 5, -1, 7, 8, 2} viimeinen arvo.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "Selvitä luettelosta {3, 4, 5, -1, 7, 8, 2} viimeiset arvot, jotka ovat suurempia kuin 0.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "Palauttaa enimmäisarvon tai oletusarvon, jos luettelo on tyhjä.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> suurimman kohteen tai valinnaisen oletusarvon <code>default</code>, jos luettelo on tyhjä.\r\n    Valinnainen comparisonCriteria-arvo <code>comparisonCriteria</code> voidaan määrittää luettelon kohteiden vertailutavan määrittämistä varten. Jos tämä parametri on tyhjäarvo, käytetään oletusvertailutoimintoa.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1, 4, 7, 3, -2, 5} enimmäisarvo.",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "Selvitä luettelon {} enimmäisarvo tai palauta arvo -1, jos se on tyhjä. ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "Palauttaa luettelon mediaaniarvon.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> mediaanikohteen. Tämä funktio palauttaa <code>null</code>-tyhjäarvon, jos luettelossa ei ole muita kuin <code>null</code>-tyhjäarvoja.\r\n    Jos kohteita on parillinen määrä, funktio valitsee pienemmän kahdesta mediaanikohteesta, ellei\r\n    luettelo muodostu kokonaan päivämääristä ja kellonajoista, kestoista ja kohteiden määristä, missä tapauksessa se palauttaa kahden kohteen keskiarvon.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon <code>{5, 3, 1, 7, 9}</code> mediaanikohde.",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "Palauttaa vähimmäisarvon tai oletusarvon, jos luettelo on tyhjä.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> pienimmän kohteen tai valinnaisen oletusarvon <code>default</code>, jos luettelo on tyhjä.\r\n    Valinnainen comparisonCriteria-arvo <code>comparisonCriteria</code> voidaan määrittää luettelon kohteiden vertailutavan määrittämistä varten. Jos tämä parametri on tyhjäarvo, käytetään oletusvertailutoimintoa.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1, 4, 7, 3, -2, 5} vähimmäisarvo.",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "Selvitä luettelon {} vähimmäisarvo tai palauta arvo -1, jos se on tyhjä. ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "Palauttaa luettelon useimmin esiintyvän arvon.",
        "Documentation.LongDescription": "Palauttaa luettelossa <code>list</code> useimmin esiintyvän kohteen. Jos luettelo on tyhjä, tapahtuu poikkeus. Jos samalla enimmäistiheydellä esiintyviä kohteita on luettelossa useita, niistä viimeinen valitaan.\r\n    Valinnainen <code>comparisonCriteria</code>-arvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Selvittää luettelossa <code>{\"A\", 1, 2, 3, 3, 4, 5}</code> useimmin esiintyvän kohteen.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "Selvittää luettelossa <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> useimmin esiintyvän kohteen.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "Palauttaa luettelossa useimmin esiintyvien arvojen luettelon.",
        "Documentation.LongDescription": "Palauttaa luettelossa <code>list</code> useimmin esiintyvän kohteen. Jos luettelo on tyhjä, tapahtuu poikkeus. Jos samalla enimmäistiheydellä esiintyviä kohteita on luettelossa useita, niistä viimeinen valitaan.\r\n    Valinnainen <code>comparisonCriteria</code>-arvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Selvittää luettelossa <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code> useimmin esiintyvät kohteet.",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "Palauttaa luettelon muiden kuin tyhjäarvoisten kohteiden määrän.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> muiden kuin tyhjäarvoisten kohteiden määrän.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "Palauttaa siirtymien luettelon syötteelle.",
        "Documentation.LongDescription": "Palauttaa siirtymien luettelon syöteluettelolle <code>list</code>.\r\n    Kun luetteloa muutetaan kohteen List.Transform avulla, sijaintien luettelon avulla voidaan antaa muunnokselle sijainnin käyttö.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1, 2, 3, 4, null, 5} arvojen siirtymät.",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "Palauttaa luettelon lukujen tulon.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>numbersList</code> muiden kuin tyhjäarvoisten lukujen tulon. Palauttaa tyhjäarvon, jos luettelossa ei ole muita kuin tyhjäarvoja.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon <code>{1, 2, 3, 3, 4, 5, 5}</code> lukujen tulo.",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "Palauttaa satunnaislukujen luettelon.",
        "Documentation.LongDescription": "Palauttaa välillä 0 ja 1 olevien satunnaislukujen luettelon, kun annetaan muodostettavien arvojen määrä ja valinnainen alkuarvo.\r\n<ul>\r\n   <li><code>count</code>: muodostettavien satunnaisten arvojen määrä.</li>\r\n   <li><code>seed</code>: <i>(valinnainen)</i> lukuarvo jota käytetään alkuarvona satunnaislukugeneraattorille. Jos tämä jätetään pois, muodostetaan satunnaislukujen luettelo aina, kun kutsut funktiota. Jos määrität alkuarvoksi luvun, jokainen funktion kutsu muodostaa saman satunnaislukujen luettelon.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Luo kolmen satunnaisluvun luettelo.",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "Luo kolmen satunnaisluvun luettelo määrittäen alkuarvo.",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "Palauttaa luettelon, joka ohittaa määritetyn määrän elementtejä luettelon alussa.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka poistaa luettelon <code>list</code> ensimmäisen elementin. Jos <code>list</code> on tyhjä, palautetaan tyhjä luettelo.\r\nTämä funktio hyväksyy valinnaisen parametrin <code>countOrCondition</code>, jonka avulla tuetaan useiden arvojen poistoa alla luetellulla tavalla.\r\n <ul>\r\n <li>Jos luku määritetään, poistetaan enintään kyseinen määrä kohteita. </li>\r\n <li>Jos ehto määritetään, palautettu luettelo alkaa kohteen <code>list</code> ensimmäisellä elementillä, joka täyttää ehdon. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. </li>\r\n <li>Jos tämä parametri on tyhjäarvo, käytetään oletustoimintaa. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo luettelosta {1, 2, 3, 4, 5} ilman ensimmäistä kolmea lukua.",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Luo luettelosta {5, 4, 2, 6, 1} luettelon, joka alkaa luvulla, joka on pienempi kuin 3.",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "Palauttaa luettelon, joka poistaa määritetyn määrän elementtejä luettelon lopusta.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka poistaa viimeiset <code>countOrCondition</code> elementtiä luettelon <code>list</code> lopusta. Jos luettelossa <code>list</code> on vähemmän kuin <code>countOrCondition</code> elementtiä, palautetaan tyhjä luettelo.\r\n <ul>\r\n <li>Jos luku määritetään, poistetaan enintään kyseinen määrä kohteita. </li>\r\n <li>Jos ehto määritetään, palautettu luettelo päättyy kohteen <code>list</code> ensimmäisellä ehdot täyttävällä elementillä lopusta alkaen. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. </li>\r\n <li>Jos tämä parametri on tyhjäarvo, vain yksi kohde poistetaan. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo luettelosta {1, 2, 3, 4, 5} ilman viimeistä kolmea lukua.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Luo luettelosta {5, 4, 2, 6, 4} luettelon, joka päättyy lukuun, joka on pienempi kuin 3.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "Poistaa kaikki null-tyhjäarvot määritetystä luettelosta.",
        "Documentation.LongDescription": "Poistaa kaikki null-tyhjäarvojen esiintymät kohteesta <code>list</code>. Jos luettelossa ei ole null-tyhjäarvoja, palautetaan alkuperäinen luettelo.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Poista null-tyhjäarvot luettelosta {1, 2, 3, null, 4, 5, null, 6}.",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "Tekee luettelon arvojen järjestyksestä käänteisen.",
        "Documentation.LongDescription": "Palauttaa luettelossa <code>list</code> olevien arvojen luettelon käänteisessä järjestyksessä.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo arvoista {1..10} käänteisessä järjestyksessä.",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "Palauttaa yhden luettelokohteen luettelolle, jonka pituus on yksi, ja aiheuttaa muussa tapauksessa poikkeuksen.",
        "Documentation.LongDescription": "Jos luettelossa <code>list</code> on vain yksi kohde, palauttaa kyseisen kohteen.\r\n    Jos luettelossa on useampi kuin yksi kohde tai luettelo on tyhjä, funktio aiheuttaa poikkeuksen.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1} yksittäinen arvo.",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "Selvitä luettelon {1, 2, 3} yksittäinen arvo.",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "Palauttaa yhden luettelokohteen luettelolle, jonka pituus on yksi, ja oletusarvon tyhjälle luettelolle.",
        "Documentation.LongDescription": "Jos luettelossa <code>list</code> on vain yksi kohde, palauttaa kyseisen kohteen.\r\n    Jos luettelo on tyhjä, funktio palauttaa tyhjäarvon, ellei valinnaista kohdetta <code>default</code> ole määritetty. Jos luettelossa on useampi kuin yksi kohde, funktio palauttaa virheen.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon {1} yksittäinen arvo.",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "Selvitä luettelon {} yksittäinen arvo.",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "Selvitä luettelon {} yksittäinen arvo. Jos se on tyhjä, palauta arvo -1.",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "Palauttaa luettelon, joka ohittaa määritetyn määrän elementtejä luettelon alussa.",
        "Documentation.LongDescription": "Palauttaa luettelon, joka ohittaa luettelon <code>list</code> ensimmäisen elementin. Jos <code>list</code> on tyhjä, palautetaan tyhjä luettelo.\r\nTämä funktio hyväksyy valinnaisen parametrin <code>countOrCondition</code>, jonka avulla tuetaan useiden arvojen ohittamista alla luetellulla tavalla.\r\n <ul>\r\n <li>Jos luku määritetään, ohitetaan enintään kyseinen määrä kohteita. </li>\r\n <li>Jos ehto määritetään, palautettu luettelo alkaa kohteen <code>list</code> ensimmäisellä elementillä, joka täyttää ehdon. Kun jokin kohde ei täytä ehtoa, muita kohteita ei enää arvioida. </li>\r\n <li>Jos tämä parametri on tyhjäarvo, käytetään oletustoimintaa. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Luo luettelo luettelosta {1, 2, 3, 4, 5} ilman ensimmäistä kolmea lukua.",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Luo luettelosta {5, 4, 2, 6, 1} luettelon, joka alkaa luvulla, joka on pienempi kuin 3.",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "Lajittelee tietoluettelon määritettyjen ehtojen perusteella.",
        "Documentation.LongDescription": "Lajittelee tietoluettelo <code>list</code> määritettyjen valinnaisten ehtojen mukaisesti.\r\n    Vertailuehdoksi voidaan määrittää valinnainen parametri <code>comparisonCriteria</code>. Tämä voi vaatia seuraavia arvoja:\r\n    <ul>\r\n    <li> Jos haluat hallita järjestystä, vertailuehto voi olla Order enum -arvo. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> Lajitteluun käytettävän avaimen laskemista varten voidaan käyttää yhden argumentin funktiota. </li>\r\n    <li> Voit valita sekä avaimen että hallintajärjestyksen. Vertailuehto voi olla avaimen ja järjestyksen sisältävä luettelo (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> Vertailua voi hallita täysin käyttämällä kahden argumentin funktiota. Tämä funktio välittää luettelon kaksi kohdetta (mitkä tahansa kaksi kohdetta missä tahansa järjestyksessä). Funktion tulee palauttaa jokin seuraavista arvoista:\r\n        <ul>\r\n            <li> <code>-1</code>: Ensimmäinen kohde on pienempi kuin toinen kohde.</li>\r\n            <li> <code>0</code>: Kohteet ovat yhtä suuria.</li>\r\n            <li> <code>1</code>: Ensimmäinen kohde on suurempi kuin toinen kohde.</li>\r\n        </ul>\r\n        Value.Compare on menetelmä, jota voidaan käyttää tämän logiikan delegoinnissa. </li>\r\n    </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Lajittele luettelo {2, 3, 1}.",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Lajittele luettelo {2, 3, 1} laskevaan järjestykseen.",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "Lajittele luettelo {2, 3, 1} laskevaan järjestykseen käyttäen Value.Compare-menetelmää.",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "Palauttaa näytteeseen perustuvan arvion keskihajonnasta.",
        "Documentation.LongDescription": "Palauttaa näytteeseen perustuvan arvion luettelon <code>numbersList</code> arvojen keskihajonnasta.\r\n    Jos <code>numbersList</code> on lukuluettelo, palautetaan luku.\r\n    Poikkeus aiheutuu, kun kohdataan tyhjä luettelo tai luettelo kohteita, joiden tyyppi ei ole <code>number</code>.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Selvitä lukujen 1–5 keskihajonta.",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "Palauttaa luettelon kohteiden summan.",
        "Documentation.LongDescription": "Palauttaa luettelon <code>list</code> muiden kuin tyhjäarvoisten arvojen summan.  Palauttaa tyhjäarvon, jos luettelossa ei ole muita kuin tyhjäarvoja.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luettelon <code>{1, 2, 3}</code> lukujen summa.",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "Palauttaa syötteestä löydettyjen luetteloarvojen yhdistämisen.",
        "Documentation.LongDescription": "Ottaa luetteloiden luettelon <code>lists</code>, yhdistää yksittäisten luetteloiden kohteet ja palauttaa ne tulosteluettelossa. Tuloksena palautettu luettelo sisältää kaikkien syöteluetteloiden kaikki kohteet.\r\n    Tämä toiminto säilyttää perinteisen kaksoiskappalesemantiikan, joten arvojen kaksoiskappaleet täsmätään osana Union-kohdetta.\r\n    Valinnainen laskutoimituksen ehtoarvo <code>equationCriteria</code> voidaan määrittää ohjaamaan samanlaisuustestausta. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Luo yhdistäminen luettelosta {1..5}, {2..6}, {3..7}.",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "Palauttaa luettelon luetteloista yhdistämällä useissa luetteloissa samassa sijainnissa olevat kohteet.",
        "Documentation.LongDescription": "Ottaa luettelon luetteloista, <code>lists</code>, ja palauttaa luettelon luetteloista yhdistämällä samassa sijainnissa olevat kohteet.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Zippaa kaksi yksinkertaista luetteloa: {1, 2} ja {3, 4}.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Zippaa kaksi yksinkertaista eri pituista luetteloa: {1, 2} ja {3}.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "Luo loogisen arvon annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>logical</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>, <code>Logical.From</code> palauttaa kohteen <code>null</code>.  Jos annettu <code>value</code> on <code>logical</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>logical</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>logical</code>-arvo tekstimerkkijonosta, joko <code>\"true\"</code> tai <code>\"false\"</code>. Jos haluat lisätietoja, katso <code>Logical.FromText</code>.</li>\r\n        <li><code>number</code>: <code>false</code>, jos <code>value</code> on <code>0</code>, ja <code>true</code> muussa tapauksessa.</li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>2</code> <code>logical</code>-arvoksi.",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "Luo loogisen arvon tekstiarvoista true ja false.",
        "Documentation.LongDescription": "Luo tekstiarvosta <code>text</code> loogisen arvon, joka on joko true tai false. Jos <code>text</code> sisältää eri merkkijonon, tapahtuu poikkeus. Tekstiarvossa <code>text</code> kirjainkoko on merkitsevä.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Luo looginen arvo tekstimerkkijonosta true.",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "Luo looginen arvo tekstimerkkijonosta a.",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "Palauttaa tekstin true tai false, kun annetaan looginen arvo.",
        "Documentation.LongDescription": "Luo loogisesta arvosta <code>logicalValue</code> tekstiarvon, joko <code>true</code> tai <code>false</code>. Jos <code>logicalValue</code> ei ole looginen arvo, tapahtuu poikkeus.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Luo tekstiarvo loogisesta kohteesta <code>true</code>.",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "Palauttaa luvun itseisarvon.",
        "Documentation.LongDescription": "Palauttaa luvun itseisarvon <code>number</code>. Jos <code>number</code> on tyhjäarvo, <code>Number.Abs</code> palauttaa tyhjäarvon.\r\n    <ul>\r\n        <li><code>number</code>: kohde <code>number</code>, jolle itseisarvo lasketaan.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Luvun -3 itseisarvo.",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "Palauttaa luvun arkuskosinin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> arkuskosinin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "Palauttaa luvun arkussinin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> arkussinin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "Palauttaa luvun arkustangentin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> arkustangentin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "Palauttaa tavun, jossa kukin bitti on syötteen vastakohta.",
        "Documentation.LongDescription": "Palauttaa bittitason Not-toiminnon kohteelle <code>number</code> suorittamisen tuloksen.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "Palauttaa luvun kosinin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> kosinin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kulman 0 kosini.",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "Palauttaa luvun hyperbolisen kosinin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> hyperbolisen kosinin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "Korottaa vakion e annettuun potenssiin.",
        "Documentation.LongDescription": "Palauttaa tuloksen vakion e korottamisesta potenssiin <code>number</code> (eksponenttifunktio).\r\n      <ul>\r\n        <li><code>number</code>: <code>number</code>, jolle eksponenttifunktio lasketaan. Jos <code>number</code> on tyhjäarvo, <code>Number.Exp</code> palauttaa tyhjäarvon. </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Korota vakio e potenssiin 3.",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "Palauttaa luvun kertoman.",
        "Documentation.LongDescription": "Palauttaa luvun <code>number</code> kertoman.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luvun 10 kertoma.",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "Luo luvun annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>number</code>-arvon annetusta kohteesta <code>value</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).\r\nJos annettu <code>value</code> on <code>null</code>, <code>Number.From</code> palauttaa kohteen <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>number</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>number</code>-arvo tekstiesityksestä. Tavalliset tekstimuodot käsitellään (\"15\", \"3,423.10\", \"5.0E-10\"). Jos haluat lisätietoja, katso <code>Number.FromText</code>.</li>\r\n        <li><code>logical</code>: 1 arvolle <code>true</code>, 0 arvolle <code>false</code>.</li>   \r\n        <li><code>datetime</code>: kaksoistarkkuuksinen liukuluku, joka sisältää OLE-automaation vastaavan päivämäärän.</li>\r\n        <li><code>datetimezone</code>: kaksoistarkkuuksinen liukuluku, joka sisältää paikallista päivämäärää ja aikaa <code>value</code> vastaavan OLE-automaation päivämäärän.</li>\r\n        <li><code>date</code>: kaksoistarkkuuksinen liukuluku, joka sisältää OLE-automaation vastaavan päivämäärän.</li>\r\n        <li><code>time</code>: ilmaistaan päivien osina.</li>\r\n        <li><code>duration</code>: ilmaistaan kokonaisina päivinä ja päivien osina.</li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hae kohteen <code>number</code> <code>\"4\"</code>-arvo.",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hae kohteen <code>number</code> <code>#datetime(2020, 3, 20, 6, 0, 0)</code>-arvo.",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "Hanki kohteen <code>\"12.3%\"</code> <code>number</code>-arvo.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "Luo lukuja tavallisista tekstimuodoista (\"15\", \"3,423.10\", \"5.0E-10\").",
        "Documentation.LongDescription": "Palauttaa <code>number</code>-arvon annetusta tekstiarvosta <code>text</code>.\r\n <ul>\r\n  <li><code>text</code>: lukuarvon tekstiesitys. Esityksen on oltava tavallisessa lukumuodossa, kuten 15, 3,423.10 tai 5.0E-10.</li>\r\n  <li><code>culture</code>: valinnainen maa-asetus, joka hallitsee sitä, miten <code>text</code> tulkitaan (esimerkiksi en-US).</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hae luvun <code>\"4\"</code> lukuarvo.",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Hae luvun <code>\"5.0e-10\"</code> lukuarvo.",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "Ilmaisee, onko arvo parillinen.",
        "Documentation.LongDescription": "Ilmaisee, onko arvo <code>number</code> parillinen, palauttamalla arvon <code>true</code>, jos se on parillinen, ja muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Tarkista, onko 625 parillinen luku.",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "Tarkista, onko 82 parillinen luku.",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "Ilmaisee, onko arvo muu kuin luku (NaN).",
        "Documentation.LongDescription": "Ilmaisee, onko arvo muu kuin luku (NaN). Palauttaa arvon <code>true</code>, jos <code>number</code> on <code>Number.IsNaN</code>, ja muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Tarkista, onko nolla jaettuna nollalla NaN.",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "Tarkista, onko 1 jaettuna nollalla NaN.",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "Ilmaisee, onko arvo pariton.",
        "Documentation.LongDescription": "Ilmaisee, onko arvo pariton. Palauttaa arvon <code>true</code>, jos <code>number</code> on pariton luku, ja muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Tarkista, onko 625 pariton luku.",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "Tarkista, onko 82 pariton luku.",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "Palauttaa luvun luonnollisen logaritmin.",
        "Documentation.LongDescription": "Palauttaa luvun <code>number</code> luonnollisen logaritmin. Jos <code>number</code> on tyhjäarvo, <code>Number.Ln</code> palauttaa tyhjäarvon.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hae luvun 15 luonnollinen logaritmi.",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "Palauttaa luvun logaritmin määritettyyn kantalukuun (oletus on e).",
        "Documentation.LongDescription": "Palauttaa luvun <code>number</code> logaritmin määritettyyn kantalukuun <code>base</code>. Jos <code>base</code> ei ole määritetty, oletusarvo on Number.E.\r\n    Jos <code>number</code> on tyhjäarvo, <code>Number.Log</code> palauttaa tyhjäarvon.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hae luvun 2 kymmenkantainen (base 10) logaritmi.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "Hae luvun 2 luonnollinen logaritmi.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "Palauttaa luvun kymmenkantaisen (base 10) logaritmin.",
        "Documentation.LongDescription": "Palauttaa luvun <code>number</code> kymmenkantaisen (base 10) logaritmin. Jos <code>number</code> on tyhjäarvo, <code>Number.Log10</code> palauttaa tyhjäarvon.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Hae luvun 2 kymmenkantainen (base 10) logaritmi.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "Palauttaa pyöristetyn luvun. Numeroiden määrä ja pyöristystila voidaan määrittää.",
        "Documentation.LongDescription": "Palauttaa pyöristyksen <code>number</code> tuloksen lähimpään numeroon. Jos <code>number</code> on tyhjäarvo, <code>Number.Round</code> palauttaa tyhjäarvon.<br>\r\n      <br>\r\n      Oletusarvoisesti <code>number</code> pyöristetään lähimpään kokonaislukuun, ja suhteet katkaistaan pyöristämällä lähimpään parilliseen numeroon (käyttäen <code>RoundingMode.ToEven</code>, joka tunnetaan myös nimellä \"pankkiirin pyöristys\").<br>\r\n      <br>\r\n      Nämä oletusarvot voidaan kuitenkin ohittaa seuraavien valinnaisten parametrien avulla.\r\n      <ul>\r\n        <li><code>digits</code>: aiheuttaa sen, että <code>number</code> pyöristetään tiettyyn määrään desimaaleja.</li>\r\n        <li><code>roundingMode</code>: ohittaa suhteiden katkaisemisen oletuskäyttäytymisen, kun <code>number</code> on kahden mahdollisen pyöristyksen keskipisteessä\r\n      (Katso kohteesta <code>RoundingMode.Type</code> mahdollisia arvoja).</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Pyöristä luku 1,234 lähimpään kokonaislukuun.",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "Pyöristä luku 1,56 lähimpään kokonaislukuun.",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "Pyöristä luku 1,2345 kahteen desimaaliin.",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "Pyöristä luku 1,2345 kolmeen desimaaliin (pyöristys ylöspäin).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "Pyöristä luku 1,2345 kolmeen desimaaliin (pyöristys alaspäin).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "Palauttaa tuloksen positiivisten lukujen pyöristämisestä ylöspäin ja negatiivisten alaspäin. Numeroiden määrä voidaan määrittää.",
        "Documentation.LongDescription": "Palauttaa tuloksen luvun <code>number</code> pyöristämisestä luvun etumerkin perusteella. Tämä funktio pyöristää positiiviset luvut ylöspäin ja negatiiviset alaspäin.\r\n    Jos <code>digits</code> määritetään, <code>number</code> pyöristetään <code>digits</code> desimaaliin.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Pyöristä luku -1,2 nollasta poispäin.",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "Pyöristä luku 1,2 nollasta poispäin.",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "Pyöristä luku -1,234 kahteen desimaaliin nollasta poispäin.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "Palauttaa edelliseksi suurimman kokonaisluvun. Numeroiden määrä voidaan määrittää.",
        "Documentation.LongDescription": "Palauttaa tuloksen pyöristäen <code>number</code> alaspäin edelliseen suurimpaan kokonaislukuun. Jos <code>number</code> on tyhjäarvoinen, tämä funktio palauttaa tyhjäarvon.\r\n\r\n    Jos <code>digits</code> annetaan, <code>number</code> pyöristetään määritettyyn desimaaliin.\r\n",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Pyöristä luku 1,234 alaspäin kokonaislukuun.",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "Pyöristä luku 1,999 alaspäin kokonaislukuun.",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "Pyöristä luku 1,999 alaspäin kahteen desimaaliin.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "Palauttaa tuloksen positiivisten lukujen pyöristämisestä alaspäin ja negatiivisten ylöspäin. Numeroiden määrä voidaan määrittää.",
        "Documentation.LongDescription": "Palauttaa tuloksen luvun <code>number</code> pyöristämisestä luvun etumerkin perusteella. Tämä funktio pyöristää positiiviset luvut alaspäin ja negatiiviset ylöspäin.\r\n    Jos <code>digits</code> määritetään, <code>number</code> pyöristetään <code>digits</code> desimaaliin.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Pyöristä luku -1,2 nollaa kohti.",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "Pyöristä luku 1,2 nollaa kohti.",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "Pyöristä luku -1,234 kahteen desimaaliin nollaa kohti.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "Palauttaa seuraavaksi suurimman kokonaisluvun. Numeroiden määrä voidaan määrittää.",
        "Documentation.LongDescription": "Palauttaa tuloksen pyöristäen <code>number</code> ylöspäin seuraavaan suurimpaan kokonaislukuun. Jos <code>number</code> on tyhjäarvoinen, tämä funktio palauttaa tyhjäarvon.\r\n    Jos <code>digits</code> annetaan, <code>number</code> pyöristetään määritettyyn desimaaliin.\r\n",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Pyöristä luku 1,234 ylöspäin kokonaislukuun.",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "Pyöristä luku 1,999 ylöspäin kokonaislukuun.",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "Pyöristä luku 1,234 ylöspäin kahteen desimaaliin.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "Palauttaa arvon 1, jos luku on positiivinen, arvon -1, jos se on negatiivinen, ja arvon 0, jos se on nolla.",
        "Documentation.LongDescription": "Palauttaa arvon 1, jos <code>number</code> on positiivinen luku, arvon -1, jos se on negatiivinen luku, ja arvon 0, jos se on nolla.\r\n    Jos <code>number</code> on tyhjäarvo, <code>Number.Sign</code> palauttaa tyhjäarvon.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luvun 182 etumerkki.",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "Selvitä luvun -182 etumerkki.",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "Selvitä luvun 0 etumerkki.",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "Palauttaa luvun sinin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> sinin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kulman 0 sini.",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "Palauttaa luvun hyperbolisen sinin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> hyperbolisen sinin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "Palauttaa luvun neliöjuuren.",
        "Documentation.LongDescription": "Palauttaa luvun <code>number</code> neliöjuuren.\r\n    Jos <code>number</code> on tyhjäarvo, <code>Number.Sqrt</code> palauttaa tyhjäarvon. Jos se on negatiivinen arvo, <code>Number.NaN</code> palautetaan (muu kuin luku).",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä luvun 625 neliöjuuri.",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "Selvitä luvun 85 neliöjuuri.",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "Palauttaa luvun tangentin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> tangentin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kulman 1 tangentti.",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "Palauttaa luvun hyperbolisen tangentin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>number</code> hyperbolisen tangentin.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "Muuntaa annetun luvun tekstiksi.",
        "Documentation.LongDescription": "Muuntaa numeerisen arvon <code>number</code> tekstiarvoksi kohteessa<code>format</code> määritetyn muodon mukaan.<br>\r\n    <br>\r\n    Muoto on tekstiarvo, joka ilmaisee, miten luku tulee muuntaa. Jos haluat lisätietoja tuetuista muotoarvoista, siirry osoitteisiin https://go.microsoft.com/fwlink/?linkid=2241210 ja https://go.microsoft.com/fwlink/?linkid=2240884.<br>\r\n    <br>\r\n    Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US) ohjaamaan kohteen <code>format</code> kulttuurisidonnaista toimintaa.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Muunna luku tekstiksi määrittämättä muotoa.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "Muunna luku eksponenttimuotoon.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "Muunna luku prosenttimuotoon, jossa on vain yksi desimaali.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "Palauttaa OData-palvelun tarjoamien OData-syötteiden taulukon.",
        "Documentation.LongDescription": "Palauttaa OData-palvelun tarjoaman OData-syötteiden taulukon uri-osoitteesta <code>serviceUri</code>, otsikot <code>headers</code>. Totuusarvo, joka määrittää, käytetäänkö rinnakkaisia yhteyksiä, tai valinnainen tietueparametri <code>options</code> saatetaan määrittää seuraavien asetusten hallintaa varten:\r\n    <ul>\r\n    <li><code>Query</code>: lisää kyselyparametrit URL-osoitteeseen ohjelmallisesti tarvitsematta huolehtia ohjausmerkeistä. </li>\r\n    <li> <code>Headers</code>: tämän arvon määrittäminen tietueena antaa lisäotsikoita HTTP-pyyntöön.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: tämän arvon määrittäminen luettelona jättää nämä HTTP-otsikot pois välimuistiin sijoitettavien tietojen laskennasta.</li>\r\n    <li> <code>ApiKeyName</code>: Jos kohdesivustossa on jokin API-avaimen käsite, tämän parametrin avulla voidaan määrittää sen avainparametrin nimi (ei arvo), jota on käytettävä URL-osoitteessa. Todellinen avaimen arvo annetaan tunnistetiedossa.</li>\r\n    <li> <code>Timeout</code>: Tämän arvon määrittäminen kestona muuttaa HTTP-pyynnön aikakatkaisua. Oletusarvo on 600 sekuntia.</li>\r\n    <li> <code>EnableBatch</code>: looginen arvo (true/false), joka määrittää, sallitaanko OData $batch -pyynnön muodostaminen, jos MaxUriLength ylitetään (oletusasetus on false).</li>\r\n    <li> <code>MaxUriLength</code>: Luku, joka ilmaisee OData-palveluun lähetetyn sallitun uri-osoitteen enimmäispituuden. Jos tämä ylitetään, ja EnableBatch on true, pyyntö tehdään OData $batch -päätepisteelle, ja muussa tapauksessa se epäonnistuu (oletusarvo on 2048).</li>\r\n    <li> <code>Concurrent</code>: Looginen arvo (true/false), jonka asetus true määrittää, että palvelun pyynnöt tehdään samanaikaisesti. Kun asetus on false, pyynnöt tehdään järjestyksessä. Kun tätä ei määritetä, arvon määrittää palvelun AsynchronousRequestsSupported-huomautus. Jos palvelu ei määritä, tuetaanko AsynchronousRequestsSupported-kohdetta, pyynnöt tehdään järjestyksessä.</li>\r\n    <li> <code>ODataVersion</code>: Luku (3 tai 4), joka määrittää tälle OData-palvelulle käytettävän OData-protokollaversion. Kun tätä ei määritetä, kaikkia tuettuja versioita pyydetään. Palvelun version määrittää palvelun palauttama OData-Version-otsikko.</li>\r\n    <li> <code>FunctionOverloads</code>: Looginen arvo (true/false), jonka asetus true määrittää, että funktion tuonnin ylikuormitukset luetellaan siirtymistoiminnassa erillisinä merkintöinä, ja arvo false määrittää, että funktion tuonnin ylilataukset luetellaan yhtenä union-funktiona siirtymistoiminnossa. Oletusarvo V3:lle on false. Oletusarvo V4:lle on true.</li>\r\n    <li> <code>MoreColumns</code>: Looginen arvo (true/false), jonka asetus true lisää Lisää sarakkeita -sarakkeen kuhunkin entiteettisyötteeseen, joka sisältää avoimia tyyppejä ja polymorfisia tyyppejä. Tämä sisältää kentät, joita ei ole määritetty perustyypissä. Kun arvo on false, tätä kenttää ei ole. Oletusarvo on false.</li>\r\n    <li> <code>IncludeAnnotations</code>: Pilkuin eroteltu luettelo nimitilan täydellisiä termien nimiä tai malleja, jotka sisällytetään yleismerkillä *. Oletusarvon mukaan mitään huomautuksista ei sisällytetä.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code> : Pilkuin eroteltu luettelo nimitilan täydellisiä termien nimiä tai malleja, jotka sisällytetään metatietotiedostopyyntöihin. Yleismerkki on *. Sisältää oletusarvon mukaan samat huomautukset kuin IncludeAnnotations.</li>\r\n    <li> <code>OmitValues</code> : Antaa OData-palvelun välttää tiettyjen arvojen kirjoittamisen vastauksiin. Jo tämä vahvistetaan, kyseiset arvot päätellään pois jätetyistä kentistä. Asetuksia ovat seuraavat:\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code> : antaa OData-palvelun jättää pois null-tyhjäarvot.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Implementation</code> : määrittää käytettävän OData-liittimen toteutuksen. Kelvolliset arvot ovat 2.0 tai tyhjäarvo.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Muodosta yhteys TripPinin OData-palveluun.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "Palauttaa tuloksen siitä, kun ODBC-ohjaimen SQL-ominaisuudet yritetään johtaa.",
        "Documentation.LongDescription": "Palauttaa SQL-ominaisuuksien yhteysmerkkijonon <code>connectionString</code> kanssa ODBC:n avulla suorittamisen yrittämisen tuloksen. <code>connectionString</code> voi olla teksti tai ominaisuuden ja arvon parien tietue. Ominaisuusarvot voivat olla teksti tai luku.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Palauta pääteltävät SQL-ominaisuudet yhteysmerkkijonolle.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "Palauttaa Parquet-tiedoston sisällön taulukkona.",
        "Documentation.LongDescription": "Palauttaa Parquet-tiedoston sisällön taulukkona. Vaihtoehtoihin sisältyvät seuraavat:\n    <ul>\n    <li> <code>TypeMapping</code>: Tekstiarvo, joka hallinnoi yhdistämismäärityksen oletustyyppiä tiedostoja kirjoitettaessa ja luettaessa. Oletusarvo on tyhjä ja pyrkii vastaamaan alkuperäistä tyyppiä mahdollisimman hyvin. SQL-arvo tuottaa SQL Serverin kanssa yhteensopivimpia tuloksia. </li>\n    </ul>",
        "Documentation.Category": "Käytetään tietoja",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Käytetään tietoja",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "Palauttaa prosenttiarvon annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>percentage</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>, <code>Percentage.From</code> palauttaa tuloksen <code>null</code>. Jos annettu <code>value</code> on <code>text</code>-tyyppinen merkkijono, jossa on lopussa prosenttimerkki, palautetaan muunnettu desimaaliluku. Käytä muussa tapauksessa kohdetta <code>Number.From</code> sen muuntamiseen <code>number</code>-tyyppiseksi arvoksi. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki kohteen <code>\"12.3%\"</code> <code>percentage</code>-arvo.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "Palauttaa tietokehysten määrän RData-tiedostosta.",
        "Documentation.LongDescription": "Palauttaa tietokehysten määrän RData-tiedostosta.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "Yhdistää annetun luettelon tietueet.",
        "Documentation.LongDescription": "Yhdistää annetun kohteen <code>records</code> tietueet. Jos <code>records</code> sisältää muita kuin tietuearvoja, palautetaan virhe.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Luo yhdistetty tietue tietueista.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "Palauttaa tietueen kenttien määrän.",
        "Documentation.LongDescription": "Palauttaa tietueen <code>record</code> kenttien määrän.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kenttien määrä tietueessa.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "Palauttaa kenttien nimet.",
        "Documentation.LongDescription": "Palauttaa tietueen <code>record</code> kenttien nimet tekstinä.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kenttien nimet tietueessa.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "Palauttaa kenttien arvojen luettelon.",
        "Documentation.LongDescription": "Palauttaa tietueen <code>record</code> kenttien arvojen luettelon.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Selvitä kenttien arvot tietueessa.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "Luo tietueen taulukosta muodossa {[Name = name, Value = value]}.",
        "Documentation.LongDescription": "Palauttaa tietueen tietuetaulukosta <code>table</code>, joka sisältää kenttien nimiä ja arvojen nimiä <code>{[Name = name, Value = value]}</code>. Jos kenttien nimet eivät ole yksilöivät, tapahtuu poikkeus.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Luo tietueen taulukosta muodossa Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}).",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "Palauttaa luettelon arvoja, joka sisältää syötetietueen kenttien arvot.",
        "Documentation.LongDescription": "Palauttaa luettelon arvoja, joka sisältää kenttien arvot syötteestä <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Poimi kenttien nimet tietueesta.",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "Palauttaa abstraktin syntaksipuun (AST), joka edustaa pääsyä rivilausekkeen sisällä olevaan sarakkeeseen.",
        "Documentation.LongDescription": "Palauttaa abstraktin syntaksipuun (AST), joka edustaa pääsyä rivin sarakkeeseen <code>columnName</code> rivilausekkeen sisällä.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Luo AST-kohteen, joka edustaa pääsyä sarakkeeseen CustomerName.",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "Palauttaa funktion rungolle abstraktin syntaksipuun (AST).",
        "Documentation.LongDescription": "<p> Palauttaa kohteen <code>function</code>rungolle abstraktin syntaksipuun (AST) normalisoituna <i>rivilausekkeeksi</i>:\r\n<ul>\r\n <li>Funktion on oltava yksiargumenttinen lambda.</li>\r\n <li>Kaikki viittaukset funktion parametriin korvataan kohteella <code>RowExpression.Row</code>.</li> \n\r<li>Kaikki viittaukset sarakkeisiin korvataan kohteella <code>RowExpression.Column(<i>columnName</i>)</code>.</li>\r\n <li>AST yksinkertaistetaan niin, että se sisältää vain seuraavia solmutyyppejä:\r\n <ul>\r\n <li><code>Constant</code></li>\r\n <li><code>Invocation</code></li>\r\n <li><code>Unary</code></li>\r\n <li><code>Binary</code></li>\r\n <li><code>Jos</code></li>\r\n <li><code>FieldAccess</code>.</li> \n\r</ul>\r\n </li>\r\n</ul>\r\n</p>\r\n</p>Tuloksena on virhe, jos rivilausekkeen AST-kohdetta ei voi palauttaa kohteelle <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa AST-kohteen funktion <code>each [CustomerID] = \"ALFKI\"</code> rungolle",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "Luo Single-kohteen annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa Single-tyyppisen <code>number</code>-arvon annetusta kohteesta <code>value</code>. Jos annettu <code>value</code> on <code>null</code>-tyhjäarvo, <code>Double.From</code> palauttaa arvon <code>null</code>. Jos annettu <code>value</code> on <code>number</code>, joka on Single-alueella, palautetaan <code>value</code>, ja muussa tapauksessa palautetaan virhe. Jos annettu <code>value</code> on mitä tahansa muuta tyyppiä, käytä <code>Number.FromText</code> sen muuntamiseen <code>number</code>-arvoksi.Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Hanki kohteen <code>\"1.5\"</code> Single-tyyppinen <code>number</code>-arvo.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "Palauttaa tietojen taulukon Smartsheet-indeksin päätepisteestä.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "Tekee kutsun Smartsheet 2.0 REST -ohjelmointirajapinnalle määritetyssä päätepisteessä ja muuntaa palautetun tietoelementin taulukoksi.",
        "Documentation.Examples": [
          {
            "Description": "Noutaa käyttäjätietojen taulukon Smartsheet-ohjelmointirajapinnasta",
            "Code": "Smartsheet.Content(\"users\")",
            "Result": "Smartsheet-ohjelmointirajapinnan palauttama käyttäjätietojen taulukko"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi minkä tahansa määritetyn erottimen kohdalla.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi minkä tahansa määritetyn erottimen kohdalla.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte pilkulla tai puolipisteellä ohittaen lainausmerkit ja lainausmerkeissä olevat erottimet ja aloittaen syötteen alusta.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "Jaa syöte pilkulla tai puolipisteellä ohittaen lainausmerkit ja lainausmerkeissä olevat erottimet ja aloittaen syötteen lopusta.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi määritetyn erottimen mukaisesti.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi määritetyn erottimen mukaisesti.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte pilkulla ohittaen lainausmerkein kirjoitetut pilkut.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi kunkin sarjassa määritetyn erottimen kohdalla.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi kunkin sarjassa määritetyn erottimen kohdalla.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte pilkulla ja puolipisteellä syötteen alusta alkaen.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "Jaa syöte pilkulla ja puolipisteellä, käsittele lainausmerkkejä muiden merkkien tavoin ja aloita syötteen lopusta.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi kunkin määritetyn pituuden mukaisesti.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi kunkin määritetyn pituuden mukaisesti.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte kahteen ensimmäiseen merkkiin ja sen jälkeen seuraavaan kolmeen merkkiin syötteen alusta alkaen.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "Jaa syöte kolmeen ensimmäiseen merkkiin ja sen jälkeen kahteen seuraavaan merkkiin syötteen lopusta alkaen.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi kunkin määritetyn sijainnin kohdalla.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi kunkin määritetyn sijainnin kohdalla.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte määritetyissä sijainnissa syötteen alusta alkaen.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "Jaa syöte määritetyn sijainnin ja pituusparin mukaan syötteen lopusta alkaen.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi määritettyjen siirtymien ja pituuksien mukaisesti.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin tekstiluetteloksi määritettyjen siirtymien ja pituuksien mukaan. Tyhjäarvo ilmaisee, että kaikki jäljellä olevat syötteet tulee sisällyttää.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte määritetyn sijainnin ja pituusparin mukaan syötteen alusta alkaen. Huomaa, että tämän esimerkin alueet ovat päällekkäin.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "Jaa syöte määritetyn sijainnin ja pituusparin mukaan syötteen lopusta alkaen.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "Jaa syöte kiinteän pituiseksi postinumeroksi ja sen jälkeen vaihtelevan pituiseksi kaupungin nimeksi.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi määritetyn pituuden jälkeen toistuvasti.",
        "Documentation.LongDescription": "Palauttaa funktion, joka jakaa tekstin osiin tekstiluetteloksi määritetyn pituuden jälkeen toistuvasti.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Jaa syöte toistuvasti kolmen merkin lohkoihin syötteen alusta alkaen.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "Jaa syöte toistuvasti kolmen merkin lohkoihin syötteen alusta alkaen.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "Palauttaa taulukon arvioidun rivien määrän.",
        "Documentation.LongDescription": "Palauttaa <code>table</code> rivien arvioidun määrän tai virheen, jos tietolähde ei tue arviota.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Arvioi suuren taulukon erillisten kaupungin ja osavaltion yhdistelmien määrä, jota voidaan käyttää sarakkeiden kardinaliteettiarviona. Kardinaliteettiarviot ovat niin tärkeitä, että eri tietolähteet (kuten SQL Server) tukevat tätä tiettyä arviota ja käyttävät usein HyperLogLog-nimistä algoritmia.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "Palauttaa taulukon sarakkeiden määrän.",
        "Documentation.LongDescription": "Palauttaa taulukon <code>table</code> sarakkeiden määrän.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Selvitä taulukon sarakkeiden määrä.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "Palauttaa sarakkeiden nimet luettelona.",
        "Documentation.LongDescription": "Palauttaa taulukon <code>table</code> sarakkeiden nimet tekstiluettelona.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Selvitä taulukon sarakkeiden nimet.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "Palauttaa ensimmäisen rivin tai määritetyn oletusarvon.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>table</code> ensimmäisen rivin tai valinnaisen oletusarvon <code>default</code>, jos taulukko on tyhjä.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Etsi taulukon ensimmäinen rivi.",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Etsi taulukon <code>({})</code> ensimmäinen rivi tai palauta [a = 0, b = 0], jos se on tyhjä.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "Palauttaa taulukon ensimmäisen rivin ensimmäisen sarakkeen tai määritetyn oletusarvon.",
        "Documentation.LongDescription": "Palauttaa taulukon <code>table</code> ensimmäisen rivin ensimmäisen sarakkeen tai määritetyn oletusarvon.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "Ilmaisee, sisältääkö taulukko erillisiä rivejä (ei kaksoiskappaleita).",
        "Documentation.LongDescription": "Ilmaisee, sisältääkö <code>table</code> erillisiä rivejä (ei kaksoiskappaleita). Palauttaa arvon <code>true</code>, jos rivit ovat erilliset, ja muussa tapauksessa arvon <code>false</code>.\r\n    Valinnainen parametri <code>comparisonCriteria</code> määrittää, mitkä taulukon sarakkeet testataan kaksoiskappaleiden varalta. Jos <code>comparisonCriteria</code> ei ole määritettynä, kaikki sarakkeet testataan.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko taulukko erillinen.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "Selvitä, onko taulukko erillinen sarakkeessa.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "Ilmaisee, sisältääkö taulukko rivejä.",
        "Documentation.LongDescription": "Ilmaisee, sisältääkö <code>table</code> rivejä. Palauttaa arvon <code>true</code>, jos rivejä ei ole (eli taulukko on tyhjä), ja muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko taulukko tyhjä.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "Selvitä, onko taulukko <code>({})</code> tyhjä.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "Palauttaa määritetyn taulukon avaimet.",
        "Documentation.LongDescription": "Palauttaa määritetyn taulukon avaimet.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Hae taulukon avainluettelo.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "Palauttaa viimeisen rivin tai määritetyn oletusarvon.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>table</code> viimeisen rivin tai valinnaisen oletusarvon <code>default</code>, jos taulukko on tyhjä.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Etsi taulukon viimeinen rivi.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "Etsi taulukon <code>({})</code> viimeinen rivi tai palauta [a = 0, b = 0], jos se on tyhjä.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "Palauttaa taulukon rivien määrän.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>table</code> rivien määrän.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Selvitä taulukon rivien määrä.",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "Palauttaa yksittäisen rivin taulukossa.",
        "Documentation.LongDescription": "Palauttaa yksittäisen rivin yhdellä rivillä (<code>table</code>). Jos kohteella <code>table</code> on useampi kuin yksi rivi, tapahtuu poikkeus.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Palauta yksittäinen rivi taulukossa.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "Luo luettelon sisäkkäisiä luetteloita taulukon sarakearvoista.",
        "Documentation.LongDescription": "Luo luettelon sisäkkäisiä luetteloita taulukosta <code>table</code>.  Kukin luettelokohde on sisempi luettelo, joka sisältää sarakearvot.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Luo sarakearvojen luettelo taulukosta.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "Muuntaa taulukon luetteloksi käyttämällä määritettyä yhdistämisfunktiota kullekin taulukon arvoriville.",
        "Documentation.LongDescription": "Muuntaa taulukon luetteloksi käyttämällä määritettyä yhdistämisfunktiota kullekin taulukon arvoriville.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä kunkin rivin teksti pilkulla.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "Muuntaa taulukon tietueluetteloksi.",
        "Documentation.LongDescription": "Muuntaa taulukon <code>table</code> tietueluetteloksi.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Muunna taulukko tietueluetteloksi.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "Luo luettelon sisäkkäisiä luetteloita taulukon riviarvoista.",
        "Documentation.LongDescription": "Luo luettelon sisäkkäisiä luetteloita taulukosta <code>table</code>.  Kukin luettelokohde on sisempi luettelo, joka sisältää riviarvot.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Luo riviarvojen luettelo taulukosta.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "Luo muokatun virhetietueen, joka ei käynnistä varatoimintoa, kun näkymässä (Table.View-näkymän kautta) määritetty käsittelijä aiheuttaa sen.",
        "Documentation.LongDescription": "Luo muokatun virhetietueen <code>errorRecord</code>:stä, joka ei käynnistä varatoimintoa, kun näkymässä (Table.View-näkymän kautta) määritetty käsittelijä palauttaa sen.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "Luo funktion, jonka näkymälle määritetty käsittelijä voi kaapata (Table.View-funktion kautta).",
        "Documentation.LongDescription": "<p>Luo näkymäfunktion <code>function</code> perusteella, jota voidaan käsitellä <code>Table.View</code>.</p>\r\n<p><code>Table.View</code> käsittelijän <code>OnInvoke</code> avulla voidaan määrittää käsittelijä view-funktiolle.</p>\r\n<p>Toimintoja, joissa on valmiiden toimintojen käsittelijät, jos <code>OnInvoke</code>käsittelijää ei ole määritetty, tai jos se ei käsittele näkymäfunktiota tai jos käsittelijä aiheuttaa virheen, <code>function</code> otetaan käyttöön view.</p>\r\n<p>Lisätietoja on julkaistuissa Power Query mukautetun liittimen ohjeissa <code>Table.View</code> ja mukautettujen näkymäfunktioiden täydellinen kuvaus.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "Palauttaa tekstiarvon, jonka kaikki ohjausmerkit on poistettu.",
        "Documentation.LongDescription": "Palauttaa tekstiarvon, jonka kaikki ohjausmerkit (kohde: <code>text</code>) on poistettu.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Poista rivinvaihdot ja muut ohjausmerkit tekstiarvosta.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "Yhdistää tekstiarvoluettelon yhdeksi tekstiarvoksi.",
        "Documentation.LongDescription": "Palauttaa tuloksen, joka saadaan yhdistämällä tekstiarvojen luettelo, <code>texts</code>, yhdeksi tekstiarvoksi. Kohteessa <code>texts</code> olevat <code>null</code>-arvot ohitetaan.\r\n    Valinnainen <code>separator</code>, jota käytetään lopullisessa yhdistetyssä tekstissä, voidaan määrittää.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Yhdistä tekstiarvot \"Seattle\" ja \"WA\".",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "Yhdistä tekstiarvot \"Seattle\" ja \"WA\" pilkulla ja välilyönnillä eroteltuna.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "Yhdistä arvot \"Seattle\", <code>null</code> ja \"WA\" pilkulla ja välilyönnillä eroteltuina. (Huomaa, että <code>null</code> ohitetaan.)",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "Luo tekstiarvon annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>value</code> tekstiesityksen. <code>value</code> voi olla <code>number</code>-, <code>date</code>-, <code>time</code>-, <code>datetime</code>-, <code>datetimezone</code>-, <code>logical</code>-, <code>duration</code>- tai <code>binary</code>-arvo.\r\n    Jos annettu arvo on tyhjäarvo, <code>Text.From</code> palauttaa tyhjäarvon. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Luo tekstiarvo luvusta 3.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "Purkaa tietojen koodauksen binaarimuodosta tekstiksi.",
        "Documentation.LongDescription": "Purkaa tietojen <code>binary</code> koodauksen binaariarvosta tekstiarvoksi käyttäen tyyppiä <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "Johtaa tekstiin koodatun luvun askelluvun tyypin (Int64.Type, Double.Type ja niin edelleen).",
        "Documentation.LongDescription": "Johtaa <code>text</code>askelluvun tyypin (Int64.Type, Double.Type ja niin edelleen). Virhe, jos <code>text</code> ei ole luku. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "Palauttaa merkkien määrän.",
        "Documentation.LongDescription": "Palauttaa tekstin <code>text</code> merkkien määrän.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, montako merkkiä on tekstissä \"Hello World\".",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "Muuntaa kaikki merkit pieniksi kirjaimiksi.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>text</code> kaikkien merkkien pieniksi kirjaimiksi muuntamisen tuloksen. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hanki tekstin \"AbCd\" pieniä kirjaimia käyttävä versio.",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "Tekee kunkin sanan ensimmäisestä kirjaimesta ison kirjaimen.",
        "Documentation.LongDescription": "Palauttaa tekstiarvon <code>text</code> kunkin sanan vain ensimmäisen kirjaimen isoksi kirjaimeksi muuttamisen tuloksen. Kaikki muut kirjaimet palautetaan pieninä kirjaimina. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Käytä kohdetta <code>Text.Proper</code> yksinkertaiselle virkkeelle.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "Tekee annetusta kohteesta <code>text</code> käänteisen.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Tee tekstistä 123 käänteinen.",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "Koodaa tekstin binaarimuotoon.",
        "Documentation.LongDescription": "Koodaa annetun tekstiarvon <code>text</code> binaariarvoksi käyttäen määritettyä kohdetta <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "Palauttaa merkkiarvoluettelon määritetystä tekstiarvosta.",
        "Documentation.LongDescription": "Palauttaa merkkiarvoluettelon määritetystä tekstiarvosta <code>text</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Luo merkkiarvoluettelo tekstistä \"Hello World\".",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "Poistaa kaikki alussa ja lopussa olevat välilyönnit.",
        "Documentation.LongDescription": "Palauttaa kaikkien alussa ja lopussa olevien välilyöntien tekstiarvosta <code>text</code> poistamisen tuloksen.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Poistaa alussa ja lopussa olevat välilyönnit kohteesta \"     a b c d    \".",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "Poistaa kaikki lopussa olevat välilyönnit.",
        "Documentation.LongDescription": "Palauttaa kaikkien lopussa olevien välilyöntien tekstiarvosta <code>text</code> poistamisen tuloksen.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Poistaa lopussa olevat välilyönnit kohteesta \"     a b c d    \".",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "Poistaa kaikki alussa olevat välilyönnit.",
        "Documentation.LongDescription": "Palauttaa kaikkien alussa olevien välilyöntien tekstiarvosta <code>text</code> poistamisen tuloksen.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Poistaa alussa olevat välilyönnit kohteesta \"     a b c d    \".",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "Muuntaa kaikki merkit isoiksi kirjaimiksi.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>text</code> kaikkien merkkien isoiksi kirjaimiksi muuntamisen tuloksen. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Hanki tekstin \"aBcD\" isoja kirjaimia käyttävä versio.",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "Palauttaa tunnin lopun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>edustaman tunnin lopun, murto-osa sekunnit mukaan lukien. Aikavyöhyketiedot säilytetään.\r\n <ul>\r\n <li><code>dateTime</code>: <code>time</code> <code>datetime</code> tai <code>datetimezone</code> arvo, josta tunnin loppu lasketaan.</li>\r\n </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Hae tunnin loppu kohteelle 14.5.2011 17.00.00.",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "Hae tunnin loppu kohteelle 17.5.2011 17.00.00 -7.00.",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "Luo ajan annetusta arvosta.",
        "Documentation.LongDescription": "Palauttaa <code>time</code>-arvon annetusta kohteesta <code>value</code>. Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).\r\nJos annettu <code>value</code> on <code>null</code>, <code>Time.From</code> palauttaa kohteen <code>null</code>. Jos annettu <code>value</code> on <code>time</code>, palautetaan <code>value</code>. Seuraavia tyyppejä olevat arvot voidaan muuntaa <code>time</code>-arvoksi:\r\n      <ul>\r\n        <li><code>text</code>: <code>time</code>-arvo tekstiesityksestä. Jos haluat lisätietoja, katso <code>Time.FromText</code>.</li>\r\n        <li><code>datetime</code>: kohteen <code>value</code> aikaosa.</li>\r\n        <li><code>datetimezone</code>: kohdetta <code>value</code> vastaavan paikallisen datetime-arvon aikaosa.</li>\r\n        <li><code>number</code>: <code>time</code>, joka vastaa kohteen <code>value</code> ilmaisemia kokonaisia päiviä ja päivien osia. Jos <code>value</code> on negatiivinen tai vähintään 1, palautetaan virhe.</li>\r\n      </ul>\r\nJos <code>value</code> on jokin muu tyyppi, palautetaan virhe.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>0.7575</code> <code>time</code>-arvoksi.",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "Muunna <code>#datetime(1899, 12, 30, 06, 45, 12)</code> <code>time</code>-arvoksi.",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "Luo aika paikallisista, yleisistä ja mukautetuista aikamuodoista.",
        "Documentation.LongDescription": "Luo <code>time</code>-arvon tekstimuotoisesta esityksestä <code>text</code>. Lisäominaisuuksien määrittämiseen voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry osoitteeseen https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>tyhjäarvoisen</code> päivämäärän, se johtaa päivämäärän parhaaseen mahdolliseen muotoiluun.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muodon määrittimiä. Esimerkiksi <code>\"en-US\"</code> <code>\"tt\"</code> on <code>\"AM\" tai \"PM\"</code>, kun taas <code>\"ar-EG\"</code> <code>\"tt\"</code> on <code>\"ص\" tai \"م\"</code>. Kun <code>Format</code> on <code>tyhjäarvoinen</code>, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>tyhjäarvoinen</code> tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> voi olla myös tekstiarvo. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>\"10:12:31am\"</code> Time-arvoksi.",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "Muunna <code>\"1012\"</code> Time-arvoksi.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "Muunna <code>\"10\"</code> Time-arvoksi.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "Palauttaa tuntiosan.",
        "Documentation.LongDescription": "Palauttaa annetun <code>time</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvon <code>dateTime</code> tuntiosan.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Selvitä tunti kohteessa #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "Palauttaa minuuttiosan.",
        "Documentation.LongDescription": "Palauttaa annetun <code>time</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvon <code>dateTime</code> minuuttiosan.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Selvitä minuuttikohteessa #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "Palauttaa sekuntiosan.",
        "Documentation.LongDescription": "Palauttaa annetun <code>time</code>-, <code>datetime</code>- tai <code>datetimezone</code>-arvon <code>dateTime</code> sekuntiosan.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Etsi sekuntiarvo päivämäärä ja aika -arvosta.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "Palauttaa tunnin alun.",
        "Documentation.LongDescription": "Palauttaa <code>dateTime</code>edustaman tunnin alun.\r\n <code>dateTime</code> on oltava <code>time</code><code>datetime</code> tai <code>datetimezone</code> arvo.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Selvitä tunnin alku kohteelle 10. lokakuuta 2011 klo 8.10.32.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "Palauttaa tietueen, joka sisältää Time-arvon osat.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää annetun Time-arvon <code>time</code> osat.\r\n <ul>\r\n        <li><code>time</code>: <code>time</code>-arvo, josta sen osien tietue lasketaan.</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#time(11, 56, 2)</code> -arvo tietueeksi, joka sisältää Time-arvot.",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "Palauttaa aika-arvon tekstiesityksen.",
        "Documentation.LongDescription": "Palauttaa tekstimuotoisen esityksen kohteesta <code>time</code>. Lisäominaisuuksien määrittämiseksi voidaan antaa valinnainen <code>record</code>-parametri <code>options</code>. Parametri <code>culture</code> on käytössä vain vanhoissa työnkuluissa. Parametri <code>record</code> voi sisältää seuraavat kentät:\r\n<ul>\r\n   <li><code>Format</code>: <code>text</code>-arvo, joka ilmaisee käytettävän muodon. Siirry kohtaan https://go.microsoft.com/fwlink/?linkid=2180104 ja https://go.microsoft.com/fwlink/?linkid=2180105. Jos jätät tämän kentän pois tai annat <code>tyhjäarvoisen</code> päivämäärän, se johtaa päivämäärän oletusarvoiseen muotoiluun, jonka määrittää <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Kun <code>Format</code> ei ole tyhjäarvo, <code>Culture</code> ohjaa joitakin muodon määrittimiä. Esimerkiksi <code>\"en-US\"</code> <code>\"tt\"</code> on <code>\"AM\" tai \"PM\"</code>, kun taas <code>\"ar-EG\"</code> <code>\"tt\"</code> on <code>\"ص\" tai \"م\"</code>. Kun <code>Format</code> on <code>tyhjäarvoinen</code>, <code>Culture</code> määrittää käytettävän oletusmuodon. Kun <code>Culture</code> on <code>tyhjäarvoinen</code> tai poistettu, <code>Culture.Current</code> on käytössä.</li>\r\n</ul>\r\nVanhojen työnkulkujen tukemiseksi <code>options</code> ja <code>culture</code> voivat olla myös tekstiarvoja. Tämä toimii samalla tavalla, kuin jos <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Muunna <code>#time(01, 30, 25)</code> <code>text</code>-arvoksi. <i>Tulos voi vaihdella nykyisen maa-asetuksen mukaan.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "Muunna käyttämällä mukautettua muotoa ja saksalaista maa-asetusta.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "Muunna käyttämällä vakioaikamuotoa.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "Palauttaa suljetun version annetusta tietuetyypistä (tai saman tyypin, jos se on jo suljettu).",
        "Documentation.LongDescription": "Palauttaa suljetun version annetusta kohteesta <code>record</code> <code>type</code> (tai saman tyypin, jos se on jo suljettu).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Luo suljettu versio kohteesta <code>type [ A = number,…]</code>.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "Palauttaa tyypin pinnat.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää kohteen <code>type</code> pinnat.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "Palauttaa tietueen, jonka kenttien arvot on asetettu funktiotyypin parametrien nimeksi ja joiden arvot niiden vastaaviksi tyypeiksi.",
        "Documentation.LongDescription": "Palauttaa tietueen, jonka kenttien arvot on asetettu kohteen <code>type</code> parametrien nimeksi ja joiden arvot niiden vastaaviksi tyypeiksi.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Etsi funktion <code>(x as number, y as text)</code> parametrien tyypit.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "Palauttaa luvun, joka ilmaisee funktion tyypin käynnistämiseen tarvittavien parametrien vähimmäismäärän.",
        "Documentation.LongDescription": "Palauttaa luvun, joka ilmaisee funktion syötteen <code>type</code> käynnistämiseen tarvittavien parametrien vähimmäismäärän.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Etsi funktion <code>(x as number, optional y as text)</code> vaadittujen parametrien määrä.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "Palauttaa funktiotyypin palauttaman tyypin.",
        "Documentation.LongDescription": "Palauttaa funktion <code>type</code> palauttaman tyypin.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Etsi kohteen <code>() as any)</code> palautustyyppi.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "Palauttaa arvon true, jos tyyppi on tyhjäarvoja tukeva tyyppi, ja muussa tapauksessa arvon false.",
        "Documentation.LongDescription": "Palauttaa arvon <code>true</code>, jos tyyppi on <code>nullable</code>-tyyppi, ja muussa tapauksessa arvon <code>false</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, tukeeko <code>number</code> tyhjäarvoja.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "Selvitä, tukeeko <code>type nullable number</code> tyhjäarvoja.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "Palauttaa, onko tietuetyyppi avoin.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>logical</code>, joka ilmaisee, onko tietue <code>type</code> avoin.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Selvitä, onko tietue <code>type [ A = luku, ...]</code> auki.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "Palauttaa kohdetyypin luettelotyypistä.",
        "Documentation.LongDescription": "Palauttaa kohdetyypin luettelosta <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Etsi kohdetyyppi luettelosta <code>{number}</code>.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "Palauttaa tyhjäarvoja tukemattoman tyypin tyypistä.",
        "Documentation.LongDescription": "Palauttaa tyypin, joka ei ole <code>nullable</code>, kohteesta <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa kohteen <code>type nullable number</code> tyhjäarvoja tukemattoman tyypin.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "Palauttaa avatun version annetusta tietuetyypistä (tai saman tyypin, jos se on jo avattu).",
        "Documentation.LongDescription": "Palauttaa avatun version annetusta kohteesta <code>record</code> <code>type</code> (tai saman tyypin, jos se on jo avattu).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Luo avattu versio kohteesta <code>type [ A = number]</code>.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "Palauttaa tietueen, joka kuvaa tietuetyypin kentät niin, että palautetun tietuetyypin kullakin kentällä on vastaava nimi ja arvo.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka kuvaa tietueen <code>type</code> kentät. Jokaisella palautetun tietuetyypin kentällä on vastaava nimi ja arvo muodossa <code>[ Type = type, Optional = logical ]</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Etsi tietueen <code>[ A = number, optional B = any]</code> nimi ja arvo.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "Palauttaa mahdollisesti tyhjän avainluettelon annetulle taulukkotyypille.",
        "Documentation.LongDescription": "Palauttaa mahdollisesti tyhjän avainluettelon annetulle taulukkotyypille.<br>\r\n    <br>\r\n    Jokainen avain määritetään seuraavan lomakkeen tietueen avulla:\r\n    <ul>\r\n      <li>\r\n        <code>Columns</code>: avaimen määrittävien sarakkeiden nimien luettelo\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code>, jos avain on taulukon perusavain; muussa tapauksessa <code>false</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Palauta taulukkotyypin avaintiedot.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "Palauttaa taulukkotyypin rivityypin.",
        "Documentation.LongDescription": "Palauttaa määritetyn taulukkotyypin rivityypin. Tulos on aina tietuetyyppi.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa yksinkertaisen taulukon rivityyppitiedot.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "Palauttaa tyyppien luettelon yhdistelmän.",
        "Documentation.LongDescription": "Palauttaa kohteen <code>types</code> tyyppien yhdistelmän.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "Kokoa tietue URI-kyselymerkkijonoksi.",
        "Documentation.LongDescription": "Kokoa tietue <code>query</code> URI-kyselymerkkijonoksi ja lisää ohjausmerkkejä tarvittaessa.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Koodaa kyselymerkkijono, joka sisältää joitakin erikoismerkkejä.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "Koodaa erikoismerkit asiakirjan RFC 3986 mukaisesti.",
        "Documentation.LongDescription": "Koodaa erikoismerkit syötteessä <code>data</code> asiakirjan RFC 3986 sääntöjen mukaisesti.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Koodaa erikoismerkit kohteessa +money$.",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "Palauttaa syötteen absoluuttisen URI-tunnuksen osat tietueena.",
        "Documentation.LongDescription": "Palauttaa syötteen <code>absoluteUri</code> osat tietueena. Sisältää arvoja, kuten Scheme, Host, Port, Path, Query, Fragment, UserName ja Password.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Etsi absoluuttisen URI-tunnuksen \"www.adventure-works.com\" osat.",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "Pura prosenttikoodatun merkkijonon koodaus.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "Anna Azure DevOps Analytics Servicesi URL-osoite.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Palauttaa Azure DevOps Analytics Servicen URL-osoitteesta ladatun sisällön binaariarvona. Tämä funktio käyttää eri tunnistetietoja eri organisaatioille."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "Anna Azure DevOps Analytics Servicesi URL-osoite.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Palauttaa Azure DevOps Analytics Servicen URL-osoitteesta ladatun sisällön binaariarvona. Tämä funktio käyttää yleisiä tunnistetietoja kaikille käytettävissä oleville organisaatioille."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "Ilmaisee vaihtoehtoisia kyselysuunnitelmia.",
        "Documentation.LongDescription": "Ilmaisee vaihtoehtoisia kyselysuunnitelmia Value.Expression(Value.Optimize (...)) -lausekkeen kautta hankitun kyselysuunnitelmalausekkeen sisällä. Ei ole tarkoitettu muuhun käyttöön.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "Palauttaa abstraktin syntaksipuun (AST), joka edustaa arvon lauseketta.",
        "Documentation.LongDescription": "Palauttaa abstraktin syntaksipuun (AST), joka edustaa arvon lauseketta",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "Luo vahvaa tyyppiä käyttävän arvon tekstiesityksestä.",
        "Documentation.LongDescription": "Purkaa arvon koodauksen tekstiesityksestä <code>text</code> ja tulkitsee sen arvona, jolla on asianmukainen tyyppi\r\n    <code>Value.FromText</code> ottaa tekstiarvon ja palauttaa luvun, loogisen arvon, tyhjäarvon, datetime-arvon, kestoarvon tai tekstiarvon. Tyhjä tekstiarvo tulkitaan tyhjäarvoksi.\r\n    Valinnainen <code>culture</code> voidaan myös antaa (esimerkiksi en-US).",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "Palauttaa tietueen, joka sisältää syötteen metatiedot.",
        "Documentation.LongDescription": "Palauttaa tietueen, joka sisältää syötteen metatiedot.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "Antaa Value.Expression-asetuksen palauttaa arvon optimoidun lausekkeen.",
        "Documentation.LongDescription": "Kun sitä käytetään Value.Expression-funktiossa ja <code>value</code> edustaa optimoitavaa kyselyä, tämä funktio osoittaa, että optimoitu lauseke on palautettava. Muuten <code>value</code> välitetään ilman vaikutusta.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "Poistaa metatiedot syötteestä.",
        "Documentation.LongDescription": "Poistaa metatiedot syötteestä.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "Palauttaa annetun arvon tyypin.",
        "Documentation.LongDescription": "Palauttaa annetun arvon tyypin.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.LongDescription": "Tämä toiminto on tarkoitettu vain sisäiseen käyttöön.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "Palauttaa määritetyn URL-osoitteen HTML-koodin selaimen tarkastelemana.",
        "Documentation.LongDescription": "Palauttaa määritetyn <code>url</code> HTML:n selaimen tarkastelemana. Valinnainen tietueparametri, <code>options</code>, voidaan antaa lisäominaisuuksien määrittämista varten. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n       <li><code>ApiKeyName</code> :Jos kohdesivustolla on ohjelmointirajapinnan avaimen käsite, tämän parametrin avulla voidaan määrittää URL-osoitteessa käytettävän avainparametrin nimi (ei arvo). Todellinen avaimen arvo annetaan kohteessa credential.</li>\n\r\n        <li><code>WaitFor</code>: Määrittää ehdon, jota odotetaan ennen HTML:n lataamista, sen lisäksi, että odotetaan sivun latautumista (joka on aina valmis). Voi olla tietue, joka sisältää Aikakatkaisu- ja/tai Valitsin-kentät. Jos vain aikakatkaisu on määritetty, funktio odottaa määritettyä aikaa ennen HTML-koodin lataamista. Jos sekä valitsin että aikakatkaisu määritetään ja aikakatkaisu kuluu, ennen kuin valitsin on sivulla, tapahtuu virhe. Jos Valitsin on määritetty ilman aikakatkaisua, käytetään oletusarvoista 30 sekunnin aikakatkaisua.</li>\r\n </ul>\r",
        "Documentation.Category": "Tietojen käyttö",
        "Documentation.Examples": [
          {
            "Description": "Palauttaa HTML-kohteen kohteelle https://microsoft.com.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...”"
          },
          {
            "Description": "Palauttaa HTML-kohteen kohteelle https://microsoft.com sen jälkeen, kun on odotettu CSS-valitsimen olevan olemassa.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...”"
          },
          {
            "Description": "Palauttaa HTML-kohteen kohteelle https://microsoft.com kymmenen sekunnin odotuksen jälkeen.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...”"
          },
          {
            "Description": "Palauttaa HTML-kohteen kohteelle https://microsoft.com sen jälkeen, kun on odotettu enintään kymmenen sekuntia CSS-valitsimen olevan olemassa.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...”"
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "Palauttaa URL-osoitteesta ladatun sisällön binaarimuodossa.",
        "Documentation.LongDescription": "Palauttaa kohteesta <code>url</code> ladatun sisällön binaarimuodossa. Valinnainen tietueparametri, <code>options</code>, voidaan antaa lisäominaisuuksien määrittämistä varten. Tietue voi sisältää seuraavat kentät: \r\n    <ul>\r\n<li><code>Query</code> : Lis&#228;&#228; kyselyparametreja ohjelmallisesti URL-osoitteeseen ilman, ett&#228; sinun pit&#228;&#228; huolehtia ohjauskoodeista.</li>\r\n<li><code>ApiKeyName</code> : Jos kohdesivustossa on ohjelmointirajapinta-avaimen k&#228;site, t&#228;m&#228;n parametrin avulla voidaan m&#228;&#228;ritt&#228;&#228; sen avainparametrin nimi (ei arvo), jota on k&#228;ytett&#228;v&#228; URL-osoitteessa. Todellinen avainarvo annetaan tunnistetiedoissa.</li>\r\n<li><code>Headers</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen tietueena antaa lis&#228;otsikoita HTTP-pyynn&#246;lle.</li>\r\n<li><code>Timeout</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen kestona muuttaa HTTP-pyynn&#246;n aikakatkaisua. Oletusarvo on 100 sekuntia.</li>\r\n<li><code>ExcludedFromCacheKey</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen luettelona j&#228;tt&#228;&#228; pois n&#228;m&#228; HTTP-otsikkoavaimet tietojen v&#228;limuistiin tallentamisen laskutoimituksesta.</li>\r\n<li><code>IsRetry</code> : T&#228;m&#228;n loogisen arvon m&#228;&#228;ritt&#228;minen true-arvoksi ohittaa v&#228;limuistissa olevan vastauksen noudettaessa tietoja.</li>\r\n<li><code>ManualStatusHandling</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen luettelona est&#228;&#228; kaiken sis&#228;isen k&#228;sittelyn HTTP-pyynn&#246;ille, joiden vastauksella on jokin n&#228;ist&#228; tilakoodeista.</li>\r\n<li><code>RelativePath</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen tekstin&#228; liitt&#228;&#228; sen URL-perusosoitteeseen ennen pyynn&#246;n tekemist&#228;.</li>\r\n<li><code>Content</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen muuttaa verkkopyynn&#246;n GET-pyynn&#246;st&#228; POST-pyynn&#246;ksi k&#228;ytt&#228;en asetuksen arvoa POST-pyynn&#246;n sis&#228;lt&#246;n&#228;.</li>\r\n</ul>\r\n\r\n     HTTP-pyyntö tehdään joko GET-muodossa (kun sisältöä ei ole määritetty) tai POST-muodossa (kun sisältöä on). POST-pyyntöjä voi tehdä vain anonyymisti.\r\n    <br>\r\n     HTTP-vastauksen otsikot ovat käytettävissä binaarituloksen metatietoina. Mukautetun tietoyhdistimen kontekstin ulkopuolella vain vastausotsikoiden alijoukko on käytettävissä (tietoturvasyistä).\r \n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Nouda <code>\"https://bing.com/search?q=Power+Query\"</code> sisältö RelativePath- ja Query-asetusten avulla. Näitä asetuksia voidaan käyttää staattisen perus-URL-osoitteen dynaamiseen kyselyyn.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "Suorita POST-toiminto URL-osoitteelle välittämällä binaariset JSON-tiedot ja jäsentämällä vastaus JSON-muotoon.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "Muodosta yhteys suojattuun URL-osoitteeseen, joka hyväksyy todennusavaimen osana kyselymerkkijonoa. Sen sijaan, että salainen avain koodattaisiin M:ssä (mikä aiheuttaisi suojausriskin), \r\n    avaimen voi antaa turvallisesti määrittämällä avaimen nimen (ei sen arvoa) M:ssä, valitsemalla verkon ohjelmointirajapinnan todentamisen ja antamalla avaimen arvon osana verkon ohjelmointirajapinnan tunnistetietoja.\r\n    Näin käytettynä seuraava esimerkki luo pyynnön kohteeseen <code>\"https://contoso.com/api/customers/get?api_key=******\"</code>.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "Palauttaa URL-osoitteesta ladatut HTTP-otsikot tietuearvona.",
        "Documentation.LongDescription": "Palauttaa kohteesta <code>url</code> ladatut otsikot tietueena. Valinnainen tietueparametri, <code>options</code>, voidaan antaa lisäominaisuuksien määrittämistä varten. Tietue voi sisältää seuraavat kentät:\r\n    <ul>\r\n<li><code>Query</code> : Lis&#228;&#228; kyselyparametreja ohjelmallisesti URL-osoitteeseen ilman, ett&#228; sinun pit&#228;&#228; huolehtia ohjauskoodeista.</li>\r\n<li><code>ApiKeyName</code> : Jos kohdesivustossa on ohjelmointirajapinta-avaimen k&#228;site, t&#228;m&#228;n parametrin avulla voidaan m&#228;&#228;ritt&#228;&#228; sen avainparametrin nimi (ei arvo), jota on k&#228;ytett&#228;v&#228; URL-osoitteessa. Todellinen avainarvo annetaan tunnistetiedoissa.</li>\r\n<li><code>Headers</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen tietueena antaa lis&#228;otsikoita HTTP-pyynn&#246;lle.</li>\r\n<li><code>Timeout</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen kestona muuttaa HTTP-pyynn&#246;n aikakatkaisua. Oletusarvo on 100 sekuntia.</li>\r\n<li><code>ExcludedFromCacheKey</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen luettelona j&#228;tt&#228;&#228; pois n&#228;m&#228; HTTP-otsikkoavaimet tietojen v&#228;limuistiin tallentamisen laskutoimituksesta.</li>\r\n<li><code>IsRetry</code> : T&#228;m&#228;n loogisen arvon m&#228;&#228;ritt&#228;minen true-arvoksi ohittaa v&#228;limuistissa olevan vastauksen noudettaessa tietoja.</li>\r\n<li><code>ManualStatusHandling</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen luettelona est&#228;&#228; kaiken sis&#228;isen k&#228;sittelyn HTTP-pyynn&#246;ille, joiden vastauksella on jokin n&#228;ist&#228; tilakoodeista.</li>\r\n<li><code>RelativePath</code> : T&#228;m&#228;n arvon m&#228;&#228;ritt&#228;minen tekstin&#228; liitt&#228;&#228; sen URL-perusosoitteeseen ennen pyynn&#246;n tekemist&#228;.</li>\r\n</ul>\r\n\r\n     HTTP-pyyntö tehdään HEAD-menetelmällä. Mukautetun tietoyhdistimen kontekstin ulkopuolella vain vastausotsikoiden alijoukko on käytettävissä (tietoturvasyistä).\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Nouda headers for <code>\"https://bing.com/search?q=Power+Query\"</code> HTTP-otsikot RelativePath- ja Query-asetusten avulla.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "Valtuutuskonteksti, jota vasten käyttöoikeusmerkintä arvioidaan.",
        "Documentation.LongDescription": "Valtuutuskonteksti, jota vasten käyttöoikeusmerkintä arvioidaan.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "Käyttöoikeusmerkintöjen taulukko.",
        "Documentation.LongDescription": "Järjestetty valtuutussääntöjä edustava käyttöoikeusmerkintöjen taulukko. Kukin rivi arvioidaan nykyistä valtuutuskontekstia (järjestyksessä) vasten, ja ensimmäinen rivi, jolle <code>Condition</code>-lauseke palauttaa arvon true, määrittää, mitä sääntöä sovelletaan. <code>Action</code>-sarake edustaa toimen lajia, jota sääntö koskee. <code>AccessControlKind</code>-sarake määrittää, tuleeko käyttö sallia vai estää toiminnolle.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "Määrittää käyttöoikeuksien valvonnan lajin.",
        "Documentation.LongDescription": "Määrittää käyttöoikeuksien valvonnan lajin.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia arvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia arvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia binaariarvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia binaariarvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "Määrittää binaarikoodauksen tyypin.",
        "Documentation.LongDescription": "Määrittää binaarikoodauksen tyypin.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "Määrittää, montako kertaa kohteen odotetaan esiintyvän ryhmässä.",
        "Documentation.LongDescription": "Määrittää, montako kertaa kohteen odotetaan esiintyvän ryhmässä.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "Kuvaa suoritettavan puskuroinnin tyyppiä.",
        "Documentation.LongDescription": "Kuvaa suoritettavan puskuroinnin tyyppiä.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia tavuja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia tavuja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "Määrittää tavujärjestyksen.",
        "Documentation.LongDescription": "Määrittää tavujärjestyksen.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia merkkejä.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia merkkejä.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "Määrittää pakkauksen tyypin.",
        "Documentation.LongDescription": "Määrittää pakkauksen tyypin.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Määrittää lainausmerkkien merkityksellisyyden CSV-tiedostoissa.",
        "Documentation.LongDescription": "Määrittää lainausmerkkien merkityksellisyyden CSV-tiedostoissa.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "Tyyppi, joka edusta valuutta-arvoa.",
        "Documentation.LongDescription": "Tyyppi, joka edusta valuutta-arvoa.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia päivämääräarvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia päivämääräarvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia päivämäärä- ja aika-arvoja ilman liittyvää aikavyöhykettä.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia päivämäärä- ja aika-arvoja ilman liittyvää aikavyöhykettä.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia aikavyöhykkeen suhteellisia päivämäärä- ja aika-arvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia aikavyöhykkeen suhteellisia päivämäärä- ja aika-arvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "Määrittää viikonpäivän.",
        "Documentation.LongDescription": "Määrittää viikonpäivän.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kiinteädesimaalista desimaalilukua.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kiinteädesimaalista desimaalilukua.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaksoistarkkuuksista liukulukua.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaksoistarkkuuksista liukulukua.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia kestoarvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia kestoarvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "Määrittää odotetun toimen ylimääräisille arvoille rivillä, joka sisältää odotettua enemmän sarakkeita.",
        "Documentation.LongDescription": "Määrittää odotetun toimen ylimääräisille arvoille rivillä, joka sisältää odotettua enemmän sarakkeita.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia funktioita.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia funktioita.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "Määrittää ryhmittelyn lajin.",
        "Documentation.LongDescription": "Useita paikallisia ryhmiä voidaan tuottaa samalla avainarvolla, mutta vain yksi yleinen ryhmä tuotetaan tietylle avainarvolle.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "Tyyppi, joka edustaa GUID-arvoa.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa GUID-arvoa.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "Käyttäjätieto edustaa käyttäjää, ryhmää, laitetta tai muuta tunnistettavissa olevaa kohdetta.",
        "Documentation.LongDescription": "Käyttäjätieto edustaa käyttäjää, ryhmää, laitetta tai muuta tunnistettavissa olevaa kohdetta.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "Määrittää laajuuden, jolla käyttäjätietoja luodaan ja vertaillaan.",
        "Documentation.LongDescription": "Määrittää laajuuden, jolla käyttäjätietoja luodaan ja vertaillaan.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "Tyyppi, joka edustaa allekirjoitettua 16-bittistä kokonaislukua.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa allekirjoitettua 16-bittistä kokonaislukua.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "Tyyppi, joka edustaa allekirjoitettua 32-bittistä kokonaislukua.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa allekirjoitettua 32-bittistä kokonaislukua.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "Tyyppi, joka edustaa allekirjoitettua 64-bittistä kokonaislukua.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa allekirjoitettua 64-bittistä kokonaislukua.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "Tyyppi, joka edustaa allekirjoitettua 8-bittistä kokonaislukua.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa allekirjoitettua 8-bittistä kokonaislukua.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "Määrittää liitostoiminnossa käytettävän liitosalgoritmin.",
        "Documentation.LongDescription": "Määrittää liitostoiminnossa käytettävän liitosalgoritmin.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "Määrittää liitostoiminnon lajin.",
        "Documentation.LongDescription": "Määrittää liitostoiminnon lajin.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "Määrittää liitoksen vasemman tai oikean taulukon.",
        "Documentation.LongDescription": "Määrittää liitoksen vasemman tai oikean taulukon.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "Kuvaa tämän tietolähteen käyttämän SQL-murteen tukeman rajoituslauseen tyypin.",
        "Documentation.LongDescription": "Kuvaa tämän tietolähteen käyttämän SQL-murteen tukeman rajoituslauseen tyypin.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia luetteloita.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia luetteloita.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia loogisia arvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia loogisia arvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "Määrittää odotetun toimen puuttuville arvoille rivillä, joka sisältää odotettua vähemmän sarakkeita.",
        "Documentation.LongDescription": "Määrittää odotetun toimen puuttuville arvoille rivillä, joka sisältää odotettua vähemmän sarakkeita.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "Tyyppi, joka edustaa tyhjäarvoa.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa tyhjäarvoa.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia lukuja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia lukuja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "Määrittää, millaisia arvoja OData-palvelu voi jättää pois.",
        "Documentation.LongDescription": "Määrittää, millaisia arvoja OData-palvelu voi jättää pois.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "Määrittää elementin esiintymisen jaksossa.",
        "Documentation.LongDescription": "Määrittää elementin esiintymisen jaksossa.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "Määrittää lajittelun suunnan.",
        "Documentation.LongDescription": "Määrittää lajittelun suunnan.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "Tyyppi, joka edustaa tekstimuotoista salasanaa.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa tekstimuotoista salasanaa.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "Tyyppi, joka edustaa prosenttiarvoa.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa prosenttiarvoa.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "Määrittää prosenttipistetilan tyypin.",
        "Documentation.LongDescription": "Määrittää prosenttipistetilan tyypin.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "Määrittää vertailun tarkkuuden.",
        "Documentation.LongDescription": "Määrittää vertailun tarkkuuden.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "Määrittää lainaustyylin.",
        "Documentation.LongDescription": "Määrittää lainaustyylin.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "Määrittää sijoituksen tyypin.",
        "Documentation.LongDescription": "Määrittää sijoituksen tyypin.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia tietueita.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia tietueita.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "Ilmaisee, tuleeko indeksointi tehdä syötteen alusta vai lopusta.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "Määrittää pyöristyksen suunnan, kun mahdollisten lukujen, joihin voidaan pyöristää, välillä on tasatilanne.",
        "Documentation.LongDescription": "Määrittää pyöristyksen suunnan, kun mahdollisten lukujen, joihin voidaan pyöristää, välillä on tasatilanne.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "Kelvolliset SAP Business Warehousen suoritustila-asetuksen vaihtoehdot.",
        "Documentation.LongDescription": "Kelvolliset SAP Business Warehousen suoritustila-asetuksen vaihtoehdot.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "SAP HANA -jakeluasetuksen kelvolliset vaihtoehdot.",
        "Documentation.LongDescription": "SAP HANA -jakeluasetuksen kelvolliset vaihtoehdot.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "SAP HANA -aluesyöteparametrien alueoperaattori.",
        "Documentation.LongDescription": "SAP HANA -aluesyöteparametrien alueoperaattori.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "Tyyppi, joka edustaa yksitarkkuuksista liukulukua.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa yksitarkkuuksista liukulukua.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "Spark-esiintymään yhdistettäessä käytettävä protokolla.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia taulukoita.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia taulukoita.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia tekstiarvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia tekstiarvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "Määrittää tekstin koodaustyypin.",
        "Documentation.LongDescription": "Määrittää tekstin koodaustyypin.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia aika-arvoja.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia aika-arvoja.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "Määrittää jäljitystason.",
        "Documentation.LongDescription": "Määrittää jäljitystason.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "Tyyppi, joka edustaa kaikkia tyyppejä.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa kaikkia tyyppejä.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "Tyyppi, joka edustaa tekstimuotoista URI:tä.",
        "Documentation.LongDescription": "Tyyppi, joka edustaa tekstimuotoista URI:tä.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "Määrittää HTTP-menetelmän.",
        "Documentation.LongDescription": "Määrittää HTTP-menetelmän.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
