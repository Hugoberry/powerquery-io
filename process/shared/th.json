{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "ส่งกลับการแสดงโครงสร้างของฐานข้อมูล Access",
        "Documentation.LongDescription": "ส่งคืนการแทนเชิงโครงสร้างของฐานข้อมูลของ Access, <code>database</code> อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n</ul>\r\n\r\n     เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] เป็นต้น",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "ส่งผลฐานข้อมูล Analysis Services ไปยังโฮสต์เฉพาะ",
        "Documentation.LongDescription": "ส่งคืนฐานข้อมูลบนอินสแตนซ์ Analysis Services <code>server</code> อาจมีการกำหนดเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติม ในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : ค่าตรรกะที่กำหนดว่าจะใช้ชนิดที่ระบุในรูปแบบหลายมิติหรือตาราง สำหรับชนิดของคอลัมน์หน่วยวัดที่เพิ่ม เมื่อตั้งค่าเป็นเท็จ จะใช้ชนิด &quot;number&quot; สำหรับคอลัมน์หน่วยวัดทั้งหมด ค่าเริ่มต้นของตัวเลือกนี้คือเท็จ</li>\r\n<li><code>Culture</code> : ชื่อวัฒนธรรมที่ระบุวัฒนธรรมสำหรับข้อมูล ส่วนนี้จะสอดคล้องกับคุณสมบัติสตริงการเชื่อมต่อ &#39;ตัวระบุภาษา&#39;</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>SubQueries</code> : ตัวเลข (0, 1 หรือ 2) ที่กำหนดค่าของคุณสมบัติ &quot;SubQueries&quot; ในสตริงการเชื่อมต่อ ซึ่งควบคุมลักษณะการทำงานของสมาชิกที่ได้รับการคำนวณแล้วบน subselects หรือ subcubes (ค่าเริ่มต้นคือ 2)</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "คิวบ์ AtScale",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "ข้อมูลคิวบ์การนำเข้า/DirectQuery จาก AtScale",
        "Documentation.LongDescription": "\r\nส่งกลับข้อมูลคิวบ์จาก AtScale บนเซิร์ฟเวอร์ <code>เซิร์ฟเวอร์</code> พารามิเตอร์ระเบียนที่ไม่จำเป็นต้องระบุ <code>ตัวเลือก</code> อาจถูกระบุเพื่อควบคุมตัวเลือกต่อไปนี้:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: ค่าตรรกะที่ระบุว่า จะใช้ชนิดที่ระบุในแบบจำลองหลายมิติหรือแบบตารางสำหรับชนิดคอลัมน์การวัดที่เพิ่มหรือไม่ เมื่อตั้งค่าเป็นเท็จ ชนิด \"หมายเลข\" จะถูกใช้สำหรับคอลัมน์การวัดทั้งหมด ค่าเริ่มต้นสำหรับตัวเลือกนี้เป็นเท็จ </li>\r\n        <li><code>CommandTimeout</code>: ระยะเวลา (เป็นวินาที) ซึ่งควบคุมระยะเวลาแบบสอบถามฝั่งเซิร์ฟเวอร์ที่ได้รับอนุญาตให้ทำงานก่อนที่จะถูกยกเลิก ค่าเริ่มต้นจะขึ้นอยู่กับโปรแกรมควบคุม </li>\r\n        <li><code>ConnectionTimeout</code>: ระยะเวลา (เป็นวินาที) ซึ่งควบคุมระยะเวลาที่จะรอก่อนที่จะละทิ้งความพยายามในการเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นจะขึ้นอยู่กับโปรแกรมควบคุม </li>\r\n\r\n</ul>\r\nมีการระบุพารามิเตอร์ระเบียนเป็น [option1 = value1, option2 = value2...]",
        "Documentation.Examples": {
          "Description": "แสดงรายการข้อมูลคิวบ์ในคิวบ์ AtScale",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "นำเข้าข้อมูลจาก Azure Data Explorer (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "นำเข้าข้อมูลจากอินสแตนซ์ Azure Data Explorer (Kusto)",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับตารางของข้อมูล Storm Events",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "ตารางที่มี Storm Event จากฐานข้อมูล \"ตัวอย่าง\" ในคลัสเตอร์ \"วิธีใช้\""
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "ใส่ URL ของ Azure DevOps Analytics Service ของคุณ",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาที่ดาวน์โหลดจาก URL ของ Azure DevOps Analytics Service เป็นค่าไบนารี ฟังก์ชันนี้จะใช้ข้อมูลประจำตัวที่แตกต่างกันสำหรับองค์กรที่แตกต่างกัน"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "ฟีดบริการ Azure DevOps",
        "Documentation.DisplayName": "ฟีดบริการ Azure DevOps",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "ส่งกลับตารางฟีด OData ที่เสนอโดย Azure DevOps"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "ป้อน URL ของจุดสิ้นสุด Azure Enterprise REST API ที่เชื่อมโยงกับการลงทะเบียนของคุณ",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "คืนค่ารายการของรายงานและเดือนที่มีจาก Azure Enterprise API",
        "Documentation.Name": "นำเข้าข้อมูลจาก Azure Enterprise",
        "Documentation.Examples": [
          {
            "Description": "ใช้ฟังก์ชัน AzureEnterprise.Tables และนำทางไปยังค่าเฉพาะเพื่อรับผลลัพธ์",
            "Code": "อนุญาต\r\n    ที่มา = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    สารบัญ = Source{[Key=\"Contents\"]}[Data]\r\nใน\r\n    สารบัญ",
            "Result": "ตาราง"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "See https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli for starter query samples.",
        "Documentation.Examples": [
          {
            "Description": "Return a table with query results of user query 'resources'",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "แสดงรายการตารางในอินสแตนซ์ Azure Spark",
        "Documentation.LongDescription": "แสดงรายการตารางในอินสแตนซ์ Azure Spark",
        "Documentation.Examples": [
          {
            "Description": "แสดงรายการตารางในอินสแตนซ์ Azure Spark",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "ส่งกลับตารางการนำทางที่มีคอนเทนเนอร์ที่พบในบัญชีที่ระบุจากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure",
        "Documentation.LongDescription": "ส่งกลับตารางการนำทางที่มีแถวของแต่ละคอนเทนเนอร์ที่พบใน URL บัญชี <code>account</code> จากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure แต่ละแถวประกอบด้วยการเชื่อมโยงไปยัง blob ของคอนเทนเนอร์ อาจมีการระบุ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>BlockSize</code> : จำนวนไบต์ที่อ่านก่อนรอผู้ใช้ข้อมูล ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>RequestSize</code> : จำนวนไบต์ที่พยายามอ่านในการร้องขอทาง HTTP แบบเดี่ยวไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>ConcurrentRequests</code> : ตัวเลือก ConcurrentRequests สนับสนุนการดาวน์โหลดข้อมูลที่รวดเร็วยิ่งขึ้น โดยระบุจำนวนคำขอที่จะดำเนินการพร้อมกันโดยใช้งานหน่วยความจำ หน่วยความจำที่จำเป็นคือ (ConcurrentRequest * RequestSize) ค่าเริ่มต้นคือ 16</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "ส่งกลับตารางการนำทางซึ่งมีเอกสารที่พบในคอนเทนเนอร์ที่ระบุและโฟลเดอร์ย่อยจาก Azure Data Lake Storage",
        "Documentation.LongDescription": "ส่งกลับตารางการนำทางซึ่งมีเอกสารที่พบในคอนเทนเนอร์ที่ระบุและโฟลเดอร์ย่อยที่ URL บัญชี <code>endpoint</code> จากระบบไฟล์ Azure Data Lake Storage อาจมีการระบุ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>BlockSize</code> : จำนวนไบต์ที่อ่านก่อนรอผู้ใช้ข้อมูล ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>RequestSize</code> : จำนวนไบต์ที่พยายามอ่านในการร้องขอทาง HTTP แบบเดี่ยวไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>ConcurrentRequests</code> : ตัวเลือก ConcurrentRequests สนับสนุนการดาวน์โหลดข้อมูลที่รวดเร็วยิ่งขึ้น โดยระบุจำนวนคำขอที่จะดำเนินการพร้อมกันโดยใช้งานหน่วยความจำ หน่วยความจำที่จำเป็นคือ (ConcurrentRequest * RequestSize) ค่าเริ่มต้นคือ 16</li>\r\n<li><code>HierarchicalNavigation</code> : ลอจิคัล (จริง/เท็จ) ที่ควบคุมว่าจะส่งกลับไฟล์ในมุมมองไดเรกทอรีทรีหรือในรายการธรรมดา ค่าเริ่มต้นคือ เท็จ</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "ส่งกลับตารางการนำทางที่มีตารางที่พบในบัญชีที่ระบุจากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure",
        "Documentation.LongDescription": "ส่งกลับตารางการนำทางที่มีแถวสำหรับแต่ละตารางที่พบที่ URL บัญชี <code>account</code> จากที่เก็บนิรภัยของที่เก็บข้อมูล Azure โดยแต่ละแถวจะมีลิงก์ไปยังตาราง Azure อาจมีการระบุพารามิเตอร์ของระเบียนที่เลือกได้ <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติม ระเบียนสามารถมีเขตข้อมูลต่อไปนี้ได้ :\r\n    <ul>\r\n<li><code>Timeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งคำขอไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นคือตามแหล่งที่มา</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "ข้อมูลเชิงลึกของชุดเวลา Azure"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight บน AKS Trino"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "ฟังก์ชันนี้ไม่พร้อมใช้งานเนื่องจากจำเป็นต้องมี .NET 4.5",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (ดั้งเดิม)",
        "Documentation.Caption": "Common Data Service (ดั้งเดิม)",
        "Documentation.LongDescription": "เชื่อมต่อไปยังอินสแตนซ์ Common Data Service ของคุณ (Dynamics 365 และ PowerApps)"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "ส่งกลับเนื้อหาของเอกสาร CSV เป็นตาราง",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเอกสาร CSV เป็นตาราง\r\n    <ul>\r\n      <li>\r\n        <code>columns</code> อาจเป็น null จำนวนคอลัมน์ รายชื่อของชื่อคอลัมน์ ชนิดตาราง หรือระเบียนตัวเลือก\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> อาจเป็นอักขระเดียว รายการของอักขระ หรือค่า  <code>\"\"</code> ซึ่งระบุถึงแถวที่น่าจะแยกตามอักขระช่องว่างตามลำดับ ค่าเริ่มต้น: <code>\",\"</code> \r\n      </li>\r\n      <li>\r\n        ให้อ้างอิง <code>ExtraValues.Type</code> สำหรับค่าที่สนับสนุนของ <code>extraValues</code> \r\n      </li>\r\n      <li>\r\n        <code>encoding</code> ระบุชนิดการเข้ารหัสข้อความ\r\n      </li>\r\n    </ul>\r\n\r\n    ถ้ามีการระบุระเบียนสำหรับ <code>columns</code> (และ <code>delimiter</code>, <code>extraValues</code> และ <code>encoding</code> เป็น null) อาจมีเขตข้อมูลระเบียนต่อไปนี้:\r\n    <ul>\r\n      <li>\r\n        <code>ตัวคั่น</code>: ตัวคั่นคอลัมน์ ค่าเริ่มต้น: <code>\",\"</code>\r\n      </li>\r\n      <li>\r\n        <code>คอลัมน์</code>: อาจเป็น null จำนวนคอลัมน์ รายชื่อของคอลัมน์ หรือชนิดตาราง ถ้าจำนวนคอลัมน์ต่ำกว่าจำนวนที่พบในข้อมูลป้อนเข้า คอลัมน์เพิ่มเติมจะถูกละเว้น ถ้าจำนวนคอลัมน์สูงกว่าจำนวนที่พบในข้อมูลป้อนเข้า คอลัมน์เพิ่มเติมจะเป็น null เมื่อไม่ได้ระบุ จำนวนคอลัมน์จะถูกกำหนดโดยสิ่งที่พบในข้อมูลป้อนเข้า\r\n      </li>\r\n      <li>\r\n        <code>การเข้ารหัส</code>: การเข้ารหัสข้อความของไฟล์ ค่าเริ่มต้น: 65001 (UTF-8)\r\n      </li>\r\n      <li>\r\n        <code>CsvStyle</code>: ระบุวิธีการจัดการการอ้างอิง\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (ค่าเริ่มต้น): การอ้างอิงในเขตข้อมูลจะมีความสำคัญทันทีเมื่อตามหลังตัวคั่นเท่านั้น\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: การอ้างอิงในเขตข้อมูลมีความสำคัญทันทีเมื่อตามด้วยตัวคั่น\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <code>QuoteStyle</code>: ระบุวิธีการจัดการตัวแบ่งบรรทัดที่อ้างอิง\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code> (default): ตัวแบ่งบรรทัดที่ยกมาจะถือว่าเป็นส่วนหนึ่งของข้อมูล ไม่ใช่จุดสิ้นสุดของแถวปัจจุบัน\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.None</code>: ตัวแบ่งบรรทัดทั้งหมดจะถือว่าเป็นจุดสิ้นสุดของแถวปัจจุบัน แม้ว่าจะเกิดขึ้นภายในค่าที่ยกมาก็ตาม\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "ประมวลผลข้อความ CSV พร้อมหัวคอลัมน์",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "ส่งกลับตารางที่มีชุดมิติที่มีให้ใช้งาน",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีชุดมิติที่มีให้ใช้งานภายใน <code>cube</code> แต่ละมิติคือตารางที่มีชุดแอตทริบิวต์มิติและแต่ละแอตทริบิวต์มิติจะถูกแสดงเป็นคอลัมน์ในตารางมิติ สามารถขยายมิติในคิวบ์ได้โดยใช้ Cube.AddAndExpandDimensionColumn ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "ส่งกลับทรีของตารางที่ซ้อนกันที่แสดงลําดับชั้นโฟลเดอร์การแสดงผลของวัตถุ (ตัวอย่างเช่น มิติและหน่วยวัด)",
        "Documentation.LongDescription": "ส่งกลับทรีของตารางที่ซ้อนกันที่แสดงลําดับชั้นโฟลเดอร์การแสดงผลของวัตถุ (ตัวอย่างเช่น มิติและหน่วยวัด) ที่พร้อมใช้งานใน <code>cube</code>",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "ส่งกลับตารางที่มีชุดคุณสมบัติการวัดที่พร้อมใช้งานที่ขยายในคิวบ์",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีชุดคุณสมบัติที่พร้อมใช้งานสำหรับการวัดที่ขยายในคิวบ์",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "ส่งกลับตารางที่มีชุดการวัดที่มีให้ใช้งาน",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีชุดการวัดที่พร้อมใช้งานภายใน <code>cube</code>\r\n    แต่ละการวัดจะถูกแสดงเป็นฟังก์ชัน สามารถนำการวัดไปใช้กับคิวบ์ได้โดยใช้ Cube.AddMeasureColumn",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "ส่งคืนตารางที่ประกอบด้วยชุดพารามิเตอร์ที่สามารถกำหนดใช้สำหรับคิวบ์ได้",
        "Documentation.LongDescription": "ส่งคืนตารางที่ประกอบด้วยชุดพารามิเตอร์ที่สามารถกำหนดไใช้สำหรับ <code>cube</code> ได้ พารามิเตอร์แต่ละชุดเป็นฟังก์ชันที่สามารถเรียกใช้เพื่อรับ <code>cube</code> ด้วยพารามิเตอร์และอาร์กิวเมนต์ที่กำหนดใช้",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "ส่งกลับตารางที่มีชุดคุณสมบัติที่พร้อมใช้งานสำหรับมิติที่ขยายในคิวบ์",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีชุดคุณสมบัติที่พร้อมใช้งานสำหรับมิติที่ขยายในคิวบ์",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage รุ่น1",
        "Documentation.Description": "ใส่ URL บัญชี Azure Data Lake Storage รุ่น1 ของคุณ",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวสำหรับแต่ละโฟลเดอร์และไฟล์ที่พบใน <code>url</code> จาก Azure Data Lake Storage รุ่น1 แต่ละแถวประกอบด้วยคุณสมบัติของโฟลเดอร์หรือไฟล์และลิงก์ไปยังเนื้อหานั้นๆ"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage รุ่น1",
        "Documentation.Description": "ใส่ URL บัญชี Azure Data Lake Storage ของคุณ",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวสำหรับแต่ละไฟล์ที่พบใน <code>url</code> จาก Azure Data Lake Storage รุ่น1 แต่ละแถวประกอบด้วยคุณสมบัติของไฟล์และลิงก์ไปยังเนื้อหานั้นๆ"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL API)",
        "Documentation.Description": "ป้อน URL ของบัญชี Azure Cosmos DB",
        "Documentation.LongDescription": "ส่งกลับตารางของฐานข้อมูล Azure Cosmos DB ที่ <code>url</code> หากมีการระบุ <code>database</code> จะทำการส่งกลับตารางของคอลเลกชันแทน นอกจากนี้ หากระบุเขตข้อมูล <code>Query</code> ในเรกคอร์ด <code>options</code> จะทำการส่งกลับผลลัพธ์ของคิวรีที่ดำเนินการบนฐานข้อมูลและ/หรือคอลเลกชันที่ระบุ"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "ใส่ URL ของตำแหน่งข้อมูลบริการ OData ของ Dynamics 365 Business Central (รุ่นภายในองค์กร) ของคุณ",
        "Documentation.DisplayName": "Dynamics 365 Business Central (รุ่นภายในองค์กร)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (รุ่นภายในองค์กร)",
        "Documentation.LongDescription": "ส่งกลับตารางพร้อมข้อมูลของ Dynamics 365 Business Central (รุ่นภายในองค์กร) ที่เกี่ยวข้อง "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "ป้อน URL ของตำแหน่งข้อมูลบริการ OData ของ Dynamics NAV ของคุณ",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "ส่งกลับตารางพร้อมข้อมูลของ Dynamics NAV ที่เกี่ยวข้อง "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "ส่งกลับคิวบ์ในอินสแตนซ์ Essbase ที่จัดกลุ่มตามเซิร์ฟเวอร์ Essbase",
        "Documentation.LongDescription": "ส่งกลับตารางของคิวบ์ที่จัดกลุ่มโดยเซิร์ฟเวอร์ Essbase จากอินสแตนซ์ Essbase ที่เซิร์ฟเวอร์ APS <code>url</code> พารามิเตอร์ระเบียนทางเลือก <code>options</code> อาจถูกระบุเพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "ส่งกลับเนื้อหาของเวิร์กบุ๊ก Excel",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเวิร์กบุ๊ก Excel\r\n    <ul>\r\n     <li> <code>useHeaders</code> สามารถเป็นค่า null ค่าเชิงตรรกะ (จริง/เท็จ) ที่ระบุว่าแถวแรกของแต่ละตารางที่ส่งกลับควรถือเป็นส่วนหัวหรือระเบียนที่เลือกได้ ค่าเริ่มต้น: เท็จ</li>\r\n     <li> <code>delayTypes</code> สามารถเป็น null หรือค่าเชิงตรรกะ (จริง/เท็จ) ที่ระบุว่าคอลัมน์ของแต่ละตารางที่ส่งกลับควรไม่ระบุชนิดหรือไม่ ค่าเริ่มต้น: เท็จ</li>\r\n    </ul>\r\n\r\n    ถ้ามีการระบุระเบียนสำหรับ <code>useHeaders</code> (และ <code>delayTypes</code> เป็น null) เขตข้อมูลระเบียนต่อไปนี้อาจมี:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: สามารถเป็น null หรือค่าเชิงตรรกะ (จริง/เท็จ) ที่ระบุว่าแถวแรกของแต่ละตารางที่ส่งกลับควรถือเป็นส่วนหัวหรือไม่ ค่าเริ่มต้น: เท็จ</li>\r\n     <li> <code>DelayTypes</code>: สามารถเป็น null หรือค่าเชิงตรรกะ (จริง/เท็จ) ที่ระบุว่าคอลัมน์ของแต่ละตารางที่ส่งกลับควรไม่ระบุชนิดหรือไม่ ค่าเริ่มต้น: เท็จ</li>\r\n     <li> <code>InferSheetDimensions</code>: อาจเป็น null หรือค่าเชิงตรรกะ (จริง/เท็จ) ที่ระบุว่าควรสรุปพื้นที่ของเวิร์กชีตที่มีข้อมูลหรือไม่โดยการอ่านแผ่นงานเอง แทนที่จะอ่านเมตาดาต้าของมิติจากไฟล์ ซึ่งจะเป็นประโยชน์ในกรณีที่เมตาดาต้าของมิติไม่ถูกต้อง โปรดทราบว่าตัวเลือกนี้รองรับเฉพาะไฟล์ Excel แบบ Open XML เท่านั้น ไม่ใช่ไฟล์ Excel แบบดั้งเดิม ค่าเริ่มต้น: เท็จ</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับเนื้อหาของ Sheet1 จากเวิร์กบุ๊ก Excel",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "ส่งกลับตารางที่มีคุณสมบัติและเนื้อหาของไฟล์และโฟลเดอร์ที่พบในโฟลเดอร์ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวสําหรับแต่ละโฟลเดอร์และไฟล์ที่พบในโฟลเดอร์ <code>path</code> แต่ละแถวประกอบด้วยคุณสมบัติของโฟลเดอร์หรือไฟล์และลิงก์ไปยังเนื้อหา พารามิเตอร์ <code>options</code> มีไว้สําหรับใช้ภายในเท่านั้นในขณะนี้",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "ส่งกลับตารางที่มีคุณสมบัติและเนื้อหาของแฟ้มที่พบในโฟลเดอร์ที่ระบุและโฟลเดอร์ย่อย",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวสําหรับแต่ละไฟล์ที่พบในโฟลเดอร์ <code>path</code> และโฟลเดอร์ย่อยทั้งหมด แต่ละแถวประกอบด้วยคุณสมบัติของไฟล์และลิงก์ไปยังเนื้อหา พารามิเตอร์ <code>options</code> มีไว้สําหรับใช้ภายในเท่านั้นในขณะนี้",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "นําเข้าข้อมูลจากฐานข้อมูล Google BigQuery โดยใช้ Azure AD",
        "Documentation.LongDescription": "\r\n      ส่งกลับตารางที่แสดงรายการโครงการที่พร้อมใช้งานใน Google BigQuery โดยใช้ Azure AD สําหรับ <code>ID โครงการสำหรับการเรียกเก็บเงิน</code> อาจมีการระบุพารามิเตอร์ระเบียนที่เลือกได้ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: ระยะเวลาที่ควบคุมระยะเวลารอก่อนที่จะละทิ้งความพยายามในการเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นคือค่าหมดเวลาสำหรับการเชื่อมต่อ ODBC</li>\r\n        <li><code>CommandTimeout</code>: ระยะเวลาที่ควบคุมระยะเวลาที่คิวรีฝั่งเซิร์ฟเวอร์ได้รับอนุญาตให้เรียกใช้ก่อนที่จะถูกยกเลิก</li>\r\n        <li><code>UseStorageApi</code>: ระบุว่าจะใช้ API ของที่เก็บข้อมูล BigQuery สําหรับชุดผลลัพธ์ขนาดใหญ่หรือไม่ ค่าเริ่มต้นเป็น true เพื่อใช้ API ของที่เก็บข้อมูล ตั้งค่าเป็น false เพื่อไม่ใช้ API ที่เก็บข้อมูล</li>\r\n        <li><code>AudienceUri</code>: นี่คือ URI ของผู้ชมซึ่งโปรแกรมควบคุม ODBC สามารถใช้สําหรับคําขอแลกเปลี่ยนโทเค็นได้ เขตข้อมูลนี้ต้องเป็น URI ที่มีคุณสมบัติสมบูรณ์ (เช่น //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/aad-provider) ซึ่ง pool_id เป็นชื่อเฉพาะสากลเพื่อระบุกลุ่มบุคลากร</li>\r\n      </ul>\r\n    พารามิเตอร์ระเบียนถูกระบุเป็น [option1 = value1, option2 = value2...]\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "แสดงรายการโครงการที่พร้อมใช้งานใน Google BigQuery โดยใช้ Azure AD",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Google Sheets",
        "Documentation.Caption": "Google Sheets",
        "Documentation.Description": "นําเข้าข้อมูลจาก GoogleSheets",
        "Documentation.LongDescription": "นําเข้าข้อมูลจาก GoogleSheets"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "ส่งกลับตารางการนำทางที่มีคอนเทนเนอร์ที่พบในบัญชีที่ระบุจากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure",
        "Documentation.LongDescription": "ส่งกลับตารางการนำทางที่มีแถวของแต่ละคอนเทนเนอร์ที่พบใน URL บัญชี <code>account</code> จากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure แต่ละแถวประกอบด้วยการเชื่อมโยงไปยัง BLOB ของคอนเทนเนอร์",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "ส่งกลับตารางการนำทางที่มีคอนเทนเนอร์ที่พบในบัญชีที่ระบุจากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure",
        "Documentation.LongDescription": "ส่งกลับตารางการนำทางที่มีแถวของแต่ละคอนเทนเนอร์ที่พบใน URL บัญชี <code>account</code> จากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure แต่ละแถวประกอบด้วยการเชื่อมโยงไปยัง BLOB ของคอนเทนเนอร์",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "ส่งกลับตารางที่มีคุณสมบัติและเนื้อหาของแฟ้มและโฟลเดอร์ที่พบในโฟลเดอร์ที่ระบุจากระบบแฟ้ม Hadoop",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวสำหรับแต่ละโฟลเดอร์และแฟ้มที่พบใน URL โฟลเดอร์ <code>url</code> จากระบบแฟ้ม Hadoop แต่ละแถวประกอบด้วยคุณสมบัติของโฟลเดอร์หรือแฟ้มและลิงก์ไปยังเนื้อหา",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "ส่งกลับตารางที่มีคุณสมบัติและเนื้อหาของแฟ้มที่พบในโฟลเดอร์ที่ระบุและโฟลเดอร์ย่อยจากระบบแฟ้ม Hadoop",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวสำหรับแต่ละแฟ้มที่พบใน URL โฟลเดอร์ <code>url</code> และโฟลเดอร์ย่อยจากระบบแฟ้ม Hadoop แต่ละแถวประกอบด้วยคุณสมบัติของแฟ้มและลิงก์ไปยังเนื้อหา",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "นำเข้าข้อมูลจากคลัสเตอร์ Impala",
        "Documentation.LongDescription": "นำเข้าข้อมูลจากคลัสเตอร์ Impala <code>server</code> หากไม่ระบุพอร์ต ระบบจะใช้พอร์ตเริ่มต้น 21050",
        "Documentation.Examples": [
          {
            "Description": "แสดงตารางในคลัสเตอร์ Impala",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "นำเข้าข้อมูลจาก Azure Data Explorer  (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "นำเข้าข้อมูลจากอินสแตนซ์ Azure Data Explorer (Kusto)",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับตารางของข้อมูล Storm Events",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "ตารางที่มี Storm Event จากฐานข้อมูล \"ตัวอย่าง\" ในคลัสเตอร์ \"วิธีใช้\""
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "ตัวนำทางการขาย LinkedIn",
        "Documentation.LongDescription": "ตัวนำทางการขาย LinkedIn",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "คืนค่าตารางพร้อมข้อมูลจากจุดสิ้นสุด MailChimp",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "ทำการเรียกใช้ไปยัง MailChimp API และคืนค่าชุดข้อมูลผลลัพธ์ที่ได้เป็นตาราง เพจผ่านผลลัพธ์ทั้งหมดโดยอัตโนมัติ หรือสามารถใช้พารามิเตอร์ entityName สำหรับจุดสิ้นสุด API ซึ่งจุดสิ้นสุดรูทและ entityName หลักในคำตอบ JSON ไม่ตรงกัน",
        "Documentation.Examples": [
          {
            "Description": "ดึงตารางข้อมูลจากจุดสิ้นสุดรายการของ MailChimp API",
            "Code": "MailChimp.Collection(\"รายการ\")",
            "Result": "ตารางพร้อมข้อมูลรายการ"
          },
          {
            "Description": "ดึงตารางข้อมูลจากจุดสิ้นสุดโฟลเดอร์แคมเปญของ MailChimp API",
            "Code": "MailChimp.Collection(\"campaign-folders\", \"โฟลเดอร์\")",
            "Result": "ตารางพร้อมข้อมูลโฟลเดอร์แคมเปญ"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "คืนค่าผลลัพธ์คำตอบแบบดิบจากจุดสิ้นสุด MailChimp API",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "ทำการเรียกใช้ไปยัง MailChimp API และคืนค่าคำตอบแบบดิบ",
        "Documentation.Examples": [
          {
            "Description": "คืนค่าข้อมูลดิบจากจุดสิ้นสุด reports/click-details MailChimp API สำหรับแคมเปญที่ระบุ",
            "Code": "MailChimp.Instance(\"reports/{campaign_id}/click-details\")",
            "Result": "ข้อมูลรายละเอียดการคลิกแบบดิบจากแคมเปญที่ระบุ"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy for Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "มีฟังก์ชันคิวรีขั้นสูง",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "มีฟังก์ชันคิวรีขั้นสูง",
        "Documentation.Examples": [
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับสรุปข้อมูลระหว่าง 2017-5-1 ถึง 2017-6-15",
            "Code": "\r\n      ให้    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน     \r\n          ผลลัพธ์\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลสรุประหว่าง 2017-5-1 ถึง 2017-6-15"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับข้อมูลสรุปสำหรับเดือนเมษายน 2017",
            "Code": "\r\n      ให้    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน     \r\n          ผลลัพธ์\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2017-4-1 และ 2017-4-30"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับข้อมูลสรุปจากเดือนเมษายน 2017 จนถึงปัจจุบัน",
            "Code": "\r\n      ให้    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน     \r\n          ผลลัพธ์\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2017-4-1 ถึง 2017-6-15"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับข้อมูลสรุปจากเดือนธันวาคมล่าสุดจนถึงเดือนกุมภาพันธ์นี้ ",
            "Code": "\r\n      ให้    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      ใน     \r\n          ผลลัพธ์\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2016-12-1 และ 2017-2-28"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับค่าธรรมเนียม Marketplace สำหรับ 18 เดือนที่แล้ว",
            "Code": "\r\n      ให้    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน     \r\n          ผลลัพธ์\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2015-12-1 ถึง 2017-6 15"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับค่าธรรมเนียมโดยละเอียดสำหรับเดือนมิถุนายน 2017 และเดือนพฤษภาคม 2017",
            "Code": "\r\n      ให้    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน     \r\n          ผลลัพธ์\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2017-5-1 ถึง 2017-6-15"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 03-07-2017 รับค่าธรรมเนียมโดยละเอียดสำหรับเดือนกรกฎาคม 2016",
            "Code": "\r\n      ให้  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      ใน     \r\n          ผลลัพธ์\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 01-07-2016 และ 31-07-2016"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-7-13 ให้รับสรุปยอดดุลสำหรับเดือน 10 ที่ผ่านมาบวกกับ 13 วันของเดือนนี้",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2016-9-1 และ 2017-7-13"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "ข้อมูลรายจ่ายเชิงลึกของ Microsoft Azure",
        "Documentation.Description": "ข้อมูลรายจ่ายเชิงลึกของ Microsoft Azure",
        "Documentation.DisplayName": "ข้อมูลรายจ่ายเชิงลึกของ Microsoft Azure",
        "Documentation.LongDescription": "ข้อมูลรายจ่ายเชิงลึกของ Microsoft Azure",
        "Documentation.Name": "ข้อมูลรายจ่ายเชิงลึกของ Microsoft Azure"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "ส่งคืนตารางของตารางและมุมมอง SQL จากแหล่งข้อมูล ODBC ",
        "Documentation.LongDescription": "ส่งคืนตารางของตารางและมุมมอง SQL จากแหล่งข้อมูล ODBC ที่มีการระบุไว้โดยสตริงการเชื่อมต่อ <code>connectionString</code> <code>connectionString</code> สามารถเป็นข้อความหรือบันทึกข้อมูลการจับคู่ค่าคุณสมบัติ ค่าคุณสมบัติสามารถเป็นข้อความหรือตัวเลข สามารถเพิ่มพารามิเตอร์เรกคอร์ดเสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติมได้ โดยในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นคือ 15 วินาที</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างตัวเลือกสตริงการเชื่อมต่อที่สามารถทำงานร่วมกับ SQL Server ได้ สำหรับการรับรองความถูกต้องของ Windows หรือไม่ ค่าเริ่มต้นคือจริง</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับตารางและมุมมอง SQL จากสตริงการเชื่อมต่อที่ให้มา",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "คืนค่าตารางของตาราง SQL และมุมมองจากแหล่งข้อมูล OLE DB",
        "Documentation.LongDescription": "ส่งคืนตารางของตาราง SQL และมุมมองจากแหล่งข้อมูล OLE DB ที่ระบุโดยสตริงการเชื่อมต่อ <code>connectionString</code> <code>connectionString</code> สามารถเป็นข้อความหรือเรกคอร์ดของคู่ค่าคุณสมบัติ ค่าคุณสมบัติสามารถเป็นข้อความหรือตัวเลขก็ได้ อาจมีการกำหนดเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติม ในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างตัวเลือกสตริงการเชื่อมต่อที่สามารถทำงานร่วมกับ SQL Server ได้ สำหรับการรับรองความถูกต้องของ Windows หรือไม่ ค่าเริ่มต้นคือจริง</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "ส่งกลับตารางของตาราง SQL และมุมมองจาก Oracle Database",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL และมุมมองจาก Oracle Database บนเซิร์ฟเวอร์ <code>server</code> สามารถเลือกระบุพอร์ตพร้อมเซิร์ฟเวอร์ได้ โดยคั่นด้วยเครื่องหมายโคลอน อาจระบุระเบียนพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "ส่งกลับตารางใดๆ ที่พบในไฟล์ PDF",
        "Documentation.LongDescription": "ส่งคืนตารางที่พบใน <code>pdf</code> อาจมีการกำหนดพารามิเตอร์ระเบียนเสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติม ระเบียนสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>Implementation</code> : เวอร์ชันของอัลกอริทึมที่จะใช้เมื่อระบุตาราง เวอร์ชันเก่าจะใช้ได้เฉพาะสำหรับความเข้ากันได้แบบย้อนหลังเท่านั้น เพื่อป้องกันไม่ให้คิวรีเก่าเสียหายจากการอัปเดตอัลกอริทึม เวอร์ชันล่าสุดควรให้ผลลัพธ์ที่ดีที่สุดเสมอ ค่าที่ถูกต้องคือ &quot;1.3&quot;, &quot;1.2&quot;, &quot;1.1&quot; หรือ null</li>\r\n<li><code>StartPage</code> : ระบุหน้าแรกในช่วงของหน้าเพื่อตรวจสอบ ค่าเริ่มต้น: 1</li>\r\n<li><code>EndPage</code> : ระบุหน้าสุดท้ายในช่วงของหน้าเพื่อตรวจสอบ ค่าเริ่มต้น: หน้าสุดท้ายของเอกสาร</li>\r\n<li><code>MultiPageTables</code> : ควบคุมว่าจะรวมตารางที่คล้ายกันบนหน้าที่อยู่ติดกันเป็นตารางเดียวโดยอัตโนมัติหรือไม่ ค่าเริ่มต้น: จริง</li>\r\n<li><code>EnforceBorderLines</code> : ควบคุมว่าจะบังคับใช้เส้นขอบเป็นขอบของเซลล์เสมอ (เมื่อเป็นจริง) หรือใช้เป็นหนึ่งในตัวบอกใบ้สำหรับการกำหนดขอบของเซลล์ (เมื่อเป็นเท็จ) ค่าเริ่มต้น: เท็จ</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "การเข้าถึงข้อมูล",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับตารางที่มีอยู่ใน sample.pdf",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "ใส่ URL ของบัญชี Planview Projectplace ของคุณ",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "ส่งกลับตารางพร้อมข้อมูล Planview Projectplace ที่เกี่ยวข้อง"
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "Þỳťђόņ šςяїрτ",
        "Documentation.Description": "Е×зςύť℮ŝ Рýτĥŏπ śсґĭþτ ăиđ řēţϋŕŋѕ ďдтã ƒřаmеѕ",
        "Documentation.Examples": {
          "Description": "Е×зςύť℮ŝ Рýτĥŏπ śсґĭþτ ăиđ řēţϋŕŋѕ ďдтã ƒřаmеѕ",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "Ґ ŝćгϊρť",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "ส่งกลับตารางซึ่งมีแต่ละแถวเป็นชื่อเขตข้อมูลและค่าของระเบียนค่าที่ป้อน",
        "Documentation.LongDescription": "ส่งกลับตารางที่ประกอบด้วยคอลัมน์ <code>Name</code> และ <code>Value</code> ที่มีหนึ่งแถวสำหรับแต่ละเขตข้อมูลใน <code>record</code>",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางจากระเบียน",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "ส่งคืนแพคเกจในฐานข้อมูล SAP HANA",
        "Documentation.LongDescription": "ส่งคืนตารางแพ็คเกจหลายมิติจากฐานข้อมูล SAP HANA <code>server</code> อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>Distribution</code> : SapHanaDistribution ที่ตั้งค่าของคุณสมบัติของ &quot;การแจกจ่าย&quot; ในสตริงการเชื่อมต่อ การกำหนดเส้นทางคำสั่งเป็นวิธีของการประเมินผลโหนดเซิร์ฟเวอร์ที่ถูกต้องของระบบที่ทำงานร่วมกันหลายระบบก่อนการปฏิบัติการตามคำสั่ง ค่าเริ่มต้นคือ SapHanaDistribution.All</li>\r\n<li><code>Implementation</code> : ระบุการใช้งานตัวเชื่อมต่อ SAP HANA เพื่อใช้</li>\r\n<li><code>EnableColumnBinding</code> : ผูกตัวแปรเข้ากับคอลัมน์ของชุดผลลัพธ์ SAP HANA เมื่อดึงข้อมูล อาจปรับปรุงประสิทธิภาพด้วยต้นทุนการใช้หน่วยความจําสูงขึ้นเล็กน้อย ค่าเริ่มต้นเป็นเท็จ</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นคือ 15 วินาที</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "ส่งกลับตารางที่มีเนื้อหาจากไซต์ SharePoint",
        "Documentation.LongDescription": "ส่งคืนตารางที่มีแถวสำหรับแต่ละโฟลเดอร์และเอกสารที่พบในไซต์ SharePoint ที่ระบุไว้ <code>url</code> แต่ละแถวประกอบด้วยคุณสมบัติของโฟลเดอร์หรือไฟล์และลิงก์ไปยังเนื้อหา อาจมีการระบุ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>ApiVersion</code> : ตัวเลข (14 หรือ 15) หรือข้อความ &quot;Auto&quot; ที่ระบุรุ่นของ SharePoint API ที่จะใช้สำหรับไซต์นี้ เมื่อไม่ได้ระบุ จะใช้ API รุ่น 14 เมื่อระบุ Auto ไว้ ระบบจะค้นหารุ่นของเซิร์ฟเวอร์โดยอัตโนมัติ หากสามารถทำได้ หรือจะใช้ค่าเริ่มต้นรุ่นที่ 14 ไซต์ SharePoint ที่ไม่ใช่ภาษาอังกฤษ จะต้องใช้รุ่น 15 เป็นอย่างน้อย</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "ส่งกลับตารางที่มีเอกสารจากไซต์ SharePoint",
        "Documentation.LongDescription": "ส่งคืนตารางที่มีแถวสำหรับแต่ละเอกสารที่พบในไซต์ SharePoint <code>url</code> และโฟลเดอร์ย่อยที่ระบุไว้ แต่ละแถวประกอบด้วยคุณสมบัติของโฟลเดอร์หรือไฟล์และลิงก์ไปยังเนื้อหา อาจมีการระบุ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>ApiVersion</code> : ตัวเลข (14 หรือ 15) หรือข้อความ &quot;Auto&quot; ที่ระบุรุ่นของ SharePoint API ที่จะใช้สำหรับไซต์นี้ เมื่อไม่ได้ระบุ จะใช้ API รุ่น 14 เมื่อระบุ Auto ไว้ ระบบจะค้นหารุ่นของเซิร์ฟเวอร์โดยอัตโนมัติ หากสามารถทำได้ หรือจะใช้ค่าเริ่มต้นรุ่นที่ 14 ไซต์ SharePoint ที่ไม่ใช่ภาษาอังกฤษ จะต้องใช้รุ่น 15 เป็นอย่างน้อย</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "ส่งคืนตารางที่มีเนื้อหาจากรายการ SharePoint",
        "Documentation.LongDescription": "ส่งคืนตารางที่มีแถวสำหรับแต่ละรายการในรายการที่พบในไซต์ SharePoint ที่ระบุไว้ <code>url</code> แต่ละแถวประกอบด้วยคุณสมบัติของรายการ อาจมีการระบุ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>ApiVersion</code> : ตัวเลข (14 หรือ 15) หรือข้อความ &quot;Auto&quot; ที่ระบุรุ่นของ SharePoint API ที่จะใช้สำหรับไซต์นี้ เมื่อไม่ได้ระบุ จะใช้ API รุ่น 14 เมื่อระบุ Auto ไว้ ระบบจะค้นหารุ่นของเซิร์ฟเวอร์โดยอัตโนมัติ หากสามารถทำได้ หรือจะใช้ค่าเริ่มต้นรุ่นที่ 14 ไซต์ SharePoint ที่ไม่ใช่ภาษาอังกฤษ จะต้องใช้รุ่น 15 เป็นอย่างน้อย</li>\r\n<li><code>Implementation</code> : เพิ่มเติม ระบุว่าจะใช้ตัวเชื่อมต่อ SharePoint เวอร์ชันใด ค่าที่ยอมรับคือ &quot;2.0&quot; หรือ null ถ้าค่าเป็น &quot;2.0&quot; การใช้งาน 2.0 ของตัวเชื่อมต่อ SharePoint จะถูกใช้ ถ้าค่าเป็น null การใช้งานดั้งเดิมของตัวเชื่อมต่อ SharePoint จะถูกใช้</li>\r\n<li><code>ViewMode</code> : เพิ่มเติม ตัวเลือกนี้ใช้ได้สําหรับการใช้งาน 2.0 เท่านั้น ค่าที่ยอมรับคือ &quot;ทั้งหมด&quot; และ &quot;ค่าเริ่มต้น&quot; หากไม่มีการระบุค่า ค่าจะถูกตั้งค่าเป็น &quot;ทั้งหมด&quot; เมื่อระบุ &quot;ทั้งหมด&quot; มุมมองจะรวมคอลัมน์ที่ผู้ใช้สร้างขึ้นและกําหนดโดยระบบทั้งหมด เมื่อระบุ &quot;ค่าเริ่มต้น&quot; มุมมองจะตรงกับสิ่งที่ผู้ใช้เห็นเมื่อดูรายการออนไลน์ในมุมมองใดก็ตามที่ผู้ใช้ตั้งค่าเป็นค่าเริ่มต้นในการตั้งค่าของพวกเขา ถ้าผู้ใช้แก้ไขมุมมองเริ่มต้นเพื่อเพิ่มหรือเอาคอลัมน์ที่ผู้ใช้สร้างขึ้นหรือที่ระบบกําหนดเอง หรือโดยการสร้างมุมมองใหม่และตั้งค่าเป็นค่าเริ่มต้น การเปลี่ยนแปลงเหล่านี้จะเผยแพร่ผ่านตัวเชื่อมต่อ</li>\r\n<li><code>DisableAppendNoteColumns</code> : ป้องกันไม่ให้ตัวเชื่อมต่อใช้จุดสิ้นสุดแยกต่างหากสําหรับคอลัมน์บันทึกย่อ</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "ส่งกลับตารางจากเนื้อหาที่ URL ที่ระบุซึ่งมีการจัดรูปแบบตาม SODA 2.0 API",
        "Documentation.LongDescription": "ส่งกลับตารางจากเนื้อหาที่ URL <code>url</code> ที่ระบุซึ่งมีการจัดรูปแบบตาม SODA 2.0 API URL ต้องชี้ไปยังแหล่งข้อมูลที่สอดคล้องกับ SODA ที่ถูกต้องซึ่งลงท้ายด้วยนามสกุล .csv",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "สามารถใช้ฟังก์ชันนี้เพื่อเรียกใช้จุดสิ้นสุด \"รายการ\" ที่เสนอโดย SparkPost API v1 เมื่อเรียกใช้ SparkPost API โดยใช้ฟังก์ชันนี้ โปรดจำไว้ว่า SparkPost API มีขีดจำกัดอัตรา API ที่แน่นอน ถ้าคุณเห็นรหัสสถานะ 429 ถูกส่งกลับจากเซิร์ฟเวอร์ SparkPost แสดงว่าคุณถึงขีดจำกัดอัตราและจะต้องรอสักครู่ก่อนเรียกใช้เพิ่มเติม",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับตารางที่มีคอลัมน์เดียวที่มีข้อมูลจากหนึ่งในจุดสิ้นสุด \"รายการ\" SparkPost API v1 (โปรดดูคู่มือ SparkPost สำหรับรายละเอียด)",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "ดึงตารางในตัวที่แสดงโดยตัวเชื่อม SparkPost กับข้อมูลที่รวมจำนวนวันที่ผู้ใช้ระบุไว้ เมื่อรีเฟรชตารางเหล่านี้หรือเรียกใช้ SparkPost API โดยใช้ตัวเชื่อมนี้ โปรดจำไว้ว่า SparkPost API มีขีดจำกัดอัตรา API ที่แน่นอน ถ้าคุณเห็นรหัสสถานะ 429 ถูกส่งกลับจากเซิร์ฟเวอร์ SparkPost แสดงว่าคุณมาถึงขีดจำกัดอัตราและจะต้องรอสักครู่ก่อนเรียกใช้เพิ่มเติม เมื่อเลือกค่าสำหรับพารามิเตอร์จำนวนวัน โปรดทราบว่า API จะเก็บข้อมูลไว้ 6 เดือนเท่านั้น"
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "ส่งกลับตารางของฐานข้อมูลบน SQL Server",
        "Documentation.LongDescription": "คืนค่าตารางฐานข้อมูลบน SQL server ที่ระบุ <code>server</code> อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>MaxDegreeOfParallelism</code> : ตัวเลขที่กำหนดค่าของส่วนคำสั่งคิวรี &quot;maxdop&quot; ในคิวรี SQL ที่สร้างขึ้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>MultiSubnetFailover</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดค่าของคุณสมบัติ &quot;MultiSubnetFailover&quot; ในสตริงการเชื่อมต่อ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>UnsafeTypeConversions</code> : ตรรกะ (จริง/เท็จ) ซึ่งถ้าเป็นจริงจะพยายามพับการแปลงชนิดซึ่งอาจล้มเหลวและทำให้คิวรีทั้งหมดล้มเหลวได้ ไม่แนะนำสำหรับการใช้งานทั่วไป</li>\r\n<li><code>ContextInfo</code> : ค่าไบนารีที่ใช้ในการตั้งค่า CONTEXT_INFO ก่อนที่จะเรียกใช้แต่ละคำสั่ง</li>\r\n<li><code>OmitSRID</code> : ตรรกะ (จริง/เท็จ) ซึ่งถ้าเป็นจริงจะละเว้น SRID เมื่อสร้าง Well-Known Text จากชนิด geometry และชนิด geography</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : ค่าตรรกะ (จริง/เท็จ) ซึ่งถ้าเป็นค่าจริงจะอนุญาตให้พับคิวรีข้ามฐานข้อมูลบนเซิร์ฟเวอร์เดียวกันได้ ค่าเริ่มต้นเป็นเท็จ</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] เป็นต้น\r\n    <br>\r\n    ไม่สนับสนุนการตั้งค่าคิวรี SQL ให้เรียกใช้บนเซิร์ฟเวอร์ ควรใช้ <code>Sql.Database</code> ในการเรียกใช้คิวรี SQL แทน\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "เรียกใช้ Stripe API พร้อมตัวเลือกในการจำกัดจำนวนการเรียกใช้ API",
        "Documentation.LongDescription": "เรียกใช้ Stripe API ที่ https://api.stripe.com/v1/<code>method</code> พร้อมส่งผ่านระเบียน <code>query</code> ทางเลือกเป็นเช่นพารามิเตอร์เพิ่มเติม และ <code>pageLimit</code> ทางเลือกเป็นเช่นขีดจำกัดสำหรับจำนวนคำขอ API จะมีการส่งคืนค่าข้อมูลล่าสุดก่อน หากไม่มีการระบุ <code>pageLimit</code> จะมีการส่งคืนค่าข้อมูลทั้งหมด มีการใช้ Stripe เวอร์ชัน 2015-10-16",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนค่าข้อมูลการเรียกเก็บเงินทั้งหมด",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "ตารางพร้อมข้อมูลการเรียกเก็บเงินทั้งหมดสำหรับบัญชี Stripe ปัจจุบัน"
          },
          {
            "Description": "ส่งคืนค่าข้อมูลการเรียกเก็บเงินหนึ่งหน้า",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "ตารางพร้อมข้อมูลการเรียกเก็บเงินล่าสุดสำหรับบัญชี Stripe ปัจจุบัน"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "บัฟเฟอร์ตารางในหน่วยความจำโดยแยกต่างหากจากการเปลี่ยนแปลงภายนอกระหว่างการประเมิน",
        "Documentation.LongDescription": "การบัฟเฟอร์ตารางในหน่วยความจําเป็นการทำให้แยกออกจากการเปลี่ยนแปลงภายนอกระหว่างการประเมิน\r\n    การบัฟเฟอร์เป็นแบบผิวเผิน ซึ่งบังคับให้มีการประเมินค่าเซลล์สเกลา แต่ไม่รวมค่าที่ไม่ใช่สเกลา (ระเบียน รายการ ตาราง และอื่นๆ) ตามที่เป็นอยู่\r\n    <br>\r\n    <br>\r\n    โปรดทราบว่าการใช้ฟังก์ชันนี้อาจทําให้คิวรีของคุณทํางานได้เร็วขึ้นหรือไม่ก็ได้ ในบางกรณี อาจทําให้คิวรีของคุณทํางานช้าลงเนื่องจากต้นทุน\r\n    ที่เพิ่มขึ้นในการอ่านข้อมูลทั้งหมดและจัดเก็บไว้ในหน่วยความจํา รวมถึงข้อเท็จจริงที่ว่าการบัฟเฟอร์จะป้องกันการพับแบบดาวน์สตรีม ถ้าไม่จําเป็นต้อง\r\n    บัฟเฟอร์ข้อมูล แต่คุณต้องการป้องกันการพับแบบดาวน์สตรีม ให้ใช้ <code>Table.StopFolding</code> แทน",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "โหลดแถวทั้งหมดของตาราง SQL ลงในหน่วยความจํา เพื่อให้การดําเนินการแบบดาวน์สตรีมใดๆ จะไม่สามารถคิวรี SQL Server ได้อีกต่อไป",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "ส่งกลับตารางที่เป็นผลลัพธ์ของการผสานรายการตาราง",
        "Documentation.LongDescription": "ส่งกลับตารางที่เป็นผลลัพธ์ของการผสานรายการตาราง <code>tables</code> ตารางที่เป็นผลลัพธ์จะมีโครงสร้างชนิดแถวที่กำหนดโดย <code>columns</code> หรือ ยูเนียนของชนิดข้อมูลป้อนเข้าหากไม่ได้ระบุ <code>columns</code> ไว้",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ผสานสามตารางต่อไปนี้เข้าด้วยกัน",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "ผสานสามตารางที่มีโครงสร้างที่แตกต่างกัน",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "ผสานสองตารางและโครงการบนชนิดที่กำหนดให้",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "ลดระดับส่วนหัวของคอลัมน์ลงเป็นแถวแรกของค่า",
        "Documentation.LongDescription": "ลดระดับส่วนหัวของคอลัมน์ (เช่น ชื่อคอลัมน์) ลงเป็นแถวแรกของค่า ชื่อคอลัมน์เริ่มต้นได้แก่ \"Column1\", \"Column2\" เป็นต้น",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ลดระดับแถวแรกของค่าในตาราง",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "เอาแถวที่ซ้ำออกจากตาราง",
        "Documentation.LongDescription": "เอาแถวที่ซ้ำกันออกจากตาราง\r\n    พารามิเตอร์ที่เลือกได้  <code>equationCriteria</code> ระบุว่าคอลัมน์ใดของตารางที่ได้รับการทดสอบสําหรับการทําซ้ำ ถ้า <code>equationCriteria</code> ไม่ได้ระบุอลัมน์ทั้งหมดจะได้รับการทดสอบ<br>\r\n    <br>\r\n    เนื่องจากในบางครั้ง Power Query จะถ่ายข้อมูลการดําเนินการบางอย่างไปยังแหล่งข้อมูล Backend (เรียกว่า \"การพับ\") และในบางครั้งจะปรับคิวรีให้เหมาะสมโดย \r\n    การข้ามการดําเนินการที่ไม่จําเป็นอย่างเคร่งครัด โดยทั่วไปแล้ว จะไม่มีการรับประกันว่ารายการที่ซ้ำกันใดจะถูกเก็บรักษาไว้\r\n    ตัวอย่างเช่น คุณไม่สามารถสรุปได้ว่าแถวแรกที่มีค่าคอลัมน์ชุดที่ไม่ซ้ำกันจะยังคงอยู่ และแถวที่อยู่ไกลออกไปในตารางจะถูกเอาออก\r\n    ถ้าคุณต้องการให้การเอารายการที่ซ้ำกันออกสามารถทํางานได้ ก่อนอื่นให้บัฟเฟอร์ตารางโดยใช้ <code>Table.Buffer</code>.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "นำแถวที่ซ้ำซ้อนออกจากตาราง",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "เอาแถวที่ซ้ำออกจากคอลัมน์ [b] ในตาราง <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code>",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "สร้างตารางจากรายการของคอลัมน์และค่าที่ระบุ",
        "Documentation.LongDescription": "สร้างตารางชนิด <code>columns</code> จากรายการ <code>lists</code> ซึ่งมีรายการที่ซ้อนกันที่มีชื่อและค่าของคอลัมน์ \r\n    ถ้าบางคอลัมน์มีค่ามากกว่าคอลัมน์อื่น ค่าที่หายไปจะถูกเติมด้วยค่าเริ่มต้น 'null' ถ้าคอลัมน์ดังกล่าวสามารถเป็น null ได้",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางจากรรายการชื่อลูกค้าในรายชื่อ ค่าในรายการรายชื่อลูกค้าแต่ละค่าจะเป็นค่าแถว และรายชื่อแต่ละรายการจะเป็นคอลัมน์",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "สร้างตารางจากรายการคอลัมน์และรายการชื่อคอลัมน์ที่กำหนด",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "สร้างตารางโดยมีจำนวนคอลัมน์ต่อแถวที่แตกต่างกัน ค่าแถวที่หายไปเป็น Null",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "แปลงรายการให้เป็นตารางโดยนำฟังก์ชันการแยกที่ระบุไปใช้กับแต่ละข้อมูลในรายการ",
        "Documentation.LongDescription": "แปลงรายการ <code>list</code> ให้เป็นตารางโดยนำฟังก์ชันการแยกที่เลือกได้ <code>splitter</code> ไปใช้กับแต่ละข้อมูลในรายการ ตามค่าเริ่มต้น จะถือว่ารายการเป็นรายการของค่าข้อความที่ถูกแยกด้วยเครื่องหมายจุลภาค <code>columns</code> ที่เลือกได้อาจเป็นจำนวนคอลัมน์ รายการคอลัมน์ หรือ TableType <code>default</code> และ <code>extraValues</code> ที่เลือกได้อาจถูกระบุไว้ด้วย",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "สร้างตารางจากรายการโดยใช้ตัวแยกเริ่มต้น",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "สร้างตารางจากรายการโดยใช้ตัวแยกแบบกำหนดเอง",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "สร้างตารางจากรายการโดยใช้ตัวแยก Record.FieldValues",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "แปลงรายการระเบียนเป็นตาราง",
        "Documentation.LongDescription": "แปลง <code>records</code> ซึ่งเป็นรายการระเบียนให้เป็นตาราง",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "สร้างตารางจากระเบียน โดยใช้ชื่อเขตข้อมูลระเบียนเป็นชื่อคอลัมน์",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "สร้างตารางจากระเบียนด้วยชนิดคอลัมน์ และเลือกจำนวนคอลัมน์",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "สร้างตารางจากรายการของค่าแถว รายการของชื่อคอลัมน์ที่เลือกได้หรือชนิดตารางสามารถระบุเป็นอาร์กิวเมนต์ที่สองได้",
        "Documentation.LongDescription": "สร้างตารางจากรายการ <code>rows</code> ซึ่งแต่ละองค์ประกอบของรายการเป็นรายการภายในที่มีค่าคอลัมน์สำหรับแถวเดียว สามารถระบุรายการตัวเลือกของชื่อคอลัมน์หรือชนิดตารางเป็นอาร์กิวเมนต์ที่สองได้ <code>columns</code>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางพร้อมคอลัมน์ [CustomerID] ที่มีค่า {1, 2} คอลัมน์ [Name] ที่มีค่า {\"Bob\", \"Jim\"} และคอลัมน์ [Phone] ที่มีค่า {\"123-4567\", \"987-6543\"}",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "ส่งคืนตารางพร้อมคอลัมน์ [CustomerID] ที่มีค่า {1, 2} คอลัมน์ [Name] ที่มีค่า {\"Bob\", \"Jim\"} และคอลัมน์ [Phone] ที่มีค่า {\"123-4567\", \"987-6543\"} โดยที่ [CustomerID] เป็นชนิดตัวเลข และ [Name] และ [Phone] เป็นชนิดตัวอักษร",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "สร้างตารางด้วยคอลัมน์จากค่าที่ระบุ",
        "Documentation.LongDescription": "สร้างตารางด้วยคอลัมน์ซึ่งมีค่าหรือรายการของค่าที่ระบุไว้ <code>value</code> อาจมีการระบุพารามิเตอร์บันทึกข้อมูลที่เป็นทางเลือก <code>options</code> เพื่อควบคุมตัวเลือกดังต่อไปนี้:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code> : ใช้ชื่อคอลัมน์เมื่อสร้างตารางจากรายการค่าหรือค่าที่การปรับสเกล</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "สร้างตารางจากค่า 1",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "สร้างตารางจากรายการ",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "สร้างตารางจากค่า 1 พร้อมชื่อคอลัมน์แบบกำหนดเอง",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "ส่งกลับข้อมูลเกี่ยวกับวิธีการแบ่งพาร์ติชันตาราง",
        "Documentation.LongDescription": "ส่งกลับข้อมูลเกี่ยวกับวิธีการแบ่งพาร์ติชันตาราง  ตารางจะถูกส่งกลับในกรณีที่แต่ละคอลัมน์เป็นคอลัมน์พาร์ติชันในตารางเดิม และแต่ละแถวจะสอดคล้องกับพาร์ติชันในตารางเดิม",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "ส่งคืนโปรไฟล์คอลัมน์ของตาราง",
        "Documentation.LongDescription": "<p>ส่งคืนโปรไฟล์สำหรับคอลัมน์ใน <code>table</code></p>\r\n<p>มีการส่งคืนข้อมูลต่อไปนี้สำหรับแต่ละคอลัมน์ (หากสามารถใช้ได้)):\r\n<ul>\r\n  <li>minimum</li>\r\n  <li>maximum</li>\r\n  <li>average</li>\r\n  <li>standard deviation</li>\r\n  <li>count</li>\r\n  <li>null count</li>\r\n  <li>distinct count</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "เลื่อนระดับแถวแรกของค่าเป็นส่วนหัวคอลัมน์ใหม่ (เช่น ชื่อคอลัมน์)",
        "Documentation.LongDescription": "เลื่อนระดับแถวแรกของค่าเป็นส่วนหัวคอลัมน์ใหม่ (เช่น ชื่อคอลัมน์) ค่าเริ่มต้น เฉพาะค่าที่เป็นข้อความหรือตัวเลขจะถูกเลื่อนระดับเป็นส่วนหัว ตัวเลือกที่ถูกต้อง:\r\n    <div>\r\n      <code>PromoteAllScalars</code> : หากตั้งเป็น<code>จริง</code> ค่าสเกลทั้งหมดในแถวแรกจะถูกเลื่อนระดับเป็นส่วนหัวโดยใช้ <code>ภาษา</code> หากระบุ (หรือตำแหน่งเอกสารปัจจุบัน)\r\n    สำหรับค่าที่ไม่สามารถเปลี่ยนเป็นข้อความได้ จะใช้เป็นชื่อคอลัมน์เริ่มต้น\r\n    </div>\r\n    <div>\r\n    <code>ภาษา</code> : ชื่อภาษาที่ระบุภาษาสำหรับข้อมูล\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ยกระดับแถวแรกของค่าในตาราง",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "เลื่อนระดับแถวแรกของค่าเป็นส่วนหัวคอลัมน์ใหม่",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "ส่งกลับตารางซึ่งมีแถวจำนวนแรกที่ถูกข้ามไป",
        "Documentation.LongDescription": "ส่งกลับตารางที่ไม่มีจำนวนแถวแรกที่ระบุ <code>countOrCondition</code> ของตาราง <code>table</code>\r\n    จำนวนของแถวที่เอาออกจะขึ้นอยู่กับพารามิเตอร์ที่เลือกได้ <code>countOrCondition</code>\r\n    <ul>\r\n    <li> ถ้า <code>countOrCondition</code> ถูกเว้นไว้ จะมีการเอาออกเฉพาะแถวแรก </li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นตัวเลข จะมีการเอาแถวจำนวนมากดังกล่าวออก (เริ่มต้นที่ด้านบน) </li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นเงื่อนไข แถวที่ตรงกับเงื่อนไขจะถูกเอาออกจนกว่าแถวจะไม่เป็นไปตามเงื่อนไข</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "นำแถวแรกของตารางออก",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "นำสองแถวแรกของตารางออก",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "นำแถวแรกที่ [CustomerID] <=2 ของตารางออก",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "ส่งกลับตารางที่มีการลบ N แถวสุดท้าย",
        "Documentation.LongDescription": "ส่งกลับตารางที่ไม่มี <code>countOrCondition</code> แถวสุดท้ายของตาราง <code>table</code>\r\n        จำนวนของแถวที่เอาออกจะขึ้นอยู่กับพารามิเตอร์ที่เลือกได้ <code>countOrCondition</code>\r\n    <ul>\r\n    <li> ถ้า <code>countOrCondition</code> ถูกเว้นไว้ จะมีการลบออกเฉพาะแถวสุดท้าย</li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นตัวเลข จะมีการเอาแถวจำนวนมากดังกล่าวออก (เริ่มต้นที่ด้านล่าง) </li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นเงื่อนไข แถวที่ตรงกับเงื่อนไขจะถูกเอาออกจนกว่าแถวจะไม่เป็นไปตามเงื่อนไข</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "นำแถวสุดท้ายของตารางออก",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "นำแถวสุดท้ายที่ [CustomerID] > 2 ของตารางออก",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "ส่งกลับตารางซึ่งมีแถวที่ถูกเอาออกจากตารางค่าที่ป้อนที่มีข้อผิดพลาดในเซลล์อย่างน้อยหนึ่งเซลล์ ถ้าระบุรายการคอลัมน์ จะมีการตรวจสอบหาข้อผิดพลาดเฉพาะเซลล์ในคอลัมน์ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตารางซึ่งมีแถวที่ถูกเอาออกจากตารางค่าที่ป้อนที่มีข้อผิดพลาดในเซลล์อย่างน้อยหนึ่งเซลล์ ถ้าระบุรายการคอลัมน์ จะมีการตรวจสอบหาข้อผิดพลาดเฉพาะเซลล์ในคอลัมน์ที่ระบุ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ลบค่าของข้อผิดพลาดออกจากแถวแรก",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "ส่งกลับตารางที่มีแถวในลำดับย้อนกลับ",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวจากค่าที่ป้อน <code>table</code> ในลำดับย้อนกลับ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "กลับแถวในตาราง",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "ส่งคืนตารางที่มีคำอธิบายของลูกค้า (เช่น schema) สำหรับตารางที่ระบุไว้",
        "Documentation.LongDescription": "<p>ส่งกลับตารางที่อธิบายถึงคอลัมน์ของ <code>table</code></p>\r\n<p>แต่ละแถวในตารางจะอธิบายถึงคุณสมบัติคอลัมน์ของ <code>table</code>:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>ชื่อคอลัมน์</b></td>\r\n    <td><b>คำอธิบาย</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>ชื่อ</code></td>\r\n    <td>ชื่อของคอลัมน์</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>ตำแหน่ง</code></td>\r\n    <td>ตำแหน่งที่ 0 ของคอลัมน์ใน <code>table</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>ชื่อชนิดของคอลัมน์</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>ประเภท</code></td>\r\n    <td>ประเภทของชนิดคอลัมน์</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>ไม่ว่าคอลัมน์จะมีค่า <code>null</code> หรือไม่ก็ตาม</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>ฐานตัวเลข (ตัวอย่างเช่น ฐาน 2 หรือฐาน 10) ของเขตข้อมูล <code>NumericPrecision</code> และ <code>NumericScale</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>ความแม่นยำของคอลัมน์ตัวเลขในฐานที่ระบุโดย <code>NumericPrecisionBase</code> นี่คือจำนวนตัวเลขสูงสุดที่สามารถแสดงได้โดยค่าของชนิดนี้ (รวมถึงตัวเลขเศษส่วน)</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>สเกลของคอลัมน์ตัวเลขในฐานที่ระบุโดย <code>NumericPrecisionBase</code> นี่คือจำนวนตัวเลขสูงสุดในส่วนค่าของเศษส่วนของชนิดนี้ ค่าของ <code>0</code> แสดงถึงสเกลแบบคงที่ที่ไม่มีตัวเลขเศษส่วน ค่าของ <code>null</code> แสดงถึงสเกลที่ไม่รู้จัก (อาจเพราะเป็นตัวเลขยกกำลังหรือไม่ได้กำหนดไว้)</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>จำนวนตัวเลขเศษส่วนที่สนับสนุนสูงสุดในส่วนที่สองของค่าวันที่หรือเวลา</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>จำนวนอักขระสูงสุดที่อนุญาตในคอลัมน์<code>ข้อความ</code> หรือจำนวนไบต์สูงสุดที่อนุญาตในคอลัมน์<code>ไบนารี</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>ระบุว่าคอลัมน์นี้สามารถมีความยาวที่แตกต่างกันได้หรือไม่ (สูงสุด <code>MaxLength</code>) หรือเป็นขนาดแบบคงที่</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>ชื่อชนิดของคอลัมน์ในระบบชนิดของแหล่งข้อมูลแบบเนทีฟ (ตัวอย่างเช่น <code>nvarchar</code> สำหรับ SQL Server)</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>นิพจน์เริ่มต้นสำหรับค่าของคอลัมน์นี้ในภาษานิพจน์แบบเนทีฟของแหล่งข้อมูล (ตัวอย่างเช่น <code>42</code> หรือ <code>newid()</code> สำหรับ SQL Server)</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>คำอธิบาย</code></td>\r\n    <td>คำอธิบายของคอลัมน์</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "ส่งกลับตารางซึ่งมีเฉพาะแถวของตารางค่าที่ป้อนที่มีข้อผิดพลาดในเซลล์อย่างน้อยหนึ่งเซลล์ ถ้าระบุรายการคอลัมน์ จะมีการตรวจสอบหาข้อผิดพลาดเฉพาะเซลล์ในคอลัมน์ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตารางซึ่งมีเฉพาะแถวของตารางค่าที่ป้อนที่มีข้อผิดพลาดในเซลล์อย่างน้อยหนึ่งเซลล์ ถ้าระบุรายการคอลัมน์ จะมีการตรวจสอบหาข้อผิดพลาดเฉพาะเซลล์ในคอลัมน์ที่ระบุ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "เลือกชื่อของลูกค้าที่มีข้อผิดพลาดในแถว",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "ส่งกลับตารางซึ่งมีแถวจำนวนแรกที่ถูกข้ามไป",
        "Documentation.LongDescription": "ส่งกลับตารางที่ไม่มีจำนวนแถวแรกที่ระบุ <code>countOrCondition</code> ของตาราง <code>table</code>\r\n    จำนวนแถวที่ข้ามโดยขึ้นอยู่กับพารามิเตอร์ที่เลือกได้ <code>countOrCondition</code>\r\n    <ul>\r\n    <li> ถ้า <code>countOrCondition</code> ถูกเว้นไว้ จะมีการข้ามเฉพาะแถวแรก </li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นตัวเลข จะมีการข้ามแถวจำนวนมากดังกล่าว (เริ่มต้นที่ด้านบน) </li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นเงื่อนไข แถวที่ตรงกับเงื่อนไขจะถูกข้ามจนกว่าแถวจะไม่เป็นไปตามเงื่อนไข</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ข้ามแถวแรกของตาราง",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "ข้ามสองแถวแรกของตาราง",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "ข้ามแถวแรกที่ [Price] > 25 ของตาราง",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "ป้องกันไม่ให้มีการเรียกใช้การดําเนินการแบบดาวน์สตรีมกับแหล่งข้อมูลต้นฉบับ",
        "Documentation.LongDescription": "ป้องกันไม่ให้มีการเรียกใช้การดําเนินการแบบดาวน์สตรีมกับแหล่งข้อมูลต้นฉบับใน <code>table</code>",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "ดึงข้อมูลจากตาราง SQL ในลักษณะที่ป้องกันไม่ให้มีการเรียกใช้การดําเนินการแบบดาวน์สตรีมเป็นคิวรีใน SQL Server",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "เปลี่ยนคอลัมน์ให้เป็นแถวและเปลี่ยนแถวให้เป็นคอลัมน์",
        "Documentation.LongDescription": "เปลี่ยนคอลัมน์ให้เป็นแถวและเปลี่ยนแถวให้เป็นคอลัมน์",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "เปลี่ยนแถวตารางของคู่ชื่อ-ค่าให้เป็นคอลัมน์",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "รับความสัมพันธ์ระหว่างชุดตาราง",
        "Documentation.LongDescription": "รับความสัมพันธ์ระหว่างชุดตาราง โดยคาดว่า ชุด <code>tables</code> จะต้องมีโครงสร้างที่ใกล้เคียงกับตารางการนำทาง คอลัมน์ที่กำหนดไว้โดย <code>dataColumn</code> จะประกอบด้วยตารางข้อมูลตามจริง",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "ส่งกลับตารางของตาราง SQL และมุมมองจากฐานข้อมูล Teradata",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL และมุมมองจากฐานข้อมูล Teradata บนเซิร์ฟเวอร์ <code>server</code> สามารถเลือกระบุพอร์ตพร้อมเซิร์ฟเวอร์ได้ โดยคั่นด้วยเครื่องหมายโคลอน อาจระบุระเบียนพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "ข้อมูลเชิงลึกของชุดเวลา Azure"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "กรอกจำนวนเดือนของข้อมูล Twilio ตามประวัติเพื่อดึงข้อมูล",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "ตาราง Twilio",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "กลับไปยังตารางพร้อมด้วยข้อมูล Twilio ที่เกี่ยวข้อง"
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "ส่งคืนค่าตารางที่ประกอบด้วยคำอธิบายเกี่ยวกับคอลัมน์็ (เช่น Schema) สำหรับชนิดตารางที่ระบุไว้เฉพาะ",
        "Documentation.LongDescription": "<p>ส่งคืนค่าตารางที่อธิบายเกี่ยวกับคอลัมน์ <code>tableType</code></p>\r\n<p>ดูเอกสารประกอบเกี่ยวกับ <code>Table.Schema</code> สำหรับคำอธิบายตารางที่แสดงผลลัพธ์</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "ฟีดบริการ Azure DevOps",
        "Documentation.DisplayName": "ฟีดบริการ Azure DevOps",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "ส่งกลับตารางฟีด OData ที่เสนอโดย Azure DevOps"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "เชื่อมต่อกับข้อมูล Viva Insights",
        "Documentation.LongDescription": "นำเข้าเมตริกรายสัปดาห์และข้อมูลแอตทริบิวต์จาก Workplace Analytics",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางที่มีแอตทริบิวต์ที่มองเห็นได้ และเมตริกต่อสัปดาห์สำหรับพนักงานที่มีการวัดผลแต่ละคนในพาร์ติชัน",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "advancedParameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "ส่งกลับเนื้อหาของเอกสาร HTML ที่แยกย่อยเป็นโครงสร้างหน่วยประกอบ พร้อมกับการแสดงเอกสารแบบเต็มและข้อความเอกสารหลังจากเอาแท็กออก",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเอกสาร HTML ที่แยกย่อยเป็นโครงสร้างหน่วยประกอบ พร้อมกับการแสดงเอกสารแบบเต็มและข้อความเอกสารหลังจากเอาแท็กออก",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "นำกลับตารางพร้อมด้วยคีย์เมตริก Webtrends",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "เรียกหาจุดแสดงผล Webtrends KeyMetrics และนำกลับข้อมูลทั้้งหมดเป็นตาราง",
        "Documentation.Examples": [
          {
            "Description": "ดึงตารางของเมตริกหลักสำหรับเทแนนท์ 98765 ใน 30 วันล่าสุด",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "ตารางของเมตริกหลัก"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "กรอกรหัสโปรไฟล์ที่เกียวข้องกับบัญชี Webtrends ของคุณ",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "นำกลับตารางพร้อมด้วยข้อมูล Webtrends ที่เกี่ยวข้อง"
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "เชื่อมต่อกับข้อมูล Viva Insights",
        "Documentation.LongDescription": "นำเข้าเมตริกรายสัปดาห์และข้อมูลแอตทริบิวต์จาก Workplace Analytics",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางที่มีแอตทริบิวต์ที่มองเห็นได้ และเมตริกต่อสัปดาห์สำหรับพนักงานที่มีการวัดผลแต่ละคนในพาร์ติชัน",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "ส่งกลับเนื้อหาของเอกสาร XML เป็นตารางลำดับชั้น",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเอกสาร XML เป็นตารางลำดับชั้น",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "ส่งกลับเนื้อหาของเอกสาร XML เป็นคอลเลกชันที่ซ้อนกันของตารางแบบระนาบเดียว",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเอกสาร XML เป็นคอลเลกชันที่ซ้อนกันของตารางแบบระนาบเดียว",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "เรียกใช้เนื้อหาของไฟล์ xml ภายใน",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "ป้อนe URL บัญชี Zendesk ของคุณ",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "ตาราง Zendesk",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "ส่งคืนตารางที่มีข้อมูล Zendesk ที่เกี่ยวข้อง"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "คืนค่าคอลเลกชันรูปแบบสำหรับแหล่งข้อมูล ADO.NET",
        "Documentation.LongDescription": "คืนค่าคอลเลกชันรูปแบบสำหรับแหล่งข้อมูล ADO.NET ที่มีชื่อผู้ให้บริการ <code>providerName</code> และสตริงการเชื่อมต่อ <code>connectionString</code> <code>connectionString</code> สามารถเป็นข้อความหรือเรกคอร์ดของคู่ค่าคุณสมบัติได้ ค่าคุณสมบัติสามารถเป็นได้ทั้งข้อความหรือตัวเลข สามารถเพิ่มพารามิเตอร์เรกคอร์ดเสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติมได้ โดยในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างตัวเลือกสตริงการเชื่อมต่อที่สามารถทำงานร่วมกับ SQL Server ได้ สำหรับการรับรองความถูกต้องของ Windows หรือไม่ ค่าเริ่มต้นคือจริง</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (เบต้า)",
        "Documentation.Description": "นำเข้าข้อมูลจากฐานข้อมูล Amazon Redshift",
        "Documentation.LongDescription": "ส่งกลับตารางที่แสดงรายการตารางใน<code>เซิร์ฟเวอร์</code>คลัสเตอร์ Amazon Redshift ในฐานข้อมูล <code>ฐานข้อมูล</code> อาจมีการระบุ<code>ตัวเลือก</code>พารามิเตอร์ของระเบียนที่เลือกได้เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n<ul>\r\n<li><code>ชื่อตัวให้บริการ</code>: ค่าข้อความที่จะใช้เป็นชื่อตัวให้บริการสําหรับการเชื่อมต่อ ซึ่งจะใช้เมื่อใช้ Microsoft Authentication</li>\r\n<li><code>ขนาดชุด</code>: จํานวนแถวที่ถูกดึงมาในการโทรแบบครั้งเดียวไปยังเซิร์ฟเวอร์</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "ส่งคืนตารางคิวบ์หลายมิติหรือโมเดลตารางจากฐานข้อมูล Analysis Services",
        "Documentation.LongDescription": "ส่งคืนตารางคิวบ์หลายมิติหรือรูปแบบตารางจากฐานข้อมูล Analysis Services <code>database</code> บนเซิร์ฟเวอร์ <code>server</code> อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>Query</code> : คิวรี MDX แบบเนทีฟที่ใช้ในการดึงข้อมูล</li>\r\n<li><code>TypedMeasureColumns</code> : ค่าตรรกะที่กำหนดว่าจะใช้ชนิดที่ระบุในรูปแบบหลายมิติหรือตาราง สำหรับชนิดของคอลัมน์หน่วยวัดที่เพิ่ม เมื่อตั้งค่าเป็นเท็จ จะใช้ชนิด &quot;number&quot; สำหรับคอลัมน์หน่วยวัดทั้งหมด ค่าเริ่มต้นของตัวเลือกนี้คือเท็จ</li>\r\n<li><code>Culture</code> : ชื่อวัฒนธรรมที่ระบุวัฒนธรรมสำหรับข้อมูล ส่วนนี้จะสอดคล้องกับคุณสมบัติสตริงการเชื่อมต่อ &#39;ตัวระบุภาษา&#39;</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>SubQueries</code> : ตัวเลข (0, 1 หรือ 2) ที่กำหนดค่าของคุณสมบัติ &quot;SubQueries&quot; ในสตริงการเชื่อมต่อ ซึ่งควบคุมลักษณะการทำงานของสมาชิกที่ได้รับการคำนวณแล้วบน subselects หรือ subcubes (ค่าเริ่มต้นคือ 2)</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "ส่งคืนค่าตารางที่แสดงตารางสำหรับคลัสเตอร์ Spark ที่ระบุไว้",
        "Documentation.LongDescription": "ส่งคืนค่าตารางที่แสดงตารางสำหรับคลัสเตอร์ Spark <code>โฮสต์</code> โดยใช้ <code>โปรโตคอล</code> โปรโตคอลที่ถูกต้องคือ:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนค่าตารางที่แสดงตารางสำหรับคลัสเตอร์ Spark ที่ระบุไว้",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "ใส่ชื่อองค์กรและโครงการ",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (เฉพาะบอร์ดเท่านั้น)",
        "Documentation.LongDescription": "ส่งกลับตารางมุมมองการวิเคราะห์ที่เสนอโดย Azure DevOps"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Interactive Query ของ HDInsight",
        "Documentation.Caption": null,
        "Documentation.Description": "นำเข้าข้อมูลจาก Interactive Query ของ HDInsight",
        "Documentation.LongDescription": "\r\nส่งกลับรายการของตารางจาก Interactive Query ของ HDInsight ที่ระบุโดย<code>ฐานข้อมูล</code> บน <code>เซิร์ฟเวอร์</code> Interactive Query ของ HDInsight อาจสามารถเลือกระบุพอร์ตพร้อมเซิร์ฟเวอร์ได้ โดยคั่นด้วยโคลอน อาจระบุพารามิเตอร์ <code>ตัวเลือก</code> เพิ่มเติมเพื่อควบคุมตัวเลือกต่อไปนี้:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: ระยะเวลาที่ควบคุมเวลาที่รอก่อนที่จะละทิ้งความพยายามในการเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นจะขึ้นอยู่กับไดรเวอร์</li>\r\n        <li><code>CommandTimeout</code>: ระยะเวลาที่ควบคุมเวลาซึ่งการคิวรีฝั่งเซิร์ฟเวอร์ได้รับอนุญาตให้ทำงานก่อนที่จะถูกยกเลิก ค่าเริ่มต้นจะขึ้นอยู่กับไดรเวอร์</li>\r\n</ul>\r\nพารามิเตอร์ <code>ตัวเลือก</code> ถูกระบุเป็น [option1 = value1, option2 = value2...]"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "ส่งกลับตารางที่มีคอลัมน์ซึ่งแมปกับแอตทริบิวต์ของเอนทิตีใน Common Data Model รวมถึงชนิดข้อมูล",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีคอลัมน์ซึ่งแมปกับแอตทริบิวต์ของเอนทิตีใน Common Data Model รวมถึงชนิดข้อมูล คอลัมน์จากข้อกำหนดของเอนทิตีจะถูกเพิ่มถ้าไม่ได้แมป และคอลัมน์ใดๆ ที่ไม่ได้แมปจะถูกลบออก",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "Retrieve all pages of data",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "ส่งคืนคิวบ์หลังจากกำหนดใช้พารามิเตอร์",
        "Documentation.LongDescription": "ส่งคืนคิวบ์หลังจากกำหนดใช้ <code>parameter</code> ด้วย <code>arguments</code> เป็น <code>cube</code>",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "เปลี่ยนแปลงส่วนประกอบแบบมิติของบริบทตัวกรองสำหรับคิวบ์โดยยุบแอตทริบิวต์ที่แมปไปยังคอลัมน์ที่ระบุ",
        "Documentation.LongDescription": "เปลี่ยนแปลงส่วนประกอบแบบมิติของบริบทตัวกรองสำหรับ <code>cube</code> โดยยุบแอตทริบิวต์ที่แมปไปยังคอลัมน์ที่ระบุ <code>columnNames</code> นอกจากนี้ คอลัมน์จะถูกเอาออกจากมุมมองแบบตารางของคิวบ์ด้วย",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "แทนที่ชุดของมิติที่ส่งกลับโดย Cube.Dimensions",
        "Documentation.LongDescription": "แทนที่ชุดมิติที่ส่งกลับโดย <code>Cube.Dimensions</code>\r\n    ตัวอย่างเช่น ฟังก์ชันนี้สามารถใช้เพื่อเพิ่มคอลัมน์ ID ไปยังแอตทริบิวต์มิติ เพื่อให้แหล่งข้อมูลสามารถจัดกลุ่มบน ID แทนที่จะเป็นค่าที่แสดง",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "นำรายการฟังก์ชันคิวบ์ไปใช้",
        "Documentation.LongDescription": "นำรายการฟังก์ชันคิวบ์, <code>transforms</code>, ไปใช้บน <code>cube</code>",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "ส่งกลับตารางของตาราง SQL และมุมมองที่พร้อมใช้งานในฐานข้อมูล Db2",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL และมุมมองที่พร้อมใช้งานในฐานข้อมูล Db2 บนเซิร์ฟเวอร์ <code>server</code> ในอินสแตนซ์ฐานข้อมูลที่ชื่อ <code>database</code> อาจมีการระบุพอร์ตทางเลือกสำหรับเซิร์ฟเวอร์ โดยใช้เครื่องหมายโคลอนในการแยก อาจระบุพารามิเตอร์เร็กคอร์ดเสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>Implementation</code> : ระบุการใช้งานตัวให้บริการฐานข้อมูลภายใน ค่าที่ใช้ได้คือ: &quot;IBM&quot; และ &quot;Microsoft&quot;</li>\r\n<li><code>BinaryCodePage</code> : จำนวน CCSID (ตัวระบุชุดอักขระเข้ารหัส) ที่จะถอดรหัสข้อมูลไบนารี DB2 FOR BIT เป็นสตริงอักขระ นำไปใช้กับการใช้งาน = “Microsoft” ตั้งค่าเป็น 0 เพื่อปิดใช้งานการแปลง (ค่าเริ่มต้น) ตั้งค่าเป็น 1 เพื่อแปลงโดยอิงตามการเข้ารหัสฐานข้อมูล ตั้งค่าหมายเลข CCSID อื่นๆ เพื่อแปลงเป็นการเข้ารหัสแอปพลิเคชัน</li>\r\n<li><code>PackageCollection</code> : ระบุค่าสตริงสำหรับแพ็คเกจคอลเลกชัน (ค่าเริ่มต้นคือ &quot;NULLID&quot;) เพื่อใช้งานแพ็คเกจที่ใช้ร่วมกัน ซึ่งจำเป็นสำหรับการประมวลผลคำสั่ง SQL ใช้ได้เมื่อ Implementation = &quot;Microsoft&quot;</li>\r\n<li><code>UseDb2ConnectGateway</code> : ระบุว่ากำลังทำการเชื่อมต่อผ่านเกตเวย์การเชื่อมต่อ Db2 หรือไม่ นำไปใช้กับการใช้งาน = &quot;Microsoft&quot;</li>\r\n</ul>\r\n\r\n    พารามิเตอร์เร็กคอร์ดจะระบุในรูปแบบ [ตัวเลือก1 = ค่า1, ตัวเลือก2 = ค่า2...] หรือ [แบบสอบถาม = \"เลือก ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "เรียกชุดข้อมูลจาก Data.World"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "ส่งกลับตารางที่มีคุณสมบัติและเนื้อหาของ Blob ซึ่งพบในคอนเทนเนอร์ที่ระบุจากที่เก็บข้อมูล Azure",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวสำหรับแฟ้ม Blob แต่ละแฟ้ม ซึ่งพบได้ที่ URL ของคอนเทนเนอร์ <code>account</code> จากที่เก็บข้อมูล Azure แต่ละแถวมีคุณสมบัติของแฟ้มและลิงก์ไปยังเนื้อหาของแฟ้ม",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "ส่งกลับตารางที่มีผลลัพธ์ของการเรียกใช้ตัวเลือก CSS ที่ระบุกับ HTML ที่ให้มา",
        "Documentation.LongDescription": "ส่งกลับตารางที่ประกอบด้วยผลลัพธ์ของการเรียกใช้ตัวเลือก CSS ที่ระบุกับ <code>html</code> ที่ให้มา พารามิเตอร์ระเบียนทางเลือก <code>options</code> อาจจัดทำขึ้นเพื่อระบุคุณสมบัติเพิ่มเติม ระเบียนสามารถประกอบด้วยเขตข้อมูลต่อไปนี้:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "การเข้าถึงข้อมูล",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับตารางจากค่าข้อความ html ตัวอย่าง",
            "Code": "Html.Table(\"<div class=\"\"name\"\">เจตริณ</div><span>ผู้จัดการ</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#ตาราง({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "แยก href ทั้งหมดจากค่าข้อความ html ตัวอย่าง",
            "Code": "Html.Table(\"<a href=\"\"/test.html\"\">ทดสอบ</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "คืนค่าตารางของตาราง SQL และมุมมองที่ใช้ได้ภายในฐานข้อมูล Informix",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL และมุมมองที่พร้อมใช้งานในฐานข้อมูล Informix บนเซิร์ฟเวอร์ <code>server</code> ในอินสแตนซ์ฐานข้อมูลที่ชื่อ <code>database</code> อาจมีการระบุพอร์ตทางเลือกสำหรับเซิร์ฟเวอร์ โดยใช้เครื่องหมายโคลอนในการแยก อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "ส่งคืนค่าตารางพร้อมรายละเอียดลูกค้าที่สนใจ",
        "Documentation.LongDescription": "เรียกใช้ Marketo REST API Endpoint ที่ <code>url</code>/rest/v1/leads.json ส่งคืนข้อมูลลูกค้าที่สนใจทั้งหมดอยู่ในรายการ <code>leadIds</code>",
        "Documentation.Examples": [
          {
            "Description": "ดึงรายละเอียดลูกค้าที่สนใจสามราย",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "ตารางพร้อมรายละเอียดสำหรับลูกค้าที่สนใจ"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "กรอก URL ของ จุดยุติ Marketo REST API ที่เกี่ยวข้องกับบัญชีของคุณ",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "ส่งคืนค่าตารางพร้อมข้อมูล Marketo ที่เกี่ยวข้อง"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "ส่งกลับตารางของตาราง SQL มุมมอง และฟังก์ชันสเกลาที่จัดเก็บซึ่งมีให้ใช้งานในฐานข้อมูล MySQL",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL, มุมมอง และฟังก์ชันสเกลาร์ที่จัดเก็บไว้ ซึ่งใช้งานได้ในฐานข้อมูล MySQL บนเซิร์ฟเวอร์ <code>server</code> ในอินสแตนซ์ฐานข้อมูลที่ชื่อ <code>database</code> สามารถเลือกระบุพอร์ตพร้อมเซิร์ฟเวอร์ได้ โดยคั่นด้วยเครื่องหมายโคลอน อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>Encoding</code> : ค่า TextEncoding ที่ระบุชุดอักขระที่ใช้ในการเข้ารหัสคิวรีทั้งหมดที่ส่งไปยังเซิร์ฟเวอร์ (ค่าเริ่มต้นเป็น null)</li>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>TreatTinyAsBoolean</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะบังคับให้คอลัมน์ tinyint บนเซิร์ฟเวอร์เป็นค่าตรรกะหรือไม่ ค่าเริ่มต้นคือจริง</li>\r\n<li><code>OldGuids</code> : ตรรกะ (จริง/เท็จ) ที่เป็นการตั้งค่าว่าจะให้ถือว่าคอลัมน์ char(36) (หากเป็นเท็จ) หรือคอลัมน์ binary(16) (หากเป็นจริง) เป็น GUID หรือไม่ ค่าเริ่มต้นคือเท็จ</li>\r\n<li><code>ReturnSingleDatabase</code> : ตรรกะ (จริง/เท็จ) ที่เป็นการตั้งค่าว่าจะคืนค่าตารางฐานข้อมูลทั้งหมด (หากเป็นเท็จ) หรือคืนค่าตารางและมุมมองของฐานข้อมูลที่กำหนด (หากเป็นจริง) ค่าเริ่มต้นคือเท็จ</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "นำเข้าข้อมูลจากฐานข้อมูล IBM Netezza",
        "Documentation.LongDescription": "\r\nส่งกลับตารางของตาราง Netezza มุมมอง และฟังก์ชันที่จัดเก็บไว้จากฐานข้อมูลเซิร์ฟเวอร์ Netezza <code>ฐานข้อมูล</code> บนเซิร์ฟเวอร์ <code>เซิร์ฟเวอร์</code> อาจเลือกระบุพอร์ตร่วมกับเซิร์ฟเวอร์ได้โดยคั่นด้วยเครื่องหมายทวิภาค อาจระบุพารามิเตอร์ระเบียนเพิ่มเติม <code>ตัวเลือก</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: ค่าตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งกลับหรือไม่ (ค่าเริ่มต้นคือ จริง)</li>\r\n        <li><code>HierarchicalNavigation</code>: ค่าตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางที่จัดกลุ่มตามชื่อ Schema หรือไม่ (ค่าเริ่มต้นคือ เท็จ)</li>\r\n        <li><code>ConnectionTimeout</code>: ระยะเวลาที่ควบคุมเวลาที่รอก่อนที่จะละทิ้งความพยายามในการเชื่อมต่อเซิร์ฟเวอร์ โดยค่าเริ่มต้นจะขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n        <li><code>CommandTimeout</code>: ระยะเวลาที่ควบคุมเวลาที่อนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานก่อนที่จะยกเลิก โดยค่าเริ่มต้นจะขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>NormalizeDatabaseName</code>: ค่าตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะทำให้ชื่อฐานข้อมูลเป็นมาตรฐานด้วยตัวพิมพ์ใหญ่หรือตีความตามตัวอักษร (ค่าเริ่มต้นคือ จริง)</li>\r\n</ul>\r\nพารามิเตอร์ระเบียนถูกระบุเป็น [option1 = value1, option2 = value2...]",
        "Documentation.Examples": [
          {
            "Description": "แสดงรายการตารางในโครงการ IBM Netezza",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "แสดงผลลัพธ์การใช้งานแบบสอบถามแบบเนทีฟบนแหล่งข้อมูล ODBC",
        "Documentation.LongDescription": "ส่งคืนผลลัพธ์การเรียกใช้ <code>query</code> ด้วยสตริงการเชื่อมต่อ <code>connectionString</code> โดยใช้ ODBC <code>connectionString</code> สามารถเป็นข้อความหรือระเบียนคู่สำหรับค่าคุณสมบัติ ค่าคุณสมบัติสามารถเป็นข้อความหรือตัวเลข สามารถเพิ่มพารามิเตอร์เรกคอร์ดเสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติมได้ โดยในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นคือ 15 วินาที</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างตัวเลือกสตริงการเชื่อมต่อที่สามารถทำงานร่วมกับ SQL Server ได้ สำหรับการรับรองความถูกต้องของ Windows หรือไม่ ค่าเริ่มต้นคือจริง</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับผลลัพธ์ของการเรียกใช้คิวรีอย่างง่ายกับสตริงการเชื่อมต่อที่ให้มา",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "แสดงผลลัพธ์การใช้งานแบบสอบถามบนแหล่งข้อมูล OLE DB",
        "Documentation.LongDescription": "ส่งคืนผลลัพธ์การเรียกใช้ <code>query</code> ด้วยสตริงการเชื่อมต่อ <code>connectionString</code> โดยใช้ OLE DB <code>connectionString</code> สามารถเป็นข้อความหรือระเบียนคู่สำหรับค่าคุณสมบัติ ค่าคุณสมบัติสามารถเป็นข้อความหรือตัวเลข สามารถเพิ่มพารามิเตอร์เรกคอร์ดเสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติมได้ โดยในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างตัวเลือกสตริงการเชื่อมต่อที่สามารถทำงานร่วมกับ SQL Server ได้ สำหรับการรับรองความถูกต้องของ Windows หรือไม่ ค่าเริ่มต้นคือจริง</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "ส่งกลับตารางของตาราง SQL และมุมมองที่พร้อมใช้งานในฐานข้อมูล PostgreSQL",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL และมุมมองที่พร้อมใช้งานในฐานข้อมูล PostgreSQL บนเซิร์ฟเวอร์ <code>server</code> ในอินสแตนซ์ฐานข้อมูลที่ชื่อ <code>database</code> อาจมีการระบุพอร์ตทางเลือกสำหรับเซิร์ฟเวอร์ โดยใช้เครื่องหมายโคลอนในการแยก อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "นำเข้าข้อมูลจาก Snowflake Computing Warehouse",
        "Documentation.LongDescription": "ส่งกลับตารางที่แสดงรายการตารางใน<code>warehouse</code>ของ Snowflake Computing ซึ่งอยู่ที่<code>server</code> อาจระบุพารามิเตอร์ระเบียนทางเลือก <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n<ul>\r\n<li><code>Role</code>: ค่าข้อความที่จะใช้เป็นชื่อบทบาทสำหรับการเชื่อมต่อ</li>\r\n<li><code>CreateNavigationProperties</code>: ค่าตรรกะ (จริง/เท็จ) ที่ตั้งค่าว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งกลับหรือไม่ (ค่าเริ่มต้นคือ จริง)</li>\r\n<li><code>ConnectionTimeout</code>: จำนวนวินาทีที่รอการตอบสนองของเครือข่ายจาก Snowflake</li>\r\n<li><code>CommandTimeout</code>: จำนวนวินาทีที่รอให้คิวรีดำเนินการ</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "แสดงรายการตารางใน Snowflake Warehouse",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "ส่งคืนค่าตารางที่แสดงตารางสำหรับคลัสเตอร์ Spark ที่ระบุไว้",
        "Documentation.LongDescription": "ส่งคืนค่าตารางที่แสดงตารางสำหรับคลัสเตอร์ Spark <code>โฮสต์</code> โดยใช้ <code>โปรโตคอล</code> โปรโตคอลที่ถูกต้องคือ:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "แสดงรายการตารางในอินสแตนซ์ Azure Spark",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "ส่งกลับตารางของตาราง SQL มุมมอง และฟังก์ชันที่ได้รับการจัดเก็บจากฐานข้อมูล SQL Server",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL, มุมมอง และฟังก์ชันที่จัดเก็บไว้จากฐานข้อมูล SQL Server <code>database</code> บนเซิร์ฟเวอร์ <code>server</code> สามารถเลือกระบุพอร์ตพร้อมเซิร์ฟเวอร์ได้ โดยคั่นด้วยเครื่องหมายโคลอนหรือคอมมา อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>MaxDegreeOfParallelism</code> : ตัวเลขที่กำหนดค่าของส่วนคำสั่งคิวรี &quot;maxdop&quot; ในคิวรี SQL ที่สร้างขึ้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>MultiSubnetFailover</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดค่าของคุณสมบัติ &quot;MultiSubnetFailover&quot; ในสตริงการเชื่อมต่อ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>UnsafeTypeConversions</code> : ตรรกะ (จริง/เท็จ) ซึ่งถ้าเป็นจริงจะพยายามพับการแปลงชนิดซึ่งอาจล้มเหลวและทำให้คิวรีทั้งหมดล้มเหลวได้ ไม่แนะนำสำหรับการใช้งานทั่วไป</li>\r\n<li><code>ContextInfo</code> : ค่าไบนารีที่ใช้ในการตั้งค่า CONTEXT_INFO ก่อนที่จะเรียกใช้แต่ละคำสั่ง</li>\r\n<li><code>OmitSRID</code> : ตรรกะ (จริง/เท็จ) ซึ่งถ้าเป็นจริงจะละเว้น SRID เมื่อสร้าง Well-Known Text จากชนิด geometry และชนิด geography</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : ค่าตรรกะ (จริง/เท็จ) ซึ่งถ้าเป็นค่าจริงจะอนุญาตให้พับคิวรีข้ามฐานข้อมูลบนเซิร์ฟเวอร์เดียวกันได้ ค่าเริ่มต้นเป็นเท็จ</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "ส่งกลับตารางของตาราง SQL และมุมมองที่พร้อมใช้งานในฐานข้อมูล Sybase",
        "Documentation.LongDescription": "คืนค่าตารางของตาราง SQL และมุมมองที่พร้อมใช้งานในฐานข้อมูล Sybase บนเซิร์ฟเวอร์ <code>server</code> ในอินสแตนซ์ฐานข้อมูลที่ชื่อ <code>database</code> อาจมีการระบุพอร์ตทางเลือกสำหรับเซิร์ฟเวอร์ โดยใช้เครื่องหมายโคลอนในการแยก อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือจริง)</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : ฟังก์ชันที่ใช้สำหรับการสร้างชื่อของคุณสมบัติการนำทาง</li>\r\n<li><code>Query</code> : คิวรี SQL แบบเนทีฟที่ใช้ในการดึงข้อมูล หากคิวรีมีการสร้างชุดผลลัพธ์หลายชุด ระบบจะส่งคืนเฉพาะชุดผลลัพธ์แรกเท่านั้น</li>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>ConnectionTimeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งความพยายามที่จะเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n</ul>\r\n\r\n    เรกคอร์ดพารามิเตอร์จะระบุในรูปแบบ [option1 = value1, option2 = value2...] หรือ [Query = \"select ...\"] เป็นต้น\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "เพิ่มคอลัมน์ซึ่งมีค่าตำแหน่งที่ชัดเจน",
        "Documentation.LongDescription": "เพิ่มคอลัมน์ที่ชื่อ <code>newColumnName</code> เข้ากับ <code>table</code> ด้วยค่าตำแหน่งที่ชัดเจน\r\n    ค่าที่เลือกได้ <code>initialValue</code> เป็นค่าดัชนีเริ่มต้น ค่าที่เลือกได้ <code>increment</code> ระบุจำนวนที่จะเพิ่มหน่วยให้กับแต่ละค่าดัชนี",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "เพิ่มคอลัมน์ดัชนีที่ชื่อ \"Index\" เข้าในตาราง",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "เพิ่มคอลัมน์ดัชนีที่ชื่อ \"Index\" โดยเริ่มจากค่า 10 และเพิ่มหน่วยทีละ 5 เข้าในตาราง",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "สร้างสำเนาของแถวสำหรับแต่ละค่าในรายการ โดยกำหนดให้มีหนึ่งคอลัมน์ของหนึ่งรายการในตาราง",
        "Documentation.LongDescription": "แยกรายการออกเป็นหนึ่งแถวสำหรับแต่ละค่า โดยกำหนดให้มี <code>table</code> ซึ่ง <code>column</code> เป็นรายการค่า ค่าในคอลัมน์อื่นจะถูกทำซ้ำในแถวใหม่แต่ละแถวที่สร้าง",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แยกคอลัมน์รายการ [Name] ในตาราง",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "เผยแพร่ค่าของเซลล์ก่อนหน้าไปยังเซลล์ที่มีค่าเป็น Null ด้านล่างในคอลัมน์",
        "Documentation.LongDescription": "ส่งกลับตารางหนึ่งจาก <code>table</code> ที่ระบุซึ่งมีการเผยแพร่ค่าของเซลล์ก่อนหน้าไปยังเซลล์ที่มีค่า Null ด้านล่าง <code>columns</code> ที่ระบุ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางที่มีค่า Null ในคอลัมน์ [Place] ที่มีค่าสูงกว่าจากตาราง",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "เผยแพร่ค่าของเซลล์ไปยังเซลล์ที่มีค่าเป็น Null ด้านบนในคอลัมน์",
        "Documentation.LongDescription": "ส่งกลับตารางหนึ่งจาก <code>table</code> ที่ระบุซึ่งมีการเผยแพร่ค่าของเซลล์ถัดไปไปยังเซลล์ที่มีค่า Null ด้านบน <code>columns</code> ที่ระบุ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางที่มีค่า Null ในคอลัมน์ [Column2] ที่มีค่าต่ำกว่าจากตาราง",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "ส่งกลับแถวทั้งหมดซึ่งมีข้อความที่กำหนดให้ในตาราง",
        "Documentation.LongDescription": "ส่งกลับแถวในตาราง <code>table</code> ซึ่งมีข้อความ <code>text</code> ถ้าไม่พบข้อความ ระบบจะส่งกลับตารางว่าง",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาแถวในตารางที่มีค่า \"Bob\"",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "ส่งกลับแถวจำนวนแรกที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับแถวแรกของตาราง <code>table</code> โดยขึ้นอยู่กับค่าของ <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นตัวเลข จะมีการส่งกลับแถวจำนวนมากดังกล่าว (เริ่มต้นที่ด้านบน) </li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นเงื่อนไข แถวที่ตรงกับเงื่อนไขจะถูกส่งกลับจนกว่าแถวจะไม่เป็นไปตามเงื่อนไข</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาสองแถวแรกของตาราง",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "ค้นหาแถวแรกที่ [a] > 0 ในตาราง",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "แสดงผลตารางที่เป็นผลลัพธ์ของการรวมชุดตารางที่มีการแบ่งพาร์ติชัน",
        "Documentation.LongDescription": "ส่งกลับตารางที่เป็นผลลัพธ์ของการรวมชุดตารางที่มีการแบ่งพาร์ติชัน <code>partitions</code> <code>partitionColumn</code> เป็นชื่อของคอลัมน์ที่เพิ่ม ประเภทของคอลัมน์เริ่มต้นคือ <code>any</code> แต่สามารถระบุได้ด้วย <code>partitionColumnType</code>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาประเภทรายการจากรายการ <code>{number}</code>",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "ส่งกลับจำนวนแถวล่าสุดที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับแถวสุดท้ายจากตาราง <code>table</code> โดยขึ้นอยู่กับค่าของ <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นตัวเลข จะมีการส่งกลับแถวจำนวนมากดังกล่าวโดยเริ่มจากตำแหน่ง (สิ้นสุด - <code>countOrCondition</code>) </li>\r\n    <li> ถ้า <code>countOrCondition</code> เป็นเงื่อนไข แถวที่ตรงกับเงื่อนไขจะถูกส่งกลับในตำแหน่งจากน้อยไปหามากจนกว่าแถวจะไม่เป็นไปตามเงื่อนไข</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาสองแถวสุดท้ายของตาราง",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "ค้นหาแถวสุดท้ายที่ [a] > 0 ในตาราง",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "ส่งกลับตารางซึ่งมีคอลัมน์ทั้งหมดขึ้นต้นด้วยข้อความที่กำหนด",
        "Documentation.LongDescription": "ส่งคืนตารางที่ชื่อคอลัมน์ทั้งหมดจาก <code>table</code> ที่แสดงไว้มีคำนำหน้าเป็นข้อความที่กำหนดไว้ <code>prefix</code> บวกจุดทศนิยมในรูปแบบ <code>prefix</code><code>.ColumnName</code>",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "กำหนดค่านำหน้าคอลัมน์ด้วย \"MyTable\" ในตาราง",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "ส่งกลับแถวโดยเริ่มต้นที่ออฟเซตที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับแถวจาก <code>table</code> โดยเริ่มต้นที่ <code>offset</code> ที่ระบุ พารามิเตอร์ที่เลือกได้ <code>count</code> ระบุจำนวนแถวที่จะส่งกลับ ตามค่าเริ่มต้น ทุกแถวหลังจากออฟเซตจะถูกส่งกลับ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนแถวทั้งหมดที่เริ่มต้นด้วยออฟเซ็ต 1 ในตาราง",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "ส่งคืนแถวที่เริ่มต้นด้วยออฟเซ็ต 1 ในตาราง",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "ย้ายคอลัมน์ที่ระบุออก",
        "Documentation.LongDescription": "นำ <code>columns</code> ที่ระบุออกจาก <code>table</code> ที่กำหนดให้\r\n    ถ้าไม่มีคอลัมน์ที่กำหนดอยู่ ระบบจะแสดงข้อผิดพลาด เว้นแต่พารามิเตอร์ที่เลือกได้ <code>missingField</code> จะระบุลักษณะการทำงานอื่น (เช่น <code>MissingField.UseNull</code> หรือ <code>MissingField.Ignore</code>)",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "นำคอลัมน์ [Phone] ออกจากตาราง",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "ลองนำคอลัมน์ที่ไม่มีอยู่ออกจากตาราง",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "เอาการปรากฏทั้งหมดของแถวที่ระบุออกจากตาราง",
        "Documentation.LongDescription": "เอาเหตุการณ์ทั้งหมดของ <code>rows</code> ที่ระบุออกจาก <code>table</code>\r\n    พารามิเตอร์ที่เลือกได้ <code>equationCriteria</code> อาจถูกระบุเพื่อควบคุมการเปรียบเทียบระหว่างแถวของตาราง",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "เอาแถวใดๆ ซึ่งมี [a = 1] ออกจากตาราง <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code>",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "เอาจำนวนแถวที่ระบุออก",
        "Documentation.LongDescription": "เอา <code>count</code> ของแถวออกจากจุดเริ่มต้นของ <code>table</code> โดยเริ่มต้นที่ <code>offset</code> ที่ระบุ จำนวนเริ่มต้นของ 1 จะถูกใช้ถ้าไม่ได้ระบุพารามิเตอร์ <code>count</code> ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "นำแถวแรกออกจากตาราง",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "นำแถวที่ตำแหน่ง 1 ออกจากตาราง",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "นำสองแถวที่เริ่มต้นในตำแหน่ง 1 ออกจากตาราง",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "นำการเปลี่ยนชื่อของฟอร์ม {old, new} ไปใช้",
        "Documentation.LongDescription": "ดำเนินการเปลี่ยนชื่อที่กำหนดให้กับคอลัมน์ในตาราง <code>table</code> การดำเนินการแทนที่ <code>renames</code> ประกอบด้วยรายการที่มีสองค่า ได้แก่ชื่อคอลัมน์เดิมและชื่อคอลัมน์ใหม่ที่ระบุไว้ในรายการ\r\n    ถ้าไม่มีคอลัมน์อยู่ ระบบจะแสดงข้อยกเว้น เว้นแต่พารามิเตอร์ที่เลือกได้ <code>missingField</code> จะระบุค่าสำรอง (เช่น <code>MissingField.UseNull</code> หรือ <code>MissingField.Ignore</code>)",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ชื่อคอลัมน์ \"CustomerNum\" ด้วย \"CustomerID\" ในตาราง",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "แทนที่ชื่อคอลัมน์ \"CustomerNum\" ด้วย \"CustomerID\" และ \"PhoneNum\" ด้วย \"Phone\" ในตาราง",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "แทนที่ชื่อคอลัมน์ \"NewCol\" ด้วย \"NewColumn\" ในตาราง และละเว้นหากไม่มีคอลัมน์อยู่",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "ส่งกลับตารางที่มีคอลัมน์ในลำดับที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตารางจากค่าที่ป้อน <code>table</code> ที่มีคอลัมน์ในลำดับที่ระบุโดย <code>columnOrder</code> คอลัมน์ที่ไม่ถูกระบุในรายการจะไม่ได้รับการจัดลำดับใหม่\r\n     ถ้าไม่มีคอลัมน์อยู่ ระบบจะแสดงข้อยกเว้น เว้นแต่พารามิเตอร์ที่เลือกได้ <code>missingField</code> จะระบุค่าสำรอง (เช่น <code>MissingField.UseNull</code> หรือ <code>MissingField.Ignore</code>)",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "สลับเปลี่ยนลำดับของคอลัมน์ [Phone] และ [Name] ในตาราง",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "สลับเปลี่ยนลำดับของคอลัมน์ [Phone] และ [Address] หรือใช้ \"MissingField.Ignore\" ในตาราง โดยจะไม่มีการเปลี่ยนแปลงตาราง เนื่องจากไม่มีคอลัมน์ [Address] อยู่",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "ทำซ้ำแถวของตารางตามจำนวนครั้งที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีแถวจากค่าที่ป้อน <code>table</code> ที่ทำซ้ำเป็นจำนวน <code>count</code> ครั้งตามที่ระบุ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ซ้ำแถวในตารางสองครั้ง",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "แทนที่ค่าที่ผิดพลาดในคอลัมน์ที่ระบุด้วยค่าที่สอดคล้องกันซึ่งระบุไว้",
        "Documentation.LongDescription": "แทนที่ค่าที่ผิดพลาดในคอลัมน์ <code>table</code> ด้วยค่าใหม่ในรายการ <code>errorReplacement</code> รูปแบบของรายการคือ {{column1, value1}, …} อาจมีเค่าแทนที่เพียงหนึ่งค่าต่อหนึ่งคอลัมน์ การระบุคอลัมน์มากว่าหนึ่งจะทำให้เกิดข้อผิดพลาด",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ค่าข้อผิดพลาดด้วยข้อความ \"world\" ในตาราง",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "แทนที่ค่าข้อผิดพลาดในคอลัมน์ A ด้วยข้อความ \"hello\" และในคอลัมน์ B ด้วยข้อความ \"world\" ในตาราง",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "แทนที่คีย์ของตารางที่ระบุ",
        "Documentation.LongDescription": "แทนที่คีย์ของตารางที่ระบุ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แทนที่คีย์ที่มีอยู่ของตาราง",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "แทนที่แถวที่ระบุทั้งหมดด้วยแถวที่กำหนดให้",
        "Documentation.LongDescription": "แทนที่แถวที่ระบุทั้งหมดใน <code>table</code> ด้วยแถวที่กำหนดให้ แถวที่จะแทนที่และการแทนที่จะถูกระบุใน <code>replacements</code> โดยใช้การจัดรูปแบบ {old, new}\r\n    พารามิเตอร์ที่เลือกได้ <code>equationCriteria</code> อาจถูกระบุเพื่อควบคุมการเปรียบเทียบระหว่างแถวของตาราง",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "แทนที่แถว [a = 1, b = 2] และ [a = 2, b = 3] ด้วย [a = -1, b = -2],[a = -2, b = -3] ในตาราง",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "ส่งกลับตารางที่มีเฉพาะคอลัมน์ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับ <code>table</code> ที่มีเฉพาะ <code>columns</code> ที่ระบุ\r\n    <ul>\r\n       <li><code>table</code>: ตารางที่กำหนดให้</li>\r\n       <li><code>columns</code>: รายการคอลัมน์จากตาราง <code>table</code> ที่จะส่งกลับ คอลัมน์ในตารางที่ส่งกลับจะอยู่ในลำดับที่แสดงรายการใน <code>columns</code></li>\r\n       <li><code>missingField</code>: <i>(เลือกได้)</i> วิธีดำเนินการถ้าไม่มีคอลัมน์ดังกล่าวอยู่  ตัวอย่างเช่น: <code>MissingField.UseNull</code> หรือ <code>MissingField.Ignore</code>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "รวมเฉพาะคอลัมน์ [Name]",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "รวมเฉพาะคอลัมน์ [CustomerID] และ [Name]",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "ถ้าไม่มีคอลัมน์ที่รวมอยู่ ผลลัพธ์เริ่มต้นคือข้อผิดพลาด",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "ถ้าไม่มีคอลัมน์ที่รวมอยู่ ตัวเลือก <code>MissingField.UseNull</code> จะสร้างคอลัมน์ของค่า null",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "เลือกแถวที่ตรงกับฟังก์ชันเงื่อนไข",
        "Documentation.LongDescription": "ส่งกลับตารางแถวจาก <code>table</code> ที่ตรงกับการเลือก <code>condition</code>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "เลือกแถวในตารางซึ่งค่าในคอลัมน์ [CustomerID] มีค่ามากกว่า 2",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "เลือกแถวในตาราง ซึ่งชื่อไม่ประกอบด้วย \"B\"",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "เรียงลำดับตารางโดยใช้ชื่อคอลัมน์อย่างน้อยหนึ่งชื่อและเกณฑ์การเปรียบเทียบ",
        "Documentation.LongDescription": "เรียงลำดับ <code>table</code> โดยใช้รายการของชื่อคอลัมน์อย่างน้อยหนึ่งชื่อและ <code>comparisonCriteria</code> ที่เลือกได้ในฟอร์ม { { col1, comparisonCriteria }, {col2} }",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "จัดเรียงตารางตามคอลัมน์ \"OrderID\"",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "จัดเรียงตารางตามคอลัมน์ \"OrderID\" โดยเรียงจากมากไปหาน้อย",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "จัดเรียงตารางตามคอลัมน์ \"CustomerID\" จากนั้น \"OrderID\" โดยเรียง \"CustomerID\" จากน้อยไปหามาก",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "แปลงชื่อคอลัมน์โดยใช้ฟังก์ชันที่กำหนดไว้",
        "Documentation.LongDescription": "แปลงชื่อคอลัมน์โดยใช้ฟังก์ชัน <code>nameGenerator</code> ที่กำหนดไว้ ตัวเลือกที่ใช้ได้:\r\n    <div>\r\n      <code>MaxLength</code> ความยาวสูงสุดของชื่อคอลัมน์ใหม่ หากฟังก์ชันที่กำหนดไว้ให้ผลลัพธ์เป็นชื่อคอลัมน์ที่ยาวกว่า ชื่อนั้นจะถูกตัดทอนให้สั้นลง\r\n    </div>\r\n    <div>\r\n      <code>ตัวเปรียบเทียบ</code> ใช้เพื่อควบคุมการเปรียบเทียบขณะที่สร้างชื่อคอลัมน์ใหม่ ตัวเปรียบเทียบอาจใช้เพื่อให้การเปรียบเทียมแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็กหรือการรับรู้ภาษา\r\n    </div>\r\n    <div>\r\n     รุ่นต่อไปนี้ในตัวเปรียบเทียบจะมีในภาษาของสูตร:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: ใช้เพื่อดำเนินการเปรียบเทียบลำดับที่แน่นอน</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: ใช้เพื่อดำเนินการเปรียบเทียบลำดับที่แน่นอนแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่เล็ก</li>\r\n      <li> <code>Comparer.FromCulture</code>: ใช้เพื่อดำเนินการเปรียบเทียบตามการรับรู้ภาษา</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "นำตัวอักขระ <code>#(tab)</code> ออกจากชื่อคอลัมน์",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "แปลงชื่อคอลัมน์เพื่อสร้างชื่อที่ไม่ไม่เทียบตรงตามตัวพิมพ์ใหญ่เล็กมีความยาว 6.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "นำการแปลงชนิดฟอร์ม { column, type } ไปใช้โดยใช้ Culture ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตารางจากค่าที่ป้อน <code>table</code> โดยนำการดำเนินการแปลงไปใช้กับคอลัมน์ที่ระบุในพารามิเตอร์ <code>typeTransformations</code> (ซึ่งมีรูปแบบเป็น { column name, type name}) โดยใช้วัฒนธรรมที่ระบุในพารามิเตอร์เพิ่มเติม <code>culture</code> (ตัวอย่างเช่น \"en-US\")\r\n    ถ้าไม่มีคอลัมน์ดังกล่าว ระบบจะแสดงข้อยกเว้น",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แปลงค่าตัวเลขในคอลัมน์ [a] เป็นค่าข้อความจากตาราง <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "แปลงค่าของคอลัมน์อย่างน้อยหนึ่งคอลัมน์",
        "Documentation.LongDescription": "แปลง <code>table</code> โดยนําการดําเนินการแต่ละคอลัมน์ที่แสดงอยู่ใน <code>transformOperations</code> ไปใช้ (โดยที่รูปแบบคือ { column name, transformation } หรือ { column name, transformation, new column type })\r\n    ถ้ามีการระบุ <code>defaultTransformation</code> คอลัมน์นั้นจะถูกนําไปใช้กับคอลัมน์ทั้งหมดที่ไม่ได้แสดงอยู่ใน <code>transformOperations</code> \r\n    ถ้าไม่มีคอลัมน์ที่แสดงอยู่ใน <code>transformOperations</code> ข้อยกเว้นจะเกิดขึ้น เว้นแต่ว่าพารามิเตอร์ที่เลือกได้ <code>missingField</code> ระบุทางเลือก (ตัวอย่างเช่น <code>MissingField.UseNull</code> or <code>MissingField.Ignore</code>)",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แปลงค่าข้อความในคอลัมน์ [A] เป็นค่าตัวเลข และค่าตัวเลขในคอลัมน์ [B] เป็นค่าข้อความ",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "แปลงค่าตัวเลขในคอลัมน์ [X] ที่หายไปเป็นค่าข้อความ โดยไม่สนใจคอลัมน์ที่ไม่มีอยู่",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "แปลงค่าตัวเลขในคอลัมน์ [X] ที่หายไปเป็นค่าข้อความ โดยค่าเริ่มต้นเป็น null ในคอลัมน์ที่ไม่มีอยู่",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "เพิ่มค่าตัวเลขในคอลัมน์ [B] และแปลงเป็นค่าข้อความ และแปลงคอลัมน์อื่นๆ ทั้งหมดเป็นตัวเลข",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "สร้างหรือขยายตารางโดยใช้ตัวจัดการที่กำหนดเองโดยผู้ใช้สำหรับคิวรีและการดำเนินการ",
        "Documentation.LongDescription": "<p>ส่งกลับมุมมองของ <code>table</code> ที่มีการใช้ฟังก์ชันที่ระบุใน <code>handlers</code> แทนลักษณะการทํางานเริ่มต้นของการดําเนินการเมื่อมีการนําการดําเนินการไปใช้กับมุมมอง</p>\r\n<p>ถ้ามี <code>table</code> ฟังก์ชันตัวจัดการทั้งหมดจะเป็นทางเลือก ถ้าไม่มี <code>table</code> จําเป็นต้องมีฟังก์ชันตัวจัดการ <code>GetType</code> และ <code>GetRows</code> ถ้าไม่ได้ระบุฟังก์ชันตัวจัดการสําหรับการดําเนินการ ลักษณะการทํางานเริ่มต้นของการดําเนินการจะถูกนําไปใช้กับ <code>table</code> แทน (ยกเว้นในกรณีของ <code>GetExpression</code>)</p>\r\n<p>ฟังก์ชันตัวจัดการต้องส่งกลับค่าที่เทียบเท่ากับผลลัพธ์ของการใช้การดําเนินการ <code>table</code> (หรือมุมมองผลลัพธ์ในกรณีของ <code>GetExpression</code>)</p>\r\n<p>ถ้าฟังก์ชันตัวจัดการแสดงข้อผิดพลาด ลักษณะการทํางานเริ่มต้นของการดําเนินการจะถูกนําไปใช้กับมุมมอง</p>\r\n<p><code>Table.View</code> สามารถใช้เพื่อใช้การพับไปยังแหล่งข้อมูล – การแปลคิวรี M เป็นคิวรีเฉพาะแหล่งข้อมูล (ตัวอย่างเช่น เมื่อต้องการสร้างคําสั่ง T-SQL จากคิวรี M)</p>\r\n<p>ดูคู่มือเอกสารตัวเชื่อมต่อแบบกําหนดเองของ Power Query ที่เผยแพร่สําหรับคําอธิบายที่สมบูรณ์มากขึ้นของ <code>Table.View</code></p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "สร้างมุมมองพื้นฐานที่ไม่จําเป็นต้องเข้าถึงแถวเพื่อกําหนดชนิดหรือจํานวนแถว",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "ใส่ชื่อองค์กรและโครงการ",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps (เฉพาะบอร์ดเท่านั้น)",
        "Documentation.LongDescription": "ส่งกลับตารางมุมมองการวิเคราะห์ที่เสนอโดย Azure DevOps"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "นำเข้าข้อมูลจาก Vertica",
        "Documentation.LongDescription": "ส่งกลับตาราง Schema ที่พร้อมใช้งานบนเซิร์ฟเวอร์ที่มีชื่อตามพารามิเตอร์ <code>เซิร์ฟเวอร์</code> ในฐานข้อมูลที่มีชื่อตามพารามิเตอร์ <code>ฐานข้อมูล</code>\r\nอาจมีการมอบพารามิเตอร์ระเบียนแบบไม่บังคับที่เรีกยว่า <code>ตัวเลือก</code> เพื่อระบุคุณสมบัติเพิ่มเติมได้ ระเบียนสามารถประกอบด้วยเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n    <li><code>ConnectionTimeout</code>: ระยะเวลาที่ควบคุมระยะเวลาในการรอก่อนที่จะละทิ้งความพยายามที่จะทำการเชื่อมต่อไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นจะขึ้นอยู่กับโปรแกรมควบคุม </li>\r\n    <li><code>CommandTimeout </code>: ระยะเวลาที่ควบคุมระยะเวลาที่คิวรีฝั่งเซิร์ฟเวอร์ได้รับอนุญาตให้เรียกใช้ก่อนที่จะถูกยกเลิก ค่าเริ่มต้นจะขึ้นอยู่กับโปรแกรมควบคุม</li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "แสดงรายการตารางใน Vertica"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "นำกลับตารางพร้อมด้วยเนื้อหารายงานจาก Webtrends",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "เรียกหาจุดแสดงผลการรายงาน Webtrends ที่ให้ไว้ และนำกลับข้อมูลทั้งหมดเป็นตาราง",
        "Documentation.Examples": [
          {
            "Description": "เรียกหาจุดแสดงผลรายงานของผู้เยี่ยมชม Webtrends สำหรับข้อมูลใน 30 วันล่าสุด",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "ตารางของข้อมูลผู้เยี่ยมชม"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "ส่งกลับรายการโดเมน Active Directory ในฟอเรสต์เดียวกับโดเมนที่ระบุหรือรายการโดเมนของเครื่องปัจจุบันหากไม่มีการระบุโดเมน",
        "Documentation.LongDescription": "ส่งกลับรายการโดเมน Active Directory ในฟอเรสต์เดียวกับโดเมนที่ระบุหรือรายการโดเมนของเครื่องปัจจุบันหากไม่มีการระบุโดเมน",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "ส่งคืนผลลัพธ์การเรียกใช้คิวรีแบบเนทีฟบนแหล่งข้อมูล ADO.NET",
        "Documentation.LongDescription": "ส่งคืนผลลัพธ์การเรียกใช้ <code>query</code> ด้วยสตริงการเชื่อมต่อ <code>connectionString</code> โดยใช้ตัวให้บริการ ADO.NET <code>providerName</code> <code>connectionString</code> สามารถเป็นข้อความหรือระเบียนคู่สำหรับค่าคุณสมบัติ ค่าคุณสมบัติสามารถเป็นข้อความหรือตัวเลข สามารถเพิ่มพารามิเตอร์เรกคอร์ดเสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติมได้ โดยในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : ระยะเวลาที่ควบคุมว่าจะอนุญาตให้คิวรีฝั่งเซิร์ฟเวอร์ทำงานนานเพียงใดก่อนที่จะถูกยกเลิก ค่าเริ่มต้นคือสิบนาที</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างตัวเลือกสตริงการเชื่อมต่อที่สามารถทำงานร่วมกับ SQL Server ได้ สำหรับการรับรองความถูกต้องของ Windows หรือไม่ ค่าเริ่มต้นคือจริง</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "ส่งกลับชุดรายงานใน Adobe Analytics",
        "Documentation.LongDescription": "ส่งคืนตารางแพคเกจหลายมิติจาก Adobe Analytics โดยอาจระบุพารามิเตอร์ระเบียนเสริม <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะดูตารางโดยจัดกลุ่มตามชื่อรูปแบบหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>MaxRetryCount</code> : จำนวนครั้งที่ลองใหม่เพื่อดำเนินการเมื่อทำการสำรวจสำหรับผลลัพธ์ของแบบสอบถาม ค่าเริ่มต้นคือ 120</li>\r\n<li><code>RetryInterval</code> : ระยะเวลาระหว่างการพยายามลองใหม่แต่ละครั้ง ค่าเริ่มต้นคือ 1 วินาที</li>\r\n<li><code>Implementation</code> : ระบุเวอร์ชัน API ของ Adobe Analytics ค่าที่ถูกต้องคือ: &quot;2.0&quot; ค่าเริ่มต้นใช้ API เวอร์ชัน 1.4</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "Hive LLAP",
        "Documentation.Caption": null,
        "Documentation.Description": "นำเข้าข้อมูลจาก Hive LLAP",
        "Documentation.LongDescription": "\r\nส่งกลับรายการของตารางจาก Hive LLAP ที่ระบุโดย <code>ฐานข้อมูล</code> บน <code>เซิร์ฟเวอร์</code> Hive LLAP โดยใช้ <code>โพรโทคอล</code> ที่เลือก อาจสามารถเลือกระบุหมายเลขพอร์ตพร้อมเซิร์ฟเวอร์ได้ โดยคั่นด้วยเครื่องหมายทวิภาค Thrift Transport Protocol คือชนิดที่ระบุด้วยค่า \"Binary\", \"SASL\", \"HTTP\" อาจระบุพารามิเตอร์ <code>ตัวเลือก</code> เพิ่มเติมเพื่อควบคุมตัวเลือกต่อไปนี้:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: ระยะเวลาที่ควบคุมเวลาที่รอก่อนที่จะละทิ้งความพยายามในการเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นจะขึ้นอยู่กับไดรเวอร์</li>\r\n        <li><code>CommandTimeout</code>: ระยะเวลาที่ควบคุมเวลาซึ่งคิวรีฝั่งเซิร์ฟเวอร์ได้รับอนุญาตให้ทำงานก่อนที่จะถูกยกเลิก ค่าเริ่มต้นจะขึ้นอยู่กับไดรเวอร์</li>\r\n</ul>\r\nพารามิเตอร์ <code>ตัวเลือก</code> ถูกระบุเป็น [option1 = value1, option2 = value2...]"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับสรุปข้อมูลระหว่าง 2017-5-1 ถึง 2017-6-15",
            "Code": "ให้    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [ numberOfMonth = 1 ]\r\n          ผลลัพธ์ = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน\r\n          ผลลัพธ์",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลสรุประหว่าง 2017-5-1 ถึง 2017-6-15"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับข้อมูลสรุปสำหรับเดือนเมษายน 2017",
            "Code": "ให้    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ]\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน\r\n          ผลลัพธ์",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2017-4-1 และ 2017-4-30"
          },
          {
            "Description": "สมมติว่าวันนี้คือ 2017-6-15 ให้รับข้อมูลสรุปจากเดือนเมษายน 2017 จนถึงปัจจุบัน",
            "Code": "ให้    \r\n          enrollmentNumber = \"100\"\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ]\r\n          ผลลัพธ์ = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      ใน\r\n          ผลลัพธ์",
            "Result": "ฟังก์ชันจะส่งกลับข้อมูลระหว่าง 2017-4-1 ถึง 2017-6-15"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "ใส่ชื่อองค์กรและโครงการ",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "บริการ Azure DevOps",
        "Documentation.LongDescription": "ส่งกลับตารางฟีด OData ที่เสนอโดย Azure DevOps"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "เชื่อมต่อกับอินสแตนซ์ Dataverse ของคุณ (Dynamics 365 และ PowerApps)"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "รวมตารางมิติที่ระบุลงในบริบทตัวกรองของคิวบ์และเปลี่ยนแปลงส่วนประกอบแบบมิติของบริบทตัวกรองโดยขยายชุดที่ระบุของแอตทริบิวต์มิติ",
        "Documentation.LongDescription": "รวมตารางมิติที่ระบุ, <code>dimensionSelector</code>, ลงในบริบทตัวกรอง, <code>cube</code>, ของคิวบ์และเปลี่ยนแปลงส่วนประกอบแบบมิติของบริบทตัวกรองโดยขยายชุดที่ระบุ, <code>attributeNames</code>, ของแอตทริบิวต์มิติ แอตทริบิวต์มิติจะถูกเพิ่มลงในมุมมองแบบตารางที่มีคอลัมน์ชื่อว่า <code>newColumnNames</code>, หรือ <code>attributeNames</code> หากไม่ได้ระบุ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "เพิ่มคอลัมน์ลงในคิวบ์ที่มีผลลัพธ์ของการวัดที่ใช้ในบริบทแถวของแต่ละแถว",
        "Documentation.LongDescription": "เพิ่มคอลัมน์ที่มีชื่อว่า <code>column</code> ลงใน <code>cube</code> ที่มีผลลัพธ์ของการวัด <code>measureSelector</code> ที่ใช้ในบริบทแถวของแต่ละแถว การวัดจะได้รับผลกระทบจากการเปลี่ยนแปลงส่วนประกอบมิติและการแบ่งส่วน ค่าการวัดจะถูกปรับหลังจากการดำเนินการคิวบ์บางอย่างถูกดำเนินการ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "ใส่สภาพแวดล้อมและบริษัท Dynamics 365 Business Central ของคุณ",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "ส่งกลับตารางพร้อมข้อมูลของ Dynamics 365 Business Central ที่เกี่ยวข้อง "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "ใส่สภาพแวดล้อมและบริษัท Dynamics 365 Business Central ของคุณ",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "ส่งกลับตารางพร้อมข้อมูลของ Dynamics 365 Business Central ที่เกี่ยวข้อง "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "ใส่สภาพแวดล้อมและบริษัท Dynamics 365 Business Central ของคุณ",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "ส่งกลับตารางพร้อมข้อมูลของ Dynamics 365 Business Central ที่เกี่ยวข้อง "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "ใส่สภาพแวดล้อมและบริษัท Dynamics 365 Business Central ของคุณ",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "ส่งกลับตารางพร้อมข้อมูลของ Dynamics 365 Business Central ที่เกี่ยวข้อง "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "ส่งกลับเนื้อหาของเวิร์กบุ๊ก Excel ปัจจุบัน",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเวิร์กบุ๊ก Excel ปัจจุบันที่ส่งกลับตาราง ช่วงที่มีชื่อ และอาร์เรย์แบบไดนามิก ไม่เหมือนกับ <code>Excel.Workbook</code> ที่จะไม่ส่งกลับแผ่นงาน",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "ส่งกลับสารบัญจากบัญชี Microsoft Exchange",
        "Documentation.LongDescription": "ส่งคืนตารางเนื้อหาจากบัญชี Microsoft Exchange <code>mailboxAddress</code> หากไม่มีการระบุ <code>mailboxAddress</code> จะมีการใช้บัญชีตามค่าเริ่มต้นสำหรับข้อมูลประจำตัว",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "คลังข้อมูล",
        "Documentation.Caption": "คลังข้อมูล",
        "Documentation.Description": "นำเข้าข้อมูลจากคลังข้อมูล",
        "Documentation.LongDescription": "นำเข้าข้อมูลจากคลังข้อมูล"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "ส่งคืนบัญชี Google Analytics",
        "Documentation.LongDescription": "ส่งคืนบัญชี Google Analytics ซึ่งสามารถเข้าถึงจากข้อมูลประจำตัวปัจจุบัน",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "นำเข้าข้อมูลจากฐานข้อมูล Google BigQuery",
        "Documentation.LongDescription": "\r\n      ส่งกลับตารางที่แสดงรายการโครงการที่พร้อมใช้งานใน Google BigQuery อาจมีการระบุพารามิเตอร์ระเบียนที่เลือกได้ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: ระยะเวลาที่ควบคุมระยะเวลารอก่อนที่จะละทิ้งความพยายามในการเชื่อมต่อกับเซิร์ฟเวอร์ ค่าเริ่มต้นคือค่าหมดเวลาสำหรับการเชื่อมต่อ ODBC</li>\r\n        <li><code>CommandTimeout</code>: ระยะเวลาที่ควบคุมระยะเวลาที่คิวรีฝั่งเซิร์ฟเวอร์ได้รับอนุญาตให้เรียกใช้ก่อนที่จะถูกยกเลิก</li>\r\n        <li><code>BillingProject</code>: ID โครงการสำหรับการเรียกเก็บเงิน ค่าเริ่มต้นคือโครงการแรกที่พร้อมใช้งาน</li>\r\n        <li><code>UseStorageApi</code>: ระบุว่าจะใช้ API ของที่เก็บข้อมูล BigQuery สําหรับชุดผลลัพธ์ขนาดใหญ่หรือไม่ ค่าเริ่มต้นเป็น true เพื่อใช้ API ของที่เก็บข้อมูล ตั้งค่าเป็น false เพื่อไม่ใช้ API ของที่เก็บข้อมูล</li>\r\n      </ul>\r\n    พารามิเตอร์ระเบียนถูกระบุเป็น [option1 = value1, option2 = value2...]\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "แสดงรายการโครงการที่พร้อมใช้งานใน Google BigQuery",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Lakehouse",
        "Documentation.Caption": "นําเข้าข้อมูลจาก Lakehouse",
        "Documentation.Description": "นําเข้าข้อมูลจาก Lakehouse",
        "Documentation.LongDescription": "เชื่อมต่อกับ Lakehouse ทั้งหมดที่คุณมีการเข้าถึง และเลือกเอนทิตีที่คุณต้องการใช้"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "คืนค่าตารางพร้อมข้อมูล MailChimp ที่สำคัญ",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "คืนค่าตารางพร้อมข้อมูล MailChimp ที่สำคัญ",
        "Documentation.Examples": [
          {
            "Description": "คืนค่าตารางพร้อมข้อมูล MailChimp ที่สำคัญ",
            "Code": "MailChimp.Tables()",
            "Result": "ตารางพร้อมข้อมูล MailChimp ที่สำคัญ"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "ส่งคืนค่าตารางพร้อมกิจกรรมสำหรับลูกค้าที่สนใจ",
        "Documentation.LongDescription": "เรียกใช้ Marketo REST API Endpoint ที่ <code>url</code>/rest/v1/activities.json กิจกรรมทั้งหมดอยู่ในรายการ <code>activityIds</code> ซึ่งเกิดขึ้นนับจากส่งคืนค่า <code>startTime</code>",
        "Documentation.Examples": [
          {
            "Description": "ดึงตารางกิจกรรม \"เข้าชมหน้าเว็บ\" นับจากวันที่ 1 เดือนพฤศจิกายน ปี 2015",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "ตารางพร้อมรายละเอียดกิจกรรม \"เข้าชมหน้าเว็บ\" ทั้งหมดนับจากวันที่ 1 เดือนพฤศจิกายน ปี 2015"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"เลือก * จาก PV_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "กระแสข้อมูล Power BI (ดั้งเดิม)",
        "Documentation.Caption": "นำเข้าข้อมูลจากกระแสข้อมูล Power BI",
        "Documentation.LongDescription": "เชื่อมต่อกับกระแสข้อมูล Power BI ทั้งหมดที่คุณสามารถเข้าถึง และเลือกเอนทิตีที่คุณต้องการใช้"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Data Mart",
        "Documentation.Caption": "Data Mart",
        "Documentation.Description": "นําเข้าข้อมูลจาก Data Mart",
        "Documentation.LongDescription": "นําเข้าข้อมูลจาก Data Mart"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "กระแสข้อมูล",
        "Documentation.Caption": "นําเข้าข้อมูลจากกระแสข้อมูล",
        "Documentation.Description": "นําเข้าข้อมูลจากกระแสข้อมูล",
        "Documentation.LongDescription": "เชื่อมต่อกับกระแสข้อมูลทั้งหมดที่คุณมีการเข้าถึง และเลือกเอนทิตีที่คุณต้องการใช้"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "นำเข้าข้อมูลจาก QuickBooks Online",
        "Documentation.LongDescription": "\r\n        ส่งคืนค่าตารางที่แสดงรายการตารางที่มีอยู่ใน QuickBooks Online พารามิเตอร์ระเบียนเพิ่มเติม <code>options</code> อาจถูกระบุเพื่อควบคุมตัวเลือกต่อไปนี้:\r\n          <ul>\r\n            <li><code>ConnectionTimeout</code>: ระยะเวลาที่ควบคุมระยะเวลาในการรอก่อนที่จะละทิ้งความพยายามที่จะทำการเชื่อมต่อไปยังเซิร์ฟเวอร์</li>\r\n            <li><code>CommandTimeout</code>: ระยะเวลาที่ควบคุมระยะเวลาที่คิวรีฝั่งเซิร์ฟเวอร์ได้รับอนุญาตให้เรียกใช้ก่อนที่จะถูกยกเลิก</li>\r\n          </ul>\r\n        พารามิเตอร์ระเบียนถูกระบุเป็น [option1 = value1, option2 = value2...]\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "ส่งผลออบเจ็กต์จากบัญชี Salesforce",
        "Documentation.LongDescription": "ส่งคืนออบเจ็กต์ไปยังบัญชี Salesforce ที่กำหนดไว้ในข้อมูลประจำตัว จะมีการเชื่อมต่อบัญชีผ่านสภาพแวดล้อมที่กำหนดไว้ <code>loginUrl</code> หากไม่มีการกำหนดสภาพแวดล้อมไว้ จะมีการเชื่อมต่อบัญชีเข้าระบบการผลิต (https://login.salesforce.com) อาจมีการกำหนดเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติม ในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะสร้างคุณสมบัติการนำทางบนค่าที่ส่งคืนหรือไม่ (ค่าเริ่มต้นคือเท็จ)</li>\r\n<li><code>ApiVersion</code> : รุ่นของ Salesforce API ที่จะใช้สำหรับคิวรีนี้ เมื่อไม่ได้ระบุ จะใช้ API รุ่น 29.0</li>\r\n<li><code>Timeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งคำขอไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นคือตามแหล่งที่มา</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "ส่งผลรายงานจากบัญชี Salesforce",
        "Documentation.LongDescription": "ส่งคืนรายงานไปยังบัญชี Salesforce ที่กำหนดไว้ในข้อมูลประจำตัว จะมีการเชื่อมต่อบัญชีผ่านสภาพแวดล้อมที่กำหนดไว้ <code>loginUrl</code> หากไม่มีการกำหนดสภาพแวดล้อมไว้ จะมีการเชื่อมต่อบัญชีเข้าระบบการผลิต (https://login.salesforce.com) อาจมีการกำหนดเรกคอร์ดพารามิเตอร์เสริม <code>options</code> เพื่อระบุคุณสมบัติเพิ่มเติม ในเรกคอร์ดสามารถมีเขตข้อมูลต่อไปนี้ได้:\r\n    <ul>\r\n<li><code>ApiVersion</code> : รุ่นของ Salesforce API ที่จะใช้สำหรับคิวรีนี้ เมื่อไม่ได้ระบุ จะใช้ API รุ่น 29.0</li>\r\n<li><code>Timeout</code> : ระยะเวลาที่ควบคุมว่าจะรอนานเพียงใดก่อนที่จะละทิ้งคำขอไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นคือตามแหล่งที่มา</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "ส่งกลับ InfoCubes และคิวรีในระบบ SAP Business Warehouse ที่จัดกลุ่มโดย InfoArea",
        "Documentation.LongDescription": "คืนค่าตารางของ InfoCubes และคิวรีที่จัดกลุ่มโดย InfoArea จากอินสแตนซ์คลังข้อมูลธุรกิจ SAP ที่เซิร์ฟเวอร์ <code>server</code> โดยมีหมายเลขระบบ <code>systemNumberOrSystemId</code> และไคลเอ็นต์ ID <code>clientId</code> อาจระบุเรกคอร์ดพารามิเตอร์เสริม <code>optionsOrLogonGroup</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "ส่งกลับตารางของแผ่นงาน, รายงาน, โฟลเดอร์ และพื้นที่ทำงานจาก API ของ Smartsheet",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "นำกลับการซ้อนตารางของชีท, รายงาน แฟ้ม และพื้นที่ทำงานที่ยังว่างอยู่จาก API ของ Smartsheet",
        "Documentation.Examples": [
          {
            "Description": "นำกลับชีท, แฟ้ม, รายงานและพื้นที่ทำงานที่ยังว่างอยู่ที่ระดับสูงสุดของลำดับขึ้น Smartsheet",
            "Code": "Smartsheet.Tables()",
            "Result": "ตารางของแฟ้ม, รายงาน และพื้นที่ทำงานจากระดับสูงสุดของลำดับขั้น Smartsheet"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "นำกลับตารางเมตริกจาก SparkPost API v1",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "ฟังก์ชันนี้สามารถใช้เพื่อดึงข้อมูลจากจุดสิ้นสุด \"เมตริก\" เฉพาะของ SparkPost API v1 เมื่อรีเฟรชตารางเหล่านี้หรือเรียกใช้ SparkPost API โดยใช้ตัวเชื่อมนี้ โปรดจำไว้ว่า SparkPost API มีขีดจำกัดอัตรา API ที่แน่นอน ถ้าคุณเห็นรหัสสถานะ 429 ถูกส่งกลับจากเซิร์ฟเวอร์ SparkPost แสดงว่าคุณมาถึงขีดจำกัดอัตราและจะต้องรอสักครู่ก่อนเรียกใช้เพิ่มเติม เมื่อเลือกค่าสำหรับพารามิเตอร์จำนวนวัน โปรดทราบว่า API จะเก็บข้อมูลไว้ 6 เดือนเท่านั้น",
        "Documentation.Examples": [
          {
            "Description": "ดึงเมตริกความสามารถในการส่ง count_sent และ count_rejected สำหรับ campaign_ids ที่ได้รวมมาทั้งหมดในสามวันที่ผ่านมา ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "ตาราง"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "เรียกใช้ Stripe API",
        "Documentation.LongDescription": "เรียกใช้ Stripe API ที่ https://api.stripe.com/v1/<code>method</code> พร้อมส่งผ่านระเบียน <code>additionalParameters</code> เป็นเช่นพารามิเตอร์เพิ่มเติม และรายการ <code>ColumnNames</code> สำหรับชื่อคอลัมน์ที่คาดไว้ มีการใช้ Stripe เวอร์ชัน 2015-10-16",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนค่าตารางพร้อมเหตุการณ์ที่สร้างขึ้นหลังวันที่ 1 เดือนพฤศจิกายน ปี 2015",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "ตารางพร้อมเหตุการณ์ที่ระบุเฉพาะสำหรับบัญชี Stripe ปัจจุบัน"
          },
          {
            "Description": "ส่งคืนค่าตารางพร้อม SKU ทั้งหมด",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "ตารางพร้อม SKU ทั้งหมดสำหรับบัญชี Stripe ปัจจุบัน"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "ส่งคืนค่าตารางที่แสดงรายการตารางและฟังก์ชัน Stripe ที่สามารถเลือกใช้งานได้",
        "Documentation.LongDescription": "ส่งคืนค่าตารางที่แสดงรายการตารางและฟังก์ชัน Stripe ที่สามารถเลือกใช้งานได้"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "พื้นที่ทํางาน Azure Synapse Analytics",
        "Documentation.Caption": "พื้นที่ทํางาน Azure Synapse Analytics",
        "Documentation.LongDescription": "ตัวเชื่อมต่อ PQ สำหรับพื้นที่ทำงาน Azure Synapse Analytics",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "เพิ่มคอลัมน์ซึ่งมีชื่อที่ระบุ ค่าจะคำนวณโดยใช้ฟังก์ชันการเลือกที่ระบุซึ่งใช้แต่ละแถวเป็นค่าที่ป้อน",
        "Documentation.LongDescription": "เพิ่มคอลัมน์ที่ชื่อ <code>newColumnName</code> ลงในตาราง <code>table</code> ค่าสำหรับคอลัมน์จะคำนวณโดยใช้ฟังก์ชันการเลือกที่ระบุ <code>columnGenerator</code> ซึ่งใช้แต่ละแถวเป็นค่าที่ป้อน",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "เพิ่มคอลัมน์ตัวเลขที่ชื่อ \"TotalPrice\" เข้าในตาราง โดยมีแต่ละค่าเป็นผลรวมของคอลัมน์ [Price] และ [Shipping]",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "เพิ่มคอลัมน์ใหม่ที่มีค่าตัวแทนที่ได้รับโดยค่าการจัดกลุ่มแบบ Fuzzy ของคอลัมน์ที่ระบุในตาราง",
        "Documentation.LongDescription": "เพิ่มคอลัมน์ใหม่ <code>newColumnName</code> ไปยัง <code>table</code> ด้วยค่าตัวแทนของ <code>columnName</code> โดยตัวแทนจะได้รับโดยการเทียบตรงแบบ Fuzzy ใน <code>columnName</code> สำหรับแต่ละแถว\r\n    <p>ชุดตัวเลือกของ <code>options</code> อาจรวมอยู่ด้วยเพื่อระบุวิธีการเปรียบเทียบคอลัมน์คีย์ ตัวเลือกได้แก่: \r\n    <ul>\r\n<li><code>Culture</code> : อนุญาตให้จัดกลุ่มระเบียนตามกฎเฉพาะวัฒนธรรม โดยสามารถเป็นชื่อวัฒนธรรมที่ถูกต้องได้ ตัวอย่างเช่น ตัวเลือกวัฒนธรรม &quot;ja-JP&quot; จะจัดกลุ่มระเบียนตามวัฒนธรรมญี่ปุ่น โดยค่าเริ่มต้นคือ &quot;&quot; ซึ่งจัดกลุ่มตามวัฒนธรรมอังกฤษแบบคงที่</li>\r\n<li><code>IgnoreCase</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการจัดกลุ่มคีย์แบบไม่ตรงตามตัวพิมพ์ใหญ่-เล็ก ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Grapes&quot; จะถูกจัดกลุ่มกับ &quot;grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>IgnoreSpace</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการรวมส่วนของข้อความเพื่อค้นหากลุ่ม ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Gra pes&quot; จะถูกจัดกลุ่มกับ &quot;Grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>SimilarityColumnName</code> : ชื่อสำหรับคอลัมน์ที่แสดงความคล้ายคลึงกันระหว่างค่าป้อนเข้าและค่าตัวแทนสำหรับข้อมูลป้อนเข้านั้น ค่าเริ่มต้นคือ null ซึ่งในกรณีนี้จะไม่มีการเพิ่มคอลัมน์ใหม่สำหรับความคล้ายคลึงกัน</li>\r\n<li><code>Threshold</code> : ตัวเลขระหว่าง 0.00 และ 1.00 ที่ระบุคะแนนความคล้ายคลึงกันที่ค่าสองค่าจะถูกจัดกลุ่ม\r\n    ตัวอย่างเช่น &quot;Grapes&quot; และ &quot;Graes&quot; (ไม่มี &quot;p&quot;) จะถูกจัดกลุ่มเข้าด้วยกันก็ต่อเมื่อตั้งค่าตัวเลือกนี้เป็นน้อยกว่า 0.90\r\n    ค่าเกณฑ์ 1.00 จะอนุญาตเฉพาะค่าที่ตรงกันทุกประการเท่านั้น\r\n    (โปรดทราบว่า &quot;ตรงกันทุกประการ&quot; ที่ไม่ชัดเจนอาจละเว้นความแตกต่าง เช่น ตัวพิมพ์ ลําดับคํา และเครื่องหมายวรรคตอน)\r\n    ค่าเริ่มต้นคือ 0.80</li>\r\n<li><code>TransformationTable</code> : ตารางที่อนุญาตให้จัดกลุ่มระเบียนตามการแมปค่าแบบกำหนดเอง ซึ่งควรมีคอลัมน์ &quot;From&quot; และ &quot;To&quot; ตัวอย่างเช่น &quot;Grapes&quot; จะถูกจัดกลุ่มกับ &quot;Raisins&quot; ถ้าตารางการแปลงมีคอลัมน์ &quot;From&quot; ที่มี &quot;Grapes&quot; และคอลัมน์ &quot;To&quot; ที่มี &quot;Raisins&quot; โปรดทราบว่าการแปลงจะถูกนำไปใช้กับข้อความทั้งหมดในตารางการแปลง ด้วยตารางการแปลงข้างต้น &quot;Grapes are sweet&quot; จะถูกจัดกลุ่มกับ &quot;Raisins are sweet&quot;</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าตัวแทนสำหรับตำแหน่งที่ตั้งของพนักงาน",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "ดำเนินการรวมระหว่างตารางบนคอลัมน์ที่ให้และสร้างผลลัพธ์การรวมในคอลัมน์ใหม่",
        "Documentation.LongDescription": "รวมแถวของ <code>table1</code> กับแถวของ <code>table2</code> ตามความเท่ากันของค่าคีย์คอลัมน์ที่เลือกโดย <code>key1</code> (สำหรับ <code>table1</code>) และ <code>key2</code> (สำหรับ <code>table2</code>) ผลลัพธ์จะถูกป้อนลงในคอลัมน์ที่ชื่อ <code>newColumnName</code>\r\nฟังก์ชันนี้จะทำงานคล้ายกับ Table.Join ที่มี JoinKind ของ LeftOuter ยกเว้นตรงที่ผลลัพธ์การรวมจะปรากฏในลักษณะซ้อนกันแทนที่จะอยู่ในระนาบเดียวกัน",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "เพิ่มคอลัมน์การรวมลงใน ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) ที่ชื่อ \"price/stock\" จากตาราง ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) ที่รวมอยู่บน [saleID]",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "เพิ่มคีย์ลงในตาราง",
        "Documentation.LongDescription": "เพิ่มคีย์ลงใน <code>table</code>ซึ่ง <code>columns</code> เป็นรายการของชื่อคอลัมน์ที่กําหนดคีย์ และ <code>isPrimary</code> ระบุว่าคีย์นั้นเป็นคีย์หลักหรือไม่",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "เพิ่มคีย์หลักแบบคอลัมน์เดียวลงในตาราง",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "ผนวกคอลัมน์กับการจัดอันดับของคอลัมน์อื่นอย่างน้อยหนึ่งคอลัมน์",
        "Documentation.LongDescription": "ผนวกคอลัมน์ที่ชื่อ <code>newColumnName</code> เข้ากับ<code>table</code>ด้วยการจัดอันดับคอลัมน์อื่นอย่างน้อยหนึ่งคอลัมน์ที่อธิบายโดย<code>comparisonCriteria</code>\r\nตัวเลือก RankKind ใน<code>options</code>สามารถใช้โดยผู้ใช้ขั้นสูงเพื่อเลือกวิธีการจัดอันดับที่เฉพาะเจาะจงมากขึ้น",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "เพิ่มคอลัมน์ที่ชื่อ \"RevenueRank\" ลงในตารางที่จัดอันดับคอลัมน์ \"รายได้\" จากสูงสุดไปต่ำสุด",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "รวมคอลัมน์ของตารางให้เป็นหลายคอลัมน์ในตารางที่มี",
        "Documentation.LongDescription": "รวมตารางใน <code>table</code>[<code>column</code>] ให้เป็นหลายตารางที่มีค่าการรวมสำหรับตารางต่างๆ <code>aggregations</code> จะใช้เพื่อระบุคอลัมน์ซึ่งมีตารางที่จะรวม ฟังก์ชันการรวมที่จะนำไปใช้กับตารางเพื่อสร้างค่าของตาราง และชื่อของคอลัมน์การรวมที่จะสร้าง",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "รวมคอลัมน์ตารางใน <code>[t]</code> ในตาราง <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> ให้เป็นผลรวมของ <code>[t.a]</code> ค่าต่ำสุดและสูงสุดของ <code>[t.b]</code> และจำนวนค่าใน <code>[t.a]</code>",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "รักษาออฟเซตเริ่มต้นแล้วเปลี่ยนแปลงโดยใช้และข้ามแถวดังต่อไปนี้",
        "Documentation.LongDescription": "รักษาออฟเซตเริ่มต้นแล้วเปลี่ยนแปลงโดยใช้และข้ามแถวดังต่อไปนี้\r\n    <ul>\r\n       <li><code>table</code>: ตารางค่าที่ป้อน</li>\r\n       <li><code>offset</code>: จำนวนแถวที่จะรักษาไว้ก่อนเริ่มการคำนวณซ้ำ</li>\r\n       <li><code>skip</code>: จำนวนแถวที่จะเอาออกในการคำนวณซ้ำแต่ละครั้ง</li>\r\n       <li><code>take</code>: จำนวนแถวที่จะรักษาไว้ในการคำนวณซ้ำแต่ละครั้ง</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนตารางจากตารางซึ่งเริ่มต้นจากแถวแรก ข้ามค่า 1 และจากนั้น เก็บค่า 1",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "รวมคอลัมน์ที่ระบุให้เป็นคอลัมน์ใหม่โดยใช้ฟังก์ชันตัวรวมที่ระบุ",
        "Documentation.LongDescription": "รวมคอลัมน์ที่ระบุให้เป็นคอลัมน์ใหม่โดยใช้ฟังก์ชันตัวรวมที่ระบุ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "รวมชื่อและนามสกุลลงในคอลัมน์ใหม่ โดยคั่นด้วยเครื่องหมายจุลภาค",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "รวมคอลัมน์ที่ระบุไว้ในคอลัมน์ที่มีค่าระเบียนใหม่ซึ่งแต่ละระเบียนมีชื่อเขตข้อมูลและค่าที่สอดคล้องกับชื่อคอลัมน์และค่าของคอลัมน์ที่ถูกรวมเข้าด้วยกัน",
        "Documentation.LongDescription": "รวมคอลัมน์ที่ระบุของ <code>table</code> เป็นคอลัมน์ที่มีค่าเป็นระเบียนใหม่ที่ชื่อว่า <code>newColumnName</code> โดยแต่ละระเบียนจะมีชื่อและค่าของเขตข้อมูลที่สอดคล้องกับชื่อและค่าของคอลัมน์ที่รวมกัน ถ้าระบุระเบียนไว้สำหรับ <code>options</code> อาจมีตัวเลือกต่อไปนี้:\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: เมื่อระบุเป็นข้อความ แสดงว่าควรถือว่าชื่อคอลัมน์เป็นชื่อที่แสดงของระเบียน</li>\r\n     <li> <code>TypeName</code>: เมื่อระบุเป็นข้อความ ให้ระบุชื่อชนิดแบบตรรกะสำหรับระเบียนผลลัพธ์ ซึ่งสามารถใช้ระหว่างการโหลดข้อมูลเพื่อผลักดันลักษณะการทำงานตามสภาพแวดล้อมการโหลด</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "ทำซ้ำคอลัมน์ซึ่งมีชื่อที่ระบุ ค่าและชนิดจะถูกคัดลอกจากคอลัมน์ต้นทาง",
        "Documentation.LongDescription": "ทำซ้ำคอลัมน์ที่ชื่อ <code>columnName</code> ไปยังตาราง <code>table</code> ค่าและชนิดสำหรับคอลัมน์ <code>newColumnName</code> จะถูกคัดลอกจากคอลัมน์ <code>columnName</code>",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ทำซ้ำคอลัมน์ \"a\" ไปยังคอลัมน์ที่ชื่อ \"copied column\" ในตาราง <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "ขยายคอลัมน์ของระเบียนไปยังคอลัมน์ที่มีค่าแต่ละค่า",
        "Documentation.LongDescription": "สร้างตารางที่มีหนึ่งคอลัมน์สำหรับแต่ละเขตข้อมูลในระเบียน โดยกำหนดให้มี <code>column</code> ของระเบียนในค่าที่ป้อน <code>table</code> หรืออาจเลือกระบุ <code>newColumnNames</code> เพื่อให้แน่ใจว่าคอลัมน์ในตารางใหม่จะมีชื่อที่ไม่ซ้ำกัน\r\n    <ul>\r\n        <li><code>table</code>: ตารางเดิมซึ่งมีคอลัมน์ระเบียนที่จะขยาย </li>\r\n        <li><code>column</code>: คอลัมน์ที่จะขยาย</li>\r\n        <li><code>fieldNames</code>: รายการเขตข้อมูลที่จะขยายไปยังคอลัมน์ในตาราง</li>\r\n        <li><code>newColumnNames</code>: รายการชื่อคอลัมน์ที่จะให้คอลัมน์ใหม่ ชื่อคอลัมน์ใหม่ต้องไม่ซ้ำกับคอลัมน์ใดๆ ในตารางใหม่</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "ขยายคอลัมน์ [a] ในตาราง <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> ไปยัง 3 คอลัมน์ \"aa\", \"bb\" และ \"cc\"",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "ขยายคอลัมน์ของระเบียนหรือคอลัมน์ของตารางไปยังหลายคอลัมน์ในตารางที่มี",
        "Documentation.LongDescription": "ขยายตารางใน <code>table</code>[<code>column</code>] ไปยังหลายแถวและคอลัมน์ <code>columnNames</code> ใช้เพื่อเลือกคอลัมน์ที่จะขยายจากตารางภายใน ระบุ <code>newColumnNames</code> เพื่อหลีกเลี่ยงข้อขัดแย้งระหว่างคอลัมน์ที่มีอยู่และคอลัมน์ใหม่",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "ขยายคอลัมน์ตารางใน <code>[a]</code> ในตาราง <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> ไปยัง 3 คอลัมน์ ได้แก่ <code>[t.a]</code>, <code>[t.b]</code> และ <code>[t.c]</code>",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "จัดกลุ่มแถวในตารางตามการเทียบตรงคีย์แบบ Fuzzy",
        "Documentation.LongDescription": "จัดกลุ่มแถว <code>table</code> โดยการเทียบตรงแบบ Fuzzy ในคอลัมน์ที่ระบุ <code>key</code> สำหรับแต่ละแถว\r\n    สำหรับแต่ละกลุ่ม จะมีการสร้างระเบียนที่มีคอลัมน์คีย์ (และค่าของคอลัมน์) พร้อมกับคอลัมน์รวมใดๆ ที่ระบุโดย <code>aggregatedColumns</code>\r\n    ฟังก์ชันนี้ไม่สามารถรับประกันได้ว่าจะส่งกลับลำดับแถวคงที่\r\n    <p>ชุดตัวเลือกของ <code>options</code> อาจรวมอยู่ด้วยเพื่อระบุวิธีการเปรียบเทียบคอลัมน์คีย์ ตัวเลือกได้แก่: \r\n    <ul>\r\n<li><code>Culture</code> : อนุญาตให้จัดกลุ่มระเบียนตามกฎเฉพาะวัฒนธรรม โดยสามารถเป็นชื่อวัฒนธรรมที่ถูกต้องได้ ตัวอย่างเช่น ตัวเลือกวัฒนธรรม &quot;ja-JP&quot; จะจัดกลุ่มระเบียนตามวัฒนธรรมญี่ปุ่น โดยค่าเริ่มต้นคือ &quot;&quot; ซึ่งจัดกลุ่มตามวัฒนธรรมอังกฤษแบบคงที่</li>\r\n<li><code>IgnoreCase</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการจัดกลุ่มคีย์แบบไม่ตรงตามตัวพิมพ์ใหญ่-เล็ก ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Grapes&quot; จะถูกจัดกลุ่มกับ &quot;grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>IgnoreSpace</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการรวมส่วนของข้อความเพื่อค้นหากลุ่ม ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Gra pes&quot; จะถูกจัดกลุ่มกับ &quot;Grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>SimilarityColumnName</code> : ชื่อสำหรับคอลัมน์ที่แสดงความคล้ายคลึงกันระหว่างค่าป้อนเข้าและค่าตัวแทนสำหรับข้อมูลป้อนเข้านั้น ค่าเริ่มต้นคือ null ซึ่งในกรณีนี้จะไม่มีการเพิ่มคอลัมน์ใหม่สำหรับความคล้ายคลึงกัน</li>\r\n<li><code>Threshold</code> : ตัวเลขระหว่าง 0.00 และ 1.00 ที่ระบุคะแนนความคล้ายคลึงกันที่ค่าสองค่าจะถูกจัดกลุ่ม\r\n    ตัวอย่างเช่น &quot;Grapes&quot; และ &quot;Graes&quot; (ไม่มี &quot;p&quot;) จะถูกจัดกลุ่มเข้าด้วยกันก็ต่อเมื่อตั้งค่าตัวเลือกนี้เป็นน้อยกว่า 0.90\r\n    ค่าเกณฑ์ 1.00 จะอนุญาตเฉพาะค่าที่ตรงกันทุกประการเท่านั้น\r\n    (โปรดทราบว่า &quot;ตรงกันทุกประการ&quot; ที่ไม่ชัดเจนอาจละเว้นความแตกต่าง เช่น ตัวพิมพ์ ลําดับคํา และเครื่องหมายวรรคตอน)\r\n    ค่าเริ่มต้นคือ 0.80</li>\r\n<li><code>TransformationTable</code> : ตารางที่อนุญาตให้จัดกลุ่มระเบียนตามการแมปค่าแบบกำหนดเอง ซึ่งควรมีคอลัมน์ &quot;From&quot; และ &quot;To&quot; ตัวอย่างเช่น &quot;Grapes&quot; จะถูกจัดกลุ่มกับ &quot;Raisins&quot; ถ้าตารางการแปลงมีคอลัมน์ &quot;From&quot; ที่มี &quot;Grapes&quot; และคอลัมน์ &quot;To&quot; ที่มี &quot;Raisins&quot; โปรดทราบว่าการแปลงจะถูกนำไปใช้กับข้อความทั้งหมดในตารางการแปลง ด้วยตารางการแปลงข้างต้น &quot;Grapes are sweet&quot; จะถูกจัดกลุ่มกับ &quot;Raisins are sweet&quot;</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "จัดกลุ่มตารางโดยเพิ่มคอลัมน์รวม [Count] ซึ่งมีจำนวนพนักงานในแต่ละตำแหน่งที่ตั้ง (\"each Table.RowCount(_))\")",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "รวมแถวจากสองตารางที่ Fuzzy ตรงกันตามคีย์ที่กำหนด",
        "Documentation.LongDescription": "<p>รวมแถวของ <code>table1</code> กับแถวของ <code>table2</code> ตามการเทียบตรงแบบ Fuzzy ของค่าคอลัมน์หลักที่เลือกโดย <code>key1</code> (สำหรับ <code>table1</code>) และ <code>key2</code> (สำหรับ <code>table2</code>)</p>\r\n<p>การเทียบตรงแบบ Fuzzy เป็นการเปรียบเทียบตามความคล้ายคลึงของข้อความมากกว่าความเท่ากันของข้อความ</p>\r\n<p>ตามค่าเริ่มต้น การรวมภายในจะทำงาน อย่างไรก็ตาม สามารถเลือกที่จะรวม <code>joinKind</code> เพื่อระบุถึงชนิดการรวม โดยตัวเลือกต่างๆ ประกอบด้วย:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>อาจรวมชุดตัวเลือกของ <code>joinOptions</code> เพื่อระบุวิธีการเปรียบเทียบคอลัมน์หลัก โดยตัวเลือกต่างๆ ประกอบด้วย:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : ตัวเลขระหว่าง 1 และ 8 ที่ระบุจำนวนเธรดแบบขนานที่จะใช้สำหรับการเทียบตรงแบบ Fuzzy โดยค่าเริ่มต้นคือ 1</li>\r\n<li><code>Culture</code> : อนุญาตให้เทียบตรงระเบียนตามกฎเฉพาะวัฒนธรรม โดยสามารถเป็นชื่อวัฒนธรรมที่ถูกต้องได้ ตัวอย่างเช่น ตัวเลือกวัฒนธรรม &quot;ja-JP&quot; จะจับคู่ระเบียนตามวัฒนธรรมญี่ปุ่น โดยค่าเริ่มต้นคือ &quot;&quot; ซึ่งจับคู่ตามวัฒนธรรมอังกฤษแบบคงที่</li>\r\n<li><code>IgnoreCase</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการเทียบตรงคีย์แบบไม่ตรงตามตัวพิมพ์ใหญ่-เล็ก ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Grapes&quot; จะถูกจับคู่กับ &quot;grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>IgnoreSpace</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการรวมส่วนของข้อความเพื่อค้นหารายการที่ตรงกัน ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Gra pes&quot; จะตรงกับ &quot;Grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>NumberOfMatches</code> : จำนวนเต็มที่ระบุจำนวนสูงสุดของแถวที่ตรงกันซึ่งสามารถส่งกลับได้สำหรับทุกแถวข้อมูลป้อนเข้า ตัวอย่างเช่น ค่า 1 จะส่งกลับแถวที่ตรงกันมากที่สุดหนึ่งแถวสำหรับแถวข้อมูลป้อนเข้าแต่ละแถว ถ้าไม่ได้ระบุตัวเลือกนี้ ระบบจะส่งกลับแถวที่ตรงกันทั้งหมด</li>\r\n<li><code>SimilarityColumnName</code> : ชื่อสำหรับคอลัมน์ที่แสดงความคล้ายคลึงกันระหว่างค่าป้อนเข้าและค่าตัวแทนสำหรับข้อมูลป้อนเข้านั้น ค่าเริ่มต้นคือ null ซึ่งในกรณีนี้จะไม่มีการเพิ่มคอลัมน์ใหม่สำหรับความคล้ายคลึงกัน</li>\r\n<li><code>Threshold</code> : ตัวเลขระหว่าง 0.00 และ 1.00 ที่ระบุคะแนนความคล้ายคลึงกันที่จะจับคู่ค่าสองค่า\r\n    ตัวอย่างเช่น &quot;Grapes&quot; และ &quot;Graes&quot; (ไม่มี &quot;p&quot;) จะตรงกันก็ต่อเมื่อตั้งค่าตัวเลือกนี้เป็นน้อยกว่า 0.90\r\n    ค่าเกณฑ์ 1.00 จะอนุญาตเฉพาะค่าที่ตรงกันทุกประการเท่านั้น\r\n    (โปรดทราบว่า &quot;ตรงกันทุกประการ&quot; ที่ไม่ชัดเจนอาจละเว้นความแตกต่าง เช่น ตัวพิมพ์ ลําดับคํา และเครื่องหมายวรรคตอน)\r\n    ค่าเริ่มต้นคือ 0.80</li>\r\n<li><code>TransformationTable</code> : ตารางที่อนุญาตให้เทียบตรงระเบียนตามการแมปค่าแบบกำหนดเอง ซึ่งควรมีคอลัมน์ &quot;From&quot; และ &quot;To&quot; ตัวอย่างเช่น &quot;Grapes&quot; จะตรงกับ &quot;Raisins&quot; ถ้าตารางการแปลงมีคอลัมน์ &quot;From&quot; ที่มี &quot;Grapes&quot; และคอลัมน์ &quot;To&quot; ที่มี &quot;Raisins&quot; โปรดทราบว่าการแปลงจะถูกนำไปใช้กับข้อความทั้งหมดในตารางการแปลง ด้วยตารางการแปลงข้างต้น &quot;Grapes are sweet&quot; จะตรงกับ &quot;Raisins are sweet&quot;</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "การร่วม Fuzzy ภายในด้านซ้ายของสองตารางขึ้นอยู่กับ [FirstName]",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "ดำเนินการรวม Fuzzy ระหว่างตารางบนคอลัมน์ที่ให้และสร้างผลลัพธ์การรวมในคอลัมน์ใหม่",
        "Documentation.LongDescription": "<p>รวมแถวของ <code>table1</code> กับแถวของ <code>table2</code> ตามการเทียบตรงแบบ Fuzzy ของค่าคอลัมน์หลักซึ่งเลือกโดย <code>key1</code> (สำหรับ <code>table1</code>) และ <code>key2</code> (สำหรับ <code>table2</code>) ผลลัพธ์จะถูกส่งกลับในคอลัมน์ใหม่ที่ชื่อ <code>newColumnName</code></p>\r\n<p>การเทียบตรงแบบ Fuzzy เป็นการเปรียบเทียบตามความคล้ายคลึงของข้อความมากกว่าความเท่ากันของข้อความ</p>\r\n<p><code>joinKind</code> ที่เลือกได้จะระบุชนิดของการรวมที่จะทำงาน ตามค่าเริ่มต้น การรวมภายนอกด้านซ้ายจะทำงานถ้าไม่มีการระบุ <code>joinKind</code> โดยตัวเลือกต่างๆ ประกอบด้วย:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>อาจรวมชุดตัวเลือกของ <code>joinOptions</code> เพื่อระบุวิธีการเปรียบเทียบคอลัมน์หลัก โดยตัวเลือกต่างๆ ประกอบด้วย:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : ตัวเลขระหว่าง 1 และ 8 ที่ระบุจำนวนเธรดแบบขนานที่จะใช้สำหรับการเทียบตรงแบบ Fuzzy โดยค่าเริ่มต้นคือ 1</li>\r\n<li><code>Culture</code> : อนุญาตให้เทียบตรงระเบียนตามกฎเฉพาะวัฒนธรรม โดยสามารถเป็นชื่อวัฒนธรรมที่ถูกต้องได้ ตัวอย่างเช่น ตัวเลือกวัฒนธรรม &quot;ja-JP&quot; จะจับคู่ระเบียนตามวัฒนธรรมญี่ปุ่น โดยค่าเริ่มต้นคือ &quot;&quot; ซึ่งจับคู่ตามวัฒนธรรมอังกฤษแบบคงที่</li>\r\n<li><code>IgnoreCase</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการเทียบตรงคีย์แบบไม่ตรงตามตัวพิมพ์ใหญ่-เล็ก ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Grapes&quot; จะถูกจับคู่กับ &quot;grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>IgnoreSpace</code> : ค่าตรรกะ (จริง/เท็จ) ที่อนุญาตให้มีการรวมส่วนของข้อความเพื่อค้นหารายการที่ตรงกัน ตัวอย่างเช่น เมื่อค่าเป็นจริง &quot;Gra pes&quot; จะตรงกับ &quot;Grapes&quot; โดยค่าเริ่มต้นคือจริง</li>\r\n<li><code>NumberOfMatches</code> : จำนวนเต็มที่ระบุจำนวนสูงสุดของแถวที่ตรงกันซึ่งสามารถส่งกลับได้สำหรับทุกแถวข้อมูลป้อนเข้า ตัวอย่างเช่น ค่า 1 จะส่งกลับแถวที่ตรงกันมากที่สุดหนึ่งแถวสำหรับแถวข้อมูลป้อนเข้าแต่ละแถว ถ้าไม่ได้ระบุตัวเลือกนี้ ระบบจะส่งกลับแถวที่ตรงกันทั้งหมด</li>\r\n<li><code>SimilarityColumnName</code> : ชื่อสำหรับคอลัมน์ที่แสดงความคล้ายคลึงกันระหว่างค่าป้อนเข้าและค่าตัวแทนสำหรับข้อมูลป้อนเข้านั้น ค่าเริ่มต้นคือ null ซึ่งในกรณีนี้จะไม่มีการเพิ่มคอลัมน์ใหม่สำหรับความคล้ายคลึงกัน</li>\r\n<li><code>Threshold</code> : ตัวเลขระหว่าง 0.00 และ 1.00 ที่ระบุคะแนนความคล้ายคลึงกันที่จะจับคู่ค่าสองค่า\r\n    ตัวอย่างเช่น &quot;Grapes&quot; และ &quot;Graes&quot; (ไม่มี &quot;p&quot;) จะตรงกันก็ต่อเมื่อตั้งค่าตัวเลือกนี้เป็นน้อยกว่า 0.90\r\n    ค่าเกณฑ์ 1.00 จะอนุญาตเฉพาะค่าที่ตรงกันทุกประการเท่านั้น\r\n    (โปรดทราบว่า &quot;ตรงกันทุกประการ&quot; ที่ไม่ชัดเจนอาจละเว้นความแตกต่าง เช่น ตัวพิมพ์ ลําดับคํา และเครื่องหมายวรรคตอน)\r\n    ค่าเริ่มต้นคือ 0.80</li>\r\n<li><code>TransformationTable</code> : ตารางที่อนุญาตให้เทียบตรงระเบียนตามการแมปค่าแบบกำหนดเอง ซึ่งควรมีคอลัมน์ &quot;From&quot; และ &quot;To&quot; ตัวอย่างเช่น &quot;Grapes&quot; จะตรงกับ &quot;Raisins&quot; ถ้าตารางการแปลงมีคอลัมน์ &quot;From&quot; ที่มี &quot;Grapes&quot; และคอลัมน์ &quot;To&quot; ที่มี &quot;Raisins&quot; โปรดทราบว่าการแปลงจะถูกนำไปใช้กับข้อความทั้งหมดในตารางการแปลง ด้วยตารางการแปลงข้างต้น &quot;Grapes are sweet&quot; จะตรงกับ &quot;Raisins are sweet&quot;</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "การร่วม Fuzzy ภายในด้านซ้ายของสองตารางขึ้นอยู่กับ [FirstName]",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "จัดกลุ่มแถวในตารางที่มีคีย์เดียวกัน",
        "Documentation.LongDescription": "จัดกลุ่มแถว <code>table</code> ตามคอลัมน์หลักที่กำหนดโดย <code>key</code> <code>key</code> สามารถเป็นชื่อคอลัมน์เดียวหรือรายการชื่อคอลัมน์ได้\r\n    สำหรับแต่ละกลุ่ม จะมีการสร้างระเบียนที่มีคอลัมน์หลัก (และค่า) พร้อมกับคอลัมน์รวมที่ระบุโดย <code>aggregatedColumns</code>.\r\n    นอกจากนี้ยังสามารถระบุ <code>groupKind</code> และ <code>comparer</code> ได้อีกด้วย<br>\r\n    <br>\r\n    ถ้ามีการจัดเรียงข้อมูลตามคอลัมน์หลักแล้ว จะสามารถระบุ <code>groupKind</code> ของ GroupKind.Local ได้ การดำเนินการนี้อาจเป็นการปรับปรุงประสิทธิภาพของการจัดกลุ่มในบางกรณี\r\n    เนื่องจากแถวทั้งหมดที่มีชุดของค่าคีย์ที่กำหนดไว้จะถูกสันนิษฐานว่าอยู่ติดกัน<br>\r\n    <br>\r\n    เมื่อส่งผ่านการ <code>comparer</code> โปรดทราบว่าถ้าถือว่าคีย์ที่แตกต่างเท่ากัน แถวอาจอยู่ในกลุ่มที่มีคีย์ที่แตกต่างจากของตนเอง<br>\r\n    <br>\r\n    ฟังกืชันนี้ไม่รับประกันการจัดลำดับของแถวที่จะส่งกลับ\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "จัดกลุ่มตารางโดยเพิ่มคอลัมน์รวม [total] ซึ่งมียอดรวมของราคา (\"each List.Sum([price])\")",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "แทรกรายการแถวลงในตารางในตำแหน่งที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตารางที่มีรายการแถว <code>rows</code> ซึ่งถูกแทรกลงใน <code>table</code> ในตำแหน่งที่ระบุ <code>offset</code> แต่ละคอลัมน์ในแถวที่จะแทรกต้องตรงกับชนิดคอลัมน์ของตาราง",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "เพิ่มแถวเข้าในตารางที่ตำแหน่ง 1",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "เพิ่มสองแถวเข้าในตารางที่ตำแหน่ง 1",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "รวมแถวจากสองตารางที่ตรงกันตามคีย์ที่กำหนด",
        "Documentation.LongDescription": "<p>รวมแถวของ <code>table1</code> กับแถวของ <code>table2</code> ตามความเท่ากันของค่าของคอลัมน์หลักที่เลือกโดย <code>key1</code> (สําหรับ <code>table1</code>) และ <code>key2</code> (สําหรับ <code>table2</code>) </p>\r\n<p>ตามค่าเริ่มต้น มีการดําเนินการรวมภายใน อย่างไรก็ตาม อาจมีการรวม <code>joinKind</code> เพิ่มเติมเพื่อระบุชนิดของการรวม ตัวเลือกประกอบด้วย:\r\n <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p> อาจมีการรวมชุด <code>keyEqualityComparers</code> เพิ่มเติมเพื่อระบุวิธีการเปรียบเทียบคอลัมน์หลัก พารามิเตอร์นี้มีไว้สําหรับใช้ภายในเท่านั้น</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "รวมสองตารางโดยใช้คอลัมน์หลักคอลัมน์เดียว",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "รวมสองตารางที่มีชื่อคอลัมน์ที่ขัดแย้งกันโดยใช้คอลัมน์หลักหลายคอลัมน์",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "ส่งกลับแถวที่ใหญ่ที่สุดโดยใช้เกณฑ์ที่กำหนด",
        "Documentation.LongDescription": "ส่งคืนแถวที่ใหญ่ที่สุดใน <code>table</code> โดยกำหนดให้เป็น <code>comparisonCriteria</code>\r\n    หลังจากมีการจัดเรียงแถวแล้ว จะต้องระบุพารามิเตอร์ <code>countOrCondition</code> เพื่อกรองผลลัพธ์ต่อไป หมายเหตุ อัลกอริทึ่มการจัดเรียงไม่สามารถรับประกันผลลัพธ์การจัดเรียงแบบตายตัวได้ พารามิเตอร์ <code>countOrCondition</code> สามารถใช้ได้หลายรูปแบบ:\r\n    <ul>\r\n        <li> ถ้ามีการระบุเป็นตัวเลข จะมีการส่งคืนรายการที่มีข้อมูลสูงสุด <code>countOrCondition</code> รายการตามลำดับจากน้อยไปหามาก </li>\r\n        <li> ถ้ามีการระบุเงื่อนไข จะมีการส่งกลับรายการข้อมูลที่ตรงกับเงื่อนไขแรก เมื่อรายการไม่ตรงตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาแถวที่มีค่ามากที่สุดในคอลัมน์ [a] ด้วยเงื่อนไข [a] > 0 ในตาราง โดยมีการจัดเรียงแถวก่อนกำหนดใช้ตัวกรอง",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "ค้นหาแถวที่มีค่ามากที่สุดในคอลัมน์ [a] ด้วยเงื่อนไข [b] > 0 ในตาราง โดยมีการจัดเรียงแถวก่อนกำหนดใช้ตัวกรอง",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "ส่งกลับแถวที่เล็กที่สุดโดยใช้เกณฑ์ที่กำหนด",
        "Documentation.LongDescription": "ส่งคืนแถวที่เล็กที่สุดใน <code>table</code> โดยกำหนดให้เป็น <code>comparisonCriteria</code> หลังจากมีการจัดเรียงแถวแล้ว จะต้องระบุพารามิเตอร์ <code>countOrCondition</code> เพื่อกรองผลลัพธ์ต่อไป หมายเหตุ อัลกอริทึ่มการจัดเรียงไม่สามารถรับประกันผลลัพธ์การจัดเรียงแบบตายตัว พารามิเตอร์ <code>countOrCondition</code> สามารถใช้ได้หลายรูปแบบ\r\n    <ul>\r\n        <li> ถ้ามีการระบุเป็นตัวเลข จะมีการส่งคืนรายการที่มีข้อมูลสูงสุด <code>countOrCondition</code> รายการตามลำดับจากน้อยไปหามาก </li>\r\n        <li> ถ้ามีการระบุเป็นเงื่อนไข จะมีการส่งคืนรายการข้อมูลแรกที่ตรงกับเงื่อนไข เมื่อรายการไม่ตรงตามตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาแถวที่มีค่าต่ำสุดในคอลัมน์ [a] ด้วยเงื่อนไข [a] < 3 ในตาราง โดยมีการจัดเรียงแถวก่อนกำหนดใช้ตัวกรอง",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "ค้นหาแถวที่มีค่าต่ำสุดในคอลัมน์ [a] ด้วยเงื่อนไข [b] < 0 ในตาราง โดยมีการจัดเรียงแถวก่อนกำหนดใช้ตัวกรอง",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "ดำเนินการรวมระหว่างตารางบนคอลัมน์ที่ให้และสร้างผลลัพธ์การรวมในคอลัมน์ใหม่",
        "Documentation.LongDescription": "<p>รวมแถวของ <code>table1</code> กับแถวของ <code>table2</code> ที่มีค่าคอลัมน์หลักเท่ากันซึ่งเลือกโดย <code>key1</code> (สำหรับ <code>table1</code>) และ <code>key2</code> (สำหรับ <code>table2</code>) ผลลัพธ์จะถูกใส่ลงในคอลัมน์ที่ชื่อ <code>newColumnName</code></p>\r\n<p><code>joinKind</code> ที่เลือกได้จะระบุชนิดของการรวมที่จะใช้งาน ตามค่าเริ่มต้น การรวมภายนอกด้านซ้ายจะดำเนินการหากไม่มีการระบุ <code>joinKind</code></p>\r\n<p>สามารถรวมชุดที่เลือกได้ของ <code>keyEqualityComparers</code> เพื่อระบุวิธีการเปรียบเทียบคอลัมน์หลัก ขณะนี้ฟีเจอร์นี้มีไว้ใช้งานสำหรับการใช้งานภายในเท่านั้น</p>  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "รวมสองตารางโดยใช้คอลัมน์หลักคอลัมน์เดียว",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "หมุนข้อมูลในคอลัมน์แอตทริบิวต์ให้เป็นส่วนหัวคอลัมน์ โดยกำหนดให้มีคู่ของคอลัมน์ที่แสดงถึงคู่แอตทริบิวต์-ค่า",
        "Documentation.LongDescription": "หมุนข้อมูลในคอลัมน์แอตทริบิวต์ให้เป็นส่วนหัวคอลัมน์ โดยกำหนดให้มีคู่ของคอลัมน์ที่แสดงถึงคู่แอตทริบิวต์-ค่า",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ใช้ค่า \"a\", \"b\" และ \"c\" ในคอลัมน์แอตทริบิวต์ของตาราง <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> และทำ Pivot ลงในคอลัมน์ของตัวเอง",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "ใช้ค่า \"a\", \"b\" และ \"c\" ในคอลัมน์แอตทริบิวต์ของตาราง <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> และทำ Pivot ลงในคอลัมน์ของตัวเอง  แอตทริบิวต์ \"c\" สำหรับคีย์ \"x\" มีการเชื่อมโยงกับหลายค่า ดังนั้นให้ใช้ฟังก์ชัน List.Max เพื่อแก้ไขข้อขัดแย้ง",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "แทนที่ช่วงแถวที่ระบุด้วยแถวที่กำหนดให้",
        "Documentation.LongDescription": "แทนที่จำนวนแถวที่ระบุ <code>count</code> ในค่าที่ป้อน <code>table</code> ด้วย <code>rows</code> ที่ระบุโดยเริ่มต้นหลัง <code>offset</code> พารามิเตอร์ <code>rows</code> คือรายการระเบียน\r\n    <ul>\r\n       <li><code>table</code>: ตารางที่จะดำเนินการแทนที่</li>\r\n       <li><code>offset</code>: จำนวนแถวที่จะข้ามก่อนทำการแทนที่</li>\r\n       <li><code>count</code>: จำนวนแถวที่จะแทนที่</li>\r\n       <li><code>rows</code>: รายการของระเบียนแถวที่จะแทรกลงใน <code>table</code> ในตำแหน่งที่ระบุโดย <code>offset</code></li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "เริ่มต้นที่ตำแหน่ง 1 แทนที่ 3 แถว",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "แทนที่ค่าหนึ่งด้วยอีกค่าหนึ่งในคอลัมน์ที่ระบุ",
        "Documentation.LongDescription": "แทนที่ <code>oldValue</code> ด้วย <code>newValue</code> ในคอลัมน์ที่ระบุของ <code>table</code>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ข้อความ \"goodbye\" ด้วย \"world\" ในคอลัมน์ B โดยจับคู่เฉพาะค่าทั้งหมด",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "แทนที่ข้อความ \"ur\" ด้วย \"or\" ในคอลัมน์ B ซึ่งตรงกับส่วนใดๆ ของค่า",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "ทําให้ชื่อของพนักงานในสหรัฐอเมริกาเป็นแบบไม่ระบุตัวตน",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "ทําให้คอลัมน์ทั้งหมดของพนักงานในสหรัฐอเมริกาเป็นแบบไม่ระบุตัวตน",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "แยกคอลัมน์ที่ระบุออกเป็นชุดคอลัมน์เพิ่มเติมโดยใช้ฟังก์ชันตัวแยกที่ระบุ",
        "Documentation.LongDescription": "แยกคอลัมน์ที่ระบุออกเป็นชุดคอลัมน์เพิ่มเติมโดยใช้ฟังก์ชันตัวแยกที่ระบุ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แยกคอลัมน์ [Name] ที่ตำแหน่ง \"i\" ออกเป็นสองคอลัมน์",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "แปลค่าชุดคอลัมน์ในตารางให้เป็นคู่ของแอตทริบิวต์-ค่า",
        "Documentation.LongDescription": "แปลค่าชุดคอลัมน์ในตารางให้เป็นคู่ของแอตทริบิวต์-ค่า โดยรวมกับค่าที่เหลือในแต่ละแถว",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ใช้คอลัมน์ \"a\", \"b\" และ \"c\" ในตาราง <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> และยกเลิกการทำ ควบคุมการแสดงผลอย่างสั้น ลงในคู่ของแอตทริบิวต์-ค่า",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "แปลคอลัมน์ทั้งหมดนอกเหนือจากชุดที่ระบุไว้ในคู่ค่า-แอททริบิวต์",
        "Documentation.LongDescription": "แปลคอลัมน์ทั้งหมดนอกเหนือจากชุดที่ระบุไว้ในคู่ค่า-แอตทริบิวต์ รวมกับค่าส่วนที่เหลือในแต่ละแถว",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "แปลคอลัมน์ทั้งหมดนอกเหนือจากชุดที่ระบุไว้ในคู่ค่า-แอตทริบิวต์ รวมกับค่าส่วนที่เหลือในแต่ละแถว",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "การวิเคราะห์ส่วนบุคคลของ Microsoft Teams",
        "Documentation.LongDescription": "<p>ตัวเชื่อมต่อ Teams Analytics ช่วยให้คุณสามารถรับข้อมูลเชิงลึกเกี่ยวกับการใช้งาน Teams ของคุณได้ ข้อมูลจะพร้อมใช้งานสำหรับทั้งกิจกรรมส่วนตัวของคุณใน Teams ตลอดจนกิจกรรมใน Teams ที่คุณเป็นสมาชิกอยู่</p>\r\n<p>ข้อมูลจะมีให้ก่อน 90 วัน </p>\r\n<p> สำหรับรายละเอียดของชนิดข้อมูลที่พร้อมใช้งาน โปรดดูที่เอกสารวิธีใช้ต่อไปนี้: </p>\r\n<ul>\r\n<li><b>การใช้งาน Teams:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>กิจกรรมของผู้ใช้ Teams:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "ใส่ชื่อองค์กรและโครงการ",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "บริการ Azure DevOps",
        "Documentation.LongDescription": "ส่งกลับตารางฟีด OData ที่เสนอโดย Azure DevOps"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่อ่านค่าไบนารี",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่อ่านค่าไบนารี ถ้ามีการระบุ <code>length</code> ค่าไบนารีจะมีหลายไบต์ ถ้าไม่ได้ระบุ <code>length</code> ค่าไบนารีจะมีไบต์ที่เหลือ สามารถระบุ <code>length</code> เป็นตัวเลข หรือเป็นรูปแบบไบนารีของความยาวที่อยู่ก่อนหน้าข้อมูลไบนารี",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "ส่งกลับค่าตรรกะตามการตรวจสอบความเท่ากันระหว่างค่าที่ระบุสองค่า",
        "Documentation.LongDescription": "ส่งกลับค่า<code>เชิงตรรกะ</code>ตามการตรวจสอบความเท่ากันของค่าที่ระบุสองค่า <code>x</code> และ <code>y</code> โดยใช้ <code>comparer</code> \r\n      <div>\r \n        <code>comparer</code> คือ<code>ตัวเปรียบเทียบ</code> ซึ่งใช้เพื่อควบคุมการเปรียบเทียบ\r\n        ตัวเปรียบเทียบเป็นฟังก์ชันที่ยอมรับสองอาร์กิวเมนต์และส่งกลับ -1, 0 หรือ 1 โดยขึ้นอยู่กับว่าค่าแรกน้อยกว่า เท่ากับ  หรือมากกว่าค่าที่สอง \r\n        ตัวเปรียบเทียบสามารถใช้เพื่อให้การเปรียบเทียบที่ไม่ตรงตามตัวพิมพ์ใหญ่-เล็กหรือตามตำแหน่งที่ตั้งและวัฒนธรรม\r\n      </div>\r \n      <div>\r\n        ตัวเปรียบเทียบในตัวต่อไปนี้พร้อมใช้งานในภาษาสูตร:\r\n      </div>\r \n      <ul>\r \n        <li><code>Comparer.Ordinal</code>:  ใช้เพื่อดําเนินการเปรียบเทียบลําดับที่แน่นอน</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: ใช้เพื่อดําเนินการเปรียบเทียบที่ไม่ตรงตามตัวพิมพ์ใหญ่-เล็กตามลําดับที่แน่นอน </li>\r\n        <li> <code>Comparer.FromCulture</code>: ใช้เพื่อดําเนินการเปรียบเทียบตามวัฒนธรรม</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "เปรียบเทียบ \"1\" และ \"A\" โดยใช้ภาษา \"en-US\" เพื่อดูว่าค่าเท่ากันหรือไม่",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "ส่งกลับวันที่และเวลาในโซนเวลาท้องถิ่น ค่านี้จะคงที่และไม่เปลี่ยนแปลงในการเรียกใช้ที่ต่อเนื่องกัน",
        "Documentation.LongDescription": "ส่งกลับค่า <code>datetime</code> เพื่อตั้งค่าวันที่และเวลาปัจจุบันในระบบ ค่านี้จะคงที่และไม่เปลี่ยนแปลงในการเรียกใช้ที่ต่อเนื่องกัน ซึ่งแตกต่างจาก DateTime.LocalNow ที่อาจส่งกลับค่าอื่นในกรณีที่มีการใช้นิพจน์",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "ส่งกลับวันที่และเวลาในโซนเวลาท้องถิ่น",
        "Documentation.LongDescription": "ส่งกลับค่า <code>datetime</code> เพื่อตั้งค่าวันที่และเวลาปัจจุบันในระบบ",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "ส่งกลับวันที่และเวลาในโซนเวลาท้องถิ่น ค่านี้จะคงที่และไม่เปลี่ยนแปลงในการเรียกใช้ที่ต่อเนื่องกัน",
        "Documentation.LongDescription": "ส่งกลับค่า <code>datetime</code> เพื่อตั้งค่าวันที่และเวลาปัจจุบันในระบบ ค่าที่ส่งคืนมีข้อมูลเขตข้อมูลที่แสดงเขตข้อมูลในท้องถิ่น ค่านี้จะคงที่และไม่เปลี่ยนแปลงในการเรียกใช้ที่ต่อเนื่องกัน ซึ่งแตกต่างจาก DateTimeZone.LocalNow ที่อาจส่งกลับค่าอื่นในกรณีที่มีการใช้นิพจน์",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "ส่งกลับวันที่และเวลาในโซนเวลาใน UTC (โซนเวลา GMT) ค่านี้จะคงที่และไม่เปลี่ยนแปลงในการเรียกใช้ที่ต่อเนื่องกัน",
        "Documentation.LongDescription": "ส่งกลับวันที่และเวลาในโซนเวลาใน UTC (โซนเวลา GMT) ค่านี้จะคงที่และไม่เปลี่ยนแปลงในการเรียกใช้ที่ต่อเนื่องกัน",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "ส่งกลับวันที่และเวลาในโซนเวลาท้องถิ่น",
        "Documentation.LongDescription": "ส่งกลับค่า <code>datetimezone</code> เพื่อตั้งค่าวันที่และเวลาปัจจุบันในระบบ \r\n    ค่าที่ส่งกลับมีข้อมูลโซนเวลาที่แสดงโซนเวลาท้องถิ่น",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "ส่งกลับวันที่และเวลาในโซนเวลาใน UTC (โซนเวลา GMT)",
        "Documentation.LongDescription": "ส่งกลับวันที่และเวลาในโซนเวลาใน UTC (โซนเวลา GMT)",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "รับวันที่และเวลาปัจจุบันใน UTC",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "ส่งคืนตัวระบุแบบย่อสำหรับการประเมินที่ใช้งานอยู่ในปัจจุบัน",
        "Documentation.LongDescription": "ส่งคืนตัวระบุแบบย่อสำหรับการประเมินที่ใช้งานอยู่ในปัจจุบัน",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "ส่งกลับตัวระบุแบบย่อเพื่อเชื่อมโยงคำขอขาเข้ากับคำขอขาออก",
        "Documentation.LongDescription": "ส่งกลับตัวระบุแบบย่อเพื่อเชื่อมโยงคำขอขาเข้ากับคำขอขาออก",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "เขียนรายการการติดตาม หากเปิดใช้งานการติดตามไว้ และคืนค่า",
        "Documentation.LongDescription": "เขียนการติดตาม <code>message</code> หากเปิดใช้งานการติดตามไว้ และคืนค่า <code>value</code> พารามิเตอร์เสริม <code>delayed</code> จะกำหนดว่าจะหน่วงเวลาการประเมินค่า <code>value</code> จนกว่าจะมีการติดตามข้อความหรือไม่ <code>traceLevel</code> สามารถใช้หนึ่งในค่าต่อไปนี้ได้:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "ติดตามข้อความก่อนที่จะเรียกฟังก์ชัน Text.From และคืนค่าผลลัพธ์",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "ผู้ให้บริการข้อมูลประจำตัวตัวเริ่มต้นสำหรับโฮสต์ปัจจุบัน",
        "Documentation.LongDescription": "ผู้ให้บริการข้อมูลประจำตัวตัวเริ่มต้นสำหรับโฮสต์ปัจจุบัน",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "สะสมค่าสรุปจากข้อมูลในรายการ",
        "Documentation.LongDescription": "สะสมค่าสรุปจากข้อมูลในรายการ <code>list</code> โดยใช้ <code>accumulator</code>\r\n    สามารถตั้งค่าพารามิเตอร์ Seed <code>seed</code> ที่เลือกได้",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "สะสมค่าสรุปจากข้อมูลในรายการ {1, 2, 3, 4, 5} โดยใช้ ((สถานะ, ปัจจุบัน) => สถานะ + ปัจจุบัน )",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "สร้างรายการของค่าโซนเวลาของวันที่โดยกำหนดค่าเริ่มต้น จำนวน และค่าระยะเวลาแบบเพิ่มหน่วย",
        "Documentation.LongDescription": "ส่งกลับรายการของค่า <code>datetimezone</code> ของขนาด <code>count</code> โดยเริ่มต้นที่ <code>start</code> การเพิ่มหน่วยที่กำหนดให้ <code>step</code> เป็นค่า <code>duration</code> ที่ถูกเพิ่มลงในทุกค่า",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการที่มี 10 ค่าโดยเริ่มต้นจาก 5 นาทีก่อนวันขึ้นปีใหม่ (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) ซึ่งจะเพิ่มครั้งละ 1 นาที (#duration(0, 0, 1, 0))",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "สร้างรายการของค่าเวลาของวันที่โดยกำหนดค่าเริ่มต้น จำนวน และค่าระยะเวลาแบบเพิ่มหน่วย",
        "Documentation.LongDescription": "ส่งกลับรายการของค่า <code>datetime</code> ของขนาด <code>count</code> โดยเริ่มต้นที่ <code>start</code> การเพิ่มหน่วยที่กำหนดให้ <code>step</code> เป็นค่า <code>duration</code> ที่ถูกเพิ่มลงในทุกค่า",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการที่มี 10 ค่าโดยเริ่มต้นจาก 5 นาทีก่อนวันขึ้นปีใหม่ (#datetime(2011, 12, 31, 23, 55, 0)) ซึ่งจะเพิ่มครั้งละ 1 นาที (#duration(0, 0, 1, 0))",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "สร้างรายการของค่าวันที่โดยกำหนดค่าเริ่มต้น จำนวน และค่าระยะเวลาแบบเพิ่มหน่วย",
        "Documentation.LongDescription": "ส่งกลับรายการของค่า <code>date</code> ของขนาด <code>count</code> โดยเริ่มต้นที่ <code>start</code> การเพิ่มหน่วยที่กำหนดให้ <code>step</code> เป็นค่า <code>duration</code> ที่ถูกเพิ่มลงในทุกค่า",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการที่มี 10 ค่าโดยเริ่มต้นจากวันก่อนขึ้นปีใหม่ (#date(2011, 12, 31)) ซึ่งจะเพิ่มครั้งละ 1 วัน(#duration(1, 0, 0, 0))",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "สร้างรายการของค่าระยะทางโดยกำหนดค่าเริ่มต้น จำนวน และค่าระยะเวลาแบบเพิ่มหน่วย",
        "Documentation.LongDescription": "ส่งกลับรายการค่า <code>count</code> <code>duration</code> โดยเริ่มต้นที่ <code>start</code> และเพิ่มตาม <code>duration</code> ที่กำหนด <code>step</code>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการที่ประกอบด้วย 5 ค่าเริ่ม 1 ชั่วโมงและเพิ่มทีละหนึ่งชั่วโมง",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "สร้างรายการค่า",
        "Documentation.LongDescription": "สร้างรายการค่าโดยใช้ฟังก์ชันที่มีให้ ฟังก์ชัน <code>initial</code> ฟังก์ชันสร้างค่าตัวเลือกเริ่มต้น ซึ่งทดสอบกับ <code>condition</code> แล้ว\r\n    หากค่าตัวเลือกได้รับการอนุมัติ ค่าจะถูกส่งคืนโดยเป็นส่วนหนึ่งของรายการผลลัพธ์ และค่าตัวเลือกถัดไปจะถูกสร้างขึ้นโดยการส่งผ่านค่าที่ได้รับอนุมัติใหม่ไปที่ <code>next</code>\r\n    เมื่อค่าตัวเลือกไม่ตรงกับ <code>condition</code> กระบวนการสร้างรายการจะหยุดลง\r\n    อาจมีการระบุพารามิเตอร์เพิ่มเติม <code>selector</code> เพื่อแปลงรายการในรายการผลลัพธ์",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการโดยเริ่มต้นที่สิบ โดยค่อยๆ ลดทีละหนึ่ง และตรวจดูให้แน่ใจว่าแต่ละรายการมีค่ามากกว่าศูนย์",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "สร้างรายการระเบียนที่มี x และ y ซึ่ง x เป็นค่าและ y เป็นรายการ x ควรยังคงน้อยกว่า 10 และแสดงจำนวนข้อมูลในรายการ y หลังจากสร้างรายการแล้ว ให้ส่งกลับเฉพาะค่า x",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "แทรกค่าลงในรายการที่ดัชนีที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับรายการใหม่ที่สร้างโดยการแทรกค่าใน <code>values</code> ลงใน <code>list</code> ที่ <code>index</code> ตำแหน่งแรกในรายการจะอยู่ที่ดัชนี 0\r\n      <ul>\r\n        <li><code>list</code>: รายการเป้าหมายที่ค่าจะถูกแทรก</li>\r\n        <li><code>index</code>: ดัชนีของรายการเป้าหมาย(<code>list</code>) ที่ค่าจะถูกแทรก ตำแหน่งแรกในรายการจะอยู่ที่ดัชนี 0</li>\r\n        <li><code>values</code>: รายการค่าที่จะถูกแทรกลงใน <code>list</code></li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "แทรกรายการ ({3, 4}) ลงในรายการเป้าหมาย ({1, 2, 5}) ที่ดัชนี 2",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "แทรกรายการที่มีรายการที่ซ้อนกัน ({1, {1.1, 1.2}}) ลงในรายการเป้าหมาย ({2, 3, 4}) ที่ดัชนี 0",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "แทนที่จำนวนนับของค่าโดยเริ่มต้นในตำแหน่งที่มีค่าการแทนที่",
        "Documentation.LongDescription": "แทนที่ค่า <code>count</code> ใน <code>list</code> ด้วยรายการ <code>replaceWith</code> โดยเริ่มต้นในตำแหน่งที่ระบุ <code>index</code>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ {7, 8, 9} ในรายการ {1, 2, 7, 8, 9, 5} ด้วย {3, 4}",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "ค้นหารายการสำหรับค่าที่ระบุและแทนที่ค่านั้น",
        "Documentation.LongDescription": "ค้นหารายการของค่า <code>list</code> สำหรับค่า <code>oldValue</code> และแทนที่การปรากฏแต่ละรายการด้วยค่าการแทนที่ <code>newValue</code>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ค่า \"a\" ทั้งหมดในรายการ {\"a\", \"B\", \"a\", \"a\"} ด้วย \"A\"",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "สร้างรายการของค่าเวลาโดยกำหนดค่าเริ่มต้น จำนวน และค่าระยะเวลาแบบเพิ่มหน่วย",
        "Documentation.LongDescription": "ส่งกลับรายการของค่า <code>time</code> ของขนาด <code>count</code> โดยเริ่มต้นที่ <code>start</code> การเพิ่มหน่วยที่กำหนดให้ <code>step</code> เป็นค่า <code>duration</code> ที่ถูกเพิ่มลงในทุกค่า",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการที่ประกอบด้วย 4 ค่าเริ่มจากเที่ยงวัน (#time(12, 0, 0)) โดยเพิ่มหน่วยทีละหนึ่งชั่วโมง (#duration(0, 1, 0, 0))",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "ส่งกลับรายการซึ่งมีองค์ประกอบที่ถูกแปลงจากรายการค่าที่ป้อนโดยใช้ฟังก์ชันที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับรายการที่มีองค์ประกอบที่คาดการณ์จากรายการอินพุต<br>\r\n    <br>\r\n    ฟังก์ชัน <code>collectionTransform</code> จะแปลงแต่ละองค์ประกอบเป็นรายการระดับกลาง และฟังก์ชัน <code>resultTransform</code> ได้รับองค์ประกอบเดิม เช่นเดียวกับรายการจากรายการระดับกลางเพื่อสร้างผลลัพธ์สุดท้าย<br>\r\n    <br>\r\n    ฟังก์ชัน <code>collectionTransform</code> มีลายเซ็น <code>(x เป็นค่าใดๆ) ตามที่แสดง => ...</code> ที่ <code>x</code> เป็นองค์ประกอบใน <code>list</code>\r\n    ฟังก์ชัน <code>resultTransform</code> จะแสดงรูปร่างของผลลัพธ์และมีลายเซ็น <code>(x เป็นค่าใดๆ, y เป็นค่าใดๆ) เป็นค่าใดๆ => ...</code> ที่ <code>x</code> เป็นองค์ประกอบใน <code>list</code> และ <code>y</code> เป็นองค์ประกอบจากรายการที่สร้างโดยการส่ง <code>x</code> ไปยัง <code>collectionTransform</code>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "ลดรูปแบบโครงสร้างรายชื่อบุคคลและสัตว์เลี้ยงของพวกเขา",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "ส่งกลับตัวเลขสุ่ม",
        "Documentation.LongDescription": "คืนค่าตัวเลขสุ่มระหว่าง 0 และ 1",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "รับตัวเลขสุ่ม",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "เพิ่มเขตข้อมูลลงในระเบียน",
        "Documentation.LongDescription": "เพิ่มเขตข้อมูลลงในระเบียน <code>record</code> โดยกำหนดให้มีชื่อเขตข้อมูล <code>fieldName</code> และค่า <code>value</code>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เพิ่มที่อยู่ฟิลด์เข้าในระเบียน",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "แทนที่ข้อความภายในค่าที่ป้อนที่ระบุ",
        "Documentation.LongDescription": "แทนที่ข้อความ <code>old</code> ใน <code>text</code> เดิมด้วยข้อความ <code>new</code> ฟังก์ชันตัวแทนที่นี้สามารถใช้ใน <code>List.ReplaceValue</code> และ <code>Table.ReplaceValue</code> ได้",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ข้อความ \"hE\" ด้วย \"He\" ในสตริง \"hEllo world\"",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "แทนที่ค่าภายในค่าที่ป้อนที่ระบุ",
        "Documentation.LongDescription": "แทนที่ค่า <code>old</code> ใน <code>value</code> เดิมด้วยค่า <code>new</code> ฟังก์ชันตัวแทนที่นี้สามารถใช้ใน <code>List.ReplaceValue</code> และ <code>Table.ReplaceValue</code> ได้",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ค่า 11 ด้วยค่า 10",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "นำกลับผลลัพธ์ JSON จาก API ของ Smartsheet",
        "Documentation.DisplayName": "Smartsheet Query",
        "Documentation.Caption": "Smartsheet Query",
        "Documentation.Name": "Smartsheet Query",
        "Documentation.LongDescription": "เรียกหา Smartsheet 2.0 REST API ที่จุดแสดงผลเฉพาะและเปลี่ยนส่วนประกอบของข้อมูลที่ถูกนำกลับไปยังบันทึก JSON",
        "Documentation.Examples": [
          {
            "Description": "ดึงข้อมูลจากชีทที่จุดแสดงผล API ของ Smartsheet พร้อมด้วยอาร์กิวเมนต์เพิ่มเติมเฉพาะ",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "ตารางพร้อมด้วยข้อมูลตามที่ถูกนำกลับโดย API ของ Smartsheet"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.TestContents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "คืนค่าฟังก์ชันที่ไม่แยกออก โดยคืนค่าอาร์กิวเมนต์ของฟังก์ชันเป็นรายการองค์ประกอบเดียว",
        "Documentation.LongDescription": "คืนค่าฟังก์ชันที่ไม่แยกออก โดยคืนค่าอาร์กิวเมนต์ของฟังก์ชันเป็นรายการองค์ประกอบเดียว",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความที่ช่องว่าง",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความที่ช่องว่าง",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าด้วยอักขระช่องว่าง โดยถือว่าเครื่องหมายอัญประกาศเหมือนกับอักขระอื่นๆ",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "แบ่งตารางเป็นรายการตารางต่างๆ ตามจำนวนกลุ่มและคอลัมน์ที่ระบุ",
        "Documentation.LongDescription": "แบ่ง <code>table</code> เป็นรายการจำนวนตาราง <code>groups</code> ตามค่าของ <code>column</code> และฟังก์ชัน <code>hash</code>\r\n    ฟังก์ชัน <code>hash</code> จะถูกนำไปใช้กับค่าของแถว <code>column</code> เพื่อรับค่าแฮชสำหรับแถว มอดูโลค่าแฮช <code>groups</code> กำหนดตารางที่ส่งกลับซึ่งจะมีการวางแถวลงไป\r\n    <ul>\r\n       <li><code>table</code>: ตารางที่จะแบ่งพาร์ติชัน</li>\r\n       <li><code>column</code>: คอลัมน์สำหรับแฮชที่กำหนดว่าจะให้แถวอยู่ในตารางที่ส่งกลับตารางใด</li>\r\n       <li><code>groups</code>: จำนวนตารางจะมีการแบ่งพาร์ติชันตารางค่าที่ป้อนลงไป</li>\r\n       <li><code>hash</code>: ฟังก์ชันที่นำไปใช้เพื่อรับค่าแฮช</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "แบ่งพาร์ติชันตาราง <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> ให้เป็น 2 ตารางในคอลัมน์ [a] โดยใช้ค่าของคอลัมน์เป็นฟังก์ชันแฮช",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "ส่งกลับส่วนของ <code>text</code> ระหว่าง <code>startDelimiter</code> และ <code>endDelimiter</code> ที่ระบุ\r\n    ค่าตัวเลข <code>startIndex</code> ที่เป็นตัวเลือกระบุว่าควรพิจารณาการปรากฏของ <code>startDelimiter</code> ครั้งใด\r\n    รายการ <code>startIndex</code> ที่เป็นตัวเลือกระบุว่าควรพิจารณาการปรากฏของ <code>startDelimiter</code> ครั้งใด ตลอดจนระบุว่าการทำดัชนีควรทำตั้งแต่จุดเริ่มต้นหรือจุดสิ้นสุดของการป้อนข้อมูล\r\n    <code>endIndex</code> คล้ายกัน เว้นแต่ว่าการทำดัชนีทำขึ้นโดยสัมพันธ์กับ <code>startIndex</code>",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "รับส่วนของ \"111 (222) 333 (444)\" ระหว่างวงเล็บเปิด (แรก) กับวงเล็บปิด (แรก) ที่ตามมา",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "รับส่วนของ \"111 (222) 333 (444)\" ระหว่างวงเล็บเปิดที่สองกับวงเล็บปิดแรกที่ตามมา",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "รับส่วนของ \"111 (222) 333 (444)\" ระหว่างวงเล็บเปิดที่สองจากตอนท้ายกับวงเล็บปิดแรกที่ตามมา",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "แทรกค่าข้อความหนึ่งลงในอีกค่าในตำแหน่งที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการแทรกค่าข้อความ <code>newText</code> ลงในค่าข้อความ <code>text</code> ที่ตำแหน่ง <code>offset</code> ตำแหน่งเริ่มต้นที่ตัวเลข 0",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "แทรก \"C\" ระหว่าง \"B\" และ \"D\" ใน \"ABD\"",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "ส่งกลับรหัสเฉพาะสากล (GUID) ที่เป็นค่าใหม่และค่าสุ่ม",
        "Documentation.LongDescription": "ส่งกลับรหัสเฉพาะสากล (GUID) ที่เป็นค่าใหม่และค่าสุ่ม",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "แทนที่การปรากฏทั้งหมดของสตริงย่อยที่กำหนดให้ในข้อความ",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการแทนที่การปรากฏทั้งหมดของค่าข้อความ <code>old</code> ในค่าข้อความ <code>text</code> ด้วยค่าข้อความ <code>new</code> ฟังก์ชันนี้จะพิจารณาตัวพิมพ์ใหญ่-เล็ก",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "แทนที่การปรากฏทั้งหมดของ \"the\" ในประโยคที่มี \"a\"",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "เอาช่วงอักขระออกและแทรกค่าใหม่ในตำแหน่งที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการเอาจำนวนอักขระออก <code>count</code> จากค่าข้อความ <code>text</code> โดยเริ่มต้นที่ตำแหน่ง <code>offset</code> ตามด้วยการแทรกค่าข้อความ <code>newText</code> ที่ตำแหน่งเดิมใน <code>text</code>",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "แทนที่อักขระเดียวที่ตำแหน่ง 2 ในค่าข้อความ \"ABGF\" ด้วยค่าข้อความใหม่ \"CDE\"",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "เพิ่มคีย์ลงในชนิดตารางที่กำหนด",
        "Documentation.LongDescription": "เพิ่มคีย์ลงในชนิดตารางที่กำหนด",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "ส่งกลับรายการข้อมูลประจำตัวที่เงื่อนไขจะยอมรับ",
        "Documentation.LongDescription": "<p>การใช้ <code>identityProvider</code> ที่ระบุจะแปลง <code>condition</code> เป็นรายการข้อมูลประจำตัวโดย <code>condition</code> จะส่งกลับ <code>true</code> ในบริบทการอนุญาตทั้งหมดที่มี <code>identityProvider</code> เป็นผู้ให้บริการข้อมูลประจำตัว ข้อผิดพลาดจะแสดงขึ้นถ้าไม่สามารถแปลง <code>condition</code> เป็นรายการข้อมูลประจำตัวได้ ตัวอย่างเช่น ถ้า <code>condition</code> ตรวจสอบแอตทริบิวต์อื่นๆ ที่ไม่ใช่ข้อมูลประจำตัวของผู้ใช้หรือกลุ่มเพื่อทำการตัดสินใจ</p>\r\n    <p>โปรดทราบว่ารายการข้อมูลประจำตัวแสดงข้อมูลประจำตัวตามที่ปรากฏใน <code>condition</code> และไม่มีการดำเนินการนอร์มัลไลซ์ (เช่น การขยายกลุ่ม)</p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "บีบอัดค่าไบนารีโดยใช้ชนิดการบีบอัดที่กำหนดไว้",
        "Documentation.LongDescription": "บีบอัดค่าไบนารีโดยใช้ชนิดการบีบอัดที่กำหนดไว้  ผลลัพธ์ของการเรียกใช้นี้คือ สำเนาการป้อนค่าที่ถูกบีบอัดแล้ว ชนิดการบีบอัดประกอบด้วย:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "บีบอัดค่าไบนารี",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "ขยายค่าไบนารีโดยใช้ชนิดการบีบอัดที่ระบุ",
        "Documentation.LongDescription": "ขยายค่าไบนารีโดยใช้ชนิดการบีบอัดที่ระบุ  ผลลัพธ์ของการเรียกนี้คือสำเนาที่ถูกขยายของข้อมูลป้อนเข้า ชนิดการบีบอัดประกอบด้วย: \r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li> \r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "ขยายค่าไบนารี",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "ส่งกลับชุดย่อยของค่าไบนารีที่เริ่มต้นที่ออฟเซต",
        "Documentation.LongDescription": "ส่งกลับชุดย่อยของค่าไบนารีที่เริ่มต้นที่ออฟเซต <code>binary</code> พารามิเตอร์ <code>offset</code> ที่เลือกได้จะกำหนดความยาวสูงสุดของชุดย่อย",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับชุดย่อยของค่าไบนารีที่เริ่มต้นที่ออฟเซต 6",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "ส่งกลับชุดย่อยของความยาว 2 จากออฟเซต 6 ของค่าไบนารี",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "แยกไบนารีที่ระบุให้เป็นรายการไบนารีที่ใช้ขนาดหน้ากระดาษที่ระบุ",
        "Documentation.LongDescription": "แยก <code>binary</code> ลงในรายการไบนารีที่องค์ประกอบแรกของรายการผลลัพธ์เป็นไบนารีที่มี <code>pageSize</code> ไบต์แรกจาก\r\n    ไบนารีต้นทาง องค์ประกอบถัดไปของรายการผลลัพธ์คือไบนารีที่ประกอบด้วย <code>pageSize</code> ไบต์ถัดไปจากไบนารีต้นทาง และอื่นๆ",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "สร้างหรือขยายไบนารีด้วยตัวจัดการที่ผู้ใช้กําหนดเองสําหรับคิวรีและการดําเนินการ",
        "Documentation.LongDescription": "<p>ส่งกลับมุมมองของ <code>binary</code> ที่มีการใช้ฟังก์ชันที่ระบุใน <code>handlers</code> แทนลักษณะการทํางานเริ่มต้นของการดําเนินการเมื่อมีการนําการดําเนินการไปใช้กับมุมมอง</p>\r\n<p>ถ้ามี <code>binary</code> ฟังก์ชันตัวจัดการทั้งหมดจะเป็นทางเลือก ถ้าไม่ได้ระบุ <code>binary</code> จําเป็นต้องมีฟังก์ชันตัวจัดการ <code>GetStream</code> ถ้าไม่ได้ระบุฟังก์ชันตัวจัดการสําหรับการดําเนินการ ลักษณะการทํางานเริ่มต้นของการดําเนินการจะถูกนําไปใช้กับ <code>binary</code> แทน (ยกเว้นในกรณีของ <code>GetExpression</code>)</p>\r\n<p>ฟังก์ชันตัวจัดการต้องส่งกลับค่าที่เทียบเท่ากับผลลัพธ์ของการใช้การดําเนินการกับ <code>binary</code> (หรือมุมมองผลลัพธ์ในกรณีของ <code>GetExpression</code>)</p>\r\n<p>ถ้าฟังก์ชันตัวจัดการแสดงข้อผิดพลาด ลักษณะการทํางานเริ่มต้นของการดําเนินการจะถูกนําไปใช้กับมุมมอง</p>\r\n<p><code>Binary.View</code> สามารถใช้เพื่อทําการพับไปยังแหล่งข้อมูล – การแปลคิวรี M เป็นการดําเนินการเฉพาะแหล่งข้อมูล (ตัวอย่างเช่น เมื่อต้องการดาวน์โหลดส่วนของไฟล์)</p>\r\n<p>อ้างอิงคู่มือ Custom Connector ของ Power Query ที่เผยแพร่สําหรับคําอธิบายที่สมบูรณ์เพิ่มเติมของ <code>Binary.View</code></p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "สร้างมุมมองพื้นฐานที่ไม่จําเป็นต้องเข้าถึงข้อมูลเพื่อกําหนดความยาว",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่มีการระบุลำดับไบต์โดยฟังก์ชัน",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่มีการระบุลำดับไบต์โดย <code>binaryFormat</code>  ลำดับไบต์เริ่มต้นคือ <code>ByteOrder.BigEndian</code>",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่เลือกรูปแบบไบนารีถัดไปโดยยึดตามค่าที่ถูกอ่านแล้ว",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่เลือกรูปแบบไบนารีถัดไปโดยยึดตามค่าที่ถูกอ่านแล้ว  ค่ารูปแบบไบนารีที่ผลิตโดยฟังก์ชันนี้จะทำงานในลำดับขั้นตอนต่างๆ:<ul>\r\n<li>รูปแบบไบนารีที่ระบุโดยพารามิเตอร์ <code>binaryFormat</code> จะใช้เพื่ออ่านค่า</li>\r\n<li>ค่าที่ถูกส่งไปยังฟังก์ชันตัวเลือกที่ระบุโดยพารามิเตอร์ <code>chooseFunction</code> </li>\r\n<li>ฟังก์ชันตัวเลือกจะตรวจสอบค่าและส่งกลับรูปแบบไบนารีที่สอง</li>\r\n<li>รูปแบบไบนารีที่สองจะใช้เพื่ออ่านค่าที่สอง</li>\r\n<li>ถ้ามีการระบุฟังก์ชันการรวม ค่าที่หนึ่งและสองจะส่งผ่านไปยังฟังก์ชันการรวม และค่าผลลัพธ์จะถูกส่งกลับ</li>\r\n<li>ถ้าไม่มีการระบุฟังก์ชันการรวม ค่าที่สองจะถูกส่งกลับ</li>\r\n<li>ค่าที่สองจะถูกส่งกลับ</li>\r\n</ul>พารามิเตอร์ <code>type</code> ที่เลือกได้จะระบุชนิดรูปแบบไบนารีที่จะถูกส่งกลับโดยฟังก์ชันตัวเลือก  อาจมีการระบุ <code>type any</code>, <code>type list</code> หรือ <code>type binary</code>  หากไม่มีการระบุพารามิเตอร์ <code>type</code> จากนั้น <code>type any</code> จะถูกใช้งาน   หาก <code>type list</code> หรือ <code>type binary</code> ถูกใช้งาน จากนั้นระบบอาจสามารถส่งกลับค่า <code>binary</code> หรือ <code>list</code> ที่สตรีมแทนค่าที่บัฟเฟอร์ซึ่งอาจลดปริมาณหน่วยความจำที่จำเป็นต่อการอ่านรูปแบบ",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "อ่านรายการไบต์ที่มีการระบุจำนวนองค์ประกอบโดยไบต์แรก",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "อ่านรายการไบต์ที่มีการระบุจำนวนองค์ประกอบโดยไบต์แรกและรักษาไบต์แรกที่อ่านไว้",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "อ่านรายการไบต์ที่มีการระบุจำนวนองค์ประกอบโดยไบต์แรกโดยใช้รายการสตรีม",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่อ่านกลุ่มรายการ",
        "Documentation.LongDescription": "พารามิเตอร์มีดังต่อไปนี้:\r\n<ul>\r\n<li>พารามิเตอร์ <code>binaryFormat</code> จะระบุรูปแบบไบนารีของค่าคีย์</li>\r\n<li>พารามิเตอร์ <code>group</code> จะมีข้อมูลเกี่ยวกับกลุ่มรายการที่รู้จัก</li>\r\n<li>สามารถใช้พารามิเตอร์ <code>extra</code> ที่เป็นทางเลือกในการระบุฟังก์ชันที่จะส่งกลับค่ารูปแบบไบนารีสำหรับค่าที่ตามหลังคีย์ที่ไม่คาดคิด หากไม่มีการระบุพารามิเตอร์ <code>extra</code> จะเกิดข้อผิดพลาดขึ้นหากมีค่าคีย์ที่ไม่คาดคิด</li>\r\n</ul>\r\nพารามิเตอร์ <code>group</code> จะระบุรายการคำจำกัดความ คำจำกัดความแต่ละรายการคือ รายการที่มีค่าอยู่ 3-5 ค่าดังต่อนี้:\r\n<ul>\r\n<li>ค่าคีย์ ค่าของคีย์ที่สอดคล้องกับรายการ ซึ่งจะต้องไม่ซ้ำกันในชุดรายการ</li>\r\n<li>รูปแบบรายการ รูปแบบไบนารีที่สอดคล้องกับค่าของรายการ โดยแต่ละรายการสามารถมีรูปแบบที่แตกต่างกันได้ </li>\r\n<li>การปรากฏของรายการ ค่า <code>BinaryOccurrence.Type</code> สำหรับจำนวนครั้งที่รายการควรจะปรากฏในกลุ่ม รายการที่จำเป็นที่ไม่ปรากฏจะทำให้เกิดข้อผิดพลาด จะมีการจัดการรายการซ้ำที่จำเป็นหรือเป็นตัวเลือกเช่นเดียวกันกับค่าคีย์ที่ไม่คาดคิด</li>\r\n<li>ค่ารายการเริ่มต้น (ทางเลือก)  หากค่าข้อมูลเริ่มต้นปรากฏในคำจำกัดความรายกาและไม่มีค่าเป็น Null ค่านั้นจะถูกใช้แทนค่าเริ่มต้น ค่าเริ่มต้นสำหรับรายการซ้ำหรือข้อมูลที่เป็นตัวเลือกมีค่าเป็น Null และค่าเริ่มต้นสำหรับค่าที่ทำซ้ำคือรายการว่างเปล่า { }</li>\r\n<li>การแปลงค่ารายการ (ทางเลือก)   หากฟังก์ชันการแปลงค่ารายการปรากฏในคำจำกัดความรายการและไม่มีค่าเป็น Null จะมีการเรียกใช้ฟังก์ชันนั้นเพื่อแปลงค่ารายการก่อนส่งกลับ จะมีการเรียกใช้ฟังก์ชันการแปลงเฉพาะหากรายการปรากฏในข้อมูลป้อนเข้า (จะไม่มีการเรียกใช้ฟังก์ชันนี้ด้วยค่าเริ่มต้นโดยเด็ดขาด)</li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "รายการต่อไปนี้จะใช้ค่าคีย์ที่เป็นไบต์เดียวพร้อมด้วยรายการที่คาดหวัง 4 รายการในกลุ่ม ทั้งหมดนี้จะมีไบต์ของข้อมูลหลังจากคีย์  รายการจะปรากฏในข้อมูลป้อนเข้าดังนี้:\r\n<ul>\r\n<li>ต้องการคีย์ 1 และปรากฏพร้อมกับค่า 11</li>\r\n<li>คีย์ 2 ทำซ้ำและปรากฏสองครั้งพร้อมกับค่า 22 และผลลัพธ์ในค่าของ { 22, 22 }</li>\r\n<li>คีย์ 3 จะใช้หรือไม่ก็ได้และไม่ปรากฏ และส่งผลลัพธ์ให้ค่าเป็น Null</li>\r\n<li>คีย์ 4 จะทำซ้ำแต่ไม่ปรากฏ และส่งผลลัพธ์ให้ค่าเป็น { }</li>\r\n<li>คีย์ 5 ไม่เป็นส่วนหนึ่งของกลุ่ม แต่ปรากฏหนึ่งครั้งพร้อมกับค่า 55  ฟังก์ชันพิเศษจะถูกเรียกใช้พร้อมกับค่าคีย์ 5 และส่งกลับรูปแบบที่สอดคล้องกับค่านั้น (BinaryFormat.Byte)  ค่า 55 จะถูกอ่านและถูกละทิ้ง</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "ตัวอย่างต่อไปนี้จะแสดงให้เห็นการแปลงค่ารายการและค่ารายการเริ่มต้น   ข้อมูลที่ทำซ้ำพร้อมกับคีย์ 1 จะสรุปรายการค่าที่อ่านโดยใช้ List.Sum  รายการที่มีให้เลือกพร้อมคีย์ 2 มีค่าเริ่มต้นคือ 123 แทน Null",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่จำกัดจำนวนข้อมูลที่สามารถอ่านได้",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่จํากัดจํานวนข้อมูลที่สามารถอ่านได้ ทั้ง <code>BinaryFormat.List</code> และ <code>BinaryFormat.Binary</code> สามารถใช้เพื่ออ่านได้จนกว่าจะสิ้นสุดข้อมูล <code>BinaryFormat.Length</code> สามารถใช้เพื่อจํากัดจํานวนไบต์ที่อ่านได้ พารามิเตอร์ <code>binaryFormat</code> ระบุรูปแบบไบนารีที่จะจํากัด พารามิเตอร์ <code>length</code> ระบุจํานวนไบต์ที่จะอ่าน พารามิเตอร์ <code>length</code> อาจเป็นค่าตัวเลข หรือค่ารูปแบบไบนารีที่ระบุรูปแบบของค่าความยาวที่ปรากฏอยู่ก่อนหน้าค่าที่กําลังอ่าน",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "จำกัดจำนวนไบต์ที่อ่านเป็น 2 เมื่ออ่านรายการไบต์",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "จํากัดจํานวนไบต์ที่อ่านเมื่ออ่านรายการไบต์เป็นค่าไบต์ที่อยู่ก่อนหน้ารายการ",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่จะแปลงค่าที่อ่านโดยค่าไบนารีอื่น",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่จะแปลงค่าที่อ่านโดยค่าไบนารีอื่น  พารามิเตอร์ <code>binaryFormat</code> จะระบุรูปแบบไบนารีที่จะถูกใช้เพื่ออ่านค่า  <code>function</code> จะถูกเรียกด้วยค่าที่ถูกอ่าน และส่งกลับค่าที่ถูกแปลง",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "อ่านไบต์และเพิ่มลงในพารามิเตอร์",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "ส่งกลับฟังก์ชันตัวเปรียบเทียบซึ่งใช้กฎเลขแสดงลำดับเพื่อเปรียบเทียบค่า",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันตัวเปรียบเทียบที่ใช้กฎเลขลําดับเพื่อเปรียบเทียบค่าที่ระบุ <code>x</code> และ <code>y</code><br>\r\n      <br>\r \n      ฟังก์ชันตัวเปรียบเทียบยอมรับสองอาร์กิวเมนต์และส่งกลับ -1, 0 หรือ 1 โดยขึ้นอยู่กับว่าค่าแรกว่าน้อยกว่า เท่ากับ หรือมากกว่าค่าที่สอง\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "การใช้กฎเลขลำดับจะเปรียบเทียบว่า \"encyclopædia\" และ \"encyclopaedia\" เทียบเท่ากันหรือไม่ โปรดทราบว่าคำเหล่านี้เทียบเท่ากันโดยใช้ <code>Comparer.FromCulture(\"en-US\")</code> ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "ส่งกลับฟังก์ชันตัวเปรียบเทียบแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็กซึ่งใช้กฎเลขลำดับในการเปรียบเทียบค่า",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันตัวเปรียบเทียบที่ไม่ตรงตามตัวพิมพ์ใหญ่-เล็กที่ใช้กฎเลขลําดับเพื่อเปรียบเทียบค่าที่ระบุ <code>x</code> และ <code>y</code><br>\r\n        <br>\r \n        ฟังก์ชันตัวเปรียบเทียบยอมรับสองอาร์กิวเมนต์และส่งกลับ -1, 0 หรือ 1 โดยขึ้นอยู่กับว่าค่าแรกน้อยกว่า เท่ากับ  หรือมากกว่าค่าที่สอง\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "การใช้กฎเลขลำดับแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็ก เปรียบเทียบ \"Abc\" กับ \"abc\" หมายหตุ \"Abc\" จะมีค่าน้อยกว่า \"abc\" โดยใช้ <code>Comparer.Ordinal</code>",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "ส่งกลับคุณสมบัติของแอตทริบิวต์มิติ",
        "Documentation.LongDescription": "ส่งกลับคุณสมบัติ <code>propertyName</code> ของแอตทริบิวต์มิติ <code>attribute</code>",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "ส่งกลับคุณสมบัติของหน่วยวัด (คุณสมบัติเซลล์)",
        "Documentation.LongDescription": "ส่งกลับคุณสมบัติ <code>propertyName</code> ของหน่วยวัด <code>measure</code>",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "แหล่งข้อมูลแบบสอบถาม SQL ของ Databricks",
        "Documentation.LongDescription": "กําหนดแหล่งข้อมูล Databricks สําหรับการเรียกใช้แบบสอบถาม SQL"
      },
      "ReturnType": "แบบสอบถาม SQL ของ Databricks",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "แหล่งข้อมูลแบบสอบถาม SQL ของ Databricks",
        "Documentation.LongDescription": "กําหนดแหล่งข้อมูล Databricks สําหรับการเรียกใช้แบบสอบถาม SQL"
      },
      "ReturnType": "แบบสอบถาม SQL ของ Databricks",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "เพิ่มวันที่ระบุลงในวันที่",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> จากการเพิ่ม <code>numberOfDays</code> วันลงในค่า <code>datetime</code> <code>dateTime</code>\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่วันถูกเพิ่ม</li>\r\n      <li><code>numberOfDays</code>: จำนวนวันที่จะเพิ่ม</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "เพิ่ม 5 วันลงในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่ 5/14/2011",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "เพิ่มเดือนที่ระบุลงในวันที่",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> จากการเพิ่ม <code>numberOfMonths</code> เดือนลงในค่า <code>วันที่เวลา</code> <code>dateTime</code>\r\n      <ul>\r\n        <li><code>dateTime</code>: ค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่เพิ่มเดือน</li>\r\n        <li><code>numberOfMonths</code>: จำนวนเดือนที่จะเพิ่ม</li> \r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "เพิ่ม 5 เดือนลงในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่ 5/14/2011",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "เพิ่ม 18 เดือนลงในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่และเวลา 5/14/2011 08:15:22 AM",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "เพิ่มไตรมาสที่ระบุลงในวันที่",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> จากการเพิ่ม <code>numberOfQuarters</code> ไตรมาสลงในค่า <code>datetime</code> <code>dateTime</code>\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่ไตรมาสถูกเพิ่ม</li>\r\n      <li><code>numberOfQuarters</code>: จำนวนไตรมาสที่จะเพิ่ม</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "เพิ่ม 1 ไตรมาสลงในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่ 5/14/2011",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "เพิ่มสัปดาห์ที่ระบุลงในวันที่",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> จากการเพิ่ม <code>numberOfWeeks</code> สัปดาห์ลงในค่า <code>datetime</code> <code>dateTime</code>\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่สัปดาห์ถูกเพิ่ม</li>\r\n      <li><code>numberOfWeeks</code>: จำนวนสัปดาห์ที่จะเพิ่ม</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "เพิ่ม 2 สัปดาห์ลงในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่ 5/14/2011",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "เพิ่มปีที่ระบุลงในวันที่",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ของการเพิ่ม <code>numberOfYears</code> ลงในค่า <code>วันที่เวลา</code> <code>dateTime</code>\r\n      <ul>\r\n        <li><code>dateTime</code>: ค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่เพิ่มปี</li>\r\n        <li><code>numberOfYears</code>: จำนวนปีที่จะเพิ่ม</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "เพิ่ม 4 ปีลงในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่ 5/14/2011",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "เพิ่ม 10 ปีลงในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่และเวลา 5/14/2011 08:15:22 AM",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนวันถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนวันถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>days</code>: จำนวนวัน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าวันที่อยู่หลังจากเวลาระบบปัจจุบันนั้นอยู่ในช่วงสองวันถัดไปหรือไม่",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนเดือนถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในเดือนปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนเดือนถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในเดือนปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>months</code>: จำนวนเดือน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าเดือนหลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองเดือนถัดไปหรือไม่",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนไตรมาสถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนไตรมาสถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประมวลผล</li>\r\n      <li><code>quarters</code>: จำนวนไตรมาส</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าไตรมาสหลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองไตรมาสถัดไปหรือไม่",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนสัปดาห์ถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนสัปดาห์ถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>weeks</code>: จำนวนสัปดาห์</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าสัปดาห์หลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองไตรมาสถัดไปหรือไม่",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนปีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนปีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>years</code>: จำนวนปี</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าปีหลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองปีถัดไปหรือไม่",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนวันก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนวันก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>days</code>: จำนวนวัน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าวันหลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองวันก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนเดือนก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในเดือนปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนเดือนก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในเดือนปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>months</code>: จำนวนเดือน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าเดือนหลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองเดือนก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนไตรมาสก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนไตรมาสก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>quarters</code>: จำนวนไตรมาส</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าไตรมาสหลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองไตรมาสก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนสัปดาห์ก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนสัปดาห์ก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>weeks</code>: จำนวนสัปดาห์</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าสัปดาห์หลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองสัปดาห์ก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างจำนวนปีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนปีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>years</code>: จำนวนปี</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "พิจารณาว่าปีหลังจากเวลาระบบปัจจุบันอยู่ในช่วงเวลาสองปีก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "เพิ่มข้อมูลโซนเวลาลงในค่าวันที่เวลา",
        "Documentation.LongDescription": "เพิ่มข้อมูลโซนเวลาไปยังค่า <code>dateTime</code> ข้อมูลโซนเวลาประกอบด้วย <code>timezoneHours</code> และ <code>timezoneMinutes</code> เพิ่มเติม ซึ่งระบุออฟเซตที่ต้องการจากเวลา UTC",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "ตั้งค่าโซนเวลาเป็น UTC+7:30 (7 ชั่วโมงและ 30 นาทีหลังเวลา UTC)",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างจำนวนชั่วโมงถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนชั่วโมงถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>hours</code>: จำนวนชั่วโมง</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าชั่วโมงหลังจากเวลาระบบปัจจุบันจะเป็นค่าสองชั่วโมงถัดไปหรือไม่",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างจำนวนนาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนนาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>minutes</code>: จำนวนนาที</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่านาทีหลังจากเวลาระบบปัจจุบันจะเป็นค่าสองนาทีถัดไปหรือไม่",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างจำนวนวินาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนวินาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>seconds</code>: จำนวนวินาที</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าวินาทีหลังจากเวลาระบบปัจจุบันจะเป็นค่าสองวินาทีถัดไปหรือไม่",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างจำนวนชั่วโมงก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนชั่วโมงก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>hours</code>: จำนวนชั่วโมง</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าชั่วโมงก่อนเวลาระบบปัจจุบันจะเป็นค่าสองชั่วโมงก่อนหน้าหรือไม่",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างจำนวนนาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนนาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>minutes</code>: จำนวนนาที</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่านาทีก่อนเวลาระบบปัจจุบันจะเป็นค่าสองนาทีก่อนหน้าหรือไม่",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างจำนวนวินาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างจำนวนวินาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      <li><code>seconds</code>: จำนวนวินาที</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าวินาทีก่อนเวลาระบบปัจจุบันจะเป็นค่าสองวินาทีก่อนหน้าหรือไม่",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "เปลี่ยนโซนเวลาของค่า",
        "Documentation.LongDescription": "เปลี่ยนแปลงข้อมูลโซนเวลาในค่าโซนวันที่เวลา <code>dateTimeZone</code> ในข้อมูลโซนเวลาใหม่จาก <code>timezoneHours</code> หรือ <code>timezoneMinutes</code> ก็ได้\r\n    ถ้า <code>dateTimeZone</code> ไม่มีคอมโพเนนต์โซนเวลา ระบบจะแสดงข้อยกเว้น",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "เปลี่ยนแปลงข้อมูลโซนเวลาสำหรับ #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) เป็น 8 ชั่วโมง",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "เปลี่ยนแปลงข้อมูลโซนเวลาสำหรับ #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) เป็น -30 นาที",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "เข้าถึงค่าตามชื่อใน Mashup ที่ฝังตัว",
        "Documentation.LongDescription": "เข้าถึงค่าตามชื่อใน Mashup ที่ฝังตัว",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "สร้างฟังก์ชันที่มีลายเซ็นพารามิเตอร์เฉพาะที่อยู่ด้านบนฟังก์ชันที่ใช้อาร์กิวเมนต์แบบรายการเดียว",
        "Documentation.LongDescription": "ใช้ฟังก์ชัน unary <code>function</code> และสร้างฟังก์ชันใหม่ด้วยชนิด <code>functionType</code> ที่สร้างรายการจากอาร์กิวเมนต์และส่งผ่านไปยัง <code>function</code>",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "แปลง List.Sum เป็นฟังก์ชันแบบสองอาร์กิวเมนต์ที่อาร์กิวเมนต์จะถูกรวมเข้าด้วยกัน",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "แปลงฟังก์ชันโดยใช้รายการเป็นฟังก์ชันแบบสองอาร์กิวเมนต์",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "เรียกใช้ฟังก์ชันที่ระบุ",
        "Documentation.LongDescription": "เรียกใช้ฟังก์ชันที่ระบุโดยใช้รายการที่ระบุของอาร์กิวเมนต์และส่งกลับผลลัพธ์",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "เรียกใช้ Record.FieldNames ด้วยหนึ่งอาร์กิวเมนต์ [A=1,B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "เรียกฟังก์ชันที่กำหนดไว้หลังผ่านระยะเวลาที่ระบุไว้",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการเรียก <code>function</code> หลังผ่านระยะเวลา <code>delay</code>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "สร้างฟังก์ชันสเกลาบนฟังก์ชันเวกเตอร์ ส่งชุดคำเปลี่ยนแปลงคำขอหลายรายการ",
        "Documentation.LongDescription": "<p>ส่งกลับฟังก์ชันสเกลาของชนิด <code>scalarFunctionType</code> ที่เรียก <code>vectorFunction</code> ด้วยอาร์กิวเมนต์แถวเดียว และส่งกลับผลลัพธ์เดียว นอกจากนี้ เมื่อใช้ฟังก์ชันสเกลาสำหรับแต่ละแถวของตารางข้อมูลป้อนเข้าซ้ำๆ แล้ว เช่น Table.AddColumn ระบบจะใช้ <code>vectorFunction</code> ครั้งเดียวสำหรับข้อมูลป้อนเข้าทั้งหมดแทน</p>\r\n<p><code>vectorFunction</code> จะถูกส่งผ่านตารางที่คอลัมน์มีชื่อ และตำแหน่งพารามิเตอร์ของ <code>scalarFunctionType</code> ตรงกัน แต่ละแถวของตารางนี้ประกอบด้วยอาร์กิวเมนต์สำหรับการเรียกใช้ฟังก์ชันสเกลา โดยคอลัมน์ที่สอดคล้องกับพารามิเตอร์ของ <code>scalarFunctionType</code> </p>\r\n<p><code>vectorFunction</code> ต้องส่งกลับรายการที่มีความยาวเดียวกับตารางข้อมูลป้อนเข้า ซึ่งรายการในแต่ละตำแหน่งต้องเป็นผลลัพธ์เดียวกันกับการประเมินฟังก์ชันสเกลาบนแถวข้อมูลป้อนเข้าของตำแหน่งเดียวกัน</p>\r\n<p>ตารางข้อมูลป้อนเข้าต้องมีการสตรีม ดังนั้น <code>vectorFunction</code> ต้องสตรีมผลลัพธ์เมื่อมีข้อมูลป้อนเข้ามา ซึ่งใช้ได้กับข้อมูลป้อนเข้ากลุ่มหนึ่งเท่านั้นในแต่ละครั้ง โดยเฉพาะอย่างยิ่ง <code>vectorFunction</code> ต้องไม่แจงนับตารางข้อมูลป้อนเข้ามากกว่าหนึ่งครั้ง</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "สร้างระเบียนที่แสดงจุดทางภูมิศาสตร์จากส่วนต่างๆ",
        "Documentation.LongDescription": "สร้างระเบียนที่แสดงจุดทางภูมิศาสตร์จากส่วนประกอบต่างๆ เช่น ลองจิจูด ละติจูด การยกระดับ (Z) และการวัด (M) หากมี โดยสามารถกำหนดตัวระบุการอ้างอิงเชิงพื้นที่ (SRID) เพิ่มเติมได้หากแตกต่างจากค่าเริ่มต้น (4326)",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "สร้างระเบียนที่แสดงจุดทางเรขาคณิตจากส่วนต่างๆ",
        "Documentation.LongDescription": "สร้างระเบียนที่แสดงจุดทางเรขาคณิตจากส่วนประกอบต่างๆ เช่น พิกัด X พิกัด Y และพิกัด Z และการวัด (M) หากมี โดยสามารถกำหนดตัวระบุการอ้างอิงเชิงพื้นที่ (SRID) เพิ่มเติมได้หากแตกต่างจากค่าเริ่มต้น (0)",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "สร้างข้อมูลประจำตัว",
        "Documentation.LongDescription": "สร้างข้อมูลประจำตัว",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "กำหนดว่าข้อมูลประจำตัวเป็นสมาชิกของคอลเลกชันข้อมูลประจำตัวหรือไม่",
        "Documentation.LongDescription": "กำหนดว่าข้อมูลประจำตัวเป็นสมาชิกของคอลเลกชันข้อมูลประจำตัวหรือไม่",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "ส่งกลับรายการที่ประกอบด้วยองค์ประกอบออฟเซตจำนวนคี่ในรายการ",
        "Documentation.LongDescription": "ส่งกลับรายการที่ประกอบด้วยองค์ประกอบออฟเซตจำนวนคี่ในรายการ สลับระหว่างการใช้และการข้ามค่าจากรายการ <code>list</code> โดยขึ้นอยู่กับพารามิเตอร์\r\n    <ul>\r\n    <li><code>count</code>: ระบุจำนวนค่าที่ถูกข้ามในแต่ละครั้ง</li>\r\n    <li><code>repeatInterval</code>: ช่วงการทำซ้ำที่มีให้เลือกจะระบุจำนวนค่าที่ถูกเพิ่มระหว่างค่าที่ข้าม</li>\r\n    <li><code>offset</code>: พารามิเตอร์ออฟเซตที่เลือกได้ที่จะเริ่มข้ามค่าในออฟเซตเริ่มต้น</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจาก {1..10} ที่ข้ามตัวเลขแรก",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "สร้างรายการจาก {1..10} ที่ข้ามตัวเลขอื่นทุกตัว",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "สร้างรายการจาก {1..10} ที่เริ่มต้นจาก 1 และข้ามตัวเลขอื่นทุกตัว",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "สร้างรายการจาก {1..10} ที่เริ่มต้นจาก 1 ข้ามหนึ่งค่า เก็บสองค่าและอื่นๆ",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "ระบุว่ารายการมีค่าหรือไม่",
        "Documentation.LongDescription": "ระบุว่ารายการ <code>list</code> มีค่า <code>value</code> หรือไม่\r\n    ส่งกลับเป็น จริง ถ้าพบค่าในรายการ หรือส่งเป็น เท็จ หากไม่เป็นเช่นนั้น โดยสามารถระบุค่าเกณฑ์สมการที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3, 4, 5} มี 3 หรือไม่",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3, 4, 5} มี 6 หรือไม่",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "ระบุตำแหน่งที่รายการมีค่าทั้งหมดในรายการอื่น",
        "Documentation.LongDescription": "ระบุว่ารายการ <code>list</code> มีค่าทั้งหมดในรายการอื่นหรือไม่ <code>values</code>\r\n    ส่งกลับเป็น true ถ้าพบค่าในรายการ หรือส่งเป็น false หากไม่เป็นเช่นนั้น โดยสามารถระบุค่าเกณฑ์สมการที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3, 4, 5} มี 3 และ 4 หรือไม่",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3, 4, 5} มี 5 และ 6 หรือไม่",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "ระบุตำแหน่งที่รายการมีค่าใดๆ ในรายการอื่น",
        "Documentation.LongDescription": "ระบุว่ารายการ <code>list</code> มีค่าใดๆ ในรายการอื่นหรือไม่ <code>values</code>\r\n        ส่งกลับเป็น true ถ้าพบค่าในรายการ หรือส่งเป็น false หากไม่เป็นเช่นนั้น โดยสามารถระบุค่าเกณฑ์สมการที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3, 4, 5} มี 3 หรือ 9 หรือไม่",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3, 4, 5} มี 6 หรือ 7 หรือไม่",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "ส่งกลับค่าความแปรปรวนระหว่างรายการตัวเลขทั้งสองรายการ",
        "Documentation.LongDescription": "ส่งกลับค่าความแปรปรวนระหว่างสองรายการ <code>numberList1</code> และ <code>numberList2</code> <code>numberList1</code> และ <code>numberList2</code> ต้องมีจำนวนค่า <code>number</code> เดียวกัน",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "คำนวณค่าความแปรปรวนระหว่างสองรายการ",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "ส่งกลับความแตกต่างของสองรายการที่ระบุ",
        "Documentation.LongDescription": "ส่งคืนข้อมูลในรายการ <code>list1</code> ที่ไม่ปรากฏในรายการ <code>list2</code> สนับสนุนค่าซ้ำ\r\n    โดยสามารถระบุค่าเกณฑ์สมการที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาข้อมูลในรายการ {1, 2, 3, 4, 5} ที่ไม่ปรากฏใน {4, 5, 3}",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "ค้นหาข้อมูลในรายการ {1, 2} ที่ไม่ปรากฏใน {1, 2, 3}",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "ส่งกลับรายการค่า (รวมถึงเขตข้อมูลระเบียน) ที่มีข้อความที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับรายการของค่าจากรายการ <code>list</code> ที่มีค่า <code>text</code>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าในรายการ {\"a\", \"b\", \"ab\"} ที่ตรงกับ \"a\" ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "ส่งกลับข้อมูลชุดแรกในรายการโดยระบุจำนวนข้อมูลที่จะส่งกลับหรือเงื่อนไขที่เหมาะสม",
        "Documentation.LongDescription": " <ul>\r\n  <li>ถ้ามีการระบุจำนวน จะมีการส่งกลับหลายรายการได้สูงสุดตามจำนวนดังกล่าว </li>\r\n  <li>ถ้ามีการระบุเงื่อนไข จะมีการส่งกลับรายการทั้งหมดซึ่งตรงตามเงื่อนไขในเบื้องต้น เมื่อรายการใดรายการหนึ่งไม่เป็นไปตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าเริ่มต้นในรายการ {3, 4, 5, -1, 7, 8, 2} ที่มากกว่า 0",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "ส่งกลับเป็น จริง ถ้าฟังก์ชันเงื่อนไขได้รับการยอมรับจากค่าทั้งหมดในรายการ",
        "Documentation.LongDescription": "ส่งกลับ <code>true</code> ถ้าฟังก์ชันเงื่อนไข <code>condition</code> ถูกยอมรับโดยค่าทั้งหมดในรายการ <code>list</code> มิฉะนั้นจะส่งกลับ <code>false</code>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ระบุว่าค่าทั้งหมดในรายการ {11, 12, 13} มากกว่า 10 หรือไม่",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "ระบุว่าค่าทั้งหมดในรายการ {1, 2, 3} มากกว่า 10 หรือไม่",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "ส่งกลับเป็น จริง ถ้าฟังก์ชันเงื่อนไขถูกยอมรับโดยค่าใดๆ",
        "Documentation.LongDescription": "ส่งกลับ <code>true</code> ถ้าฟังก์ชันเงื่อนไข <code>condition</code> ถูกยอมรับโดยค่าใดๆ ในรายการ <code>list</code> มิฉะนั้นจะส่งกลับ <code>false</code>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "หาว่าค่าใดๆ ในรายการ {9, 10, 11} มากกว่า 10 หรือไม่",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่าค่าใดๆ ในรายการ {1, 2, 3} ที่มากกว่า 10",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "ส่งกลับค่าสูงสุดในรายการ ต้องระบุจำนวนค่าที่จะส่งกลับหรือเงื่อนไขการกรอง",
        "Documentation.LongDescription": "ส่งคืนค่าสูงสุดในรายการ <code>list</code>\r\n    หลังจากเรียงลำดับแถวแล้ว สามารถระบุพารามิเตอร์ที่เลือกได้เพื่อกรองผลลัพธ์เพิ่มเติม พารามิเตอร์ <code>countOrCondition</code> ที่เลือกได้จะระบุจำนวนค่าเพื่อส่งกลับหรือเงื่อนไขการกรอง พารามิเตอร์ที่เลือกได้ <code>comparisonCriteria</code> จะระบุวิธีเปรียบเทียบค่าในรายการ\r\n <ul>\r\n        <li> <code>list</code>: รายการค่า</li>\r\n        <li> <code>countOrCondition</code>: ถ้าระบุตัวเลข จะมีการส่งคืนรายการที่มีข้อมูลสูงสุด <code>countOrCondition</code> รายการตามลำดับจากน้อยไปหามาก ถ้ามีการระบุเงื่อนไข จะมีการส่งกลับรายการข้อมูลที่ตรงกับเงื่อนไขแรก เมื่อรายการไม่ตรงตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป</li>\r\n<li><code>comparisonCriteria</code>: <i>[ระบุหรือไม่ก็ได้]</i> อาจระบุค่า <code>comparisonCriteria</code> ที่เลือกได้เพื่อกำหนดวิธีเปรียบเทียบข้อมูลในรายการ ถ้าพารามิเตอร์เป็น null จะมีการใช้ตัวเปรียบเทียบเริ่มต้น \r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "ส่งกลับค่าต่ำสุดในรายการ สามารถระบุจำนวนค่าที่จะส่งกลับหรือเงื่อนไขการกรองได้",
        "Documentation.LongDescription": "ส่งกลับค่าต่ำสุดในรายการ <code>list</code>\r\n    พารามิเตอร์ <code>countOrCondition</code> จะระบุจำนวนค่าเพื่อส่งกลับหรือเงื่อนไขการกรอง พารามิเตอร์ที่เลือกได้ <code>comparisonCriteria</code> จะระบุวิธีเปรียบเทียบค่าในรายการ\r\n <ul>\r\n        <li> <code>list</code>: รายการค่า</li>\r\n        <li> <code>countOrCondition</code>: ถ้าระบุตัวเลข จะมีการส่งกลับรายการที่มีข้อมูลสูงสุด <code>countOrCondition</code> ข้อมูลตามลำดับจากน้อยไปหามาก ถ้าระบุเงื่อนไข จะมีการส่งกลับรายการข้อมูลที่ตรงกับเงื่อนไขตั้งแต่แรก เมื่อรายการใดรายการหนึ่งไม่เป็นไปตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป ถ้าพารามิเตอร์นี้เป็น null ค่าที่น้อยที่สุดค่าเดียวในรายการจะถูกส่งกลับ</li>\r\n<li><code>comparisonCriteria</code>: <i>[ระบุหรือไม่ก็ได้]</i> อาจระบุค่า <code>comparisonCriteria</code> ที่เลือกได้เพื่อกำหนดวิธีเปรียบเทียบข้อมูลในรายการ ถ้าพารามิเตอร์เป็น null จะมีการใช้ตัวเปรียบเทียบเริ่มต้น \r\n </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "หา 5 ค่าเล็กสุดในรายการ <code>{3, 4, 5, -1, 7, 8, 2}</code>",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "ส่งกลับรายการตัวเลขที่ได้รับค่าเริ่มต้น จำนวนนับ และค่าการเพิ่มที่เลือกได้",
        "Documentation.LongDescription": "ส่งกลับรายการตัวเลขที่ได้รับค่าเริ่มต้น จำนวนนับ และค่าการเพิ่มที่เลือกได้ ค่าการเพิ่มเริ่มต้นคือ 1\r\n<ul>\r\n   <li><code>start</code>: ค่าเริ่มต้นในรายการ</li>\r\n   <li><code>count</code>: จำนวนค่าที่จะสร้าง</li>\r\n   <li><code>increment</code>: <i>[ระบุหรือไม่ก็ได้]</i> ค่าที่จะเพิ่ม ถ้าค่าที่ละเว้นถูกเพิ่มทีละ 1</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการของ 10 ตัวเลขเรียงกันโดยเริ่มต้นที่ 1",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "สร้างรายการตัวเลข 10 ตัวซึ่งเริ่มต้นที่ 1 โดยเพิ่มขึ้นทีละ 2 สำหรับตัวเลขถัดไปแต่ละตัว",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "ส่งกลับเปอร์เซ็นต์ไทล์ตัวอย่างอย่างน้อยหนึ่งรายการที่สอดคล้องกับความน่าจะเป็นที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับเปอร์เซ็นต์ไทล์ตัวอย่างของรายการ <code>list</code> อย่างน้อยหนึ่งรายการ ถ้าค่า <code>percentiles</code> เป็นตัวเลขระหว่าง 0.0 และ 1.0 จะถือว่าเป็นเปอร์เซ็นต์ไทล์ และผลลัพธ์จะเป็น\r\n    ค่าเดียวที่สอดคล้องกับความน่าจะเป็นดังกล่าว ถ้าค่า <code>percentiles</code> เป็นรายการตัวเลขที่มีค่าระหว่าง 0.0 และ 1.0 ผลลัพธ์จะเป็นรายการเปอร์เซ็นต์ไทล์\r\n    ที่สอดคล้องกับความน่าของข้อมูลป้อนเข้า ผู้ใช้ขั้นสูงสามารถใช้ตัวเลือก PercentileMode ใน <code>options</code> เพื่อเลือกวิธีการประมาณค่าในช่วงที่เจาะจงยิ่งขึ้น แต่ไม่แนะนำสำหรับการใช้งานส่วนใหญ่\r\n    สัญลักษณ์ที่กำหนดไว้ล่วงหน้า <code>PercentileMode ExcelInc</code> และ <code>PercentileMode ExcelExc</code> ตรงกับวิธีการประมาณค่าในช่วงที่ฟังก์ชัน Excel ใช้\r\n    <code>PERCENTILE.INC</code> และ <code>PERCENTILE.EXC</code> ลักษณะการทำงานเริ่มต้นตรงกับ <code>PercentileMode.ExcelInc</code> สัญลักษณ์\r\n    <code>PercentileMode. SqlCont</code> และ <code>PercentileMode.SqlDisc</code> ตรงกับลักษณะการทำงานของ SQL Server สำหรับ <code>PERCENTILE_CONT</code> และ\r\n    <code>PERCENTILE_DISC</code> ตามลำดับ\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาควอไทล์แรกของรายการ <code>{5, 3, 1, 7, 9}</code>",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "ค้นหาควอไทล์ของรายการ <code> {5, 3, 1, 7, 9} </code> โดยใช้วิธีการการประมาณค่าในช่วงที่ตรงกับ <code>PERCENTILE.EXC</code> ของ Excel",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "ส่งกลับออฟเซตของค่าในรายการ",
        "Documentation.LongDescription": "ส่งกลับออฟเซตที่ค่า <code>value</code> ปรากฏในรายการ <code>list</code> ส่งกลับ -1 ถ้าค่าไม่ปรากฏ\r\n    สามารถระบุพารามิเตอร์การเกิดเหตุการณ์ <code>occurrence</code> ที่เลือกได้\r\n<ul>\r\n   <li><code>occurrence</code>: จำนวนสูงสุดของเหตุการณ์ที่จะรายงาน</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "หาตำแหน่งในรายการ {1, 2, 3} ที่ค่า 3 ปรากฏ",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "ส่งกลับออฟเซตแรกของค่าในรายการ",
        "Documentation.LongDescription": "ส่งกลับออฟเซตในรายการ <code>list</code> ของการเกิดเหตุการณ์ครั้งแรกของค่าในรายการ <code>values</code> ส่งกลับ -1 ถ้าไม่พบการปรากฏ\r\n    สามารถระบุพารามิเตอร์การปรากฏ <code>occurrence</code> ที่เลือกได้\r\n<ul>\r\n   <li><code>occurrence</code>: จำนวนสูงสุดของเหตุการณ์ที่สามารถส่งกลับได้</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "หาตำแหน่งแรกในรายการ {1, 2, 3} ที่ค่า 2 หรือ 3 ปรากฏ",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "ส่งกลับชุดย่อยของรายการที่เริ่มต้นที่ออฟเซต",
        "Documentation.LongDescription": "ส่งกลับชุดย่อยของรายการที่เริ่มต้นที่ออฟเซต <code>list</code> พารามิเตอร์ <code>offset</code> ที่เลือกได้จะกำหนดจำนวนสูงสุดของรายการในชุดย่อย",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาเซตย่อยโดยเริ่มต้นที่ออฟเซต 6 ของรายการจำนวน 1 ถึง 10",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "ค้นหาเซตย่อยของความยาว 2 จากออฟเซต 6 จากรายการจำนวน 1 ถึง 10",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "เอาข้อมูลออกจาก list1 ที่ปรากฏอยู่ในรายการ",
        "Documentation.LongDescription": "เอาการปรากฏทั้งหมดของค่าที่กำหนดให้ใน <code>list2</code> ออกจาก <code>list1</code> ถ้าค่าใน <code>list2</code> ไม่มีอยู่ใน <code>list1</code> จะมีการส่งกลับรายการเดิม",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "เอาข้อมูลในรายการ {2, 4, 6} ออกจากรายการ {1, 2, 3, 4, 2, 5, 5}",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "เอาการปรากฏทั้งหมดของค่าที่ป้อนออก",
        "Documentation.LongDescription": "เอาการปรากฏทั้งหมดของค่าที่กำหนดให้ใน <code>list2</code> ออกจากรายการ <code>list1</code> ถ้าค่าใน <code>list2</code> ไม่มีอยู่ใน <code>list1</code> จะมีการส่งกลับรายการเดิม\r\n    โดยสามารถระบุค่าเกณฑ์สมการที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจาก {1, 2, 3, 4, 5, 5} โดยไม่มี {1, 5}",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "เอาจำนวนนับของค่าออกโดยเริ่มต้นในตำแหน่งที่ระบุ",
        "Documentation.LongDescription": "เอาค่า <code>count</code> ใน <code>list</code> ออกโดยเริ่มต้นในตำแหน่งที่ระบุ <code>index</code>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "เอา 3 ค่าในรายการออก {1, 2, 3, 4, -6, -2, -1, 5} โดยเริ่มจากดัชนี 4",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "ส่งกลับรายการซึ่งเป็นจำนวนที่ซ้ำกันของรายการเดิม",
        "Documentation.LongDescription": "ส่งกลับรายการซึ่งเป็นรายการ <code>count</code> ที่ซ้ำของรายการเดิม <code>list</code>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการที่มี {1, 2} ที่ถูกทำซ้ำ 3 ครั้ง",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "นำการแทนที่แต่ละรายการของ { old, new } ไปใช้",
        "Documentation.LongDescription": "ดำเนินการแทนที่ที่กำหนดให้ไปยังรายการ <code>list</code> การดำเนินการแทนที่ <code>replacements</code> ประกอบด้วยรายการที่มีสองค่า ได้แก่ค่าเดิมและค่าใหม่ ที่ระบุไว้ในรายการ\r\n    โดยสามารถระบุค่าเกณฑ์สมการที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจาก {1, 2, 3, 4, 5} แทนที่ค่า 5 ด้วย -5 และค่า 1 ด้วย -1",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "ส่งกลับรายการของค่าที่ตรงกับเงื่อนไข",
        "Documentation.LongDescription": "ส่งกลับรายการของค่าจากรายการ <code>list</code> ที่ตรงกับเงื่อนไขการเลือก <code>selection</code>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าในรายการ {1, -3, 4, 9, -2} ที่มากกว่า 0",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "แยกรายการที่ระบุลงในรายการของรายการโดยใช้ขนาดหน้าที่ระบุ",
        "Documentation.LongDescription": "แยก <code>list</code> ลงในรายการของรายการที่องค์ประกอบแรกของรายการผลลัพธ์คือรายการที่มีองค์ประกอบ <code>pageSize</code> แรกจาก\r\n    จากรายการแหล่งข้อมูล องค์ประกอบถัดไปของรายการผลลัพธ์คือรายการที่มีองค์ประกอบ <code>pageSize</code> ถัดไปจากรายการแหล่งข้อมูล และอื่นๆ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "ส่งกลับรายการค่าใหม่ที่คำนวณจากรายการนี้",
        "Documentation.LongDescription": "ส่งกลับรายการค่าใหม่โดยการนำฟังก์ชันการแปลง <code>transform</code> ไปใช้กับรายการ <code>list</code>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "เพิ่ม 1 ลงในแต่ละค่าในรายการ {1, 2}",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "ส่งกลับค่าอาร์กแทนเจนต์ของการหารสองจำนวน",
        "Documentation.LongDescription": "ส่งกลับค่าอาร์กแทนเจนต์ของการหารสองจำนวน ได้แก่ <code>y</code> และ <code>x</code> การหารจะเขียนโครงสร้างได้เป็น <code>y</code>/<code>x</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "ส่งกลับผลลัพธ์ของการดำเนินการในระดับบิต \"And\" ระหว่างค่าที่ป้อนสองรายการ",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการดำเนินการในระดับบิต \"And\" ระหว่าง <code>number1</code> กับ <code>number2</code>",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "ส่งกลับผลลัพธ์ของการดำเนินการในระดับบิต \"Or\" ระหว่างค่าที่ป้อนสองรายการ",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการดำเนินการในระดับบิต \"Or\" ระหว่าง <code>number1</code> กับ <code>number2</code>",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "เลื่อนชุดบิตที่กำหนดไปทางซ้าย",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการดำเนินการเลื่อนบิตไปทางซ้ายใน <code>number1</code> ตามจำนวนบิต <code>number2</code> ที่ระบุ",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "เลื่อนชุดบิตที่กำหนดไปทางขวา",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการดำเนินการเลื่อนบิตไปทางขวาใน <code>number1</code> ตามจำนวนบิต <code>number2</code> ที่ระบุ",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "ส่งกลับผลลัพธ์ของการดำเนินการในระดับบิต \"XOR\" (Exclusive-OR) ระหว่างค่าที่ป้อนสองรายการ",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการดำเนินการในระดับบิต \"XOR\" (Exclusive-OR) ระหว่าง <code>number1</code> กับ <code>number2</code>",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "ส่งกลับจำนวนการรวมที่ไม่ซ้ำกัน",
        "Documentation.LongDescription": "ส่งกลับจำนวนของการรวมที่ไม่ซ้ำกันจากรายการของข้อมูล <code>setSize</code> โดยมีขนาดการรวม <code>combinationSize</code> ที่ระบุ\r\n<ul>\r\n    <li><code>setSize</code>: จำนวนของข้อมูลในรายการ</li>\r\n    <li><code>combinationSize</code>: จำนวนข้อมูลในการรวมแต่ละรายการ</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "หาจำนวนการรวมจากทั้งหมด 5 รายการเมื่อการรวมแต่ละรายการแบ่งออกเป็นกลุ่มละ 3",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "หารสองจำนวนและส่งกลับจำนวนเต็มของผลลัพธ์",
        "Documentation.LongDescription": "ส่งคืนจำนวนเต็มของผลลัพธ์จากการหารตัวเลข <code>number1</code> โดยตัวเลขอีกตัวหนึ่ง <code>number2</code>\r\n    ถ้า <code>number1</code> หรือ <code>number2</code> เป็น null <code>ตัวเลข.หารจำนวนเต็ม</code> จะส่งคืนค่าเป็น null\r\n      <ul>\r\n        <li><code>number1</code>: ตัวตั้ง</li>\r\n        <li><code>number2</code>: ตัวหาร</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "หาร 6 ด้วย 4",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "หาร 8.3 ด้วย 3",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "จำนวนเต็มหารสองจำนวนและส่งกลับเศษที่เหลือ",
        "Documentation.LongDescription": "ส่งคืนเศษที่เหลือที่เป็นผลจากการหารจำนวนเต็ม <code>number</code> ด้วย <code>divisor</code> \r\n    ถ้า <code>number</code> หรือ <code>divisor</code> เป็น null <code>ตัวเลข.Mod</code> จะส่งคืนค่าเป็น null\r\n      <ul>\r\n        <li><code>number</code>: ตัวตั้ง</li>\r\n        <li><code>divisor</code>: ตัวหาร</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "หาเศษที่เหลือเมื่อคุณหาร 5 ด้วย 3",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "ส่งกลับจำนวนการเรียงสับเปลี่ยน",
        "Documentation.LongDescription": "ส่งกลับจำนวนการเรียงสับเปลี่ยนที่สามารถสร้างจากจำนวนของรายการ <code>setSize</code> ด้วยขนาดการเรียงสับเปลี่ยนที่ระบุ <code>permutationSize</code>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "หาจำนวนการเรียงสับเปลี่ยนจากทั้งหมด 5 รายการโดยแบ่งออกเป็นกลุ่มละ 3",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "ยกกำลังตัวเลขด้วยตัวเลขที่ระบุ",
        "Documentation.LongDescription": "ส่งคืนผลลัพธ์ของการยกกำลัง <code>number</code> ด้วยเลข <code>power</code>\r\n    ถ้า <code>number</code> หรือ <code>power</code> เป็น null <code>ตัวเลข.Power</code> จะส่งคืนค่าเป็น null\r\n      <ul>\r\n        <li><code>number</code>: เลขฐาน</li>\r\n        <li><code>power</code>: เลขชี้กำลัง</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "หาค่าของ 5 ที่ยกกำลังด้วยเลข 3 (5 ในลูกบาศก์)",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "ส่งกลับตัวเลขสุ่มระหว่างสองตัวเลข",
        "Documentation.LongDescription": "ส่งกลับตัวเลขสุ่มระหว่าง <code>bottom</code> ถึง <code>top</code>",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "รับตัวเลขสุ่มระหว่าง 1 ถึง 5",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "ส่งกลับค่าของเขตข้อมูลที่ระบุในระเบียน",
        "Documentation.LongDescription": "ส่งกลับค่าของ <code>field</code> ที่ระบุใน <code>record</code> ถ้าไม่พบเขตข้อมูล ระบบจะแสดงข้อยกเว้น",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าของฟิลด์ \"CustomerID\" ในระเบียน",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "ส่งกลับค่าของเขตข้อมูลที่ระบุในระเบียนหรือค่าเริ่มต้น ถ้าไม่พบเขตข้อมูล",
        "Documentation.LongDescription": "ส่งกลับค่าของเขตข้อมูลที่ระบุ <code>field</code> ในระเบียน <code>record</code> ถ้าไม่พบเขตข้อมูล จะมีการส่งกลับ <code>defaultValue</code> ที่เป็นทางเลือก",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าของฟิลด์ \"Phone\" ในระเบียน หรือส่งคืนเป็นค่า Null ถ้าไม่มีค่านั้นอยู่",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "ค้นหาค่าของฟิลด์ \"Phone\" ในระเบียน หรือส่งคืนเป็นค่าเริ่มต้น ถ้าไม่มีค่านั้นอยู่",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "ส่งกลับระเบียนโดยมีหนึ่งรายการค่าเขตข้อมูลและหนึ่งชุดเขตข้อมูล",
        "Documentation.LongDescription": "ส่งกลับระเบียนโดยมี <code>list</code> ค่าเขตข้อมูลและหนึ่งชุดเขตข้อมูล  <code>fields</code> สามารถระบุได้โดยรายการค่าข้อความหรือชนิดระเบียน  ระบบจะแสดงข้อผิดพลาดถ้าเขตข้อมูลซ้ำกัน",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "สร้างระเบียนจากรายการค่าเขตข้อมูลและรายการชื่อเขตข้อมูล",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "สร้างระเบียนจากรายการค่าเขตข้อมูลและชนิดระเบียน",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "ระบุว่าระเบียนมีเขตข้อมูลที่ระบุหรือไม่",
        "Documentation.LongDescription": "ระบุว่าระเบียน <code>record</code> มีเขตข้อมูลที่ระบุใน <code>fields</code> หรือไม่โดยการส่งกลับค่าตรรกะ (true หรือ false)\r\n    ค่าเขตข้อมูลหลายค่าสามารถระบุได้โดยใช้รายการเดียว",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "ตรวจสอบว่าระเบียนมีฟิลด์ \"CustomerID\" อยู่หรือไม่",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "ตรวจสอบว่าระเบียนมีฟิลด์ \"CustomerID\" และ \"Address\" อยู่หรือไม่",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "เอาเขตข้อมูลที่ระบุออกจากระเบียนค่าที่ป้อน",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่เอาเขตข้อมูลทั้งหมดที่ระบุในรายการ <code>fields</code> ออกจากค่าที่ป้อน <code>record</code> ถ้าไม่มีเขตข้อมูลที่ระบุ ระบบจะแสดงข้อยกเว้น",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "นำฟิลด์ \"Price\" ออกจากระเบียน",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "นำฟิลด์ \"Price\" และ \"Item\" ออกจากระเบียน",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "นำการเปลี่ยนชื่อจากรายการในฟอร์ม { old, new } ไปใช้",
        "Documentation.LongDescription": "ส่งกลับระเบียนหลังจากเปลี่ยนชื่อเขตข้อมูลในค่าที่ป้อน <code>record</code> เป็นชื่อเขตข้อมูลใหม่ที่ระบุในรายการ <code>renames</code> สำหรับการเปลี่ยนชื่อหลายรายการ สามารถใช้รายการที่ซ้อนกันได้ ({ {old1, new1}, {old2, new2} }",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เปลี่ยนชื่อฟิลด์ \"UnitPrice\" เป็น \"Price\" จากระเบียน",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "เปลี่ยนชื่อฟิลด์ \"UnitPrice\" เป็น \"Price\" และ \"OrderNum\" เป็น \"OrderID\" จากระเบียน",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "จัดลำดับเขตข้อมูลที่ระบุอีกครั้งให้เป็นลำดับใหม่",
        "Documentation.LongDescription": "ส่งกลับระเบียนหลังจากจัดลำดับเขตข้อมูลใน <code>record</code> ใหม่ตามลำดับของเขตข้อมูลที่ระบุในรายการ <code>fieldOrder</code> ค่าเขตข้อมูลจะถูกคงไว้และเขตข้อมูลที่ไม่ได้แสดงรายการใน <code>fieldOrder</code> จะถูกปล่อยไว้ในตำแหน่งเดิม",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เรียงลำดับฟิลด์บางฟิลด์ในระเบียนใหม่",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "ส่งกลับระเบียนที่มีเฉพาะเขตข้อมูลที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่รวมเฉพาะเขตข้อมูลที่ระบุในรายการ <code>fields</code> จากค่าที่ป้อน <code>record</code>",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "เลือกฟิลด์ \"Item\" และ \"Price\" ในระเบียน",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "ส่งกลับระเบียนหลังจากนำการแปลงที่ระบุไปใช้",
        "Documentation.LongDescription": "ส่งกลับระเบียนหลังจากนำการแปลงที่ระบุในรายการ <code>transformOperations</code> ไปใช้กับ <code>record</code>\r\n    คุณสามารถแปลงอย่างน้อยหนึ่งเขตข้อมูลได้ในเวลาที่กำหนด \r\n      <div>ในกรณีของเขตข้อมูลเดียวที่มีการแปลงข้อมูลอยู่ <code>transformOperations</code> จะต้องเป็นรายการที่มีสองข้อมูล รายการแรกใน <code>transformOperations</code> ระบุถึงชื่อเขตข้อมูล และรายการที่สองใน <code>transformOperations</code> ระบุถึงฟังก์ชันที่จะใช้สำหรับการแปลง ตัวอย่างเช่น <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>ในกรณีของหลายเขตข้อมูลที่มีการแปลงข้อมูลอยู่ <code>transformOperations</code> จะต้องเป็นรายการหนึ่งในรายการต่างๆ ซึ่งมีแต่ละรายการภายในเป็นคู่ของชื่อเขตข้อมูลและการดำเนินการแปลง ตัวอย่างเช่น <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "แปลงเขตข้อมูล \"ราคา\" ให้เป็นตัวเลข",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "แปลงเขตข้อมูล \"OrderID\" และ \"Price\" เป็นตัวเลข",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการข้อความตามการเปลี่ยนจากอักขระชนิดหนึ่งไปยังอีกชนิดหนึ่ง พารามิเตอร์ {0} และ {1} อาจเป็นรายการอักขระ หรือฟังก์ชันที่ใช้อักขระ และส่งกลับค่า จริง/เท็จ ได้",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการข้อความตามการเปลี่ยนจากอักขระชนิดหนึ่งไปยังอีกชนิดหนึ่ง พารามิเตอร์ <code>before</code> และ <code>after</code> อาจเป็นรายการอักขระ หรือฟังก์ชันที่ใช้อักขระ และส่งกลับค่า จริง/เท็จ ได้",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าเมื่อใดก็ตามที่มีอักษรตัวพิมพ์ใหญ่หรือตัวพิมพ์เล็กตามด้วยตัวเลข",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "แปลงแบบสอบถาม SQL ที่ให้มาเป็นโค้ด M ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "แปลงคิวรี <code>sql</code> ที่ระบุเป็นโค้ด M ด้วยตัวระบุที่พร้อมใช้งานซึ่งกําหนดโดย <code>environment</code> ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "ส่งกลับคอลัมน์ที่ระบุของข้อมูลจากตารางในรูปแบบรายการ",
        "Documentation.LongDescription": "ส่งกลับคอลัมน์ข้อมูลที่ระบุโดย <code>column</code> จากตาราง <code>table</code> ในรูปแบบรายการ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนค่าจากคอลัมน์ [Name] จากตาราง",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "ส่งกลับรายการพร้อมชื่อของคอลัมน์ซึ่งตรงกันกับชนิดที่ระบุไว้",
        "Documentation.LongDescription": "ส่งกลับรายการพร้อมชื่อของคอลัมน์จากตาราง <code>table</code> ซึ่งตรงกันกับชนิดที่ระบุไว้ใน <code>listOfTypes</code>",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนชื่อคอลัมน์สำหรับชนิด Number.Type จากตาราง",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "แสดงว่าจะให้ระเบียนที่ระบุปรากฏเป็นแถวในตารางหรือไม่",
        "Documentation.LongDescription": "แสดงว่าจะให้ระเบียนที่ระบุ <code>row</code> ปรากฏเป็นแถวใน <code>table</code> หรือไม่\r\n    พารามิเตอร์ที่เลือกได้ <code>equationCriteria</code> อาจถูกระบุเพื่อควบคุมการเปรียบเทียบระหว่างแถวของตาราง",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าตารางมีแถวหรือไม่",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "กำหนดว่าตารางมีแถวหรือไม่",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "กำหนดว่าตารางมีแถวหรือไม่เมื่อเปรียบเทียบเฉพาะกับคอลัมน์ [Name]",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "แสดงว่าจะให้ทุกระเบียนที่ระบุปรากฏเป็นแถวในตารางหรือไม่",
        "Documentation.LongDescription": "แสดงว่าจะให้ทุกระเบียนที่ระบุในรายการระเบียน <code>rows</code> ปรากฏเป็นแถวใน <code>table</code> หรือไม่\r\n    พารามิเตอร์ที่เลือกได้ <code>equationCriteria</code> อาจถูกระบุเพื่อควบคุมการเปรียบเทียบระหว่างแถวของตาราง",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าตารางมีแถวทั้งหมดหรือไม่เมื่อเปรียบเทียบเฉพาะกับคอลัมน์ [CustomerID]",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "กำหนดว่าตารางมีแถวทั้งหมดหรือไม่",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "แสดงว่าจะให้ระเบียนใดๆ ที่ระบุปรากฏเป็นแถวในตารางหรือไม่",
        "Documentation.LongDescription": "แสดงว่าจะให้ระเบียนใดๆ ที่ระบุในรายการระเบียน <code>rows</code> ปรากฏเป็นแถวใน <code>table</code> หรือไม่\r\n    พารามิเตอร์ที่เลือกได้ <code>equationCriteria</code> อาจถูกระบุเพื่อควบคุมการเปรียบเทียบระหว่างแถวของตาราง",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าตาราง <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> มีแถว <code>[a = 1, b = 2]</code> หรือ <code>[a = 3, b = 5]</code> หรือไม่",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "กำหนดว่าตาราง <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> มีแถว <code>[a = 1, b = 3]</code> หรือ <code>[a = 3, b = 5]</code> หรือไม่",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "กำหนดว่าตาราง <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> มีแถว <code>[a = 1, b = 3]</code> หรือ <code>[a = 3, b = 5]</code> หรือไม่โดยเปรียบเทียบเฉพาะคอลัมน์ [a]",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "ระบุว่าตารางมีคอลัมน์ที่ระบุหรือไม่",
        "Documentation.LongDescription": "ระบุว่า <code>table</code> มีคอลัมน์ที่ระบุ <code>columns</code> หรือไม่ ส่งกลับ <code>true</code> ถ้าตารางมีคอลัมน์ดังกล่าว และ <code>false</code> ถ้าไม่มี",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าตารางมีตาราง [Name] หรือไม่",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่าตารางมีคอลัมน์ [Name] และ [PhoneNumber] หรือไม่",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "ระบุว่าทุกแถวในตารางตรงกับเงื่อนไขที่กำหนดหรือไม่",
        "Documentation.LongDescription": "ระบุว่าทุกแถวใน <code>table</code> ตรงกับ <code>condition</code> ที่กำหนดหรือไม่ ส่งกลับ <code>true</code> ถ้าทุกแถวตรงกับเงื่อนไข และ <code>false</code> ถ้าไม่ใช่",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่า ค่าแถวทั้งหมดใน [a] เป็นค่าคี่ในตาราง",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่าค่าแถวทุกค่าเป็น [a = 1, b = 2] ในตาราง <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> หรือไม่",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "ระบุว่าแถวใดๆ ในตารางตรงกับเงื่อนไขที่กำหนดหรือไม่",
        "Documentation.LongDescription": "ระบุว่าแถวใดๆ ใน <code>table</code> ตรงกับ <code>condition</code> ที่กำหนดหรือไม่ ส่งกลับ <code>true</code> ถ้าแถวใดๆ ตรงกับเงื่อนไข และ <code>false</code> ถ้าไม่ใช่",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าค่าแถวใดๆ ในคอลัมน์ [a] เท่ากับในตาราง <code>({[a = 2, b = 4], [a = 6, b = 8]})</code> หรือไม่",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "กำหนดว่าค่าแถวใดๆ เป็น [a = 1, b = 2] ในตาราง <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> หรือไม่",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "ส่งกลับแถวที่ใหญ่ที่สุดหรือค่าเริ่มต้นโดยใช้เกณฑ์ที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับแถวที่ใหญ่ที่สุดใน <code>table</code> โดยกำหนดให้มี <code>comparisonCriteria</code> ถ้าตารางว่างเปล่า จะมีการส่งกลับค่าที่เลือกได้ <code>default</code> ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาแถวที่มีค่ามากที่สุดในคอลัมน์ [a] ในตาราง <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "ค้นหาแถวที่มีค่ามากที่สุดในคอลัมน์ [a] ในตาราง <code>({})</code> ส่งกลับ -1 ถ้าแถวว่างเปล่า",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "ส่งกลับแถวที่เล็กที่สุดหรือค่าเริ่มต้นโดยใช้เกณฑ์ที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับแถวที่เล็กที่สุดใน <code>table</code> โดยกำหนดให้มี <code>comparisonCriteria</code> ถ้าตารางว่างเปล่า จะมีการส่งกลับค่าที่เลือกได้ <code>default</code>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาแถวที่มีค่าต่ำสุดในคอลัมน์ [a] ในตาราง",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "ค้นหาแถวที่มีค่าต่ำสุดในคอลัมน์ [a] ในตาราง ส่งคืนค่า -1 หากว่างเปล่า",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "ส่งกลับตำแหน่งหรือหลายตำแหน่งของแถวภายในตาราง",
        "Documentation.LongDescription": "ส่งคืนตำแหน่งแถวของเหตุการณ์ครั้งแรกของ <code>row</code> ใน <code>table</code> ที่ระบุ ส่งคืน -1 ถ้าไม่พบเหตุการณ์\r\n    <ul>\r\n       <li><code>table</code>: ตารางค่าที่ป้อน</li>\r\n       <li><code>row</code>: แถวในตารางที่จะค้นหาตำแหน่ง</li>\r\n       <li><code>occurrence</code>: <i>[ระบุหรือไม่ก็ได้]</i> ระบุการปรากฏของแถวที่จะส่งกลับ</li>\r\n       <li><code>equationCriteria</code>: <i>[ระบุหรือไม่ก็ได้]</i> ควบคุมการเปรียบเทียบระหว่างแถวของตาราง</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาตำแหน่งการปรากฏครั้งแรกของ [a = 2, b = 4] ในตาราง <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "ค้นหาตำแหน่งการปรากฏครั้งที่สองของ [a = 2, b = 4] ในตาราง <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "ค้นหาตำแหน่งการปรากฏทั้งหมดของ [a = 2, b = 4] ในตาราง <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "ส่งกลับตำแหน่งหรือหลายตำแหน่งของแถวที่ระบุแถวใดแถวหนึ่งภายในตาราง",
        "Documentation.LongDescription": "ส่งคืนตำแหน่งแถวจาก <code>table</code> ของการปรากฏครั้งแรกของรายการ <code>rows</code> ส่งคืน -1 ถ้าไม่พบเหตุการณ์\r\n    <ul>\r\n       <li><code>table</code>: ตารางค่าที่ป้อน</li>\r\n       <li><code>rows</code>: รายการของแถวในตารางที่จะค้นหาตำแหน่ง</li>\r\n       <li><code>occurrence</code>: <i>[ระบุหรือไม่ก็ได้]</i> ระบุการปรากฏของแถวที่จะส่งกลับ</li>\r\n       <li><code>equationCriteria</code>: <i>[ระบุหรือไม่ก็ได้]</i> ควบคุมการเปรียบเทียบระหว่างแถวของตาราง</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาตำแหน่งการปรากฏครั้งแรกของ [a = 2, b = 4] หรือ [a = 6, b = 8] ในตาราง <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "ค้นหาตำแหน่งการปรากฏทั้งหมดของ [a = 2, b = 4] หรือ [a = 6, b = 8] ในตาราง <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "แยกตารางที่ระบุเป็นรายการของตารางโดยใช้ขนาดหน้าที่ระบุ",
        "Documentation.LongDescription": "แยก <code>table</code> ลงในรายการของตารางที่องค์ประกอบแรกของรายการเป็นตารางที่มีแถว <code>pageSize</code> แรกจาก\r\n    ตารางต้นทาง องค์ประกอบถัดไปของรายการคือตารางที่มีแถว <code>pageSize</code> ถัดไปจากตารางต้นทาง และอื่นๆ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แยกตารางของห้าระเบียนลงในตารางที่มีสองระเบียนสำหรับแต่ละรายการ",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "ส่งกลับรายการที่มีแถวจำนวนแรกที่ระบุและแถวที่เหลือ",
        "Documentation.LongDescription": "ส่งกลับรายการที่มีสองตาราง: ตารางที่มีแถว N แรกของ <code>table</code> (ตามที่ระบุโดย <code>count</code>) และตารางที่มีแถวที่เหลือของ <code>table</code>\r\n\r\nถ้าตารางของรายการผลลัพธ์มีการแจกแจงครั้งเดียวและตามลำดับ ฟังก์ชันจะแจกแจง <code>table</code> เพียงครั้งเดียว",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนสองแถวแรกของตารางและแถวที่เหลือของตาราง",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "แปลงแถวของตารางโดยใช้ฟังก์ชันการแปลงที่ระบุ",
        "Documentation.LongDescription": "สร้าง<code>รายการ</code>โดยนำการดำเนินการ <code>transform</code> ไปใช้กับแต่ละแถวใน <code>table</code>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "แปลงแถวของตารางเป็นรายการตัวเลข",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "แปลงแถวของตารางตัวเลขเป็นระเบียนข้อความ",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "ส่งกลับส่วนของ <code>text</code> หลังจาก <code>delimiter</code> ที่ระบุ\r\n    ค่าตัวเลข <code>index</code> ที่เป็นตัวเลือกระบุว่าควรพิจารณาการปรากฏของ <code>delimiter</code> ครั้งใด\r\n    รายการ <code>index</code> ที่เป็นตัวเลือกระบุว่าควรพิจารณาการปรากฏของ <code>delimiter</code> ครั้งใด ตลอดจนระบุว่าการทำดัชนีควรทำตั้งแต่จุดเริ่มต้นหรือจุดสิ้นสุดของการป้อนข้อมูล",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "รับส่วนของ \"111-222-333\" หลังจากเครื่องหมายยัติภังค์ (แรก)",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "รับส่วนของ \"111-222-333\" หลังจากเครื่องหมายยัติภังค์ที่สอง",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "รับส่วนของ \"111-222-333\" หลังจากเครื่องหมายยัติภังค์ที่สองจากตอนท้าย",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "ส่งกลับอักขระในตำแหน่งที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับอักขระในค่าข้อความ <code>text</code> ที่ตำแหน่ง <code>index</code> อักขระแรกในข้อความอยู่ที่ตำแหน่ง 0",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาอักขระที่ตำแหน่ง 4 ในสตริง \"Hello, World\"",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "ส่งกลับส่วนของ <code>text</code> ก่อน <code>delimiter</code> ที่ระบุ\r\n    ค่าตัวเลข <code>index</code> ที่เป็นตัวเลือกระบุว่าควรพิจารณาการปรากฏของ <code>delimiter</code> ครั้งใด\r\n    รายการ <code>index</code> ที่เป็นตัวเลือกระบุว่าควรพิจารณาการปรากฏของ <code>delimiter</code> ครั้งใด ตลอดจนระบุว่าการทำดัชนีควรทำตั้งแต่จุดเริ่มต้นหรือจุดสิ้นสุดของการป้อนข้อมูล",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "รับส่วนของ \"111-222-333\" ก่อนเครื่องหมายยัติภังค์ (แรก)",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "รับส่วนของ \"111-222-333\" ก่อนเครื่องหมายยัติภังค์ที่สอง",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "รับส่วนของ \"111-222-333\" ก่อนเครื่องหมายยัติภังค์ที่สองจากตอนท้าย",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "ส่งกลับว่าข้อความมีสตริงย่อยหรือไม่",
        "Documentation.LongDescription": "ตรวจหาว่า <code>text</code> มีค่า <code>substring</code> หรือไม่ ส่งกลับเป็น true ถ้าพบค่า ฟังก์ชันนี้ไม่สนับสนุนอักขระตัวแทนหรือนิพจน์ทั่วไป\r\n      <br>\r\n      <br>\r\n      อาร์กิวเมนต์เพิ่มเติม <code>comparer</code> สามารถนำไปใช้เพื่อระบุการเปรียบเทียบการรับรู้ที่ตรงตามตัวพิมพ์ใหญ่-เล็ก หรือทางวัฒนธรรมและตําแหน่งที่ตั้ง\r\n      ตัวเปรียบเทียบที่มีอยู่แล้วภายในต่อไปนี้พร้อมใช้งานในภาษาสูตร:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: ใช้เพื่อดําเนินการเปรียบเทียบลําดับที่ตรงตามตัวพิมพ์ใหญ่-เล็ก</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: ใช้เพื่อดําเนินการเปรียบเทียบลําดับที่ไม่ตรงตามตัวพิมพ์ใหญ่-เล็ก</li>\r\n        <li> <code>Comparer.FromCulture</code>: ใช้เพื่อดําเนินการเปรียบเทียบการรับรู้ทางวัฒนธรรม</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาว่าข้อความ \"Hello World\" มี \"Hello\" หรือไม่",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่าข้อความ \"Hello World\" มี \"hello\" หรือไม่",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "ค้นหาว่าข้อความ \"สวัสดี ทุกท่าน\" มี \"สวัสดี\" หรือไม่ โดยใช้ตัวเปรียบเทียบที่ไม่ตรงตามตัวพิมพ์ใหญ่-เล็ก",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "ส่งกลับอักขระสุดท้ายของข้อความ",
        "Documentation.LongDescription": "ส่งกลับค่า <code>text</code> ที่เป็นอักขระ <code>count</code> สุดท้ายของค่า <code>text</code> <code>text</code>",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "รับ 5 อักขระล่าสุดของข้อความ \"Hello, World\"",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "ระบุว่าข้อความสิ้นสุดด้วยค่าที่ระบุหรือไม่",
        "Documentation.LongDescription": "ระบุว่าข้อความที่ให้ไว้ <code>text</code> ลงท้ายด้วยค่าที่ระบุไว้ <code>substring</code> หรือไม่ ค่าที่บ่งชี้จะต้องตรงตามตัวพิมพ์ใหญ่-เล็ก\r\n\r\n      <div>\r\n        <code>comparer</code> คือ <code>ตัวเปรียบเทียบ</code> ซึ่งใช้สำหรับควบคุมการเปรียบเทียบ สามารถใช้ตัวเปรียบเทียบในการเปรียบเทียบแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็กหรือตามวัฒนธรรมและตามการรับรู้ภาษา\r\n      </div>\r\n      <div>\r\n        สามารถเลือกใช้งานรุ่นในตัวเปรียบเทียบดังต่อไปนี้ในภาษาสำหรับสูตร:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: ใช้สำหรับการเปรียบเทียบตามเลขลำดับที่ตรงกัน</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: ใช้สำหรับการเปรียบเทียบเลขลำดับแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็ก</li>\r\n        <li> <code>Comparer.FromCulture</code>: ใช้สำหรับการเปรียบเทียบตามการรับรู้วัฒนธรรม</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "ตรวจสอบว่า \"Hello, World\" สิ้นสุดด้วย \"world\" หรือไม่",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "ตรวจสอบว่า \"Hello, World\" สิ้นสุดด้วย \"World\" หรือไม่",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "ส่งคืนข้อความที่มีรูปแบบจากสตริงรูปแบบและอาร์กิวเมนต์",
        "Documentation.LongDescription": "ส่งคืนข้อความที่จัดรูปแบบซึ่งสร้างโดยการนำ <code>arguments</code> ไปใช้จากรายการหรือระเบียนไปยังสตริงรูปแบบ <code>formatString</code> อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "จัดรูปแบบรายการตัวเลข",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "จัดรูปแบบประเภทข้อมูลอื่นๆ จากบันทึกตามวัฒนธรรมภาษาอังกฤษแบบอเมริกา",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "ส่งคืนสตริงย่อยตามความยาวสูงสุดที่ระบุไว้",
        "Documentation.LongDescription": "ส่งคืนตัวอักขระ <code>count</code> หรือเมื่อสิ้นสุด <code>text</code> ที่ออฟเซ็ต <code>start</code>",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาสตริงย่อยจากข้อความ \"Hello World\" เริ่มต้นที่ดัชนี 6 เป็นจำนวน 5 ตัวอักขระ",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "ค้นหาสตริงย่อยจากข้อความ \"Hello World\" เริ่มต้นที่ดัชนี 6 ไปจนสุด",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "ส่งกลับข้อความของความยาวที่ระบุโดยการเติมช่องว่างภายในท้ายข้อความที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>text</code> ที่มีการเติมช่องว่างภายในไปที่ความยาว <code>count</code> โดยการแทรกช่องว่างท้ายค่าข้อความ <code>text</code> \r\n    อักขระที่เลือกได้ <code>character</code> สามารถใช้เพื่อระบุอักขระที่ใช้สำหรับการเติมช่องว่างภายใน อักขระเริ่มต้นในการเติมช่องว่างภายในได้แก่ช่องว่าง",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เติมช่องว่างภายในท้ายค่าข้อความเพื่อให้มีความยาว 10 อักขระ",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "เติมช่องว่างภายในท้ายค่าข้อความด้วย \"|\" เพื่อให้มีความยาว 10 อักขระ",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "ส่งกลับข้อความของความยาวที่ระบุโดยการเติมช่องว่างภายในที่จุดเริ่มต้นของข้อความที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>text</code> ที่มีการเติมช่องว่างภายในไปที่ความยาว <code>count</code> โดยการแทรกช่องว่างที่จุดเริ่มต้นของค่าข้อความ <code>text</code> \r\n    อักขระที่เลือกได้ <code>character</code> สามารถใช้เพื่อระบุอักขระที่ใช้สำหรับการเติมช่องว่างภายใน อักขระเริ่มต้นในการเติมช่องว่างภายในได้แก่ช่องว่าง",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เติมช่องว่างภายในที่จุดเริ่มต้นของค่าข้อความเพื่อให้มีความยาว 10 อักขระ",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "เติมช่องว่างภายในที่จุดเริ่มต้นของค่าข้อความด้วย \"|\" เพื่อให้มีความยาว 10 อักขระ",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "ส่งกลับตำแหน่งแรกของค่า (ส่งกลับ -1 ถ้าไม่พบ)",
        "Documentation.LongDescription": "ส่งกลับตำแหน่งของเหตุการณ์ที่ระบุของค่าข้อความ <code>substring</code> ซึ่งพบใน <code>text</code>\r\n    อาจมีการใช้พารามิเตอร์ตัวเลือก <code>occurrence</code> เพื่อระบุตำแหน่งเหตุการณ์เพื่อส่งกลับ (เหตุการณ์แรกตามค่าเริ่มต้น)\r\n    ส่งกลับ -1 ถ้าไม่พบ <code>substring</code>\r\n\r\n      <div>\r\n        <code>comparer</code> เป็น <code>ตัวเปรียบเทียบ</code> ซึ่งใช้สำหรับควบคุมการเปรียบเทียบ สามารถใช้ตัวเปรียบเทียบในการเปรียบเทียบแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็กหรือตามวัฒนธรรมและตามการรับรู้ภาษา\r\n      </div>\r\n      <div>\r\n        สามารถเลือกใช้งานรุ่นในตัวเปรียบเทียบดังต่อไปนี้ในภาษาสำหรับสูตร:\r\n      </div>\r\n      <ul>\r\n        <li><code>ตัวเปรียบเทียบ.Ordinal</code> : ใช้สำหรับการเปรียบเทียบตามเลขลำดับที่ตรงกัน</li>\r\n        <li><code>ตัวเปรียบเทียบ.เลขลำดับละเว้นตัวพิมพ์ใหญ่-เล็ก</code>: ใช้สำหรับการเปรียบเทียบเลขลำดับแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็ก</li>\r\n        <li> <code>ตัวเปรียบเทียบ.FromCulture</code>: ใช้สำหรับการเปรียบเทียบตามวัฒนธรรม</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "รับตำแหน่งการปรากฏครั้งแรกของ \"World\" ในข้อความ \"Hello, World! Hello, World!\"",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "รับตำแหน่งการปรากฏครั้งสุดท้ายของ \"World\" ใน \"Hello, World! Hello, World!\"",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "ส่งกลับตำแหน่งแรกในค่าข้อความของอักขระใดๆ ในรายการ (ส่งกลับ -1 ถ้าไม่พบ)",
        "Documentation.LongDescription": "ส่งกลับตำแหน่งแรกของอักขระใดๆ ในรายการ <code>characters</code> ที่พบใน<code>text</code>.\n    พารามิเตอร์ที่เลือกได้ <code>occurrence</code> อาจถูกใช้เพื่อระบุตำแหน่งเหตุการณ์ที่จะส่งกลับ",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาตำแหน่งแรกของ \"W\" หรือ \"H\" ในข้อความ \"Hello, World!\"",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "ค้นหาตําแหน่งทั้งหมดของ \"W\" หรือ \"H\" ในข้อความ \"Hello, World!\"",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "ส่งกลับสตริงย่อยที่พบในออฟเซต",
        "Documentation.LongDescription": "ส่งคืนสตริงย่อยจากข้อความ <code>text</code> ที่พบในออฟเซต <code>offset</code> \r\n    โดยสามารถรวมพารามิเตอร์ที่เลือกได้ <code>count</code> เพื่อระบุจำนวนอักขระที่จะส่งคืน จะมีการแสดงข้อผิดพลาดหากมีตัวอักขระไม่เพียงพอ",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาสตริงย่อยจากข้อความ \"Hello World\" โดยเริ่มต้นที่ดัชนี 6",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "ค้นหาสตริงย่อยจากข้อความ \"Hello World Hello\" เริ่มต้นที่ดัชนี 6 โดยขยายออกไป 5 อักขระ",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "เอาการปรากฏทั้งหมดออกสำหรับอักขระที่กำหนดให้หรือรายการอักขระจากค่าข้อความที่ป้อนเข้า",
        "Documentation.LongDescription": "ส่งกลับสำเนาของค่าข้อความ <code>text</code> ที่เอาอักขระทั้งหมดออกจาก <code>removeChars</code>  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "เอาอักขระ , และ ; ออกจากค่าข้อความ",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "เอาจำนวนอักขระออกโดยเริ่มต้นที่ออฟเซตที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับสำเนาของค่าข้อความ <code>text</code> ที่เอาอักขระทั้งหมดออกจากตำแหน่ง <code>offset</code>\r\n    พารามิเตอร์ที่เลือกได้ <code>count</code> สามารถใช้เพื่อระบุจำนวนอักขระที่จะเอาออก ค่าเริ่มต้นของ <code>count</code> คือ 1 ค่าตำแหน่งเริ่มต้นที่ 0",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "เอาอักขระ 1 ออกจากค่าข้อความ \"ABEFC\" ที่ตำแหน่ง 2",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "เอาสองอักขระออกจากค่าข้อความ \"ABEFC\" โดยเริ่มต้นที่ตำแหน่ง 2",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "ส่งกลับค่าข้อความที่เรียบเรียงของข้อความป้อนเข้าที่ทำซ้ำตามจำนวนครั้งที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับค่าข้อความที่เรียบเรียงของข้อความป้อนเข้า <code>text</code> ที่ทำซ้ำ <code>count</code> ครั้ง",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "ทำซ้ำข้อความ \"a\" ห้าครั้ง",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "ทำซ้ำข้อความ \"helloworld\" สามครั้ง",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "เลือกการปรากฏทั้งหมดสำหรับอักขระหรือรายการอักขระที่กำหนดให้จากค่าข้อความที่ป้อนเข้า",
        "Documentation.LongDescription": "ส่งกลับสำเนาของค่าข้อความ <code>text</code> ที่เอาอักขระทั้งหมดที่ไม่อยู่ใน <code>selectChars</code> ออก",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "เลือกอักขระทั้งหมดในช่วงของ 'a' ถึง 'z' จากค่าข้อความ",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "แยกข้อความออกเป็นรายการค่าข้อความตามตัวคั่นที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับรายการค่าข้อความที่เป็นผลลัพธ์จากการแยกค่าข้อความ <code>text</code> ตามตัวคั่นที่ระบุ <code>separator</code>",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจากค่าข้อความ \"Name|Address|PhoneNumber\" ที่คั่นด้วย \"|\"",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "ส่งกลับรายการค่าข้อความที่แยกบนอักขระใดๆ ในตัวคั่น",
        "Documentation.LongDescription": "ส่งกลับรายการค่าข้อความที่เป็นผลลัพธ์จากการแยกค่าข้อความ <code>text</code> ตามอักขระใดๆ ในตัวคั่นที่ระบุ <code>separators</code>",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจากค่าข้อความ \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\"",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "ส่งกลับจุดเริ่มต้นของข้อความ",
        "Documentation.LongDescription": "ส่งกลับอักขระ <code>count</code> ตัวแรกของ <code>text</code> เป็นค่าข้อความ",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "รับอักขระ 5 ตัวแรกของ \"Hello, World\"",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "ระบุว่าข้อความเริ่มต้นด้วยค่าที่ระบุหรือไม่",
        "Documentation.LongDescription": "ส่งคืน จริง หากค่าข้อความ <code>text</code> เริ่มต้นด้วยค่าข้อความ <code>substring</code>\r\n      <ul>\r\n        <li><code>text</code>: <i></i> ค่า <code>ข้อความ</code> ที่จะใช้ในการค้นหา</li>\r\n        <li><code>substring</code>: <i></i> ค่า <code>ข้อความ</code> ซึ่งเป็นสตริงย่อยที่จะใช้ในการค้นหาใน <code>substring</code></li>\r\n        <li><code>comparer</code>: <i>[ระบุหรือไม่ก็ได้]</i> <code>ตัวเปรียบเทียบ</code> ซึ่งใช้สำหรับควบคุมการเปรียบเทียบ ตัวอย่างเช่น อาจใช้ <code>ตัวเปรียบเทียบ.เลขลำดับละเว้นตัวพิมพ์ใหญ่-เล็ก</code> ในการค้นหาแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็ก</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> คือ <code>ตัวเปรียบเทียบ</code> ซึ่งใช้สำหรับควบคุมการเปรียบเทียบ สามารถใช้ตัวเปรียบเทียบในการเปรียบเทียบแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็กหรือตามวัฒนธรรมและตามที่กำหนดไว้ในท้องถิ่น\r\n      </div>\r\n      <div>\r\n        สามารถเลือกใช้งานตัวเปรียบเทียบที่มีในตัวดังต่อไปนี้ในภาษาสำหรับสูตร:\r\n      </div>\r\n      <ul>\r\n        <li><code>ตัวเปรียบเทียบ.เลขลำดับ</code>: ใช้สำหรับการเปรียบเทียบตามเลขลำดับที่ตรงกัน</li>\r\n        <li><code>ตัวเปรียบเทียบ.เลขลำดับละเว้นตัวพิมพ์ใหญ่-เล็ก</code>: ใช้สำหรับการเปรียบเทียบเลขลำดับแบบไม่เทียบตรงตามตัวพิมพ์ใหญ่-เล็ก</li>\r\n        <li> <code>ตัวเปรียบเทียบ.จากวัฒนธรรม</code>: ใช้สำหรับการเปรียบเทียบตามวัฒนธรรม</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "ตรวจสอบว่าข้อความ \"Hello, World\" ขึ้นต้นด้วยข้อความ \"hello\" หรือไม่",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "ตรวจสอบว่าข้อความ \"Hello, World\" ขึ้นต้นด้วยข้อความ \"Hello\" หรือไม่",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "ส่งกลับชนิดซึ่งแสดงฟังก์ชันที่มีพารามิเตอร์เฉพาะและข้อจำกัดชนิดการส่งกลับ",
        "Documentation.LongDescription": "สร้าง <code>function type</code> จาก <code>signature</code> ระเบียนของ <code>ReturnType</code>และ <code>Parameters</code> และ <code>min</code> ซึ่งเป็นจำนวนอาร์กิวเมนต์น้อยที่สุดที่ต้องการเพื่อจะเรียกใช้ฟังก์ชันนี้",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "สร้างชนิดสำหรับฟังก์ชันที่ใช้พารามิเตอร์ตัวเลขชื่อ X และส่งกลับตัวเลข",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "ส่งกลับชนิดที่แสดงระเบียนซึ่งมีข้อจำกัดชนิดเฉพาะเกี่ยวกับฟิลด์",
        "Documentation.LongDescription": "ส่งกลับชนิดที่แสดงระเบียนซึ่งมีข้อจำกัดชนิดเฉพาะเกี่ยวกับฟิลด์",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "สร้างชนิดตารางแบบไดนามิก",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "กําหนดว่าค่าของชนิดแรกเข้ากันได้กับชนิดที่สองเสมอหรือไม่",
        "Documentation.LongDescription": "กําหนดว่าค่าของ <code>type1</code> เข้ากันได้กับ <code>type2</code> เสมอหรือไม่",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "กําหนดว่าค่าของชนิดตัวเลขสามารถถือว่าเป็นชนิดใดๆ ได้เสมอหรือไม่",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "กําหนดว่าค่าของชนิดใดๆ สามารถถือว่าเป็นหมายเลขชนิดได้เสมอหรือไม่",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "เปลี่ยนข้อเท็จจริงของชนิด",
        "Documentation.LongDescription": "เปลี่ยนแปลงข้อเท็จจริงของ <code>type</code> โดยมีข้อเท็จจริงอยู่ในระเบียน <code>facets</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "ส่งกลับชนิดตารางใหม่ซึ่งแทนที่คีย์ทั้งหมดโดยรายการคีย์ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับชนิดตารางใหม่ด้วยคีย์ทั้งหมดที่ถูกแทนที่ด้วยรายการคีย์ที่ระบุ<br>\r\n    <br>\r\n    แต่ละคีย์จะถูกกําหนดโดยใช้ระเบียนในฟอร์มต่อไปนี้:\r\n    <ul>\r\n      <li>\r\n        <code>คอลัมน์</code>: รายการของชื่อคอลัมน์ที่กําหนดคีย์\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> ถ้าคีย์เป็นคีย์หลักของตาราง มิฉะนั้น <code>false</code>\r\n      </li>\r\n    </ul>\r\n    รายการของคีย์ที่ระบุจะถูกตรวจสอบความถูกต้องเพื่อให้แน่ใจว่าไม่มีการกําหนดคีย์หลักมากกว่าหนึ่งคีย์ และมีชื่อคอลัมน์คีย์ทั้งหมดอยู่ในชนิดตาราง\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ข้อมูลคีย์ในชนิดตาราง",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "ล้างข้อมูลคีย์ที่กําหนดไว้ก่อนหน้านี้ในชนิดตาราง",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "ส่งกลับชนิดของคอลัมน์ในตาราง",
        "Documentation.LongDescription": "ส่งกลับชนิดของคอลัมน์ <code>column</code> ในชนิดตาราง <code>tableType</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "ส่งกลับ URI แบบสัมบูรณ์ที่ได้จากการรวม URI พื้นฐานของค่าที่ป้อนและ URI ที่เกี่ยวข้อง",
        "Documentation.LongDescription": "ส่งกลับ URI แบบสัมบูรณ์ที่ได้จากการรวมค่าที่ป้อน <code>baseUri</code> และ <code>relativeUri</code>",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "ส่งกลับผลรวมของสองค่า",
        "Documentation.LongDescription": "ส่งกลับผลรวมของ <code>value1</code> และ <code>value2</code> พารามิเตอร์ <code>precision</code> ที่เลือกได้อาจถูกระบุไว้ ตามค่าเริ่มต้น จะมีการใช้ <code>Precision.Double</code>",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "ส่งกลับค่าถ้าเข้ากันได้กับชนิดที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับค่าถ้าเข้ากันได้กับชนิดที่ระบุ ซึ่งเทียบเท่ากับตัวดําเนินการ \"as\" ใน M โดยมีข้อยกเว้นที่สามารถยอมรับการอ้างอิงชนิดตัวระบุได้ เช่น Number.Type",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "แปลงตัวเลขเป็นตัวเลข",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "พยายามแปลงค่าข้อความเป็นตัวเลข",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "ส่งกลับ -1, 0 หรือ 1 โดยขึ้นอยู่กับว่าค่าแรกน้อยกว่า เท่ากับ หรือมากกว่าค่าที่สอง",
        "Documentation.LongDescription": "ส่งกลับ -1, 0 หรือ 1 โดยขึ้นอยู่กับว่าค่าแรกน้อยกว่า เท่ากับ หรือมากกว่าค่าที่สอง",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "ส่งกลับผลลัพธ์ของการหารค่าแรกด้วยค่าที่สอง",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการหาร <code>value1</code> ด้วย <code>value2</code> พารามิเตอร์ <code>precision</code> ที่เลือกได้อาจถูกระบุไว้ ตามค่าเริ่มต้น จะมีการใช้ <code>Precision.Double</code>",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "ส่งกลับว่าค่าสองค่าเท่ากันหรือไม่",
        "Documentation.LongDescription": "ส่งกลับ True ถ้าค่า <code>value1</code> เท่ากับค่า <code>value2</code> และ False ถ้าไม่ใช่",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "กําหนดว่าค่าสามารถเข้ากันได้กับชนิดที่ระบุหรือไม่",
        "Documentation.LongDescription": "กําหนดว่าค่าสามารถเข้ากันได้กับชนิดที่ระบุหรือไม่ ซึ่งเทียบเท่ากับตัวดําเนินการ \"is\" ใน M โดยมีข้อยกเว้นว่าสามารถยอมรับการอ้างอิงชนิดตัวระบุได้ เช่น Number.Type",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "เปรียบเทียบสองวิธีในการกำหนดว่าตัวเลขเข้ากันได้กับหมายเลขชนิดหรือไม่",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "ส่งกลับผลคูณของสองค่า",
        "Documentation.LongDescription": "ส่งกลับผลคูณของการคูณ <code>value1</code> ด้วย <code>value2</code> พารามิเตอร์ <code>precision</code> ที่เลือกได้อาจถูกระบุไว้ ตามค่าเริ่มต้น จะมีการใช้ <code>Precision.Double</code>",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "ประเมินคิวรีเทียบกับเป้าหมาย",
        "Documentation.LongDescription": "<p>ประเมิน <code>query</code> กับ <code>target</code> โดยใช้พารามิเตอร์ที่ระบุใน <code>parameters</code> และตัวเลือกที่ระบุใน <code>options</code></p>\r\n<p>ผลลัพธ์ของคิวรีถูกกําหนดโดย <code>target</code></p>\r\n<p><code>target</code> มีบริบทสําหรับการดําเนินการที่อธิบายโดย <code>query</code></p>\r\n<p><code>query</code> อธิบายคิวรีที่จะดําเนินการกับ <code>target</code><code>query</code> จะแสดงในลักษณะเฉพาะกับ <code>target</code> (ตัวอย่างเช่น คําสั่ง T-SQL)</p>\r\n<p>ค่า <code>parameters</code> เพิ่มเติมอาจมีรายการหรือระเบียนตามความเหมาะสมในการใส่ค่าพารามิเตอร์ที่คาดหวังโดย <code>query</code></p>\r\n<p> ระเบียน <code>options</code> เพิ่มเติมอาจมีตัวเลือกที่มีผลต่อลักษณะการทํางานของการประเมินผลของ <code>query</code> กับ <code>target</code> ตัวเลือกเหล่านี้มีไว้สําหรับ <code>target</code></p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "ส่งกลับว่าค่าสองค่าเท่ากันหรือไม่",
        "Documentation.LongDescription": "ส่งกลับ null ถ้าอาร์กิวเมนต์ใดอาร์กิวเมนต์หนึ่งของ '<code>value1</code>', '<code>value2</code>' เป็น null มิฉะนั้นให้ส่งค่าที่เทียบเท่า Value.Equals",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "แทนที่ข้อมูล Metadata ของค่าที่ป้อน",
        "Documentation.LongDescription": "แทนที่ข้อมูล Metadata ของค่าที่ป้อน",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "แทนที่ชนิดของค่า",
        "Documentation.LongDescription": "แทนที่ชนิดของ <code>value</code> ด้วย <code>type</code> ที่ระบุ",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "แทนที่ชนิดเริ่มต้นของระเบียนด้วยชนิดที่เฉพาะเจาะจงมากขึ้น",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "ส่งกลับผลต่างของสองค่า",
        "Documentation.LongDescription": "ส่งกลับผลต่างของ <code>value1</code> และ <code>value2</code> พารามิเตอร์ <code>precision</code> ที่เลือกได้อาจถูกระบุไว้ ตามค่าเริ่มต้น จะมีการใช้ <code>Precision.Double</code>",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "สร้างการดำเนินการที่เมื่อเรียกใช้งาน จะคืนค่าผลลัพธ์ของการดำเนินการตามคำขอ HTTP เป็นค่าไบนารี",
        "Documentation.LongDescription": "สร้างการดําเนินการที่เมื่อเรียกใช้จะส่งกลับผลลัพธ์ของการดําเนินการคําขอ <code>method</code> กับ <code>url</code>โดยใช้ HTTP เป็นค่าไบนารี\r\n    พารามิเตอร์ระเบียนเพิ่มเติม <code>options</code> อาจมีให้เพื่อระบุคุณสมบัติเพิ่มเติม ระเบียนสามารถมีเขตข้อมูลต่อไปนี้:\r\n    <ul>\r\n<li><code>Query</code> : เพิ่มพารามิเตอร์คิวรีด้วยโปรแกรมลงใน URL โดยไม่ต้องกังวลเกี่ยวกับอักขระหลีก</li>\r\n<li><code>ApiKeyName</code> : ถ้าไซต์เป้าหมายมีการระบุคีย์ API ไว้ จะสามารถใช้พารามิเตอร์นี้เพื่อระบุชื่อ (ไม่ใช่ค่า) ของพารามิเตอร์คีย์ที่จะต้องใช้ใน URL จะมีการแสดงค่าคีย์จริงไว้ในข้อมูลประจำตัว</li>\r\n<li><code>Headers</code> : การระบุค่านี้เป็นระเบียนจะใส่ส่วนหัวเพิ่มเติมให้กับคำขอ HTTP</li>\r\n<li><code>Timeout</code> : การระบุค่านี้เป็นระยะเวลาจะเปลี่ยนแปลงการหมดเวลาสำหรับคำขอ HTTP ค่าเริ่มต้นคือ 100 วินาที</li>\r\n<li><code>ExcludedFromCacheKey</code> : การระบุค่านี้เป็นรายการจะแยกคีย์ส่วนหัว HTTP เหล่านี้ออกจากการเป็นส่วนหนึ่งของการคำนวณสำหรับการแคชข้อมูล</li>\r\n<li><code>IsRetry</code> : การระบุค่าตรรกะนี้เป็นจริงจะละเว้นการตอบสนองที่มีอยู่ในแคชเมื่อดึงข้อมูล</li>\r\n<li><code>ManualStatusHandling</code> : การระบุค่านี้เป็นรายการจะป้องกันไม่ให้มีการจัดการในตัวสำหรับคำขอ HTTP ที่การตอบสนองมีหนึ่งในรหัสสถานะเหล่านี้</li>\r\n<li><code>RelativePath</code> : การระบุค่านี้เป็นข้อความจะผนวกเข้ากับ URL ฐานก่อนทำการร้องขอ</li>\r\n<li><code>Content</code> : การระบุค่านี้จะทำให้เนื้อหากลายเป็นเนื้อความของคำขอ HTTP</li>\r\n</ul>\r\n\r\n    <br>\r\n    โปรดทราบว่าฟังก์ชันนี้ถูกปิดใช้งานในบริบทส่วนใหญ่ ให้พิจารณาใช้ Web.Contents หรือ Web.Headers แทน\r\n    ",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "ดําเนินการคำขอ GET กับ Bing",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "ป้อน URL ของจุดสิ้นสุด Azure Enterprise REST API ที่เชื่อมโยงกับการลงทะเบียนของคุณ",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "คืนค่าผลลัพธ์ไบนารีของการโทรไปยัง url ที่ระบุสำหรับ Azure Enterprise API",
        "Documentation.Examples": [
          {
            "Description": "ใช้ฟังก์ชัน AzureEnterprise.Contents ในการคืนค่าผลลัพธ์ของรายงานที่ระบุ",
            "Code": "        อนุญาต\r\n            ของรายงาน = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            การข้ามแบบ = Table.Skip(report, 2),\r\n            สปลิต =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            เลื่อนตำแหน่ง = Table.PromoteHeaders(split)\r\n        ใน\r\n            เลื่อนตำแหน่ง",
            "Result": "ตาราง"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "ส่งกลับเนื้อหาของ blob ที่ระบุจากชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของ blob ที่ URL <code>url</code> จาก ชุดเก็บข้อมูลประจำตัวที่จัดเก็บ Azure อาจมีการระบุ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>BlockSize</code> : จำนวนไบต์ที่อ่านก่อนรอผู้ใช้ข้อมูล ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>RequestSize</code> : จำนวนไบต์ที่พยายามอ่านในการร้องขอทาง HTTP แบบเดี่ยวไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>ConcurrentRequests</code> : ตัวเลือก ConcurrentRequests สนับสนุนการดาวน์โหลดข้อมูลที่รวดเร็วยิ่งขึ้น โดยระบุจำนวนคำขอที่จะดำเนินการพร้อมกันโดยใช้งานหน่วยความจำ หน่วยความจำที่จำเป็นคือ (ConcurrentRequest * RequestSize) ค่าเริ่มต้นคือ 16</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "ส่งกลับเนื้อหาของไฟล์ที่ระบุจากระบบไฟล์ Azure Data Lake Storage",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของไฟล์ที่ URL <code>url</code> จากระบบไฟล์ Azure Data Lake Storage อาจมีการระบุ <code>options</code> เพื่อควบคุมตัวเลือกต่อไปนี้:\r\n    <ul>\r\n<li><code>BlockSize</code> : จำนวนไบต์ที่อ่านก่อนรอผู้ใช้ข้อมูล ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>RequestSize</code> : จำนวนไบต์ที่พยายามอ่านในการร้องขอทาง HTTP แบบเดี่ยวไปยังเซิร์ฟเวอร์ ค่าเริ่มต้นคือ 4 MB</li>\r\n<li><code>ConcurrentRequests</code> : ตัวเลือก ConcurrentRequests สนับสนุนการดาวน์โหลดข้อมูลที่รวดเร็วยิ่งขึ้น โดยระบุจำนวนคำขอที่จะดำเนินการพร้อมกันโดยใช้งานหน่วยความจำ หน่วยความจำที่จำเป็นคือ (ConcurrentRequest * RequestSize) ค่าเริ่มต้นคือ 16</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "ส่งกลับความยาวโดยประมาณของไบนารี",
        "Documentation.LongDescription": "ส่งกลับความยาวโดยประมาณของ <code>binary</code> หรือข้อผิดพลาด หากแหล่งข้อมูลไม่สนับสนุนความยาวโดยประมาณ",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "รับความยาวโดยประมาณของค่าไบนารี",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "บัฟเฟอร์ค่าไบนารีในหน่วยความจำ",
        "Documentation.LongDescription": "บัฟเฟอร์ค่าไบนารีในหน่วยความจำ  ผลลัพธ์ของการเรียกนี้คือค่าไบนารีที่เสถียร ซึ่งหมายความว่าผลลัพธ์ดังกล่าวจะมีความยาวเชิงกำหนดและลำดับของไบต์",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "สร้างค่าไบนารีรุ่นที่เสถียร",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "รวมรายการไบนารีลงในไบนารีเดียว",
        "Documentation.LongDescription": "รวมรายการไบนารีลงในไบนารีเดียว",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "สร้างไบนารีจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>binary</code> จาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดให้เป็น <code>null</code> <code>Binary.From</code> จะส่งกลับ <code>null</code>  ถ้า <code>value</code> ที่กำหนดให้เป็น <code>binary</code> จะมีการส่งกลับ <code>value</code> ค่าของชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>binary</code> ได้:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>binary</code> จากการแสดงข้อความ ดู <code>Binary.FromText</code> สำหรับรายละเอียด</li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่น ระบบจะส่งกลับข้อผิดพลาด",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>binary</code> ของ <code>\"1011\"</code>",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "แปลงรายการจำนวนเป็นค่าไบนารี",
        "Documentation.LongDescription": "แปลงรายการจำนวนเป็นค่าไบนารี",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "ถอดรหัสข้อมูลจากรูปแบบข้อความเป็นไบนารี",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์การแปลงค่าข้อความ <code>text</code> เป็นไบนารี (รายการของ <code>ตัวเลข</code>) <code>encoding</code> อาจถูกระบุเพื่อกำหนดการเข้ารหัสที่ใช้ในค่าข้อความ\r\n      อาจใช้ค่า <code>การเข้ารหัสไบนารี</code> ต่อไปนี้สำหรับ <code>encoding</code>.\r\n      <ul>\r\n        <li><code>การเข้ารหัสไบนารี.ฐาน64</code>: การเข้ารหัสแบบฐาน 64</li>\r\n        <li><code>การเข้ารหัสไบนารี.Hex</code>: การเข้ารหัส Hex</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "ถอดรหัส \"1011\" ในไบนารี",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "ถอดรหัส \"1011\" ในไบนารีด้วยการเข้ารหัส Hex",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "อ่านสตรีมแบบไบนารีและลองกำหนดชนิดเนื้อหาและข้อมูลรูปแบบของสตรีม",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มีเขตข้อมูล Content.Type ที่ประกอบด้วยชนิด MIME ที่อนุมาน\r\n    ถ้าชนิดเนื้อหาที่อนุมานเป็นข้อความ/* และมีการตรวจพบโค้ดเพจที่เข้ารหัส และนอกจากนี้ส่งกลับเขตข้อมูล Content.Encoding ที่ประกอบด้วยการเข้ารหัสของสตรีม\r\n    ถ้าชนิดเนื้อหาที่อนุมานเป็นข้อความ/csv และรูปแบบถูกคั่น นอกจากนี้ยังส่งกลับเขตข้อมูล Csv.PotentialDelimiter ซึ่งประกอบด้วยตารางสำหรับการวิเคราะห์ของตัวคั่นที่เป็นไปได้\r\n    ถ้าชนิดเนื้อหาที่อนุมานเป็นข้อความ/csv และรูปแบบมีความกว้างคงที่ นอกจากนี้ยังส่งกลับเขตข้อมูล Csv.PotentialPositions ที่ประกอบด้วยรายการสำหรับการวิเคราะห์ของตำแหน่งที่ตั้งคอลัมน์ที่มีความกว้างคงที่ที่เป็นไปได้",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "ส่งกลับจำนวนของอักขระ",
        "Documentation.LongDescription": "ส่งกลับจำนวนของอักขระ",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "แปลงค่าไบนารีเป็นรายการจำนวน",
        "Documentation.LongDescription": "แปลงค่าไบนารีเป็นรายการจำนวน",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "เข้ารหัสข้อมูลไบนารีเป็นรูปแบบข้อความ",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์การแปลงรายการไบนารีของตัวเลข <code>binary</code> เป็นค่าข้อความ เพิ่มเติม <code>encoding</code> อาจถูกระบุเพื่อกำหนดการเข้ารหัสที่ใช้ในค่าข้อความที่ผลิต\r\n      อาจใช้ค่า<code>การเข้ารหัสไบนารี</code> ต่อไปนี้สำหรับ <code>encoding</code>\r\n      <ul>\r\n        <li><code>การเข้ารหัสไบนารี.ฐาน64</code>: การเข้ารหัสแบบฐาน 64</li>\r\n        <li><code>การเข้ารหัสไบนารี.Hex</code>: การเข้ารหัส Hex</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "สร้างระเบียนข้อผิดพลาดที่ปรับเปลี่ยนซึ่งจะไม่ทริกเกอร์การย้อนกลับเมื่อส่งออกโดยตัวจัดการที่กําหนดในมุมมอง (ผ่าน Binary.View)",
        "Documentation.LongDescription": "สร้างระเบียนข้อผิดพลาดที่ปรับเปลี่ยนจาก <code>errorRecord</code> ซึ่งจะไม่ทริกเกอร์การย้อนกลับเมื่อส่งออกโดยตัวจัดการที่กําหนดในมุมมอง (ผ่าน Binary.View)",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "สร้างฟังก์ชันที่ตัวจัดการที่กําหนดในมุมมองสามารถขัดขวางได้ (ผ่าน Binary.View)",
        "Documentation.LongDescription": "<p>สร้างฟังก์ชันมุมมองตาม <code>function</code> ที่สามารถจัดการได้ในมุมมองที่สร้างขึ้นโดย <code>Binary.View</code></p>\r\n<p>ตัวจัดการ <code>OnInvoke</code> ของ <code>Binary.View</code> สามารถใช้เพื่อกําหนดตัวจัดการสําหรับฟังก์ชันมุมมอง</p>\r\n<p>เช่นเดียวกับตัวจัดการสําหรับการดําเนินการในตัว ถ้าไม่มีการระบุตัวจัดการ <code>OnInvoke</code> หรือถ้าไม่มีการจัดการฟังก์ชันมุมมอง หรือถ้ามีข้อผิดพลาดเกิดขึ้นจากตัวจัดการ <code>function</code> จะถูกนําไปใช้ที่ด้านบนของมุมมอง</p>\r\n<p>อ้างอิงคู่มือ Custom Connector ของ Power Query ที่เผยแพร่สําหรับคําอธิบายที่สมบูรณ์เพิ่มเติมของ <code>Binary.View</code> และฟังก์ชันมุมมองแบบกําหนดเอง</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 64 บิตที่ถูกเข้ารหัสลับโดยใช้การเข้ารหัสลับความยาวตัวแปร 7 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 64 บิตที่ถูกเข้ารหัสลับโดยใช้การเข้ารหัสลับความยาวตัวแปร 7 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 64 บิตที่ถูกเข้ารหัสลับโดยใช้การเข้ารหัสลับความยาวตัวแปร 7 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 64 บิตที่ถูกเข้ารหัสลับโดยใช้การเข้ารหัสลับความยาวตัวแปร 7 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 8 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 8 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านค่าทศนิยม .NET 16 ไบต์",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านค่าทศนิยม .NET 16 ไบต์",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านค่าเลขทศนิยมลอยตัว IEEE Double-Precision 8 ไบต์",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านค่าเลขทศนิยมลอยตัว IEEE Double-Precision 8 ไบต์",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่อ่านลำดับข้อมูลและส่งกลับรายการ",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่อ่านลำดับข้อมูลและส่งกลับ <code>list</code>  พารามิเตอร์ <code>binaryFormat</code> จะระบุรูปแบบไบนารีของแต่ละรายการ  มีสามวิธีในการกำหนดจำนวนรายการที่อ่าน: <ul><li>หากไม่มีการระบุ <code>countOrCondition</code> รูปแบบไบนารีจะถูกอ่านจนกว่าจะไม่มีรายการอีกแล้ว</li><li>หาก <code>countOrCondition</code> เป็นตัวเลข รูปแบบไบนารีจะอ่านรายการจำนวนมากนั้น</li><li>หาก <code>countOrCondition</code> เป็นฟังก์ชัน ฟังก์ชันนั้นจะถูกเรียกสำหรับแต่ละรายการที่อ่าน  ฟังก์ชันจะส่งกลับเป็น จริง เพื่อดำเนินการต่อ และ เท็จ เพื่อหยุดการอ่านรายการ  ข้อมูลสุดท้ายจะถูกรวมในรายการ</li><li>หาก <code>countOrCondition</code> เป็นรูปแบบไบนารี จำนวนข้อมูลก็ควรมาก่อนรายการ และรูปแบบที่ระบุจะถูกใช้เพื่ออ่านจำนวน</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "อ่านไบต์จนกว่าสิ้นสุดข้อมูล",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "อ่านสองไบต์",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "อ่านไบต์จนกว่าค่าไบต์จะมากกว่าหรือเท่ากับสอง",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านศูนย์ไบต์และส่งกลับค่า Null",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านศูนย์ไบต์และส่งกลับค่า Null",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่อ่านระเบียน",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่อ่านระเบียน  พารามิเตอร์ <code>record</code> ระบุรูปแบบของระเบียน  แต่ละเขตข้อมูลในระเบียนสามารถมีรูปแบบไบนารีอื่นได้  ถ้าเขตข้อมูลมีค่าที่ไม่ใช่ค่ารูปแบบไบนารี จะไม่มีข้อมูลใดถูกอ่านสำหรับเขตข้อมูลนั้น และค่าเขตข้อมูลจะแสดงในผลลัพธ์",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "อ่านระเบียนที่มีจำนวนเต็ม 16 บิตหนึ่งค่าและจำนวนเต็ม 32 บิตหนึ่งค่า",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 16 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 16 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 32 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 32 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 64 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่มีเครื่องหมาย 64 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านค่าเลขทศนิยมลอยตัวแบบ IEEE Single-Precision 4 ไบต์",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านค่าเลขทศนิยมลอยตัวแบบ IEEE Single-Precision 4 ไบต์",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "ส่งกลับรูปแบบไบนารีที่อ่านค่าข้อความ",
        "Documentation.LongDescription": "ส่งกลับรูปแบบไบนารีที่อ่านค่าข้อความ <code>length</code> ระบุจํานวนไบต์ที่จะถอดรหัส หรือรูปแบบไบนารีของความยาวที่อยู่ก่อนหน้าข้อความ ค่า <code>encoding</code> ที่เลือกได้จะระบุการเข้ารหัสของข้อความ ถ้าไม่ได้ระบุ <code>encoding</code> การเข้ารหัสจะถูกกําหนดจากเครื่องหมายการจัดลำดับไบต์ Unicode ถ้าไม่มีเครื่องหมายการจัดลําดับไบต์ แสดงว่ามีการใช้ <code>TextEncoding.Utf8</code>",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "ถอดรหัสสองไบต์เป็นข้อความ ASCII",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "ถอดรหัสข้อความ ASCII ที่ความยาวของข้อความในหน่วยไบต์ปรากฏก่อนข้อความเป็นไบต์",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 16 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 16 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 32 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 32 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 64 บิต",
        "Documentation.LongDescription": "รูปแบบไบนารีที่อ่านจำนวนเต็มที่ไม่มีเครื่องหมาย 64 บิต",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "สร้างจำนวนเต็ม 8 บิตจากค่าที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> จํานวนเต็ม 8 บิตจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Byte.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงของจํานวนเต็ม 8 บิตโดยไม่มีเศษส่วน ระบบจะส่งกลับ <code>value</code> ถ้ามีเศษส่วน ระบบจะปัดเศษตัวเลขดังกล่าวตามโหมดการปัดเศษที่ระบุไว้ โหมดการปัดเศษเริ่มต้นคือ <code>RoundingMode.ToEven</code> ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> โปรดดู <code>Number.Round</code> สําหรับโหมดการปัดเศษที่ใช้งานได้ อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 8 บิตสำหรับ <code>\"4\"</code>",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 8 บิตสำหรับ <code>\"4.5\"</code> โดยใช้ <code>RoundingMode.AwayFromZero</code>",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "แปลงตัวเลขเป็นอักขระข้อความ",
        "Documentation.LongDescription": "ส่งกลับอักขระที่เทียบเท่าตัวเลข<br>\r\n    <br>\r\n    <code>number</code> ที่ระบุควรเป็นรหัสอักขระ Unicode 21 บิต",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "แปลงตัวเลขเป็นค่าอักขระที่เทียบเท่ากัน",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "แปลงอักขระเป็นตัวเลข แล้วแปลงกลับอีกครั้ง",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "แปลงรหัสอักขระฐานสิบหกสำหรับอีโมติคอน “หน้ายิ้มกริ่ม” เป็นคู่ตัวแทน UTF-16 ที่เทียบเท่ากัน",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "แปลงอักขระเป็นค่าตัวเลข",
        "Documentation.LongDescription": "ส่งกลับตัวเลขที่เทียบเท่ากับ <code>character</code><br>\r\n    <br>\r\n    ผลลัพธ์จะเป็นรหัสอักขระ Unicode 21 บิตที่แสดงโดยอักขระที่ระบุหรือคู่ตัวแทน\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "แปลงอักขระเป็นค่าตัวเลขที่เทียบเท่ากัน",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "แปลงคู่ตัวแทน UTF-16 สำหรับอีโมติคอน “หน้ายิ้มกริ่ม” เป็นรหัสอักขระฐานสิบหกที่เทียบเท่ากัน",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่รวมรายการข้อความโดยใช้ตัวคั่นที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่รวมรายการของค่าข้อความเป็นค่าข้อความเดียวโดยใช้ตัวคั่นที่ระบุ",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "รวมรายการค่าข้อความโดยใช้ตัวคั่นเครื่องหมายอัฒภาค",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "รวมข้อความของสองคอลัมน์โดยใช้ตัวคั่นเครื่องหมายจุลภาคและตัวคั่นแบบ CSV",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่รวมรายการข้อความโดยใช้ลำดับตัวคั่น",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่รวมรายการของค่าข้อความเป็นค่าข้อความเดียวโดยใช้ลำดับตัวคั่น",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "รวมรายการของค่าข้อความโดยใช้ลำดับตัวคั่น",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่รวมรายการข้อความโดยใช้ความยาวที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่รวมรายการของค่าข้อความเป็นค่าข้อความเดียวโดยใช้ความยาวที่ระบุ",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "รวมรายการของค่าข้อความโดยการแยกจำนวนอักขระที่ระบุจากค่าที่ป้อนแต่ละค่า",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "รวมรายการของค่าข้อความโดยการแยกจำนวนอักขระที่ระบุ หลังจากเติมผลลัพธ์ล่วงหน้าด้วยข้อความเทมเพลต",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่รวมรายการข้อความโดยใช้ตำแหน่งผลลัพธ์ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่รวมรายการของค่าข้อความเป็นค่าข้อความเดียวโดยใช้ตำแหน่งผลลัพธ์ที่ระบุ",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "รวมรายการของค่าข้อความโดยวางในผลลัพธ์ในตำแหน่งที่ระบุ",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่รวมรายการข้อความโดยใช้ตำแหน่งและความยาวที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่รวมรายการของค่าข้อความเป็นค่าข้อความเดียวโดยใช้ตำแหน่งผลลัพธ์และความยาวที่ระบุ ความยาว Null ระบุว่าควรรวมค่าข้อความทั้งหมด",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "รวมรายการของค่าข้อความโดยใช้ตำแหน่งผลลัพธ์และความยาวที่ระบุ",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "ส่งกลับฟังก์ชันตัวเปรียบเทียบตามความไวต่อวัฒนธรรมและตัวพิมพ์ใหญ่-เล็กที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันตัวเปรียบเทียบที่ใช้ <code>culture</code> และความไวของตัวพิมพ์ใหญ่-เล็กที่ระบุโดย <code>ignoreCase</code> เพื่อดําเนินการเปรียบเทียบ<br>\r\n <br>\r\n      ฟังก์ชันตัวเปรียบเทียบยอมรับสองอาร์กิวเมนต์และส่งกลับ -1, 0 หรือ 1 โดยขึ้นอยู่กับว่าค่าแรกน้อยกว่า เท่ากับ  หรือมากกว่าค่าที่สอง<br>\r\n      <br>\r\n      ค่าเริ่มต้นสําหรับ <code>ignoreCase</code> เป็นเท็จ <code>culture</code> ควรเป็นหนึ่งในตําแหน่งที่ตั้งที่ได้รับการสนับสนุนโดย .NET framework (ตัวอย่างเช่น \"en-US\")\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "เปรียบเทียบ \"a\" กับ \"A\" โดยใช้ภาษา \"en-US\" เพื่อดูว่าค่าเท่ากันหรือไม่",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "เปรียบเทียบ \"a\" กับ \"A\" โดยใช้ภาษา \"en-US\" และไม่คำนึงถึงตัวพิมพ์ใหญ่พิมพ์เล็ก เพื่อดูว่าค่าทั้งสองเท่ากันหรือไม่",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "ส่งผลตัวระบุหมายเลขเฉพาะจากค่าคุณสมบัติสมาชิก",
        "Documentation.LongDescription": "ส่งผลตัวระบุหมายเลขเฉพาะจากค่าคุณสมบัติสมาชิก <code>attribute</code> ส่งกลับค่า null สำหรับค่าอื่นๆ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "ส่งกลับคีย์ของคุณสมบัติ",
        "Documentation.LongDescription": "ส่งกลับคีย์ของคุณสมบัติ <code>property</code>",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "ย้อนค่าสกุลเงินจากค่าที่ให้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>currency</code> จาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Currency.From</code> จะส่งกลับ <code>null</code>  ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงของสกุลเงิน ระบบจะปัดเศษส่วนของ <code>value</code> เป็นทศนิยม 4 หลักและส่งกลับ ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> โดยใช้ <code>Number.FromText</code> ช่วงที่ถูกต้องสําหรับสกุลเงินคือ <code>-922,337,203,685,477.5808</code> ถึง <code>922,337,203,685,477.5807</code> โปรดดู <code>Number.Round</code> สําหรับโหมดการปัดเศษที่ใช้งานได้ ค่าเริ่มต้นคือ <code>RoundingMode.ToEven</code> อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>สกุลเงิน</code> ของ<code>\"1.23455\"</code>",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "รับค่า <code>สกุลเงิน</code> ของ <code>\"1.23455\"</code> โดยใช้ <code>RoundingMode.Down</code>",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "ส่งกลับคอมโพเนนต์วัน",
        "Documentation.LongDescription": "ส่งคืนคอมโพเนนต์วันของค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> \r\n      <ul>\r\n        <li><code>dateTime</code>: ค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่คอมโพเนนต์วันถูกแยก</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "รับคอมโพเนนต์วันของค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่แสดงวันที่และเวลา 5/14/2011 05:00:00 PM",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "ส่งกลับตัวเลข (จาก 0 ถึง 6) ที่ระบุวันในสัปดาห์ของค่าที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับตัวเลข (จาก 0 ถึง 6) ที่ระบุวันในสัปดาห์ของ <code>dateTime</code> ที่ระบุ\r\n  <ul>\r\n        <li><code>dateTime</code>: ค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> </li>\r\n        <li><code>firstDayOfWeek</code>: ค่า <code>วัน</code> ที่ระบุว่าวันใดที่ควรจะเป็นวันแรกของสัปดาห์ ค่าที่อนุญาตคือ วัน.วันอาทิตย์, วัน.วันจันทร์, วัน.วันอังคาร, วัน.วันพุธ, วัน.วันพฤหัสบดี, วัน.วันศุกร์ หรือ วัน.วันเสาร์ ถ้าไม่ได้ระบุ จะมีการใช้ค่าเริ่มต้นที่ขึ้นอยู่กับวัฒนธรรม</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ดึงข้อมูลวันของสัปดาห์ที่แสดงเป็นวันจันทร์ที่ 21 กุมภาพันธ์ 2011 โดยให้วันอาทิตย์เป็นวันแรกของสัปดาห์",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "ดึงข้อมูลวันของสัปดาห์ที่แสดงเป็นวันจันทร์ที่ 21 กุมภาพันธ์ 2011 โดยให้วันจันทร์เป็นวันแรกของสัปดาห์",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "คืนค่าชื่อวันของสัปดาห์",
        "Documentation.LongDescription": "ส่งกลับชื่อวันของสัปดาห์สำหรับ <code>date</code> ที่กำหนดให้ อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ดึงข้อมูลชื่อวันของสัปดาห์",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "ส่งกลับตัวเลขตั้งแต่ 1 ถึง 366 ที่แสดงถึงวันของปี",
        "Documentation.LongDescription": "ส่งกลับตัวเลขที่แสดงวันของปีในค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่ระบุ <code>dateTime</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "วันของปีสําหรับวันที่ 1 มีนาคม 2011",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "ส่งกลับตัวเลขตั้งแต่ 28 ถึง 31 ที่ระบุจำนวนวันในเดือน",
        "Documentation.LongDescription": "ส่งกลับจำนวนวันในเดือนในค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> e <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: ค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จำนวนวันในเดือนถูกส่งกลับ</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "จำนวนวันในเดือนธันวาคมตามที่แสดงโดย <code>#date(2011, 12, 01)></code>",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "ส่งกลับจุดสิ้นสุดของวัน",
        "Documentation.LongDescription": "ส่งกลับจุดสิ้นสุดของวันที่แสดงโดย <code>dateTime</code> ข้อมูลโซนเวลาจะถูกเก็บไว้\r\n <ul>\r\n <li><code>dateTime</code>: ค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>ที่คํานวณว่ามีจุดสิ้นสุดของวันใดบ้าง</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "รับสิ้นสุดวันสำหรับ 5/14/2011 05:00:00 PM",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "รับสิ้นสุดวันสำหรับ 5/17/2011 05:00:00 PM -7:00",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "ส่งกลับจุดสิ้นสุดของเดือน",
        "Documentation.LongDescription": "ส่งกลับจุดสิ้นสุดของเดือนที่มี <code>dateTime</code>\r\n      <ul>\r\n        <li><code>dateTime</code>: ค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>ที่คํานวณว่ามีจุดสิ้นสุดของเดือนใดบ้าง</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "รับสิ้นสุดเดือนสำหรับ 5/14/2011 05:00:00 PM",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "รับสิ้นสุดเดือนสำหรับ 5/17/2011 05:00:00 PM -7:00",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "ส่งกลับจุดสิ้นสุดของไตรมาส",
        "Documentation.LongDescription": "ส่งกลับจุดสิ้นสุดของไตรมาสที่มี <code>dateTime</code> ข้อมูลโซนเวลาจะถูกเก็บไว้\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>ที่คํานวณว่ามีจุดสิ้นสุดของไตรมาสใดบ้าง</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจุดสิ้นสุดของไตรมาสสําหรับวันที่ 10 ตุลาคม 2011 เวลา 8:00 น.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "ส่งกลับจุดสิ้นสุดของสัปดาห์",
        "Documentation.LongDescription": "ส่งกลับจุดสิ้นสุดของสัปดาห์ที่มี <code>dateTime</code> \r\n    ฟังก์ชันนี้จะใช้<code>วัน</code>เพิ่มเติม <code>firstDayOfWeek</code> เพื่อตั้งค่าเป็นวันแรกของสัปดาห์สําหรับการคํานวณแบบสัมพัทธ์นี้ ค่าเริ่มต้นคือ <code>Day.Sunday</code>\r\n      <ul>\r\n        <li><code>dateTime</code>: ค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>ที่คํานวณว่ามีวันสุดท้ายของสัปดาห์ใดบ้าง</li>\r\n        <li><code>firstDayOfWeek</code>: <i>[เพิ่มเติม]</i> ค่า <code>Day.Type</code> แสดงถึงวันแรกของสัปดาห์ ค่าที่เป็นไปได้คือ <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> และ <code>Day.Saturday.</code> ค่าเริ่มต้นคือ <code>Day.Sunday</code></li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "รับสิ้นสุดสัปดาห์สำหรับ 5/14/2011 05:00:00 PM",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "รับสิ้นสุดสัปดาห์สำหรับ 5/17/2011 05:00:00 PM -7:00 โดยวันอาทิตย์เป็นวันแรกของสัปดาห์",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "ส่งกลับจุดสิ้นสุดของปี",
        "Documentation.LongDescription": "ส่งกลับจุดสิ้นสุดของปีที่มี <code>dateTime</code> รวมถึงเศษส่วนวินาที ข้อมูลโซนเวลาจะถูกเก็บไว้\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>ที่คํานวณว่ามีจุดสิ้นสุดของปีใดบ้าง</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "รับสิ้นสุดปีสำหรับ 5/14/2011 05:00:00 PM",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "รับสิ้นสุดชั่วโมงสำหรับ 5/17/2011 05:00:00 PM -7:00",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "สร้างวันที่จากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>date</code> จาก <code>value</code> ที่ระบุ นอกจากนี้อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")\r\nถ้า <code>value</code> ที่ระบุเป็น <code>null</code> <code>Date.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่ระบุเป็น <code>date</code> <code>value</code> จะถูกส่งกลับ ค่าชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>date</code>:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>date</code> จากการแทนข้อความ ดู<code>Date.FromText</code> สําหรับรายละเอียด</li>\r\n        <li><code>datetime</code>: คอมโพเนนต์วันที่ของ <code>value</code></li>\r\n        <li><code>datetimezone</code>: คอมโพเนนต์วันที่ของวันที่เวลาท้องถิ่นที่เทียบเท่ากับ <code>value</code></li>\r\n        <li><code>number</code>: คอมโพเนนต์วันที่ของวันที่เวลาที่เทียบเท่ากับ OLE Automation Date ที่แสดงโดย <code>value</code></li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่นๆ ข้อผิดพลาดจะถูกส่งกลับ",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>43910</code> เป็นค่า <code>date</code>",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "แปลง <code>#datetime(1899, 12, 30, 06, 45, 12)</code> เป็นค่า <code>date</code>",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "สร้าง Date จากรูปแบบ Date ท้องถิ่น สากล และแบบกำหนดเอง",
        "Documentation.LongDescription": "สร้างค่า <code>date</code> จากการแสดงข้อความ <code>text</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>: ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 เพื่อดูรายละเอียดเพิ่มเติม การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้แยกวิเคราะห์วันที่โดยใช้วิธีที่ดีที่สุด</li>\r\n   <li><code>Culture</code> : เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"MMM\"</code> จะเป็น <code>\"Jan\", \"Feb\", \"Mar\", ...</code> ในขณะที่ใน <code>\"ru-RU\"</code> <code>\"MMM\"</code> จะเป็น <code>\"янв\", \"фев\", \"мар\", ...</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>\"2010-12-31\"</code> เป็นค่า <code>date</code>",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "แปลงโดยใช้รูปแบบที่กำหนดเองและวัฒนธรรมเยอรมัน",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "ค้นหาวันที่ในปฏิทินคริสต์ศักราชที่สอดคล้องกับกับการเริ่มต้นของปี 1400 ในปฏิทินฮิจเราะห์",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างวันปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลาที่ระบุ <code>dateTime</code> เกิดขึ้นระหว่างวันปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาของระบบปัจจุบันอยู่ในวันปัจจุบันหรือไม่",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างเดือนปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลาที่ระบุ <code>dateTime</code> เกิดขึ้นระหว่างเดือนปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาของระบบปัจจุบันอยู่ในเดือนปัจจุบันหรือไม่",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างไตรมาสปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลาที่ระบุ <code>dateTime</code> เกิดขึ้นระหว่างไตรมาสปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาของระบบปัจจุบันอยู่ในไตรมาสปัจจุบันหรือไม่",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างสัปดาห์ปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลาที่ระบุ <code>dateTime</code> เกิดขึ้นระหว่างสัปดาห์ปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาของระบบปัจจุบันอยู่ในสัปดาห์ปัจจุบันหรือไม่",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างปีปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลาที่ระบุ <code>dateTime</code> เกิดขึ้นระหว่างปีปัจจุบันหรือไม่ ตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาของระบบปัจจุบันอยู่ในปีปัจจุบันหรือไม่",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างวันถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างวันถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าวันหลังจากเวลาของระบบปัจจุบันอยู่ในวันถัดไปหรือไม่",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างเดือนถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในเดือนปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างเดือนถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในเดือนปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเดือนหลังจากเวลาของระบบปัจจุบันอยู่ในเดือนถัดไปหรือไม่",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างไตรมาสถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างไตรมาสถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าไตรมาสหลังจากเวลาของระบบปัจจุบันอยู่ในไตรมาสถัดไปหรือไม่",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างสัปดาห์ถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างสัปดาห์ถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าสัปดาห์หลังจากเวลาของระบบปัจจุบันอยู่ในสัปดาห์ถัดไปหรือไม่",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างปีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างปีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าปีหลังจากเวลาของระบบปัจจุบันอยู่ในปีถัดไปหรือไม่",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างวันก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างวันก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวันปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าวันก่อนเวลาของระบบปัจจุบันอยู่ในวันก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างเดือนก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในเดือนปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างเดือนก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเดือนก่อนเวลาของระบบปัจจุบันอยู่ในเดือนก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างไตรมาสก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างไตรมาสก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในไตรมาสปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าไตรมาสก่อนเวลาของระบบปัจจุบันอยู่ในไตรมาสก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างสัปดาห์ก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างสัปดาห์ก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในสัปดาห์ปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าสัปดาห์ก่อนเวลาของระบบปัจจุบันอยู่ในสัปดาห์ก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างปีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างปีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในปีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าปีก่อนเวลาของระบบปัจจุบันอยู่ในปีก่อนหน้าหรือไม่",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "ระบุว่าวันที่นี้เกิดขึ้นระหว่างปีปัจจุบันหรือไม่ และอยู่ในหรือก่อนวันปัจจุบันตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลาที่ระบุ <code>dateTime</code> เกิดขึ้นระหว่างปีปัจจุบันหรือไม่ และอยู่ในหรือก่อนวันปัจจุบันตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบ\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาของระบบปัจจุบันอยู่ในช่วงเริ่มต้นปีถึงปัจจุบันหรือไม่",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "ระบุว่าวันที่นี้ตกอยู่ในปีอธิกสุรทินหรือไม่",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลาที่ระบุ <code>dateTime</code> ตกอยู่ในปีอธิกสุรทินหรือไม่ \r\n <ul>\r\n        <li><code>dateTime</code>: ค่า <code>วันที่</code>, <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ระบุว่าปี 2012 ตามที่แสดงโดย <code>#date(2012, 01, 01)</code> เป็นปีอธิกสุรทินหรือไม่",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "ส่งกลับคอมโพเนนต์เดือน",
        "Documentation.LongDescription": "ส่งกลับคอมโพเนนต์เดือนของค่า <code>datetime</code> ที่ระบุ <code>dateTime</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาเดือนใน #datetime(2011, 12, 31, 9, 15, 36)",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "คืนค่าชื่อของคอมโพเนนท์เดือน",
        "Documentation.LongDescription": "ส่งกลับคอมโพเนนต์ชื่อของเดือนสำหรับ <code>date</code> ที่ระบุ อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ดึงข้อมูลชื่อเดือน",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "ส่งกลับตัวเลขที่ระบุไตรมาสของปีซึ่งวันที่ตกอยู่ในไตรมาสนั้น",
        "Documentation.LongDescription": "ส่งกลับตัวเลข 1 ถึง 4 ที่ระบุไตรมาสของปีซึ่งวันที่ <code>dateTime</code> ตกอยู่ในไตรมาสนั้น <code>dateTime</code> สามารถเป็นค่า <code>date</code>, <code>datetime</code> หรือ <code>datetimezone</code> ได้",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาไตรมาสของปีซึ่งวันที่ #date(2011, 12, 31) ตกอยู่ในไตรมาสนั้น",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "ส่งกลับจุดเริ่มต้นของวัน",
        "Documentation.LongDescription": "ส่งกลับจุดเริ่มต้นของวันที่แสดงโดย <code>dateTime</code>\r\n    <code>dateTime</code> ต้องเป็นค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจุดเริ่มต้นของวันสําหรับวันที่ 10 ตุลาคม 2011 เวลา 8:00 น.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "ส่งกลับจุดเริ่มต้นของเดือน",
        "Documentation.LongDescription": "ส่งกลับจุดเริ่มต้นของเดือนที่มี <code>dateTime</code>\r\n    <code>dateTime</code> ต้องเป็นค่า<code>วันที่</code>หรือ <code>วันที่เวลา</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจุดเริ่มต้นของเดือนสําหรับวันที่ 10 ตุลาคม 2011 เวลา 8:10:32 น.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "ส่งกลับจุดเริ่มต้นของไตรมาส",
        "Documentation.LongDescription": "ส่งกลับจุดเริ่มต้นของไตรมาสที่มี <code>dateTime</code>\r\n      <code>dateTime</code> ต้องเป็นค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจุดเริ่มต้นไตรมาสสําหรับวันที่ 10 ตุลาคม 2011 เวลา 8:00 น.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "ส่งกลับจุดเริ่มต้นของสัปดาห์",
        "Documentation.LongDescription": "ส่งกลับวันเริ่มต้นสัปดาห์ที่มี <code>dateTime</code>\r\n    <code>dateTime</code> ต้องเป็นค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจุดเริ่มต้นของสัปดาห์สําหรับวันอังคารที่ 11 ตุลาคม 2011",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "ค้นหาจุดเริ่มต้นของสัปดาห์สําหรับวันอังคารที่ 11 ตุลาคม 2011 โดยใช้วันจันทร์เป็นวันเริ่มต้นของสัปดาห์",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "ส่งกลับจุดเริ่มต้นของปี",
        "Documentation.LongDescription": "ส่งกลับจุดเริ่มต้นของปีที่มี <code>dateTime</code>\r\n    <code>dateTime</code> ต้องเป็นค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจุดเริ่มต้นของปีสําหรับวันที่ 10 ตุลาคม 2011 เวลา 8:10:32 น.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "ส่งกลับระเบียนที่มีส่วนของค่าวันที่",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มีส่วนของค่าวันที่ที่ระบุ <code>date</code>\r\n <ul>\r\n        <li><code>date</code>: ค่า <code>วันที่</code> สำหรับเริ่มคำนวณระเบียนของส่วนประกอบดังกล่าว</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "แปลงค่า <code>#date(2011, 12, 31)</code> เป็นระเบียนที่มีส่วนต่างๆ จากค่าวันที่",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "ส่งกลับข้อความสำหรับแสดงแทนของค่าวันที่",
        "Documentation.LongDescription": "ส่งกลับการแสดงข้อความของ <code>date</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>culture</code> มีไว้สำหรับเวิร์กโฟลว์แบบดั้งเดิมเท่านั้น <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>:ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 เพื่อดูรายละเอียดเพิ่มเติม การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้จัดรูปแบบวันที่ตามค่าเริ่มต้นที่กำหนดไว้โดย <code>Culture</code></li>\r\n   <li><code>Culture</code>: เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"MMM\"</code> จะเป็น <code>\"Jan\", \"Feb\", \"Mar\", ...</code> ในขณะที่ใน <code>\"ru-RU\"</code> <code>\"MMM\"</code> จะเป็น <code>\"янв\", \"фев\", \"мар\", ...</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> และ <code>culture</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>#date(2010, 12, 31)</code> เป็นค่า <code>text</code> <i>ผลลัพธ์อาจแตกต่างกันไปตามวัฒนธรรมปัจจุบัน</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "แปลงโดยใช้รูปแบบที่กำหนดเองและวัฒนธรรมเยอรมัน",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "ค้นหาปีในปฏิทินฮิจเราะห์ที่สอดคล้องกับวันที่ 1 มกราคม 2000 ในปฏิทินคริสต์ศักราช",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "ส่งกลับตัวเลขตั้งแต่ 1 ถึง 6 ที่ระบุสัปดาห์ของเดือนที่มีวันที่นี้อยู่",
        "Documentation.LongDescription": "ส่งกลับตัวเลขตั้งแต่ 1 ถึง 6 ที่ระบุสัปดาห์ของเดือนที่มีวันที่ <code>dateTime</code> อยู่\r\n <ul>\r\n        <li><code>dateTime</code>: ค่า<code>วันที่เวลา</code>ที่สัปดาห์ของเดือนถูกกำหนดไว้</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กําหนดสัปดาห์ของเดือนมีนาคมที่วันที่ 15 ตกอยู่ในปี 2011",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "ส่งกลับตัวเลข 1 ถึง 54 ที่ระบุสัปดาห์ของปีที่วันที่นี้ตกอยู่ในสัปดาห์นั้น",
        "Documentation.LongDescription": "ส่งกลับตัวเลขตั้งแต่ 1 ถึง 54 ที่ระบุสัปดาห์ของปีที่ตรงกับวันที่ <code>dateTime</code>\r\n <ul>\r\n        <li><code>dateTime</code>: ค่า <code>datetime</code> สำหรับสัปดาห์ของปีถูกกำหนด</li>\r\n        <li><code>firstDayOfWeek</code>: ค่า <code>Day.Type</code> เพิ่มเติมที่ระบุวันที่ถือว่าเป็นวันเริ่มต้นของสัปดาห์ใหม่ (ตัวอย่างเช่น <code>Day.Sunday</code>) ถ้าไม่ได้ระบุ ระบบจะใช้ค่าเริ่มต้นที่อิงตามวัฒนธรรม</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "กําหนดสัปดาห์ของปีที่มีวันที่ 27 มีนาคม 2011",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "กําหนดสัปดาห์ของปีที่มีวันที่ 27 มีนาคม 2011 โดยใช้วันจันทร์เป็นวันเริ่มต้นของสัปดาห์",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "ส่งกลับคอมโพเนนต์ปี",
        "Documentation.LongDescription": "ส่งกลับคอมโพเนนต์ปีของค่า <code>datetime</code> ที่ระบุ <code>dateTime</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาปีใน #datetime(2011, 12, 31, 9, 15, 36)",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "ส่งกลับคอมโพเนนต์วันที่ของค่าวันที่ เวลาของวันที่ หรือโซนเวลาของวันที่ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับคอมโพเนนต์วันที่ของ <code>dateTime</code> ค่า <code>date</code>, <code>datetime</code>  หรือ <code>datetimezone</code> ที่ระบุ",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าวันที่ของ #datetime(2010, 12, 31, 11, 56, 02)",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "สร้างวันที่เวลาจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>datetime</code> จาก <code>value</code> ที่ระบุ นอกจากนี้อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")\r\nถ้า <code>value</code> ที่ระบุเป็น <code>null</code> <code>DateTime.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่ระบุเป็น <code>datetime</code> <code>value</code> จะถูกส่งกลับ ค่าชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>datetime</code>:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>datetime</code> จากการแทนข้อความ ดู <code>DateTime.FromText</code> สําหรับรายละเอียด</li>\r\n        <li><code>date</code>: <code>datetime</code> ที่มี <code>value</code> เป็นคอมโพเนนต์วันที่และ <code>12:00:00 AM</code> เป็นคอมโพเนนต์เวลา</li>\r\n        <li><code>datetimezone </code>: <code>datetime</code> ท้องถิ่นที่เทียบเท่ากับ <code>value</code></li>\r\n        <li><code>time</code>: <code>datetime</code> ที่มีวันที่เทียบเท่ากับ OLE Automation Date ของ <code>0</code> เป็นคอมโพเนนต์วันที่และ <code>value</code> เป็นคอมโพเนนต์เวลา</li>\r\n        <li><code>number</code>: <code>datetime</code> ที่เทียบเท่ากับ OLE Automation Date ที่แสดงโดย <code>value</code></li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่นๆ ข้อผิดพลาดจะถูกส่งกลับ",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>#time(06, 45, 12)</code> เป็นค่า <code>datetime</code>",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "แปลง <code>#date(1975, 4, 4)</code> เป็นค่า <code>datetime</code>",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "สร้างวันที่เวลาจากตัวเลขความยาว 64 บิต",
        "Documentation.LongDescription": "สร้างค่า <code>datetime</code> จากค่า <code>fileTime</code> และแปลงเป็นโซนเวลาในท้องถิ่น เวลาแฟ้มคือค่าเวลาของแฟ้ม Windows ที่แสดงตัวเลขช่วงเวลา 100 นาโนวินาทีที่ใช้ไปตั้งแต่เที่ยงคืนเวลา 12:00 วันที่ 1 มกราคม ค.ศ. 1601 (C.E.) เวลามาตรฐานสากล (UTC)\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>129876402529842245</code> เป็นค่าวันที่เวลา",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "สร้างโซนวันที่เวลาจากรูปแบบวันที่เวลาท้องถิ่นและสากล",
        "Documentation.LongDescription": "สร้างค่า <code>datetime</code> จากการแสดงข้อความ <code>text</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>: ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 เพื่อดูรายละเอียดเพิ่มเติม การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้แยกวิเคราะห์วันที่โดยใช้วิธีที่ดีที่สุด</li>\r\n   <li><code>Culture</code> : เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"MMM\"</code> จะเป็น <code>\"Jan\", \"Feb\", \"Mar\", ...</code> ในขณะที่ใน <code>\"ru-RU\"</code> <code>\"MMM\"</code> จะเป็น <code>\"янв\", \"фев\", \"мар\", ...</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>\"2010-12-31T01:30:00\"</code> เป็นค่า datetime",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "แปลง <code>\"2010-12-31T01:30:00.121212\"</code> เป็นค่า datetime",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "แปลง <code>\"2010-12-31T01:30:00\"</code> เป็นค่า datetime",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "แปลง <code>\"20101231T013000\"</code> เป็นค่า datetime",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "ระบุว่า datetime นี้จะแสดงในช่วงระหว่างชั่วโมงปัจจุบัน ดังที่มีการกำหนดไว้โดยใช้วันที่และเวลาปัจจุบันจากระบบหรือไม่",
        "Documentation.LongDescription": "ระบุว่า ค่า datetime ที่กำหนดไว้ <code>dateTime</code> จะแสดงในช่วงระหว่างชั่วโมงปัจจุบัน ดังที่มีการกำหนดไว้โดยใช้วันที่และเวลาปัจจุบันจากระบบหรือไม่\r\n      <ul>\r\n      <li><code>dateTime</code>: จะมีการประเมินผลค่า <code>datetime</code> หรือ <code>datetimezone</code></li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาระบบปัจจุบันจะเป็นค่าชั่วโมงปัจจุบันหรือไม่",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "ระบุว่า datetime นี้จะแสดงในช่วงระหว่างนาทีปัจจุบัน ดังที่มีการกำหนดไว้โดยใช้วันที่และเวลาปัจจุบันจากระบบหรือไม่",
        "Documentation.LongDescription": "ระบุว่า ค่า datetime ที่กำหนดไว้ <code>dateTime</code> จะแสดงในช่วงระหว่างนาทีปัจจุบัน ดังที่มีการกำหนดไว้โดยใช้วันที่และเวลาปัจจุบันจากระบบหรือไม่\r\n      <ul>\r\n      <li><code>dateTime</code>: จะมีการประเมินผลค่า <code>datetime</code> หรือ <code>datetimezone</code></li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาระบบปัจจุบันจะเป็นค่านาทีปัจจุบันหรือไม่",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "ระบุว่า datetime นี้จะแสดงในช่วงระหว่างวินาทีปัจจุบัน ดังที่มีการกำหนดไว้โดยใช้วันที่และเวลาปัจจุบันจากระบบหรือไม่",
        "Documentation.LongDescription": "ระบุว่า ค่า datetime ที่กำหนดไว้ <code>dateTime</code> จะแสดงในช่วงระหว่างวินาทีปัจจุบัน ดังที่มีการกำหนดไว้โดยใช้วันที่และเวลาปัจจุบันจากระบบหรือไม่\r\n      <ul>\r\n      <li><code>dateTime</code>: จะมีการประเมินผลค่า <code>datetime</code> หรือ <code>datetimezone</code></li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าเวลาระบบปัจจุบันจะเป็นค่าวินาทีปัจจุบันหรือไม่",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างชั่วโมงถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างชั่วโมงถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน.\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าชั่วโมงหลังจากเวลาระบบปัจจุบันจะเป็นค่าชั่วโมงถัดไปหรือไม่",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างนาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างนาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่านาทีหลังจากเวลาระบบปัจจุบันจะเป็นค่านาทีถัดไปหรือไม่",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างวินาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างวินาทีถัดไปตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าวินาทีหลังจากเวลาระบบปัจจุบันจะเป็นค่าวินาทีถัดไปหรือไม่",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างชั่วโมงก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างชั่วโมงก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในชั่วโมงปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าชั่วโมงก่อนเวลาระบบปัจจุบันจะเป็นค่าชั่วโมงก่อนหน้าหรือไม่",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างนาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างนาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในนาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่านาทีก่อนเวลาระบบปัจจุบันจะเป็นค่านาทีก่อนหน้าหรือไม่",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "ระบุว่าวันที่เวลานี้เกิดขึ้นระหว่างวินาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันของระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน",
        "Documentation.LongDescription": "ระบุว่าค่าวันที่เวลา <code>dateTime</code> ที่กำหนดไว้เกิดขึ้นระหว่างวินาทีก่อนหน้าตามที่กำหนดโดยวันที่และเวลาปัจจุบันในระบบหรือไม่ โปรดทราบว่าฟังก์ชันนี้จะส่งกลับค่า false เมื่อส่งผ่านค่าที่เกิดขึ้นภายในวินาทีปัจจุบัน\r\n      <ul>\r\n      <li><code>dateTime</code>: ค่าของ <code>วันที่เวลา</code> หรือ <code>โซนวันที่เวลา</code> ที่จะประเมิน</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าวินาทีก่อนเวลาระบบปัจจุบันจะเป็นค่าวินาทีก่อนหน้าหรือไม่",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "ส่งกลับส่วนเวลาของค่าวันที่เวลาที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับส่วนเวลาของค่าวันที่เวลาที่กำหนด <code>dateTime</code>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าเวลาของ #datetime(2010, 12, 31, 11, 56, 02)",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "ส่งกลับระเบียนที่มีส่วนของค่าวันที่เวลา",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มีส่วนของค่าวันที่เวลาที่ระบุ <code>dateTime</code>\r\n <ul>\r\n        <li><code>dateTime</code>: ค่า <code>วันที่เวลา</code> สำหรับเริ่มคำนวณระเบียนของส่วนประกอบดังกล่าว</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "แปลงค่า <code>#datetime(2011, 12, 31, 11, 56, 2)</code> เป็นระเบียนที่มีค่าวันที่และเวลา",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "ส่งกลับข้อความสำหรับแสดงค่าวันที่เวลา",
        "Documentation.LongDescription": "ส่งกลับการแสดงข้อความของ <code>dateTime</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>culture</code> มีไว้สำหรับเวิร์กโฟลว์แบบดั้งเดิมเท่านั้น <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>:ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 เพื่อดูรายละเอียดเพิ่มเติม การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้จัดรูปแบบวันที่ตามค่าเริ่มต้นที่กำหนดไว้โดย <code>Culture</code></li>\r\n   <li><code>Culture</code>: เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"MMM\"</code> จะเป็น <code>\"Jan\", \"Feb\", \"Mar\", ...</code> ในขณะที่ใน <code>\"ru-RU\"</code> <code>\"MMM\"</code> จะเป็น <code>\"янв\", \"фев\", \"мар\", ...</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> และ <code>culture</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>#datetime(2010, 12, 31, 01, 30, 25)</code> เป็นค่า <code>text</code> <i>ผลลัพธ์อาจแตกต่างกันไปตามวัฒนธรรมปัจจุบัน</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "แปลงโดยใช้รูปแบบที่กำหนดเองและวัฒนธรรมเยอรมัน",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "แปลงโดยใช้รูปแบบ ISO 8601",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "สร้างโซนวันที่เวลาจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>datetimezone</code> จาก <code>value</code> ที่ระบุ นอกจากนี้อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")\r\nถ้า <code>value</code> ที่ระบุเป็น <code>null</code> <code>DateTimeZone.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่ระบุเป็น <code>datetimezone</code> <code>value</code> จะถูกส่งกลับ ค่าชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>datetimezone</code>:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>datetimezone</code> จากการแทนข้อความ ดู <code>DateTimeZone.FromText</code> สำหรับรายละเอียด</li>\r\n        <li><code>date</code>: <code>datetimezone</code> ที่มี <code>value</code> เป็นคอมโพเนนต์วันที่ <code>12:00:00 AM</code> เป็นคอมโพเนนต์เวลาและออฟเซตที่สอดคล้องกับโซนเวลาท้องถิ่น</li>\r\n        <li><code>datetime</code>: <code>datetimezone</code> ที่มี <code>value</code> เป็นวันที่เวลาและออฟเซตที่สอดคล้องกับโซนเวลาท้องถิ่น</li>\r\n        <li><code>time</code>: <code>datetimezone</code> ที่มีวันที่เทียบเท่ากับ OLE Automation Date ของ <code>0</code> เป็นคอมโพเนนต์วันที่ <code>value</code>เป็นคอมโพเนนต์เวลาและออฟเซตที่สอดคล้องกับโซนเวลาท้องถิ่น</li>\r\n        <li><code>number</code>: <code>datetimezone</code> ที่มีวันที่เวลาเทียบเท่ากับ OLE Automation Date ที่แสดงโดย <code>value</code> และออฟเซตที่สอดคล้องกับโซนเวลาท้องถิ่น</li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่นๆ ข้อผิดพลาดจะถูกส่งกลับ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>\"2020-10-30T01:30:00-08:00\"</code> เป็นค่า <code>datetimezone</code>",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "สร้างโซนวันที่เวลาจากตัวเลขความยาว 64 บิต",
        "Documentation.LongDescription": "สร้างค่า <code>datetimezone</code> จากค่า <code>fileTime</code> และแปลงเป็นโซนเวลาในท้องถิ่น filetimeคือค่าเวลาของไฟล์ Windows ที่แสดงตัวเลขช่วงเวลา 100 นาโนวินาทีที่ใช้ไปตั้งแต่เวลาเที่ยงคืน 12:00 วันที่ 1 มกราคม ค.ศ. 1601 (C.E.) ตามเวลามาตรฐานสากล (UTC)\r\n",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>129876402529842245</code> เป็นค่าโซนวันที่เวลา",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "สร้าง datetimezone จากรูปแบบ datetimezone ท้องถิ่น สากล และแบบกำหนดเอง",
        "Documentation.LongDescription": "สร้างค่า <code>datetimezone</code> จากการแสดงข้อความ <code>text</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>: ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 เพื่อดูรายละเอียดเพิ่มเติม การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้แยกวิเคราะห์วันที่โดยใช้วิธีที่ดีที่สุด</li>\r\n   <li><code>Culture</code> : เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"MMM\"</code> จะเป็น <code>\"Jan\", \"Feb\", \"Mar\", ...</code> ในขณะที่ใน <code>\"ru-RU\"</code> <code>\"MMM\"</code> จะเป็น <code>\"янв\", \"фев\", \"мар\", ...</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>\"2010-12-31T01:30:00-08:00\"</code> เป็นค่า <code>datetimezone</code>",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "แปลงโดยใช้รูปแบบที่กำหนดเองและวัฒนธรรมเยอรมัน",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "แปลงโดยใช้ ISO 8601",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "เอาข้อมูลโซนเวลาออกจากค่าโซนวันที่เวลาที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า #datetime จาก <code>dateTimeZone</code> พร้อมเอาข้อมูลโซนเวลาออก",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "เอาข้อมูลโซนเวลาจากค่า #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0)",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "แปลงคอมโพเนนต์โซนเวลาเป็นโซนเวลาท้องถิ่น",
        "Documentation.LongDescription": "เปลี่ยนแปลงข้อมูลโซนเวลาของค่าโซนวันที่เวลา <code>dateTimeZone</code> เป็นข้อมูลโซนเวลาท้องถิ่น\r\n    ถ้า <code>dateTimeZone</code> ไม่มีคอมโพเนนต์โซนเวลา ข้อมูลโซนเวลาท้องถิ่นจะถูกเพิ่ม",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "เปลี่ยนแปลงข้อมูลโซนเวลาสำหรับ #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) เป็นโซนเวลาท้องถิ่น (ใช้ PST)",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "ส่งกลับระเบียนที่มีส่วนของค่าโซนวันที่เวลา",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มีส่วนของค่าโซนวันที่เวลาที่ระบุ <code>dateTimeZone</code>\r\n <ul>\r\n        <li><code>dateTimeZone</code>: ค่า<code>โซนวันที่เวลา</code>สำหรับเริ่มคำนวณระเบียนของส่วนประกอบดังกล่าว</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "แปลงค่า <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> เป็นระเบียนที่มีค่าวันที่ เวลา และเขต",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "ส่งกลับข้อความสำหรับแสดงค่าโซนวันที่เวลา",
        "Documentation.LongDescription": "ส่งกลับการแสดงข้อความของ <code>dateTimeZone</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>culture</code> มีไว้สำหรับเวิร์กโฟลว์แบบดั้งเดิมเท่านั้น <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>:ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 เพื่อดูรายละเอียดเพิ่มเติม การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้จัดรูปแบบวันที่ตามค่าเริ่มต้นที่กำหนดไว้โดย <code>Culture</code></li>\r\n   <li><code>Culture</code>: เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"MMM\"</code> จะเป็น <code>\"Jan\", \"Feb\", \"Mar\", ...</code> ในขณะที่ใน <code>\"ru-RU\"</code> <code>\"MMM\"</code> จะเป็น <code>\"янв\", \"фев\", \"мар\", ...</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> และ <code>culture</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> เป็นค่า <code>text</code> <i>ผลลัพธ์อาจแตกต่างกันไปตามวัฒนธรรมปัจจุบัน</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "แปลงโดยใช้รูปแบบที่กำหนดเองและวัฒนธรรมเยอรมัน",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "แปลงโดยใช้รูปแบบ ISO 8601",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "แปลงคอมโพเนนต์โซนเวลาเป็นโซนเวลา UTC",
        "Documentation.LongDescription": "เปลี่ยนแปลงข้อมูลโซนเวลาของค่าวันที่เวลา <code>dateTimeZone</code> เป็นข้อมูลโซนเวลา UTC หรือเวลาสากล\r\n    ถ้า <code>dateTimeZone</code> ไม่มีคอมโพเนนต์โซนเวลา ข้อมูลโซนเวลา UTC จะถูกเพิ่ม",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "เปลี่ยนแปลงข้อมูลโซนเวลาสำหรับ #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) เป็นโซนเวลา UTC",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "เปลี่ยนโซนเวลาของค่า",
        "Documentation.LongDescription": "เปลี่ยนโซนเวลาของค่า",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "เปลี่ยนโซนเวลาของค่า",
        "Documentation.LongDescription": "เปลี่ยนโซนเวลาของค่า",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "สร้างทศนิยมจากค่าที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> ที่เป็นทศนิยมจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Decimal.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงที่เป็นทศนิยม ระบบจะส่งกลับ <code>value</code> มิฉะนั้นจะส่งกลับข้อผิดพลาด ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นทศนิยมสำหรับ <code>\"4.5\"</code>",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "ส่งกลับเนื้อหาของตาราง Delta Lake",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของตาราง Delta Lake",
        "Documentation.Category": "การเข้าถึงข้อมูล",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "สร้าง Double จากค่าที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> ที่เป็นสองเท่าจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Double.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงที่เป็นสองเท่า ระบบจะส่งกลับ <code>value</code> มิฉะนั้นจะส่งกลับข้อผิดพลาด ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็น Double สำหรับ <code>\"4\"</code>",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "ส่งกลับส่วนวันของระยะเวลา",
        "Documentation.LongDescription": "ส่งกลับส่วนวันของ <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แยกจํานวนวันระหว่างวันที่สองวัน",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "สร้างระยะเวลาจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>duration</code> จาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Duration.From</code> จะส่งกลับ <code>null</code>  ถ้า <code>value</code> ที่กำหนดเป็น <code>duration</code> จะมีการส่งกลับ <code>value</code> ค่าของชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>duration</code> ได้:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>duration</code> จากรูปแบบเวลาที่ใช้ไปเป็นข้อความ (d.h:m:s) ดู <code>Duration.FromText</code> สำหรับรายละเอียด</li>\r\n        <li><code>number</code>: <code>duration</code> เทียบเท่ากับจำนวนเต็มหรือเศษส่วนของวันที่แสดงโดย <code>value</code></li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่น ระบบจะส่งกลับข้อผิดพลาด",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>2.525</code> เป็นค่า <code>duration</code>",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "ส่งกลับค่าระยะเวลาจากรูปแบบเวลาที่ใช้ไปเป็นข้อความ (d.h:m:s)",
        "Documentation.LongDescription": "ส่งกลับค่าระยะเวลาจากข้อความที่ระบุ <code>text</code> สามารถแยกวิเคราะห์รูปแบบต่อไปนี้ด้วยฟังก์ชันนี้: \r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (รวมช่วงทั้งหมดไว้ด้วย)<br>\r\n        ddd: จำนวนวัน<br>\r\n        hh: จำนวนชั่วโมง ระหว่าง 0 ถึง 23<br>\r\n        mm: จำนวนนาที ระหว่าง 0 ถึง 59<br>\r\n        ss: จำนวนวินาที ระหว่าง 0 ถึง 59<br>\r\n        ff: เสี้ยววินาที ระหว่าง 0 ถึง 9999999",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>\"2.05:55:20\"</code> เป็นค่า <code>duration</code>",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "ส่งกลับส่วนชั่วโมงของระยะเวลา",
        "Documentation.LongDescription": "ส่งกลับส่วนชั่วโมงของ <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แยกชั่วโมงจากค่าระยะเวลา",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "ส่งกลับส่วนนาทีของระยะเวลา",
        "Documentation.LongDescription": "ส่งกลับส่วนนาทีของ <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แยกนาทีจากค่าระยะเวลา",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "ส่งกลับส่วนวินาทีของระยะเวลา",
        "Documentation.LongDescription": "ส่งกลับส่วนวินาทีของ <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แยกวินาทีจากค่าระยะเวลา",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "ส่งกลับระเบียนที่มีส่วนของระยะเวลา",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มีส่วนของค่าระยะเวลา <code>duration</code> \r\n  <ul>\r\n        <li><code>duration</code>: <code>ระยะเวลา</code> ที่ระเบียนถูกสร้าง</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>#duration(2, 5, 55, 20)</code> เป็นระเบียนของส่วนต่างๆ รวมถึงวัน ชั่วโมง นาที และวินาทีหากมีให้ใช้งาน",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "ส่งกลับข้อความของรูปแบบ \"d.h:m:s\"",
        "Documentation.LongDescription": "ส่งกลับการแสดงข้อความในรูปแบบ \"day.hour:mins:sec\" ของค่าระยะเวลาที่ระบุ <code>duration</code>.\r\n <ul>\r\n        <li><code>duration</code>: A <code>ระยะเวลา</code> จากค่าที่มีการคำนวณการแสดงข้อความ</li>\r\n  <li><code>format</code>: <i>[ระบุหรือไม่ก็ได้]</i>ไม่สนับสนุน จะส่งข้อผิดพลาดหากไม่เป็น null</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>#duration(2, 5, 55, 20)</code> เป็นค่าข้อความ",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "ส่งกลับวันทั้งหมดที่ระยะเวลานี้ขยาย",
        "Documentation.LongDescription": "ส่งกลับจํานวนวันทั้งหมดที่ขยายโดย <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจํานวนวันทั้งหมดที่ขยายด้วยค่าระยะเวลา",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "-ส่งกลับชั่วโมงทั้งหมดที่ระยะเวลานี้ขยาย",
        "Documentation.LongDescription": "ส่งกลับชั่วโมงทั้งหมดที่ขยายโดย <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาชั่วโมงทั้งหมดที่ขยายด้วยค่าระยะเวลา",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "ส่งกลับนาทีทั้งหมดที่ระยะเวลานี้ขยาย",
        "Documentation.LongDescription": "ส่งกลับนาทีทั้งหมดที่ขยายโดย <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "ค้นหานาทีทั้งหมดที่ขยายด้วยค่าระยะเวลา",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "ส่งกลับวินาทีทั้งหมดที่ระยะเวลานี้ขยาย",
        "Documentation.LongDescription": "ส่งกลับวินาทีทั้งหมดที่ขยายโดย <code>duration</code>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาวินาทีทั้งหมดที่ขยายด้วยค่าระยะเวลา",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "ส่งกลับระเบียนข้อผิดพลาดจากค่าข้อความที่ระบุสำหรับเหตุผล ข้อความ และรายละเอียด",
        "Documentation.LongDescription": "ส่งกลับระเบียนข้อผิดพลาดจากค่าข้อความที่ระบุสำหรับเหตุผล ข้อความ และรายละเอียด",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "ส่งกลับการแสดงรหัสแหล่งข้อมูล M ของค่าคงที่",
        "Documentation.LongDescription": "ส่งกลับการแสดงรหัสแหล่งข้อมูล M ของค่าคงที่",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "รับการแสดงรหัสแหล่งข้อมูล M ของค่าตัวเลข",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "รับการแสดงรหัสแหล่งข้อมูล M ของค่าวันที่",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "รับการแสดงรหัสแหล่งข้อมูล M ของค่าข้อความ",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "ส่งกลับผลลัพธ์ของการประเมินนิพจน์ M",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการประเมินนิพจน์ M <code>document</code> ด้วยตัวระบุที่พร้อมใช้งานซึ่งสามารถอ้างอิงและกำหนดได้โดย <code>environment</code>",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "ประเมินผลรวมแบบง่าย",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "ประเมินผลรวมที่ซับซ้อนยิ่งขึ้น",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "ประเมินการเรียงต่อกันของค่าข้อความด้วยตัวระบุ",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "ส่งกลับการแสดงรหัสแหล่งข้อมูล M ของตัวระบุ",
        "Documentation.LongDescription": "ส่งกลับการแสดงรหัสแหล่งข้อมูล M ของตัวระบุ <code>name</code>",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "รับการแสดงรหัสแหล่งข้อมูล M ของตัวระบุ",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "รับการแสดงรหัสแหล่งข้อมูล M ของตัวระบุที่มีที่ว่าง",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "ส่งกลับเนื้อหาของแฟ้มที่ระบุเป็นไบนารี",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของไฟล์ <code>path</code> เป็นไบนารี พารามิเตอร์ <code>options</code> มีไว้สําหรับใช้ภายในเท่านั้นในขณะนี้",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "ส่งคืนค่าว่าจะมีการใช้ฟังก์ชันที่กำหนดไว้เป็นแหล่งข้อมูลหรือไม่",
        "Documentation.LongDescription": "ส่งคืนค่าว่าจะมีการใช้ <code>function</code> เป็นแหล่งข้อมูลหรือไม่",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "แปลข้อความแสดงแทนค่าทางภูมิศาสตร์ที่อยู่ในรูปแบบ Well-Known Text (WKT) เป็นระเบียนที่มีโครงสร้าง",
        "Documentation.LongDescription": "แปลข้อความแสดงแทนค่าทางภูมิศาสตร์ที่อยู่ในรูปแบบ Well-Known Text (WKT) เป็นระเบียนที่มีโครงสร้าง WKT เป็นรูปแบบมาตรฐานที่กำหนดโดย Open Geospatial Consortium (OGC) และเป็นรูปแบบการจัดเรียงแบบอนุกรมทั่วไปที่ใช้โดยฐานข้อมูล รวมทั้ง SQL Server",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "แปลค่าจุดทางภูมิศาสตร์ที่มีโครงสร้างเป็นข้อความแสดงแทน Well-Known Text (WKT)",
        "Documentation.LongDescription": "แปลค่าจุดทางภูมิศาสตร์ที่มีโครงสร้างเป็นข้อความแสดงแทน Well-Known Text (WKT) ตามที่กำหนดโดย Open Geospatial Consortium (OGC) นอกจากนี้ยังเป็นรูปแบบการจัดเรียงแบบอนุกรมที่ใช้โดยฐานข้อมูลจำนวนมาก รวมทั้ง SQL Server",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "แปลข้อความแสดงแทนค่าเรขาคณิตที่อยู่ในรูปแบบ Well-Known Text (WKT) เป็นระเบียนที่มีโครงสร้าง",
        "Documentation.LongDescription": "แปลข้อความแสดงแทนค่าเรขาคณิตที่อยู่ในรูปแบบ Well-Known Text (WKT) เป็นระเบียนที่มีโครงสร้าง WKT เป็นรูปแบบมาตรฐานที่กำหนดโดย Open Geospatial Consortium (OGC) และเป็นรูปแบบการจัดเรียงแบบอนุกรมทั่วไปที่ใช้โดยฐานข้อมูล รวมทั้ง SQL Server",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "แปลค่าจุดทางเรขาคณิตที่มีโครงสร้างเป็นข้อความแสดงแทน Well-Known Text (WKT)",
        "Documentation.LongDescription": "แปลค่าจุดทางเรขาคณิตที่มีโครงสร้างเป็นข้อความแสดงแทน Well-Known Text (WKT) ตามที่กำหนดโดย Open Geospatial Consortium (OGC) นอกจากนี้ยังเป็นรูปแบบการจัดเรียงแบบอนุกรมที่ใช้โดยฐานข้อมูลจำนวนมาก รวมทั้ง SQL Server",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "ส่งกลับค่า guid จากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>Guid.Type</code> จาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Guid.From</code> จะส่งกลับค่า <code>null</code>  จะมีดำเนินการตรวจสอบเพื่อกำหนดว่า <code>value</code> ที่กำหนดอยู่ในรูปแบบที่ยอมรับได้หรือไม่ รูปแบบที่ยอมรับได้มีอยู่ในตัวอย่าง",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "สามารถระบุ Guid เป็นเลขฐานสิบหกที่ติดกัน 32 หลัก",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid สามารถระบุเป็นเลขฐานสิบหก 32 หลักที่คั่นด้วยเครื่องหมายยัติภังค์ลงในบล็อกของ 8-4-4-4-12",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid สามารถระบุเป็นเลขฐานสิบหก 32 หลักที่คั่นด้วยเครื่องหมายยัติภังค์และล้อมรอบด้วยวงเล็บปีกกา",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "Guid สามารถระบุเป็นเลขฐานสิบหก 32 หลักที่คั่นด้วยเครื่องหมายยัติภังค์และล้อมรอบด้วยวงเล็บ",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "สร้างจำนวนเต็ม 16 บิตจากค่าที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> จํานวนเต็ม 16 บิตจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Int16.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงของจํานวนเต็ม 16 บิตโดยไม่มีเศษส่วน ระบบจะส่งกลับ <code>value</code> ถ้ามีเศษส่วน ระบบจะปัดเศษตัวเลขดังกล่าวตามโหมดการปัดเศษที่ระบุไว้ โหมดการปัดเศษเริ่มต้นคือ <code>RoundingMode.ToEven</code> ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> โปรดดู <code>Number.Round</code> สําหรับโหมดการปัดเศษที่ใช้งานได้ อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 16 บิตสำหรับ <code>\"4\"</code>",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 16 บิตสำหรับ <code>\"4.5\"</code> โดยใช้ <code>RoundingMode.AwayFromZero</code>",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "สร้างจำนวนเต็ม 32 บิตจากค่าที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> จํานวนเต็ม 32 บิตจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Int32.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงของจํานวนเต็ม 32 บิตโดยไม่มีเศษส่วน ระบบจะส่งกลับ <code>value</code> ถ้ามีเศษส่วน ระบบจะปัดเศษตัวเลขดังกล่าวตามโหมดการปัดเศษที่ระบุไว้ โหมดการปัดเศษเริ่มต้นคือ <code>RoundingMode.ToEven</code> ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> โปรดดู <code>Number.Round</code> สําหรับโหมดการปัดเศษที่ใช้งานได้ อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 32 บิตสำหรับ <code>\"4\"</code>",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 32 บิตสำหรับ <code>\"4.5\"</code> โดยใช้ <code>RoundingMode.AwayFromZero</code>",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "สร้างจำนวนเต็ม 64 บิตจากค่าที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> จํานวนเต็ม 64 บิตจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Int64.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงของจํานวนเต็ม 64 บิตโดยไม่มีเศษส่วน ระบบจะส่งกลับ <code>value</code> ถ้ามีเศษส่วน ระบบจะปัดเศษตัวเลขดังกล่าวตามโหมดการปัดเศษที่ระบุไว้ โหมดการปัดเศษเริ่มต้นคือ <code>RoundingMode.ToEven</code> ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> โปรดดู <code>Number.Round</code> สําหรับโหมดการปัดเศษที่ใช้งานได้ อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่าจำนวนเต็ม 64 บิต <code>number</code> ของ  <code>\"4\"</code>",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "รับค่า<code>ตัวเลข</code>ที่เป็นจำนวนเต็ม 64 บิตของ <code>\"4.5\"</code> โดยใช้ <code>RoundingMode.AwayFromZero</code>",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "สร้างจำนวนเต็ม 8 บิตที่มีเครื่องหมายจากค่าที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> จํานวนเต็ม 8 บิตที่มีเครื่องหมายจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Int8.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงของจํานวนเต็ม 8 บิตที่มีเครื่องหมายโดยไม่มีเศษส่วน ระบบจะส่งกลับ <code>value</code> ถ้ามีเศษส่วน ระบบจะปัดเศษตัวเลขดังกล่าวตามโหมดการปัดเศษที่ระบุไว้ โหมดการปัดเศษเริ่มต้นคือ <code>RoundingMode.ToEven</code> ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> โปรดดู <code>Number.Round</code> สําหรับโหมดการปัดเศษที่ใช้งานได้ อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 8 บิตที่มีเครื่องหมายสำหรับ <code>\"4\"</code>",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็นจำนวนเต็ม 8 บิตที่มีเครื่องหมายสำหรับ <code>\"4.5\"</code> โดยใช้ <code>RoundingMode.AwayFromZero</code>",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) สําหรับเนื้อความของฟังก์ชัน",
        "Documentation.LongDescription": "<p>ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) สำหรับเนื้อความของ <code>function</code> ปรับให้เป็นมาตรฐานใน<i>นิพจน์รายการ</i>:\r\n<ul>\r\n  <li>ฟังก์ชันต้องเป็น lambda ชนิดอาร์กิวเมนต์ 1</li>\r\n  <li>การอ้างอิงทั้งหมดไปยังพารามิเตอร์ฟังก์ชันจะถูกแทนที่ด้วย <code>ItemExpression.Item</code></li>\r\n  <li>AST จะง่ายขึ้นเพื่อให้มีเฉพาะโหนดชนิด:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>จะมีการแสดงข้อผิดพลาด ถ้าไม่สามารถส่งกลับนิพจน์รายการ AST สำหรับเนื้อความของ <code>function</code></p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืน AST สำหรับเนื้อความของฟังก์ชัน <code>each _ <> null</code>",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "ส่งกลับเนื้อหาของเอกสาร JSON",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเอกสาร JSON",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "สร้างข้อมูลแสดง JSON ด้วยค่าที่กำหนดไว้",
        "Documentation.LongDescription": "<p>สร้างการแสดง JSON จากค่าที่กำหนดไว้ <code>value</code> ด้วยการเข้ารหัสข้อความที่ระบุไว้โดย <code>encoding</code> หากมีการละเว้น <code>encoding</code> จะมีการใช้ UTF8 จะมีการแสดงค่าดังต่อไปนี้:</p>\r\n <ul>\r\n        <li>จะมีการแสดงค่า Null ข้อความตัวอักษร และค่าที่เป็นตรรกะเป็นชนิด JSON ที่เกี่ยวข้อง</li>\r\n        <li>จะมีการแสดงตัวเลขเป็นตัวเลขใน JSON ยกเว้น <code>#infinity</code>, <code>-#infinity</code> และ <code>#nan</code> ซึ่งจะได้รับการแปลงค่า Null</li>\r\n        <li>จะมีการแสดงรายการเป็นอาร์เรย์ JSON</li>\r\n        <li>จะมีการแสดงระเบียนเป็นวัตถุ JSON</li>\r\n        <li>จะมีการแสดงตารางเป็นอาร์เรย์ของวัตถุ</li>\r\n        <li>จะมีการแสดงวันที่ เวลา datetimes, datetimezones และระยะเวลาเป็นข้อความตัวอักษร ISO-8601</li>\r\n        <li>จะมีการแสดงค่าไบนารีเป็นข้อความตัวอักษรที่ได้รับการเข้ารหัสเป็นฐาน 64</li>\r\n        <li>ชนิดและฟังก์ชันจะแสดงข้อผิดพลาด</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "แปลงค่าที่ซับซ้อนให้เป็น JSON",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "แปลงค่าไบนารีเป็นรายการค่าข้อความที่แบ่งด้วยตัวแบ่งบรรทัด  ถ้ามีการระบุตัวคั่น ตัวแบ่งบรรทัดอาจปรากฏในเครื่องหมายอัญประกาศ  ถ้า includeLineSeparators เป็นจริง อักขระตัวแบ่งบรรทัดจะรวมอยู่ในข้อความ",
        "Documentation.LongDescription": "แปลงค่าไบนารีเป็นรายการค่าข้อความที่แบ่งด้วยตัวแบ่งบรรทัด  ถ้ามีการระบุตัวคั่น ตัวแบ่งบรรทัดอาจปรากฏในเครื่องหมายอัญประกาศ  ถ้า includeLineSeparators เป็นจริง อักขระตัวแบ่งบรรทัดจะรวมอยู่ในข้อความ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "แปลงค่าข้อความเป็นรายการค่าข้อความที่แบ่งด้วยตัวแบ่งบรรทัด หาก includeLineSeparators เป็นจริง จะมีการรวมอักขระตัวแบ่งบรรทัดในข้อความ",
        "Documentation.LongDescription": "แปลงค่าข้อความเป็นรายการค่าข้อความโดยแยกที่ตัวแบ่งบรรทัด หาก includeLineSeparators เป็นจริง จะมีการรวมอักขระตัวแบ่งบรรทัดไว้ในข้อความ\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (ค่าเริ่มต้น) ไม่ต้องปิดข้อความด้วยเครื่องหมายคำพูด</li>\r\n            <li><code>QuoteStyle.Csv:</code> ปิดข้อความด้วยเครื่องหมายคำพูดตาม Csv จะมีการใช้อักขระเครื่องหมายคำพูดคู่เพื่อกำหนดเขต และจะมีการใช้อักขระเครื่องหมายคำพูดคู่สองอันเพื่อระบุอักขระเครื่องหมายคำพูดคู่เดี่ยวภายในเขต </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "แปลงรายการข้อความเป็นค่าไบนารีโดยใช้การเข้ารหัสและ lineSeparator ที่ระบุ จากนั้น lineSeparator จะถูกผนวกเข้ากับแต่ละบรรทัด  ถ้าไม่มีการระบุ อักขระขึ้นบรรทัดใหม่และอักขระเลื่อนจะถูกใช้งาน",
        "Documentation.LongDescription": "แปลงรายการข้อความเป็นค่าไบนารีโดยใช้การเข้ารหัสและ lineSeparator ที่ระบุ จากนั้น lineSeparator จะถูกผนวกเข้ากับแต่ละบรรทัด  ถ้าไม่มีการระบุ อักขระขึ้นบรรทัดใหม่และอักขระเลื่อนจะถูกใช้งาน",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "แปลงรายการข้อความเป็นข้อความเดียว  lineSeparator ที่ระบุจะถูกผนวกกับแต่ละบรรทัด  ถ้าไม่มีการระบุ อักขระขึ้นบรรทัดใหม่และอักขระเลื่อนจะถูกใช้งาน",
        "Documentation.LongDescription": "แปลงรายการข้อความเป็นข้อความเดียว  lineSeparator ที่ระบุจะถูกผนวกกับแต่ละบรรทัด  ถ้าไม่มีการระบุ อักขระขึ้นบรรทัดใหม่และอักขระเลื่อนจะถูกใช้งาน",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "ส่งกลับเป็น true ถ้านิพจน์ทั้งหมดเป็น true",
        "Documentation.LongDescription": "ส่งกลับเป็น true ถ้านิพจน์ทั้งหมดในรายการ <code>list</code> เป็น true",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่านิพจน์ทั้งหมดในรายการ {true, true, 2 > 0} เป็น true หรือไม่",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "กำหนดว่านิพจน์ทั้งหมดในรายการ {true, true, 2 < 0} เป็น true หรือไม่",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "ส่งกลับเป็น true ถ้านิพจน์ใดๆ เป็น true",
        "Documentation.LongDescription": "ส่งกลับเป็น true ถ้านิพจน์ใดๆ ในรายการ <code>list</code> เป็น true",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่านิพจน์ใดๆ ในรายการ {true, false, 2 > 0} เป็น true หรือไม่",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "กำหนดว่านิพจน์ใดๆ ในรายการ {2 = 0, false, 2 < 0} เป็น true หรือไม่",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "ส่งกลับค่าเฉลี่ยของค่าต่างๆ ใช้งานค่าตัวเลข วันที่ วันที่เวลา โซนวันที่เวลา และระยะเวลา",
        "Documentation.LongDescription": "ส่งกลับค่าเฉลี่ยสำหรับข้อมูลในรายการ <code>list</code> ผลลัพธ์จะเป็นชนิดข้อมูลเดียวกันกับค่าในรายการ เฉพาะการใช้งานค่าตัวเลข วันที่ เวลา วันที่เวลา โซนวันที่เวลา และระยะเวลา เท่านั้น\r\n    ถ้ารายการว่างเปล่า ค่า Null จะถูกส่งกลับ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "หาค่าเฉลี่ยของรายการตัวเลข <code>{3, 4, 6}</code>",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "หาค่าเฉลี่ยของค่าวันที่ 1 มกราคม 2011, 2 มกราคม 2011 และ 3 มกราคม 2011",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "บัฟเฟอร์รายการ",
        "Documentation.LongDescription": "บัฟเฟอร์รายการ <code>list</code> ในหน่วยความจำ ผลลัพธ์ของการเรียกนี้คือรายการที่เสถียร",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "สร้างสำเนาที่เสถียรของรายการ {1..10}",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "ส่งกลับรายการเดียวโดยรวมหลายรายการ",
        "Documentation.LongDescription": "ใช้รายการของรายการ <code>lists</code> และรวมเป็นหนึ่งรายการใหม่",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "รวมสองรายการง่ายๆ {1, 2} และ {3, 4}",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "รวมสองรายการ {1, 2} และ {3, {4, 5}} หนึ่งในนั้นจะมีรายการที่ซ้อนกัน",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "ส่งกลับจำนวนข้อมูลในรายการ",
        "Documentation.LongDescription": "ส่งกลับจำนวนข้อมูลในรายการ <code>list</code>",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "หาจำนวนของค่าในรายการ {1, 2, 3}",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "ส่งกลับรายการค่าที่ลบค่าที่ซ้ำออก",
        "Documentation.LongDescription": "ส่งกลับรายการซึ่งมีค่าทั้งหมดในรายการ <code>list</code> พร้อมลบค่าที่ซ้ำออก ถ้ารายการว่างเปล่า ผลลัพธ์จะเป็นรายการว่างเปล่า",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "เอาค่าที่ซ้ำออกจากรายการ {1, 1, 2, 3, 3, 3}",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "ส่งกลับค่าแรกของรายการหรือค่าเริ่มต้นที่ระบุหากว่างเปล่า",
        "Documentation.LongDescription": "ส่งกลับข้อมูลแรกในรายการ <code>list</code> หรือค่าเริ่มต้น <code>defaultValue</code> ที่มีให้เลือก ถ้ารายการว่างเปล่า\r\n    ถ้ารายการว่างเปล่าและไม่มีการระบุค่าเริ่มต้น ฟังก์ชันจะส่งกลับ <code>null</code>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าแรกในรายการ {1, 2, 3}",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "ค้นหาค่าแรกในรายการ {} ถ้ารายการว่างเปล่า ให้ส่งกลับ -1",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "ส่งกลับส่วนที่ซ้ำกันของค่ารายการที่พบในค่าที่ป้อน",
        "Documentation.LongDescription": "ส่งกลับส่วนที่ซ้ำกันของค่ารายการที่พบในรายการค่าที่ป้อน <code>lists</code> พารามิเตอร์ที่เลือกได้ <code>equationCriteria</code> สามารถระบุได้",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "หาส่วนที่ซ้ำกันของรายการ {1..5}, {2..6}, {3..7}",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "ระบุว่ามีค่าซ้ำในรายการหรือไม่",
        "Documentation.LongDescription": "ส่งกลับค่าเชิงตรรกะว่ามีค่าซ้ำในรายการหรือไม่ <code>list</code>; <code>true</code> ถ้ารายการไม่ซ้ำ <code>false</code> ถ้ามีค่าซ้ำ ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3} ไม่ซ้ำหรือไม่ (เช่น ไม่มีรายการซ้ำ)",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "ค้นหาว่ารายการ {1, 2, 3, 3} ไม่ซ้ำหรือไม่ (เช่น ไม่มีรายการซ้ำ)",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "ส่งกลับเป็น true ถ้ารายการว่างเปล่า",
        "Documentation.LongDescription": "ส่งกลับ <code>true</code> ถ้ารายการ <code>list</code> ไม่มีค่าใดๆ (ความยาว 0) ถ้ารายการมีค่า (ความยาว > 0) จะส่งกลับ <code>false</code>",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "หาว่ารายการ {} ว่างเปล่าหรือไม่",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "หาว่ารายการ {1, 2} ว่างเปล่าหรือไม่",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "ส่งกลับค่าสุดท้ายของรายการหรือค่าเริ่มต้นที่ระบุหากว่างเปล่า",
        "Documentation.LongDescription": "ส่งกลับข้อมูลสุดท้ายในรายการ <code>list</code> หรือค่าเริ่มต้น <code>defaultValue</code> ที่มีให้เลือก ถ้ารายการว่างเปล่า\r\n    ถ้ารายการว่างเปล่าและไม่มีการระบุค่าเริ่มต้น ฟังก์ชันจะส่งกลับ <code>null</code>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าสุดท้ายในรายการ {1, 2, 3}",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "ค้นหาค่าสุดท้ายในรายการ {} หรือ -1 หากค่าว่างเปล่า",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "ส่งกลับค่าล่าสุดในรายการ  สามารถเลือกระบุจำนวนค่าที่จะส่งกลับหรือเงื่อนไขที่เหมาะสมหรือไม่ก็ได้",
        "Documentation.LongDescription": "ส่งกลับรายการล่าสุดของรายการ <code>list</code> ถ้ารายการว่างเปล่า ระบบจะแสดงข้อยกเว้น\r\n ฟังก์ชันนี้ใช้พารามิเตอร์ที่เลือกได้ <code>countOrCondition</code> เพื่อสนับสนุนการรวบรวมหลายรายการหรือการกรองรายการ สามารถระบุ <code>countOrCondition</code> ได้สามวิธี:\r\n <ul>\r\n  <li>ถ้ามีการระบุจำนวน จะมีการส่งกลับหลายรายการได้สูงสุดตามจำนวนดังกล่าว </li>\r\n  <li>ถ้ามีการระบุเงื่อนไข จะมีการส่งกลับรายการทั้งหมดซึ่งตรงตามเงื่อนไขในเบื้องต้น โดยเริ่มต้นที่ส่วนท้ายของรายการ เมื่อรายการใดรายการหนึ่งไม่เป็นไปตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป </li>\r\n  <li>ถ้าพารามิเตอร์เป็น Null จะมีการส่งกลับรายการสุดท้ายในรายการ</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าสุดท้ายในรายการ {3, 4, 5, -1, 7, 8, 2}",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "ค้นหาค่าสุดท้ายในรายการ {3, 4, 5, -1, 7, 8, 2} ที่มากกว่า 0",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "ส่งกลับค่าสูงสุดหรือค่าเริ่มต้นสำหรับรายการว่างเปล่า",
        "Documentation.LongDescription": "ส่งคืนข้อมูลสูงสุดในรายการ <code>list</code> หรือค่าเริ่มต้น <code>default</code> ที่มีให้เลือก ถ้ารายการว่างเปล่า\r\n    อาจระบุค่า เกณฑ์การเปรียบเทียบ <code>comparisonCriteria</code> ที่เลือกได้เพื่อกำหนดวิธีเปรียบเทียบข้อมูลในรายการ ถ้าพารามิเตอร์เป็น null จะมีการใช้ตัวเปรียบเทียบเริ่มต้น",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "หาค่าสูงสุดในรายการ {1, 4, 7, 3, -2, 5}",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "ค้นหาค่าสูงสุดในรายการ {} หรือส่งกลับ -1 หากค่าว่างเปล่า ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "ส่งกลับค่ากลางในรายการ",
        "Documentation.LongDescription": "ส่งคืนข้อมูลค่ามัธยฐานของรายการ <code>list</code> ฟังก์ชันนี้ส่งกลับค่า <code>null</code> ถ้ารายการไม่มีค่าที่ไม่ใช่ <code>null</code>\r\n    ถ้ามีรายการเป็นจำนวนคู่ ฟังก์ชันเลือกข้อมูลค่ามัธยฐานสองรายการที่มีขนาดเล็กกว่าเว้นแต่รายการจะ\r\n    ประกอบด้วยวันที่เวลา ระยะเวลา จำนวน หรือเวลาทั้งหมด ในกรณีนี้ จะส่งคืนค่าเฉลี่ยของสองรายการ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "หาข้อมูลกลางของรายการ <code>{5, 3, 1, 7, 9}</code>",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "ส่งกลับค่าต่ำสุดหรือค่าเริ่มต้นสำหรับรายการว่างเปล่า",
        "Documentation.LongDescription": "ส่งคืนข้อมูลต่ำสุดในรายการ <code>list</code> หรือค่าเริ่มต้น <code>default</code> ที่มีให้เลือก ถ้ารายการว่างเปล่า\r\n    อาจระบุค่า เกณฑ์การเปรียบเทียบ <code>comparisonCriteria</code> ที่เลือกได้เพื่อกำหนดวิธีเปรียบเทียบข้อมูลในรายการ ถ้าพารามิเตอร์เป็น null จะมีการใช้ตัวเปรียบเทียบเริ่มต้น",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "หาค่าต่ำสุดในรายการ {1, 4, 7, 3, -2, 5}",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "ค้นหาค่าต่ำสุดในรายการ {} หรือส่งกลับ -1 หากค่าว่างเปล่า ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "ส่งกลับค่าที่ใช้บ่อยสุดในรายการ",
        "Documentation.LongDescription": "ส่งคืนข้อมูลที่ปรากฏบ่อยที่สุดในรายการ <code>list</code> ถ้าค่าว่างเปล่า ระบบจะแสดงข้อยกเว้น ถ้าหลายรายการปรากฏด้วยความถี่สูงสุดเดียวกัน รายการสุดท้ายจะถูกเลือก\r\n    สามารถระบุค่า <code>เกณฑ์การเปรียบเทียบ</code> ที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "หาข้อมูลที่ปรากฏบ่อยที่สุดในรายการ <code>{\"A\", 1, 2, 3, 3, 4, 5}</code>",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "หาข้อมูลที่ปรากฏบ่อยที่สุดในรายการ <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "ส่งกลับรายการของค่าที่ใช้บ่อยที่สุดในรายการ",
        "Documentation.LongDescription": "ส่งคืนข้อมูลที่ปรากฏบ่อยที่สุดในรายการ <code>list</code> ถ้าค่าว่างเปล่า ระบบจะแสดงข้อยกเว้น ถ้าหลายรายการปรากฏด้วยความถี่สูงสุดเดียวกัน รายการสุดท้ายจะถูกเลือก\r\n    สามารถระบุค่า <code>เกณฑ์การเปรียบเทียบ</code> ที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "หาข้อมูลที่ปรากฏบ่อยที่สุดในรายการ <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "ส่งกลับจำนวนข้อมูลที่ไม่ใช่ Null ในรายการ",
        "Documentation.LongDescription": "ส่งกลับจำนวนข้อมูลที่ไม่ใช่ Null ในรายการ <code>list</code>",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "ส่งกลับรายการออฟเซตสำหรับค่าที่ป้อน",
        "Documentation.LongDescription": "ส่งกลับรายการออฟเซตสำหรับรายการค่าที่ป้อน <code>list</code>\r\n    เมื่อใช้ List.Transform เพื่อเปลี่ยนรายการ จะสามารถใช้รายการตำแหน่งเพื่อให้การเข้าถึงการแปลงไปยังตำแหน่งได้",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "หาออฟเซตของค่าในรายการ {1, 2, 3, 4, null, 5}",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "ส่งกลับผลิตภัณฑ์ของตัวเลขในรายการ",
        "Documentation.LongDescription": "ส่งกลับผลิตภัณฑ์ของตัวเลขที่ไม่ใช่ค่า Null ในรายการ <code>numbersList</code> ส่งกลับ nulll ถ้าไม่มีค่าที่ไม่ใช่ null ในรายการ",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "หาผลิตภัณฑ์ของจำนวนในรายการ <code>{1, 2, 3, 3, 4, 5, 5}</code>",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "ส่งกลับรายการของตัวเลขสุ่ม",
        "Documentation.LongDescription": "คืนค่ารายการตัวเลขสุ่มระหว่าง 0 และ 1 ที่ได้รับจำนวนของค่าที่จะสร้างและค่าข้อมูลเริ่มต้นที่เลือกได้ \r\n<ul>\r\n   <li><code>count</code>: จำนวนค่าสุ่มที่จะสร้าง</li>\r\n   <li><code>seed</code>:  <i>[ระบุหรือไม่ก็ได้]</i> ค่าตัวเลขที่ใช้ในการ Seed ตัวสร้างตัวเลขสุ่ม  ถ้าละเว้น รายการที่ไม่ซ้ำของตัวเลขสุ่มจะถูกสร้างในแต่ละครั้งที่คุณเรียกใช้ฟังก์ชัน  ถ้าคุณระบุค่าข้อมูลเริ่มต้นด้วยตัวเลข ทุกครั้งที่เรียกฟังก์ชันจะสร้างรายการเดียวกันของตัวเลขสุ่ม</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการของ 3 ตัวเลขสุ่ม",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "สร้างรายการของ 3 ตัวเลขสุ่มโดยระบุค่า Seed",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "ส่งกลับรายการซึ่งข้ามจำนวนที่ระบุขององค์ประกอบที่จุดเริ่มต้นของรายการ",
        "Documentation.LongDescription": "ส่งกลับรายการที่จะเอาองค์ประกอบแรกของรายการ <code>list</code> ออกถ้า <code>list</code> เป็นรายการที่ว่างเปล่า จะมีการส่งกลับรายการที่ว่างเปล่า\r\nฟังก์ชันนี้จะใช้พารามิเตอร์ที่เลือกได้ <code>countOrCondition</code> เพื่อสนับสนุนการเอาหลายค่าออกตามที่แสดงรายการด้านล่าง\r\n <ul>\r\n <li>ถ้ามีการระบุจำนวน จะมีการเอาหลายข้อมูลออกได้สูงสุดตามจำนวนดังกล่าว</li>\r\n <li>ถ้ามีการระบุเงื่อนไข รายการที่ส่งกลับจะเริ่มต้นด้วยองค์ประกอบแรกใน <code>list</code> ที่ตรงกับเงื่อนไขนั้น เมื่อรายการใดรายการหนึ่งไม่เป็นไปตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป </li>\r\n <li>ถ้าพารามิเตอร์เป็น null จะมีการปฏิบัติตามลักษณะการทำงานเริ่มต้น </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจาก {1, 2, 3, 4, 5} โดยไม่มี 3 จำนวนแรก",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "สร้างรายการจาก {5, 4, 2, 6, 1} ที่เริ่มต้นด้วยจำนวนที่น้อยกว่า 3",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "ส่งกลับรายการซึ่งเอาจำนวนที่ระบุขององค์ประกอบออกจากจุดสิ้นสุดของรายการ",
        "Documentation.LongDescription": "ส่งกลับรายการซึ่งเอาองค์ประกอบ <code>countOrCondition</code>สุดท้ายออกจากจุดสิ้นสุดของรายการ <code>list</code>ถ้า <code>list</code> น้อยกว่า <code>countOrCondition</code> องค์ประกอบ จะมีการส่งกลับรายการที่ว่างเปล่า\r\n <ul>\r\n <li>ถ้ามีการระบุจำนวน จะมีการเอาหลายข้อมูลออกได้สูงสุดตามจำนวนดังกล่าว</li>\r\n <li>ถ้ามีการระบุเงื่อนไข รายการที่ส่งกลับจะสิ้นสุดด้วยองค์ประกอบแรกจากด้านล่างสุดใน <code>list</code> ที่ตรงกับเงื่อนไขนั้นเมื่อรายการใดรายการหนึ่งไม่เป็นไปตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป</li>\r\n <li>ถ้าพารามิเตอร์เป็น Null จะมีการลบออกเพียงรายการเดียว</li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจาก {1, 2, 3, 4, 5} โดยไม่มี 3 จำนวนสุดท้าย",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "สร้างรายการจาก {5, 4, 2, 6, 4} ที่สิ้นสุดด้วยจำนวนที่น้อยกว่า 3",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "เอาค่า \"null\" ทั้งหมดออกจากรายการที่ระบุ",
        "Documentation.LongDescription": "เอาการปรากฏทั้งหมดของค่า \"null\" ใน <code>list</code> ออก ถ้าไม่มีค่า 'null' ในรายการ จะมีการส่งกลับรายการเดิม",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "เอาค่า \"null\" ออกจากรายการ {1, 2, 3, null, 4, 5, null, 6}",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "ย้อนกลับลำดับของค่าในรายการ",
        "Documentation.LongDescription": "ส่งกลับรายการซึ่งมีค่าในรายการ <code>list</code> ในลำดับย้อนกลับ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจาก {1..10} ในลำดับย้อนกลับ",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "ส่งกลับหนึ่งข้อมูลในรายการสำหรับรายการที่มีความยาวเป็นหนึ่ง มิฉะนั้นให้แสดงข้อยกเว้น",
        "Documentation.LongDescription": "ถ้ามีเพียงข้อมูลเดียวในรายการ <code>list</code> ให้ส่งกลับข้อมูลนั้น \r\n    ถ้ามีข้อมูลมากกว่าหนึ่งข้อมูลหรือรายการว่างเปล่า ฟังก์ชันจะแสดงข้อยกเว้น",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าเดียวในรายการ {1}",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "ค้นหาค่าเดียวในรายการ {1, 2, 3}",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "ส่งกลับหนึ่งข้อมูลในรายการสำหรับรายการที่มีความยาวเป็นหนึ่ง และค่าเริ่มต้นสำหรับรายการที่ว่างเปล่า",
        "Documentation.LongDescription": "ถ้ามีเพียงข้อมูลเดียวในรายการ <code>list</code> ให้ส่งกลับข้อมูลนั้น\r\n    ถ้ารายการว่างเปล่า ฟังก์ชันจะส่งกลับ null เว้นแต่จะมีการระบุ <code>default</code> เพิ่มเติม ถ้าในรายการมีมากกว่าหนึ่งข้อมูล ฟังก์ชันจะส่งกลับข้อผิดพลาด",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าเดียวในรายการ {1}",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "ค้นหาค่าเดียวในรายการ {}",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "ค้นหาค่าเดียวในรายการ {} ถ้ารายการว่างเปล่า ให้ส่งกลับ -1",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "ส่งกลับรายการซึ่งข้ามจำนวนที่ระบุขององค์ประกอบที่จุดเริ่มต้นของรายการ",
        "Documentation.LongDescription": "ส่งกลับรายการที่ข้ามองค์ประกอบแรกของรายการ <code>list</code> ถ้า <code>list</code> เป็นรายการที่ว่างเปล่า จะมีการส่งกลับรายการที่ว่างเปล่า\r\nฟังก์ชันนี้จะใช้พารามิเตอร์ที่เลือกได้ <code>countOrCondition</code> เพื่อสนับสนุนการข้ามหลายค่าตามที่แสดงรายการด้านล่าง\r\n <ul>\r\n <li>ถ้ามีการระบุจำนวน จะมีการข้ามหลายข้อมูลได้สูงสุดตามจำนวนดังกล่าว </li>\r\n <li>ถ้ามีการระบุเงื่อนไข รายการที่ส่งกลับจะเริ่มต้นด้วยองค์ประกอบแรกใน <code>list</code> ที่ตรงกับเงื่อนไขนั้น เมื่อรายการใดรายการหนึ่งไม่เป็นไปตามเงื่อนไข จะไม่มีการพิจารณารายการถัดไป </li>\r\n <li>ถ้าพารามิเตอร์เป็น null จะมีการปฏิบัติตามลักษณะการทำงานเริ่มต้น </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการจาก {1, 2, 3, 4, 5} โดยไม่มี 3 จำนวนแรก",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "สร้างรายการจาก {5, 4, 2, 6, 1} ที่เริ่มต้นด้วยจำนวนที่น้อยกว่า 3",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "เรียงลำดับรายการข้อมูลตามเกณฑ์ที่ระบุ",
        "Documentation.LongDescription": "เรียงลําดับรายการข้อมูล <code>list</code> ตามเกณฑ์ที่เลือกได้ที่ระบุไว้\r\n    พารามิเตอร์ที่เลือกได้ <code>comparisonCriteria</code> สามารถระบุเป็นเกณฑ์การเปรียบเทียบได้ ซึ่งสามารถใช้ค่าต่อไปนี้:\r\n    <ul>\r\n    <li>เมื่อต้องการควบคุมลําดับ เกณฑ์การเปรียบเทียบอาจเป็นค่า Order Enum (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li>\r\n    <li> เมื่อต้องการคํานวณคีย์ที่จะใช้สําหรับการเรียงลําดับ สามารถใช้ฟังก์ชัน 1 อาร์กิวเมนต์ได้ </li>\r\n    <li> เมื่อต้องการเลือกทั้งคีย์และลําดับการควบคุม เกณฑ์การเปรียบเทียบสามารถเป็นรายการที่มีคีย์และลําดับได้ (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> เมื่อต้องการควบคุมการเปรียบเทียบอย่างสมบูรณ์ สามารถใช้ฟังก์ชัน 2 อาร์กิวเมนต์ได้ ฟังก์ชันนี้จะถูกส่งผ่านสองรายการจากรายการ (สองรายการใดๆ ในลําดับใดๆ) ฟังก์ชันควรส่งกลับค่าใดค่าหนึ่งต่อไปนี้:\r\n        <ul>\r\n            <li> <code>-1</code>: รายการแรกน้อยกว่ารายการที่สอง </li>\r\n            <li> <code>0</code>: รายการเท่ากัน</li>\r\n            <li><code>1</code>: รายการแรกมากกว่ารายการที่สอง</li>\r\n        </ul>\r\n        Value.Compare เป็นวิธีที่สามารถใช้ในการมอบหมายตรรกะนี้ได้ </li>\r\n    </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "เรียงลำดับรายการ {2, 3, 1}",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "เรียงลำดับรายการ {2, 3, 1} จากมากไปหาน้อย",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "เรียงลำดับรายการ {2, 3, 1} จากมากไปหาน้อยโดยใช้เมธอด Value.Compare",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "ส่งกลับการประมาณค่าเบี่ยงมาตรฐานโดยอิงตามตัวอย่าง",
        "Documentation.LongDescription": "ส่งคืนตัวอย่างที่อิงตามการประมาณค่าเบี่ยงเบนมาตรฐานของค่าในรายการ <code>numbersList</code>\r\n    ถ้า <code>numbersList</code> เป็นรายการจำนวน จะมีการส่งคืนจำนวน\r\n    เกิดข้อยกเว้นขึ้นกับรายการที่ว่างเปล่าหรือรายการข้อมูลที่ไม่ใช่ชนิด <code>ตัวเลข</code>",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าเบี่ยงเบนมาตรฐานของจำนวน 1 ถึง 5",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "ส่งกลับผลรวมของข้อมูลในรายการ",
        "Documentation.LongDescription": "ส่งกลับผลรวมของค่าที่ไม่ใช่ null ในรายการ <code>list</code>  ส่งกลับ nulll ถ้าไม่มีค่าที่ไม่ใช่ null ในรายการ",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "หาผลรวมของจำนวนในรายการ <code>{1, 2, 3}</code>",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "ส่งกลับยูเนียนของค่ารายการที่พบในค่าที่ป้อน",
        "Documentation.LongDescription": "ใช้รายการของรายการ <code>lists</code> ซึ่งรวมข้อมูลในแต่ละรายการ และส่งกลับข้อมูลเหล่านั้นในรายการผลลัพธ์ ผลลัพธ์ที่ได้คือ รายการที่ส่งกลับจะประกอบด้วยข้อมูลทั้งหมดในรายการค่าที่ป้อน\r\n    การดำเนินการนี้จะรักษาการสื่อความหมายแบบ Bag แบบดั้งเดิมไว้ เพื่อให้ค่าที่ซ้ำกันถูกจับคู่ในรูปแบบส่วนประกอบของยูเนียน\r\n    โดยสามารถระบุค่าเกณฑ์สมการที่เลือกได้ <code>equationCriteria</code> เพื่อควบคุมการทดสอบความเท่ากัน ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "สร้างยูเนียนของรายการ {1..5}, {2..6}, {3..7}",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "ส่งกลับรายการของรายการโดยการรวมข้อมูลที่อยู่ในตำแหน่งเดียวกันจากในหลาย ๆ รายการ",
        "Documentation.LongDescription": "รับรายการของรายการ <code>lists</code> แล้วส่งกลับรายการของรายการที่รวมข้อมูลที่อยู่ในตำแหน่งเดียวกันไว้",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Zip สองรายการแบบง่าย {1, 2} และ {3, 4}",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Zip สองรายการแบบง่ายที่มีความยาวแตกต่างกัน {1, 2} และ {3}",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "สร้างตรรกะจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>logical</code> จาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Logical.From</code> จะส่งกลับ <code>null</code>  ถ้า <code>value</code> ที่กำหนดเป็น <code>logical</code> จะมีการส่งกลับ <code>value</code> ค่าของชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>logical</code> ได้:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>logical</code> จากค่าข้อความ ซึ่งเป็น <code>\"true\"</code> หรือ <code>\"false\"</code> ดู <code>Logical.FromText</code> สำหรับรายละเอียด</li>\r\n        <li><code>number</code>: <code>false</code> ถ้า <code>value</code> เท่ากับ <code>0</code> และ <code>true</code> ถ้าไม่ใช่</li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่น ระบบจะส่งกลับข้อผิดพลาด",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>2</code> เป็นค่า <code>logical</code>",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "สร้างค่าตรรกะจากค่าข้อความ \"true\" และ \"false\"",
        "Documentation.LongDescription": "สร้างค่าตรรกะจากค่าข้อความ <code>text</code> ซึ่งเป็น \"true\" หรือ \"false\" ถ้า <code>text</code> ประกอบด้วยสตริงอื่น ระบบจะแสดงข้อยกเว้น ค่าข้อความ <code>text</code> ไม่ตรงตามตัวพิมพ์ใหญ่เล็ก",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "สร้างค่าตรรกะจากสตริงข้อความ \"true\"",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "สร้างค่าตรรกะจากสตริงข้อความ \"a\"",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "ส่งกลับ \"true\" หรือ \"false\" ที่มีการกำหนดค่าตรรกะ",
        "Documentation.LongDescription": "สร้างค่าข้อความจากค่าตรรกะ <code>logicalValue</code> ซึ่งเป็น <code>true</code> หรือ <code>false</code> ถ้า <code>logicalValue</code> ไม่ใช่ค่าตรรกะ ระบบจะแสดงข้อยกเว้น",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "สร้างค่าข้อความจากตรรกะ <code>true</code>",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "ส่งกลับค่าสัมบูรณ์ของจำนวน",
        "Documentation.LongDescription": "ส่งคืนค่าสัมบูรณ์ของ <code>number</code> ถ้า <code>number</code> เป็น null <code>ตัวเลข.Abs</code> จะส่งคืนค่าเป็น null\r\n    <ul>\r\n        <li><code>number</code>: <code>ตัวเลข</code> ซึ่งจะมีการคำนวณค่าสัมบูรณ์</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "ค่าสัมบูรณ์ของ -3",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "ส่งกลับค่าอาร์กโคไซน์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าอาร์กโคไซน์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "ส่งกลับค่าอาร์กไซน์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าอาร์กไซน์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "ส่งกลับค่าอาร์กแทนเจนต์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าอาร์กแทนเจนต์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "ส่งกลับไบต์ซึ่งแต่ละบิตตรงกันข้ามกับค่าที่ป้อน",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการดำเนินการในระดับบิต \"Not\" ใน <code>number</code>",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "ส่งกลับค่าโคไซน์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าโคไซน์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "หาค่าโคไซน์ของมุม 0",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "ส่งกลับค่าไฮเพอร์โบลิกโคไซน์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าไฮเพอร์โบลิกโคไซน์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "ยกกำลัง e ด้วยตัวเลขที่ระบุ",
        "Documentation.LongDescription": "ส่งคืนผลลัพธ์ของการยกกำลัง e ของ <code>number</code> (ฟังก์ชันเอ็กซ์โพเนนเชียล)\r\n      <ul>\r\n        <li><code>number</code>: <code>ตัวเลข</code> ซึ่งมีการคำนวณฟังก์ชันเอ็กซ์โพเนนเชียล ถ้า <code>number</code> เป็น null <code>ตัวเลข.Exp</code> จะส่งคืนค่าเป็น null </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "ยกกำลัง e ด้วยเลข 3",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "ส่งกลับค่าแฟกทอเรียลของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าแฟกทอเรียลของตัวเลข <code>number</code>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "หาค่าแฟกทอเรียลของ 10",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "สร้างจำนวนจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> จาก <code>value</code> ที่กำหนดให้ อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")\r\n ถ้า <code>value</code> ที่กำหนดให้เป็น <code>null</code> <code>Number.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดให้เป็น <code>number</code> จะมีการส่งกลับ <code>value</code> ค่าของชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>number</code> ได้:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>number</code> จากการนำเสนอข้อความ ระบบจะจัดการรูปแบบข้อความทั่วไป (\"15\", \"3,423.10\", \"5.0E-10\") ดู <code>Number.From.Text</code> สำหรับรายละเอียด</li>\r\n        <li><code>logical</code>: 1 สำหรับ <code>true</code>, 0 สำหรับ <code>false</code></li>\r\n        <li><code>datetime</code>: ตัวเลขจุดลอยตัวความแม่นยำสองเท่าที่มี OLE Automation Date เทียบเท่ากับวันที่</li>\r\n        <li><code>datetimezone</code>: ตัวเลขจุดลอยตัวความแม่นยำสองเท่าที่มี OLE Automation Date เทียบเท่ากับวันที่และเวลาท้องถิ่นของ <code>value</code></li>\r\n        <li><code>date</code>: ตัวเลขจุดลอยตัวความแม่นยำสองเท่าที่มี OLE Automation Date เทียบเท่ากับวันที่</li>\r\n        <li><code>time</code>:  แสดงวันในรูปแบบเศษส่วน</li>\r\n        <li><code>duration</code>: แสดงวันในรูปแบบเต็มและเศษส่วน</li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่น ระบบจะส่งกลับข้อผิดพลาด",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>number</code> ของ <code>\"4\"</code>",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "รับค่า <code>number</code> ของ <code>#datetime(2020, 3, 20, 6, 0, 0)</code>",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "รับค่า<code>จำนวน</code>ของ <code>\"12.3%\"</code>",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "สร้างตัวเลขจากรูปแบบข้อความทั่วไป (\"15\", \"3,423.10\", \"5.0E-10\")",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> จากค่าข้อความที่กำหนดให้ <code>text</code>\r\n <ul>\r\n  <li><code>text</code>: การแสดงข้อความของค่าตัวเลข การนำเสนอต้องอยู่ในรูปแบบตัวเลขทั่วไป เช่น \"15\", \"3,423.10\", \"5.0E-10\"</li>\r\n  <li><code>culture</code>: วัฒนธรรมเพิ่มเติมที่จะควบคุมวิธีที่ <code>text</code> ใช้ตีความ (ตัวอย่างเช่น \"en-US\")</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า number ของ <code>\"4\"</code>",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "รับค่าตัวเลข <code>\"5.0e-10\"</code>",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "ระบุว่าค่าเป็นเลขคู่หรือไม่",
        "Documentation.LongDescription": "ระบุว่าค่า <code>number</code> เป็นเลขคู่หรือไม่โดยส่งกลับ <code>true</code> ถ้าเป็นเลขคู่ และ <code>false</code> ถ้าไม่ใช่",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "ตรวจสอบว่า 625 เป็นจำนวนคู่หรือไม่",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "ตรวจสอบว่า 82 เป็นจำนวนคู่หรือไม่",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "ระบุว่าค่าเป็น NaN (ไม่ใช่จำนวน) หรือไม่",
        "Documentation.LongDescription": "ระบุว่าค่าเป็น NaN (ไม่ใช่จำนวน) หรือไม่ ส่งกลับ <code>true</code> ถ้า <code>number</code> เทียบเท่ากับ <code>Number.IsNaN</code> และ <code>false</code> ถ้าไม่ใช่",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "ตรวจสอบว่า 0 ที่ถูกหารด้วย 0 เป็น NaN หรือไม่",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "ตรวจสอบว่า 1 ที่ถูกหารด้วย 0 เป็น NaN หรือไม่",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "ระบุว่าค่าเป็นเลขคี่หรือไม่",
        "Documentation.LongDescription": "ระบุว่าค่าเป็นเลขคี่หรือไม่ ส่งกลับ <code>true</code> ถ้า <code>number</code> เป็นจำนวนคี่ และ <code>false</code> ถ้าไม่ใช่",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "ตรวจสอบว่า 625 เป็นจำนวนคี่หรือไม่",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "ตรวจสอบว่า 82 เป็นจำนวนคี่หรือไม่",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "ส่งกลับลอการิทึมธรรมชาติของตัวเลข",
        "Documentation.LongDescription": "ส่งคืนอัลกอริทึ่มสำหรับตัวเลข <code>number</code> หาก <code>number</code> เป็น Null <code>Number.Ln</code> จะส่งคืนค่าเป็น Null",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "รับลอการิทึมธรรมชาติของ 15",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "ส่งกลับลอการิทึมของตัวเลขไปยังฐานที่ระบุ (ค่าเริ่มต้น e)",
        "Documentation.LongDescription": "ส่งคืนลอการิทึมของตัวเลข <code>number</code> ไปยังฐาน <code>base</code> ที่ระบุ ถ้าไม่ได้ระบุ <code>base</code> ค่าเริ่มต้นจะเป็น ตัวเลข.E\r\n    ถ้า <code>number</code> เป็น null <code>ตัวเลข.บันทึก</code> จะส่งกลับ null",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "รับลอการิทึมฐาน 10 ของ 2",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "รับลอการิทึมฐาน e ของ 2",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "ส่งกลับลอการิทึมฐาน 10 ของตัวเลข",
        "Documentation.LongDescription": "ส่งคืนลอการิทึมฐาน 10 ของตัวเลข <code>number</code> ถ้า <code>number</code> เป็น null <code>Number.Log10</code> จะส่งกลับ null",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "รับลอการิทึมฐาน 10 ของ 2",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "ส่งกลับจำนวนที่ปัดเศษ จำนวนหลักและโหมดการปัดเศษสามารถระบุได้",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการปัดเศษ <code>number</code> เป็นตัวเลขที่ใกล้เคียงที่สุด ถ้า <code>number</code> เป็น null <code>Number.Round</code> จะส่งกลับค่า null<br>\r\n      <br>\r\n      ตามค่าเริ่มต้น <code>number</code> จะถูกปัดเศษให้เป็นจำนวนเต็มที่ใกล้เคียงที่สุด และค่าที่เท่ากันจะใช้งานไม่ได้โดยการปัดเศษเป็นเลขคู่ที่ใกล้เคียงที่สุด (โดยใช้ <code>RoundingMode.ToEven</code> หรือที่รู้จักกันในชื่อ \"การปัดเศษแบบพนักงานธนาคาร\")<br>\r\n      <br>\r\n      อย่างไรก็ตาม ค่าเริ่มต้นเหล่านี้สามารถถูกแทนที่ได้ผ่านพารามิเตอร์ตัวเลือกดังต่อไปนี้\r\n      <ul>\r\n        <li><code>digits</code>: ทำให้ <code>number</code> จะถูกปัดเศษเป็นจำนวนหลักทศนิยมที่ระบุ</li>\r\n        <li><code>roundingMode</code>: แทนที่ลักษณะการแบ่งค่าที่เท่ากันเริ่มต้นเมื่อ <code>number</code> อยู่กึ่งกลางระหว่างค่าที่ปัดเศษที่เป็นไปได้สองค่า\r\n      (ดู <code>RoundingMode.Type</code> สำหรับค่าที่เป็นไปได้)</li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "ปัดเศษ 1.234 เป็นจำนวนเต็มที่ใกล้เคียงที่สุด",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "ปัดเศษ 1.56 เป็นจำนวนเต็มที่ใกล้เคียงที่สุด",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "ปัดเศษ 1.2345 เป็นทศนิยมสองตำแหน่ง",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "ปัดเศษ 1.2345 เป็นทศนิยมสามตำแหน่ง (ปัดเศษขึ้น)",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "ปัดเศษ 1.2345 เป็นทศนิยมสามตำแหน่ง (ปัดเศษลง)",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "ส่งคืนผลลัพธ์การปัดเศษขึ้นสำหรับค่าบวกและการปัดเศษลงสำหรับค่าลบ สามารถระบุจำนวนหลัก",
        "Documentation.LongDescription": "ส่งคืนผลลัพธ์ของการปัดเศษ <code>number</code> ตามเครื่องหมายของตัวเลข ฟังก์ชันนี้จะปัดเศษขึ้นสำหรับค่าบวกและปัดเศษลงสำหรับค่าลบ\r\n    ถ้ามีการระบุเป็น <code>digits</code> จะมีการปัดเศษ <code>number</code> เป็นเลขทศนิยม <code>digits</code> หลัก\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "ปัดเศษจำนวน -1.2 ห่างออกจากศูนย์",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "ปัดเศษจำนวน 1.2 ห่างออกจากศูนย์",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "ปัดเศษตัวเลข -1.234 ลงเป็นทศนิยมสองตำแหน่งและน้อยกว่าศูนย์",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "ส่งคืนตัวเลขก่อนหน้าที่มีค่าสูงที่สุด สามารถระบุจำนวนหลัก",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการปัดเศษ <code>number</code> ลงเป็นจํานวนเต็มสูงสุดก่อนหน้า ถ้า <code>number</code> เป็น null ฟังก์ชันนี้จะส่งกลับ null\r\n\r\n ถ้ามีการระบุ <code>digits</code> <code>number</code> จะถูกปัดเศษเป็นจํานวนหลักทศนิยมที่ระบุ\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "ปัดเศษ 1.234 ลงเป็นจำนวนเต็ม",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "ปัดเศษ 1.999 ลงเป็นจำนวนเต็ม",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "ปัดเศษ 1.999 ลงเป็นทศนิยมสองตำแหน่ง",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "ส่งคืนผลลัพธ์การปัดเศษลงสำหรับค่าบวกและการปัดเศษขึ้นสำหรับค่าลบ สามารถระบุจำนวนหลัก",
        "Documentation.LongDescription": "ส่งคืนผลลัพธ์ของการปัดเศษ <code>number</code> ตามเครื่องหมายของตัวเลข ฟังก์ชันนี้จะปัดเศษลงสำหรับค่าบวกและปัดเศษขึ้นสำหรับค่าลบ\r\n    ถ้ามีการระบุเป็น <code>digits</code> จะมีการปัดเศษ <code>number</code> เป็นเลขทศนิยม <code>digits</code> หลัก\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "ปัดเศษจำนวน -1.2 ไปทางศูนย์",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "ปัดเศษจำนวน 1.2 ไปทางศูนย์",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "ปัดเศษตัวเลข -1.234 ขึ้นเป็นทศนิยมสองตำแหน่งให้ใกล้เคียงค่าศูนย์",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "ส่งคืนตัวเลขถัดไปที่มีค่าสูงที่สุด สามารถระบุจำนวนหลัก",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการปัดเศษ <code>number</code> ขึ้นเป็นจํานวนเต็มสูงสุดถัดไป ถ้า <code>number</code> เป็น null ฟังก์ชันนี้จะส่งกลับ null\r\n    ถ้ามีการระบุ <code>digits</code> <code>number</code> จะถูกปัดเศษเป็นจํานวนหลักทศนิยมที่ระบุ\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "ปัดเศษ 1.234 ขึ้นเป็นจำนวนเต็ม",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "ปัดเศษ 1.999 ขึ้นเป็นจำนวนเต็ม",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "ปัดเศษ 1.234 ขึ้นเป็นทศนิยมสองตำแหน่ง",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "ส่งกลับ 1 ถ้าจำนวนเป็นบวก -1 ถ้าจำนวนเป็นลบ และ 0 ถ้าเป็นจำนวนศูนย์",
        "Documentation.LongDescription": "ส่งกลับ 1 ถ้า <code>number</code> เป็นจำนวนบวก -1 ถ้าจำนวนเป็นลบ และ 0 ถ้าเป็นจำนวนศูนย์\r\n    ถ้า <code>number</code> เป็น null <code>Number.Sign</code> จะส่งกลับ null",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "ระบุค่าเครื่องหมายของ 182",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "ระบุค่าเครื่องหมายของ -182",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "ระบุค่าเครื่องหมายของ 0",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "ส่งกลับค่าไซน์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าไซน์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "หาค่าไซน์ของมุม 0",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "ส่งกลับค่าไฮเพอร์โบลิกไซน์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าไฮเพอร์โบลิกไซน์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "ส่งกลับรากที่สองของตัวเลข",
        "Documentation.LongDescription": "ส่งคืนรากที่สองของ <code>number</code> \r\n    ถ้า <code>number</code> เป็น null <code>ตัวเลข.Sqrt</code> จะส่งคืนค่า null ถ้าเป็นค่าลบ จะมีการส่งคืน <code>ตัวเลข.NaN</code> (ไม่ใช่ตัวเลข)",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "หารากที่สองของ 625",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "หารากที่สองของ 85",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "ส่งกลับค่าแทนเจนต์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าแทนเจนต์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "หาค่าแทนเจนต์ของมุม 1",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "ส่งกลับค่าไฮเพอร์โบลิกแทนเจนต์ของตัวเลข",
        "Documentation.LongDescription": "ส่งกลับค่าไฮเพอร์โบลิกแทนเจนต์ของ <code>number</code>",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "แปลงตัวเลขที่กําหนดให้เป็นข้อความ",
        "Documentation.LongDescription": "แปลงค่าตัวเลข <code>number</code> เป็นค่าข้อความตามรูปแบบที่ระบุโดย <code>format</code><br> \r\n    <br>\r \n    รูปแบบคือค่าข้อความที่ระบุวิธีการแปลงตัวเลข สําหรับรายละเอียดเพิ่มเติมเกี่ยวกับค่ารูปแบบที่ได้รับการสนับสนุน ให้ไปที่ https://go.microsoft.com/fwlink/?linkid=2241210 และ https://go.microsoft.com/fwlink/?linkid=2240884<br>\r \n    <br>\r \n    อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\") เพื่อควบคุมลักษณะการทํางานที่ขึ้นอยู่กับวัฒนธรรมของ <code>format</code>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "แปลงตัวเลขเป็นข้อความโดยไม่ต้องระบุรูปแบบ",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "แปลงตัวเลขเป็นรูปแบบเอ็กซ์โพเนนเชียล",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "แปลงตัวเลขเป็นรูปแบบเปอร์เซ็นต์ที่มีตําแหน่งทศนิยมเพียงตําแหน่งเดียวเท่านั้น",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "ส่งกลับตารางของตัวดึงข้อมูล OData ที่เสนอโดยบริการ OData",
        "Documentation.LongDescription": "ส่งกลับตารางของฟีด OData ที่นำเสนอโดยบริการ OData จาก URI <code>serviceUri</code> ส่วนหัว <code>headers</code> อาจมีการระบุค่าบูลีนที่ระบุว่าจะใช้การเชื่อมต่อที่เกิดขึ้นพร้อมกัน หรือพารามิเตอร์ระเบียนตัวเลือก <code>options</code> เพื่อควบคุมตัวเลือกดังต่อไปนี้:\r\n    <ul>\r\n    <li><code>Query</code>: จะมีการเพิ่มพารามิเตอร์แบบสอบถามโดยใช้โปรแกรมไปยัง URLโดยไม่ต้องกังวลเกี่ยวกับการตีกลับ </li>\r\n    <li> <code>Headers</code> : การระบุค่านี้เป็นระเบียนจะให้ส่วนหัวเพิ่มเติมสำหรับคำขอ HTTP</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: การระบุค่านี้ในรูปแบบรายการจะเป็นการตัดคีย์ส่วนหัว HTTP เหล่านี้ออกจากการเป็นส่วนหนึ่งของการคำนวณสำหรับข้อมูลการแคช</li>\r\n    <li> <code>ApiKeyName</code> : ถ้าไซต์เป้าหมายมีการระบุคีย์ API ไว้ จะสามารถใช้พารามิเตอร์นี้เพื่อระบุชื่อ (ไม่ใช่ค่า) ของพารามิเตอร์คีย์ที่จะต้องใช้ใน URL จะมีการแสดงค่าคีย์จริงไว้ในข้อมูลประจำตัว</li>\r\n    <li> <code>Timeout</code> : การระบุค่านี้เป็นระยะเวลาจะเปลี่ยนระยะหมดเวลาสำหรับคำขอ HTTP ค่าเริ่มต้นคือ 600 วินาที</li>\r\n    <li> <code>EnableBatch</code> : ตรรกะ (จริง/เท็จ) ที่กำหนดว่าจะอนุญาตให้สร้างคำขอ OData $batch หรือไม่ หาก MaxUriLength เกินขีดจำกัด (ค่าเริ่มต้นคือ เท็จ)</li>\r\n    <li> <code>MaxUriLength</code> : ตัวเลขที่ระบุความยาวสูงสุดของ URI ที่ได้รับอนุญาตให้ส่งไปยังบริการ OData หากเกินขีดจำกัดและ EnableBatch มีค่าเป็นจริง คำขอจะถูกส่งไปที่ตำแหน่งข้อมูล OData $batch มิฉะนั้น จะล้มเหลว (ค่าเริ่มต้นคือ 2048)</li>\r\n    <li> <code>Concurrent</code> : ตรรกะ (จริง/เท็จ) เมื่อตั้งค่าเป็นจริง จะมีการสร้างคำขอไปยังบริการพร้อมกัน เมื่อตั้งค่าเป็นเท็จ จะมีการสร้างคำขอตามลำดับ เมื่อไม่มีการระบุ จะมีการกำหนดค่าตามคำอธิบายประกอบ AsynchronousRequestsSupported ของบริการ หากบริการไม่มีการระบุว่ามีการสนับสนุน AsynchronousRequestsSupported หรือไม่ จะมีการสร้างคำขอตามลำดับ</li>\r\n    <li> <code>ODataVersion</code> : ตัวเลข (3 หรือ 4) ที่ระบุเวอร์ชันโพรโทคอล OData สำหรับใช้ในบริการ OData นี้ เมื่อไม่มีการระบุไว้ จะมีการขอเวอร์ชันที่ได้รับการสนับสนุนทั้งหมด จะมีการกำหนดเวอร์ชันบริการโดยส่วนหัวของเวอร์ชัน OData ที่ถูกส่งกลับโดยบริการ</li>\r\n    <li> <code>FunctionOverloads</code> : ตรรกะ (จริง/เท็จ) เมื่อตั้งค่าเป็นจริง จะมีการแสดงรายการฟังก์ชันนำเข้าโอเวอร์โหลดไว้ในตัวนำทางเป็นรายการแยก เมื่อตั้งค่าเป็นเท็จ จะมีการแสดงรายการฟังก์ชันนำเข้าโอเวอร์โหลดเป็นฟังก์ชันรวมหนึ่งเดียวไว้ในตัวนำทาง ค่าเริ่มต้นสำหรับ V3: เท็จ ค่าเริ่มต้นสำหรับ V4: จริง</li>\r\n    <li> <code>MoreColumns</code> : ตรรกะ (จริง/เท็จ) เมื่อตั้งค่าเป็นจริง จะเพิ่มคอลัมน์ \"คอลัมน์เพิ่มเติม\" ลงในแต่ละฟีดของเอนทิตีซึ่งมีชนิดเปิดและชนิดโพลีมอฟิก ซึ่งจะมีเขตข้อมูลที่ไม่ได้ประกาศไว้ในชนิดฐาน เมื่อเป็นเท็จจะไม่มีเขตข้อมูลนี้ ค่าเริ่มต้นจะเป็นเท็จ</li>\r\n    <li> <code>IncludeAnnotations</code> : รายการที่คั่นด้วยจุลภาคของชื่อหรือรูปแบบคำสำคัญที่มีคุณสมบัติเหมาะสมตาม Namespace ที่จะรวมโดยใช้ \"*\" เป็นอักขระตัวแทน ตามค่าเริ่มต้น จะไม่มีการเพิ่มคำอธิบายใดเลย</li>\r\n    <li> <code>IncludeMetadataAnnotations</code> : รายการที่คั่นด้วยจุลภาคของชื่อหรือรูปแบบคำสำคัญที่มีคุณสมบัติเหมาะสมตาม Namespace ที่จะรวมอยู่ในคำขอเอกสารเมตาดาต้าโดยใช้ \"*\" เป็นอักขระตัวแทน ตามค่าเริ่มต้น จะมีการเพิ่มคำอธิบายเดียวกันเป็น IncludeAnnotations</li>\r\n    <li> <code>OmitValues</code> : อนุญาตให้บริการ OData หลีกเลี่ยงการเขียนค่าเฉพาะให้เต็มสำหรับการตอบกลับ หากได้รับการยอมรับจากบริการ เราจะอนุมานค่าดังกล่าวจากเขตข้อมูลที่ถูกเว้นไว้ ตัวเลือกประกอบด้วย:\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code> : Allows the OData service to omit null values.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Implementation</code> : ระบุการใช้งานของตัวเชื่อมต่อ OData เพื่อใช้ ค่าที่ถูกต้องคือ \"2.0\" หรือ null</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "เชื่อมต่อกับบริการ TripPin OData",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "ส่งกลับผลลัพธ์ของการพยายามอ้างถึงความสามารถ SQL สำหรับโปรแกรมควบคุม ODBC",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการพยายามอ้างถึงความสามารถ SQL กับสตริงการเชื่อมต่อ <code>connectionString</code> โดยใช้ ODBC <code>connectionString</code> สามารถเป็นข้อความหรือระเบียนของคู่ค่าคุณสมบัติ ค่าคุณสมบัติสามารถเป็นข้อความหรือตัวเลข",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับความสามารถ SQL ที่อ้างถึงสําหรับสตริงการเชื่อมต่อ",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "ส่งกลับเนื้อหาของเอกสาร Parquet เป็นตาราง",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาของเอกสาร Parquet เป็นตาราง ตัวเลือกประกอบด้วย:\n    <ul>\n    <li> <code>TypeMapping</code> : ค่าข้อความที่ควบคุมการแมปชนิดเริ่มต้นเมื่ออ่านและเขียนไฟล์ ค่าเริ่มต้นคือ null และพยายามรักษาความเที่ยงตรงของชนิดต้นฉบับให้ได้มากที่สุด ค่า “Sql” จะให้ผลลัพธ์ที่เข้ากันได้กับ Sql Server มากที่สุด</li>\n    </ul>",
        "Documentation.Category": "การเข้าถึงข้อมูล",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "การเข้าถึงข้อมูล",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "ส่งกลับค่าเปอร์เซ็นต์จากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>percentage</code> จาก <code>value</code>ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Percentage.From</code> จะส่งกลับ <code>null</code>  ถ้า <code>value</code> ที่กำหนดเป็น <code>text</code> ที่มีสัญลักษณ์เปอร์เซ็นต์ต่อท้าย ระบบจะส่งกลับตัวเลขทศนิยมที่แปลงแล้ว มิฉะนั้นจะแปลงค่าเป็น <code>number</code> โดยใช้ <code>Number.From</code> อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า<code>เปอร์เซ็นต์</code>ของ <code>\"12.3%\"</code>",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "ส่งคืนระเบียนเฟรมค่าจากไฟล์ RData",
        "Documentation.LongDescription": "ส่งคืนระเบียนเฟรมค่าจากไฟล์ RData",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "รวมระเบียนในรายการที่กำหนด",
        "Documentation.LongDescription": "รวมระเบียนใน <code>records</code> ที่กำหนด ถ้า <code>records</code> มีค่าที่ไม่ใช่ระเบียน ระบบจะส่งกลับข้อผิดพลาด",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "สร้างระเบียนรวมจากระเบียน",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "ส่งกลับจำนวนของเขตข้อมูลในระเบียน",
        "Documentation.LongDescription": "ส่งกลับจำนวนของเขตข้อมูลในระเบียน <code>record</code>",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจำนวนฟิลด์ในระเบียน",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "ส่งกลับชื่อเขตข้อมูล",
        "Documentation.LongDescription": "ส่งกลับชื่อเขตข้อมูลในระเบียน <code>record</code> เป็นข้อความ",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาชื่อฟิลด์ในระเบียน",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "ส่งกลับรายการค่าเขตข้อมูล",
        "Documentation.LongDescription": "ส่งกลับรายการค่าเขตข้อมูลในระเบียน <code>record</code>",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาค่าฟิลด์ในระเบียน",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "สร้างระเบียนจากตารางของฟอร์ม {[Name = name, Value = value]}",
        "Documentation.LongDescription": "ส่งกลับระเบียนจากตารางของระเบียน <code>table</code> ที่มีชื่อเขตข้อมูลและชื่อค่า <code>{[Name = name, Value = value]}</code> ระบบจะแสดงข้อยกเว้นถ้าชื่อเขตข้อมูลซ้ำกัน",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "สร้างระเบียนจากตารางของรูปแบบ Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]})",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "ส่งกลับรายการของค่าที่ประกอบด้วยค่าเขตข้อมูลของระเบียนที่ป้อน",
        "Documentation.LongDescription": "ส่งกลับรายการของค่าที่ประกอบด้วยค่าเขตข้อมูลจากค่าที่ป้อน <code>record</code>",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "แยกค่าเขตข้อมูลออกจากระเบียน",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) ที่แสดงการเข้าถึงคอลัมน์ภายในนิพจน์แถว",
        "Documentation.LongDescription": "ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) ที่แสดงการเข้าถึง <code>columnName</code> คอลัมน์ของแถวภายในนิพจน์แถว",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "สร้าง AST ที่แสดงการเข้าถึงคอลัมน์ \"CustomerName\"",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) สําหรับเนื้อความของฟังก์ชัน",
        "Documentation.LongDescription": "<p>ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) สำหรับเนื้อความของ <code>function</code> ปรับให้เป็นมาตรฐานใน<i>นิพจน์แถว</i>:\r\n<ul>\r\n  <li>ฟังก์ชันต้องเป็น lambda ชนิดอาร์กิวเมนต์ 1</li>\r\n  <li>การอ้างอิงทั้งหมดไปยังพารามิเตอร์จะถูกแทนที่ด้วย <code>RowExpression.Row</code></li>\r\n  <li>การอ้างอิงทั้งหมดไปยังคอลัมน์จะถูกแทนที่ด้วย <code>RowExpression.Column(<i>columnName</i>)</code></li>\r\n  <li>AST จะง่ายขึ้นเพื่อให้มีเฉพาะโหนดชนิด:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>จะมีการแสดงข้อผิดพลาด ถ้าไม่สามารถส่งกลับนิพจน์แถว AST สำหรับเนื้อความของ <code>function</code></p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืน AST สำหรับเนื้อความของฟังก์ชัน <code>each [CustomerID] = \"ALFKI\"</code>",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "สร้าง Single จากค่าที่กำหนดไว้",
        "Documentation.LongDescription": "ส่งกลับค่า <code>number</code> ที่เป็นตัวเลขเดียวจาก <code>value</code> ที่กำหนด ถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Single.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>number</code> ภายในช่วงที่เป็นตัวเลขเดียว ระบบจะส่งกลับ <code>value</code> มิฉะนั้นจะส่งกลับข้อผิดพลาด ถ้า <code>value</code> เป็นชนิดอื่น ระบบจะแปลงเป็น <code>number</code> ก่อน โดยใช้ <code>Number.FromText</code> อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "รับค่า <code>ตัวเลข</code> ที่เป็น Single สำหรับ <code>\"1.5\"</code>",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "น้ำกลับข้อมูลตารางจากจุดแสดงผลดัชนีของ Smartsheet",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "เรียกหา Smartsheet 2.0 REST API ที่จุดแสดงผลเฉพาะและเปลี่ยนส่วนประกอบของข้อมูลที่ถูกนำกลับไปยังตาราง",
        "Documentation.Examples": [
          {
            "Description": "ดึงตารางของข้อมูลผู้ใช้งานจาก API ของ Smartsheet",
            "Code": "Smartsheet.Content (\"ผู้ใช้งาน\")",
            "Result": "ตารางพร้อมด้วยข้อมูลผู้ใช้งานตามที่ถูกนำกลับโดย API ของ Smartsheet"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความที่ตัวคั่นใดๆ ที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความที่ตัวคั่นใดๆ ที่ระบุ",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าด้วยเครื่องหมายจุลภาคหรือเครื่องหมายอัฒภาค โดยละเว้นเครื่องหมายอัญประกาศและตัวคั่นที่อ้างอิง และเริ่มต้นจากจุดเริ่มต้นของข้อมูลป้อนเข้า",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "แยกข้อมูลป้อนเข้าด้วยเครื่องหมายจุลภาคหรือเครื่องหมายอัฒภาค โดยละเว้นเครื่องหมายอัญประกาศและตัวคั่นที่อ้างอิง และเริ่มต้นจากจุดสิ้นสุดของข้อมูลป้อนเข้า",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความตามตัวคั่นที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความตามตัวคั่นที่ระบุ",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าด้วยเครื่องหมายจุลภาค โดยละเว้นเครื่องหมายจุลภาคอ้างอิง",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความที่ตัวคั่นแต่ละตัวที่ระบุตามลำดับ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความที่ตัวคั่นแต่ละตัวที่ระบุตามลำดับ",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าด้วยเครื่องหมายจุลภาค แล้วเครื่องหมายอัฒภาค เริ่มต้นจากจุดเริ่มต้นของข้อมูลป้อนเข้า",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "แยกข้อมูลป้อนเข้าด้วยเครื่องหมายจุลภาค แล้วเครื่องหมายอัฒภาค โดยอ้างอิงเครื่องหมายอัญประกาศเหมือนกับอักขระอื่นๆ และเริ่มต้นจากจุดสิ้นสุดของอินพุต",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความตามความยาวแต่ละค่าที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความตามความยาวแต่ละค่าที่ระบุ",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าออกเป็นสองอักขระแรกตามด้วยสามตัวถัดไป โดยเริ่มต้นจากจุดเริ่มต้นของข้อมูลป้อนเข้า",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "แยกข้อมูลป้อนเข้าออกเป็นอักขระสามตัวแรกตามด้วยอักขระสองตัวถัดไป โดยเริ่มจากจุดสิ้นสุดของข้อมูลป้อนเข้า",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความในแต่ละตำแหน่งที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความในแต่ละตำแหน่งที่ระบุ",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าที่ตําแหน่งที่ระบุ โดยเริ่มต้นจากจุดเริ่มต้นของข้อมูลป้อนเข้า",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "แยกข้อมูลป้อนเข้าที่ตําแหน่งที่ระบุ โดยเริ่มต้นจากจุดสิ้นสุดของข้อมูลป้อนเข้า",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความตามออฟเซตและความยาวที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการข้อความตามออฟเซตและความยาวที่ระบุ ความยาว null บ่งชี้ว่าควรรวมข้อมูลป้อนเข้าที่เหลือทั้งหมด",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าตามคู่ตําแหน่งและความยาวที่ระบุ เริ่มต้นจากจุดเริ่มต้นของข้อมูลป้อนเข้า โปรดทราบว่าช่วงในตัวอย่างนี้ทับซ้อนกัน",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "แยกข้อมูลป้อนเข้าตามคู่ตําแหน่งและความยาวที่ระบุ โดยเริ่มต้นจากจุดสิ้นสุดของข้อมูลป้อนเข้า",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "แยกข้อมูลป้อนเข้าเป็นรหัสไปรษณีย์ที่มีความยาวคงที่ตามด้วยชื่อเมืองที่มีความยาวตัวแปร",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความหลังความยาวที่ระบุซ้ำ",
        "Documentation.LongDescription": "ส่งกลับฟังก์ชันที่แยกข้อความออกเป็นรายการของข้อความหลังความยาวที่ระบุซ้ำ",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "แยกข้อมูลป้อนเข้าเป็นกลุ่มอักขระสามตัวซ้ำๆ โดยเริ่มต้นจากจุดเริ่มต้นของข้อมูลป้อนเข้า",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "แยกข้อมูลป้อนเข้าเป็นกลุ่มอักขระสามตัวซ้ำๆ โดยเริ่มต้นจากจุดสิ้นสุดของข้อมูลป้อนเข้า",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "ส่งกลับจำนวนของแถวโดยประมาณในตาราง",
        "Documentation.LongDescription": "ส่งกลับจํานวนแถวโดยประมาณใน <code>table</code> หรือข้อผิดพลาดถ้าแหล่งข้อมูลไม่สนับสนุนการประมาณ",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "ประมาณจํานวนการรวมกันที่แตกต่างกันของเมืองและรัฐในตารางขนาดใหญ่ซึ่งสามารถใช้เป็นค่าประมาณคาร์ดินาลลิตี้สําหรับคอลัมน์ การประมาณการคาร์ดินาลลิตี้มีความสําคัญเพียงพอที่แหล่งข้อมูลต่างๆ (เช่น SQL Server) สนับสนุนการประมาณเฉพาะนี้ซึ่งมักใช้อัลกอริทึมที่เรียกว่า HyperLogLog",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "ส่งกลับจำนวนของคอลัมน์ในตาราง",
        "Documentation.LongDescription": "ส่งกลับจำนวนของคอลัมน์ในตาราง <code>table</code>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจำนวนคอลัมน์ในตาราง",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "ส่งกลับชื่อคอลัมน์เป็นรายการ",
        "Documentation.LongDescription": "ส่งกลับชื่อคอลัมน์ในตาราง <code>table</code> เป็นรายการข้อความ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาชื่อคอลัมน์ในตาราง",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "ส่งกลับแถวแรกหรือค่าเริ่มต้นที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับแถวแรกของ <code>table</code> หรือค่าเริ่มต้นที่เลือกได้ <code>default</code> ถ้าตารางว่างเปล่า",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาแถวแรกของตาราง",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "ค้นหาแถวแรกของตาราง <code>({})</code> หรือส่งกลับ [a = 0, b = 0] ถ้าว่างเปล่า",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "ส่งคืนคอลัมน์แรกของแถวแรกจากตาราง หรือค่าเริ่มต้นตามที่ระบุไว้",
        "Documentation.LongDescription": "ส่งคืนคอลัมน์แรกของแถวแรกจากตาราง <code>table</code> หรือค่าเริ่มต้นตามที่ระบุไว้",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "ระบุว่าตารางมีเฉพาะแถวที่กำหนดไว้ (ไม่ซ้ำซ้อน) หรือไม่",
        "Documentation.LongDescription": "ระบุว่า <code>table</code> มีเฉพาะแถวที่ไม่ซ้ำ (ไม่ซ้ำซ้อน) หรือไม่ ส่งคืน <code>true</code> หากแถวไม่ซ้ำกัน และ <code>false</code> หากผลลัพธ์เป็นอื่น\r\n    พารามิเตอร์ทางเลือก <code>comparisonCriteria</code> ระบุว่าจะมีการทดสอบความซ้ำซ้อนที่คอลัมน์ใดของตาราง หากไม่มีการระบุ <code>comparisonCriteria</code> จะมีการทดสอบคอลัมน์ทั้งหมด",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าตารางมีค่าเฉพาะหรือไม่",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "กำหนดว่าตารางมีค่าคอลัมน์เฉพาะหรือไม่",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "ระบุว่าตารางมีแถวใดๆ หรือไม่",
        "Documentation.LongDescription": "ระบุว่า <code>table</code> มีแถวใดๆ หรือไม่ ส่งคืน <code>true</code> หากไม่มีแถวใดๆ (เช่น ตารางว่างเปล่า) <code>false</code> หากมีผลลัพธ์เป็นอื่น",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าตารางว่างเปล่าหรือไม่",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "กำหนดว่าตาราง <code>({})</code> ว่างเปล่าหรือไม่",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "ส่งกลับคีย์ของตารางที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับคีย์ของตารางที่ระบุ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "รับรายการของคีย์สําหรับตาราง",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "ส่งกลับแถวสุดท้ายหรือค่าเริ่มต้นที่ระบุ",
        "Documentation.LongDescription": "ส่งกลับแถวสุดท้ายของ <code>table</code> หรือค่าเริ่มต้นที่เลือกได้ <code>default</code> ถ้าตารางว่างเปล่า",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาแถวสุดท้ายของตาราง",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "ค้นหาแถวสุดท้ายของตาราง <code>({})</code> หรือส่งกลับ [a = 0, b = 0] ถ้าว่างเปล่า",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "ส่งกลับจำนวนของแถวในตาราง",
        "Documentation.LongDescription": "ส่งกลับจำนวนของแถวใน <code>table</code>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจำนวนแถวในตาราง",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "ส่งกลับแถวเดียวในตาราง",
        "Documentation.LongDescription": "ส่งกลับแถวเดียวในหนึ่งแถว <code>table</code> ถ้า <code>table</code> มีมากกว่าหนึ่งแถว ระบบจะแสดงข้อยกเว้น",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "ส่งคืนแถวเดี่ยวในตาราง",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "สร้างรายการของรายการที่ซ้อนกันของค่าคอลัมน์จากตาราง",
        "Documentation.LongDescription": "สร้างรายการของรายการที่ซ้อนกันจากตาราง <code>table</code>  แต่ละข้อมูลในรายการจะเป็นรายการภายในที่ประกอบด้วยค่าคอลัมน์",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการค่าคอลัมน์จากตาราง",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "แปลงตารางเป็นรายการโดยนำฟังก์ชันการรวมที่ระบุไปใช้กับแต่ละแถวของค่าในตาราง",
        "Documentation.LongDescription": "แปลงตารางเป็นรายการโดยนำฟังก์ชันการรวมที่ระบุไปใช้กับแต่ละแถวของค่าในตาราง",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "รวมข้อความของแต่ละแถวด้วยเครื่องหมายจุลภาค",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "แปลงตารางเป็นรายการระเบียน",
        "Documentation.LongDescription": "แปลงตาราง <code>table</code> เป็นรายการระเบียน",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "แปลงตารางเป็นรายการระเบียน",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "สร้างรายการของรายการที่ซ้อนกันของค่าแถวจากตาราง",
        "Documentation.LongDescription": "สร้างรายการของรายการที่ซ้อนกันจากตาราง <code>table</code>  แต่ละข้อมูลในรายการจะเป็นรายการภายในที่ประกอบด้วยค่าแถว",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการค่าแถวจากตาราง",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "สร้างระเบียนข้อผิดพลาดที่ปรับเปลี่ยนซึ่งจะไม่ทริกเกอร์การย้อนกลับเมื่อส่งออกโดยตัวจัดการที่กำหนดไว้ในมุมมอง (ผ่าน Table.View)",
        "Documentation.LongDescription": "สร้างระเบียนข้อผิดพลาดที่ปรับเปลี่ยนจาก <code>errorRecord</code> ซึ่งจะไม่ทริกเกอร์การย้อนกลับเมื่อส่งออกโดยตัวจัดการที่กำหนดไว้ในมุมมอง (ผ่าน Table.View)",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "สร้างฟังก์ชันที่ตัวจัดการที่ระบุในมุมมองสามารถดักข้อมูลได้ (ผ่าน Table.View)",
        "Documentation.LongDescription": "<p>สร้างฟังก์ชันมุมมองตาม <code>function</code> ที่สามารถจัดการได้ในมุมมองที่สร้างขึ้นโดย <code>Table.View</code></p>\r\n<p>ตัวจัดการ <code>OnInvoke</code> ของ <code>Table.View</code> สามารถใช้เพื่อกําหนดตัวจัดการสําหรับฟังก์ชันมุมมองได้</p>\r\n<p>เช่นเดียวกับตัวจัดการสําหรับการดําเนินการในตัว ถ้าไม่มีการระบุตัวจัดการ <code>OnInvoke</code> หรือถ้าไม่จัดการฟังก์ชันมุมมอง หรือถ้ามีข้อผิดพลาดเกิดขึ้นจากตัวจัดการ <code>function</code> จะถูกนําไปใช้ที่ด้านบนของมุมมอง</p>\r\n<p>ดูคู่มือตัวเชื่อมต่อแบบกําหนดเองของ Power Query ที่เผยแพร่สําหรับคําอธิบายที่สมบูรณ์ยิ่งขึ้นของ <code>Table.View</code> และฟังก์ชันมุมมองแบบกําหนดเอง</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "ส่งกลับค่าข้อความโดยลบอักขระควบคุมทั้งหมด",
        "Documentation.LongDescription": "ส่งกลับค่าข้อความโดยลบอักขระควบคุมทั้งหมด <code>text</code> ตัว",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "ลบอักขระเลื่อนและอักขระควบคุมอื่นๆ ออกจากค่าข้อความ",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "เชื่อมรายการของค่าข้อความเข้ากับค่าข้อความค่าใดค่าหนึ่ง",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการรวมรายการค่าของข้อความ <code>texts</code> ลงในค่าข้อความเดียว ค่า <code>null</code> ใดๆ ที่แสดงอยู่ <code>texts</code> จะถูกละเว้น\r\n    สามารถระบุ <code>separator</code> เพิ่มเติมที่ใช้ในข้อความที่รวมขั้นสุดท้ายได้",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "รวมค่าข้อความ \"Seattle\" และ \"WA\"",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "รวมค่าข้อความ \"Seattle\" และ \"WA\" โดยคั่นด้วยเครื่องหมายจุลภาคและช่องว่าง",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "รวมค่า \"Seattle\", <code>null</code> และ \"WA\" โดยคั่นด้วยเครื่องหมายจุลภาคและช่องว่าง (โปรดทราบว่า <code>null</code> จะถูกละเว้น)",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "สร้างค่าข้อความจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับข้อความสำหรับแสดงแทนของ <code>value</code> โดย <code>value</code> สามารถเป็นค่า <code>number</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>datetimezone</code>, <code>logical</code>, <code>duration</code> หรือ <code>binary</code> ได้\r\n    ถ้าค่าที่กำหนดให้เป็น null <code>Text.From</code> จะส่งกลับค่า null โดยอาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "สร้างค่าข้อความจากตัวเลข 3",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "ถอดรหัสข้อมูลจากรูปแบบไบนารีให้เป็นข้อความ",
        "Documentation.LongDescription": "ถอดรหัสข้อมูล <code>binary</code> จากค่าไบนารีให้เป็นค่าข้อความโดยใช้ชนิด <code>encoding</code>",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "อนุมานชนิดตัวเลขแกรนูลาร์ (Int64.Type, Double.Type และอื่นๆ) ของตัวเลขที่เข้ารหัสในข้อความ",
        "Documentation.LongDescription": "อนุมานชนิดตัวเลขแกรนูลาร์ (Int64.Type, Double.Type และอื่นๆ) ของ <code>text</code> มีข้อผิดพลาดเกิดขึ้น ถ้า <code>text</code> ไม่ใช่ตัวเลข นอกจากนี้อาจมี <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "ส่งกลับจำนวนของอักขระ",
        "Documentation.LongDescription": "ส่งกลับจำนวนอักขระในข้อความ <code>text</code>",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "หาจำนวนอักขระที่อยู่ในข้อความ \"Hello World\"",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "แปลงอักขระทั้งหมดเป็นตัวพิมพ์เล็ก",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการแปลงอักขระทั้งหมดใน <code>text</code> เป็นตัวพิมพ์เล็ก อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "รับอักขระ \"AbCd\" ในรูปแบบตัวพิมพ์เล็ก",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "ทำให้อักษรตัวแรกของแต่ละคำเป็นตัวพิมพ์ใหญ่",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการทำให้เป็นตัวพิมพ์ใหญ่เฉพาะตัวอักษรแรกของแต่ละคำในค่าข้อความ <code>text</code> ตัวอักษรอื่นๆ ทั้งหมดจะถูกส่งกลับเป็นตัวพิมพ์เล็ก อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "ใช้ <code>Text.Proper</code> ในประโยคที่ไม่ซับซ้อน",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "ย้อนกลับ <code>text</code> ที่ระบุ",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "ย้อนกลับข้อความ \"123\"",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "เข้ารหัสข้อความให้เป็นรูปแบบไบนารี",
        "Documentation.LongDescription": "เข้ารหัสค่าข้อความที่กำหนด <code>text</code> ให้เป็นค่าไบนารีโดยใช้ <code>encoding</code> ที่ระบุ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "ส่งกลับรายการค่าอักขระจากค่าข้อความที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับรายการค่าอักขระจากค่าข้อความ <code>text</code> ที่กำหนด",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "สร้างรายการค่าอักขระจากข้อความ \"Hello World\"",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "เอาช่องว่างนำหน้าและต่อท้ายทั้งหมดออก",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการเอาช่องว่างนำหน้าและต่อท้ายทั้งหมดออกจากค่าข้อความ <code>text</code>",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เอาช่องว่างนำหน้าและต่อท้ายออกจาก \"     a b c d    \"",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "เอาช่องว่างต่อท้ายทั้งหมดออก",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการเอาช่องว่างต่อท้ายทั้งหมดออกจากค่าข้อความ <code>text</code>",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เอาช่องว่างต่อท้ายออกจาก \"     a b c d    \"",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "เอาช่องว่างนำหน้าทั้งหมดออก",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการเอาช่องว่างนำหน้าทั้งหมดออกจากค่าข้อความ <code>text</code>",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "เอาช่องว่างนำหน้าออกจาก \"     a b c d    \"",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "แปลงอักขระทั้งหมดเป็นตัวพิมพ์ใหญ่",
        "Documentation.LongDescription": "ส่งกลับผลลัพธ์ของการแปลงอักขระทั้งหมดใน <code>text</code> เป็นตัวพิมพ์ใหญ่ อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "รับอักขระ \"aBcD\" ในรูปแบบตัวพิมพ์ใหญ่",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "ส่งกลับจุดสิ้นสุดของชั่วโมง",
        "Documentation.LongDescription": "ส่งกลับจุดสิ้นสุดของชั่วโมงที่แสดงโดย <code>dateTime</code> รวมถึงเศษส่วนวินาที ข้อมูลโซนเวลาจะถูกเก็บไว้\r\n      <ul>\r\n        <li><code>dateTime</code>: ค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>ที่คํานวณว่ามีจุดสิ้นสุดของชั่วโมงใดบ้าง</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "รับจุดสิ้นสุดของชั่วโมงสำหรับ 5/14/2011 05:00:00 PM",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "รับจุดสิ้นสุดของชั่วโมงสำหรับ 5/17/2011 05:00:00 PM -7:00",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "สร้างเวลาจากค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับค่า <code>time</code> จาก <code>value</code> ที่กำหนด อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")\r\nถ้า <code>value</code> ที่กำหนดเป็น <code>null</code> <code>Time.From</code> จะส่งกลับ <code>null</code> ถ้า <code>value</code> ที่กำหนดเป็น <code>time</code> จะมีการส่งกลับ <code>value</code> ค่าของชนิดต่อไปนี้สามารถแปลงเป็นค่า <code>time</code> ได้:\r\n      <ul>\r\n        <li><code>text</code>: ค่า <code>time</code> จากการนำเสนอข้อความ ดู <code>Time.FromText</code> สำหรับรายละเอียด</li>\r\n        <li><code>datetime</code>: คอมโพเนนต์เวลาของ <code>value</code></li>\r\n        <li><code>datetimezone</code>: คอมโพเนนต์เวลาของวันที่และเวลาท้องถิ่นที่เทียบเท่ากับ <code>value</code></li>\r\n        <li><code>number</code>: <code>time</code> ที่เทียบเท่ากับตัวเลขของวันที่เป็นเศษซึ่งแสดงด้วย <code>value</code> ถ้า <code>value</code> เป็นค่าลบหรือมากกว่าหรือเท่ากับ 1 ระบบจะส่งกลับข้อผิดพลาด</li>\r\n      </ul>\r\nถ้า <code>value</code> เป็นชนิดอื่น ระบบจะส่งกลับข้อผิดพลาด",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>0.7575</code> เป็นค่า <code>time</code>",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "แปลง <code>#datetime(1899, 12, 30, 06, 45, 12)</code> เป็นค่า <code>time</code>",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "สร้าง Time จากรูปแบบ Time ท้องถิ่นและสากล และแบบกำหนดเอง",
        "Documentation.LongDescription": "สร้างค่า <code>time</code> จากการแสดงข้อความ <code>text</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>: ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้แยกวิเคราะห์เวลาโดยใช้วิธีที่ดีที่สุด</li>\r\n   <li><code>Culture</code>: เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"tt\"</code> จะเป็น <code>\"AM\" หรือ \"PM\"</code> ในขณะที่ใน <code>\"ar-EG\"</code> <code>\"tt\"</code> จะเป็น <code>\"ص\" หรือ \"م\"</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>\"10:12:31am\"</code> เป็นค่าเวลา",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "แปลง <code>\"1012\"</code> เป็นค่า Time",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "แปลง <code>\"10\"</code> เป็นค่า Time",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "ส่งกลับส่วนประกอบของชั่วโมง",
        "Documentation.LongDescription": "ส่งกลับส่วนประกอบชั่วโมงของค่า <code>time</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่กำหนดให้ ได้แก่ <code>dateTime</code>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "หาชั่วโมงใน #datetime(2011, 12, 31, 9, 15, 36)",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "ส่งกลับส่วนประกอบของนาที",
        "Documentation.LongDescription": "ส่งกลับส่วนประกอบนาทีของค่า <code>time</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่กำหนดให้ ได้แก่ <code>dateTime</code>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "หานาทีใน #datetime(2011, 12, 31, 9, 15, 36)",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "ส่งกลับส่วนประกอบของวินาที",
        "Documentation.LongDescription": "ส่งกลับส่วนประกอบวินาทีของค่า <code>time</code>, <code>datetime</code> หรือ <code>datetimezone</code> ที่กำหนดให้ ได้แก่ <code>dateTime</code>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "หาค่าวินาทีจากค่า datetime",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "ส่งกลับจุดเริ่มต้นของชั่วโมง",
        "Documentation.LongDescription": "ส่งกลับจุดเริ่มต้นของชั่วโมงที่แสดงโดย <code>dateTime</code>\r\n    <code>dateTime</code> ต้องเป็นค่า<code>วันที่</code> <code>วันที่เวลา</code> หรือ<code>โซนวันที่เวลา</code>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจุดเริ่มต้นของชั่วโมงสําหรับวันที่ 10 ตุลาคม 2011 เวลา 8:10:32 น.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "ส่งกลับระเบียนที่มีส่วนของค่าเวลา",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มีส่วนประกอบของค่าเวลา <code>time</code> ที่กำหนด\r\n <ul>\r\n        <li><code>time</code>: ค่า<code>เวลา</code> สำหรับเริ่มคำนวณระเบียนของส่วนประกอบดังกล่าว</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "แปลงค่า <code>#time(11, 56, 2)</code> ให้เป็นระเบียนที่มีค่าเวลา",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "ส่งกลับข้อความสำหรับแสดงแทนของค่าเวลา",
        "Documentation.LongDescription": "ส่งกลับการแสดงข้อความของ <code>time</code> พารามิเตอร์ <code>record</code> เพิ่มเติม <code>options</code> อาจมีไว้เพื่อระบุคุณสมบัติเพิ่มเติม <code>culture</code> มีไว้สำหรับเวิร์กโฟลว์แบบดั้งเดิมเท่านั้น <code>record</code> สามารถมีเขตข้อมูลต่อไปนี้:\r\n<ul>\r\n   <li><code>Format</code>:ค่า <code>text</code> ที่ระบุรูปแบบที่ใช้ ไปที่ https://go.microsoft.com/fwlink/?linkid=2180104 และ https://go.microsoft.com/fwlink/?linkid=2180105 การละเขตข้อมูลนี้หรือระบุเป็น <code>null</code> จะส่งผลให้จัดรูปแบบวันที่ตามค่าเริ่มต้นที่กำหนดไว้โดย <code>Culture</code></li>\r\n   <li><code>Culture</code>: เมื่อ <code>Format</code> ไม่ใช่ null <code>Culture</code>จะควบคุมตัวระบุรูปแบบบางส่วน ตัวอย่างเช่น ใน <code>\"en-US\"</code> <code>\"tt\"</code> จะเป็น <code>\"AM\" หรือ \"PM\"</code> ในขณะที่ใน <code>\"ar-EG\"</code> <code>\"tt\"</code> จะเป็น <code>\"ص\" หรือ \"م\"</code> เมื่อ <code>Format</code> เป็น <code>null</code> <code>Culture</code> จะควบคุมรูปแบบเริ่มต้นที่จะใช้ เมื่อ <code>Culture</code> เป็น <code>null</code> หรือละไว้ จะใช้ <code>Culture.Current</code></li>\r\n</ul>\r\nเพื่อสนับสนุนเวิร์กโฟลว์แบบดั้งเดิม <code>options</code> และ <code>culture</code> อาจเป็นค่าข้อความ ซึ่งมีวิธีการทำงานเหมือนกับ <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "แปลง <code>#time(01, 30, 25)</code> เป็นค่า <code>text</code> <i>ผลลัพธ์อาจแตกต่างกันไปตามวัฒนธรรมปัจจุบัน</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "แปลงโดยใช้รูปแบบที่กำหนดเองและวัฒนธรรมเยอรมัน",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "แปลงโดยใช้รูปแบบเวลามาตรฐาน",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "ส่งกลับเวอร์ชันปิดของประเภทระเบียนที่ระบุ (หรือประเภทเดียวกัน ถ้าปิดแล้ว)",
        "Documentation.LongDescription": "ส่งกลับเวอร์ชันปิดของ <code>record</code> <code>type</code> ที่ระบุ (หรือประเภทเดียวกัน ถ้าปิดแล้ว)",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "สร้างเวอร์ชันปิดของ <code>type [ A = number,…]</code>.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "ส่งคืนข้อเท็จจริงของชนิด",
        "Documentation.LongDescription": "ส่งคืนระเบียนที่มีข้อเท็จจริงจาก <code>type</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "ส่งกลับระเบียนที่มีค่าเขตข้อมูลถูกตั้งค่าเป็นชื่อของพารามิเตอร์ของประเภทฟังก์ชัน และค่าของฟังก์ชันนั้นถูกตั้งค่าเป็นประเภทที่สอดคล้องกัน",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มีค่าเขตข้อมูลถูกตั้งค่าเป็นชื่อของพารามิเตอร์ <code>type</code> และค่าของเขตข้อมูลนั้นถูกตั้งค่าเป็นประเภทที่สอดคล้องกัน",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาประเภทของพารามิเตอร์สำหรับฟังก์ชัน <code>(x as number, y as text)</code>",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "ส่งกลับจำนวนที่ระบุจำนวนขั้นต่ำของพารามิเตอร์ที่ต้องใช้เพื่อเรียกประเภทฟังก์ชันนั้น",
        "Documentation.LongDescription": "ส่งกลับจำนวนที่ระบุจำนวนขั้นต่ำของพารามิเตอร์ที่ต้องใช้เพื่อเรียกอินพุต <code>type</code> ของฟังก์ชัน",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาจำนวนพารามิเตอร์ที่ต้องการสำหรับฟังก์ชัน <code>(x as number, optional y as text)</code>",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "ส่งกลับประเภทที่ส่งกลับโดยประเภทฟังก์ชัน",
        "Documentation.LongDescription": "ส่งกลับประเภทที่ส่งกลับโดยฟังก์ชัน <code>type</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาประเภทการส่งกลับของ <code>() as any)</code>",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "ส่งกลับค่าจริงถ้าประเภทนั้นเป็นประเภทที่สามารถเป็น NULL ได้ มิฉะนั้นจะส่งกลับค่าเท็จ",
        "Documentation.LongDescription": "ส่งกลับ <code>true</code> ถ้าประเภทเป็นประเภทที่ <code>nullable</code> มิฉะนั้นจะส่งกลับ <code>false</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ดูว่า <code>number</code> เป็น NULL ได้หรือไม่",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "ดูว่า <code>type nullable number</code> เป็น NULL ได้หรือไม่",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "ส่งกลับว่าประเภทระเบียนเปิดอยู่หรือไม่",
        "Documentation.LongDescription": "ส่งกลับ <code>logical</code>ที่ระบุว่า <code>type</code> เปิดอยู่หรือไม่",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "กำหนดว่าระเบียน <code>type [ A = number, ...]</code> เปิดอยู่หรือไม่",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "ส่งกลับประเภทรายการจากประเภทรายการ",
        "Documentation.LongDescription": "ส่งกลับประเภทรายการจากรายการ <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาประเภทรายการจากรายการ <code>{number}</code>",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "ส่งกลับประเภทที่ไม่สามารถเป็น NULL ได้จากประเภท",
        "Documentation.LongDescription": "ส่งกลับประเภทที่ไม่สามารถเป็น <code>nullable</code> ได้จาก <code>type</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับประเภทที่ไม่สามารถเป็น NULL ได้ของ <code>type nullable number</code>",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "ส่งกลับเวอร์ชันที่ถูกเปิดของประเภทระเบียนที่ระบุ (หรือประเภทเดียวกัน ถ้าเปิดอยู่แล้ว)",
        "Documentation.LongDescription": "ส่งกลับเวอร์ชันของ <code>record</code> <code>type</code> ที่ระบุซึ่งถูกเปิด (หรือประเภทเดียวกัน ถ้าเปิดอยู่แล้ว)",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "สร้างเวอร์ชันที่ถูกเปิดของ <code>type [ A = number]</code>",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "ส่งกลับระเบียนที่อธิบายเขตข้อมูลของประเภทระเบียนที่มีเขตข้อมูลแต่ละเขตเป็นประเภทระเบียนที่ถูกส่งกลับ ซึ่งมีชื่อและค่าที่สอดคล้องกัน",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่อธิบายเขตข้อมูลของระเบียน <code>type</code> แต่ละเขตข้อมูลของประเภทระเบียนที่ถูกส่งกลับมีชื่อและค่าที่สอดคล้องกัน ในรูปแบบของระเบียน <code>[ Type = type, Optional = logical ]</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาชื่อและค่าของระเบียน<code>[ A = number, optional B = any]</code>.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "ส่งกลับรายการคีย์ที่อาจว่างเปล่าสำหรับชนิดตารางที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับรายการคีย์ที่อาจว่างเปล่าสําหรับชนิดตารางที่ระบุ<br>\r\n    <br>\r\n    แต่ละคีย์จะถูกกําหนดโดยใช้ระเบียนในฟอร์มต่อไปนี้:\r\n    <ul>\r\n      <li>\r\n        <code>คอลัมน์</code>: รายการของชื่อคอลัมน์ที่กําหนดคีย์\r\n      </li>\r\n      <li>\r\n        <code>Primary</code>: <code>true</code> ถ้าคีย์เป็นคีย์หลักของตาราง มิฉะนั้น <code>false</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับข้อมูลคีย์สําหรับชนิดตาราง",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "ส่งกลับชนิดแถวของชนิดตาราง",
        "Documentation.LongDescription": "ส่งกลับชนิดแถวของชนิดตารางที่ระบุ ผลลัพธ์จะเป็นชนิดระเบียนเสมอ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับข้อมูลชนิดแถวสําหรับตารางอย่างง่าย",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "ส่งคืนรายการชนิดแบบร่วม",
        "Documentation.LongDescription": "ผลตอบแทนที่สหภาพของชนิดใน <code>types</code>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "รวมข้อมูลบันทึกเข้าไว้ในสตริงแบบสอบถาม URI",
        "Documentation.LongDescription": "รวมข้อมูลบันทึก <code>query</code> เข้าไว้ในสตริงแบบสอบถาม URI โดยจะต้องใช้ตัวอักขระพิเศษ",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "เข้ารหัสสตริงแบบสอบถามที่มีตัวอักขระพิเศษ",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "เข้ารหัสตัวอักขระพิเศษตามข้อกำหนด RFC 3986",
        "Documentation.LongDescription": "เข้ารหัสตัวอักขระพิเศษในอินพุท <code>data</code> ตามหลักเกณฑ์ของ RFC 3986",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "เข้ารหัสตัวอักขระพิเศษใน \"+money$\"",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "ส่งกลับส่วนประกอบของ URI แบบสัมบูรณ์ของค่าที่ป้อนเป็นระเบียน",
        "Documentation.LongDescription": "ส่งกลับส่วนประกอบของค่าที่ป้อน <code>absoluteUri</code> เป็นระเบียนที่ประกอบด้วยค่า เช่น แบบแผน, โฮสต์, พอร์ต, เส้นทาง, แบบสอบถาม, ส่วนย่อย, ชื่อผู้ใช้ และ รหัสผ่าน",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "ค้นหาส่วนประกอบของ URI แบบสัมบูรณ์ \"www.adventure-works.com\"",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "ถอดรหัสสตริงที่เข้ารหัสเปอร์เซ็นต์",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "ใส่ URL ของ Azure DevOps Analytics Service ของคุณ",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาที่ดาวน์โหลดจาก URL ของ Azure DevOps Analytics Service เป็นค่าไบนารี ฟังก์ชันนี้จะใช้ข้อมูลประจำตัวที่แตกต่างกันสำหรับองค์กรที่แตกต่างกัน"
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "ใส่ URL ของ Azure DevOps Analytics Service ของคุณ",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาที่ดาวน์โหลดจาก URL ของ Azure DevOps Analytics Service เป็นค่าไบนารี ฟังก์ชันนี้จะใช้ข้อมูลประจำตัวส่วนกลางสำหรับองค์กรที่เข้าถึงได้ทั้งหมด"
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "แสดงแผนคิวรีสำรอง",
        "Documentation.LongDescription": "แสดงแผนคิวรีสำรองภายในนิพจน์แผนคิวรีที่ได้รับผ่านค่านิพจน์ Value.Expression(Value.Optimize(...)) ไม่ได้มีไว้สำหรับการใช้งานอื่นๆ",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) ที่แสดงนิพจน์ของค่า",
        "Documentation.LongDescription": "ส่งกลับทรีไวยากรณ์เชิงนามธรรม (AST) ที่แสดงนิพจน์ของค่า",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "สร้างค่าที่กำหนดชนิดไว้ล่วงหน้าจากข้อความสำหรับแสดงแทน",
        "Documentation.LongDescription": "ถอดรหัสค่าจากข้อความสำหรับแสดงแทน <code>text</code> และแปลเป็นค่าซึ่งมีชนิดที่เหมาะสม\r\n    <code>Value.FromText</code> จะใช้ค่าข้อความและส่งกลับตัวเลข ค่าตรรกะ ค่า null ค่าวันที่และเวลา, ค่าระยะเวลา หรือค่าข้อความ ค่าข้อความที่ว่างเปล่าจะถูกแปลเป็นค่า null\r\n    อาจมีการระบุ <code>culture</code> เพิ่มเติม (ตัวอย่างเช่น \"en-US\")",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "ส่งกลับระเบียนที่มี Metadata ของค่าที่ป้อน",
        "Documentation.LongDescription": "ส่งกลับระเบียนที่มี Metadata ของค่าที่ป้อน",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "ส่งสัญญาณ Value.Expression เพื่อส่งกลับนิพจน์ที่ปรับให้เหมาะสมสำหรับค่า",
        "Documentation.LongDescription": "เมื่อใช้ใน Value.Expression ถ้า <code>value</code> เป็นคิวรีที่สามารถปรับให้เหมาะสมได้ ฟังก์ชันนี้จะระบุว่าควรส่งกลับนิพจน์ที่ได้รับการปรับให้เหมาะสม ไม่เช่นนั้น <code>value</code> จะถูกส่งไปโดยไม่มีผล",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "ตัดส่วนค่าที่ป้อนของ Metadata",
        "Documentation.LongDescription": "ตัดส่วนค่าที่ป้อนของ Metadata",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "ส่งกลับชนิดของค่าที่กำหนด",
        "Documentation.LongDescription": "ส่งกลับชนิดของค่าที่กำหนด",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับใช้ภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.LongDescription": "ฟังก์ชันนี้มีไว้สําหรับการใช้งานภายในเท่านั้น",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "ส่งกลับ HTML สําหรับ URL ที่ระบุ ตามที่แสดงโดยเว็บเบราว์เซอร์",
        "Documentation.LongDescription": "ส่งกลับ HTML สำหรับ <code>url</code> ที่ระบุ เมื่อดูโดยเว็บเบราว์เซอร์ อาจระบุพารามิเตอร์ระเบียนตัวเลือก <code>options</code> ไว้เพื่อระบุคุณสมบัติเพิ่มเติม ระเบียนสามารถประกอบด้วยเขตข้อมูลต่อไปนี้:\r\n     <ul>\r\n        <li><code>ApiKeyName</code>: หากไซต์เป้าหมายมีแนวคิดของคีย์ API พารามิเตอร์นี้สามารถใช้เพื่อระบุชื่อ (ไม่ใช่ค่า) ของพารามิเตอร์คีย์ที่ต้องใช้ใน URL ค่าคีย์จริงมีให้ในข้อมูลประจําตัว</li>\r\n        <li><code>WaitFor</code>: ระบุเงื่อนไขในการรอก่อนดาวน์โหลด HTML นอกจากการรอหน้าที่จะโหลด (ซึ่งเสร็จสิ้นเสมอ) สามารถเป็นระเบียนที่มีเขตข้อมูลการ Timeout และ/หรือ Selector ถ้ามีระบุ Timeout เท่านั้น ฟังก์ชันจะรอระยะเวลาที่ระบุก่อนดาวน์โหลด HTML ถ้ามีการระบุทั้ง Selector และ Timeout และ Timeout ผ่านไปก่อน Selector ที่อยู่ในหน้า ข้อผิดพลาดจะถูกโยนออก ถ้ามีการระบุ Selector ที่ไม่มี Timeout จะมีการใช้ค่าเริ่มต้น Timeout 30 วินาที</li>\r\n      </ul>\r\n    ",
        "Documentation.Category": "การเข้าถึงข้อมูล",
        "Documentation.Examples": [
          {
            "Description": "ส่งกลับ HTML สำหรับ https://microsoft.com",
            "Code": "Web.BrowserContents(\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "ส่งกลับ HTML สำหรับ https://microsoft.com หลังจากรอให้ตัวเลือก CSS มีอยู่",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "ส่งกลับ HTML l สำหรับ https://microsoft.com หลังจากรอสิบวินาที",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "ส่งกลับ HTML สำหรับ https://microsoft.com หลังจากรอสิบวินาทีให้ตัวเลือก CSS มีอยู่",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "ส่งกลับเนื้อหาที่ดาวน์โหลดจาก URL เป็นไบนารี",
        "Documentation.LongDescription": "ส่งกลับเนื้อหาที่ดาวน์โหลดจาก <code>url</code> เป็นไบนารี พารามิเตอร์ระเบียนเพิ่มเติม <code>options</code> อาจมีให้เพื่อระบุคุณสมบัติเพิ่มเติม ระเบียนสามารถมีเขตข้อมูลต่อไปนี้:\r\n    <ul>\r\n<li><code>Query</code> : เพิ่มพารามิเตอร์คิวรีด้วยโปรแกรมลงใน URL โดยไม่ต้องกังวลเกี่ยวกับอักขระหลีก</li>\r\n<li><code>ApiKeyName</code> : ถ้าไซต์เป้าหมายมีการระบุคีย์ API ไว้ จะสามารถใช้พารามิเตอร์นี้เพื่อระบุชื่อ (ไม่ใช่ค่า) ของพารามิเตอร์คีย์ที่จะต้องใช้ใน URL จะมีการแสดงค่าคีย์จริงไว้ในข้อมูลประจำตัว</li>\r\n<li><code>Headers</code> : การระบุค่านี้เป็นระเบียนจะใส่ส่วนหัวเพิ่มเติมให้กับคำขอ HTTP</li>\r\n<li><code>Timeout</code> : การระบุค่านี้เป็นระยะเวลาจะเปลี่ยนแปลงการหมดเวลาสำหรับคำขอ HTTP ค่าเริ่มต้นคือ 100 วินาที</li>\r\n<li><code>ExcludedFromCacheKey</code> : การระบุค่านี้เป็นรายการจะแยกคีย์ส่วนหัว HTTP เหล่านี้ออกจากการเป็นส่วนหนึ่งของการคำนวณสำหรับการแคชข้อมูล</li>\r\n<li><code>IsRetry</code> : การระบุค่าตรรกะนี้เป็นจริงจะละเว้นการตอบสนองที่มีอยู่ในแคชเมื่อดึงข้อมูล</li>\r\n<li><code>ManualStatusHandling</code> : การระบุค่านี้เป็นรายการจะป้องกันไม่ให้มีการจัดการในตัวสำหรับคำขอ HTTP ที่การตอบสนองมีหนึ่งในรหัสสถานะเหล่านี้</li>\r\n<li><code>RelativePath</code> : การระบุค่านี้เป็นข้อความจะผนวกเข้ากับ URL ฐานก่อนทำการร้องขอ</li>\r\n<li><code>Content</code> : การระบุค่านี้จะเปลี่ยนแปลงคำขอของเว็บจาก GET เป็น POST โดยใช้ค่าของตัวเลือกเป็นเนื้อหาของ POST</li>\r\n</ul>\r\n\r\n    มีการร้องขอทาง HTTP เป็น GET (เมื่อไม่มีการระบุเนื้อหา) หรือ POST (เมื่อมีเนื้อหา) คําขอ POST สามารถทำได้แบบไม่ระบุชื่อเท่านั้น\r\n    <br>\r\n    ส่วนหัวของการตอบสนอง HTTP จะพร้อมใช้งานเป็นเมตาดาต้าในผลลัพธ์ไบนารี ภายนอกบริบทตัวเชื่อมต่อข้อมูลแบบกําหนดเอง มีเพียงชุดย่อยของส่วนหัวการตอบสนองเท่านั้นที่พร้อมใช้งาน (สำหรับเหตุผลด้านความปลอดภัย)\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "เรียกใช้เนื้อหาของ <code>\"https://bing.com/search?q=Power+Query\"</code> โดยใช้ตัวเลือก RelativePath และ Query ตัวเลือกเหล่านี้สามารถใช้เพื่อคิวรี URL ฐานสแตติกแบบไดนามิกได้",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "ดําเนินการโพสต์กับ URL ผ่านส่วนข้อมูล JSON ไบนารีและแยกวิเคราะห์การตอบสนองเป็น JSON",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "เชื่อมต่อกับ URL ที่ปลอดภัยที่ยอมรับคีย์การรับรองความถูกต้องเป็นส่วนหนึ่งของสตริงคิวรี แทนที่การเขียนโค้ดคีย์ลับใน M (ซึ่งอาจทําให้เกิดความเสี่ยงด้านความปลอดภัย) \r\n    คีย์สามารถให้ไว้อย่างปลอดภัยโดยการระบุชื่อ (ไม่ใช่ค่า) ใน M เลือกการรับรองความถูกต้องของ API เว็บ และการใส่ค่าคีย์เป็นส่วนหนึ่งของข้อมูลประจําตัว API เว็บ\r\n    เมื่อใช้ด้วยวิธีนี้ ตัวอย่างต่อไปนี้จะสร้างคําขอไปยัง <code>\"https://contoso.com/api/customers/get?api_key=******\"</code>",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "ส่งกลับส่วนหัว HTTP ที่ดาวน์โหลดจาก URL เป็นค่าเรกคอร์ด",
        "Documentation.LongDescription": "ส่งกลับส่วนหัวที่ดาวน์โหลดจาก <code>url</code> เป็นระเบียน พารามิเตอร์ระเบียนเพิ่มเติม <code>options</code> อาจมีให้เพื่อระบุคุณสมบัติเพิ่มเติม ระเบียนสามารถมีเขตข้อมูลต่อไปนี้:\r\n    <ul>\r\n<li><code>Query</code> : เพิ่มพารามิเตอร์คิวรีด้วยโปรแกรมลงใน URL โดยไม่ต้องกังวลเกี่ยวกับอักขระหลีก</li>\r\n<li><code>ApiKeyName</code> : ถ้าไซต์เป้าหมายมีการระบุคีย์ API ไว้ จะสามารถใช้พารามิเตอร์นี้เพื่อระบุชื่อ (ไม่ใช่ค่า) ของพารามิเตอร์คีย์ที่จะต้องใช้ใน URL จะมีการแสดงค่าคีย์จริงไว้ในข้อมูลประจำตัว</li>\r\n<li><code>Headers</code> : การระบุค่านี้เป็นระเบียนจะใส่ส่วนหัวเพิ่มเติมให้กับคำขอ HTTP</li>\r\n<li><code>Timeout</code> : การระบุค่านี้เป็นระยะเวลาจะเปลี่ยนแปลงการหมดเวลาสำหรับคำขอ HTTP ค่าเริ่มต้นคือ 100 วินาที</li>\r\n<li><code>ExcludedFromCacheKey</code> : การระบุค่านี้เป็นรายการจะแยกคีย์ส่วนหัว HTTP เหล่านี้ออกจากการเป็นส่วนหนึ่งของการคำนวณสำหรับการแคชข้อมูล</li>\r\n<li><code>IsRetry</code> : การระบุค่าตรรกะนี้เป็นจริงจะละเว้นการตอบสนองที่มีอยู่ในแคชเมื่อดึงข้อมูล</li>\r\n<li><code>ManualStatusHandling</code> : การระบุค่านี้เป็นรายการจะป้องกันไม่ให้มีการจัดการในตัวสำหรับคำขอ HTTP ที่การตอบสนองมีหนึ่งในรหัสสถานะเหล่านี้</li>\r\n<li><code>RelativePath</code> : การระบุค่านี้เป็นข้อความจะผนวกเข้ากับ URL ฐานก่อนทำการร้องขอ</li>\r\n</ul>\r\n\r\n    มีการร้องขอทาง HTTP ด้วยเมธอด HEAD ภายนอกบริบทตัวเชื่อมต่อข้อมูลแบบกําหนดเอง มีเพียงชุดย่อยของส่วนหัวการตอบสนองเท่านั้นที่พร้อมใช้งาน (สำหรับเหตุผลด้านความปลอดภัย)\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "เรียกใช้ส่วนหัว HTTP สําหรับ <code>\"https://bing.com/search?q=Power+Query\"</code> ที่ใช้ตัวเลือก RelativePath และ Query",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "มีการประเมินบริบทการอนุญาตเทียบกับเงื่อนไขของบัญชีควบคุมการเข้าถึง (ACE)",
        "Documentation.LongDescription": "มีการประเมินบริบทการอนุญาตเทียบกับเงื่อนไขของบัญชีควบคุมการเข้าถึง (ACE)",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "ตารางบัญชีควบคุมการเข้าถึง (ACE)",
        "Documentation.LongDescription": "ตารางที่เรียงลำดับของบัญชีควบคุมการเข้าถึง (ACE) ที่แสดงถึงกฎการอนุญาต แต่ละแถวจะถูกประเมินเทียบกับบริบทการอนุญาตปัจจุบัน (ตามลำดับ) และแถวแรกที่นิพจน์<code>Condition</code>ส่งกลับ true จะกำหนดกฎที่นำไปใช้ คอลัมน์<code>Action</code>จะแสดงชนิดการดำเนินการที่นำกฎไปใช้ คอลัมน์<code>AccessControlKind</code>จะกำหนดว่าควรอนุญาตหรือปฏิเสธการเข้าถึงสำหรับการดำเนินการหรือไม่",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "ระบุชนิดของตัวควบคุมการเข้าถึง",
        "Documentation.LongDescription": "ระบุชนิดของตัวควบคุมการเข้าถึง",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าไบนารีทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าไบนารีทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "ระบุชนิดการเข้ารหัสไบนารี",
        "Documentation.LongDescription": "ระบุชนิดการเข้ารหัสไบนารี",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "ระบจำนวนครั้งที่คาดหวังว่ารายการนี้จะปรากฏในกลุ่ม",
        "Documentation.LongDescription": "ระบจำนวนครั้งที่คาดหวังว่ารายการนี้จะปรากฏในกลุ่ม",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "อธิบายชนิดของการกําหนดบัฟเฟอร์ที่จะดําเนินการ",
        "Documentation.LongDescription": "อธิบายชนิดของการกําหนดบัฟเฟอร์ที่จะดําเนินการ",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนไบต์ทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนไบต์ทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "ระบุลำดับไบต์",
        "Documentation.LongDescription": "ระบุลำดับไบต์",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนอักขระทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนอักขระทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "ระบุชนิดการบีบอัด",
        "Documentation.LongDescription": "ระบุชนิดการบีบอัด",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "ระบุคิวรีที่สำคัญในเอกสาร Csv",
        "Documentation.LongDescription": "ระบุคิวรีที่สำคัญในเอกสาร Csv",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "ชนิดที่แสดงค่าสกุลเงิน",
        "Documentation.LongDescription": "ชนิดที่แสดงค่าสกุลเงิน",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าวันที่ทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าวันที่ทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าวันที่และเวลาทั้งหมดโดยไม่มีโซนเวลาที่สัมพันธ์",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าวันที่และเวลาทั้งหมดโดยไม่มีโซนเวลาที่สัมพันธ์",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าวันที่และเวลาทั้งหมดที่เกี่ยวข้องกับโซนเวลา",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าวันที่และเวลาทั้งหมดที่เกี่ยวข้องกับโซนเวลา",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "ระบุวันในสัปดาห์",
        "Documentation.LongDescription": "ระบุวันในสัปดาห์",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "ชนิดที่แสดงตัวเลขตำแหน่งทศนิยมแบบตายตัว",
        "Documentation.LongDescription": "ชนิดที่แสดงตัวเลขตำแหน่งทศนิยมแบบตายตัว",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "ชนิดที่แสดงตัวเลขจุดลอยตัวความแม่นยำสองเท่า",
        "Documentation.LongDescription": "ชนิดที่แสดงตัวเลขจุดลอยตัวความแม่นยำสองเท่า",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าระยะเวลาทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าระยะเวลาทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "ระบุการดำเนินการที่คาดหวังไว้สำหรับค่าเพิ่มเติมในแถวซึ่งมีคอลัมน์มากกว่าที่คาดหวังไว้",
        "Documentation.LongDescription": "ระบุการดำเนินการที่คาดหวังไว้สำหรับค่าเพิ่มเติมในแถวซึ่งมีคอลัมน์มากกว่าที่คาดหวังไว้",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนฟังก์ชันทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนฟังก์ชันทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "ระบุชนิดการจัดกลุ่ม",
        "Documentation.LongDescription": "อาจมีการสร้างกลุ่มท้องถิ่นหลายกลุ่มด้วยค่าคีย์เดียวกัน แต่มีการสร้างกลุ่มส่วนกลางเดียวสำหรับค่าคีย์ที่กำหนดไว้เท่านั้น",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "ประเภทที่แสดงค่า Guid",
        "Documentation.LongDescription": "ประเภทที่แสดงค่า Guid",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "ข้อมูลประจำตัวแสดงผู้ใช้ กลุ่ม อุปกรณ์ หรือสิ่งที่สามารถระบุตัวบุคคลอื่นๆ",
        "Documentation.LongDescription": "ข้อมูลประจำตัวแสดงผู้ใช้ กลุ่ม อุปกรณ์ หรือสิ่งที่สามารถระบุตัวบุคคลอื่นๆ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "กำหนดขอบเขตที่ข้อมูลประจำตัวจะถูกสร้างและเปรียบเทียบ",
        "Documentation.LongDescription": "กำหนดขอบเขตที่ข้อมูลประจำตัวจะถูกสร้างและเปรียบเทียบ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "ชนิดที่แสดงจำนวนเต็ม 16 บิตที่มีเครื่องหมาย",
        "Documentation.LongDescription": "ชนิดที่แสดงจำนวนเต็ม 16 บิตที่มีเครื่องหมาย",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "ชนิดที่แสดงจำนวนเต็ม 32 บิตที่มีเครื่องหมาย",
        "Documentation.LongDescription": "ชนิดที่แสดงจำนวนเต็ม 32 บิตที่มีเครื่องหมาย",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "ชนิดที่แสดงจำนวนเต็ม 64 บิตที่มีเครื่องหมาย",
        "Documentation.LongDescription": "ชนิดที่แสดงจำนวนเต็ม 64 บิตที่มีเครื่องหมาย",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "ชนิดที่แสดงจำนวนเต็ม 8 บิตที่มีเครื่องหมาย",
        "Documentation.LongDescription": "ชนิดที่แสดงจำนวนเต็ม 8 บิตที่มีเครื่องหมาย",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "ระบุอัลกอริทึมการรวมที่ใช้งานในการดำเนินการรวม",
        "Documentation.LongDescription": "ระบุอัลกอริทึมการรวมที่ใช้งานในการดำเนินการรวม",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "ระบุชนิดการดำเนินการรวม",
        "Documentation.LongDescription": "ระบุชนิดการดำเนินการรวม",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "ระบุตารางด้านซ้ายหรือขวาของการรวม",
        "Documentation.LongDescription": "ระบุตารางด้านซ้ายหรือขวาของการรวม",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "อธิบายชนิดของส่วนคำสั่งขีดจำกัดที่ได้รับการสนับสนุนโดย Dialect ของ SQL ที่ใช้โดยแหล่งข้อมูลนี้",
        "Documentation.LongDescription": "อธิบายชนิดของส่วนคำสั่งขีดจำกัดที่ได้รับการสนับสนุนโดย Dialect ของ SQL ที่ใช้โดยแหล่งข้อมูลนี้",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนรายการทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนรายการทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าตรรกะทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าตรรกะทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "ระบุการดำเนินการที่คาดหวังไว้สำหรับค่าที่หายไปในแถวซึ่งมีคอลัมน์น้อยกว่าที่คาดหวังไว้",
        "Documentation.LongDescription": "ระบุการดำเนินการที่คาดหวังไว้สำหรับค่าที่หายไปในแถวซึ่งมีคอลัมน์น้อยกว่าที่คาดหวังไว้",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "ชนิดที่แสดงแทน null",
        "Documentation.LongDescription": "ชนิดที่แสดงแทน null",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนตัวเลขทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนตัวเลขทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "ระบุชนิดของค่าที่บริการ OData สามารถละเว้นได้",
        "Documentation.LongDescription": "ระบุชนิดของค่าที่บริการ OData สามารถละเว้นได้",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "ระบุการแสดงองค์ประกอบตามลำดับ",
        "Documentation.LongDescription": "ระบุการแสดงองค์ประกอบตามลำดับ",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "ระบุทิศทางการจัดเรียง",
        "Documentation.LongDescription": "ระบุทิศทางการจัดเรียง",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "ประเภทที่แสดงถึงรหัสผ่านข้อความ",
        "Documentation.LongDescription": "ประเภทที่แสดงถึงรหัสผ่านข้อความ",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "ประเภทที่แสดงค่าเปอร์เซ็นต์",
        "Documentation.LongDescription": "ประเภทที่แสดงค่าเปอร์เซ็นต์",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "ระบุชนิดโหมดเปอร์เซ็นต์ไทล์",
        "Documentation.LongDescription": "ระบุชนิดโหมดเปอร์เซ็นต์ไทล์",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "ระบุความแม่นยำของการเปรียบเทียบ",
        "Documentation.LongDescription": "ระบุความแม่นยำของการเปรียบเทียบ",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "ระบุรูปแบบปิดข้อความด้วยเครื่องหมายคำพูด",
        "Documentation.LongDescription": "ระบุรูปแบบปิดข้อความด้วยเครื่องหมายคำพูด",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "ระบุชนิดของการจัดอันดับ",
        "Documentation.LongDescription": "ระบุชนิดของการจัดอันดับ",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนระเบียนทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนระเบียนทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "ระบุว่าการทำดัชนีควรทำตั้งแต่จุดเริ่มต้นหรือจุดสิ้นสุดของการป้อนข้อมูล",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "ระบุทิศทางการปัดเศษ เมื่อมีจำนวนเท่ากับค่าที่จะปัดเศษ",
        "Documentation.LongDescription": "ระบุทิศทางการปัดเศษ เมื่อมีจำนวนเท่ากับค่าที่จะปัดเศษ",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "ตัวเลือกที่ถูกต้องสำหรับตัวเลือกโหมดการดำเนินการ SAP Business Warehouse",
        "Documentation.LongDescription": "ตัวเลือกที่ถูกต้องสำหรับตัวเลือกโหมดการดำเนินการ SAP Business Warehouse",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "ตัวเลือกที่ถูกต้องสำหรับตัวเลือกการแจกจ่าย SAP HANA",
        "Documentation.LongDescription": "ตัวเลือกที่ถูกต้องสำหรับตัวเลือกการแจกจ่าย SAP HANA",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "ตัวดำเนินการช่วงสำหรับพารามิเตอร์อินพุทช่วง SAP HANA",
        "Documentation.LongDescription": "ตัวดำเนินการช่วงสำหรับพารามิเตอร์อินพุทช่วง SAP HANA",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "ชนิดที่แสดงตัวเลขจุดลอยตัวความแม่นยำเดี่ยว",
        "Documentation.LongDescription": "ชนิดที่แสดงตัวเลขจุดลอยตัวความแม่นยำเดี่ยว",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "โปรโตคอลที่ใช้เมื่อเชื่อมต่อเข้ากับอินสแตนซ์ขง Spark",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนตารางทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนตารางทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าข้อความทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าข้อความทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "ระบุชนิดการเข้ารหัสข้อความ",
        "Documentation.LongDescription": "ระบุชนิดการเข้ารหัสข้อความ",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนค่าเวลาทั้งหมด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนค่าเวลาทั้งหมด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "กำหนดระดับการติดตาม",
        "Documentation.LongDescription": "กำหนดระดับการติดตาม",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "ชนิดที่แสดงแทนทุกชนิด",
        "Documentation.LongDescription": "ชนิดที่แสดงแทนทุกชนิด",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "ประเภทที่แสดง URI ข้อความ",
        "Documentation.LongDescription": "ประเภทที่แสดง URI ข้อความ",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "กำหนดวิธีการ HTTP",
        "Documentation.LongDescription": "กำหนดวิธีการ HTTP",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
